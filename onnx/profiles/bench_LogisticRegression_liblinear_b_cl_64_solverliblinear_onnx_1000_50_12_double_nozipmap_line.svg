<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:31) (1 samples, 0.33%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(217,123,26)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:11) (1 samples, 0.33%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(230,62,30)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:41) (1 samples, 0.33%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(225,115,6)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.33%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(217,140,41)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.33%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(238,133,43)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.33%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(234,178,11)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:243) (1 samples, 0.33%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(254,81,9)"/><text x="13.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.33%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(228,112,38)"/><text x="16.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.33%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(226,191,34)"/><text x="16.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.33%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(236,145,53)"/><text x="16.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (2 samples, 0.66%)</title><rect x="17" y="180" width="8" height="15" fill="rgb(230,107,24)"/><text x="20.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.66%)</title><rect x="17" y="196" width="8" height="15" fill="rgb(246,181,53)"/><text x="20.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.33%)</title><rect x="21" y="212" width="4" height="15" fill="rgb(246,45,19)"/><text x="24.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.33%)</title><rect x="25" y="196" width="4" height="15" fill="rgb(252,109,32)"/><text x="28.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.33%)</title><rect x="25" y="212" width="4" height="15" fill="rgb(213,36,44)"/><text x="28.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.33%)</title><rect x="25" y="228" width="4" height="15" fill="rgb(218,86,36)"/><text x="28.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.33%)</title><rect x="25" y="244" width="4" height="15" fill="rgb(223,184,16)"/><text x="28.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.33%)</title><rect x="25" y="260" width="4" height="15" fill="rgb(241,3,6)"/><text x="28.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.33%)</title><rect x="25" y="276" width="4" height="15" fill="rgb(217,145,24)"/><text x="28.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.33%)</title><rect x="25" y="292" width="4" height="15" fill="rgb(232,54,49)"/><text x="28.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.33%)</title><rect x="25" y="308" width="4" height="15" fill="rgb(236,118,16)"/><text x="28.00" y="318.50"></text></g><g><title>0x7f2e51c05d67 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="25" y="324" width="4" height="15" fill="rgb(236,223,3)"/><text x="28.00" y="334.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (4 samples, 1.32%)</title><rect x="17" y="164" width="16" height="15" fill="rgb(214,23,28)"/><text x="20.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (2 samples, 0.66%)</title><rect x="25" y="180" width="8" height="15" fill="rgb(208,72,27)"/><text x="28.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.33%)</title><rect x="29" y="196" width="4" height="15" fill="rgb(235,130,13)"/><text x="32.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.33%)</title><rect x="29" y="212" width="4" height="15" fill="rgb(251,203,28)"/><text x="32.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.33%)</title><rect x="29" y="228" width="4" height="15" fill="rgb(218,104,31)"/><text x="32.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.33%)</title><rect x="29" y="244" width="4" height="15" fill="rgb(215,49,26)"/><text x="32.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.33%)</title><rect x="29" y="260" width="4" height="15" fill="rgb(229,127,22)"/><text x="32.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="29" y="276" width="4" height="15" fill="rgb(209,105,6)"/><text x="32.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="29" y="292" width="4" height="15" fill="rgb(225,142,13)"/><text x="32.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="29" y="308" width="4" height="15" fill="rgb(244,112,44)"/><text x="32.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:18) (6 samples, 1.99%)</title><rect x="13" y="100" width="24" height="15" fill="rgb(242,127,7)"/><text x="16.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 1.99%)</title><rect x="13" y="116" width="24" height="15" fill="rgb(234,185,27)"/><text x="16.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (6 samples, 1.99%)</title><rect x="13" y="132" width="24" height="15" fill="rgb(254,9,37)"/><text x="16.00" y="142.50">&lt;..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (5 samples, 1.66%)</title><rect x="17" y="148" width="20" height="15" fill="rgb(252,88,46)"/><text x="20.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.33%)</title><rect x="33" y="164" width="4" height="15" fill="rgb(254,95,13)"/><text x="36.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.33%)</title><rect x="33" y="180" width="4" height="15" fill="rgb(231,70,46)"/><text x="36.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.33%)</title><rect x="33" y="196" width="4" height="15" fill="rgb(229,28,4)"/><text x="36.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.33%)</title><rect x="33" y="212" width="4" height="15" fill="rgb(215,197,41)"/><text x="36.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.33%)</title><rect x="33" y="228" width="4" height="15" fill="rgb(218,130,14)"/><text x="36.00" y="238.50"></text></g><g><title>0x7f2e33feb9dd (?) (1 samples, 0.33%)</title><rect x="33" y="244" width="4" height="15" fill="rgb(206,42,18)"/><text x="36.00" y="254.50"></text></g><g><title>0x7f2e3400c279 (?) (1 samples, 0.33%)</title><rect x="33" y="260" width="4" height="15" fill="rgb(206,18,31)"/><text x="36.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.33%)</title><rect x="49" y="164" width="3" height="15" fill="rgb(222,37,16)"/><text x="52.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (7 samples, 2.32%)</title><rect x="49" y="148" width="27" height="15" fill="rgb(213,121,9)"/><text x="52.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.99%)</title><rect x="52" y="164" width="24" height="15" fill="rgb(209,34,25)"/><text x="55.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.99%)</title><rect x="52" y="180" width="24" height="15" fill="rgb(215,105,17)"/><text x="55.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.32%)</title><rect x="60" y="196" width="16" height="15" fill="rgb(250,123,33)"/><text x="63.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.33%)</title><rect x="80" y="196" width="4" height="15" fill="rgb(218,137,19)"/><text x="83.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.33%)</title><rect x="92" y="228" width="3" height="15" fill="rgb(226,146,4)"/><text x="95.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (5 samples, 1.66%)</title><rect x="80" y="180" width="19" height="15" fill="rgb(236,43,47)"/><text x="83.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 1.32%)</title><rect x="84" y="196" width="15" height="15" fill="rgb(207,100,37)"/><text x="87.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.32%)</title><rect x="84" y="212" width="15" height="15" fill="rgb(252,64,14)"/><text x="87.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="95" y="228" width="4" height="15" fill="rgb(230,81,13)"/><text x="98.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:483) (1 samples, 0.33%)</title><rect x="99" y="212" width="4" height="15" fill="rgb(211,41,1)"/><text x="102.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.66%)</title><rect x="103" y="212" width="8" height="15" fill="rgb(236,115,27)"/><text x="106.00" y="222.50"></text></g><g><title>0x7f2e51c0612b (libc-2.29.so) (1 samples, 0.33%)</title><rect x="107" y="228" width="4" height="15" fill="rgb(221,91,42)"/><text x="110.00" y="238.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.33%)</title><rect x="111" y="212" width="4" height="15" fill="rgb(253,131,15)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 1.66%)</title><rect x="99" y="196" width="20" height="15" fill="rgb(244,135,27)"/><text x="102.00" y="206.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.33%)</title><rect x="115" y="212" width="4" height="15" fill="rgb(210,70,40)"/><text x="118.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:503) (1 samples, 0.33%)</title><rect x="119" y="196" width="4" height="15" fill="rgb(253,81,10)"/><text x="122.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.33%)</title><rect x="123" y="212" width="4" height="15" fill="rgb(230,167,3)"/><text x="126.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.66%)</title><rect x="127" y="228" width="8" height="15" fill="rgb(237,118,13)"/><text x="130.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.32%)</title><rect x="123" y="196" width="15" height="15" fill="rgb(228,213,30)"/><text x="126.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.99%)</title><rect x="127" y="212" width="11" height="15" fill="rgb(218,200,4)"/><text x="130.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.33%)</title><rect x="135" y="228" width="3" height="15" fill="rgb(241,37,22)"/><text x="138.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.66%)</title><rect x="138" y="196" width="8" height="15" fill="rgb(223,225,49)"/><text x="141.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.66%)</title><rect x="138" y="212" width="8" height="15" fill="rgb(254,174,1)"/><text x="141.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1618) (1 samples, 0.33%)</title><rect x="142" y="228" width="4" height="15" fill="rgb(229,136,46)"/><text x="145.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.33%)</title><rect x="146" y="196" width="4" height="15" fill="rgb(207,56,19)"/><text x="149.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 1.32%)</title><rect x="150" y="196" width="16" height="15" fill="rgb(210,64,9)"/><text x="153.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.32%)</title><rect x="150" y="212" width="16" height="15" fill="rgb(206,96,31)"/><text x="153.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.33%)</title><rect x="166" y="212" width="4" height="15" fill="rgb(212,124,21)"/><text x="169.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.33%)</title><rect x="170" y="212" width="4" height="15" fill="rgb(218,25,28)"/><text x="173.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.33%)</title><rect x="170" y="228" width="4" height="15" fill="rgb(232,70,42)"/><text x="173.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 1.66%)</title><rect x="166" y="196" width="19" height="15" fill="rgb(237,42,27)"/><text x="169.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.99%)</title><rect x="174" y="212" width="11" height="15" fill="rgb(254,210,54)"/><text x="177.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.66%)</title><rect x="178" y="228" width="7" height="15" fill="rgb(218,98,0)"/><text x="181.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.33%)</title><rect x="181" y="244" width="4" height="15" fill="rgb(219,165,21)"/><text x="184.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (24 samples, 7.95%)</title><rect x="99" y="180" width="94" height="15" fill="rgb(229,221,42)"/><text x="102.00" y="190.50">decision_fu..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (2 samples, 0.66%)</title><rect x="185" y="196" width="8" height="15" fill="rgb(244,2,43)"/><text x="188.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.33%)</title><rect x="193" y="180" width="4" height="15" fill="rgb(235,153,20)"/><text x="196.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.33%)</title><rect x="193" y="196" width="4" height="15" fill="rgb(254,160,51)"/><text x="196.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.33%)</title><rect x="193" y="212" width="4" height="15" fill="rgb(242,184,20)"/><text x="196.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:951) (1 samples, 0.33%)</title><rect x="193" y="228" width="4" height="15" fill="rgb(248,209,23)"/><text x="196.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.33%)</title><rect x="197" y="276" width="4" height="15" fill="rgb(217,64,8)"/><text x="200.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1476) (1 samples, 0.33%)</title><rect x="197" y="292" width="4" height="15" fill="rgb(237,160,17)"/><text x="200.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.66%)</title><rect x="197" y="260" width="8" height="15" fill="rgb(220,27,6)"/><text x="200.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:452) (1 samples, 0.33%)</title><rect x="201" y="276" width="4" height="15" fill="rgb(228,169,14)"/><text x="204.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.66%)</title><rect x="205" y="308" width="8" height="15" fill="rgb(227,180,14)"/><text x="208.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.33%)</title><rect x="213" y="308" width="4" height="15" fill="rgb(252,172,44)"/><text x="216.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.32%)</title><rect x="205" y="260" width="15" height="15" fill="rgb(215,86,54)"/><text x="208.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.32%)</title><rect x="205" y="276" width="15" height="15" fill="rgb(245,116,37)"/><text x="208.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 1.32%)</title><rect x="205" y="292" width="15" height="15" fill="rgb(230,159,49)"/><text x="208.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.33%)</title><rect x="217" y="308" width="3" height="15" fill="rgb(238,42,15)"/><text x="220.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.33%)</title><rect x="217" y="324" width="3" height="15" fill="rgb(246,187,46)"/><text x="220.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.33%)</title><rect x="220" y="308" width="4" height="15" fill="rgb(221,179,17)"/><text x="223.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.33%)</title><rect x="220" y="324" width="4" height="15" fill="rgb(242,91,12)"/><text x="223.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.66%)</title><rect x="220" y="276" width="8" height="15" fill="rgb(233,41,13)"/><text x="223.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.66%)</title><rect x="220" y="292" width="8" height="15" fill="rgb(217,26,0)"/><text x="223.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.33%)</title><rect x="224" y="308" width="4" height="15" fill="rgb(244,189,29)"/><text x="227.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.33%)</title><rect x="224" y="324" width="4" height="15" fill="rgb(223,106,41)"/><text x="227.00" y="334.50"></text></g><g><title>array_add (number.c:330) (9 samples, 2.98%)</title><rect x="197" y="196" width="35" height="15" fill="rgb(248,139,5)"/><text x="200.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.98%)</title><rect x="197" y="212" width="35" height="15" fill="rgb(236,146,40)"/><text x="200.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 2.98%)</title><rect x="197" y="228" width="35" height="15" fill="rgb(214,71,17)"/><text x="200.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 2.98%)</title><rect x="197" y="244" width="35" height="15" fill="rgb(245,193,44)"/><text x="200.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.99%)</title><rect x="220" y="260" width="12" height="15" fill="rgb(254,10,44)"/><text x="223.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.33%)</title><rect x="228" y="276" width="4" height="15" fill="rgb(224,206,37)"/><text x="231.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1841) (1 samples, 0.33%)</title><rect x="228" y="292" width="4" height="15" fill="rgb(207,94,26)"/><text x="231.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.33%)</title><rect x="232" y="228" width="4" height="15" fill="rgb(228,92,43)"/><text x="235.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.66%)</title><rect x="232" y="196" width="8" height="15" fill="rgb(208,13,0)"/><text x="235.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.66%)</title><rect x="232" y="212" width="8" height="15" fill="rgb(242,219,11)"/><text x="235.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.33%)</title><rect x="236" y="228" width="4" height="15" fill="rgb(228,208,24)"/><text x="239.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.66%)</title><rect x="244" y="212" width="8" height="15" fill="rgb(211,15,28)"/><text x="247.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 9.27%)</title><rect x="252" y="212" width="109" height="15" fill="rgb(216,220,53)"/><text x="255.00" y="222.50">dgemm_kernel_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.33%)</title><rect x="361" y="228" width="4" height="15" fill="rgb(241,159,32)"/><text x="364.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (1 samples, 0.33%)</title><rect x="365" y="244" width="4" height="15" fill="rgb(236,50,21)"/><text x="368.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.33%)</title><rect x="365" y="260" width="4" height="15" fill="rgb(212,161,0)"/><text x="368.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (1 samples, 0.33%)</title><rect x="369" y="244" width="4" height="15" fill="rgb(224,61,11)"/><text x="372.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.33%)</title><rect x="369" y="260" width="4" height="15" fill="rgb(250,87,21)"/><text x="372.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.33%)</title><rect x="373" y="244" width="4" height="15" fill="rgb(221,228,5)"/><text x="376.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.33%)</title><rect x="373" y="260" width="4" height="15" fill="rgb(213,21,49)"/><text x="376.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.33%)</title><rect x="373" y="276" width="4" height="15" fill="rgb(215,126,9)"/><text x="376.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (1 samples, 0.33%)</title><rect x="377" y="244" width="4" height="15" fill="rgb(247,50,45)"/><text x="380.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="377" y="260" width="4" height="15" fill="rgb(253,112,10)"/><text x="380.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.33%)</title><rect x="381" y="244" width="4" height="15" fill="rgb(221,123,11)"/><text x="384.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:156) (1 samples, 0.33%)</title><rect x="381" y="260" width="4" height="15" fill="rgb(251,20,26)"/><text x="384.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1762) (1 samples, 0.33%)</title><rect x="381" y="276" width="4" height="15" fill="rgb(233,176,12)"/><text x="384.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.33%)</title><rect x="385" y="260" width="4" height="15" fill="rgb(205,41,53)"/><text x="388.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2986) (2 samples, 0.66%)</title><rect x="385" y="244" width="7" height="15" fill="rgb(207,126,18)"/><text x="388.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.33%)</title><rect x="389" y="260" width="3" height="15" fill="rgb(236,33,14)"/><text x="392.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.33%)</title><rect x="389" y="276" width="3" height="15" fill="rgb(208,89,29)"/><text x="392.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.33%)</title><rect x="389" y="292" width="3" height="15" fill="rgb(242,32,20)"/><text x="392.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (26 samples, 8.61%)</title><rect x="361" y="212" width="102" height="15" fill="rgb(220,104,53)"/><text x="364.00" y="222.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (25 samples, 8.28%)</title><rect x="365" y="228" width="98" height="15" fill="rgb(240,172,27)"/><text x="368.00" y="238.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (18 samples, 5.96%)</title><rect x="392" y="244" width="71" height="15" fill="rgb(242,174,0)"/><text x="395.00" y="254.50">PyUFunc_..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (18 samples, 5.96%)</title><rect x="392" y="260" width="71" height="15" fill="rgb(227,207,20)"/><text x="395.00" y="270.50">DOUBLE_m..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.96%)</title><rect x="392" y="276" width="71" height="15" fill="rgb(253,101,34)"/><text x="395.00" y="286.50">cblas_dg..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.96%)</title><rect x="392" y="292" width="71" height="15" fill="rgb(218,214,38)"/><text x="395.00" y="302.50">dgemm_nn..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 5.96%)</title><rect x="392" y="308" width="71" height="15" fill="rgb(212,63,54)"/><text x="395.00" y="318.50">dgemm_on..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (99 samples, 32.78%)</title><rect x="80" y="164" width="387" height="15" fill="rgb(213,227,43)"/><text x="83.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:307)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (69 samples, 22.85%)</title><rect x="197" y="180" width="270" height="15" fill="rgb(249,114,7)"/><text x="200.00" y="190.50">decision_function (sklearn/linear_mo..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (58 samples, 19.21%)</title><rect x="240" y="196" width="227" height="15" fill="rgb(219,26,18)"/><text x="243.00" y="206.50">safe_sparse_dot (sklearn/utils..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.33%)</title><rect x="463" y="212" width="4" height="15" fill="rgb(227,47,5)"/><text x="466.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.33%)</title><rect x="463" y="228" width="4" height="15" fill="rgb(224,162,8)"/><text x="466.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.33%)</title><rect x="467" y="180" width="4" height="15" fill="rgb(244,45,48)"/><text x="470.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.33%)</title><rect x="467" y="196" width="4" height="15" fill="rgb(212,206,4)"/><text x="470.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.33%)</title><rect x="467" y="212" width="4" height="15" fill="rgb(225,85,52)"/><text x="470.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.33%)</title><rect x="467" y="228" width="4" height="15" fill="rgb(206,87,23)"/><text x="470.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.33%)</title><rect x="471" y="196" width="3" height="15" fill="rgb(213,52,36)"/><text x="474.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.33%)</title><rect x="474" y="212" width="4" height="15" fill="rgb(206,146,31)"/><text x="477.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.33%)</title><rect x="474" y="228" width="4" height="15" fill="rgb(209,186,53)"/><text x="477.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:811) (1 samples, 0.33%)</title><rect x="474" y="244" width="4" height="15" fill="rgb(227,99,35)"/><text x="477.00" y="254.50"></text></g><g><title>strides_to_terms (mem_overlap.c:735) (1 samples, 0.33%)</title><rect x="474" y="260" width="4" height="15" fill="rgb(243,163,39)"/><text x="477.00" y="270.50"></text></g><g><title>0x7f2e3400c254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.99%)</title><rect x="478" y="260" width="12" height="15" fill="rgb(246,156,13)"/><text x="481.00" y="270.50"></text></g><g><title>0x7f2e33fc9fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.66%)</title><rect x="494" y="276" width="8" height="15" fill="rgb(226,15,43)"/><text x="497.00" y="286.50"></text></g><g><title>0x7f2e51d311b0 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="525" y="292" width="4" height="15" fill="rgb(249,115,53)"/><text x="528.00" y="302.50"></text></g><g><title>0x7f2e51db7ba5 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(228,108,37)"/><text x="532.00" y="302.50"></text></g><g><title>0x7f2e51db7bf9 (libm-2.29.so) (2 samples, 0.66%)</title><rect x="533" y="292" width="8" height="15" fill="rgb(234,154,3)"/><text x="536.00" y="302.50"></text></g><g><title>0x7f2e51db7c07 (libm-2.29.so) (2 samples, 0.66%)</title><rect x="541" y="292" width="8" height="15" fill="rgb(237,220,2)"/><text x="544.00" y="302.50"></text></g><g><title>0x7f2e3400c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 5.30%)</title><rect x="490" y="260" width="63" height="15" fill="rgb(229,169,10)"/><text x="493.00" y="270.50">0x7f2e..</text></g><g><title>exp (libm-2.29.so) (13 samples, 4.30%)</title><rect x="502" y="276" width="51" height="15" fill="rgb(220,95,49)"/><text x="505.00" y="286.50">exp (..</text></g><g><title>0x7f2e51db7c18 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="549" y="292" width="4" height="15" fill="rgb(223,192,26)"/><text x="552.00" y="302.50"></text></g><g><title>0x7f2e33feb9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 7.62%)</title><rect x="478" y="244" width="90" height="15" fill="rgb(231,176,27)"/><text x="481.00" y="254.50">0x7f2e33fe..</text></g><g><title>0x7f2e3400c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.32%)</title><rect x="553" y="260" width="15" height="15" fill="rgb(215,140,4)"/><text x="556.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (27 samples, 8.94%)</title><rect x="467" y="164" width="105" height="15" fill="rgb(213,156,52)"/><text x="470.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (26 samples, 8.61%)</title><rect x="471" y="180" width="101" height="15" fill="rgb(211,84,51)"/><text x="474.00" y="190.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 8.28%)</title><rect x="474" y="196" width="98" height="15" fill="rgb(228,153,10)"/><text x="477.00" y="206.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (24 samples, 7.95%)</title><rect x="478" y="212" width="94" height="15" fill="rgb(207,104,51)"/><text x="481.00" y="222.50">execute_leg..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (24 samples, 7.95%)</title><rect x="478" y="228" width="94" height="15" fill="rgb(219,14,36)"/><text x="481.00" y="238.50">trivial_two..</text></g><g><title>0x7f2e33feb9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="568" y="244" width="4" height="15" fill="rgb(217,4,7)"/><text x="571.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.33%)</title><rect x="576" y="180" width="4" height="15" fill="rgb(235,128,37)"/><text x="579.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.33%)</title><rect x="576" y="196" width="4" height="15" fill="rgb(225,45,23)"/><text x="579.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.33%)</title><rect x="576" y="212" width="4" height="15" fill="rgb(217,142,26)"/><text x="579.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.33%)</title><rect x="576" y="228" width="4" height="15" fill="rgb(254,154,10)"/><text x="579.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.33%)</title><rect x="576" y="244" width="4" height="15" fill="rgb(239,76,49)"/><text x="579.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.33%)</title><rect x="576" y="260" width="4" height="15" fill="rgb(237,34,2)"/><text x="579.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="576" y="276" width="4" height="15" fill="rgb(215,146,33)"/><text x="579.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.66%)</title><rect x="580" y="228" width="8" height="15" fill="rgb(223,146,18)"/><text x="583.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.66%)</title><rect x="580" y="244" width="8" height="15" fill="rgb(227,204,23)"/><text x="583.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.66%)</title><rect x="580" y="260" width="8" height="15" fill="rgb(253,82,27)"/><text x="583.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.66%)</title><rect x="580" y="276" width="8" height="15" fill="rgb(243,156,6)"/><text x="583.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.66%)</title><rect x="580" y="292" width="8" height="15" fill="rgb(211,137,32)"/><text x="583.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.66%)</title><rect x="580" y="308" width="8" height="15" fill="rgb(229,134,54)"/><text x="583.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.33%)</title><rect x="588" y="244" width="4" height="15" fill="rgb(251,201,27)"/><text x="591.00" y="254.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.33%)</title><rect x="588" y="260" width="4" height="15" fill="rgb(211,87,4)"/><text x="591.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1402) (1 samples, 0.33%)</title><rect x="588" y="276" width="4" height="15" fill="rgb(249,74,36)"/><text x="591.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.33%)</title><rect x="592" y="260" width="4" height="15" fill="rgb(226,182,21)"/><text x="595.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.33%)</title><rect x="592" y="276" width="4" height="15" fill="rgb(217,164,11)"/><text x="595.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.33%)</title><rect x="592" y="292" width="4" height="15" fill="rgb(234,223,28)"/><text x="595.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2064) (1 samples, 0.33%)</title><rect x="592" y="308" width="4" height="15" fill="rgb(208,41,23)"/><text x="595.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.33%)</title><rect x="596" y="276" width="4" height="15" fill="rgb(211,35,48)"/><text x="599.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.33%)</title><rect x="596" y="292" width="4" height="15" fill="rgb(226,79,52)"/><text x="599.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.33%)</title><rect x="596" y="308" width="4" height="15" fill="rgb(254,3,1)"/><text x="599.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.33%)</title><rect x="596" y="324" width="4" height="15" fill="rgb(244,160,29)"/><text x="599.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.33%)</title><rect x="596" y="340" width="4" height="15" fill="rgb(237,59,20)"/><text x="599.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.33%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(228,135,9)"/><text x="599.00" y="366.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.33%)</title><rect x="596" y="372" width="4" height="15" fill="rgb(206,145,42)"/><text x="599.00" y="382.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.33%)</title><rect x="596" y="388" width="4" height="15" fill="rgb(249,20,25)"/><text x="599.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.33%)</title><rect x="600" y="276" width="3" height="15" fill="rgb(249,215,24)"/><text x="603.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.33%)</title><rect x="600" y="292" width="3" height="15" fill="rgb(220,70,5)"/><text x="603.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2063) (1 samples, 0.33%)</title><rect x="600" y="308" width="3" height="15" fill="rgb(244,78,31)"/><text x="603.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.99%)</title><rect x="603" y="308" width="12" height="15" fill="rgb(251,137,9)"/><text x="606.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.66%)</title><rect x="607" y="324" width="8" height="15" fill="rgb(252,220,12)"/><text x="610.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.33%)</title><rect x="615" y="308" width="4" height="15" fill="rgb(244,7,38)"/><text x="618.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.33%)</title><rect x="619" y="308" width="4" height="15" fill="rgb(224,5,28)"/><text x="622.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.97%)</title><rect x="580" y="180" width="47" height="15" fill="rgb(241,194,20)"/><text x="583.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 3.97%)</title><rect x="580" y="196" width="47" height="15" fill="rgb(230,58,7)"/><text x="583.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 3.97%)</title><rect x="580" y="212" width="47" height="15" fill="rgb(213,70,34)"/><text x="583.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 3.31%)</title><rect x="588" y="228" width="39" height="15" fill="rgb(215,146,33)"/><text x="591.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 2.98%)</title><rect x="592" y="244" width="35" height="15" fill="rgb(223,0,35)"/><text x="595.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 2.65%)</title><rect x="596" y="260" width="31" height="15" fill="rgb(240,156,33)"/><text x="599.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 1.99%)</title><rect x="603" y="276" width="24" height="15" fill="rgb(228,53,20)"/><text x="606.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.99%)</title><rect x="603" y="292" width="24" height="15" fill="rgb(245,31,44)"/><text x="606.00" y="302.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.33%)</title><rect x="623" y="308" width="4" height="15" fill="rgb(220,84,17)"/><text x="626.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.33%)</title><rect x="623" y="324" width="4" height="15" fill="rgb(208,123,32)"/><text x="626.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.33%)</title><rect x="627" y="196" width="4" height="15" fill="rgb(240,228,4)"/><text x="630.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.33%)</title><rect x="627" y="212" width="4" height="15" fill="rgb(234,61,48)"/><text x="630.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.33%)</title><rect x="631" y="228" width="4" height="15" fill="rgb(235,140,25)"/><text x="634.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.33%)</title><rect x="631" y="244" width="4" height="15" fill="rgb(212,1,18)"/><text x="634.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2787) (1 samples, 0.33%)</title><rect x="631" y="260" width="4" height="15" fill="rgb(250,12,6)"/><text x="634.00" y="270.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.33%)</title><rect x="635" y="292" width="4" height="15" fill="rgb(238,2,46)"/><text x="638.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.66%)</title><rect x="635" y="228" width="7" height="15" fill="rgb(233,126,17)"/><text x="638.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.66%)</title><rect x="635" y="244" width="7" height="15" fill="rgb(241,8,37)"/><text x="638.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.66%)</title><rect x="635" y="260" width="7" height="15" fill="rgb(235,208,2)"/><text x="638.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.66%)</title><rect x="635" y="276" width="7" height="15" fill="rgb(232,48,48)"/><text x="638.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.33%)</title><rect x="639" y="292" width="3" height="15" fill="rgb(219,40,21)"/><text x="642.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.33%)</title><rect x="642" y="228" width="4" height="15" fill="rgb(242,17,20)"/><text x="645.00" y="238.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.33%)</title><rect x="642" y="244" width="4" height="15" fill="rgb(250,65,45)"/><text x="645.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:38) (164 samples, 54.30%)</title><rect x="13" y="52" width="641" height="15" fill="rgb(217,37,26)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_dou..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:37) (164 samples, 54.30%)</title><rect x="13" y="68" width="641" height="15" fill="rgb(218,25,41)"/><text x="16.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:29) (164 samples, 54.30%)</title><rect x="13" y="84" width="641" height="15" fill="rgb(223,44,50)"/><text x="16.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_1..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:23) (158 samples, 52.32%)</title><rect x="37" y="100" width="617" height="15" fill="rgb(230,120,50)"/><text x="40.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_d..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (158 samples, 52.32%)</title><rect x="37" y="116" width="617" height="15" fill="rgb(240,164,46)"/><text x="40.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (156 samples, 51.66%)</title><rect x="45" y="132" width="609" height="15" fill="rgb(223,82,53)"/><text x="48.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (148 samples, 49.01%)</title><rect x="76" y="148" width="578" height="15" fill="rgb(225,5,7)"/><text x="79.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 6.95%)</title><rect x="572" y="164" width="82" height="15" fill="rgb(206,197,43)"/><text x="575.00" y="174.50">_predict_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.32%)</title><rect x="627" y="180" width="27" height="15" fill="rgb(212,153,15)"/><text x="630.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.99%)</title><rect x="631" y="196" width="23" height="15" fill="rgb(216,73,44)"/><text x="634.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.99%)</title><rect x="631" y="212" width="23" height="15" fill="rgb(232,161,39)"/><text x="634.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.66%)</title><rect x="646" y="228" width="8" height="15" fill="rgb(229,104,15)"/><text x="649.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.66%)</title><rect x="646" y="244" width="8" height="15" fill="rgb(241,199,21)"/><text x="649.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.66%)</title><rect x="646" y="260" width="8" height="15" fill="rgb(220,126,41)"/><text x="649.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.66%)</title><rect x="646" y="276" width="8" height="15" fill="rgb(214,57,5)"/><text x="649.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.66%)</title><rect x="646" y="292" width="8" height="15" fill="rgb(235,99,38)"/><text x="649.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:1) (1 samples, 0.33%)</title><rect x="654" y="148" width="4" height="15" fill="rgb(222,189,49)"/><text x="657.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="654" y="164" width="4" height="15" fill="rgb(247,155,41)"/><text x="657.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="654" y="180" width="4" height="15" fill="rgb(232,30,10)"/><text x="657.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="654" y="196" width="4" height="15" fill="rgb(241,63,32)"/><text x="657.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="654" y="212" width="4" height="15" fill="rgb(205,155,9)"/><text x="657.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="654" y="228" width="4" height="15" fill="rgb(216,112,47)"/><text x="657.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.33%)</title><rect x="654" y="244" width="4" height="15" fill="rgb(213,213,36)"/><text x="657.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="654" y="260" width="4" height="15" fill="rgb(229,211,36)"/><text x="657.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="654" y="276" width="4" height="15" fill="rgb(219,169,21)"/><text x="657.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="654" y="292" width="4" height="15" fill="rgb(223,162,18)"/><text x="657.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="654" y="308" width="4" height="15" fill="rgb(218,99,42)"/><text x="657.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="654" y="324" width="4" height="15" fill="rgb(214,199,27)"/><text x="657.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:12) (1 samples, 0.33%)</title><rect x="654" y="340" width="4" height="15" fill="rgb(208,105,22)"/><text x="657.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="654" y="356" width="4" height="15" fill="rgb(232,34,16)"/><text x="657.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="654" y="372" width="4" height="15" fill="rgb(236,190,41)"/><text x="657.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="654" y="388" width="4" height="15" fill="rgb(252,76,26)"/><text x="657.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="654" y="404" width="4" height="15" fill="rgb(238,43,16)"/><text x="657.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="654" y="420" width="4" height="15" fill="rgb(233,156,31)"/><text x="657.00" y="430.50"></text></g><g><title>&lt;module&gt; (numpy/testing/_private/utils.py:47) (1 samples, 0.33%)</title><rect x="654" y="436" width="4" height="15" fill="rgb(245,114,36)"/><text x="657.00" y="446.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2194) (1 samples, 0.33%)</title><rect x="658" y="916" width="4" height="15" fill="rgb(254,47,34)"/><text x="661.00" y="926.50"></text></g><g><title>get_importer (pkgutil.py:415) (1 samples, 0.33%)</title><rect x="658" y="932" width="4" height="15" fill="rgb(254,183,35)"/><text x="661.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.33%)</title><rect x="662" y="1044" width="4" height="15" fill="rgb(228,200,14)"/><text x="665.00" y="1054.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.99%)</title><rect x="658" y="884" width="12" height="15" fill="rgb(254,115,2)"/><text x="661.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.99%)</title><rect x="658" y="900" width="12" height="15" fill="rgb(244,163,28)"/><text x="661.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.66%)</title><rect x="662" y="916" width="8" height="15" fill="rgb(217,168,52)"/><text x="665.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.66%)</title><rect x="662" y="932" width="8" height="15" fill="rgb(217,55,17)"/><text x="665.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.66%)</title><rect x="662" y="948" width="8" height="15" fill="rgb(246,63,52)"/><text x="665.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.66%)</title><rect x="662" y="964" width="8" height="15" fill="rgb(243,6,45)"/><text x="665.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.66%)</title><rect x="662" y="980" width="8" height="15" fill="rgb(238,187,27)"/><text x="665.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.66%)</title><rect x="662" y="996" width="8" height="15" fill="rgb(206,24,24)"/><text x="665.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.66%)</title><rect x="662" y="1012" width="8" height="15" fill="rgb(243,119,20)"/><text x="665.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.66%)</title><rect x="662" y="1028" width="8" height="15" fill="rgb(223,21,36)"/><text x="665.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.33%)</title><rect x="666" y="1044" width="4" height="15" fill="rgb(222,206,9)"/><text x="669.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.32%)</title><rect x="658" y="580" width="16" height="15" fill="rgb(248,169,13)"/><text x="661.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="658" y="596" width="16" height="15" fill="rgb(245,22,30)"/><text x="661.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.32%)</title><rect x="658" y="612" width="16" height="15" fill="rgb(229,61,9)"/><text x="661.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="658" y="628" width="16" height="15" fill="rgb(214,86,24)"/><text x="661.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="658" y="644" width="16" height="15" fill="rgb(245,5,23)"/><text x="661.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="658" y="660" width="16" height="15" fill="rgb(234,151,20)"/><text x="661.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="658" y="676" width="16" height="15" fill="rgb(253,32,45)"/><text x="661.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="658" y="692" width="16" height="15" fill="rgb(254,158,26)"/><text x="661.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="658" y="708" width="16" height="15" fill="rgb(242,1,41)"/><text x="661.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.32%)</title><rect x="658" y="724" width="16" height="15" fill="rgb(248,127,48)"/><text x="661.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="658" y="740" width="16" height="15" fill="rgb(224,117,6)"/><text x="661.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="658" y="756" width="16" height="15" fill="rgb(215,58,26)"/><text x="661.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="658" y="772" width="16" height="15" fill="rgb(234,19,17)"/><text x="661.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="658" y="788" width="16" height="15" fill="rgb(206,60,12)"/><text x="661.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="658" y="804" width="16" height="15" fill="rgb(214,150,24)"/><text x="661.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.32%)</title><rect x="658" y="820" width="16" height="15" fill="rgb(239,34,18)"/><text x="661.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.32%)</title><rect x="658" y="836" width="16" height="15" fill="rgb(212,172,23)"/><text x="661.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 1.32%)</title><rect x="658" y="852" width="16" height="15" fill="rgb(251,166,10)"/><text x="661.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 1.32%)</title><rect x="658" y="868" width="16" height="15" fill="rgb(236,56,17)"/><text x="661.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.33%)</title><rect x="670" y="884" width="4" height="15" fill="rgb(248,8,27)"/><text x="673.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.33%)</title><rect x="670" y="900" width="4" height="15" fill="rgb(252,91,29)"/><text x="673.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.33%)</title><rect x="670" y="916" width="4" height="15" fill="rgb(247,135,43)"/><text x="673.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.33%)</title><rect x="670" y="932" width="4" height="15" fill="rgb(241,187,53)"/><text x="673.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (5 samples, 1.66%)</title><rect x="658" y="148" width="20" height="15" fill="rgb(241,13,20)"/><text x="661.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="658" y="164" width="20" height="15" fill="rgb(247,3,35)"/><text x="661.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.66%)</title><rect x="658" y="180" width="20" height="15" fill="rgb(242,75,48)"/><text x="661.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="658" y="196" width="20" height="15" fill="rgb(236,201,23)"/><text x="661.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="658" y="212" width="20" height="15" fill="rgb(246,202,13)"/><text x="661.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.66%)</title><rect x="658" y="228" width="20" height="15" fill="rgb(243,58,14)"/><text x="661.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.66%)</title><rect x="658" y="244" width="20" height="15" fill="rgb(228,50,43)"/><text x="661.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.66%)</title><rect x="658" y="260" width="20" height="15" fill="rgb(218,126,26)"/><text x="661.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="658" y="276" width="20" height="15" fill="rgb(247,203,19)"/><text x="661.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.66%)</title><rect x="658" y="292" width="20" height="15" fill="rgb(228,184,16)"/><text x="661.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="658" y="308" width="20" height="15" fill="rgb(223,203,51)"/><text x="661.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.66%)</title><rect x="658" y="324" width="20" height="15" fill="rgb(238,180,51)"/><text x="661.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.66%)</title><rect x="658" y="340" width="20" height="15" fill="rgb(233,110,8)"/><text x="661.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.66%)</title><rect x="658" y="356" width="20" height="15" fill="rgb(246,130,6)"/><text x="661.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="658" y="372" width="20" height="15" fill="rgb(217,156,37)"/><text x="661.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.66%)</title><rect x="658" y="388" width="20" height="15" fill="rgb(209,144,36)"/><text x="661.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="658" y="404" width="20" height="15" fill="rgb(239,190,22)"/><text x="661.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.66%)</title><rect x="658" y="420" width="20" height="15" fill="rgb(231,124,25)"/><text x="661.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.66%)</title><rect x="658" y="436" width="20" height="15" fill="rgb(208,58,11)"/><text x="661.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.66%)</title><rect x="658" y="452" width="20" height="15" fill="rgb(246,148,5)"/><text x="661.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="658" y="468" width="20" height="15" fill="rgb(250,136,29)"/><text x="661.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.66%)</title><rect x="658" y="484" width="20" height="15" fill="rgb(210,152,30)"/><text x="661.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="658" y="500" width="20" height="15" fill="rgb(224,65,52)"/><text x="661.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.66%)</title><rect x="658" y="516" width="20" height="15" fill="rgb(220,113,43)"/><text x="661.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.66%)</title><rect x="658" y="532" width="20" height="15" fill="rgb(224,20,39)"/><text x="661.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.66%)</title><rect x="658" y="548" width="20" height="15" fill="rgb(245,108,50)"/><text x="661.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="658" y="564" width="20" height="15" fill="rgb(228,20,30)"/><text x="661.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:7) (1 samples, 0.33%)</title><rect x="674" y="580" width="4" height="15" fill="rgb(240,126,33)"/><text x="677.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="674" y="596" width="4" height="15" fill="rgb(244,31,33)"/><text x="677.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="674" y="612" width="4" height="15" fill="rgb(243,21,54)"/><text x="677.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="674" y="628" width="4" height="15" fill="rgb(218,121,27)"/><text x="677.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="674" y="644" width="4" height="15" fill="rgb(212,219,43)"/><text x="677.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="674" y="660" width="4" height="15" fill="rgb(218,200,54)"/><text x="677.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="674" y="676" width="4" height="15" fill="rgb(220,97,43)"/><text x="677.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="674" y="692" width="4" height="15" fill="rgb(244,82,36)"/><text x="677.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py:40) (1 samples, 0.33%)</title><rect x="674" y="708" width="4" height="15" fill="rgb(245,163,30)"/><text x="677.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="674" y="724" width="4" height="15" fill="rgb(206,47,15)"/><text x="677.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="674" y="740" width="4" height="15" fill="rgb(236,19,46)"/><text x="677.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="674" y="756" width="4" height="15" fill="rgb(235,146,53)"/><text x="677.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="674" y="772" width="4" height="15" fill="rgb(227,176,53)"/><text x="677.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="674" y="788" width="4" height="15" fill="rgb(227,202,37)"/><text x="677.00" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="674" y="804" width="4" height="15" fill="rgb(215,106,46)"/><text x="677.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="674" y="820" width="4" height="15" fill="rgb(250,188,47)"/><text x="677.00" y="830.50"></text></g><g><title>&lt;module&gt; (protobuf/internal/api_implementation.py:126) (1 samples, 0.33%)</title><rect x="674" y="836" width="4" height="15" fill="rgb(245,159,5)"/><text x="677.00" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="674" y="852" width="4" height="15" fill="rgb(240,157,43)"/><text x="677.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="674" y="868" width="4" height="15" fill="rgb(228,9,41)"/><text x="677.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="674" y="884" width="4" height="15" fill="rgb(228,164,47)"/><text x="677.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.33%)</title><rect x="674" y="900" width="4" height="15" fill="rgb(235,162,27)"/><text x="677.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:900) (1 samples, 0.33%)</title><rect x="674" y="916" width="4" height="15" fill="rgb(219,170,37)"/><text x="677.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.33%)</title><rect x="678" y="484" width="4" height="15" fill="rgb(245,168,16)"/><text x="681.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="678" y="500" width="4" height="15" fill="rgb(209,170,41)"/><text x="681.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="678" y="516" width="4" height="15" fill="rgb(205,19,2)"/><text x="681.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="678" y="532" width="4" height="15" fill="rgb(217,164,9)"/><text x="681.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="678" y="548" width="4" height="15" fill="rgb(213,1,27)"/><text x="681.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="678" y="564" width="4" height="15" fill="rgb(217,136,39)"/><text x="681.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.33%)</title><rect x="678" y="580" width="4" height="15" fill="rgb(208,129,28)"/><text x="681.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="678" y="596" width="4" height="15" fill="rgb(206,20,35)"/><text x="681.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="678" y="612" width="4" height="15" fill="rgb(219,142,2)"/><text x="681.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="678" y="628" width="4" height="15" fill="rgb(218,141,7)"/><text x="681.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="678" y="644" width="4" height="15" fill="rgb(244,66,53)"/><text x="681.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="678" y="660" width="4" height="15" fill="rgb(217,36,39)"/><text x="681.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.33%)</title><rect x="678" y="676" width="4" height="15" fill="rgb(252,50,29)"/><text x="681.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="678" y="692" width="4" height="15" fill="rgb(244,56,30)"/><text x="681.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="678" y="708" width="4" height="15" fill="rgb(219,74,47)"/><text x="681.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="678" y="724" width="4" height="15" fill="rgb(236,66,53)"/><text x="681.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.33%)</title><rect x="678" y="740" width="4" height="15" fill="rgb(221,141,50)"/><text x="681.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="678" y="756" width="4" height="15" fill="rgb(216,120,28)"/><text x="681.00" y="766.50"></text></g><g><title>0x7f2e3e42c403 (?) (1 samples, 0.33%)</title><rect x="678" y="772" width="4" height="15" fill="rgb(212,198,8)"/><text x="681.00" y="782.50"></text></g><g><title>0x7f2e3e42eb8a (?) (1 samples, 0.33%)</title><rect x="678" y="788" width="4" height="15" fill="rgb(234,148,24)"/><text x="681.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="678" y="804" width="4" height="15" fill="rgb(223,211,44)"/><text x="681.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="678" y="820" width="4" height="15" fill="rgb(207,50,15)"/><text x="681.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="678" y="836" width="4" height="15" fill="rgb(224,9,41)"/><text x="681.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.33%)</title><rect x="678" y="852" width="4" height="15" fill="rgb(235,55,21)"/><text x="681.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="678" y="868" width="4" height="15" fill="rgb(221,185,41)"/><text x="681.00" y="878.50"></text></g><g><title>0x7f2e3ca75d78 (?) (1 samples, 0.33%)</title><rect x="678" y="884" width="4" height="15" fill="rgb(218,68,2)"/><text x="681.00" y="894.50"></text></g><g><title>0x7f2e3ca7ac2a (?) (1 samples, 0.33%)</title><rect x="678" y="900" width="4" height="15" fill="rgb(232,198,38)"/><text x="681.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="678" y="916" width="4" height="15" fill="rgb(229,144,53)"/><text x="681.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="678" y="932" width="4" height="15" fill="rgb(217,100,22)"/><text x="681.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="678" y="948" width="4" height="15" fill="rgb(244,167,25)"/><text x="681.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="678" y="964" width="4" height="15" fill="rgb(229,84,13)"/><text x="681.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="678" y="980" width="4" height="15" fill="rgb(214,38,37)"/><text x="681.00" y="990.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py:2) (1 samples, 0.33%)</title><rect x="678" y="996" width="4" height="15" fill="rgb(231,87,43)"/><text x="681.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="678" y="1012" width="4" height="15" fill="rgb(216,158,8)"/><text x="681.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="678" y="1028" width="4" height="15" fill="rgb(245,129,36)"/><text x="681.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="678" y="1044" width="4" height="15" fill="rgb(221,33,18)"/><text x="681.00" y="1054.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:327) (1 samples, 0.33%)</title><rect x="678" y="1060" width="4" height="15" fill="rgb(248,65,14)"/><text x="681.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.66%)</title><rect x="678" y="292" width="7" height="15" fill="rgb(216,210,10)"/><text x="681.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="678" y="308" width="7" height="15" fill="rgb(217,136,47)"/><text x="681.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="678" y="324" width="7" height="15" fill="rgb(211,45,35)"/><text x="681.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="678" y="340" width="7" height="15" fill="rgb(209,41,26)"/><text x="681.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="678" y="356" width="7" height="15" fill="rgb(245,72,51)"/><text x="681.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="678" y="372" width="7" height="15" fill="rgb(217,163,31)"/><text x="681.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.66%)</title><rect x="678" y="388" width="7" height="15" fill="rgb(224,79,9)"/><text x="681.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="678" y="404" width="7" height="15" fill="rgb(227,142,34)"/><text x="681.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="678" y="420" width="7" height="15" fill="rgb(234,202,28)"/><text x="681.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="678" y="436" width="7" height="15" fill="rgb(207,158,45)"/><text x="681.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="678" y="452" width="7" height="15" fill="rgb(253,55,40)"/><text x="681.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="678" y="468" width="7" height="15" fill="rgb(214,178,17)"/><text x="681.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.33%)</title><rect x="682" y="484" width="3" height="15" fill="rgb(221,123,8)"/><text x="685.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="682" y="500" width="3" height="15" fill="rgb(244,223,36)"/><text x="685.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="682" y="516" width="3" height="15" fill="rgb(219,225,49)"/><text x="685.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="682" y="532" width="3" height="15" fill="rgb(229,109,29)"/><text x="685.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="682" y="548" width="3" height="15" fill="rgb(224,60,53)"/><text x="685.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="682" y="564" width="3" height="15" fill="rgb(244,177,3)"/><text x="685.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.33%)</title><rect x="682" y="580" width="3" height="15" fill="rgb(205,121,39)"/><text x="685.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="682" y="596" width="3" height="15" fill="rgb(219,176,40)"/><text x="685.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.33%)</title><rect x="682" y="612" width="3" height="15" fill="rgb(249,46,35)"/><text x="685.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="682" y="628" width="3" height="15" fill="rgb(242,26,25)"/><text x="685.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="682" y="644" width="3" height="15" fill="rgb(232,30,31)"/><text x="685.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="682" y="660" width="3" height="15" fill="rgb(216,202,27)"/><text x="685.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="682" y="676" width="3" height="15" fill="rgb(214,67,11)"/><text x="685.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="682" y="692" width="3" height="15" fill="rgb(253,102,0)"/><text x="685.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="682" y="708" width="3" height="15" fill="rgb(221,169,22)"/><text x="685.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:9) (1 samples, 0.33%)</title><rect x="682" y="724" width="3" height="15" fill="rgb(219,147,49)"/><text x="685.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="682" y="740" width="3" height="15" fill="rgb(215,48,15)"/><text x="685.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="682" y="756" width="3" height="15" fill="rgb(242,209,23)"/><text x="685.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="682" y="772" width="3" height="15" fill="rgb(232,104,49)"/><text x="685.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="682" y="788" width="3" height="15" fill="rgb(239,179,52)"/><text x="685.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="682" y="804" width="3" height="15" fill="rgb(247,175,23)"/><text x="685.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.33%)</title><rect x="682" y="820" width="3" height="15" fill="rgb(212,14,23)"/><text x="685.00" y="830.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.33%)</title><rect x="685" y="1476" width="4" height="15" fill="rgb(244,184,7)"/><text x="688.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="685" y="1492" width="4" height="15" fill="rgb(226,103,20)"/><text x="688.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="685" y="1508" width="4" height="15" fill="rgb(254,165,32)"/><text x="688.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="685" y="1524" width="4" height="15" fill="rgb(236,55,41)"/><text x="688.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="685" y="1540" width="4" height="15" fill="rgb(253,208,24)"/><text x="688.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="685" y="1556" width="4" height="15" fill="rgb(248,113,49)"/><text x="688.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.33%)</title><rect x="685" y="1572" width="4" height="15" fill="rgb(214,165,8)"/><text x="688.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="685" y="1588" width="4" height="15" fill="rgb(235,135,23)"/><text x="688.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="685" y="1604" width="4" height="15" fill="rgb(254,98,13)"/><text x="688.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="685" y="1620" width="4" height="15" fill="rgb(241,182,40)"/><text x="688.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="685" y="1636" width="4" height="15" fill="rgb(208,77,45)"/><text x="688.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="685" y="1652" width="4" height="15" fill="rgb(233,146,23)"/><text x="688.00" y="1662.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:87) (1 samples, 0.33%)</title><rect x="685" y="1668" width="4" height="15" fill="rgb(215,30,30)"/><text x="688.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="685" y="1684" width="4" height="15" fill="rgb(248,198,31)"/><text x="688.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="685" y="1700" width="4" height="15" fill="rgb(213,107,28)"/><text x="688.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="685" y="1716" width="4" height="15" fill="rgb(205,135,0)"/><text x="688.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="685" y="1732" width="4" height="15" fill="rgb(215,228,44)"/><text x="688.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="685" y="1748" width="4" height="15" fill="rgb(213,198,30)"/><text x="688.00" y="1758.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/process.py:154) (1 samples, 0.33%)</title><rect x="685" y="1764" width="4" height="15" fill="rgb(214,85,14)"/><text x="688.00" y="1774.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.66%)</title><rect x="685" y="820" width="8" height="15" fill="rgb(229,26,41)"/><text x="688.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.66%)</title><rect x="685" y="836" width="8" height="15" fill="rgb(250,60,5)"/><text x="688.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="852" width="8" height="15" fill="rgb(208,215,41)"/><text x="688.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="868" width="8" height="15" fill="rgb(216,155,25)"/><text x="688.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="685" y="884" width="8" height="15" fill="rgb(221,172,16)"/><text x="688.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="685" y="900" width="8" height="15" fill="rgb(208,107,12)"/><text x="688.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="685" y="916" width="8" height="15" fill="rgb(224,208,40)"/><text x="688.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="932" width="8" height="15" fill="rgb(231,72,24)"/><text x="688.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.66%)</title><rect x="685" y="948" width="8" height="15" fill="rgb(232,106,23)"/><text x="688.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="964" width="8" height="15" fill="rgb(229,108,42)"/><text x="688.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="685" y="980" width="8" height="15" fill="rgb(232,228,14)"/><text x="688.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="685" y="996" width="8" height="15" fill="rgb(221,10,4)"/><text x="688.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="685" y="1012" width="8" height="15" fill="rgb(240,122,23)"/><text x="688.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="1028" width="8" height="15" fill="rgb(211,152,40)"/><text x="688.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.66%)</title><rect x="685" y="1044" width="8" height="15" fill="rgb(245,86,49)"/><text x="688.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="1060" width="8" height="15" fill="rgb(225,18,25)"/><text x="688.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="685" y="1076" width="8" height="15" fill="rgb(225,109,23)"/><text x="688.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="685" y="1092" width="8" height="15" fill="rgb(208,168,35)"/><text x="688.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="685" y="1108" width="8" height="15" fill="rgb(212,223,9)"/><text x="688.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="1124" width="8" height="15" fill="rgb(247,75,46)"/><text x="688.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.66%)</title><rect x="685" y="1140" width="8" height="15" fill="rgb(223,192,45)"/><text x="688.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="1156" width="8" height="15" fill="rgb(252,177,34)"/><text x="688.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="685" y="1172" width="8" height="15" fill="rgb(227,123,10)"/><text x="688.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="685" y="1188" width="8" height="15" fill="rgb(206,128,34)"/><text x="688.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="685" y="1204" width="8" height="15" fill="rgb(214,30,6)"/><text x="688.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="1220" width="8" height="15" fill="rgb(253,120,25)"/><text x="688.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.66%)</title><rect x="685" y="1236" width="8" height="15" fill="rgb(242,105,26)"/><text x="688.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="1252" width="8" height="15" fill="rgb(220,41,48)"/><text x="688.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="685" y="1268" width="8" height="15" fill="rgb(251,194,3)"/><text x="688.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="685" y="1284" width="8" height="15" fill="rgb(240,206,0)"/><text x="688.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="685" y="1300" width="8" height="15" fill="rgb(208,75,16)"/><text x="688.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="1316" width="8" height="15" fill="rgb(215,173,13)"/><text x="688.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.66%)</title><rect x="685" y="1332" width="8" height="15" fill="rgb(246,166,53)"/><text x="688.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="1348" width="8" height="15" fill="rgb(239,183,54)"/><text x="688.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.66%)</title><rect x="685" y="1364" width="8" height="15" fill="rgb(245,63,24)"/><text x="688.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="1380" width="8" height="15" fill="rgb(221,64,23)"/><text x="688.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="685" y="1396" width="8" height="15" fill="rgb(227,179,43)"/><text x="688.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="685" y="1412" width="8" height="15" fill="rgb(212,110,40)"/><text x="688.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="685" y="1428" width="8" height="15" fill="rgb(223,28,29)"/><text x="688.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="685" y="1444" width="8" height="15" fill="rgb(222,37,13)"/><text x="688.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="685" y="1460" width="8" height="15" fill="rgb(227,159,25)"/><text x="688.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (1 samples, 0.33%)</title><rect x="689" y="1476" width="4" height="15" fill="rgb(242,197,54)"/><text x="692.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="689" y="1492" width="4" height="15" fill="rgb(227,14,34)"/><text x="692.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="689" y="1508" width="4" height="15" fill="rgb(247,40,32)"/><text x="692.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="689" y="1524" width="4" height="15" fill="rgb(211,148,20)"/><text x="692.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="689" y="1540" width="4" height="15" fill="rgb(221,207,45)"/><text x="692.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="689" y="1556" width="4" height="15" fill="rgb(228,79,36)"/><text x="692.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.33%)</title><rect x="689" y="1572" width="4" height="15" fill="rgb(213,78,47)"/><text x="692.00" y="1582.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.33%)</title><rect x="693" y="1108" width="4" height="15" fill="rgb(212,58,9)"/><text x="696.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1124" width="4" height="15" fill="rgb(238,148,39)"/><text x="696.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="693" y="1140" width="4" height="15" fill="rgb(233,138,4)"/><text x="696.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="693" y="1156" width="4" height="15" fill="rgb(223,193,27)"/><text x="696.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="693" y="1172" width="4" height="15" fill="rgb(253,201,18)"/><text x="696.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1188" width="4" height="15" fill="rgb(242,187,1)"/><text x="696.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (1 samples, 0.33%)</title><rect x="693" y="1204" width="4" height="15" fill="rgb(226,223,1)"/><text x="696.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1220" width="4" height="15" fill="rgb(239,200,16)"/><text x="696.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="693" y="1236" width="4" height="15" fill="rgb(245,45,45)"/><text x="696.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="693" y="1252" width="4" height="15" fill="rgb(209,24,32)"/><text x="696.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="693" y="1268" width="4" height="15" fill="rgb(240,109,33)"/><text x="696.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1284" width="4" height="15" fill="rgb(222,188,19)"/><text x="696.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (1 samples, 0.33%)</title><rect x="693" y="1300" width="4" height="15" fill="rgb(232,21,25)"/><text x="696.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="693" y="1316" width="4" height="15" fill="rgb(226,217,22)"/><text x="696.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1332" width="4" height="15" fill="rgb(216,105,36)"/><text x="696.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1348" width="4" height="15" fill="rgb(239,76,33)"/><text x="696.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="693" y="1364" width="4" height="15" fill="rgb(211,31,14)"/><text x="696.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="693" y="1380" width="4" height="15" fill="rgb(239,108,12)"/><text x="696.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="693" y="1396" width="4" height="15" fill="rgb(252,219,49)"/><text x="696.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1412" width="4" height="15" fill="rgb(220,15,6)"/><text x="696.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (1 samples, 0.33%)</title><rect x="693" y="1428" width="4" height="15" fill="rgb(244,26,12)"/><text x="696.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="693" y="1444" width="4" height="15" fill="rgb(246,129,11)"/><text x="696.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1460" width="4" height="15" fill="rgb(211,223,49)"/><text x="696.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1476" width="4" height="15" fill="rgb(243,172,38)"/><text x="696.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="693" y="1492" width="4" height="15" fill="rgb(253,175,27)"/><text x="696.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="693" y="1508" width="4" height="15" fill="rgb(247,144,34)"/><text x="696.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="693" y="1524" width="4" height="15" fill="rgb(230,140,46)"/><text x="696.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1540" width="4" height="15" fill="rgb(230,71,10)"/><text x="696.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:195) (1 samples, 0.33%)</title><rect x="693" y="1556" width="4" height="15" fill="rgb(212,12,46)"/><text x="696.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1572" width="4" height="15" fill="rgb(212,101,46)"/><text x="696.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="693" y="1588" width="4" height="15" fill="rgb(247,184,34)"/><text x="696.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="693" y="1604" width="4" height="15" fill="rgb(244,219,14)"/><text x="696.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="693" y="1620" width="4" height="15" fill="rgb(208,181,37)"/><text x="696.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1636" width="4" height="15" fill="rgb(227,199,31)"/><text x="696.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/misc.py:6) (1 samples, 0.33%)</title><rect x="693" y="1652" width="4" height="15" fill="rgb(214,54,21)"/><text x="696.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1668" width="4" height="15" fill="rgb(236,82,49)"/><text x="696.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="693" y="1684" width="4" height="15" fill="rgb(206,133,4)"/><text x="696.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="693" y="1700" width="4" height="15" fill="rgb(225,120,31)"/><text x="696.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="693" y="1716" width="4" height="15" fill="rgb(237,64,19)"/><text x="696.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1732" width="4" height="15" fill="rgb(224,160,43)"/><text x="696.00" y="1742.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/lapack.py:618) (1 samples, 0.33%)</title><rect x="693" y="1748" width="4" height="15" fill="rgb(219,178,27)"/><text x="696.00" y="1758.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="693" y="1764" width="4" height="15" fill="rgb(231,95,21)"/><text x="696.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="693" y="1780" width="4" height="15" fill="rgb(247,137,8)"/><text x="696.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="693" y="1796" width="4" height="15" fill="rgb(225,169,46)"/><text x="696.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.33%)</title><rect x="693" y="1812" width="4" height="15" fill="rgb(239,38,36)"/><text x="696.00" y="1822.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:896) (1 samples, 0.33%)</title><rect x="693" y="1828" width="4" height="15" fill="rgb(225,147,1)"/><text x="696.00" y="1838.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.33%)</title><rect x="697" y="1236" width="4" height="15" fill="rgb(253,69,5)"/><text x="700.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="697" y="1252" width="4" height="15" fill="rgb(213,117,45)"/><text x="700.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="697" y="1268" width="4" height="15" fill="rgb(244,157,44)"/><text x="700.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="697" y="1284" width="4" height="15" fill="rgb(216,3,28)"/><text x="700.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="697" y="1300" width="4" height="15" fill="rgb(221,7,4)"/><text x="700.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="697" y="1316" width="4" height="15" fill="rgb(221,139,5)"/><text x="700.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.33%)</title><rect x="697" y="1332" width="4" height="15" fill="rgb(207,104,25)"/><text x="700.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="697" y="1348" width="4" height="15" fill="rgb(231,180,41)"/><text x="700.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="697" y="1364" width="4" height="15" fill="rgb(254,194,53)"/><text x="700.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="697" y="1380" width="4" height="15" fill="rgb(239,93,29)"/><text x="700.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="697" y="1396" width="4" height="15" fill="rgb(218,190,4)"/><text x="700.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="697" y="1412" width="4" height="15" fill="rgb(206,8,4)"/><text x="700.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="697" y="1428" width="4" height="15" fill="rgb(246,121,14)"/><text x="700.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="697" y="1444" width="4" height="15" fill="rgb(249,15,49)"/><text x="700.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:94) (1 samples, 0.33%)</title><rect x="697" y="1460" width="4" height="15" fill="rgb(207,228,5)"/><text x="700.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="697" y="1476" width="4" height="15" fill="rgb(235,79,6)"/><text x="700.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="697" y="1492" width="4" height="15" fill="rgb(235,60,46)"/><text x="700.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="697" y="1508" width="4" height="15" fill="rgb(240,61,20)"/><text x="700.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="697" y="1524" width="4" height="15" fill="rgb(243,87,46)"/><text x="700.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="697" y="1540" width="4" height="15" fill="rgb(222,31,45)"/><text x="700.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/__init__.py:4) (1 samples, 0.33%)</title><rect x="697" y="1556" width="4" height="15" fill="rgb(239,176,27)"/><text x="700.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="697" y="1572" width="4" height="15" fill="rgb(240,120,35)"/><text x="700.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="697" y="1588" width="4" height="15" fill="rgb(211,193,4)"/><text x="700.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="697" y="1604" width="4" height="15" fill="rgb(224,111,16)"/><text x="700.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="697" y="1620" width="4" height="15" fill="rgb(221,97,41)"/><text x="700.00" y="1630.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="697" y="1636" width="4" height="15" fill="rgb(209,70,7)"/><text x="700.00" y="1646.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.33%)</title><rect x="697" y="1652" width="4" height="15" fill="rgb(216,106,41)"/><text x="700.00" y="1662.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.33%)</title><rect x="701" y="1380" width="4" height="15" fill="rgb(211,29,52)"/><text x="704.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.33%)</title><rect x="701" y="1396" width="4" height="15" fill="rgb(240,131,21)"/><text x="704.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (4 samples, 1.32%)</title><rect x="693" y="1012" width="16" height="15" fill="rgb(238,16,20)"/><text x="696.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.32%)</title><rect x="693" y="1028" width="16" height="15" fill="rgb(249,89,10)"/><text x="696.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.32%)</title><rect x="693" y="1044" width="16" height="15" fill="rgb(242,194,5)"/><text x="696.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.32%)</title><rect x="693" y="1060" width="16" height="15" fill="rgb(212,197,53)"/><text x="696.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.32%)</title><rect x="693" y="1076" width="16" height="15" fill="rgb(229,62,22)"/><text x="696.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.32%)</title><rect x="693" y="1092" width="16" height="15" fill="rgb(209,206,42)"/><text x="696.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 0.99%)</title><rect x="697" y="1108" width="12" height="15" fill="rgb(220,69,47)"/><text x="700.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.99%)</title><rect x="697" y="1124" width="12" height="15" fill="rgb(231,149,40)"/><text x="700.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.99%)</title><rect x="697" y="1140" width="12" height="15" fill="rgb(220,180,13)"/><text x="700.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.99%)</title><rect x="697" y="1156" width="12" height="15" fill="rgb(236,78,42)"/><text x="700.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.99%)</title><rect x="697" y="1172" width="12" height="15" fill="rgb(225,124,7)"/><text x="700.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.99%)</title><rect x="697" y="1188" width="12" height="15" fill="rgb(225,36,41)"/><text x="700.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.99%)</title><rect x="697" y="1204" width="12" height="15" fill="rgb(245,131,23)"/><text x="700.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.99%)</title><rect x="697" y="1220" width="12" height="15" fill="rgb(234,99,24)"/><text x="700.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.66%)</title><rect x="701" y="1236" width="8" height="15" fill="rgb(253,156,23)"/><text x="704.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.66%)</title><rect x="701" y="1252" width="8" height="15" fill="rgb(219,69,1)"/><text x="704.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="701" y="1268" width="8" height="15" fill="rgb(228,10,24)"/><text x="704.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="701" y="1284" width="8" height="15" fill="rgb(250,146,8)"/><text x="704.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="701" y="1300" width="8" height="15" fill="rgb(235,182,40)"/><text x="704.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="701" y="1316" width="8" height="15" fill="rgb(254,140,1)"/><text x="704.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="701" y="1332" width="8" height="15" fill="rgb(226,165,15)"/><text x="704.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="701" y="1348" width="8" height="15" fill="rgb(250,215,3)"/><text x="704.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6743) (2 samples, 0.66%)</title><rect x="701" y="1364" width="8" height="15" fill="rgb(207,27,36)"/><text x="704.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.33%)</title><rect x="705" y="1380" width="4" height="15" fill="rgb(224,140,51)"/><text x="708.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.33%)</title><rect x="705" y="1396" width="4" height="15" fill="rgb(232,221,35)"/><text x="708.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.33%)</title><rect x="705" y="1412" width="4" height="15" fill="rgb(215,54,15)"/><text x="708.00" y="1422.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.33%)</title><rect x="705" y="1428" width="4" height="15" fill="rgb(205,205,21)"/><text x="708.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (7 samples, 2.32%)</title><rect x="685" y="532" width="28" height="15" fill="rgb(248,36,33)"/><text x="688.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.32%)</title><rect x="685" y="548" width="28" height="15" fill="rgb(235,118,9)"/><text x="688.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.32%)</title><rect x="685" y="564" width="28" height="15" fill="rgb(236,203,39)"/><text x="688.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.32%)</title><rect x="685" y="580" width="28" height="15" fill="rgb(230,5,27)"/><text x="688.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.32%)</title><rect x="685" y="596" width="28" height="15" fill="rgb(225,66,12)"/><text x="688.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.32%)</title><rect x="685" y="612" width="28" height="15" fill="rgb(205,221,33)"/><text x="688.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (7 samples, 2.32%)</title><rect x="685" y="628" width="28" height="15" fill="rgb(221,3,40)"/><text x="688.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.32%)</title><rect x="685" y="644" width="28" height="15" fill="rgb(223,79,30)"/><text x="688.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.32%)</title><rect x="685" y="660" width="28" height="15" fill="rgb(221,94,44)"/><text x="688.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.32%)</title><rect x="685" y="676" width="28" height="15" fill="rgb(228,59,28)"/><text x="688.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.32%)</title><rect x="685" y="692" width="28" height="15" fill="rgb(254,176,30)"/><text x="688.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.32%)</title><rect x="685" y="708" width="28" height="15" fill="rgb(243,155,24)"/><text x="688.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (7 samples, 2.32%)</title><rect x="685" y="724" width="28" height="15" fill="rgb(212,33,50)"/><text x="688.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.32%)</title><rect x="685" y="740" width="28" height="15" fill="rgb(228,37,23)"/><text x="688.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.32%)</title><rect x="685" y="756" width="28" height="15" fill="rgb(225,176,11)"/><text x="688.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.32%)</title><rect x="685" y="772" width="28" height="15" fill="rgb(209,101,52)"/><text x="688.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.32%)</title><rect x="685" y="788" width="28" height="15" fill="rgb(251,148,18)"/><text x="688.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.32%)</title><rect x="685" y="804" width="28" height="15" fill="rgb(224,72,45)"/><text x="688.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (5 samples, 1.66%)</title><rect x="693" y="820" width="20" height="15" fill="rgb(226,69,32)"/><text x="696.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="693" y="836" width="20" height="15" fill="rgb(206,140,53)"/><text x="696.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.66%)</title><rect x="693" y="852" width="20" height="15" fill="rgb(243,52,18)"/><text x="696.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.66%)</title><rect x="693" y="868" width="20" height="15" fill="rgb(237,31,32)"/><text x="696.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.66%)</title><rect x="693" y="884" width="20" height="15" fill="rgb(249,176,16)"/><text x="696.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="693" y="900" width="20" height="15" fill="rgb(225,138,2)"/><text x="696.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (5 samples, 1.66%)</title><rect x="693" y="916" width="20" height="15" fill="rgb(234,216,3)"/><text x="696.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.66%)</title><rect x="693" y="932" width="20" height="15" fill="rgb(254,24,36)"/><text x="696.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.66%)</title><rect x="693" y="948" width="20" height="15" fill="rgb(235,180,15)"/><text x="696.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.66%)</title><rect x="693" y="964" width="20" height="15" fill="rgb(249,61,26)"/><text x="696.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.66%)</title><rect x="693" y="980" width="20" height="15" fill="rgb(219,136,42)"/><text x="696.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.66%)</title><rect x="693" y="996" width="20" height="15" fill="rgb(242,30,6)"/><text x="696.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:383) (1 samples, 0.33%)</title><rect x="709" y="1012" width="4" height="15" fill="rgb(251,27,18)"/><text x="712.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="709" y="1028" width="4" height="15" fill="rgb(219,41,22)"/><text x="712.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="709" y="1044" width="4" height="15" fill="rgb(252,99,53)"/><text x="712.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="709" y="1060" width="4" height="15" fill="rgb(219,2,12)"/><text x="712.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="709" y="1076" width="4" height="15" fill="rgb(210,218,31)"/><text x="712.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="709" y="1092" width="4" height="15" fill="rgb(230,30,27)"/><text x="712.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/kde.py:37) (1 samples, 0.33%)</title><rect x="709" y="1108" width="4" height="15" fill="rgb(227,203,3)"/><text x="712.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1032) (1 samples, 0.33%)</title><rect x="709" y="1124" width="4" height="15" fill="rgb(253,224,28)"/><text x="712.00" y="1134.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.33%)</title><rect x="713" y="964" width="4" height="15" fill="rgb(228,114,44)"/><text x="716.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="713" y="980" width="4" height="15" fill="rgb(246,66,30)"/><text x="716.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="713" y="996" width="4" height="15" fill="rgb(247,167,31)"/><text x="716.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="713" y="1012" width="4" height="15" fill="rgb(225,140,31)"/><text x="716.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="713" y="1028" width="4" height="15" fill="rgb(214,127,42)"/><text x="716.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="713" y="1044" width="4" height="15" fill="rgb(212,3,4)"/><text x="716.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.33%)</title><rect x="713" y="1060" width="4" height="15" fill="rgb(215,152,25)"/><text x="716.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="713" y="1076" width="4" height="15" fill="rgb(242,86,26)"/><text x="716.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="713" y="1092" width="4" height="15" fill="rgb(231,85,28)"/><text x="716.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="713" y="1108" width="4" height="15" fill="rgb(239,137,43)"/><text x="716.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="713" y="1124" width="4" height="15" fill="rgb(237,88,1)"/><text x="716.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="713" y="1140" width="4" height="15" fill="rgb(208,212,42)"/><text x="716.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.33%)</title><rect x="713" y="1156" width="4" height="15" fill="rgb(221,75,32)"/><text x="716.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="713" y="1172" width="4" height="15" fill="rgb(230,40,43)"/><text x="716.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="713" y="1188" width="4" height="15" fill="rgb(239,47,36)"/><text x="716.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="713" y="1204" width="4" height="15" fill="rgb(225,34,3)"/><text x="716.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="713" y="1220" width="4" height="15" fill="rgb(242,220,49)"/><text x="716.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="713" y="1236" width="4" height="15" fill="rgb(216,35,26)"/><text x="716.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:17) (1 samples, 0.33%)</title><rect x="713" y="1252" width="4" height="15" fill="rgb(210,37,7)"/><text x="716.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="713" y="1268" width="4" height="15" fill="rgb(249,81,31)"/><text x="716.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="713" y="1284" width="4" height="15" fill="rgb(251,224,30)"/><text x="716.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="713" y="1300" width="4" height="15" fill="rgb(212,163,53)"/><text x="716.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.33%)</title><rect x="713" y="1316" width="4" height="15" fill="rgb(252,139,15)"/><text x="716.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.33%)</title><rect x="713" y="1332" width="4" height="15" fill="rgb(232,214,35)"/><text x="716.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.33%)</title><rect x="713" y="1348" width="4" height="15" fill="rgb(216,153,10)"/><text x="716.00" y="1358.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:4) (17 samples, 5.63%)</title><rect x="654" y="52" width="67" height="15" fill="rgb(229,181,3)"/><text x="657.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 5.63%)</title><rect x="654" y="68" width="67" height="15" fill="rgb(208,119,48)"/><text x="657.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 5.63%)</title><rect x="654" y="84" width="67" height="15" fill="rgb(209,217,26)"/><text x="657.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 5.63%)</title><rect x="654" y="100" width="67" height="15" fill="rgb(237,158,34)"/><text x="657.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 5.63%)</title><rect x="654" y="116" width="67" height="15" fill="rgb(228,79,18)"/><text x="657.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 5.63%)</title><rect x="654" y="132" width="67" height="15" fill="rgb(229,198,3)"/><text x="657.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (11 samples, 3.64%)</title><rect x="678" y="148" width="43" height="15" fill="rgb(228,59,27)"/><text x="681.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.64%)</title><rect x="678" y="164" width="43" height="15" fill="rgb(221,13,50)"/><text x="681.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (11 samples, 3.64%)</title><rect x="678" y="180" width="43" height="15" fill="rgb(232,219,38)"/><text x="681.00" y="190.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.64%)</title><rect x="678" y="196" width="43" height="15" fill="rgb(254,23,37)"/><text x="681.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.64%)</title><rect x="678" y="212" width="43" height="15" fill="rgb(216,29,1)"/><text x="681.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.64%)</title><rect x="678" y="228" width="43" height="15" fill="rgb(231,158,51)"/><text x="681.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.64%)</title><rect x="678" y="244" width="43" height="15" fill="rgb(223,150,13)"/><text x="681.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.64%)</title><rect x="678" y="260" width="43" height="15" fill="rgb(211,114,29)"/><text x="681.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.64%)</title><rect x="678" y="276" width="43" height="15" fill="rgb(207,212,5)"/><text x="681.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (9 samples, 2.98%)</title><rect x="685" y="292" width="36" height="15" fill="rgb(237,42,17)"/><text x="688.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.98%)</title><rect x="685" y="308" width="36" height="15" fill="rgb(205,144,26)"/><text x="688.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.98%)</title><rect x="685" y="324" width="36" height="15" fill="rgb(240,200,39)"/><text x="688.00" y="334.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.98%)</title><rect x="685" y="340" width="36" height="15" fill="rgb(232,150,26)"/><text x="688.00" y="350.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.98%)</title><rect x="685" y="356" width="36" height="15" fill="rgb(244,7,49)"/><text x="688.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.98%)</title><rect x="685" y="372" width="36" height="15" fill="rgb(206,181,54)"/><text x="688.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.98%)</title><rect x="685" y="388" width="36" height="15" fill="rgb(230,227,38)"/><text x="688.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.98%)</title><rect x="685" y="404" width="36" height="15" fill="rgb(229,1,6)"/><text x="688.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.98%)</title><rect x="685" y="420" width="36" height="15" fill="rgb(208,82,10)"/><text x="688.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (9 samples, 2.98%)</title><rect x="685" y="436" width="36" height="15" fill="rgb(224,138,33)"/><text x="688.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.98%)</title><rect x="685" y="452" width="36" height="15" fill="rgb(230,56,0)"/><text x="688.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.98%)</title><rect x="685" y="468" width="36" height="15" fill="rgb(246,49,48)"/><text x="688.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.98%)</title><rect x="685" y="484" width="36" height="15" fill="rgb(225,206,44)"/><text x="688.00" y="494.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.98%)</title><rect x="685" y="500" width="36" height="15" fill="rgb(238,188,47)"/><text x="688.00" y="510.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.98%)</title><rect x="685" y="516" width="36" height="15" fill="rgb(220,188,9)"/><text x="688.00" y="526.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.66%)</title><rect x="713" y="532" width="8" height="15" fill="rgb(213,108,11)"/><text x="716.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="713" y="548" width="8" height="15" fill="rgb(244,64,18)"/><text x="716.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="713" y="564" width="8" height="15" fill="rgb(220,52,37)"/><text x="716.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="713" y="580" width="8" height="15" fill="rgb(207,141,44)"/><text x="716.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="713" y="596" width="8" height="15" fill="rgb(213,220,41)"/><text x="716.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="713" y="612" width="8" height="15" fill="rgb(214,42,19)"/><text x="716.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.66%)</title><rect x="713" y="628" width="8" height="15" fill="rgb(243,144,14)"/><text x="716.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="713" y="644" width="8" height="15" fill="rgb(236,50,49)"/><text x="716.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="713" y="660" width="8" height="15" fill="rgb(236,219,17)"/><text x="716.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="713" y="676" width="8" height="15" fill="rgb(209,117,52)"/><text x="716.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="713" y="692" width="8" height="15" fill="rgb(242,179,40)"/><text x="716.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="713" y="708" width="8" height="15" fill="rgb(222,141,30)"/><text x="716.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.66%)</title><rect x="713" y="724" width="8" height="15" fill="rgb(221,33,36)"/><text x="716.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="713" y="740" width="8" height="15" fill="rgb(231,175,36)"/><text x="716.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.66%)</title><rect x="713" y="756" width="8" height="15" fill="rgb(248,128,37)"/><text x="716.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="713" y="772" width="8" height="15" fill="rgb(209,198,15)"/><text x="716.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="713" y="788" width="8" height="15" fill="rgb(223,0,40)"/><text x="716.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="713" y="804" width="8" height="15" fill="rgb(214,204,34)"/><text x="716.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="713" y="820" width="8" height="15" fill="rgb(215,93,29)"/><text x="716.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="713" y="836" width="8" height="15" fill="rgb(245,186,21)"/><text x="716.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="713" y="852" width="8" height="15" fill="rgb(235,183,30)"/><text x="716.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.66%)</title><rect x="713" y="868" width="8" height="15" fill="rgb(218,76,49)"/><text x="716.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.66%)</title><rect x="713" y="884" width="8" height="15" fill="rgb(220,137,17)"/><text x="716.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.66%)</title><rect x="713" y="900" width="8" height="15" fill="rgb(234,206,22)"/><text x="716.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.66%)</title><rect x="713" y="916" width="8" height="15" fill="rgb(223,166,44)"/><text x="716.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.66%)</title><rect x="713" y="932" width="8" height="15" fill="rgb(220,149,44)"/><text x="716.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.66%)</title><rect x="713" y="948" width="8" height="15" fill="rgb(235,84,34)"/><text x="716.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.33%)</title><rect x="717" y="964" width="4" height="15" fill="rgb(230,179,47)"/><text x="720.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="717" y="980" width="4" height="15" fill="rgb(238,37,46)"/><text x="720.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="717" y="996" width="4" height="15" fill="rgb(212,13,54)"/><text x="720.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="717" y="1012" width="4" height="15" fill="rgb(235,51,19)"/><text x="720.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="717" y="1028" width="4" height="15" fill="rgb(237,68,45)"/><text x="720.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="717" y="1044" width="4" height="15" fill="rgb(247,44,37)"/><text x="720.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="717" y="1060" width="4" height="15" fill="rgb(205,157,12)"/><text x="720.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="717" y="1076" width="4" height="15" fill="rgb(253,34,49)"/><text x="720.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.33%)</title><rect x="717" y="1092" width="4" height="15" fill="rgb(243,150,24)"/><text x="720.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.33%)</title><rect x="717" y="1108" width="4" height="15" fill="rgb(253,51,46)"/><text x="720.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="717" y="1124" width="4" height="15" fill="rgb(242,163,30)"/><text x="720.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="717" y="1140" width="4" height="15" fill="rgb(235,26,36)"/><text x="720.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="717" y="1156" width="4" height="15" fill="rgb(211,49,38)"/><text x="720.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="717" y="1172" width="4" height="15" fill="rgb(209,4,4)"/><text x="720.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="717" y="1188" width="4" height="15" fill="rgb(248,90,19)"/><text x="720.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="717" y="1204" width="4" height="15" fill="rgb(205,17,51)"/><text x="720.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.33%)</title><rect x="717" y="1220" width="4" height="15" fill="rgb(206,187,22)"/><text x="720.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.33%)</title><rect x="717" y="1236" width="4" height="15" fill="rgb(239,115,53)"/><text x="720.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.33%)</title><rect x="717" y="1252" width="4" height="15" fill="rgb(224,217,35)"/><text x="720.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.33%)</title><rect x="717" y="1268" width="4" height="15" fill="rgb(247,12,34)"/><text x="720.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.33%)</title><rect x="717" y="1284" width="4" height="15" fill="rgb(226,51,6)"/><text x="720.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.33%)</title><rect x="717" y="1300" width="4" height="15" fill="rgb(240,139,34)"/><text x="720.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.33%)</title><rect x="717" y="1316" width="4" height="15" fill="rgb(240,117,30)"/><text x="720.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.33%)</title><rect x="717" y="1332" width="4" height="15" fill="rgb(207,0,10)"/><text x="720.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.33%)</title><rect x="717" y="1348" width="4" height="15" fill="rgb(221,86,11)"/><text x="720.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.33%)</title><rect x="717" y="1364" width="4" height="15" fill="rgb(241,32,38)"/><text x="720.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.33%)</title><rect x="717" y="1380" width="4" height="15" fill="rgb(247,70,25)"/><text x="720.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.33%)</title><rect x="717" y="1396" width="4" height="15" fill="rgb(227,220,0)"/><text x="720.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="717" y="1412" width="4" height="15" fill="rgb(224,98,34)"/><text x="720.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.33%)</title><rect x="717" y="1428" width="4" height="15" fill="rgb(225,1,47)"/><text x="720.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.33%)</title><rect x="717" y="1444" width="4" height="15" fill="rgb(231,132,13)"/><text x="720.00" y="1454.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:199) (1 samples, 0.33%)</title><rect x="717" y="1460" width="4" height="15" fill="rgb(222,193,12)"/><text x="720.00" y="1470.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:28) (1 samples, 0.33%)</title><rect x="721" y="84" width="4" height="15" fill="rgb(215,198,9)"/><text x="724.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.33%)</title><rect x="721" y="100" width="4" height="15" fill="rgb(253,199,10)"/><text x="724.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.33%)</title><rect x="721" y="116" width="4" height="15" fill="rgb(237,195,44)"/><text x="724.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (1 samples, 0.33%)</title><rect x="721" y="132" width="4" height="15" fill="rgb(253,126,23)"/><text x="724.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.33%)</title><rect x="721" y="148" width="4" height="15" fill="rgb(228,128,51)"/><text x="724.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.33%)</title><rect x="721" y="164" width="4" height="15" fill="rgb(236,182,48)"/><text x="724.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.33%)</title><rect x="721" y="180" width="4" height="15" fill="rgb(234,149,27)"/><text x="724.00" y="190.50"></text></g><g><title>convert_sklearn_linear_classifier (skl2onnx/operator_converters/linear_classifier.py:23) (1 samples, 0.33%)</title><rect x="721" y="196" width="4" height="15" fill="rgb(243,212,31)"/><text x="724.00" y="206.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.33%)</title><rect x="721" y="212" width="4" height="15" fill="rgb(250,147,22)"/><text x="724.00" y="222.50"></text></g><g><title>PyArray_Flatten (shape.c:971) (1 samples, 0.33%)</title><rect x="721" y="228" width="4" height="15" fill="rgb(231,110,33)"/><text x="724.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.33%)</title><rect x="721" y="244" width="4" height="15" fill="rgb(253,64,38)"/><text x="724.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.33%)</title><rect x="721" y="260" width="4" height="15" fill="rgb(219,181,43)"/><text x="724.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.33%)</title><rect x="721" y="276" width="4" height="15" fill="rgb(244,149,36)"/><text x="724.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.33%)</title><rect x="721" y="292" width="4" height="15" fill="rgb(230,51,1)"/><text x="724.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c:230) (1 samples, 0.33%)</title><rect x="721" y="308" width="4" height="15" fill="rgb(252,186,47)"/><text x="724.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:18) (1 samples, 0.33%)</title><rect x="725" y="100" width="3" height="15" fill="rgb(231,14,11)"/><text x="728.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.33%)</title><rect x="725" y="116" width="3" height="15" fill="rgb(230,60,44)"/><text x="728.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.33%)</title><rect x="725" y="132" width="3" height="15" fill="rgb(234,29,52)"/><text x="728.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.33%)</title><rect x="725" y="148" width="3" height="15" fill="rgb(217,41,37)"/><text x="728.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.33%)</title><rect x="725" y="164" width="3" height="15" fill="rgb(223,41,27)"/><text x="728.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.33%)</title><rect x="725" y="180" width="3" height="15" fill="rgb(224,154,41)"/><text x="728.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.33%)</title><rect x="725" y="196" width="3" height="15" fill="rgb(231,146,1)"/><text x="728.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.33%)</title><rect x="725" y="212" width="3" height="15" fill="rgb(211,189,41)"/><text x="728.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.33%)</title><rect x="725" y="228" width="3" height="15" fill="rgb(236,168,32)"/><text x="728.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.33%)</title><rect x="725" y="244" width="3" height="15" fill="rgb(235,105,37)"/><text x="728.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.33%)</title><rect x="725" y="260" width="3" height="15" fill="rgb(237,216,1)"/><text x="728.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.33%)</title><rect x="725" y="276" width="3" height="15" fill="rgb(205,103,37)"/><text x="728.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.33%)</title><rect x="725" y="292" width="3" height="15" fill="rgb(250,161,22)"/><text x="728.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.33%)</title><rect x="725" y="308" width="3" height="15" fill="rgb(224,226,28)"/><text x="728.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.33%)</title><rect x="725" y="324" width="3" height="15" fill="rgb(210,140,44)"/><text x="728.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.33%)</title><rect x="728" y="116" width="4" height="15" fill="rgb(254,94,34)"/><text x="731.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.33%)</title><rect x="728" y="132" width="4" height="15" fill="rgb(208,191,49)"/><text x="731.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.33%)</title><rect x="728" y="148" width="4" height="15" fill="rgb(226,226,42)"/><text x="731.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.33%)</title><rect x="728" y="164" width="4" height="15" fill="rgb(242,194,26)"/><text x="731.00" y="174.50"></text></g><g><title>0x7f2e51be5a4f (libc-2.29.so) (1 samples, 0.33%)</title><rect x="728" y="180" width="4" height="15" fill="rgb(246,54,6)"/><text x="731.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.66%)</title><rect x="736" y="148" width="8" height="15" fill="rgb(242,115,25)"/><text x="739.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.33%)</title><rect x="744" y="164" width="4" height="15" fill="rgb(233,116,4)"/><text x="747.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.33%)</title><rect x="748" y="180" width="4" height="15" fill="rgb(222,190,8)"/><text x="751.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.99%)</title><rect x="752" y="180" width="12" height="15" fill="rgb(254,2,5)"/><text x="755.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.33%)</title><rect x="760" y="196" width="4" height="15" fill="rgb(249,31,6)"/><text x="763.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.66%)</title><rect x="768" y="260" width="7" height="15" fill="rgb(236,229,36)"/><text x="771.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.66%)</title><rect x="768" y="276" width="7" height="15" fill="rgb(240,103,32)"/><text x="771.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.66%)</title><rect x="768" y="292" width="7" height="15" fill="rgb(244,75,5)"/><text x="771.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.33%)</title><rect x="775" y="308" width="4" height="15" fill="rgb(248,123,15)"/><text x="778.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.33%)</title><rect x="775" y="324" width="4" height="15" fill="rgb(209,14,12)"/><text x="778.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.33%)</title><rect x="775" y="340" width="4" height="15" fill="rgb(234,115,22)"/><text x="778.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.33%)</title><rect x="775" y="356" width="4" height="15" fill="rgb(241,164,21)"/><text x="778.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.33%)</title><rect x="775" y="372" width="4" height="15" fill="rgb(240,39,30)"/><text x="778.00" y="382.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:33) (1 samples, 0.33%)</title><rect x="775" y="388" width="4" height="15" fill="rgb(243,74,40)"/><text x="778.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.33%)</title><rect x="779" y="324" width="4" height="15" fill="rgb(211,63,27)"/><text x="782.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.33%)</title><rect x="783" y="340" width="4" height="15" fill="rgb(235,1,26)"/><text x="786.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.33%)</title><rect x="783" y="356" width="4" height="15" fill="rgb(206,224,42)"/><text x="786.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.33%)</title><rect x="783" y="372" width="4" height="15" fill="rgb(245,174,26)"/><text x="786.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.33%)</title><rect x="783" y="388" width="4" height="15" fill="rgb(213,84,40)"/><text x="786.00" y="398.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1775) (1 samples, 0.33%)</title><rect x="783" y="404" width="4" height="15" fill="rgb(231,105,44)"/><text x="786.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.33%)</title><rect x="787" y="356" width="4" height="15" fill="rgb(223,39,28)"/><text x="790.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.33%)</title><rect x="787" y="372" width="4" height="15" fill="rgb(226,7,6)"/><text x="790.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.33%)</title><rect x="787" y="388" width="4" height="15" fill="rgb(220,228,33)"/><text x="790.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.33%)</title><rect x="787" y="404" width="4" height="15" fill="rgb(213,153,1)"/><text x="790.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.33%)</title><rect x="787" y="420" width="4" height="15" fill="rgb(211,63,22)"/><text x="790.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.33%)</title><rect x="787" y="436" width="4" height="15" fill="rgb(224,36,52)"/><text x="790.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.33%)</title><rect x="787" y="452" width="4" height="15" fill="rgb(213,181,4)"/><text x="790.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.33%)</title><rect x="787" y="468" width="4" height="15" fill="rgb(231,70,19)"/><text x="790.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="787" y="484" width="4" height="15" fill="rgb(251,123,48)"/><text x="790.00" y="494.50"></text></g><g><title>0x7f2e51be7715 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="787" y="500" width="4" height="15" fill="rgb(234,111,50)"/><text x="790.00" y="510.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.33%)</title><rect x="791" y="404" width="4" height="15" fill="rgb(248,136,50)"/><text x="794.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.33%)</title><rect x="791" y="420" width="4" height="15" fill="rgb(213,111,0)"/><text x="794.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.66%)</title><rect x="791" y="356" width="8" height="15" fill="rgb(222,35,11)"/><text x="794.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.66%)</title><rect x="791" y="372" width="8" height="15" fill="rgb(242,218,9)"/><text x="794.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.66%)</title><rect x="791" y="388" width="8" height="15" fill="rgb(251,131,41)"/><text x="794.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.33%)</title><rect x="795" y="404" width="4" height="15" fill="rgb(234,100,44)"/><text x="798.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.33%)</title><rect x="799" y="356" width="4" height="15" fill="rgb(211,35,40)"/><text x="802.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.33%)</title><rect x="799" y="372" width="4" height="15" fill="rgb(205,92,27)"/><text x="802.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.33%)</title><rect x="799" y="388" width="4" height="15" fill="rgb(227,9,28)"/><text x="802.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.33%)</title><rect x="803" y="372" width="4" height="15" fill="rgb(250,86,16)"/><text x="806.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.33%)</title><rect x="807" y="372" width="3" height="15" fill="rgb(235,211,4)"/><text x="810.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.33%)</title><rect x="810" y="388" width="4" height="15" fill="rgb(218,80,3)"/><text x="813.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.33%)</title><rect x="814" y="388" width="4" height="15" fill="rgb(206,147,38)"/><text x="817.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.33%)</title><rect x="818" y="404" width="4" height="15" fill="rgb(240,172,52)"/><text x="821.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.99%)</title><rect x="818" y="388" width="12" height="15" fill="rgb(206,25,48)"/><text x="821.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.66%)</title><rect x="822" y="404" width="8" height="15" fill="rgb(236,225,25)"/><text x="825.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.33%)</title><rect x="830" y="388" width="4" height="15" fill="rgb(235,128,4)"/><text x="833.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 5.30%)</title><rect x="775" y="260" width="63" height="15" fill="rgb(250,186,22)"/><text x="778.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 5.30%)</title><rect x="775" y="276" width="63" height="15" fill="rgb(212,217,7)"/><text x="778.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (16 samples, 5.30%)</title><rect x="775" y="292" width="63" height="15" fill="rgb(247,0,40)"/><text x="778.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 4.97%)</title><rect x="779" y="308" width="59" height="15" fill="rgb(206,148,6)"/><text x="782.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 4.64%)</title><rect x="783" y="324" width="55" height="15" fill="rgb(216,162,40)"/><text x="786.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 4.30%)</title><rect x="787" y="340" width="51" height="15" fill="rgb(218,98,26)"/><text x="790.00" y="350.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 2.98%)</title><rect x="803" y="356" width="35" height="15" fill="rgb(214,174,31)"/><text x="806.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 2.32%)</title><rect x="810" y="372" width="28" height="15" fill="rgb(213,96,36)"/><text x="813.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.33%)</title><rect x="834" y="388" width="4" height="15" fill="rgb(240,48,48)"/><text x="837.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (19 samples, 6.29%)</title><rect x="768" y="244" width="74" height="15" fill="rgb(243,176,48)"/><text x="771.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.33%)</title><rect x="838" y="260" width="4" height="15" fill="rgb(212,208,50)"/><text x="841.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.33%)</title><rect x="838" y="276" width="4" height="15" fill="rgb(230,72,22)"/><text x="841.00" y="286.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c:587) (1 samples, 0.33%)</title><rect x="838" y="292" width="4" height="15" fill="rgb(224,193,53)"/><text x="841.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.33%)</title><rect x="842" y="276" width="4" height="15" fill="rgb(250,90,53)"/><text x="845.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.33%)</title><rect x="842" y="292" width="4" height="15" fill="rgb(209,52,32)"/><text x="845.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.33%)</title><rect x="842" y="308" width="4" height="15" fill="rgb(208,109,51)"/><text x="845.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.33%)</title><rect x="846" y="308" width="4" height="15" fill="rgb(222,209,7)"/><text x="849.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.33%)</title><rect x="846" y="324" width="4" height="15" fill="rgb(216,191,14)"/><text x="849.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.33%)</title><rect x="846" y="340" width="4" height="15" fill="rgb(241,115,35)"/><text x="849.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.33%)</title><rect x="850" y="324" width="3" height="15" fill="rgb(227,223,34)"/><text x="853.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1707) (1 samples, 0.33%)</title><rect x="850" y="340" width="3" height="15" fill="rgb(245,20,41)"/><text x="853.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.66%)</title><rect x="853" y="356" width="8" height="15" fill="rgb(218,26,5)"/><text x="856.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.33%)</title><rect x="861" y="356" width="4" height="15" fill="rgb(231,69,46)"/><text x="864.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.33%)</title><rect x="869" y="372" width="4" height="15" fill="rgb(238,32,42)"/><text x="872.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 2.32%)</title><rect x="850" y="308" width="27" height="15" fill="rgb(207,72,54)"/><text x="853.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.99%)</title><rect x="853" y="324" width="24" height="15" fill="rgb(210,79,23)"/><text x="856.00" y="334.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.99%)</title><rect x="853" y="340" width="24" height="15" fill="rgb(217,20,36)"/><text x="856.00" y="350.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.99%)</title><rect x="865" y="356" width="12" height="15" fill="rgb(233,7,6)"/><text x="868.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.33%)</title><rect x="873" y="372" width="4" height="15" fill="rgb(231,11,44)"/><text x="876.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 3.64%)</title><rect x="842" y="260" width="43" height="15" fill="rgb(229,144,27)"/><text x="845.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 3.31%)</title><rect x="846" y="276" width="39" height="15" fill="rgb(221,55,5)"/><text x="849.00" y="286.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 3.31%)</title><rect x="846" y="292" width="39" height="15" fill="rgb(233,164,27)"/><text x="849.00" y="302.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.66%)</title><rect x="877" y="308" width="8" height="15" fill="rgb(215,65,12)"/><text x="880.00" y="318.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.66%)</title><rect x="877" y="324" width="8" height="15" fill="rgb(249,53,49)"/><text x="880.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.66%)</title><rect x="877" y="340" width="8" height="15" fill="rgb(214,197,9)"/><text x="880.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.66%)</title><rect x="877" y="356" width="8" height="15" fill="rgb(220,170,47)"/><text x="880.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.66%)</title><rect x="877" y="372" width="8" height="15" fill="rgb(234,168,28)"/><text x="880.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (31 samples, 10.26%)</title><rect x="768" y="196" width="121" height="15" fill="rgb(244,57,27)"/><text x="771.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (31 samples, 10.26%)</title><rect x="768" y="212" width="121" height="15" fill="rgb(217,165,44)"/><text x="771.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (31 samples, 10.26%)</title><rect x="768" y="228" width="121" height="15" fill="rgb(227,140,52)"/><text x="771.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (12 samples, 3.97%)</title><rect x="842" y="244" width="47" height="15" fill="rgb(221,33,40)"/><text x="845.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.33%)</title><rect x="885" y="260" width="4" height="15" fill="rgb(225,202,20)"/><text x="888.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.33%)</title><rect x="885" y="276" width="4" height="15" fill="rgb(218,1,3)"/><text x="888.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.33%)</title><rect x="889" y="196" width="4" height="15" fill="rgb(225,64,14)"/><text x="892.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.33%)</title><rect x="893" y="244" width="3" height="15" fill="rgb(217,96,21)"/><text x="896.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.66%)</title><rect x="904" y="260" width="8" height="15" fill="rgb(216,11,5)"/><text x="907.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.33%)</title><rect x="912" y="276" width="4" height="15" fill="rgb(214,225,30)"/><text x="915.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.33%)</title><rect x="916" y="308" width="4" height="15" fill="rgb(213,152,12)"/><text x="919.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1864) (1 samples, 0.33%)</title><rect x="916" y="324" width="4" height="15" fill="rgb(242,49,33)"/><text x="919.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:635) (1 samples, 0.33%)</title><rect x="920" y="324" width="4" height="15" fill="rgb(243,191,5)"/><text x="923.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.33%)</title><rect x="920" y="340" width="4" height="15" fill="rgb(213,163,4)"/><text x="923.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 4.64%)</title><rect x="916" y="276" width="55" height="15" fill="rgb(207,161,4)"/><text x="919.00" y="286.50">array..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (14 samples, 4.64%)</title><rect x="916" y="292" width="55" height="15" fill="rgb(242,190,25)"/><text x="919.00" y="302.50">array..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (13 samples, 4.30%)</title><rect x="920" y="308" width="51" height="15" fill="rgb(229,221,24)"/><text x="923.00" y="318.50">PyArr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (12 samples, 3.97%)</title><rect x="924" y="324" width="47" height="15" fill="rgb(222,223,18)"/><text x="927.00" y="334.50">cbla..</text></g><g><title>gemm (cblasfuncs.c:36) (12 samples, 3.97%)</title><rect x="924" y="340" width="47" height="15" fill="rgb(225,179,47)"/><text x="927.00" y="350.50">gemm..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.97%)</title><rect x="924" y="356" width="47" height="15" fill="rgb(209,54,10)"/><text x="927.00" y="366.50">cbla..</text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.97%)</title><rect x="924" y="372" width="47" height="15" fill="rgb(231,182,4)"/><text x="927.00" y="382.50">dgem..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 3.97%)</title><rect x="924" y="388" width="47" height="15" fill="rgb(241,190,43)"/><text x="927.00" y="398.50">dgem..</text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.66%)</title><rect x="971" y="276" width="8" height="15" fill="rgb(251,188,11)"/><text x="974.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (44 samples, 14.57%)</title><rect x="893" y="228" width="171" height="15" fill="rgb(231,185,15)"/><text x="896.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (43 samples, 14.24%)</title><rect x="896" y="244" width="168" height="15" fill="rgb(211,3,40)"/><text x="899.00" y="254.50">numpy_dot_inplace (ml..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (39 samples, 12.91%)</title><rect x="912" y="260" width="152" height="15" fill="rgb(225,207,10)"/><text x="915.00" y="270.50">dot (&lt;__array_funct..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 7.28%)</title><rect x="979" y="276" width="85" height="15" fill="rgb(215,213,13)"/><text x="982.00" y="286.50">dgemm_kern..</text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.33%)</title><rect x="1064" y="292" width="4" height="15" fill="rgb(209,189,31)"/><text x="1067.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.33%)</title><rect x="1064" y="308" width="4" height="15" fill="rgb(252,218,51)"/><text x="1067.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3045) (1 samples, 0.33%)</title><rect x="1064" y="324" width="4" height="15" fill="rgb(235,71,10)"/><text x="1067.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.33%)</title><rect x="1068" y="292" width="4" height="15" fill="rgb(223,51,37)"/><text x="1071.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.33%)</title><rect x="1068" y="308" width="4" height="15" fill="rgb(226,150,43)"/><text x="1071.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.33%)</title><rect x="1068" y="324" width="4" height="15" fill="rgb(251,208,4)"/><text x="1071.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.33%)</title><rect x="1068" y="340" width="4" height="15" fill="rgb(237,194,34)"/><text x="1071.00" y="350.50"></text></g><g><title>0x7f2e51c05d62 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1068" y="356" width="4" height="15" fill="rgb(212,199,25)"/><text x="1071.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.99%)</title><rect x="1064" y="260" width="12" height="15" fill="rgb(249,160,5)"/><text x="1067.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.99%)</title><rect x="1064" y="276" width="12" height="15" fill="rgb(215,35,33)"/><text x="1067.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.33%)</title><rect x="1072" y="292" width="4" height="15" fill="rgb(208,211,4)"/><text x="1075.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.33%)</title><rect x="1072" y="308" width="4" height="15" fill="rgb(246,73,18)"/><text x="1075.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.33%)</title><rect x="1072" y="324" width="4" height="15" fill="rgb(214,177,31)"/><text x="1075.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.33%)</title><rect x="1072" y="340" width="4" height="15" fill="rgb(240,120,11)"/><text x="1075.00" y="350.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.33%)</title><rect x="1072" y="356" width="4" height="15" fill="rgb(209,137,48)"/><text x="1075.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 1.32%)</title><rect x="1064" y="228" width="16" height="15" fill="rgb(221,49,24)"/><text x="1067.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.32%)</title><rect x="1064" y="244" width="16" height="15" fill="rgb(246,184,6)"/><text x="1067.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.33%)</title><rect x="1076" y="260" width="4" height="15" fill="rgb(219,56,29)"/><text x="1079.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.33%)</title><rect x="1080" y="244" width="4" height="15" fill="rgb(211,22,26)"/><text x="1083.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.33%)</title><rect x="1080" y="260" width="4" height="15" fill="rgb(246,44,14)"/><text x="1083.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.33%)</title><rect x="1080" y="276" width="4" height="15" fill="rgb(227,69,8)"/><text x="1083.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.33%)</title><rect x="1080" y="292" width="4" height="15" fill="rgb(237,43,16)"/><text x="1083.00" y="302.50"></text></g><g><title>0x7f2e51bfbe7a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1080" y="308" width="4" height="15" fill="rgb(217,189,42)"/><text x="1083.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.33%)</title><rect x="1084" y="260" width="4" height="15" fill="rgb(209,127,5)"/><text x="1087.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.33%)</title><rect x="1084" y="276" width="4" height="15" fill="rgb(220,102,29)"/><text x="1087.00" y="286.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1745) (1 samples, 0.33%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(228,73,29)"/><text x="1087.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.33%)</title><rect x="1088" y="260" width="4" height="15" fill="rgb(223,120,21)"/><text x="1091.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.33%)</title><rect x="1088" y="276" width="4" height="15" fill="rgb(252,41,1)"/><text x="1091.00" y="286.50"></text></g><g><title>0x7f2e33feb9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1092" y="308" width="4" height="15" fill="rgb(243,155,46)"/><text x="1095.00" y="318.50"></text></g><g><title>0x7f2e51db7bb4 (libm-2.29.so) (2 samples, 0.66%)</title><rect x="1104" y="356" width="7" height="15" fill="rgb(233,39,54)"/><text x="1107.00" y="366.50"></text></g><g><title>0x7f2e51db7bd3 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1111" y="356" width="4" height="15" fill="rgb(250,141,9)"/><text x="1114.00" y="366.50"></text></g><g><title>0x7f2e51db7bf9 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1115" y="356" width="4" height="15" fill="rgb(245,226,25)"/><text x="1118.00" y="366.50"></text></g><g><title>0x7f2e51db7c18 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1119" y="356" width="4" height="15" fill="rgb(244,31,31)"/><text x="1122.00" y="366.50"></text></g><g><title>0x7f2e51db7c3e (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1123" y="356" width="4" height="15" fill="rgb(233,54,29)"/><text x="1126.00" y="366.50"></text></g><g><title>0x7f2e3400c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.98%)</title><rect x="1096" y="324" width="35" height="15" fill="rgb(222,145,41)"/><text x="1099.00" y="334.50">0x..</text></g><g><title>exp (libm-2.29.so) (9 samples, 2.98%)</title><rect x="1096" y="340" width="35" height="15" fill="rgb(240,55,42)"/><text x="1099.00" y="350.50">ex..</text></g><g><title>0x7f2e51db7c7b (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1127" y="356" width="4" height="15" fill="rgb(235,137,52)"/><text x="1130.00" y="366.50"></text></g><g><title>0x7f2e33feb9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 5.63%)</title><rect x="1096" y="308" width="66" height="15" fill="rgb(235,116,51)"/><text x="1099.00" y="318.50">0x7f2e3..</text></g><g><title>0x7f2e3400c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.65%)</title><rect x="1131" y="324" width="31" height="15" fill="rgb(218,123,18)"/><text x="1134.00" y="334.50">0x..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (19 samples, 6.29%)</title><rect x="1092" y="276" width="74" height="15" fill="rgb(235,84,35)"/><text x="1095.00" y="286.50">execute_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (19 samples, 6.29%)</title><rect x="1092" y="292" width="74" height="15" fill="rgb(221,91,33)"/><text x="1095.00" y="302.50">trivial_..</text></g><g><title>0x7f2e33feb9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1162" y="308" width="4" height="15" fill="rgb(237,124,53)"/><text x="1165.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (23 samples, 7.62%)</title><rect x="1080" y="228" width="90" height="15" fill="rgb(206,51,36)"/><text x="1083.00" y="238.50">_run (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 7.28%)</title><rect x="1084" y="244" width="86" height="15" fill="rgb(207,55,13)"/><text x="1087.00" y="254.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 6.62%)</title><rect x="1092" y="260" width="78" height="15" fill="rgb(223,220,32)"/><text x="1095.00" y="270.50">PyUFunc_G..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.33%)</title><rect x="1166" y="276" width="4" height="15" fill="rgb(223,109,30)"/><text x="1169.00" y="286.50"></text></g><g><title>0x7f2e50e08c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1166" y="292" width="4" height="15" fill="rgb(228,17,12)"/><text x="1169.00" y="302.50"></text></g><g><title>0x7f2e51cc3151 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1170" y="292" width="4" height="15" fill="rgb(211,126,26)"/><text x="1173.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.33%)</title><rect x="1174" y="324" width="4" height="15" fill="rgb(218,121,3)"/><text x="1177.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3097) (1 samples, 0.33%)</title><rect x="1174" y="340" width="4" height="15" fill="rgb(217,76,52)"/><text x="1177.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (74 samples, 24.50%)</title><rect x="893" y="212" width="289" height="15" fill="rgb(252,122,43)"/><text x="896.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:2..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (3 samples, 0.99%)</title><rect x="1170" y="228" width="12" height="15" fill="rgb(234,174,17)"/><text x="1173.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.99%)</title><rect x="1170" y="244" width="12" height="15" fill="rgb(236,27,11)"/><text x="1173.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.99%)</title><rect x="1170" y="260" width="12" height="15" fill="rgb(250,214,30)"/><text x="1173.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.99%)</title><rect x="1170" y="276" width="12" height="15" fill="rgb(252,40,32)"/><text x="1173.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.66%)</title><rect x="1174" y="292" width="8" height="15" fill="rgb(249,107,32)"/><text x="1177.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.66%)</title><rect x="1174" y="308" width="8" height="15" fill="rgb(215,195,43)"/><text x="1177.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:133) (1 samples, 0.33%)</title><rect x="1178" y="324" width="4" height="15" fill="rgb(238,106,19)"/><text x="1181.00" y="334.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (112 samples, 37.09%)</title><rect x="748" y="164" width="438" height="15" fill="rgb(234,175,2)"/><text x="751.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:4..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (108 samples, 35.76%)</title><rect x="764" y="180" width="422" height="15" fill="rgb(222,72,48)"/><text x="767.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (75 samples, 24.83%)</title><rect x="893" y="196" width="293" height="15" fill="rgb(234,212,6)"/><text x="896.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:38..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.33%)</title><rect x="1182" y="212" width="4" height="15" fill="rgb(228,174,41)"/><text x="1185.00" y="222.50"></text></g><g><title>all (302 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,189,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:45) (120 samples, 39.74%)</title><rect x="721" y="52" width="469" height="15" fill="rgb(251,66,25)"/><text x="724.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverlibli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:44) (120 samples, 39.74%)</title><rect x="721" y="68" width="469" height="15" fill="rgb(215,33,21)"/><text x="724.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:29) (119 samples, 39.40%)</title><rect x="725" y="84" width="465" height="15" fill="rgb(243,102,51)"/><text x="728.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solve..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_double_nozipmap.py:23) (118 samples, 39.07%)</title><rect x="728" y="100" width="462" height="15" fill="rgb(253,65,35)"/><text x="731.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverlibli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (117 samples, 38.74%)</title><rect x="732" y="116" width="458" height="15" fill="rgb(233,53,36)"/><text x="735.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (116 samples, 38.41%)</title><rect x="736" y="132" width="454" height="15" fill="rgb(228,110,25)"/><text x="739.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (114 samples, 37.75%)</title><rect x="744" y="148" width="446" height="15" fill="rgb(244,162,41)"/><text x="747.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.33%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(249,36,3)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.33%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(252,28,47)"/><text x="1189.00" y="190.50"></text></g></g></svg>