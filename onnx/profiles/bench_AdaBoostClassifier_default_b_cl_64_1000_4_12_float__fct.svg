<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(227,104,23)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(240,113,8)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(227,39,45)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(253,146,6)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(221,186,41)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(208,108,50)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(239,185,43)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(241,96,14)"/><text x="14.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(234,100,35)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(205,0,22)"/><text x="14.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.11%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(249,154,21)"/><text x="14.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(214,226,39)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(208,166,39)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(251,174,29)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.22%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(208,12,38)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="12" y="932" width="1" height="15" fill="rgb(244,35,42)"/><text x="15.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.11%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(253,93,26)"/><text x="15.00" y="958.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.11%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(244,151,24)"/><text x="15.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.44%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(225,71,34)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(245,79,34)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(224,152,1)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(220,91,2)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(254,163,32)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(235,14,46)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.44%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(229,111,22)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(231,28,6)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(209,36,37)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(223,86,48)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(252,142,7)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(242,167,36)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.44%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(217,191,21)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(213,118,31)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(215,143,23)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(236,67,1)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(232,49,18)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(250,17,40)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.44%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(208,22,1)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(215,39,7)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(247,95,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(221,12,9)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(235,18,19)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(224,193,17)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(232,24,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(227,84,7)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(240,222,44)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.44%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(220,158,53)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(248,195,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(245,18,40)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(212,0,25)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(240,222,7)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(208,6,1)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.44%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(251,122,16)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.44%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(253,37,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.44%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(241,7,31)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(216,169,20)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(247,0,46)"/><text x="16.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.11%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(251,182,7)"/><text x="16.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.11%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(214,84,42)"/><text x="16.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(237,137,32)"/><text x="16.00" y="942.50"></text></g><g><title>0x7f26e5474237 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(211,0,25)"/><text x="16.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(211,39,54)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(243,47,2)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(225,215,53)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(231,136,42)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(215,85,34)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(205,164,34)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="292" width="1" height="15" fill="rgb(206,57,15)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="308" width="1" height="15" fill="rgb(220,209,18)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="324" width="1" height="15" fill="rgb(252,87,43)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="340" width="1" height="15" fill="rgb(216,20,53)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="356" width="1" height="15" fill="rgb(241,180,12)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="372" width="1" height="15" fill="rgb(217,114,32)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.11%)</title><rect x="15" y="388" width="1" height="15" fill="rgb(221,199,19)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="404" width="1" height="15" fill="rgb(252,135,48)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="420" width="1" height="15" fill="rgb(219,73,7)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="436" width="1" height="15" fill="rgb(250,72,30)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="452" width="1" height="15" fill="rgb(223,37,19)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="468" width="1" height="15" fill="rgb(213,199,31)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="484" width="1" height="15" fill="rgb(253,82,34)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="500" width="1" height="15" fill="rgb(252,213,29)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="516" width="1" height="15" fill="rgb(240,154,21)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="532" width="1" height="15" fill="rgb(225,5,17)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="548" width="1" height="15" fill="rgb(205,81,19)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="564" width="1" height="15" fill="rgb(216,28,36)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.11%)</title><rect x="15" y="580" width="1" height="15" fill="rgb(215,20,42)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(244,137,35)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(213,177,28)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="628" width="1" height="15" fill="rgb(240,97,33)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="644" width="1" height="15" fill="rgb(237,4,16)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="660" width="1" height="15" fill="rgb(237,46,50)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.11%)</title><rect x="15" y="676" width="1" height="15" fill="rgb(231,177,34)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="692" width="1" height="15" fill="rgb(231,45,52)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="708" width="1" height="15" fill="rgb(239,177,48)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="724" width="1" height="15" fill="rgb(219,116,12)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="740" width="1" height="15" fill="rgb(249,42,23)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="756" width="1" height="15" fill="rgb(239,28,47)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.11%)</title><rect x="15" y="772" width="1" height="15" fill="rgb(227,141,23)"/><text x="18.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="788" width="1" height="15" fill="rgb(246,172,45)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="804" width="1" height="15" fill="rgb(252,90,53)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="820" width="1" height="15" fill="rgb(218,79,43)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(230,141,38)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(251,103,51)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(235,98,12)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(224,175,13)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.11%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(245,213,18)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(234,207,5)"/><text x="18.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(234,141,4)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="948" width="1" height="15" fill="rgb(233,149,23)"/><text x="18.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="964" width="1" height="15" fill="rgb(240,83,13)"/><text x="18.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(252,12,22)"/><text x="18.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="15" y="996" width="1" height="15" fill="rgb(236,174,26)"/><text x="18.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="15" y="1012" width="1" height="15" fill="rgb(234,193,12)"/><text x="18.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.11%)</title><rect x="15" y="1028" width="1" height="15" fill="rgb(243,125,33)"/><text x="18.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="15" y="1044" width="1" height="15" fill="rgb(228,104,3)"/><text x="18.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.11%)</title><rect x="15" y="1060" width="1" height="15" fill="rgb(213,127,31)"/><text x="18.00" y="1070.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.11%)</title><rect x="15" y="1076" width="1" height="15" fill="rgb(243,229,41)"/><text x="18.00" y="1086.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_selection/__init__.py) (1 samples, 0.11%)</title><rect x="16" y="1396" width="1" height="15" fill="rgb(211,81,2)"/><text x="19.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="16" y="1412" width="1" height="15" fill="rgb(217,58,14)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1124" width="3" height="15" fill="rgb(214,146,11)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1140" width="3" height="15" fill="rgb(244,149,52)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1156" width="3" height="15" fill="rgb(209,113,30)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="1172" width="3" height="15" fill="rgb(206,47,10)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1188" width="3" height="15" fill="rgb(218,221,26)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.22%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(235,92,35)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(211,150,36)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(241,208,10)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(231,184,13)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(219,64,22)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1284" width="3" height="15" fill="rgb(252,225,18)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (2 samples, 0.22%)</title><rect x="16" y="1300" width="3" height="15" fill="rgb(208,83,4)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1316" width="3" height="15" fill="rgb(235,197,31)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1332" width="3" height="15" fill="rgb(232,29,2)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1348" width="3" height="15" fill="rgb(251,148,30)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="16" y="1364" width="3" height="15" fill="rgb(246,0,11)"/><text x="19.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="16" y="1380" width="3" height="15" fill="rgb(215,158,44)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/impute/__init__.py) (1 samples, 0.11%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(243,88,19)"/><text x="20.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(207,95,0)"/><text x="20.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(224,150,27)"/><text x="20.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(205,104,35)"/><text x="20.00" y="1454.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(242,80,28)"/><text x="20.00" y="1470.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1700" width="1" height="15" fill="rgb(236,12,1)"/><text x="22.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="19" y="1716" width="1" height="15" fill="rgb(228,142,41)"/><text x="22.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1732" width="1" height="15" fill="rgb(217,141,17)"/><text x="22.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1748" width="1" height="15" fill="rgb(240,150,20)"/><text x="22.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="19" y="1764" width="1" height="15" fill="rgb(224,205,54)"/><text x="22.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1780" width="1" height="15" fill="rgb(208,103,29)"/><text x="22.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1796" width="1" height="15" fill="rgb(238,143,33)"/><text x="22.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="19" y="1812" width="1" height="15" fill="rgb(247,90,29)"/><text x="22.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1828" width="1" height="15" fill="rgb(217,144,38)"/><text x="22.00" y="1838.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1844" width="1" height="15" fill="rgb(210,22,31)"/><text x="22.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="19" y="1860" width="1" height="15" fill="rgb(239,28,48)"/><text x="22.00" y="1870.50"></text></g><g><title>visit_Output (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1876" width="1" height="15" fill="rgb(226,216,45)"/><text x="22.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="19" y="1892" width="1" height="15" fill="rgb(220,122,4)"/><text x="22.00" y="1902.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1908" width="1" height="15" fill="rgb(227,184,24)"/><text x="22.00" y="1918.50"></text></g><g><title>visit_Call (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1924" width="1" height="15" fill="rgb(205,104,15)"/><text x="22.00" y="1934.50"></text></g><g><title>signature (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1940" width="1" height="15" fill="rgb(239,43,35)"/><text x="22.00" y="1950.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="19" y="1956" width="1" height="15" fill="rgb(218,132,17)"/><text x="22.00" y="1966.50"></text></g><g><title>visit_Name (jinja2/compiler.py) (1 samples, 0.11%)</title><rect x="19" y="1972" width="1" height="15" fill="rgb(234,222,28)"/><text x="22.00" y="1982.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="20" y="1844" width="1" height="15" fill="rgb(239,62,10)"/><text x="23.00" y="1854.50"></text></g><g><title>__new__ (jinja2/environment.py) (3 samples, 0.33%)</title><rect x="19" y="1588" width="3" height="15" fill="rgb(215,77,33)"/><text x="22.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (3 samples, 0.33%)</title><rect x="19" y="1604" width="3" height="15" fill="rgb(207,161,25)"/><text x="22.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (3 samples, 0.33%)</title><rect x="19" y="1620" width="3" height="15" fill="rgb(252,64,38)"/><text x="22.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (3 samples, 0.33%)</title><rect x="19" y="1636" width="3" height="15" fill="rgb(230,180,2)"/><text x="22.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (3 samples, 0.33%)</title><rect x="19" y="1652" width="3" height="15" fill="rgb(231,116,13)"/><text x="22.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (3 samples, 0.33%)</title><rect x="19" y="1668" width="3" height="15" fill="rgb(217,178,50)"/><text x="22.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (3 samples, 0.33%)</title><rect x="19" y="1684" width="3" height="15" fill="rgb(214,126,20)"/><text x="22.00" y="1694.50"></text></g><g><title>pull_dependencies (jinja2/compiler.py) (2 samples, 0.22%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(238,203,0)"/><text x="23.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1716" width="2" height="15" fill="rgb(219,158,48)"/><text x="23.00" y="1726.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1732" width="2" height="15" fill="rgb(211,224,2)"/><text x="23.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1748" width="2" height="15" fill="rgb(231,18,49)"/><text x="23.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1764" width="2" height="15" fill="rgb(229,59,11)"/><text x="23.00" y="1774.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1780" width="2" height="15" fill="rgb(226,3,51)"/><text x="23.00" y="1790.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1796" width="2" height="15" fill="rgb(231,140,53)"/><text x="23.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1812" width="2" height="15" fill="rgb(251,1,41)"/><text x="23.00" y="1822.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (2 samples, 0.22%)</title><rect x="20" y="1828" width="2" height="15" fill="rgb(217,30,37)"/><text x="23.00" y="1838.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="21" y="1844" width="1" height="15" fill="rgb(233,28,28)"/><text x="24.00" y="1854.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.11%)</title><rect x="21" y="1860" width="1" height="15" fill="rgb(239,190,6)"/><text x="24.00" y="1870.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.11%)</title><rect x="21" y="1876" width="1" height="15" fill="rgb(237,175,2)"/><text x="24.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="19" y="1476" width="5" height="15" fill="rgb(234,227,34)"/><text x="22.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="19" y="1492" width="5" height="15" fill="rgb(251,195,9)"/><text x="22.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="19" y="1508" width="5" height="15" fill="rgb(226,55,0)"/><text x="22.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.44%)</title><rect x="19" y="1524" width="5" height="15" fill="rgb(231,205,47)"/><text x="22.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="19" y="1540" width="5" height="15" fill="rgb(230,117,49)"/><text x="22.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (4 samples, 0.44%)</title><rect x="19" y="1556" width="5" height="15" fill="rgb(220,208,42)"/><text x="22.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (4 samples, 0.44%)</title><rect x="19" y="1572" width="5" height="15" fill="rgb(227,4,43)"/><text x="22.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(213,117,36)"/><text x="25.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(206,70,47)"/><text x="25.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(223,212,6)"/><text x="25.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(217,20,53)"/><text x="25.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(212,217,13)"/><text x="25.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.11%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(217,112,25)"/><text x="25.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1684" width="2" height="15" fill="rgb(211,49,41)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1700" width="2" height="15" fill="rgb(209,67,23)"/><text x="25.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="22" y="1716" width="2" height="15" fill="rgb(226,170,18)"/><text x="25.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1732" width="2" height="15" fill="rgb(247,1,31)"/><text x="25.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1748" width="2" height="15" fill="rgb(236,149,20)"/><text x="25.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="22" y="1764" width="2" height="15" fill="rgb(242,46,4)"/><text x="25.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="484" width="9" height="15" fill="rgb(228,228,37)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="500" width="9" height="15" fill="rgb(240,137,20)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="516" width="9" height="15" fill="rgb(230,204,52)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="532" width="9" height="15" fill="rgb(220,171,14)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="16" y="548" width="9" height="15" fill="rgb(228,147,24)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="564" width="9" height="15" fill="rgb(211,45,23)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 0.76%)</title><rect x="16" y="580" width="9" height="15" fill="rgb(211,36,31)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="596" width="9" height="15" fill="rgb(229,139,51)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="612" width="9" height="15" fill="rgb(211,95,4)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="628" width="9" height="15" fill="rgb(219,70,27)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="16" y="644" width="9" height="15" fill="rgb(231,48,31)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="660" width="9" height="15" fill="rgb(215,141,30)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 0.76%)</title><rect x="16" y="676" width="9" height="15" fill="rgb(241,219,44)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="692" width="9" height="15" fill="rgb(212,139,11)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="708" width="9" height="15" fill="rgb(225,150,29)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="724" width="9" height="15" fill="rgb(224,10,26)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="16" y="740" width="9" height="15" fill="rgb(218,55,32)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="756" width="9" height="15" fill="rgb(229,217,25)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 0.76%)</title><rect x="16" y="772" width="9" height="15" fill="rgb(242,146,20)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="788" width="9" height="15" fill="rgb(222,32,52)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="804" width="9" height="15" fill="rgb(206,32,54)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="820" width="9" height="15" fill="rgb(242,82,0)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="16" y="836" width="9" height="15" fill="rgb(247,149,31)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="852" width="9" height="15" fill="rgb(211,138,7)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 0.76%)</title><rect x="16" y="868" width="9" height="15" fill="rgb(229,40,38)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="884" width="9" height="15" fill="rgb(213,99,45)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="900" width="9" height="15" fill="rgb(212,128,45)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="916" width="9" height="15" fill="rgb(226,137,47)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="932" width="9" height="15" fill="rgb(228,204,38)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="948" width="9" height="15" fill="rgb(226,136,8)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="964" width="9" height="15" fill="rgb(213,135,43)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="16" y="980" width="9" height="15" fill="rgb(229,197,36)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="996" width="9" height="15" fill="rgb(219,152,11)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 0.76%)</title><rect x="16" y="1012" width="9" height="15" fill="rgb(230,173,7)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="1028" width="9" height="15" fill="rgb(237,8,16)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="1044" width="9" height="15" fill="rgb(234,83,54)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="1060" width="9" height="15" fill="rgb(208,171,37)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.76%)</title><rect x="16" y="1076" width="9" height="15" fill="rgb(211,93,17)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.76%)</title><rect x="16" y="1092" width="9" height="15" fill="rgb(218,183,41)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 0.76%)</title><rect x="16" y="1108" width="9" height="15" fill="rgb(243,91,39)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1124" width="6" height="15" fill="rgb(249,146,10)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1140" width="6" height="15" fill="rgb(212,114,8)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1156" width="6" height="15" fill="rgb(224,45,50)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1172" width="6" height="15" fill="rgb(227,58,10)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1188" width="6" height="15" fill="rgb(212,104,53)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="19" y="1204" width="6" height="15" fill="rgb(205,160,3)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1220" width="6" height="15" fill="rgb(227,210,47)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 0.55%)</title><rect x="19" y="1236" width="6" height="15" fill="rgb(243,24,21)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1252" width="6" height="15" fill="rgb(242,64,14)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1268" width="6" height="15" fill="rgb(251,6,49)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1284" width="6" height="15" fill="rgb(208,191,5)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1300" width="6" height="15" fill="rgb(234,32,15)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1316" width="6" height="15" fill="rgb(232,206,22)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="19" y="1332" width="6" height="15" fill="rgb(248,170,46)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1348" width="6" height="15" fill="rgb(216,69,5)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 0.55%)</title><rect x="19" y="1364" width="6" height="15" fill="rgb(245,107,8)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1380" width="6" height="15" fill="rgb(229,198,22)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1396" width="6" height="15" fill="rgb(236,89,16)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1412" width="6" height="15" fill="rgb(210,38,43)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="19" y="1428" width="6" height="15" fill="rgb(209,24,14)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="19" y="1444" width="6" height="15" fill="rgb(213,186,0)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 0.55%)</title><rect x="19" y="1460" width="6" height="15" fill="rgb(237,8,42)"/><text x="22.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="24" y="1476" width="1" height="15" fill="rgb(245,217,40)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.11%)</title><rect x="24" y="1492" width="1" height="15" fill="rgb(228,57,10)"/><text x="27.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.11%)</title><rect x="24" y="1508" width="1" height="15" fill="rgb(223,73,47)"/><text x="27.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.11%)</title><rect x="24" y="1524" width="1" height="15" fill="rgb(234,70,16)"/><text x="27.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.11%)</title><rect x="24" y="1540" width="1" height="15" fill="rgb(244,190,3)"/><text x="27.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="24" y="1556" width="1" height="15" fill="rgb(239,210,44)"/><text x="27.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.11%)</title><rect x="24" y="1572" width="1" height="15" fill="rgb(210,25,50)"/><text x="27.00" y="1582.50"></text></g><g><title>0x7f26ba96540e (?) (1 samples, 0.11%)</title><rect x="25" y="916" width="1" height="15" fill="rgb(216,97,13)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="932" width="1" height="15" fill="rgb(224,43,45)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="948" width="1" height="15" fill="rgb(208,61,47)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(235,33,13)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="980" width="1" height="15" fill="rgb(224,15,52)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="996" width="1" height="15" fill="rgb(245,220,7)"/><text x="28.00" y="1006.50"></text></g><g><title>0x7f26ba71ecd2 (?) (1 samples, 0.11%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(208,89,6)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(219,96,46)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1044" width="1" height="15" fill="rgb(231,0,14)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1060" width="1" height="15" fill="rgb(225,108,44)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1076" width="1" height="15" fill="rgb(229,89,49)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1092" width="1" height="15" fill="rgb(212,108,54)"/><text x="28.00" y="1102.50"></text></g><g><title>0x7f26b9e140e5 (?) (1 samples, 0.11%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(205,145,1)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(242,183,16)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1140" width="1" height="15" fill="rgb(249,53,43)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1156" width="1" height="15" fill="rgb(216,5,40)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1172" width="1" height="15" fill="rgb(212,125,27)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1188" width="1" height="15" fill="rgb(251,161,0)"/><text x="28.00" y="1198.50"></text></g><g><title>0x7f26b9b98e68 (?) (1 samples, 0.11%)</title><rect x="25" y="1204" width="1" height="15" fill="rgb(235,32,43)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1220" width="1" height="15" fill="rgb(238,180,20)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1236" width="1" height="15" fill="rgb(223,215,1)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1252" width="1" height="15" fill="rgb(251,133,42)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1268" width="1" height="15" fill="rgb(232,82,6)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1284" width="1" height="15" fill="rgb(246,34,21)"/><text x="28.00" y="1294.50"></text></g><g><title>0x7f26b99292fb (?) (1 samples, 0.11%)</title><rect x="25" y="1300" width="1" height="15" fill="rgb(245,202,49)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1316" width="1" height="15" fill="rgb(234,119,32)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1332" width="1" height="15" fill="rgb(210,146,43)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1348" width="1" height="15" fill="rgb(223,69,22)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1364" width="1" height="15" fill="rgb(217,167,30)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1380" width="1" height="15" fill="rgb(207,203,44)"/><text x="28.00" y="1390.50"></text></g><g><title>0x7f26b970d153 (?) (1 samples, 0.11%)</title><rect x="25" y="1396" width="1" height="15" fill="rgb(227,39,46)"/><text x="28.00" y="1406.50"></text></g><g><title>0x7f26b970bc13 (?) (1 samples, 0.11%)</title><rect x="25" y="1412" width="1" height="15" fill="rgb(228,195,50)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1428" width="1" height="15" fill="rgb(205,111,39)"/><text x="28.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1444" width="1" height="15" fill="rgb(236,173,24)"/><text x="28.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1460" width="1" height="15" fill="rgb(234,84,11)"/><text x="28.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="25" y="1476" width="1" height="15" fill="rgb(252,170,7)"/><text x="28.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="25" y="1492" width="1" height="15" fill="rgb(237,223,34)"/><text x="28.00" y="1502.50"></text></g><g><title>0x7f26b94a8181 (?) (1 samples, 0.11%)</title><rect x="25" y="1508" width="1" height="15" fill="rgb(207,127,7)"/><text x="28.00" y="1518.50"></text></g><g><title>0x7f26b94ab1c9 (?) (1 samples, 0.11%)</title><rect x="25" y="1524" width="1" height="15" fill="rgb(236,19,44)"/><text x="28.00" y="1534.50"></text></g><g><title>0x7f26b94d7167 (?) (1 samples, 0.11%)</title><rect x="25" y="1540" width="1" height="15" fill="rgb(215,120,26)"/><text x="28.00" y="1550.50"></text></g><g><title>0x7f26b94d2b64 (?) (1 samples, 0.11%)</title><rect x="25" y="1556" width="1" height="15" fill="rgb(219,208,10)"/><text x="28.00" y="1566.50"></text></g><g><title>0x7f26b94b607b (?) (1 samples, 0.11%)</title><rect x="25" y="1572" width="1" height="15" fill="rgb(238,17,53)"/><text x="28.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.11%)</title><rect x="25" y="1588" width="1" height="15" fill="rgb(212,24,35)"/><text x="28.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="1604" width="1" height="15" fill="rgb(227,153,12)"/><text x="28.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="1620" width="1" height="15" fill="rgb(207,136,17)"/><text x="28.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.11%)</title><rect x="25" y="1636" width="1" height="15" fill="rgb(243,48,41)"/><text x="28.00" y="1646.50"></text></g><g><title>get (_collections_abc.py) (1 samples, 0.11%)</title><rect x="25" y="1652" width="1" height="15" fill="rgb(206,209,24)"/><text x="28.00" y="1662.50"></text></g><g><title>__getitem__ (os.py) (1 samples, 0.11%)</title><rect x="25" y="1668" width="1" height="15" fill="rgb(214,91,19)"/><text x="28.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.33%)</title><rect x="25" y="724" width="4" height="15" fill="rgb(225,0,13)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="740" width="4" height="15" fill="rgb(223,180,24)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="756" width="4" height="15" fill="rgb(244,26,11)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="772" width="4" height="15" fill="rgb(232,41,20)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="25" y="788" width="4" height="15" fill="rgb(215,17,4)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="804" width="4" height="15" fill="rgb(251,181,44)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.33%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(223,50,33)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(243,142,25)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(249,81,52)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(231,199,14)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.33%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(245,170,27)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.33%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(253,227,34)"/><text x="28.00" y="910.50"></text></g><g><title>0x7f26ba966403 (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(216,228,27)"/><text x="29.00" y="926.50"></text></g><g><title>0x7f26ba968b8a (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(207,42,24)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(249,208,25)"/><text x="29.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(232,149,53)"/><text x="29.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(228,178,51)"/><text x="29.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(250,216,2)"/><text x="29.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(213,196,12)"/><text x="29.00" y="1022.50"></text></g><g><title>0x7f26b8fafd78 (pandas/_libs/tslibs/parsing.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(227,15,9)"/><text x="29.00" y="1038.50"></text></g><g><title>0x7f26b8fb4c2a (pandas/_libs/tslibs/parsing.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(249,214,51)"/><text x="29.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(213,93,29)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(241,103,50)"/><text x="29.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(213,87,5)"/><text x="29.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(212,50,34)"/><text x="29.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(231,94,32)"/><text x="29.00" y="1134.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py) (2 samples, 0.22%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(208,75,35)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(244,159,0)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(209,177,14)"/><text x="29.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(251,187,6)"/><text x="29.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(240,67,51)"/><text x="29.00" y="1214.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="1220" width="3" height="15" fill="rgb(220,85,39)"/><text x="29.00" y="1230.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="26" y="1236" width="3" height="15" fill="rgb(236,211,37)"/><text x="29.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="772" width="1" height="15" fill="rgb(222,177,14)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="788" width="1" height="15" fill="rgb(242,1,22)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="804" width="1" height="15" fill="rgb(226,213,10)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="820" width="1" height="15" fill="rgb(228,89,30)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="836" width="1" height="15" fill="rgb(217,118,15)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="852" width="1" height="15" fill="rgb(240,46,18)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.11%)</title><rect x="29" y="868" width="1" height="15" fill="rgb(250,186,46)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="884" width="1" height="15" fill="rgb(218,56,38)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="900" width="1" height="15" fill="rgb(225,158,5)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="916" width="1" height="15" fill="rgb(230,52,2)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="932" width="1" height="15" fill="rgb(214,100,12)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="948" width="1" height="15" fill="rgb(232,228,28)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.11%)</title><rect x="29" y="964" width="1" height="15" fill="rgb(253,128,6)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="980" width="1" height="15" fill="rgb(206,52,16)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="996" width="1" height="15" fill="rgb(217,104,33)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1012" width="1" height="15" fill="rgb(222,190,5)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="29" y="1028" width="1" height="15" fill="rgb(217,171,9)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="29" y="1044" width="1" height="15" fill="rgb(209,159,32)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.11%)</title><rect x="29" y="1060" width="1" height="15" fill="rgb(228,167,20)"/><text x="32.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 1.31%)</title><rect x="16" y="340" width="15" height="15" fill="rgb(221,200,39)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.31%)</title><rect x="16" y="356" width="15" height="15" fill="rgb(228,202,32)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.31%)</title><rect x="16" y="372" width="15" height="15" fill="rgb(210,215,52)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.31%)</title><rect x="16" y="388" width="15" height="15" fill="rgb(250,117,10)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.31%)</title><rect x="16" y="404" width="15" height="15" fill="rgb(245,215,45)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.31%)</title><rect x="16" y="420" width="15" height="15" fill="rgb(233,29,19)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (12 samples, 1.31%)</title><rect x="16" y="436" width="15" height="15" fill="rgb(216,218,13)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.31%)</title><rect x="16" y="452" width="15" height="15" fill="rgb(234,16,44)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.31%)</title><rect x="16" y="468" width="15" height="15" fill="rgb(232,58,36)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="484" width="6" height="15" fill="rgb(237,69,48)"/><text x="28.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="25" y="500" width="6" height="15" fill="rgb(205,83,54)"/><text x="28.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="516" width="6" height="15" fill="rgb(246,106,32)"/><text x="28.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 0.55%)</title><rect x="25" y="532" width="6" height="15" fill="rgb(211,54,46)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="548" width="6" height="15" fill="rgb(216,187,23)"/><text x="28.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="564" width="6" height="15" fill="rgb(236,8,3)"/><text x="28.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="580" width="6" height="15" fill="rgb(242,6,49)"/><text x="28.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="25" y="596" width="6" height="15" fill="rgb(222,224,12)"/><text x="28.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="612" width="6" height="15" fill="rgb(252,109,12)"/><text x="28.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 0.55%)</title><rect x="25" y="628" width="6" height="15" fill="rgb(212,216,13)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="644" width="6" height="15" fill="rgb(231,36,24)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="660" width="6" height="15" fill="rgb(244,68,0)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="676" width="6" height="15" fill="rgb(245,219,13)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.55%)</title><rect x="25" y="692" width="6" height="15" fill="rgb(222,112,12)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.55%)</title><rect x="25" y="708" width="6" height="15" fill="rgb(210,189,6)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.22%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(223,159,43)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(246,33,32)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(223,23,20)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="772" width="1" height="15" fill="rgb(241,92,22)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="788" width="1" height="15" fill="rgb(232,112,40)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="804" width="1" height="15" fill="rgb(211,161,20)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="820" width="1" height="15" fill="rgb(208,204,28)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="836" width="1" height="15" fill="rgb(248,6,23)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="852" width="1" height="15" fill="rgb(209,57,16)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="868" width="1" height="15" fill="rgb(230,215,46)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="884" width="1" height="15" fill="rgb(241,217,15)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="900" width="1" height="15" fill="rgb(230,222,1)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.11%)</title><rect x="30" y="916" width="1" height="15" fill="rgb(236,59,53)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="932" width="1" height="15" fill="rgb(245,115,36)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="948" width="1" height="15" fill="rgb(232,79,23)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="964" width="1" height="15" fill="rgb(208,220,12)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="980" width="1" height="15" fill="rgb(237,217,28)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="996" width="1" height="15" fill="rgb(221,9,4)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.11%)</title><rect x="30" y="1012" width="1" height="15" fill="rgb(208,173,7)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1028" width="1" height="15" fill="rgb(238,138,17)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1044" width="1" height="15" fill="rgb(241,103,47)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1060" width="1" height="15" fill="rgb(217,34,12)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1076" width="1" height="15" fill="rgb(215,114,36)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1092" width="1" height="15" fill="rgb(239,130,7)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.11%)</title><rect x="30" y="1108" width="1" height="15" fill="rgb(208,33,20)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1124" width="1" height="15" fill="rgb(235,212,12)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1140" width="1" height="15" fill="rgb(244,98,22)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1156" width="1" height="15" fill="rgb(209,109,7)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1172" width="1" height="15" fill="rgb(215,64,4)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1188" width="1" height="15" fill="rgb(215,151,40)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="1204" width="1" height="15" fill="rgb(254,95,38)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1220" width="1" height="15" fill="rgb(251,58,20)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1236" width="1" height="15" fill="rgb(244,34,24)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1252" width="1" height="15" fill="rgb(216,104,11)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1268" width="1" height="15" fill="rgb(211,153,11)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1284" width="1" height="15" fill="rgb(236,78,9)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.11%)</title><rect x="30" y="1300" width="1" height="15" fill="rgb(237,61,37)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1316" width="1" height="15" fill="rgb(205,70,34)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1332" width="1" height="15" fill="rgb(239,203,8)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1348" width="1" height="15" fill="rgb(253,111,16)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1364" width="1" height="15" fill="rgb(240,22,12)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1380" width="1" height="15" fill="rgb(241,82,43)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.11%)</title><rect x="30" y="1396" width="1" height="15" fill="rgb(211,94,23)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1412" width="1" height="15" fill="rgb(248,97,46)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1428" width="1" height="15" fill="rgb(228,22,41)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="30" y="1444" width="1" height="15" fill="rgb(228,100,1)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1460" width="1" height="15" fill="rgb(229,195,17)"/><text x="33.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1476" width="1" height="15" fill="rgb(240,181,5)"/><text x="33.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="30" y="1492" width="1" height="15" fill="rgb(253,126,51)"/><text x="33.00" y="1502.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.11%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(252,189,32)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(248,60,1)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(218,212,16)"/><text x="34.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(242,211,5)"/><text x="34.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(225,38,34)"/><text x="34.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(251,0,12)"/><text x="34.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.11%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(241,227,40)"/><text x="34.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(222,38,11)"/><text x="34.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="996" width="2" height="15" fill="rgb(206,155,44)"/><text x="34.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1012" width="2" height="15" fill="rgb(223,50,2)"/><text x="34.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1028" width="2" height="15" fill="rgb(213,16,26)"/><text x="34.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1044" width="2" height="15" fill="rgb(247,153,25)"/><text x="34.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py) (1 samples, 0.11%)</title><rect x="31" y="1060" width="2" height="15" fill="rgb(228,122,22)"/><text x="34.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1076" width="2" height="15" fill="rgb(253,43,0)"/><text x="34.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1092" width="2" height="15" fill="rgb(228,159,45)"/><text x="34.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1108" width="2" height="15" fill="rgb(233,175,52)"/><text x="34.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(214,186,1)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(247,21,47)"/><text x="34.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py) (1 samples, 0.11%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(216,191,21)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(215,187,13)"/><text x="34.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(208,34,52)"/><text x="34.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(254,34,40)"/><text x="34.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(214,192,15)"/><text x="34.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(216,57,17)"/><text x="34.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/chardistribution.py) (1 samples, 0.11%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(229,200,32)"/><text x="34.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(219,160,17)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(233,127,34)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(238,28,27)"/><text x="34.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(230,39,12)"/><text x="34.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1332" width="2" height="15" fill="rgb(225,44,26)"/><text x="34.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1348" width="2" height="15" fill="rgb(228,190,22)"/><text x="34.00" y="1358.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1364" width="2" height="15" fill="rgb(212,79,40)"/><text x="34.00" y="1374.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1380" width="2" height="15" fill="rgb(240,143,33)"/><text x="34.00" y="1390.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="31" y="1396" width="2" height="15" fill="rgb(247,180,47)"/><text x="34.00" y="1406.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.11%)</title><rect x="31" y="1412" width="2" height="15" fill="rgb(235,92,30)"/><text x="34.00" y="1422.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.11%)</title><rect x="31" y="1428" width="2" height="15" fill="rgb(240,141,9)"/><text x="34.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (14 samples, 1.53%)</title><rect x="16" y="244" width="18" height="15" fill="rgb(231,58,33)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.53%)</title><rect x="16" y="260" width="18" height="15" fill="rgb(217,174,4)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.53%)</title><rect x="16" y="276" width="18" height="15" fill="rgb(209,122,51)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.53%)</title><rect x="16" y="292" width="18" height="15" fill="rgb(241,200,41)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.53%)</title><rect x="16" y="308" width="18" height="15" fill="rgb(224,220,29)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.53%)</title><rect x="16" y="324" width="18" height="15" fill="rgb(245,38,47)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.22%)</title><rect x="31" y="340" width="3" height="15" fill="rgb(238,218,3)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="356" width="3" height="15" fill="rgb(207,61,18)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="372" width="3" height="15" fill="rgb(233,202,8)"/><text x="34.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="388" width="3" height="15" fill="rgb(212,191,45)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="404" width="3" height="15" fill="rgb(213,9,18)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="420" width="3" height="15" fill="rgb(251,189,14)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="436" width="3" height="15" fill="rgb(208,132,47)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="452" width="3" height="15" fill="rgb(233,121,33)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="468" width="3" height="15" fill="rgb(205,94,41)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.22%)</title><rect x="31" y="484" width="3" height="15" fill="rgb(216,201,22)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(211,164,2)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="516" width="3" height="15" fill="rgb(243,46,50)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="532" width="3" height="15" fill="rgb(240,119,44)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="548" width="3" height="15" fill="rgb(206,38,50)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="564" width="3" height="15" fill="rgb(251,219,27)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.22%)</title><rect x="31" y="580" width="3" height="15" fill="rgb(242,9,8)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="596" width="3" height="15" fill="rgb(248,96,19)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="612" width="3" height="15" fill="rgb(237,41,39)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="628" width="3" height="15" fill="rgb(253,132,46)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="644" width="3" height="15" fill="rgb(224,105,22)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="660" width="3" height="15" fill="rgb(215,30,37)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.22%)</title><rect x="31" y="676" width="3" height="15" fill="rgb(221,168,22)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="692" width="3" height="15" fill="rgb(233,82,1)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="708" width="3" height="15" fill="rgb(228,48,36)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="724" width="3" height="15" fill="rgb(208,148,54)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="740" width="3" height="15" fill="rgb(210,28,33)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="756" width="3" height="15" fill="rgb(213,29,48)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.22%)</title><rect x="31" y="772" width="3" height="15" fill="rgb(223,29,13)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="788" width="3" height="15" fill="rgb(229,179,42)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(249,135,32)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(252,207,14)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.22%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(229,113,18)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.22%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(236,79,17)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.11%)</title><rect x="33" y="868" width="1" height="15" fill="rgb(211,52,42)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="884" width="1" height="15" fill="rgb(245,77,52)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="900" width="1" height="15" fill="rgb(208,55,4)"/><text x="36.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="916" width="1" height="15" fill="rgb(251,223,2)"/><text x="36.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="932" width="1" height="15" fill="rgb(252,37,11)"/><text x="36.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="948" width="1" height="15" fill="rgb(253,12,34)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.11%)</title><rect x="33" y="964" width="1" height="15" fill="rgb(233,66,10)"/><text x="36.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="980" width="1" height="15" fill="rgb(226,174,41)"/><text x="36.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="996" width="1" height="15" fill="rgb(207,120,53)"/><text x="36.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1012" width="1" height="15" fill="rgb(234,124,38)"/><text x="36.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="1028" width="1" height="15" fill="rgb(244,135,6)"/><text x="36.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1044" width="1" height="15" fill="rgb(229,29,54)"/><text x="36.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.11%)</title><rect x="33" y="1060" width="1" height="15" fill="rgb(208,191,26)"/><text x="36.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1076" width="1" height="15" fill="rgb(249,171,36)"/><text x="36.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1092" width="1" height="15" fill="rgb(238,52,45)"/><text x="36.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1108" width="1" height="15" fill="rgb(223,177,19)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1124" width="1" height="15" fill="rgb(236,219,0)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1140" width="1" height="15" fill="rgb(228,19,49)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1156" width="1" height="15" fill="rgb(213,52,36)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="1172" width="1" height="15" fill="rgb(219,76,1)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1188" width="1" height="15" fill="rgb(254,6,30)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.11%)</title><rect x="33" y="1204" width="1" height="15" fill="rgb(236,216,5)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1220" width="1" height="15" fill="rgb(241,175,17)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1236" width="1" height="15" fill="rgb(223,60,40)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1252" width="1" height="15" fill="rgb(223,96,25)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="1268" width="1" height="15" fill="rgb(206,120,31)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1284" width="1" height="15" fill="rgb(237,117,32)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.11%)</title><rect x="33" y="1300" width="1" height="15" fill="rgb(233,207,32)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1316" width="1" height="15" fill="rgb(253,176,30)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1332" width="1" height="15" fill="rgb(223,24,46)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1348" width="1" height="15" fill="rgb(248,137,52)"/><text x="36.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="33" y="1364" width="1" height="15" fill="rgb(206,91,4)"/><text x="36.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="33" y="1380" width="1" height="15" fill="rgb(249,218,34)"/><text x="36.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.11%)</title><rect x="33" y="1396" width="1" height="15" fill="rgb(248,40,35)"/><text x="36.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.11%)</title><rect x="33" y="1412" width="1" height="15" fill="rgb(249,66,7)"/><text x="36.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.11%)</title><rect x="33" y="1428" width="1" height="15" fill="rgb(246,223,35)"/><text x="36.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="33" y="1444" width="1" height="15" fill="rgb(217,97,41)"/><text x="36.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.11%)</title><rect x="33" y="1460" width="1" height="15" fill="rgb(211,100,16)"/><text x="36.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="33" y="1476" width="1" height="15" fill="rgb(234,152,46)"/><text x="36.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.11%)</title><rect x="33" y="1492" width="1" height="15" fill="rgb(222,78,27)"/><text x="36.00" y="1502.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.11%)</title><rect x="34" y="244" width="1" height="15" fill="rgb(232,16,18)"/><text x="37.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="260" width="1" height="15" fill="rgb(253,73,20)"/><text x="37.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(223,153,15)"/><text x="37.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="292" width="1" height="15" fill="rgb(241,61,7)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="308" width="1" height="15" fill="rgb(225,218,7)"/><text x="37.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="324" width="1" height="15" fill="rgb(236,131,49)"/><text x="37.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="34" y="340" width="1" height="15" fill="rgb(248,9,13)"/><text x="37.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="356" width="1" height="15" fill="rgb(240,22,13)"/><text x="37.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py) (1 samples, 0.11%)</title><rect x="34" y="372" width="1" height="15" fill="rgb(239,56,34)"/><text x="37.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="388" width="1" height="15" fill="rgb(221,117,8)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="404" width="1" height="15" fill="rgb(236,62,4)"/><text x="37.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="420" width="1" height="15" fill="rgb(225,163,24)"/><text x="37.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="34" y="436" width="1" height="15" fill="rgb(248,210,23)"/><text x="37.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="34" y="452" width="1" height="15" fill="rgb(243,167,53)"/><text x="37.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/fft/_pocketfft.py) (1 samples, 0.11%)</title><rect x="34" y="468" width="1" height="15" fill="rgb(237,98,44)"/><text x="37.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.11%)</title><rect x="34" y="484" width="1" height="15" fill="rgb(249,98,26)"/><text x="37.00" y="494.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.11%)</title><rect x="34" y="500" width="1" height="15" fill="rgb(218,74,43)"/><text x="37.00" y="510.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.11%)</title><rect x="34" y="516" width="1" height="15" fill="rgb(219,133,0)"/><text x="37.00" y="526.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.11%)</title><rect x="34" y="532" width="1" height="15" fill="rgb(226,93,42)"/><text x="37.00" y="542.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.11%)</title><rect x="34" y="548" width="1" height="15" fill="rgb(212,48,45)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.29%)</title><rect x="10" y="68" width="27" height="15" fill="rgb(207,92,53)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.29%)</title><rect x="10" y="84" width="27" height="15" fill="rgb(251,30,43)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.29%)</title><rect x="10" y="100" width="27" height="15" fill="rgb(222,210,20)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 2.29%)</title><rect x="10" y="116" width="27" height="15" fill="rgb(237,186,42)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.29%)</title><rect x="10" y="132" width="27" height="15" fill="rgb(218,205,29)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (21 samples, 2.29%)</title><rect x="10" y="148" width="27" height="15" fill="rgb(232,154,7)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.29%)</title><rect x="10" y="164" width="27" height="15" fill="rgb(222,135,21)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 2.29%)</title><rect x="10" y="180" width="27" height="15" fill="rgb(206,196,15)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.74%)</title><rect x="16" y="196" width="21" height="15" fill="rgb(243,223,48)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 1.74%)</title><rect x="16" y="212" width="21" height="15" fill="rgb(251,44,45)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.74%)</title><rect x="16" y="228" width="21" height="15" fill="rgb(215,11,3)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(243,143,10)"/><text x="38.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(254,120,37)"/><text x="38.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(242,191,26)"/><text x="38.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="292" width="2" height="15" fill="rgb(234,196,9)"/><text x="38.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="308" width="2" height="15" fill="rgb(220,210,12)"/><text x="38.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="324" width="2" height="15" fill="rgb(240,149,5)"/><text x="38.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.11%)</title><rect x="35" y="340" width="2" height="15" fill="rgb(226,2,39)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="356" width="2" height="15" fill="rgb(205,61,14)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="372" width="2" height="15" fill="rgb(211,10,19)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="388" width="2" height="15" fill="rgb(232,205,41)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="404" width="2" height="15" fill="rgb(235,75,35)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="420" width="2" height="15" fill="rgb(218,59,32)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="436" width="2" height="15" fill="rgb(231,142,7)"/><text x="38.00" y="446.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="452" width="2" height="15" fill="rgb(230,202,15)"/><text x="38.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="468" width="2" height="15" fill="rgb(243,187,47)"/><text x="38.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="484" width="2" height="15" fill="rgb(215,226,22)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="500" width="2" height="15" fill="rgb(243,87,22)"/><text x="38.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="516" width="2" height="15" fill="rgb(222,103,25)"/><text x="38.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="532" width="2" height="15" fill="rgb(224,116,42)"/><text x="38.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="548" width="2" height="15" fill="rgb(233,59,22)"/><text x="38.00" y="558.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py) (1 samples, 0.11%)</title><rect x="35" y="564" width="2" height="15" fill="rgb(249,222,12)"/><text x="38.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="580" width="2" height="15" fill="rgb(225,191,11)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="596" width="2" height="15" fill="rgb(244,187,9)"/><text x="38.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="612" width="2" height="15" fill="rgb(243,4,28)"/><text x="38.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="628" width="2" height="15" fill="rgb(226,193,5)"/><text x="38.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="644" width="2" height="15" fill="rgb(234,111,5)"/><text x="38.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/_unsupervised.py) (1 samples, 0.11%)</title><rect x="35" y="660" width="2" height="15" fill="rgb(205,137,20)"/><text x="38.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="676" width="2" height="15" fill="rgb(210,88,34)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="692" width="2" height="15" fill="rgb(210,0,10)"/><text x="38.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="708" width="2" height="15" fill="rgb(223,27,27)"/><text x="38.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="724" width="2" height="15" fill="rgb(224,211,30)"/><text x="38.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="740" width="2" height="15" fill="rgb(245,62,42)"/><text x="38.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.11%)</title><rect x="35" y="756" width="2" height="15" fill="rgb(209,210,30)"/><text x="38.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="772" width="2" height="15" fill="rgb(241,182,41)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="788" width="2" height="15" fill="rgb(220,165,28)"/><text x="38.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="35" y="804" width="2" height="15" fill="rgb(249,10,5)"/><text x="38.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="820" width="2" height="15" fill="rgb(242,48,20)"/><text x="38.00" y="830.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="836" width="2" height="15" fill="rgb(244,100,53)"/><text x="38.00" y="846.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.11%)</title><rect x="35" y="852" width="2" height="15" fill="rgb(211,128,14)"/><text x="38.00" y="862.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="35" y="868" width="2" height="15" fill="rgb(251,127,52)"/><text x="38.00" y="878.50"></text></g><g><title>0x7f26a50f2ff9 (?) (1 samples, 0.11%)</title><rect x="42" y="212" width="1" height="15" fill="rgb(242,129,48)"/><text x="45.00" y="222.50"></text></g><g><title>0x7f26a50edef6 (?) (1 samples, 0.11%)</title><rect x="42" y="228" width="1" height="15" fill="rgb(232,117,7)"/><text x="45.00" y="238.50"></text></g><g><title>0x7f26a50e2962 (?) (1 samples, 0.11%)</title><rect x="42" y="244" width="1" height="15" fill="rgb(253,72,47)"/><text x="45.00" y="254.50"></text></g><g><title>0x7f26a51167a7 (?) (1 samples, 0.11%)</title><rect x="42" y="260" width="1" height="15" fill="rgb(251,77,10)"/><text x="45.00" y="270.50"></text></g><g><title>0x7f26a5116379 (?) (1 samples, 0.11%)</title><rect x="42" y="276" width="1" height="15" fill="rgb(213,90,31)"/><text x="45.00" y="286.50"></text></g><g><title>0x7f26a55748b8 (?) (1 samples, 0.11%)</title><rect x="42" y="292" width="1" height="15" fill="rgb(241,49,34)"/><text x="45.00" y="302.50"></text></g><g><title>0x7f26a5572c7f (?) (1 samples, 0.11%)</title><rect x="42" y="308" width="1" height="15" fill="rgb(250,162,42)"/><text x="45.00" y="318.50"></text></g><g><title>0x7f26a558599c (?) (1 samples, 0.11%)</title><rect x="42" y="324" width="1" height="15" fill="rgb(227,31,44)"/><text x="45.00" y="334.50"></text></g><g><title>0x7f26a5200ac6 (?) (1 samples, 0.11%)</title><rect x="42" y="340" width="1" height="15" fill="rgb(238,77,45)"/><text x="45.00" y="350.50"></text></g><g><title>0x7f26a5200a60 (?) (1 samples, 0.11%)</title><rect x="42" y="356" width="1" height="15" fill="rgb(251,190,24)"/><text x="45.00" y="366.50"></text></g><g><title>0x7f26a51fff3c (?) (1 samples, 0.11%)</title><rect x="42" y="372" width="1" height="15" fill="rgb(242,77,21)"/><text x="45.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="44" y="340" width="2" height="15" fill="rgb(221,224,32)"/><text x="47.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="44" y="356" width="2" height="15" fill="rgb(212,96,33)"/><text x="47.00" y="366.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="46" y="340" width="3" height="15" fill="rgb(241,12,41)"/><text x="49.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="356" width="1" height="15" fill="rgb(221,181,17)"/><text x="51.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="372" width="1" height="15" fill="rgb(235,95,8)"/><text x="51.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="388" width="1" height="15" fill="rgb(237,149,44)"/><text x="51.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="404" width="1" height="15" fill="rgb(211,182,1)"/><text x="51.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="420" width="1" height="15" fill="rgb(228,193,42)"/><text x="51.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="436" width="1" height="15" fill="rgb(206,27,53)"/><text x="51.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="452" width="1" height="15" fill="rgb(208,132,20)"/><text x="51.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="468" width="1" height="15" fill="rgb(238,108,6)"/><text x="51.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="48" y="484" width="1" height="15" fill="rgb(205,76,4)"/><text x="51.00" y="494.50"></text></g><g><title>0x7f26e54436a0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="48" y="500" width="1" height="15" fill="rgb(229,218,46)"/><text x="51.00" y="510.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="49" y="340" width="2" height="15" fill="rgb(229,73,0)"/><text x="52.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="49" y="356" width="2" height="15" fill="rgb(233,23,42)"/><text x="52.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;int, int&gt;, onnxruntime::TBroadcastOutput&lt;bool&gt;, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="49" y="372" width="2" height="15" fill="rgb(254,78,51)"/><text x="52.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="51" y="340" width="1" height="15" fill="rgb(209,168,21)"/><text x="54.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="51" y="356" width="1" height="15" fill="rgb(247,23,52)"/><text x="54.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="51" y="372" width="1" height="15" fill="rgb(225,147,35)"/><text x="54.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="51" y="388" width="1" height="15" fill="rgb(251,161,8)"/><text x="54.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="51" y="404" width="1" height="15" fill="rgb(244,128,47)"/><text x="54.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="51" y="420" width="1" height="15" fill="rgb(219,115,19)"/><text x="54.00" y="430.50"></text></g><g><title>0x7f26e5436028 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="51" y="436" width="1" height="15" fill="rgb(208,136,44)"/><text x="54.00" y="446.50"></text></g><g><title>0x7f26e5433ca7 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="51" y="452" width="1" height="15" fill="rgb(217,140,13)"/><text x="54.00" y="462.50"></text></g><g><title>0x7f26e5433acd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="51" y="468" width="1" height="15" fill="rgb(241,129,32)"/><text x="54.00" y="478.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="52" y="340" width="1" height="15" fill="rgb(220,212,16)"/><text x="55.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="53" y="340" width="2" height="15" fill="rgb(243,200,47)"/><text x="56.00" y="350.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="53" y="356" width="2" height="15" fill="rgb(235,79,52)"/><text x="56.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="53" y="372" width="2" height="15" fill="rgb(220,87,7)"/><text x="56.00" y="382.50"></text></g><g><title>0x7f26e5434d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="53" y="388" width="2" height="15" fill="rgb(247,216,24)"/><text x="56.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.31%)</title><rect x="55" y="340" width="15" height="15" fill="rgb(237,71,31)"/><text x="58.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.85%)</title><rect x="70" y="372" width="22" height="15" fill="rgb(229,167,49)"/><text x="73.00" y="382.50">o..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.98%)</title><rect x="80" y="388" width="12" height="15" fill="rgb(254,43,28)"/><text x="83.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.96%)</title><rect x="70" y="340" width="23" height="15" fill="rgb(206,47,50)"/><text x="73.00" y="350.50">o..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 1.96%)</title><rect x="70" y="356" width="23" height="15" fill="rgb(242,198,43)"/><text x="73.00" y="366.50">o..</text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2247] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="92" y="372" width="1" height="15" fill="rgb(233,134,32)"/><text x="95.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="92" y="388" width="1" height="15" fill="rgb(246,166,44)"/><text x="95.00" y="398.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.33%)</title><rect x="93" y="340" width="4" height="15" fill="rgb(225,212,2)"/><text x="96.00" y="350.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.20%)</title><rect x="97" y="340" width="14" height="15" fill="rgb(246,41,39)"/><text x="100.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.20%)</title><rect x="97" y="356" width="14" height="15" fill="rgb(226,148,15)"/><text x="100.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.20%)</title><rect x="97" y="372" width="14" height="15" fill="rgb(211,219,0)"/><text x="100.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.65%)</title><rect x="103" y="388" width="8" height="15" fill="rgb(238,180,53)"/><text x="106.00" y="398.50"></text></g><g><title>0x7f26e543499b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="111" y="372" width="1" height="15" fill="rgb(233,67,12)"/><text x="114.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="111" y="340" width="3" height="15" fill="rgb(220,157,14)"/><text x="114.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="111" y="356" width="3" height="15" fill="rgb(224,218,23)"/><text x="114.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="112" y="372" width="2" height="15" fill="rgb(212,226,38)"/><text x="115.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="168" y="356" width="1" height="15" fill="rgb(221,101,11)"/><text x="171.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="168" y="372" width="1" height="15" fill="rgb(239,210,19)"/><text x="171.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="168" y="388" width="1" height="15" fill="rgb(242,138,23)"/><text x="171.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="168" y="404" width="1" height="15" fill="rgb(250,79,49)"/><text x="171.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="168" y="420" width="1" height="15" fill="rgb(254,0,2)"/><text x="171.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="168" y="436" width="1" height="15" fill="rgb(227,101,2)"/><text x="171.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="169" y="356" width="1" height="15" fill="rgb(233,131,17)"/><text x="172.00" y="366.50"></text></g><g><title>0x7f26a50b9930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="237" y="388" width="3" height="15" fill="rgb(247,174,16)"/><text x="240.00" y="398.50"></text></g><g><title>0x7f26a50baba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="240" y="388" width="1" height="15" fill="rgb(225,9,26)"/><text x="243.00" y="398.50"></text></g><g><title>0x7f26d4f00d50 (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="248" y="404" width="2" height="15" fill="rgb(231,124,26)"/><text x="251.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (24 samples, 2.62%)</title><rect x="241" y="388" width="31" height="15" fill="rgb(234,100,54)"/><text x="244.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (17 samples, 1.85%)</title><rect x="250" y="404" width="22" height="15" fill="rgb(253,52,12)"/><text x="253.00" y="414.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 10.58%)</title><rect x="170" y="356" width="125" height="15" fill="rgb(221,101,40)"/><text x="173.00" y="366.50">onnxruntime::ml..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 6.43%)</title><rect x="219" y="372" width="76" height="15" fill="rgb(246,38,19)"/><text x="222.00" y="382.50">std::_Rb..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (18 samples, 1.96%)</title><rect x="272" y="388" width="23" height="15" fill="rgb(234,168,12)"/><text x="275.00" y="398.50">s..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="295" y="356" width="7" height="15" fill="rgb(215,161,21)"/><text x="298.00" y="366.50"></text></g><g><title>0x7f26a50b9850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="300" y="372" width="2" height="15" fill="rgb(244,85,42)"/><text x="303.00" y="382.50"></text></g><g><title>0x7f26e5434906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="308" y="372" width="1" height="15" fill="rgb(220,56,34)"/><text x="311.00" y="382.50"></text></g><g><title>0x7f26e5434945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="309" y="372" width="2" height="15" fill="rgb(217,48,18)"/><text x="312.00" y="382.50"></text></g><g><title>0x7f26e5434957 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="311" y="372" width="1" height="15" fill="rgb(205,113,2)"/><text x="314.00" y="382.50"></text></g><g><title>0x7f26e5434961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="312" y="372" width="1" height="15" fill="rgb(236,104,40)"/><text x="315.00" y="382.50"></text></g><g><title>0x7f26e5434965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="313" y="372" width="1" height="15" fill="rgb(236,141,11)"/><text x="316.00" y="382.50"></text></g><g><title>0x7f26e543496a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="314" y="372" width="2" height="15" fill="rgb(232,141,49)"/><text x="317.00" y="382.50"></text></g><g><title>0x7f26e5434982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="316" y="372" width="1" height="15" fill="rgb(214,59,16)"/><text x="319.00" y="382.50"></text></g><g><title>0x7f26e5434991 (libc-2.29.so) (3 samples, 0.33%)</title><rect x="317" y="372" width="4" height="15" fill="rgb(213,126,17)"/><text x="320.00" y="382.50"></text></g><g><title>0x7f26e5434998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="321" y="372" width="1" height="15" fill="rgb(232,76,45)"/><text x="324.00" y="382.50"></text></g><g><title>0x7f26e5434a41 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="322" y="372" width="1" height="15" fill="rgb(240,161,10)"/><text x="325.00" y="382.50"></text></g><g><title>0x7f26e5434a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(237,54,17)"/><text x="326.00" y="382.50"></text></g><g><title>0x7f26e5434a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="325" y="372" width="1" height="15" fill="rgb(240,64,5)"/><text x="328.00" y="382.50"></text></g><g><title>0x7f26e5434bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="326" y="372" width="1" height="15" fill="rgb(216,71,6)"/><text x="329.00" y="382.50"></text></g><g><title>0x7f26e5434be8 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="327" y="372" width="3" height="15" fill="rgb(224,91,22)"/><text x="330.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (7 samples, 0.76%)</title><rect x="330" y="372" width="9" height="15" fill="rgb(247,51,2)"/><text x="333.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="339" y="372" width="1" height="15" fill="rgb(251,31,42)"/><text x="342.00" y="382.50"></text></g><g><title>0x7f26e5434900 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="352" y="388" width="1" height="15" fill="rgb(238,205,30)"/><text x="355.00" y="398.50"></text></g><g><title>0x7f26e543490e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="353" y="388" width="1" height="15" fill="rgb(233,69,33)"/><text x="356.00" y="398.50"></text></g><g><title>0x7f26e5434922 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="354" y="388" width="2" height="15" fill="rgb(238,177,23)"/><text x="357.00" y="398.50"></text></g><g><title>0x7f26e543494f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="356" y="388" width="1" height="15" fill="rgb(232,66,23)"/><text x="359.00" y="398.50"></text></g><g><title>0x7f26e543498c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="357" y="388" width="1" height="15" fill="rgb(252,104,6)"/><text x="360.00" y="398.50"></text></g><g><title>0x7f26e5434991 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="358" y="388" width="3" height="15" fill="rgb(222,171,40)"/><text x="361.00" y="398.50"></text></g><g><title>0x7f26e5434a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="361" y="388" width="1" height="15" fill="rgb(216,45,36)"/><text x="364.00" y="398.50"></text></g><g><title>0x7f26e5434bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="362" y="388" width="1" height="15" fill="rgb(232,103,22)"/><text x="365.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (56 samples, 6.11%)</title><rect x="302" y="356" width="72" height="15" fill="rgb(228,41,44)"/><text x="305.00" y="366.50">std::_Rb..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 2.84%)</title><rect x="340" y="372" width="34" height="15" fill="rgb(227,208,2)"/><text x="343.00" y="382.50">st..</text></g><g><title>free (libc-2.29.so) (8 samples, 0.87%)</title><rect x="363" y="388" width="11" height="15" fill="rgb(246,75,6)"/><text x="366.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (209 samples, 22.79%)</title><rect x="114" y="340" width="269" height="15" fill="rgb(219,135,1)"/><text x="117.00" y="350.50">onnxruntime::ml::TreeEnsembleClassi..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (7 samples, 0.76%)</title><rect x="374" y="356" width="9" height="15" fill="rgb(217,93,0)"/><text x="377.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 29.33%)</title><rect x="43" y="260" width="346" height="15" fill="rgb(233,4,4)"/><text x="46.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 29.33%)</title><rect x="43" y="276" width="346" height="15" fill="rgb(226,192,52)"/><text x="46.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 29.33%)</title><rect x="43" y="292" width="346" height="15" fill="rgb(208,206,7)"/><text x="46.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 29.33%)</title><rect x="43" y="308" width="346" height="15" fill="rgb(235,192,5)"/><text x="46.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 29.33%)</title><rect x="43" y="324" width="346" height="15" fill="rgb(219,56,23)"/><text x="46.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.55%)</title><rect x="383" y="340" width="6" height="15" fill="rgb(207,76,11)"/><text x="386.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.44%)</title><rect x="384" y="356" width="5" height="15" fill="rgb(230,27,27)"/><text x="387.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.44%)</title><rect x="384" y="372" width="5" height="15" fill="rgb(232,23,52)"/><text x="387.00" y="382.50"></text></g><g><title>0x7f26e5436478 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="388" y="388" width="1" height="15" fill="rgb(242,144,39)"/><text x="391.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="389" y="260" width="3" height="15" fill="rgb(242,205,13)"/><text x="392.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="390" y="276" width="2" height="15" fill="rgb(221,89,5)"/><text x="393.00" y="286.50"></text></g><g><title>0x7f26e54349ed (libc-2.29.so) (1 samples, 0.11%)</title><rect x="392" y="292" width="1" height="15" fill="rgb(250,67,45)"/><text x="395.00" y="302.50"></text></g><g><title>0x7f26e5434d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="393" y="292" width="1" height="15" fill="rgb(241,149,30)"/><text x="396.00" y="302.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (280 samples, 30.53%)</title><rect x="37" y="100" width="360" height="15" fill="rgb(233,100,23)"/><text x="40.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_6..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (276 samples, 30.10%)</title><rect x="42" y="116" width="355" height="15" fill="rgb(231,103,19)"/><text x="45.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (276 samples, 30.10%)</title><rect x="42" y="132" width="355" height="15" fill="rgb(213,222,23)"/><text x="45.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (276 samples, 30.10%)</title><rect x="42" y="148" width="355" height="15" fill="rgb(254,178,48)"/><text x="45.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (276 samples, 30.10%)</title><rect x="42" y="164" width="355" height="15" fill="rgb(241,21,38)"/><text x="45.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (276 samples, 30.10%)</title><rect x="42" y="180" width="355" height="15" fill="rgb(242,185,20)"/><text x="45.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (276 samples, 30.10%)</title><rect x="42" y="196" width="355" height="15" fill="rgb(235,105,49)"/><text x="45.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (275 samples, 29.99%)</title><rect x="43" y="212" width="354" height="15" fill="rgb(253,61,31)"/><text x="46.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (275 samples, 29.99%)</title><rect x="43" y="228" width="354" height="15" fill="rgb(249,65,19)"/><text x="46.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (275 samples, 29.99%)</title><rect x="43" y="244" width="354" height="15" fill="rgb(222,101,13)"/><text x="46.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="392" y="260" width="5" height="15" fill="rgb(207,154,24)"/><text x="395.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.44%)</title><rect x="392" y="276" width="5" height="15" fill="rgb(251,193,48)"/><text x="395.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.22%)</title><rect x="394" y="292" width="3" height="15" fill="rgb(231,9,18)"/><text x="397.00" y="302.50"></text></g><g><title>0x7f26e5434d07 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="396" y="308" width="1" height="15" fill="rgb(238,101,5)"/><text x="399.00" y="318.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (281 samples, 30.64%)</title><rect x="37" y="68" width="361" height="15" fill="rgb(206,51,17)"/><text x="40.00" y="78.50">profile_ort (bench_AdaBoostClassifier_default_b_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (281 samples, 30.64%)</title><rect x="37" y="84" width="361" height="15" fill="rgb(230,48,25)"/><text x="40.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="397" y="100" width="1" height="15" fill="rgb(208,37,2)"/><text x="400.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="397" y="116" width="1" height="15" fill="rgb(228,61,1)"/><text x="400.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.11%)</title><rect x="397" y="132" width="1" height="15" fill="rgb(233,94,1)"/><text x="400.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.11%)</title><rect x="397" y="148" width="1" height="15" fill="rgb(206,195,12)"/><text x="400.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.11%)</title><rect x="397" y="164" width="1" height="15" fill="rgb(233,7,1)"/><text x="400.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="397" y="180" width="1" height="15" fill="rgb(205,113,8)"/><text x="400.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="397" y="196" width="1" height="15" fill="rgb(221,190,24)"/><text x="400.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.11%)</title><rect x="397" y="212" width="1" height="15" fill="rgb(254,147,43)"/><text x="400.00" y="222.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="397" y="228" width="1" height="15" fill="rgb(240,195,41)"/><text x="400.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.11%)</title><rect x="397" y="244" width="1" height="15" fill="rgb(248,1,41)"/><text x="400.00" y="254.50"></text></g><g><title>match (re.py) (1 samples, 0.11%)</title><rect x="397" y="260" width="1" height="15" fill="rgb(227,21,44)"/><text x="400.00" y="270.50"></text></g><g><title>0x7f26e54551d6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="446" y="196" width="1" height="15" fill="rgb(244,173,28)"/><text x="449.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (4 samples, 0.44%)</title><rect x="447" y="196" width="5" height="15" fill="rgb(224,211,23)"/><text x="450.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (1 samples, 0.11%)</title><rect x="457" y="212" width="2" height="15" fill="rgb(213,69,10)"/><text x="460.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="457" y="228" width="2" height="15" fill="rgb(244,49,44)"/><text x="460.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.11%)</title><rect x="457" y="244" width="2" height="15" fill="rgb(250,130,6)"/><text x="460.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="457" y="260" width="2" height="15" fill="rgb(208,75,14)"/><text x="460.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(214,109,45)"/><text x="460.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="457" y="292" width="2" height="15" fill="rgb(240,198,52)"/><text x="460.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.11%)</title><rect x="457" y="308" width="2" height="15" fill="rgb(219,136,42)"/><text x="460.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py) (1 samples, 0.11%)</title><rect x="459" y="212" width="1" height="15" fill="rgb(221,212,29)"/><text x="462.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="459" y="228" width="1" height="15" fill="rgb(251,152,26)"/><text x="462.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="459" y="244" width="1" height="15" fill="rgb(237,195,16)"/><text x="462.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="459" y="260" width="1" height="15" fill="rgb(218,6,47)"/><text x="462.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="459" y="276" width="1" height="15" fill="rgb(214,192,29)"/><text x="462.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="459" y="292" width="1" height="15" fill="rgb(219,35,7)"/><text x="462.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.33%)</title><rect x="460" y="212" width="4" height="15" fill="rgb(253,53,47)"/><text x="463.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.33%)</title><rect x="460" y="228" width="4" height="15" fill="rgb(216,132,6)"/><text x="463.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.22%)</title><rect x="461" y="244" width="3" height="15" fill="rgb(210,210,4)"/><text x="464.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.22%)</title><rect x="461" y="260" width="3" height="15" fill="rgb(226,221,24)"/><text x="464.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="461" y="276" width="3" height="15" fill="rgb(227,66,35)"/><text x="464.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.22%)</title><rect x="461" y="292" width="3" height="15" fill="rgb(242,38,12)"/><text x="464.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.22%)</title><rect x="461" y="308" width="3" height="15" fill="rgb(250,164,39)"/><text x="464.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="461" y="324" width="3" height="15" fill="rgb(226,53,4)"/><text x="464.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (1 samples, 0.11%)</title><rect x="464" y="212" width="1" height="15" fill="rgb(223,122,0)"/><text x="467.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="474" y="260" width="3" height="15" fill="rgb(235,86,53)"/><text x="477.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="475" y="276" width="2" height="15" fill="rgb(220,149,37)"/><text x="478.00" y="286.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="477" y="276" width="1" height="15" fill="rgb(249,7,21)"/><text x="480.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="477" y="292" width="1" height="15" fill="rgb(244,99,4)"/><text x="480.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="477" y="308" width="1" height="15" fill="rgb(206,165,15)"/><text x="480.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="478" y="276" width="1" height="15" fill="rgb(244,30,2)"/><text x="481.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.11%)</title><rect x="478" y="292" width="1" height="15" fill="rgb(212,133,33)"/><text x="481.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="479" y="324" width="1" height="15" fill="rgb(225,95,48)"/><text x="482.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="480" y="324" width="2" height="15" fill="rgb(210,86,24)"/><text x="483.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.11%)</title><rect x="480" y="340" width="2" height="15" fill="rgb(245,112,45)"/><text x="483.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(206,188,33)"/><text x="483.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="480" y="372" width="2" height="15" fill="rgb(215,162,27)"/><text x="483.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="482" y="324" width="1" height="15" fill="rgb(236,46,52)"/><text x="485.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.11%)</title><rect x="483" y="324" width="1" height="15" fill="rgb(243,10,32)"/><text x="486.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.55%)</title><rect x="479" y="308" width="7" height="15" fill="rgb(246,32,26)"/><text x="482.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="484" y="324" width="2" height="15" fill="rgb(242,196,6)"/><text x="487.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(231,107,4)"/><text x="487.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="484" y="356" width="2" height="15" fill="rgb(233,179,11)"/><text x="487.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.11%)</title><rect x="484" y="372" width="2" height="15" fill="rgb(240,3,49)"/><text x="487.00" y="382.50"></text></g><g><title>0x7f26e5434902 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="486" y="324" width="1" height="15" fill="rgb(209,185,26)"/><text x="489.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.22%)</title><rect x="486" y="308" width="2" height="15" fill="rgb(211,208,41)"/><text x="489.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="487" y="324" width="1" height="15" fill="rgb(238,88,28)"/><text x="490.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.55%)</title><rect x="488" y="308" width="7" height="15" fill="rgb(243,24,39)"/><text x="491.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.55%)</title><rect x="488" y="324" width="7" height="15" fill="rgb(228,123,34)"/><text x="491.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.55%)</title><rect x="488" y="340" width="7" height="15" fill="rgb(222,122,42)"/><text x="491.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.33%)</title><rect x="491" y="356" width="4" height="15" fill="rgb(236,213,28)"/><text x="494.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="495" y="308" width="1" height="15" fill="rgb(214,17,50)"/><text x="498.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="496" y="308" width="1" height="15" fill="rgb(223,161,49)"/><text x="499.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="496" y="324" width="1" height="15" fill="rgb(233,185,4)"/><text x="499.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 1.64%)</title><rect x="479" y="276" width="19" height="15" fill="rgb(209,150,0)"/><text x="482.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 1.64%)</title><rect x="479" y="292" width="19" height="15" fill="rgb(245,161,29)"/><text x="482.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.11%)</title><rect x="497" y="308" width="1" height="15" fill="rgb(230,39,39)"/><text x="500.00" y="318.50"></text></g><g><title>_mm_mul_ps (xmmintrin.h) (1 samples, 0.11%)</title><rect x="497" y="324" width="1" height="15" fill="rgb(232,196,25)"/><text x="500.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (24 samples, 2.62%)</title><rect x="469" y="228" width="31" height="15" fill="rgb(254,186,13)"/><text x="472.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 2.18%)</title><rect x="474" y="244" width="26" height="15" fill="rgb(211,165,6)"/><text x="477.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 1.96%)</title><rect x="477" y="260" width="23" height="15" fill="rgb(218,220,7)"/><text x="480.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="498" y="276" width="2" height="15" fill="rgb(227,104,49)"/><text x="501.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.11%)</title><rect x="498" y="292" width="2" height="15" fill="rgb(219,181,48)"/><text x="501.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.11%)</title><rect x="500" y="228" width="1" height="15" fill="rgb(221,175,41)"/><text x="503.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.11%)</title><rect x="500" y="244" width="1" height="15" fill="rgb(206,14,30)"/><text x="503.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.11%)</title><rect x="500" y="260" width="1" height="15" fill="rgb(227,187,15)"/><text x="503.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="500" y="276" width="1" height="15" fill="rgb(206,153,2)"/><text x="503.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="500" y="292" width="1" height="15" fill="rgb(226,201,23)"/><text x="503.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="500" y="308" width="1" height="15" fill="rgb(218,205,25)"/><text x="503.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.11%)</title><rect x="500" y="324" width="1" height="15" fill="rgb(253,221,32)"/><text x="503.00" y="334.50"></text></g><g><title>0x7f26e5455120 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="502" y="276" width="2" height="15" fill="rgb(248,17,25)"/><text x="505.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.11%)</title><rect x="504" y="276" width="1" height="15" fill="rgb(241,209,22)"/><text x="507.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.11%)</title><rect x="504" y="292" width="1" height="15" fill="rgb(206,103,6)"/><text x="507.00" y="302.50"></text></g><g><title>0x7f26e5434991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="505" y="340" width="1" height="15" fill="rgb(206,7,42)"/><text x="508.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="506" y="340" width="1" height="15" fill="rgb(226,216,45)"/><text x="509.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="506" y="356" width="1" height="15" fill="rgb(241,115,10)"/><text x="509.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.11%)</title><rect x="506" y="372" width="1" height="15" fill="rgb(226,106,54)"/><text x="509.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.33%)</title><rect x="505" y="292" width="4" height="15" fill="rgb(235,62,33)"/><text x="508.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.33%)</title><rect x="505" y="308" width="4" height="15" fill="rgb(223,47,51)"/><text x="508.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 0.33%)</title><rect x="505" y="324" width="4" height="15" fill="rgb(215,6,51)"/><text x="508.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="340" width="2" height="15" fill="rgb(225,11,50)"/><text x="510.00" y="350.50"></text></g><g><title>0x7f26e5436700 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(215,24,23)"/><text x="510.00" y="366.50"></text></g><g><title>0x7f26e5433acd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="507" y="372" width="2" height="15" fill="rgb(205,172,26)"/><text x="510.00" y="382.50"></text></g><g><title>0x7f26e4658110 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="510" y="324" width="1" height="15" fill="rgb(250,116,44)"/><text x="513.00" y="334.50"></text></g><g><title>0x7f26e55b6997 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="511" y="324" width="4" height="15" fill="rgb(215,12,38)"/><text x="514.00" y="334.50"></text></g><g><title>0x7f26e55b69a4 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="515" y="324" width="4" height="15" fill="rgb(213,60,23)"/><text x="518.00" y="334.50"></text></g><g><title>0x7f26e55b69af (libm-2.29.so) (1 samples, 0.11%)</title><rect x="519" y="324" width="1" height="15" fill="rgb(210,163,5)"/><text x="522.00" y="334.50"></text></g><g><title>0x7f26e55b69bd (libm-2.29.so) (2 samples, 0.22%)</title><rect x="520" y="324" width="3" height="15" fill="rgb(231,208,31)"/><text x="523.00" y="334.50"></text></g><g><title>0x7f26e55b69cc (libm-2.29.so) (3 samples, 0.33%)</title><rect x="523" y="324" width="4" height="15" fill="rgb(250,39,28)"/><text x="526.00" y="334.50"></text></g><g><title>0x7f26e55b69e4 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="527" y="324" width="2" height="15" fill="rgb(221,125,35)"/><text x="530.00" y="334.50"></text></g><g><title>0x7f26e55b69f8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="529" y="324" width="2" height="15" fill="rgb(244,211,0)"/><text x="532.00" y="334.50"></text></g><g><title>0x7f26e55b6a04 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="531" y="324" width="4" height="15" fill="rgb(253,56,1)"/><text x="534.00" y="334.50"></text></g><g><title>0x7f26e55b6a15 (libm-2.29.so) (4 samples, 0.44%)</title><rect x="535" y="324" width="5" height="15" fill="rgb(221,118,29)"/><text x="538.00" y="334.50"></text></g><g><title>0x7f26e55b6a19 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="540" y="324" width="1" height="15" fill="rgb(254,70,12)"/><text x="543.00" y="334.50"></text></g><g><title>0x7f26e55b6a1d (libm-2.29.so) (3 samples, 0.33%)</title><rect x="541" y="324" width="4" height="15" fill="rgb(212,206,47)"/><text x="544.00" y="334.50"></text></g><g><title>0x7f26e55b6a21 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="545" y="324" width="2" height="15" fill="rgb(221,207,10)"/><text x="548.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src) (31 samples, 3.38%)</title><rect x="509" y="308" width="40" height="15" fill="rgb(227,18,47)"/><text x="512.00" y="318.50">FLO..</text></g><g><title>npy_logf (npy_math_internal.h.src) (1 samples, 0.11%)</title><rect x="547" y="324" width="2" height="15" fill="rgb(237,173,19)"/><text x="550.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (35 samples, 3.82%)</title><rect x="505" y="276" width="45" height="15" fill="rgb(253,52,7)"/><text x="508.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (32 samples, 3.49%)</title><rect x="509" y="292" width="41" height="15" fill="rgb(251,85,51)"/><text x="512.00" y="302.50">tri..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="549" y="308" width="1" height="15" fill="rgb(252,97,11)"/><text x="552.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (39 samples, 4.25%)</title><rect x="501" y="228" width="50" height="15" fill="rgb(210,85,44)"/><text x="504.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (38 samples, 4.14%)</title><rect x="502" y="244" width="49" height="15" fill="rgb(208,61,31)"/><text x="505.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (38 samples, 4.14%)</title><rect x="502" y="260" width="49" height="15" fill="rgb(221,68,5)"/><text x="505.00" y="270.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.11%)</title><rect x="550" y="276" width="1" height="15" fill="rgb(240,77,54)"/><text x="553.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="555" y="308" width="1" height="15" fill="rgb(236,220,39)"/><text x="558.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="556" y="324" width="3" height="15" fill="rgb(213,176,22)"/><text x="559.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="556" y="340" width="3" height="15" fill="rgb(207,54,22)"/><text x="559.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="556" y="356" width="3" height="15" fill="rgb(237,116,19)"/><text x="559.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="556" y="372" width="3" height="15" fill="rgb(221,184,14)"/><text x="559.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="556" y="388" width="3" height="15" fill="rgb(217,132,39)"/><text x="559.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="558" y="404" width="1" height="15" fill="rgb(244,104,4)"/><text x="561.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="562" y="388" width="1" height="15" fill="rgb(244,201,35)"/><text x="565.00" y="398.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="563" y="388" width="1" height="15" fill="rgb(231,181,19)"/><text x="566.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="562" y="372" width="3" height="15" fill="rgb(250,54,44)"/><text x="565.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="564" y="388" width="1" height="15" fill="rgb(220,216,30)"/><text x="567.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="565" y="372" width="2" height="15" fill="rgb(205,180,14)"/><text x="568.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="565" y="388" width="2" height="15" fill="rgb(213,183,38)"/><text x="568.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="565" y="404" width="2" height="15" fill="rgb(231,60,47)"/><text x="568.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 0.65%)</title><rect x="580" y="388" width="7" height="15" fill="rgb(245,17,42)"/><text x="583.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (3 samples, 0.33%)</title><rect x="583" y="404" width="4" height="15" fill="rgb(238,50,40)"/><text x="586.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="587" y="388" width="2" height="15" fill="rgb(242,212,20)"/><text x="590.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (35 samples, 3.82%)</title><rect x="551" y="228" width="45" height="15" fill="rgb(209,124,50)"/><text x="554.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (35 samples, 3.82%)</title><rect x="551" y="244" width="45" height="15" fill="rgb(237,125,9)"/><text x="554.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (34 samples, 3.71%)</title><rect x="553" y="260" width="43" height="15" fill="rgb(254,54,40)"/><text x="556.00" y="270.50">arra..</text></g><g><title>sum (numpy/core/fromnumeric.py) (34 samples, 3.71%)</title><rect x="553" y="276" width="43" height="15" fill="rgb(235,22,17)"/><text x="556.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (33 samples, 3.60%)</title><rect x="554" y="292" width="42" height="15" fill="rgb(205,139,40)"/><text x="557.00" y="302.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c) (31 samples, 3.38%)</title><rect x="556" y="308" width="40" height="15" fill="rgb(239,179,39)"/><text x="559.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (29 samples, 3.16%)</title><rect x="559" y="324" width="37" height="15" fill="rgb(239,155,23)"/><text x="562.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (27 samples, 2.94%)</title><rect x="562" y="340" width="34" height="15" fill="rgb(212,21,50)"/><text x="565.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (27 samples, 2.94%)</title><rect x="562" y="356" width="34" height="15" fill="rgb(244,112,41)"/><text x="565.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (23 samples, 2.51%)</title><rect x="567" y="372" width="29" height="15" fill="rgb(235,215,6)"/><text x="570.00" y="382.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (6 samples, 0.65%)</title><rect x="589" y="388" width="7" height="15" fill="rgb(215,163,52)"/><text x="592.00" y="398.50"></text></g><g><title>0x7f26a5f92422 (?) (1 samples, 0.11%)</title><rect x="596" y="244" width="2" height="15" fill="rgb(249,73,8)"/><text x="599.00" y="254.50"></text></g><g><title>0x7f26a5f9889e (?) (1 samples, 0.11%)</title><rect x="596" y="260" width="2" height="15" fill="rgb(239,191,35)"/><text x="599.00" y="270.50"></text></g><g><title>0x7f26a5f9874f (?) (1 samples, 0.11%)</title><rect x="596" y="276" width="2" height="15" fill="rgb(221,50,46)"/><text x="599.00" y="286.50"></text></g><g><title>0x7f26a5f9ea3a (?) (1 samples, 0.11%)</title><rect x="596" y="292" width="2" height="15" fill="rgb(223,156,20)"/><text x="599.00" y="302.50"></text></g><g><title>0x7f26af3faab9 (?) (1 samples, 0.11%)</title><rect x="596" y="308" width="2" height="15" fill="rgb(223,106,0)"/><text x="599.00" y="318.50"></text></g><g><title>0x7f26af3fbead (?) (1 samples, 0.11%)</title><rect x="596" y="324" width="2" height="15" fill="rgb(219,195,22)"/><text x="599.00" y="334.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h) (1 samples, 0.11%)</title><rect x="598" y="260" width="1" height="15" fill="rgb(209,8,30)"/><text x="601.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc) (1 samples, 0.11%)</title><rect x="598" y="276" width="1" height="15" fill="rgb(237,123,15)"/><text x="601.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="598" y="292" width="1" height="15" fill="rgb(245,95,49)"/><text x="601.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="598" y="308" width="1" height="15" fill="rgb(224,214,33)"/><text x="601.00" y="318.50"></text></g><g><title>pybind11::array::shape (numpy.h) (1 samples, 0.11%)</title><rect x="599" y="436" width="1" height="15" fill="rgb(220,55,13)"/><text x="602.00" y="446.50"></text></g><g><title>0x7f26af3fbea0 (libgomp.so.1.0.0) (4 samples, 0.44%)</title><rect x="600" y="468" width="5" height="15" fill="rgb(246,164,49)"/><text x="603.00" y="478.50"></text></g><g><title>0x7f26af3fbea9 (libgomp.so.1.0.0) (34 samples, 3.71%)</title><rect x="605" y="468" width="44" height="15" fill="rgb(236,175,41)"/><text x="608.00" y="478.50">0x7f..</text></g><g><title>0x7f26af3fbeab (libgomp.so.1.0.0) (17 samples, 1.85%)</title><rect x="649" y="468" width="22" height="15" fill="rgb(221,159,18)"/><text x="652.00" y="478.50">0..</text></g><g><title>0x7f26af3faab9 (libgomp.so.1.0.0) (72 samples, 7.85%)</title><rect x="600" y="452" width="93" height="15" fill="rgb(241,197,4)"/><text x="603.00" y="462.50">0x7f26af3fa..</text></g><g><title>0x7f26af3fbead (libgomp.so.1.0.0) (17 samples, 1.85%)</title><rect x="671" y="468" width="22" height="15" fill="rgb(217,2,16)"/><text x="674.00" y="478.50">0..</text></g><g><title>0x7f26af3fbcf0 (libgomp.so.1.0.0) (2 samples, 0.22%)</title><rect x="693" y="484" width="2" height="15" fill="rgb(208,222,44)"/><text x="696.00" y="494.50"></text></g><g><title>0x7f26af3fbcf9 (libgomp.so.1.0.0) (5 samples, 0.55%)</title><rect x="695" y="484" width="7" height="15" fill="rgb(243,219,44)"/><text x="698.00" y="494.50"></text></g><g><title>0x7f26af3fbcfb (libgomp.so.1.0.0) (3 samples, 0.33%)</title><rect x="702" y="484" width="4" height="15" fill="rgb(207,4,35)"/><text x="705.00" y="494.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (88 samples, 9.60%)</title><rect x="599" y="292" width="113" height="15" fill="rgb(254,125,21)"/><text x="602.00" y="302.50">pybind11::det..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (88 samples, 9.60%)</title><rect x="599" y="308" width="113" height="15" fill="rgb(225,97,33)"/><text x="602.00" y="318.50">pybind11::det..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (88 samples, 9.60%)</title><rect x="599" y="324" width="113" height="15" fill="rgb(245,161,29)"/><text x="602.00" y="334.50">pybind11::cpp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (88 samples, 9.60%)</title><rect x="599" y="340" width="113" height="15" fill="rgb(253,20,11)"/><text x="602.00" y="350.50">pybind11::arr..</text></g><g><title>pybind11::array::~array (numpy.h) (88 samples, 9.60%)</title><rect x="599" y="356" width="113" height="15" fill="rgb(207,20,2)"/><text x="602.00" y="366.50">pybind11::arr..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (88 samples, 9.60%)</title><rect x="599" y="372" width="113" height="15" fill="rgb(233,135,19)"/><text x="602.00" y="382.50">pybind11::buf..</text></g><g><title>pybind11::object::~object (pytypes.h) (88 samples, 9.60%)</title><rect x="599" y="388" width="113" height="15" fill="rgb(208,83,34)"/><text x="602.00" y="398.50">pybind11::obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (88 samples, 9.60%)</title><rect x="599" y="404" width="113" height="15" fill="rgb(208,162,25)"/><text x="602.00" y="414.50">pybind11::han..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (88 samples, 9.60%)</title><rect x="599" y="420" width="113" height="15" fill="rgb(227,45,16)"/><text x="602.00" y="430.50">RuntimeTreeEn..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (87 samples, 9.49%)</title><rect x="600" y="436" width="112" height="15" fill="rgb(209,81,24)"/><text x="603.00" y="446.50">pybind11::gil..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (15 samples, 1.64%)</title><rect x="693" y="452" width="19" height="15" fill="rgb(224,80,11)"/><text x="696.00" y="462.50"></text></g><g><title>0x7f26af3f9daa (libgomp.so.1.0.0) (15 samples, 1.64%)</title><rect x="693" y="468" width="19" height="15" fill="rgb(235,188,9)"/><text x="696.00" y="478.50"></text></g><g><title>0x7f26af3fbcfd (libgomp.so.1.0.0) (5 samples, 0.55%)</title><rect x="706" y="484" width="6" height="15" fill="rgb(243,81,9)"/><text x="709.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (203 samples, 22.14%)</title><rect x="452" y="196" width="261" height="15" fill="rgb(241,89,37)"/><text x="455.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (193 samples, 21.05%)</title><rect x="465" y="212" width="248" height="15" fill="rgb(211,106,45)"/><text x="468.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (91 samples, 9.92%)</title><rect x="596" y="228" width="117" height="15" fill="rgb(210,197,54)"/><text x="599.00" y="238.50">_run (mlprodic..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (90 samples, 9.81%)</title><rect x="598" y="244" width="115" height="15" fill="rgb(242,13,39)"/><text x="601.00" y="254.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (89 samples, 9.71%)</title><rect x="599" y="260" width="114" height="15" fill="rgb(234,150,53)"/><text x="602.00" y="270.50">void pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (89 samples, 9.71%)</title><rect x="599" y="276" width="114" height="15" fill="rgb(226,117,23)"/><text x="602.00" y="286.50">void pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.11%)</title><rect x="712" y="292" width="1" height="15" fill="rgb(239,17,7)"/><text x="715.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.11%)</title><rect x="712" y="308" width="1" height="15" fill="rgb(231,132,50)"/><text x="715.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.11%)</title><rect x="712" y="324" width="1" height="15" fill="rgb(231,176,11)"/><text x="715.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h) (1 samples, 0.11%)</title><rect x="712" y="340" width="1" height="15" fill="rgb(244,111,33)"/><text x="715.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h) (1 samples, 0.11%)</title><rect x="712" y="356" width="1" height="15" fill="rgb(234,173,24)"/><text x="715.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h) (1 samples, 0.11%)</title><rect x="712" y="372" width="1" height="15" fill="rgb(246,221,37)"/><text x="715.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h) (1 samples, 0.11%)</title><rect x="712" y="388" width="1" height="15" fill="rgb(221,181,1)"/><text x="715.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.11%)</title><rect x="712" y="404" width="1" height="15" fill="rgb(245,46,29)"/><text x="715.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="712" y="420" width="1" height="15" fill="rgb(231,58,32)"/><text x="715.00" y="430.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="712" y="436" width="1" height="15" fill="rgb(222,206,5)"/><text x="715.00" y="446.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="712" y="452" width="1" height="15" fill="rgb(253,57,44)"/><text x="715.00" y="462.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="712" y="468" width="1" height="15" fill="rgb(215,174,0)"/><text x="715.00" y="478.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="729" y="388" width="1" height="15" fill="rgb(212,31,41)"/><text x="732.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="729" y="404" width="1" height="15" fill="rgb(219,202,53)"/><text x="732.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="729" y="420" width="1" height="15" fill="rgb(213,102,45)"/><text x="732.00" y="430.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.11%)</title><rect x="730" y="388" width="1" height="15" fill="rgb(251,158,2)"/><text x="733.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.11%)</title><rect x="730" y="404" width="1" height="15" fill="rgb(209,213,12)"/><text x="733.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (10 samples, 1.09%)</title><rect x="733" y="420" width="13" height="15" fill="rgb(242,116,51)"/><text x="736.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="746" y="436" width="1" height="15" fill="rgb(223,137,6)"/><text x="749.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="746" y="452" width="1" height="15" fill="rgb(242,38,21)"/><text x="749.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="746" y="420" width="2" height="15" fill="rgb(210,104,10)"/><text x="749.00" y="430.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.11%)</title><rect x="747" y="436" width="1" height="15" fill="rgb(233,67,27)"/><text x="750.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.22%)</title><rect x="748" y="420" width="3" height="15" fill="rgb(245,66,8)"/><text x="751.00" y="430.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="751" y="468" width="1" height="15" fill="rgb(211,4,54)"/><text x="754.00" y="478.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.22%)</title><rect x="751" y="420" width="2" height="15" fill="rgb(225,189,23)"/><text x="754.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.22%)</title><rect x="751" y="436" width="2" height="15" fill="rgb(227,120,17)"/><text x="754.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.22%)</title><rect x="751" y="452" width="2" height="15" fill="rgb(234,120,14)"/><text x="754.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="752" y="468" width="1" height="15" fill="rgb(227,132,18)"/><text x="755.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="753" y="420" width="2" height="15" fill="rgb(213,100,34)"/><text x="756.00" y="430.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="755" y="420" width="1" height="15" fill="rgb(218,6,6)"/><text x="758.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (22 samples, 2.40%)</title><rect x="729" y="340" width="28" height="15" fill="rgb(225,222,35)"/><text x="732.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 2.40%)</title><rect x="729" y="356" width="28" height="15" fill="rgb(217,92,43)"/><text x="732.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 2.40%)</title><rect x="729" y="372" width="28" height="15" fill="rgb(248,25,14)"/><text x="732.00" y="382.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (20 samples, 2.18%)</title><rect x="731" y="388" width="26" height="15" fill="rgb(206,102,17)"/><text x="734.00" y="398.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (20 samples, 2.18%)</title><rect x="731" y="404" width="26" height="15" fill="rgb(241,58,30)"/><text x="734.00" y="414.50">i..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.11%)</title><rect x="756" y="420" width="1" height="15" fill="rgb(240,146,20)"/><text x="759.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="756" y="436" width="1" height="15" fill="rgb(232,55,14)"/><text x="759.00" y="446.50"></text></g><g><title>PyArray_TransferStridedToNDim (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="756" y="452" width="1" height="15" fill="rgb(242,58,49)"/><text x="759.00" y="462.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="756" y="468" width="1" height="15" fill="rgb(205,91,5)"/><text x="759.00" y="478.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="757" y="340" width="1" height="15" fill="rgb(212,102,15)"/><text x="760.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (9 samples, 0.98%)</title><rect x="765" y="356" width="11" height="15" fill="rgb(206,225,28)"/><text x="768.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 0.98%)</title><rect x="765" y="372" width="11" height="15" fill="rgb(214,170,5)"/><text x="768.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (9 samples, 0.98%)</title><rect x="765" y="388" width="11" height="15" fill="rgb(241,154,21)"/><text x="768.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.33%)</title><rect x="773" y="404" width="3" height="15" fill="rgb(213,207,15)"/><text x="776.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.22%)</title><rect x="774" y="420" width="2" height="15" fill="rgb(212,98,5)"/><text x="777.00" y="430.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="775" y="436" width="1" height="15" fill="rgb(232,190,28)"/><text x="778.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="776" y="372" width="2" height="15" fill="rgb(218,104,48)"/><text x="779.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="776" y="388" width="2" height="15" fill="rgb(223,169,41)"/><text x="779.00" y="398.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (296 samples, 32.28%)</title><rect x="398" y="164" width="381" height="15" fill="rgb(220,90,13)"/><text x="401.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (290 samples, 31.62%)</title><rect x="406" y="180" width="373" height="15" fill="rgb(219,144,31)"/><text x="409.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (51 samples, 5.56%)</title><rect x="713" y="196" width="66" height="15" fill="rgb(235,223,35)"/><text x="716.00" y="206.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (49 samples, 5.34%)</title><rect x="716" y="212" width="63" height="15" fill="rgb(211,179,1)"/><text x="719.00" y="222.50">_run (..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (49 samples, 5.34%)</title><rect x="716" y="228" width="63" height="15" fill="rgb(254,180,52)"/><text x="719.00" y="238.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (48 samples, 5.23%)</title><rect x="717" y="244" width="62" height="15" fill="rgb(240,108,28)"/><text x="720.00" y="254.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (47 samples, 5.13%)</title><rect x="719" y="260" width="60" height="15" fill="rgb(239,78,44)"/><text x="722.00" y="270.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (45 samples, 4.91%)</title><rect x="721" y="276" width="58" height="15" fill="rgb(238,47,5)"/><text x="724.00" y="286.50">_wrapf..</text></g><g><title>array_clip (methods.c) (42 samples, 4.58%)</title><rect x="725" y="292" width="54" height="15" fill="rgb(235,227,32)"/><text x="728.00" y="302.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (42 samples, 4.58%)</title><rect x="725" y="308" width="54" height="15" fill="rgb(232,183,38)"/><text x="728.00" y="318.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (41 samples, 4.47%)</title><rect x="726" y="324" width="53" height="15" fill="rgb(213,108,48)"/><text x="729.00" y="334.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (16 samples, 1.74%)</title><rect x="758" y="340" width="21" height="15" fill="rgb(241,26,12)"/><text x="761.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.22%)</title><rect x="776" y="356" width="3" height="15" fill="rgb(253,22,40)"/><text x="779.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="778" y="372" width="1" height="15" fill="rgb(244,13,32)"/><text x="781.00" y="382.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (297 samples, 32.39%)</title><rect x="398" y="68" width="382" height="15" fill="rgb(221,200,17)"/><text x="401.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (297 samples, 32.39%)</title><rect x="398" y="84" width="382" height="15" fill="rgb(214,100,38)"/><text x="401.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_c..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (297 samples, 32.39%)</title><rect x="398" y="100" width="382" height="15" fill="rgb(221,193,28)"/><text x="401.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (297 samples, 32.39%)</title><rect x="398" y="116" width="382" height="15" fill="rgb(247,178,52)"/><text x="401.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (297 samples, 32.39%)</title><rect x="398" y="132" width="382" height="15" fill="rgb(253,215,38)"/><text x="401.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (297 samples, 32.39%)</title><rect x="398" y="148" width="382" height="15" fill="rgb(228,179,7)"/><text x="401.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="779" y="164" width="1" height="15" fill="rgb(231,42,8)"/><text x="782.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="779" y="180" width="1" height="15" fill="rgb(241,213,8)"/><text x="782.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="779" y="196" width="1" height="15" fill="rgb(251,127,17)"/><text x="782.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="779" y="212" width="1" height="15" fill="rgb(250,185,33)"/><text x="782.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="779" y="228" width="1" height="15" fill="rgb(239,105,37)"/><text x="782.00" y="238.50"></text></g><g><title>0x7f26e5434eb0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="779" y="244" width="1" height="15" fill="rgb(243,113,1)"/><text x="782.00" y="254.50"></text></g><g><title>0x7f26e5433b9b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="779" y="260" width="1" height="15" fill="rgb(247,8,6)"/><text x="782.00" y="270.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="780" y="164" width="2" height="15" fill="rgb(217,69,1)"/><text x="783.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.11%)</title><rect x="780" y="180" width="2" height="15" fill="rgb(215,161,30)"/><text x="783.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.11%)</title><rect x="780" y="196" width="2" height="15" fill="rgb(213,184,25)"/><text x="783.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.11%)</title><rect x="780" y="212" width="2" height="15" fill="rgb(245,172,47)"/><text x="783.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.11%)</title><rect x="780" y="228" width="2" height="15" fill="rgb(237,68,20)"/><text x="783.00" y="238.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="782" y="164" width="1" height="15" fill="rgb(237,184,41)"/><text x="785.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="782" y="180" width="1" height="15" fill="rgb(209,8,46)"/><text x="785.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="782" y="196" width="1" height="15" fill="rgb(231,218,4)"/><text x="785.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.11%)</title><rect x="782" y="212" width="1" height="15" fill="rgb(228,157,47)"/><text x="785.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (1 samples, 0.11%)</title><rect x="792" y="212" width="1" height="15" fill="rgb(216,63,32)"/><text x="795.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="793" y="212" width="1" height="15" fill="rgb(251,52,6)"/><text x="796.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="793" y="228" width="1" height="15" fill="rgb(225,214,6)"/><text x="796.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="793" y="244" width="1" height="15" fill="rgb(251,123,30)"/><text x="796.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.11%)</title><rect x="794" y="228" width="2" height="15" fill="rgb(219,92,27)"/><text x="797.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="796" y="244" width="1" height="15" fill="rgb(215,20,16)"/><text x="799.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="796" y="260" width="1" height="15" fill="rgb(206,0,16)"/><text x="799.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="797" y="260" width="3" height="15" fill="rgb(254,195,52)"/><text x="800.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="798" y="276" width="2" height="15" fill="rgb(205,149,28)"/><text x="801.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.11%)</title><rect x="798" y="292" width="2" height="15" fill="rgb(231,89,1)"/><text x="801.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.11%)</title><rect x="798" y="308" width="2" height="15" fill="rgb(205,222,13)"/><text x="801.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="800" y="260" width="1" height="15" fill="rgb(206,31,25)"/><text x="803.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="800" y="276" width="1" height="15" fill="rgb(250,150,49)"/><text x="803.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.11%)</title><rect x="801" y="276" width="1" height="15" fill="rgb(243,228,49)"/><text x="804.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="801" y="292" width="1" height="15" fill="rgb(207,170,19)"/><text x="804.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="801" y="308" width="1" height="15" fill="rgb(239,183,37)"/><text x="804.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="801" y="324" width="1" height="15" fill="rgb(244,34,36)"/><text x="804.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="801" y="340" width="1" height="15" fill="rgb(213,4,46)"/><text x="804.00" y="350.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="802" y="292" width="1" height="15" fill="rgb(214,152,32)"/><text x="805.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.44%)</title><rect x="801" y="260" width="5" height="15" fill="rgb(212,128,47)"/><text x="804.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.33%)</title><rect x="802" y="276" width="4" height="15" fill="rgb(218,143,42)"/><text x="805.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="803" y="292" width="3" height="15" fill="rgb(207,111,54)"/><text x="806.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.22%)</title><rect x="803" y="308" width="3" height="15" fill="rgb(231,147,32)"/><text x="806.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="806" y="292" width="1" height="15" fill="rgb(226,154,5)"/><text x="809.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="806" y="308" width="1" height="15" fill="rgb(229,202,46)"/><text x="809.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="807" y="292" width="3" height="15" fill="rgb(206,108,16)"/><text x="810.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="809" y="308" width="1" height="15" fill="rgb(210,87,45)"/><text x="812.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="809" y="324" width="1" height="15" fill="rgb(230,210,3)"/><text x="812.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="809" y="340" width="1" height="15" fill="rgb(226,168,11)"/><text x="812.00" y="350.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="810" y="308" width="1" height="15" fill="rgb(209,73,38)"/><text x="813.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="810" y="324" width="1" height="15" fill="rgb(210,145,51)"/><text x="813.00" y="334.50"></text></g><g><title>0x7f26e4657350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="810" y="340" width="1" height="15" fill="rgb(239,53,40)"/><text x="813.00" y="350.50"></text></g><g><title>array_multiply (number.c) (14 samples, 1.53%)</title><rect x="794" y="212" width="18" height="15" fill="rgb(224,117,25)"/><text x="797.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.42%)</title><rect x="796" y="228" width="16" height="15" fill="rgb(236,74,19)"/><text x="799.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 1.31%)</title><rect x="797" y="244" width="15" height="15" fill="rgb(236,169,14)"/><text x="800.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.55%)</title><rect x="806" y="260" width="6" height="15" fill="rgb(205,18,36)"/><text x="809.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 0.55%)</title><rect x="806" y="276" width="6" height="15" fill="rgb(237,94,42)"/><text x="809.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (2 samples, 0.22%)</title><rect x="810" y="292" width="2" height="15" fill="rgb(216,227,12)"/><text x="813.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="811" y="308" width="1" height="15" fill="rgb(207,66,50)"/><text x="814.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="812" y="212" width="2" height="15" fill="rgb(248,102,41)"/><text x="815.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="812" y="228" width="2" height="15" fill="rgb(242,22,15)"/><text x="815.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="812" y="244" width="2" height="15" fill="rgb(232,224,54)"/><text x="815.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="812" y="260" width="2" height="15" fill="rgb(229,100,47)"/><text x="815.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.11%)</title><rect x="812" y="276" width="2" height="15" fill="rgb(251,196,40)"/><text x="815.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="812" y="292" width="2" height="15" fill="rgb(208,80,52)"/><text x="815.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="814" y="244" width="1" height="15" fill="rgb(214,128,9)"/><text x="817.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="814" y="260" width="1" height="15" fill="rgb(251,223,34)"/><text x="817.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="814" y="276" width="1" height="15" fill="rgb(254,24,39)"/><text x="817.00" y="286.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (2 samples, 0.22%)</title><rect x="815" y="292" width="3" height="15" fill="rgb(223,94,31)"/><text x="818.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="815" y="308" width="3" height="15" fill="rgb(245,128,3)"/><text x="818.00" y="318.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="815" y="324" width="3" height="15" fill="rgb(236,193,30)"/><text x="818.00" y="334.50"></text></g><g><title>_mm_sub_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="816" y="340" width="2" height="15" fill="rgb(242,82,7)"/><text x="819.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="818" y="308" width="1" height="15" fill="rgb(233,133,32)"/><text x="821.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.11%)</title><rect x="818" y="324" width="1" height="15" fill="rgb(238,126,30)"/><text x="821.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.22%)</title><rect x="818" y="292" width="2" height="15" fill="rgb(252,122,46)"/><text x="821.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.11%)</title><rect x="819" y="308" width="1" height="15" fill="rgb(237,52,26)"/><text x="822.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="820" y="292" width="1" height="15" fill="rgb(218,79,24)"/><text x="823.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="820" y="308" width="1" height="15" fill="rgb(226,71,22)"/><text x="823.00" y="318.50"></text></g><g><title>array_subtract (number.c) (13 samples, 1.42%)</title><rect x="814" y="212" width="16" height="15" fill="rgb(210,111,16)"/><text x="817.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 1.42%)</title><rect x="814" y="228" width="16" height="15" fill="rgb(220,221,33)"/><text x="817.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 1.31%)</title><rect x="815" y="244" width="15" height="15" fill="rgb(249,70,51)"/><text x="818.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 1.31%)</title><rect x="815" y="260" width="15" height="15" fill="rgb(248,192,9)"/><text x="818.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (12 samples, 1.31%)</title><rect x="815" y="276" width="15" height="15" fill="rgb(213,86,36)"/><text x="818.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 0.76%)</title><rect x="821" y="292" width="9" height="15" fill="rgb(219,119,48)"/><text x="824.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.76%)</title><rect x="821" y="308" width="9" height="15" fill="rgb(236,122,40)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.76%)</title><rect x="821" y="324" width="9" height="15" fill="rgb(208,200,14)"/><text x="824.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (5 samples, 0.55%)</title><rect x="824" y="340" width="6" height="15" fill="rgb(229,177,19)"/><text x="827.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="834" y="276" width="3" height="15" fill="rgb(246,169,46)"/><text x="837.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="834" y="292" width="3" height="15" fill="rgb(228,74,47)"/><text x="837.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="834" y="308" width="3" height="15" fill="rgb(236,124,15)"/><text x="837.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="834" y="324" width="3" height="15" fill="rgb(251,55,28)"/><text x="837.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="834" y="340" width="3" height="15" fill="rgb(221,25,33)"/><text x="837.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.11%)</title><rect x="841" y="340" width="1" height="15" fill="rgb(236,192,19)"/><text x="844.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.11%)</title><rect x="841" y="356" width="1" height="15" fill="rgb(243,3,27)"/><text x="844.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.11%)</title><rect x="841" y="372" width="1" height="15" fill="rgb(221,164,18)"/><text x="844.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (2 samples, 0.22%)</title><rect x="842" y="340" width="3" height="15" fill="rgb(240,55,49)"/><text x="845.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="842" y="356" width="3" height="15" fill="rgb(214,100,19)"/><text x="845.00" y="366.50"></text></g><g><title>0x7f26e5436700 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="842" y="372" width="3" height="15" fill="rgb(231,69,7)"/><text x="845.00" y="382.50"></text></g><g><title>0x7f26e5433ab9 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(223,67,46)"/><text x="845.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 0.65%)</title><rect x="839" y="324" width="8" height="15" fill="rgb(249,86,27)"/><text x="842.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.22%)</title><rect x="845" y="340" width="2" height="15" fill="rgb(250,30,43)"/><text x="848.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (2 samples, 0.22%)</title><rect x="845" y="356" width="2" height="15" fill="rgb(229,158,9)"/><text x="848.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="846" y="372" width="1" height="15" fill="rgb(240,31,54)"/><text x="849.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="847" y="372" width="1" height="15" fill="rgb(223,132,11)"/><text x="850.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.22%)</title><rect x="847" y="324" width="3" height="15" fill="rgb(222,228,37)"/><text x="850.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.22%)</title><rect x="847" y="340" width="3" height="15" fill="rgb(236,151,11)"/><text x="850.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.22%)</title><rect x="847" y="356" width="3" height="15" fill="rgb(207,20,50)"/><text x="850.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="848" y="372" width="2" height="15" fill="rgb(223,141,42)"/><text x="851.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="848" y="388" width="2" height="15" fill="rgb(218,118,19)"/><text x="851.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.11%)</title><rect x="850" y="324" width="1" height="15" fill="rgb(211,23,44)"/><text x="853.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="850" y="340" width="1" height="15" fill="rgb(251,99,24)"/><text x="853.00" y="350.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="850" y="356" width="1" height="15" fill="rgb(207,200,31)"/><text x="853.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="850" y="372" width="1" height="15" fill="rgb(210,103,48)"/><text x="853.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="850" y="388" width="1" height="15" fill="rgb(219,185,24)"/><text x="853.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="850" y="404" width="1" height="15" fill="rgb(225,95,52)"/><text x="853.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="851" y="324" width="1" height="15" fill="rgb(234,125,8)"/><text x="854.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.11%)</title><rect x="851" y="340" width="1" height="15" fill="rgb(254,127,48)"/><text x="854.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (12 samples, 1.31%)</title><rect x="854" y="340" width="15" height="15" fill="rgb(213,110,44)"/><text x="857.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (6 samples, 0.65%)</title><rect x="861" y="356" width="8" height="15" fill="rgb(228,55,17)"/><text x="864.00" y="366.50"></text></g><g><title>array_sum (methods.c) (35 samples, 3.82%)</title><rect x="830" y="212" width="46" height="15" fill="rgb(246,124,41)"/><text x="833.00" y="222.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (35 samples, 3.82%)</title><rect x="830" y="228" width="46" height="15" fill="rgb(205,138,52)"/><text x="833.00" y="238.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (33 samples, 3.60%)</title><rect x="833" y="244" width="43" height="15" fill="rgb(239,112,51)"/><text x="836.00" y="254.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (32 samples, 3.49%)</title><rect x="834" y="260" width="42" height="15" fill="rgb(241,158,6)"/><text x="837.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (30 samples, 3.27%)</title><rect x="837" y="276" width="39" height="15" fill="rgb(237,215,48)"/><text x="840.00" y="286.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (29 samples, 3.16%)</title><rect x="838" y="292" width="38" height="15" fill="rgb(212,48,33)"/><text x="841.00" y="302.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (28 samples, 3.05%)</title><rect x="839" y="308" width="37" height="15" fill="rgb(207,176,34)"/><text x="842.00" y="318.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (18 samples, 1.96%)</title><rect x="852" y="324" width="24" height="15" fill="rgb(215,66,9)"/><text x="855.00" y="334.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 0.55%)</title><rect x="869" y="340" width="7" height="15" fill="rgb(226,40,40)"/><text x="872.00" y="350.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.11%)</title><rect x="878" y="228" width="1" height="15" fill="rgb(225,168,19)"/><text x="881.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="887" y="372" width="1" height="15" fill="rgb(209,4,1)"/><text x="890.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.11%)</title><rect x="887" y="388" width="1" height="15" fill="rgb(219,55,50)"/><text x="890.00" y="398.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.22%)</title><rect x="888" y="388" width="3" height="15" fill="rgb(231,61,39)"/><text x="891.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.22%)</title><rect x="888" y="404" width="3" height="15" fill="rgb(250,25,34)"/><text x="891.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.11%)</title><rect x="890" y="420" width="1" height="15" fill="rgb(235,5,4)"/><text x="893.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.11%)</title><rect x="890" y="436" width="1" height="15" fill="rgb(245,141,6)"/><text x="893.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.65%)</title><rect x="888" y="372" width="8" height="15" fill="rgb(212,191,24)"/><text x="891.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (4 samples, 0.44%)</title><rect x="891" y="388" width="5" height="15" fill="rgb(239,125,31)"/><text x="894.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (4 samples, 0.44%)</title><rect x="891" y="404" width="5" height="15" fill="rgb(247,34,12)"/><text x="894.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (10 samples, 1.09%)</title><rect x="886" y="324" width="13" height="15" fill="rgb(230,119,39)"/><text x="889.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.09%)</title><rect x="886" y="340" width="13" height="15" fill="rgb(245,46,47)"/><text x="889.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 0.98%)</title><rect x="887" y="356" width="12" height="15" fill="rgb(251,97,12)"/><text x="890.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="896" y="372" width="3" height="15" fill="rgb(251,43,48)"/><text x="899.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.11%)</title><rect x="899" y="324" width="1" height="15" fill="rgb(244,146,45)"/><text x="902.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.44%)</title><rect x="908" y="340" width="5" height="15" fill="rgb(242,48,44)"/><text x="911.00" y="350.50"></text></g><g><title>0x7f26e544ae7a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="912" y="356" width="1" height="15" fill="rgb(209,223,12)"/><text x="915.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="921" y="388" width="1" height="15" fill="rgb(218,214,31)"/><text x="924.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="921" y="404" width="1" height="15" fill="rgb(206,116,46)"/><text x="924.00" y="414.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="923" y="420" width="1" height="15" fill="rgb(241,202,16)"/><text x="926.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.22%)</title><rect x="926" y="452" width="2" height="15" fill="rgb(211,54,2)"/><text x="929.00" y="462.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (13 samples, 1.42%)</title><rect x="913" y="340" width="17" height="15" fill="rgb(243,218,52)"/><text x="916.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 1.31%)</title><rect x="914" y="356" width="16" height="15" fill="rgb(207,106,49)"/><text x="917.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (12 samples, 1.31%)</title><rect x="914" y="372" width="16" height="15" fill="rgb(238,38,32)"/><text x="917.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 0.65%)</title><rect x="922" y="388" width="8" height="15" fill="rgb(228,170,40)"/><text x="925.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 0.55%)</title><rect x="923" y="404" width="7" height="15" fill="rgb(236,157,30)"/><text x="926.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 0.44%)</title><rect x="924" y="420" width="6" height="15" fill="rgb(242,97,45)"/><text x="927.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.44%)</title><rect x="924" y="436" width="6" height="15" fill="rgb(241,122,43)"/><text x="927.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="928" y="452" width="2" height="15" fill="rgb(222,217,35)"/><text x="931.00" y="462.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.11%)</title><rect x="928" y="468" width="2" height="15" fill="rgb(242,56,37)"/><text x="931.00" y="478.50"></text></g><g><title>0x7f26e4655c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="928" y="484" width="2" height="15" fill="rgb(210,71,30)"/><text x="931.00" y="494.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.22%)</title><rect x="930" y="356" width="2" height="15" fill="rgb(237,55,51)"/><text x="933.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.22%)</title><rect x="930" y="372" width="2" height="15" fill="rgb(236,191,53)"/><text x="933.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.22%)</title><rect x="930" y="388" width="2" height="15" fill="rgb(228,74,46)"/><text x="933.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.22%)</title><rect x="930" y="404" width="2" height="15" fill="rgb(228,175,47)"/><text x="933.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.22%)</title><rect x="930" y="420" width="2" height="15" fill="rgb(248,199,14)"/><text x="933.00" y="430.50"></text></g><g><title>0x7f26e5512fc2 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="931" y="436" width="1" height="15" fill="rgb(231,129,41)"/><text x="934.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="932" y="372" width="3" height="15" fill="rgb(234,21,13)"/><text x="935.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="933" y="388" width="2" height="15" fill="rgb(221,156,27)"/><text x="936.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.11%)</title><rect x="933" y="404" width="2" height="15" fill="rgb(220,126,38)"/><text x="936.00" y="414.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (48 samples, 5.23%)</title><rect x="876" y="212" width="61" height="15" fill="rgb(222,190,37)"/><text x="879.00" y="222.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (45 samples, 4.91%)</title><rect x="879" y="228" width="58" height="15" fill="rgb(220,154,18)"/><text x="882.00" y="238.50">array_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (45 samples, 4.91%)</title><rect x="879" y="244" width="58" height="15" fill="rgb(212,147,6)"/><text x="882.00" y="254.50">clip (..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (44 samples, 4.80%)</title><rect x="881" y="260" width="56" height="15" fill="rgb(240,161,13)"/><text x="884.00" y="270.50">_wrap..</text></g><g><title>array_clip (methods.c) (41 samples, 4.47%)</title><rect x="885" y="276" width="52" height="15" fill="rgb(229,124,17)"/><text x="888.00" y="286.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (41 samples, 4.47%)</title><rect x="885" y="292" width="52" height="15" fill="rgb(233,121,12)"/><text x="888.00" y="302.50">forwa..</text></g><g><title>_clip (numpy/core/_methods.py) (41 samples, 4.47%)</title><rect x="885" y="308" width="52" height="15" fill="rgb(209,68,21)"/><text x="888.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (29 samples, 3.16%)</title><rect x="900" y="324" width="37" height="15" fill="rgb(230,56,53)"/><text x="903.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.65%)</title><rect x="930" y="340" width="7" height="15" fill="rgb(250,162,9)"/><text x="933.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.44%)</title><rect x="932" y="356" width="5" height="15" fill="rgb(216,91,24)"/><text x="935.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="935" y="372" width="2" height="15" fill="rgb(210,191,14)"/><text x="938.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="936" y="388" width="1" height="15" fill="rgb(219,16,7)"/><text x="939.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="936" y="404" width="1" height="15" fill="rgb(226,46,41)"/><text x="939.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="936" y="420" width="1" height="15" fill="rgb(221,63,26)"/><text x="939.00" y="430.50"></text></g><g><title>0x7f26bee78d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="944" y="228" width="1" height="15" fill="rgb(205,13,44)"/><text x="947.00" y="238.50"></text></g><g><title>0x7f26bee6ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="945" y="292" width="3" height="15" fill="rgb(238,187,9)"/><text x="948.00" y="302.50"></text></g><g><title>0x7f26bee6a666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="945" y="308" width="3" height="15" fill="rgb(219,219,37)"/><text x="948.00" y="318.50"></text></g><g><title>0x7f26bee602fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="945" y="324" width="3" height="15" fill="rgb(242,165,51)"/><text x="948.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.11%)</title><rect x="946" y="340" width="2" height="15" fill="rgb(217,118,45)"/><text x="949.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.11%)</title><rect x="946" y="356" width="2" height="15" fill="rgb(215,114,49)"/><text x="949.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.11%)</title><rect x="946" y="372" width="2" height="15" fill="rgb(236,125,12)"/><text x="949.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="946" y="388" width="2" height="15" fill="rgb(248,148,0)"/><text x="949.00" y="398.50"></text></g><g><title>0x7f26bee862df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="945" y="276" width="4" height="15" fill="rgb(208,118,37)"/><text x="948.00" y="286.50"></text></g><g><title>0x7f26bee6ae72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="948" y="292" width="1" height="15" fill="rgb(245,133,5)"/><text x="951.00" y="302.50"></text></g><g><title>0x7f26bee5e2d9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="948" y="308" width="1" height="15" fill="rgb(221,103,36)"/><text x="951.00" y="318.50"></text></g><g><title>0x7f26e54366df (libc-2.29.so) (1 samples, 0.11%)</title><rect x="953" y="404" width="1" height="15" fill="rgb(213,125,44)"/><text x="956.00" y="414.50"></text></g><g><title>0x7f26e54550f9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="954" y="404" width="1" height="15" fill="rgb(251,146,32)"/><text x="957.00" y="414.50"></text></g><g><title>0x7f26bee86592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.65%)</title><rect x="949" y="276" width="8" height="15" fill="rgb(239,184,32)"/><text x="952.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 0.65%)</title><rect x="949" y="292" width="8" height="15" fill="rgb(208,46,14)"/><text x="952.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (4 samples, 0.44%)</title><rect x="951" y="308" width="6" height="15" fill="rgb(247,95,10)"/><text x="954.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (4 samples, 0.44%)</title><rect x="951" y="324" width="6" height="15" fill="rgb(209,140,40)"/><text x="954.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (4 samples, 0.44%)</title><rect x="951" y="340" width="6" height="15" fill="rgb(209,89,47)"/><text x="954.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (4 samples, 0.44%)</title><rect x="951" y="356" width="6" height="15" fill="rgb(227,113,46)"/><text x="954.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (3 samples, 0.33%)</title><rect x="953" y="372" width="4" height="15" fill="rgb(246,15,30)"/><text x="956.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (3 samples, 0.33%)</title><rect x="953" y="388" width="4" height="15" fill="rgb(247,193,19)"/><text x="956.00" y="398.50"></text></g><g><title>0x7f26e5455103 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="955" y="404" width="2" height="15" fill="rgb(210,117,38)"/><text x="958.00" y="414.50"></text></g><g><title>0x7f26bee866aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="957" y="276" width="1" height="15" fill="rgb(243,35,28)"/><text x="960.00" y="286.50"></text></g><g><title>0x7f26bee866c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="958" y="276" width="1" height="15" fill="rgb(227,40,49)"/><text x="961.00" y="286.50"></text></g><g><title>0x7f26bee77fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.31%)</title><rect x="945" y="244" width="15" height="15" fill="rgb(246,86,20)"/><text x="948.00" y="254.50"></text></g><g><title>0x7f26bee87405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.31%)</title><rect x="945" y="260" width="15" height="15" fill="rgb(226,35,22)"/><text x="948.00" y="270.50"></text></g><g><title>0x7f26bee866d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="959" y="276" width="1" height="15" fill="rgb(253,168,8)"/><text x="962.00" y="286.50"></text></g><g><title>0x7f26bee77fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="960" y="244" width="2" height="15" fill="rgb(251,153,36)"/><text x="963.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (8 samples, 0.87%)</title><rect x="963" y="276" width="10" height="15" fill="rgb(243,137,39)"/><text x="966.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (8 samples, 0.87%)</title><rect x="963" y="292" width="10" height="15" fill="rgb(250,13,1)"/><text x="966.00" y="302.50"></text></g><g><title>0x7f26bee7805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.09%)</title><rect x="962" y="244" width="13" height="15" fill="rgb(237,204,11)"/><text x="965.00" y="254.50"></text></g><g><title>array_take (methods.c) (10 samples, 1.09%)</title><rect x="962" y="260" width="13" height="15" fill="rgb(236,210,20)"/><text x="965.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.11%)</title><rect x="973" y="276" width="2" height="15" fill="rgb(220,78,35)"/><text x="976.00" y="286.50"></text></g><g><title>0x7f26bee7813a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.33%)</title><rect x="975" y="244" width="3" height="15" fill="rgb(218,90,35)"/><text x="978.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.22%)</title><rect x="976" y="260" width="2" height="15" fill="rgb(235,128,45)"/><text x="979.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.22%)</title><rect x="976" y="276" width="2" height="15" fill="rgb(249,139,44)"/><text x="979.00" y="286.50"></text></g><g><title>0x7f26bee7814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="978" y="244" width="2" height="15" fill="rgb(240,124,16)"/><text x="981.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="978" y="260" width="2" height="15" fill="rgb(251,92,19)"/><text x="981.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="978" y="276" width="2" height="15" fill="rgb(214,34,15)"/><text x="981.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="978" y="292" width="2" height="15" fill="rgb(205,111,26)"/><text x="981.00" y="302.50"></text></g><g><title>0x7f26e5434bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="978" y="308" width="2" height="15" fill="rgb(206,87,16)"/><text x="981.00" y="318.50"></text></g><g><title>0x7f26bee781bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="980" y="244" width="1" height="15" fill="rgb(243,139,44)"/><text x="983.00" y="254.50"></text></g><g><title>0x7f26bee78328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="981" y="244" width="1" height="15" fill="rgb(227,137,23)"/><text x="984.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.11%)</title><rect x="981" y="260" width="1" height="15" fill="rgb(208,215,1)"/><text x="984.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.11%)</title><rect x="981" y="276" width="1" height="15" fill="rgb(223,134,31)"/><text x="984.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.11%)</title><rect x="981" y="292" width="1" height="15" fill="rgb(253,129,37)"/><text x="984.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="981" y="308" width="1" height="15" fill="rgb(254,150,48)"/><text x="984.00" y="318.50"></text></g><g><title>0x7f26bee78d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 3.27%)</title><rect x="945" y="228" width="39" height="15" fill="rgb(243,110,2)"/><text x="948.00" y="238.50">0x7..</text></g><g><title>0x7f26bee788d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="982" y="244" width="2" height="15" fill="rgb(252,106,35)"/><text x="985.00" y="254.50"></text></g><g><title>0x7f26bee54b8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="982" y="260" width="2" height="15" fill="rgb(218,125,41)"/><text x="985.00" y="270.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.22%)</title><rect x="993" y="260" width="2" height="15" fill="rgb(247,94,3)"/><text x="996.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1003" y="276" width="1" height="15" fill="rgb(252,223,23)"/><text x="1006.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 0.87%)</title><rect x="995" y="260" width="10" height="15" fill="rgb(205,6,37)"/><text x="998.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.11%)</title><rect x="1004" y="276" width="1" height="15" fill="rgb(245,2,44)"/><text x="1007.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 0.87%)</title><rect x="1005" y="260" width="11" height="15" fill="rgb(244,48,48)"/><text x="1008.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1014" y="276" width="2" height="15" fill="rgb(223,71,24)"/><text x="1017.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.11%)</title><rect x="1014" y="292" width="2" height="15" fill="rgb(240,152,12)"/><text x="1017.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.11%)</title><rect x="1016" y="260" width="1" height="15" fill="rgb(250,152,38)"/><text x="1019.00" y="270.50"></text></g><g><title>0x7f26e544a730 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1016" y="276" width="1" height="15" fill="rgb(208,136,2)"/><text x="1019.00" y="286.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.11%)</title><rect x="1020" y="292" width="1" height="15" fill="rgb(237,103,52)"/><text x="1023.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.44%)</title><rect x="1017" y="260" width="5" height="15" fill="rgb(216,36,14)"/><text x="1020.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.33%)</title><rect x="1018" y="276" width="4" height="15" fill="rgb(250,121,54)"/><text x="1021.00" y="286.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.11%)</title><rect x="1021" y="292" width="1" height="15" fill="rgb(231,22,38)"/><text x="1024.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (35 samples, 3.82%)</title><rect x="984" y="228" width="45" height="15" fill="rgb(215,81,6)"/><text x="987.00" y="238.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (34 samples, 3.71%)</title><rect x="985" y="244" width="44" height="15" fill="rgb(242,183,16)"/><text x="988.00" y="254.50">chec..</text></g><g><title>simplefilter (warnings.py) (5 samples, 0.55%)</title><rect x="1022" y="260" width="7" height="15" fill="rgb(247,209,36)"/><text x="1025.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (5 samples, 0.55%)</title><rect x="1022" y="276" width="7" height="15" fill="rgb(252,158,19)"/><text x="1025.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1029" y="228" width="1" height="15" fill="rgb(249,135,6)"/><text x="1032.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.11%)</title><rect x="1029" y="244" width="1" height="15" fill="rgb(210,173,46)"/><text x="1032.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.33%)</title><rect x="1030" y="260" width="4" height="15" fill="rgb(254,95,37)"/><text x="1033.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.33%)</title><rect x="1030" y="276" width="4" height="15" fill="rgb(243,209,37)"/><text x="1033.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1034" y="276" width="1" height="15" fill="rgb(252,77,44)"/><text x="1037.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1035" y="276" width="3" height="15" fill="rgb(212,202,11)"/><text x="1038.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1035" y="292" width="3" height="15" fill="rgb(217,15,19)"/><text x="1038.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (2 samples, 0.22%)</title><rect x="1035" y="308" width="3" height="15" fill="rgb(218,101,43)"/><text x="1038.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="1035" y="324" width="3" height="15" fill="rgb(239,211,4)"/><text x="1038.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src) (2 samples, 0.22%)</title><rect x="1035" y="340" width="3" height="15" fill="rgb(225,158,23)"/><text x="1038.00" y="350.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h) (2 samples, 0.22%)</title><rect x="1035" y="356" width="3" height="15" fill="rgb(234,130,8)"/><text x="1038.00" y="366.50"></text></g><g><title>0x7f26e4655c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1038" y="292" width="1" height="15" fill="rgb(233,68,44)"/><text x="1041.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.55%)</title><rect x="1034" y="260" width="6" height="15" fill="rgb(248,110,10)"/><text x="1037.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.22%)</title><rect x="1038" y="276" width="2" height="15" fill="rgb(213,44,0)"/><text x="1041.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1039" y="292" width="1" height="15" fill="rgb(209,210,48)"/><text x="1042.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.11%)</title><rect x="1039" y="308" width="1" height="15" fill="rgb(235,103,1)"/><text x="1042.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.11%)</title><rect x="1039" y="324" width="1" height="15" fill="rgb(244,60,17)"/><text x="1042.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.11%)</title><rect x="1039" y="340" width="1" height="15" fill="rgb(227,128,28)"/><text x="1042.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.11%)</title><rect x="1040" y="260" width="2" height="15" fill="rgb(210,176,53)"/><text x="1043.00" y="270.50"></text></g><g><title>array_richcompare (arrayobject.c) (10 samples, 1.09%)</title><rect x="1030" y="228" width="13" height="15" fill="rgb(254,80,30)"/><text x="1033.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.09%)</title><rect x="1030" y="244" width="13" height="15" fill="rgb(237,97,53)"/><text x="1033.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1042" y="260" width="1" height="15" fill="rgb(254,226,17)"/><text x="1045.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.11%)</title><rect x="1042" y="276" width="1" height="15" fill="rgb(226,144,7)"/><text x="1045.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1042" y="292" width="1" height="15" fill="rgb(245,32,13)"/><text x="1045.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.33%)</title><rect x="1043" y="228" width="4" height="15" fill="rgb(235,229,38)"/><text x="1046.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.11%)</title><rect x="1045" y="244" width="2" height="15" fill="rgb(239,110,23)"/><text x="1048.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.11%)</title><rect x="1045" y="260" width="2" height="15" fill="rgb(239,112,54)"/><text x="1048.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.11%)</title><rect x="1045" y="276" width="2" height="15" fill="rgb(209,150,49)"/><text x="1048.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1045" y="292" width="2" height="15" fill="rgb(251,89,48)"/><text x="1048.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.11%)</title><rect x="1049" y="292" width="2" height="15" fill="rgb(205,37,0)"/><text x="1052.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.11%)</title><rect x="1049" y="308" width="2" height="15" fill="rgb(238,129,0)"/><text x="1052.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.11%)</title><rect x="1049" y="324" width="2" height="15" fill="rgb(241,101,25)"/><text x="1052.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1049" y="340" width="2" height="15" fill="rgb(254,115,19)"/><text x="1052.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.11%)</title><rect x="1049" y="356" width="2" height="15" fill="rgb(236,21,41)"/><text x="1052.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.11%)</title><rect x="1053" y="308" width="1" height="15" fill="rgb(205,161,17)"/><text x="1056.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.11%)</title><rect x="1053" y="324" width="1" height="15" fill="rgb(217,23,36)"/><text x="1056.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1056" y="356" width="1" height="15" fill="rgb(206,175,52)"/><text x="1059.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1056" y="372" width="1" height="15" fill="rgb(229,228,53)"/><text x="1059.00" y="382.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1056" y="388" width="1" height="15" fill="rgb(245,1,51)"/><text x="1059.00" y="398.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.11%)</title><rect x="1056" y="404" width="1" height="15" fill="rgb(234,158,52)"/><text x="1059.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.11%)</title><rect x="1057" y="356" width="1" height="15" fill="rgb(218,96,7)"/><text x="1060.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.33%)</title><rect x="1056" y="340" width="4" height="15" fill="rgb(224,140,39)"/><text x="1059.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1058" y="356" width="2" height="15" fill="rgb(229,151,3)"/><text x="1061.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1058" y="372" width="2" height="15" fill="rgb(238,110,14)"/><text x="1061.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1060" y="340" width="1" height="15" fill="rgb(209,183,10)"/><text x="1063.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1060" y="356" width="1" height="15" fill="rgb(250,9,8)"/><text x="1063.00" y="366.50"></text></g><g><title>0x7f26e53ec8b8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1062" y="388" width="1" height="15" fill="rgb(231,211,17)"/><text x="1065.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.33%)</title><rect x="1061" y="340" width="4" height="15" fill="rgb(217,148,53)"/><text x="1064.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.33%)</title><rect x="1061" y="356" width="4" height="15" fill="rgb(245,98,44)"/><text x="1064.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (3 samples, 0.33%)</title><rect x="1061" y="372" width="4" height="15" fill="rgb(232,29,10)"/><text x="1064.00" y="382.50"></text></g><g><title>0x7f26e53eca19 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1063" y="388" width="2" height="15" fill="rgb(251,142,47)"/><text x="1066.00" y="398.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.11%)</title><rect x="1063" y="404" width="2" height="15" fill="rgb(253,86,26)"/><text x="1066.00" y="414.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.11%)</title><rect x="1065" y="372" width="1" height="15" fill="rgb(223,68,43)"/><text x="1068.00" y="382.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.11%)</title><rect x="1065" y="388" width="1" height="15" fill="rgb(223,74,5)"/><text x="1068.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.22%)</title><rect x="1065" y="340" width="2" height="15" fill="rgb(220,52,26)"/><text x="1068.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.22%)</title><rect x="1065" y="356" width="2" height="15" fill="rgb(244,124,24)"/><text x="1068.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.11%)</title><rect x="1066" y="372" width="1" height="15" fill="rgb(251,218,6)"/><text x="1069.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.11%)</title><rect x="1066" y="388" width="1" height="15" fill="rgb(231,201,53)"/><text x="1069.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.33%)</title><rect x="1075" y="356" width="4" height="15" fill="rgb(244,114,2)"/><text x="1078.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.11%)</title><rect x="1078" y="372" width="1" height="15" fill="rgb(244,43,26)"/><text x="1081.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (23 samples, 2.51%)</title><rect x="1054" y="324" width="30" height="15" fill="rgb(243,0,2)"/><text x="1057.00" y="334.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (13 samples, 1.42%)</title><rect x="1067" y="340" width="17" height="15" fill="rgb(207,171,46)"/><text x="1070.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.44%)</title><rect x="1079" y="356" width="5" height="15" fill="rgb(217,180,9)"/><text x="1082.00" y="366.50"></text></g><g><title>array_sum (methods.c) (32 samples, 3.49%)</title><rect x="1047" y="228" width="41" height="15" fill="rgb(236,70,27)"/><text x="1050.00" y="238.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (32 samples, 3.49%)</title><rect x="1047" y="244" width="41" height="15" fill="rgb(248,153,9)"/><text x="1050.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (31 samples, 3.38%)</title><rect x="1048" y="260" width="40" height="15" fill="rgb(231,25,17)"/><text x="1051.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (31 samples, 3.38%)</title><rect x="1048" y="276" width="40" height="15" fill="rgb(233,42,6)"/><text x="1051.00" y="286.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (29 samples, 3.16%)</title><rect x="1051" y="292" width="37" height="15" fill="rgb(209,200,6)"/><text x="1054.00" y="302.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 2.84%)</title><rect x="1054" y="308" width="34" height="15" fill="rgb(238,10,32)"/><text x="1057.00" y="318.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.33%)</title><rect x="1084" y="324" width="4" height="15" fill="rgb(214,88,2)"/><text x="1087.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="1085" y="340" width="3" height="15" fill="rgb(247,104,44)"/><text x="1088.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.22%)</title><rect x="1085" y="356" width="3" height="15" fill="rgb(225,216,49)"/><text x="1088.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1087" y="372" width="1" height="15" fill="rgb(217,8,12)"/><text x="1090.00" y="382.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.11%)</title><rect x="1087" y="388" width="1" height="15" fill="rgb(223,70,48)"/><text x="1090.00" y="398.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.11%)</title><rect x="1098" y="260" width="1" height="15" fill="rgb(252,127,25)"/><text x="1101.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 1.20%)</title><rect x="1088" y="228" width="14" height="15" fill="rgb(241,207,54)"/><text x="1091.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 0.87%)</title><rect x="1092" y="244" width="10" height="15" fill="rgb(211,66,29)"/><text x="1095.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.22%)</title><rect x="1099" y="260" width="3" height="15" fill="rgb(244,16,23)"/><text x="1102.00" y="270.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1103" y="340" width="2" height="15" fill="rgb(232,192,44)"/><text x="1106.00" y="350.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (8 samples, 0.87%)</title><rect x="1103" y="292" width="11" height="15" fill="rgb(243,58,43)"/><text x="1106.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (8 samples, 0.87%)</title><rect x="1103" y="308" width="11" height="15" fill="rgb(240,229,47)"/><text x="1106.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (8 samples, 0.87%)</title><rect x="1103" y="324" width="11" height="15" fill="rgb(245,97,54)"/><text x="1106.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (7 samples, 0.76%)</title><rect x="1105" y="340" width="9" height="15" fill="rgb(232,46,54)"/><text x="1108.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1114" y="292" width="1" height="15" fill="rgb(231,75,7)"/><text x="1117.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1114" y="308" width="1" height="15" fill="rgb(228,212,14)"/><text x="1117.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.11%)</title><rect x="1115" y="292" width="1" height="15" fill="rgb(242,69,29)"/><text x="1118.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1115" y="308" width="1" height="15" fill="rgb(227,143,24)"/><text x="1118.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.11%)</title><rect x="1116" y="292" width="1" height="15" fill="rgb(237,22,4)"/><text x="1119.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 1.74%)</title><rect x="1102" y="260" width="21" height="15" fill="rgb(251,184,6)"/><text x="1105.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 1.74%)</title><rect x="1102" y="276" width="21" height="15" fill="rgb(239,180,3)"/><text x="1105.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.44%)</title><rect x="1117" y="292" width="6" height="15" fill="rgb(233,196,36)"/><text x="1120.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.44%)</title><rect x="1117" y="308" width="6" height="15" fill="rgb(249,1,48)"/><text x="1120.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.44%)</title><rect x="1117" y="324" width="6" height="15" fill="rgb(229,2,51)"/><text x="1120.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.33%)</title><rect x="1119" y="340" width="4" height="15" fill="rgb(249,225,13)"/><text x="1122.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (145 samples, 15.81%)</title><rect x="937" y="212" width="187" height="15" fill="rgb(253,90,46)"/><text x="940.00" y="222.50">predict_proba (sklearn/t..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 1.85%)</title><rect x="1102" y="228" width="22" height="15" fill="rgb(216,161,31)"/><text x="1105.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 1.85%)</title><rect x="1102" y="244" width="22" height="15" fill="rgb(209,169,39)"/><text x="1105.00" y="254.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1123" y="260" width="1" height="15" fill="rgb(206,14,39)"/><text x="1126.00" y="270.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.11%)</title><rect x="1123" y="276" width="1" height="15" fill="rgb(207,104,13)"/><text x="1126.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1124" y="292" width="1" height="15" fill="rgb(212,85,1)"/><text x="1127.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.22%)</title><rect x="1124" y="260" width="2" height="15" fill="rgb(205,38,5)"/><text x="1127.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.22%)</title><rect x="1124" y="276" width="2" height="15" fill="rgb(226,210,49)"/><text x="1127.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1125" y="292" width="1" height="15" fill="rgb(221,172,53)"/><text x="1128.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1125" y="308" width="1" height="15" fill="rgb(205,126,17)"/><text x="1128.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.11%)</title><rect x="1125" y="324" width="1" height="15" fill="rgb(207,88,11)"/><text x="1128.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1125" y="340" width="1" height="15" fill="rgb(216,133,52)"/><text x="1128.00" y="350.50"></text></g><g><title>0x7f26e5435b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1125" y="356" width="1" height="15" fill="rgb(209,51,13)"/><text x="1128.00" y="366.50"></text></g><g><title>0x7f26e46580c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="1132" y="292" width="2" height="15" fill="rgb(216,149,42)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7f26e5606dee (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1134" y="292" width="1" height="15" fill="rgb(243,36,45)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f26e5606e01 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1135" y="292" width="2" height="15" fill="rgb(223,130,48)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f26e5606e40 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(251,144,50)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7f26e5606e61 (libm-2.29.so) (3 samples, 0.33%)</title><rect x="1139" y="292" width="4" height="15" fill="rgb(244,186,15)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f26e5606e7e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1143" y="292" width="1" height="15" fill="rgb(248,123,22)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7f26e5606ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(253,201,53)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f26e5606ec6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1146" y="292" width="1" height="15" fill="rgb(234,191,27)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f26e5606eca (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1147" y="292" width="1" height="15" fill="rgb(231,157,31)"/><text x="1150.00" y="302.50"></text></g><g><title>0x7f26e5606ed2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(242,136,11)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7f26e5606eee (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1150" y="292" width="2" height="15" fill="rgb(245,154,43)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7f26e5606efa (libm-2.29.so) (5 samples, 0.55%)</title><rect x="1152" y="292" width="7" height="15" fill="rgb(219,126,6)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7f26e5606f97 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1159" y="292" width="1" height="15" fill="rgb(225,187,18)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7f26e5606fbf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1160" y="292" width="1" height="15" fill="rgb(234,31,30)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7f26e5607003 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1161" y="292" width="1" height="15" fill="rgb(214,73,50)"/><text x="1164.00" y="302.50"></text></g><g><title>0x7f26e5607017 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(241,211,14)"/><text x="1165.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (3 samples, 0.33%)</title><rect x="1164" y="292" width="4" height="15" fill="rgb(205,33,51)"/><text x="1167.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (299 samples, 32.61%)</title><rect x="787" y="196" width="384" height="15" fill="rgb(236,229,31)"/><text x="790.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (37 samples, 4.03%)</title><rect x="1124" y="212" width="47" height="15" fill="rgb(239,42,36)"/><text x="1127.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (37 samples, 4.03%)</title><rect x="1124" y="228" width="47" height="15" fill="rgb(250,43,47)"/><text x="1127.00" y="238.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (37 samples, 4.03%)</title><rect x="1124" y="244" width="47" height="15" fill="rgb(247,45,46)"/><text x="1127.00" y="254.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (35 samples, 3.82%)</title><rect x="1126" y="260" width="45" height="15" fill="rgb(236,180,2)"/><text x="1129.00" y="270.50">triv..</text></g><g><title>PyUFunc_d_d (loops.c.src) (35 samples, 3.82%)</title><rect x="1126" y="276" width="45" height="15" fill="rgb(217,112,15)"/><text x="1129.00" y="286.50">PyUF..</text></g><g><title>npy_log (npy_math_internal.h.src) (3 samples, 0.33%)</title><rect x="1168" y="292" width="3" height="15" fill="rgb(228,200,1)"/><text x="1171.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (304 samples, 33.15%)</title><rect x="783" y="180" width="391" height="15" fill="rgb(245,73,0)"/><text x="786.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.22%)</title><rect x="1171" y="196" width="3" height="15" fill="rgb(243,139,9)"/><text x="1174.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.22%)</title><rect x="1171" y="212" width="3" height="15" fill="rgb(254,68,15)"/><text x="1174.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.11%)</title><rect x="1173" y="228" width="1" height="15" fill="rgb(224,20,27)"/><text x="1176.00" y="238.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.11%)</title><rect x="1174" y="180" width="1" height="15" fill="rgb(235,155,21)"/><text x="1177.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1174" y="196" width="1" height="15" fill="rgb(252,190,22)"/><text x="1177.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1174" y="212" width="1" height="15" fill="rgb(214,26,19)"/><text x="1177.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.11%)</title><rect x="1174" y="228" width="1" height="15" fill="rgb(233,139,26)"/><text x="1177.00" y="238.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.11%)</title><rect x="1175" y="244" width="2" height="15" fill="rgb(237,178,7)"/><text x="1178.00" y="254.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (4 samples, 0.44%)</title><rect x="1177" y="308" width="5" height="15" fill="rgb(216,128,48)"/><text x="1180.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.65%)</title><rect x="1175" y="228" width="8" height="15" fill="rgb(247,28,23)"/><text x="1178.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (5 samples, 0.55%)</title><rect x="1177" y="244" width="6" height="15" fill="rgb(215,159,29)"/><text x="1180.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 0.55%)</title><rect x="1177" y="260" width="6" height="15" fill="rgb(242,100,51)"/><text x="1180.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (5 samples, 0.55%)</title><rect x="1177" y="276" width="6" height="15" fill="rgb(246,227,35)"/><text x="1180.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (5 samples, 0.55%)</title><rect x="1177" y="292" width="6" height="15" fill="rgb(210,106,7)"/><text x="1180.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.11%)</title><rect x="1182" y="308" width="1" height="15" fill="rgb(217,51,20)"/><text x="1185.00" y="318.50"></text></g><g><title>array_add (number.c) (7 samples, 0.76%)</title><rect x="1175" y="180" width="9" height="15" fill="rgb(218,106,8)"/><text x="1178.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 0.76%)</title><rect x="1175" y="196" width="9" height="15" fill="rgb(234,14,5)"/><text x="1178.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 0.76%)</title><rect x="1175" y="212" width="9" height="15" fill="rgb(249,151,45)"/><text x="1178.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1183" y="228" width="1" height="15" fill="rgb(235,86,48)"/><text x="1186.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.11%)</title><rect x="1183" y="244" width="1" height="15" fill="rgb(221,14,54)"/><text x="1186.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1183" y="260" width="1" height="15" fill="rgb(232,21,20)"/><text x="1186.00" y="270.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (315 samples, 34.35%)</title><rect x="780" y="68" width="406" height="15" fill="rgb(208,177,2)"/><text x="783.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (315 samples, 34.35%)</title><rect x="780" y="84" width="406" height="15" fill="rgb(251,130,4)"/><text x="783.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (315 samples, 34.35%)</title><rect x="780" y="100" width="406" height="15" fill="rgb(216,78,19)"/><text x="783.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (315 samples, 34.35%)</title><rect x="780" y="116" width="406" height="15" fill="rgb(244,192,2)"/><text x="783.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (315 samples, 34.35%)</title><rect x="780" y="132" width="406" height="15" fill="rgb(243,197,27)"/><text x="783.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (315 samples, 34.35%)</title><rect x="780" y="148" width="406" height="15" fill="rgb(208,80,7)"/><text x="783.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (313 samples, 34.13%)</title><rect x="783" y="164" width="403" height="15" fill="rgb(212,192,32)"/><text x="786.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.p..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.11%)</title><rect x="1184" y="180" width="2" height="15" fill="rgb(237,173,17)"/><text x="1187.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(236,120,24)"/><text x="1187.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.11%)</title><rect x="1184" y="212" width="2" height="15" fill="rgb(244,11,38)"/><text x="1187.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.11%)</title><rect x="1184" y="228" width="2" height="15" fill="rgb(208,181,5)"/><text x="1187.00" y="238.50"></text></g><g><title>0x7f26e5434b05 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="244" width="2" height="15" fill="rgb(223,124,53)"/><text x="1187.00" y="254.50"></text></g><g><title>0x7f26e5433acd (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="260" width="2" height="15" fill="rgb(222,111,3)"/><text x="1187.00" y="270.50"></text></g><g><title>0x7f26bee6cb11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="212" width="1" height="15" fill="rgb(221,192,43)"/><text x="1189.00" y="222.50"></text></g><g><title>0x7f26bee9e10a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="228" width="1" height="15" fill="rgb(211,31,39)"/><text x="1189.00" y="238.50"></text></g><g><title>0x7f26bf0c9e72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="244" width="1" height="15" fill="rgb(207,136,39)"/><text x="1189.00" y="254.50"></text></g><g><title>0x7f26bf2fcc77 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="260" width="1" height="15" fill="rgb(215,104,14)"/><text x="1189.00" y="270.50"></text></g><g><title>0x7f26bf2fd14e (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="1186" y="276" width="1" height="15" fill="rgb(231,203,19)"/><text x="1189.00" y="286.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(227,179,49)"/><text x="1190.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1187" y="228" width="1" height="15" fill="rgb(247,56,39)"/><text x="1190.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.11%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(245,219,23)"/><text x="1190.00" y="254.50"></text></g><g><title>all (917 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,90,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (917 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,13,24)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_4_12_float_.py) (3 samples, 0.33%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(249,161,40)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (3 samples, 0.33%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(205,220,26)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.33%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(253,34,43)"/><text x="1189.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.33%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(206,5,43)"/><text x="1189.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.33%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(217,118,41)"/><text x="1189.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.33%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(222,10,24)"/><text x="1189.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.33%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(238,36,51)"/><text x="1189.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.33%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(223,114,53)"/><text x="1189.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.33%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(230,35,18)"/><text x="1189.00" y="206.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (1 samples, 0.11%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(244,55,19)"/><text x="1191.00" y="222.50"></text></g></g></svg>