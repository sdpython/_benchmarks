<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2054" onload="init(evt)" viewBox="0 0 1200 2054" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2054" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2037.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2037.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(227,190,7)"/><text x="17.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(238,4,10)"/><text x="17.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(238,19,43)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(243,79,21)"/><text x="17.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(247,19,51)"/><text x="17.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(250,128,35)"/><text x="17.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="14" y="964" width="4" height="15" fill="rgb(226,13,23)"/><text x="17.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="14" y="980" width="4" height="15" fill="rgb(251,121,37)"/><text x="17.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="14" y="996" width="4" height="15" fill="rgb(205,189,28)"/><text x="17.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="14" y="1012" width="4" height="15" fill="rgb(206,100,33)"/><text x="17.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="14" y="1028" width="4" height="15" fill="rgb(213,222,5)"/><text x="17.00" y="1038.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.36%)</title><rect x="14" y="836" width="16" height="15" fill="rgb(212,109,24)"/><text x="17.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.36%)</title><rect x="14" y="852" width="16" height="15" fill="rgb(211,123,20)"/><text x="17.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.02%)</title><rect x="18" y="868" width="12" height="15" fill="rgb(220,143,30)"/><text x="21.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.02%)</title><rect x="18" y="884" width="12" height="15" fill="rgb(216,44,47)"/><text x="21.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.02%)</title><rect x="18" y="900" width="12" height="15" fill="rgb(220,156,3)"/><text x="21.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.02%)</title><rect x="18" y="916" width="12" height="15" fill="rgb(236,213,5)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.68%)</title><rect x="22" y="932" width="8" height="15" fill="rgb(224,179,48)"/><text x="25.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(245,178,16)"/><text x="29.00" y="958.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(249,54,21)"/><text x="29.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 2.04%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(208,179,19)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(209,17,8)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(239,221,3)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="340" width="24" height="15" fill="rgb(237,138,37)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.04%)</title><rect x="10" y="356" width="24" height="15" fill="rgb(240,124,34)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="372" width="24" height="15" fill="rgb(223,224,19)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 2.04%)</title><rect x="10" y="388" width="24" height="15" fill="rgb(209,185,11)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="404" width="24" height="15" fill="rgb(224,148,35)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="420" width="24" height="15" fill="rgb(208,158,49)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="436" width="24" height="15" fill="rgb(228,155,20)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.04%)</title><rect x="10" y="452" width="24" height="15" fill="rgb(242,80,5)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="468" width="24" height="15" fill="rgb(225,143,22)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 2.04%)</title><rect x="10" y="484" width="24" height="15" fill="rgb(254,96,7)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="500" width="24" height="15" fill="rgb(249,148,4)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="516" width="24" height="15" fill="rgb(217,3,26)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="532" width="24" height="15" fill="rgb(205,0,8)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.04%)</title><rect x="10" y="548" width="24" height="15" fill="rgb(246,83,44)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="564" width="24" height="15" fill="rgb(227,83,24)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 2.04%)</title><rect x="10" y="580" width="24" height="15" fill="rgb(231,177,37)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="596" width="24" height="15" fill="rgb(228,22,46)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="612" width="24" height="15" fill="rgb(206,61,14)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="628" width="24" height="15" fill="rgb(211,7,23)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="644" width="24" height="15" fill="rgb(233,4,11)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="660" width="24" height="15" fill="rgb(205,87,12)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="676" width="24" height="15" fill="rgb(235,190,12)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.04%)</title><rect x="10" y="692" width="24" height="15" fill="rgb(250,189,12)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="708" width="24" height="15" fill="rgb(215,202,37)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 2.04%)</title><rect x="10" y="724" width="24" height="15" fill="rgb(214,221,15)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="740" width="24" height="15" fill="rgb(240,225,39)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="756" width="24" height="15" fill="rgb(221,185,8)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="772" width="24" height="15" fill="rgb(224,129,43)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.04%)</title><rect x="10" y="788" width="24" height="15" fill="rgb(233,110,41)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="10" y="804" width="24" height="15" fill="rgb(221,134,44)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 2.04%)</title><rect x="10" y="820" width="24" height="15" fill="rgb(212,57,18)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="836" width="4" height="15" fill="rgb(243,107,37)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="852" width="4" height="15" fill="rgb(238,84,47)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="868" width="4" height="15" fill="rgb(228,158,4)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="884" width="4" height="15" fill="rgb(246,191,42)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="900" width="4" height="15" fill="rgb(249,69,18)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.34%)</title><rect x="30" y="916" width="4" height="15" fill="rgb(222,125,16)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="932" width="4" height="15" fill="rgb(207,206,34)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="948" width="4" height="15" fill="rgb(220,194,10)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="964" width="4" height="15" fill="rgb(220,167,47)"/><text x="33.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="980" width="4" height="15" fill="rgb(223,115,13)"/><text x="33.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.34%)</title><rect x="30" y="996" width="4" height="15" fill="rgb(214,171,14)"/><text x="33.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1012" width="4" height="15" fill="rgb(225,46,28)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1028" width="4" height="15" fill="rgb(251,202,31)"/><text x="33.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1044" width="4" height="15" fill="rgb(227,114,45)"/><text x="33.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="30" y="1060" width="4" height="15" fill="rgb(214,128,43)"/><text x="33.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="30" y="1076" width="4" height="15" fill="rgb(214,141,43)"/><text x="33.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="30" y="1092" width="4" height="15" fill="rgb(244,166,48)"/><text x="33.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.34%)</title><rect x="30" y="1108" width="4" height="15" fill="rgb(245,63,40)"/><text x="33.00" y="1118.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="30" y="1124" width="4" height="15" fill="rgb(248,9,24)"/><text x="33.00" y="1134.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="30" y="1140" width="4" height="15" fill="rgb(254,204,7)"/><text x="33.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="30" y="1156" width="4" height="15" fill="rgb(231,211,10)"/><text x="33.00" y="1166.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="30" y="1172" width="4" height="15" fill="rgb(212,139,8)"/><text x="33.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="30" y="1188" width="4" height="15" fill="rgb(236,34,12)"/><text x="33.00" y="1198.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="30" y="1204" width="4" height="15" fill="rgb(217,2,27)"/><text x="33.00" y="1214.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.34%)</title><rect x="30" y="1220" width="4" height="15" fill="rgb(243,167,36)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="500" width="4" height="15" fill="rgb(210,127,4)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="516" width="4" height="15" fill="rgb(252,2,9)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="532" width="4" height="15" fill="rgb(217,154,30)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="548" width="4" height="15" fill="rgb(215,56,33)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="564" width="4" height="15" fill="rgb(217,25,16)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.34%)</title><rect x="34" y="580" width="4" height="15" fill="rgb(243,138,9)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="596" width="4" height="15" fill="rgb(248,24,49)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="612" width="4" height="15" fill="rgb(231,201,47)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="628" width="4" height="15" fill="rgb(249,70,52)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="644" width="4" height="15" fill="rgb(211,99,54)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="660" width="4" height="15" fill="rgb(218,9,31)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.34%)</title><rect x="34" y="676" width="4" height="15" fill="rgb(229,15,33)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="692" width="4" height="15" fill="rgb(247,210,9)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="708" width="4" height="15" fill="rgb(217,203,9)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="724" width="4" height="15" fill="rgb(251,195,35)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="740" width="4" height="15" fill="rgb(240,102,52)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="756" width="4" height="15" fill="rgb(244,117,10)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.34%)</title><rect x="34" y="772" width="4" height="15" fill="rgb(236,127,30)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="788" width="4" height="15" fill="rgb(230,226,44)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="804" width="4" height="15" fill="rgb(235,87,50)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="820" width="4" height="15" fill="rgb(228,79,19)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(214,221,29)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(213,92,23)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(214,159,16)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(224,58,21)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.34%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(227,144,3)"/><text x="37.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(210,40,25)"/><text x="37.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(230,188,29)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(228,66,1)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(251,138,45)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(226,166,18)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(226,210,1)"/><text x="37.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(236,195,19)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.34%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(245,77,21)"/><text x="37.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.34%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(236,114,17)"/><text x="37.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.34%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(210,173,24)"/><text x="37.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.34%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(209,82,21)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="10" y="196" width="32" height="15" fill="rgb(232,191,10)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="10" y="212" width="32" height="15" fill="rgb(252,189,44)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="10" y="228" width="32" height="15" fill="rgb(254,6,18)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="10" y="244" width="32" height="15" fill="rgb(243,184,27)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.72%)</title><rect x="10" y="260" width="32" height="15" fill="rgb(238,168,38)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="10" y="276" width="32" height="15" fill="rgb(237,176,29)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.68%)</title><rect x="34" y="292" width="8" height="15" fill="rgb(205,226,41)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="308" width="8" height="15" fill="rgb(247,38,52)"/><text x="37.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="324" width="8" height="15" fill="rgb(232,198,34)"/><text x="37.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="340" width="8" height="15" fill="rgb(219,197,27)"/><text x="37.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="34" y="356" width="8" height="15" fill="rgb(245,102,41)"/><text x="37.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="372" width="8" height="15" fill="rgb(226,112,26)"/><text x="37.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.68%)</title><rect x="34" y="388" width="8" height="15" fill="rgb(225,1,53)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="404" width="8" height="15" fill="rgb(211,125,16)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="420" width="8" height="15" fill="rgb(227,223,40)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="436" width="8" height="15" fill="rgb(219,154,34)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="34" y="452" width="8" height="15" fill="rgb(245,39,51)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="34" y="468" width="8" height="15" fill="rgb(242,139,8)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.68%)</title><rect x="34" y="484" width="8" height="15" fill="rgb(220,23,36)"/><text x="37.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="500" width="4" height="15" fill="rgb(242,115,15)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="516" width="4" height="15" fill="rgb(244,81,18)"/><text x="41.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="532" width="4" height="15" fill="rgb(215,224,21)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="548" width="4" height="15" fill="rgb(230,138,29)"/><text x="41.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="564" width="4" height="15" fill="rgb(228,8,5)"/><text x="41.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="580" width="4" height="15" fill="rgb(206,181,45)"/><text x="41.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="596" width="4" height="15" fill="rgb(207,200,3)"/><text x="41.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.34%)</title><rect x="38" y="612" width="4" height="15" fill="rgb(211,136,1)"/><text x="41.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="628" width="4" height="15" fill="rgb(236,13,6)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="644" width="4" height="15" fill="rgb(206,95,12)"/><text x="41.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="660" width="4" height="15" fill="rgb(249,224,46)"/><text x="41.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="676" width="4" height="15" fill="rgb(216,65,39)"/><text x="41.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="692" width="4" height="15" fill="rgb(210,14,13)"/><text x="41.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.34%)</title><rect x="38" y="708" width="4" height="15" fill="rgb(238,36,7)"/><text x="41.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="724" width="4" height="15" fill="rgb(238,25,29)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="740" width="4" height="15" fill="rgb(228,165,9)"/><text x="41.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="756" width="4" height="15" fill="rgb(217,151,29)"/><text x="41.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="772" width="4" height="15" fill="rgb(244,81,25)"/><text x="41.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="788" width="4" height="15" fill="rgb(233,145,35)"/><text x="41.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.34%)</title><rect x="38" y="804" width="4" height="15" fill="rgb(240,222,47)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="820" width="4" height="15" fill="rgb(230,197,9)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="836" width="4" height="15" fill="rgb(229,74,12)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="852" width="4" height="15" fill="rgb(217,53,7)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="38" y="868" width="4" height="15" fill="rgb(252,151,27)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="38" y="884" width="4" height="15" fill="rgb(253,177,51)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.34%)</title><rect x="38" y="900" width="4" height="15" fill="rgb(244,54,25)"/><text x="41.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.34%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(205,20,6)"/><text x="41.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="484" width="4" height="15" fill="rgb(221,4,23)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="500" width="4" height="15" fill="rgb(253,52,12)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="516" width="4" height="15" fill="rgb(217,114,0)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="532" width="4" height="15" fill="rgb(248,149,50)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="548" width="4" height="15" fill="rgb(211,191,31)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="564" width="4" height="15" fill="rgb(221,49,18)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.34%)</title><rect x="42" y="580" width="4" height="15" fill="rgb(230,44,19)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="596" width="4" height="15" fill="rgb(247,94,49)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="612" width="4" height="15" fill="rgb(235,86,11)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="628" width="4" height="15" fill="rgb(210,119,25)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="644" width="4" height="15" fill="rgb(208,123,38)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="660" width="4" height="15" fill="rgb(228,53,1)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.34%)</title><rect x="42" y="676" width="4" height="15" fill="rgb(242,154,22)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="692" width="4" height="15" fill="rgb(240,101,4)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="708" width="4" height="15" fill="rgb(220,27,23)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="724" width="4" height="15" fill="rgb(244,220,48)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="740" width="4" height="15" fill="rgb(250,201,14)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="756" width="4" height="15" fill="rgb(253,111,45)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.34%)</title><rect x="42" y="772" width="4" height="15" fill="rgb(206,124,30)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="788" width="4" height="15" fill="rgb(214,192,20)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="804" width="4" height="15" fill="rgb(240,217,8)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="820" width="4" height="15" fill="rgb(206,166,26)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="836" width="4" height="15" fill="rgb(219,111,30)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="852" width="4" height="15" fill="rgb(212,137,23)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register_rewritten_converters.py) (1 samples, 0.34%)</title><rect x="42" y="868" width="4" height="15" fill="rgb(209,51,45)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="884" width="4" height="15" fill="rgb(250,201,0)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="900" width="4" height="15" fill="rgb(206,181,5)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="42" y="916" width="4" height="15" fill="rgb(233,136,17)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="42" y="932" width="4" height="15" fill="rgb(211,95,24)"/><text x="45.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1540" width="4" height="15" fill="rgb(232,136,20)"/><text x="49.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1556" width="4" height="15" fill="rgb(213,174,48)"/><text x="49.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1572" width="4" height="15" fill="rgb(246,164,50)"/><text x="49.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1588" width="4" height="15" fill="rgb(253,160,45)"/><text x="49.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1604" width="4" height="15" fill="rgb(227,117,19)"/><text x="49.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1620" width="4" height="15" fill="rgb(227,225,29)"/><text x="49.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.34%)</title><rect x="46" y="1636" width="4" height="15" fill="rgb(228,162,53)"/><text x="49.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1652" width="4" height="15" fill="rgb(238,117,47)"/><text x="49.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1668" width="4" height="15" fill="rgb(210,73,46)"/><text x="49.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1684" width="4" height="15" fill="rgb(208,35,36)"/><text x="49.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1700" width="4" height="15" fill="rgb(231,71,37)"/><text x="49.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1716" width="4" height="15" fill="rgb(249,135,40)"/><text x="49.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1732" width="4" height="15" fill="rgb(218,105,8)"/><text x="49.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1748" width="4" height="15" fill="rgb(223,196,8)"/><text x="49.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.34%)</title><rect x="46" y="1764" width="4" height="15" fill="rgb(220,147,10)"/><text x="49.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1780" width="4" height="15" fill="rgb(209,22,45)"/><text x="49.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1796" width="4" height="15" fill="rgb(208,14,38)"/><text x="49.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1812" width="4" height="15" fill="rgb(245,115,49)"/><text x="49.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1828" width="4" height="15" fill="rgb(218,112,18)"/><text x="49.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1844" width="4" height="15" fill="rgb(219,89,39)"/><text x="49.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.34%)</title><rect x="46" y="1860" width="4" height="15" fill="rgb(251,221,22)"/><text x="49.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1876" width="4" height="15" fill="rgb(241,31,45)"/><text x="49.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1892" width="4" height="15" fill="rgb(227,148,30)"/><text x="49.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1908" width="4" height="15" fill="rgb(217,101,23)"/><text x="49.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="46" y="1924" width="4" height="15" fill="rgb(214,166,16)"/><text x="49.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="46" y="1940" width="4" height="15" fill="rgb(208,199,23)"/><text x="49.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.34%)</title><rect x="46" y="1956" width="4" height="15" fill="rgb(251,8,25)"/><text x="49.00" y="1966.50"></text></g><g><title>setResultsName (pyparsing.py) (1 samples, 0.34%)</title><rect x="46" y="1972" width="4" height="15" fill="rgb(242,205,47)"/><text x="49.00" y="1982.50"></text></g><g><title>_setResultsName (pyparsing.py) (1 samples, 0.34%)</title><rect x="46" y="1988" width="4" height="15" fill="rgb(224,194,45)"/><text x="49.00" y="1998.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.34%)</title><rect x="46" y="2004" width="4" height="15" fill="rgb(235,167,51)"/><text x="49.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1092" width="8" height="15" fill="rgb(216,192,8)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.68%)</title><rect x="46" y="1108" width="8" height="15" fill="rgb(238,216,42)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1124" width="8" height="15" fill="rgb(249,47,13)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1140" width="8" height="15" fill="rgb(253,197,1)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1156" width="8" height="15" fill="rgb(241,224,27)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="46" y="1172" width="8" height="15" fill="rgb(213,45,9)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1188" width="8" height="15" fill="rgb(248,21,21)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.68%)</title><rect x="46" y="1204" width="8" height="15" fill="rgb(244,86,45)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1220" width="8" height="15" fill="rgb(243,9,19)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1236" width="8" height="15" fill="rgb(254,50,30)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1252" width="8" height="15" fill="rgb(227,128,2)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="46" y="1268" width="8" height="15" fill="rgb(205,34,53)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1284" width="8" height="15" fill="rgb(234,206,35)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.68%)</title><rect x="46" y="1300" width="8" height="15" fill="rgb(246,209,23)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1316" width="8" height="15" fill="rgb(209,46,0)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1332" width="8" height="15" fill="rgb(225,57,15)"/><text x="49.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1348" width="8" height="15" fill="rgb(240,186,41)"/><text x="49.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="46" y="1364" width="8" height="15" fill="rgb(233,144,4)"/><text x="49.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1380" width="8" height="15" fill="rgb(222,55,32)"/><text x="49.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.68%)</title><rect x="46" y="1396" width="8" height="15" fill="rgb(205,6,52)"/><text x="49.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1412" width="8" height="15" fill="rgb(220,14,41)"/><text x="49.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1428" width="8" height="15" fill="rgb(238,209,13)"/><text x="49.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1444" width="8" height="15" fill="rgb(207,94,42)"/><text x="49.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="46" y="1460" width="8" height="15" fill="rgb(254,123,28)"/><text x="49.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1476" width="8" height="15" fill="rgb(212,23,53)"/><text x="49.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.68%)</title><rect x="46" y="1492" width="8" height="15" fill="rgb(248,137,30)"/><text x="49.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1508" width="8" height="15" fill="rgb(244,41,1)"/><text x="49.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="46" y="1524" width="8" height="15" fill="rgb(210,16,0)"/><text x="49.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1540" width="4" height="15" fill="rgb(230,114,49)"/><text x="53.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="50" y="1556" width="4" height="15" fill="rgb(241,88,51)"/><text x="53.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1572" width="4" height="15" fill="rgb(251,159,37)"/><text x="53.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.34%)</title><rect x="50" y="1588" width="4" height="15" fill="rgb(242,184,37)"/><text x="53.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1604" width="4" height="15" fill="rgb(208,155,46)"/><text x="53.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1620" width="4" height="15" fill="rgb(222,125,40)"/><text x="53.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1636" width="4" height="15" fill="rgb(240,17,3)"/><text x="53.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="50" y="1652" width="4" height="15" fill="rgb(233,69,24)"/><text x="53.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1668" width="4" height="15" fill="rgb(230,25,7)"/><text x="53.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.34%)</title><rect x="50" y="1684" width="4" height="15" fill="rgb(215,122,5)"/><text x="53.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1700" width="4" height="15" fill="rgb(247,121,26)"/><text x="53.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1716" width="4" height="15" fill="rgb(249,194,19)"/><text x="53.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1732" width="4" height="15" fill="rgb(215,207,26)"/><text x="53.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="50" y="1748" width="4" height="15" fill="rgb(217,191,51)"/><text x="53.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1764" width="4" height="15" fill="rgb(212,51,24)"/><text x="53.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.34%)</title><rect x="50" y="1780" width="4" height="15" fill="rgb(222,112,52)"/><text x="53.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1796" width="4" height="15" fill="rgb(207,168,38)"/><text x="53.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1812" width="4" height="15" fill="rgb(206,174,43)"/><text x="53.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1828" width="4" height="15" fill="rgb(233,53,36)"/><text x="53.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="50" y="1844" width="4" height="15" fill="rgb(207,192,25)"/><text x="53.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="50" y="1860" width="4" height="15" fill="rgb(235,5,32)"/><text x="53.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.34%)</title><rect x="50" y="1876" width="4" height="15" fill="rgb(222,66,53)"/><text x="53.00" y="1886.50"></text></g><g><title>Arc (matplotlib/patches.py) (1 samples, 0.34%)</title><rect x="50" y="1892" width="4" height="15" fill="rgb(245,41,3)"/><text x="53.00" y="1902.50"></text></g><g><title>dedent_interpd (matplotlib/docstring.py) (1 samples, 0.34%)</title><rect x="50" y="1908" width="4" height="15" fill="rgb(209,150,17)"/><text x="53.00" y="1918.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.34%)</title><rect x="50" y="1924" width="4" height="15" fill="rgb(210,71,41)"/><text x="53.00" y="1934.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.34%)</title><rect x="50" y="1940" width="4" height="15" fill="rgb(239,74,28)"/><text x="53.00" y="1950.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.34%)</title><rect x="50" y="1956" width="4" height="15" fill="rgb(226,151,24)"/><text x="53.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="46" y="996" width="12" height="15" fill="rgb(249,77,42)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.02%)</title><rect x="46" y="1012" width="12" height="15" fill="rgb(237,164,14)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="46" y="1028" width="12" height="15" fill="rgb(226,10,30)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="46" y="1044" width="12" height="15" fill="rgb(250,50,42)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="46" y="1060" width="12" height="15" fill="rgb(241,133,24)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.02%)</title><rect x="46" y="1076" width="12" height="15" fill="rgb(237,185,31)"/><text x="49.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="54" y="1092" width="4" height="15" fill="rgb(209,170,40)"/><text x="57.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="54" y="1108" width="4" height="15" fill="rgb(242,204,23)"/><text x="57.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.70%)</title><rect x="42" y="340" width="20" height="15" fill="rgb(252,125,20)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.70%)</title><rect x="42" y="356" width="20" height="15" fill="rgb(213,201,23)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.70%)</title><rect x="42" y="372" width="20" height="15" fill="rgb(208,195,16)"/><text x="45.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.70%)</title><rect x="42" y="388" width="20" height="15" fill="rgb(213,120,21)"/><text x="45.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.70%)</title><rect x="42" y="404" width="20" height="15" fill="rgb(249,81,37)"/><text x="45.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.70%)</title><rect x="42" y="420" width="20" height="15" fill="rgb(214,98,21)"/><text x="45.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.70%)</title><rect x="42" y="436" width="20" height="15" fill="rgb(238,127,44)"/><text x="45.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.70%)</title><rect x="42" y="452" width="20" height="15" fill="rgb(214,107,39)"/><text x="45.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.70%)</title><rect x="42" y="468" width="20" height="15" fill="rgb(230,177,44)"/><text x="45.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="484" width="16" height="15" fill="rgb(231,198,32)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.36%)</title><rect x="46" y="500" width="16" height="15" fill="rgb(227,75,33)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="516" width="16" height="15" fill="rgb(235,183,52)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.36%)</title><rect x="46" y="532" width="16" height="15" fill="rgb(219,228,43)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="548" width="16" height="15" fill="rgb(206,229,25)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="564" width="16" height="15" fill="rgb(218,9,47)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="580" width="16" height="15" fill="rgb(254,41,3)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.36%)</title><rect x="46" y="596" width="16" height="15" fill="rgb(254,170,35)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="612" width="16" height="15" fill="rgb(217,149,37)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.36%)</title><rect x="46" y="628" width="16" height="15" fill="rgb(206,186,7)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="644" width="16" height="15" fill="rgb(254,97,28)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="660" width="16" height="15" fill="rgb(218,184,30)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="676" width="16" height="15" fill="rgb(226,164,39)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.36%)</title><rect x="46" y="692" width="16" height="15" fill="rgb(205,179,15)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="708" width="16" height="15" fill="rgb(248,89,5)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.36%)</title><rect x="46" y="724" width="16" height="15" fill="rgb(213,105,24)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="740" width="16" height="15" fill="rgb(236,187,51)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="756" width="16" height="15" fill="rgb(227,104,7)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="772" width="16" height="15" fill="rgb(213,171,21)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.36%)</title><rect x="46" y="788" width="16" height="15" fill="rgb(236,76,36)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="804" width="16" height="15" fill="rgb(222,64,30)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.36%)</title><rect x="46" y="820" width="16" height="15" fill="rgb(235,228,37)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="836" width="16" height="15" fill="rgb(222,183,50)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="852" width="16" height="15" fill="rgb(246,57,53)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="868" width="16" height="15" fill="rgb(254,127,22)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.36%)</title><rect x="46" y="884" width="16" height="15" fill="rgb(221,222,46)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="900" width="16" height="15" fill="rgb(220,80,34)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.36%)</title><rect x="46" y="916" width="16" height="15" fill="rgb(238,179,12)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="932" width="16" height="15" fill="rgb(242,34,29)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="948" width="16" height="15" fill="rgb(226,90,11)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.36%)</title><rect x="46" y="964" width="16" height="15" fill="rgb(226,149,10)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.36%)</title><rect x="46" y="980" width="16" height="15" fill="rgb(227,134,22)"/><text x="49.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="58" y="996" width="4" height="15" fill="rgb(223,117,11)"/><text x="61.00" y="1006.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="58" y="1012" width="4" height="15" fill="rgb(254,145,30)"/><text x="61.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py) (1 samples, 0.34%)</title><rect x="62" y="484" width="4" height="15" fill="rgb(249,49,25)"/><text x="65.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="500" width="4" height="15" fill="rgb(246,155,50)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="516" width="4" height="15" fill="rgb(213,181,45)"/><text x="65.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="532" width="4" height="15" fill="rgb(238,68,6)"/><text x="65.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="62" y="548" width="4" height="15" fill="rgb(218,111,41)"/><text x="65.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="564" width="4" height="15" fill="rgb(254,152,12)"/><text x="65.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py) (1 samples, 0.34%)</title><rect x="62" y="580" width="4" height="15" fill="rgb(254,187,50)"/><text x="65.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="596" width="4" height="15" fill="rgb(218,137,50)"/><text x="65.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="612" width="4" height="15" fill="rgb(254,210,18)"/><text x="65.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="628" width="4" height="15" fill="rgb(234,47,48)"/><text x="65.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="62" y="644" width="4" height="15" fill="rgb(207,167,26)"/><text x="65.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="660" width="4" height="15" fill="rgb(207,40,26)"/><text x="65.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/cc/__init__.py) (1 samples, 0.34%)</title><rect x="62" y="676" width="4" height="15" fill="rgb(213,57,32)"/><text x="65.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="692" width="4" height="15" fill="rgb(226,32,12)"/><text x="65.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="708" width="4" height="15" fill="rgb(229,192,37)"/><text x="65.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="62" y="724" width="4" height="15" fill="rgb(219,81,37)"/><text x="65.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="62" y="740" width="4" height="15" fill="rgb(248,110,19)"/><text x="65.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="62" y="756" width="4" height="15" fill="rgb(236,203,20)"/><text x="65.00" y="766.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="62" y="772" width="4" height="15" fill="rgb(240,89,38)"/><text x="65.00" y="782.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="62" y="788" width="4" height="15" fill="rgb(235,82,0)"/><text x="65.00" y="798.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.34%)</title><rect x="62" y="804" width="4" height="15" fill="rgb(233,50,9)"/><text x="65.00" y="814.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.34%)</title><rect x="62" y="820" width="4" height="15" fill="rgb(206,195,35)"/><text x="65.00" y="830.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.34%)</title><rect x="66" y="580" width="4" height="15" fill="rgb(207,170,45)"/><text x="69.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="596" width="4" height="15" fill="rgb(211,0,40)"/><text x="69.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="612" width="4" height="15" fill="rgb(235,47,47)"/><text x="69.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="628" width="4" height="15" fill="rgb(242,129,44)"/><text x="69.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="66" y="644" width="4" height="15" fill="rgb(240,175,37)"/><text x="69.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="660" width="4" height="15" fill="rgb(218,21,24)"/><text x="69.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.34%)</title><rect x="66" y="676" width="4" height="15" fill="rgb(216,27,18)"/><text x="69.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="692" width="4" height="15" fill="rgb(244,145,32)"/><text x="69.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="708" width="4" height="15" fill="rgb(237,94,11)"/><text x="69.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="724" width="4" height="15" fill="rgb(250,5,39)"/><text x="69.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="66" y="740" width="4" height="15" fill="rgb(246,119,1)"/><text x="69.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="66" y="756" width="4" height="15" fill="rgb(236,172,19)"/><text x="69.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.34%)</title><rect x="66" y="772" width="4" height="15" fill="rgb(244,84,39)"/><text x="69.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="66" y="788" width="4" height="15" fill="rgb(232,135,7)"/><text x="69.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="66" y="804" width="4" height="15" fill="rgb(235,198,22)"/><text x="69.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.34%)</title><rect x="66" y="820" width="4" height="15" fill="rgb(252,17,8)"/><text x="69.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="836" width="4" height="15" fill="rgb(240,113,6)"/><text x="69.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="852" width="4" height="15" fill="rgb(211,78,3)"/><text x="69.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="868" width="4" height="15" fill="rgb(247,110,22)"/><text x="69.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="884" width="4" height="15" fill="rgb(222,129,14)"/><text x="69.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="900" width="4" height="15" fill="rgb(217,91,8)"/><text x="69.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="916" width="4" height="15" fill="rgb(237,67,14)"/><text x="69.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.34%)</title><rect x="66" y="932" width="4" height="15" fill="rgb(250,214,22)"/><text x="69.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.72%)</title><rect x="42" y="244" width="32" height="15" fill="rgb(226,206,6)"/><text x="45.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="42" y="260" width="32" height="15" fill="rgb(230,121,27)"/><text x="45.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="42" y="276" width="32" height="15" fill="rgb(226,6,32)"/><text x="45.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="42" y="292" width="32" height="15" fill="rgb(254,17,35)"/><text x="45.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.72%)</title><rect x="42" y="308" width="32" height="15" fill="rgb(241,48,28)"/><text x="45.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.72%)</title><rect x="42" y="324" width="32" height="15" fill="rgb(237,208,41)"/><text x="45.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.02%)</title><rect x="62" y="340" width="12" height="15" fill="rgb(234,162,6)"/><text x="65.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="356" width="12" height="15" fill="rgb(221,75,38)"/><text x="65.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="372" width="12" height="15" fill="rgb(238,125,45)"/><text x="65.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="388" width="12" height="15" fill="rgb(248,106,23)"/><text x="65.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="404" width="12" height="15" fill="rgb(230,67,27)"/><text x="65.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="420" width="12" height="15" fill="rgb(248,185,47)"/><text x="65.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="436" width="12" height="15" fill="rgb(249,167,34)"/><text x="65.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.02%)</title><rect x="62" y="452" width="12" height="15" fill="rgb(229,158,27)"/><text x="65.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="62" y="468" width="12" height="15" fill="rgb(216,102,47)"/><text x="65.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.68%)</title><rect x="66" y="484" width="8" height="15" fill="rgb(251,145,30)"/><text x="69.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="66" y="500" width="8" height="15" fill="rgb(248,8,27)"/><text x="69.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="66" y="516" width="8" height="15" fill="rgb(228,119,52)"/><text x="69.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="66" y="532" width="8" height="15" fill="rgb(235,160,30)"/><text x="69.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="66" y="548" width="8" height="15" fill="rgb(222,141,53)"/><text x="69.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="66" y="564" width="8" height="15" fill="rgb(250,171,29)"/><text x="69.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.34%)</title><rect x="70" y="580" width="4" height="15" fill="rgb(212,22,45)"/><text x="73.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="596" width="4" height="15" fill="rgb(252,207,26)"/><text x="73.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="612" width="4" height="15" fill="rgb(243,32,9)"/><text x="73.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="628" width="4" height="15" fill="rgb(216,108,48)"/><text x="73.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="70" y="644" width="4" height="15" fill="rgb(219,45,40)"/><text x="73.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="70" y="660" width="4" height="15" fill="rgb(245,205,45)"/><text x="73.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.34%)</title><rect x="70" y="676" width="4" height="15" fill="rgb(252,141,21)"/><text x="73.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py) (1 samples, 0.34%)</title><rect x="70" y="692" width="4" height="15" fill="rgb(225,23,10)"/><text x="73.00" y="702.50"></text></g><g><title>compile (re.py) (1 samples, 0.34%)</title><rect x="70" y="708" width="4" height="15" fill="rgb(214,17,48)"/><text x="73.00" y="718.50"></text></g><g><title>_compile (re.py) (1 samples, 0.34%)</title><rect x="70" y="724" width="4" height="15" fill="rgb(224,84,9)"/><text x="73.00" y="734.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.34%)</title><rect x="74" y="372" width="4" height="15" fill="rgb(239,118,45)"/><text x="77.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="388" width="4" height="15" fill="rgb(206,142,39)"/><text x="77.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="404" width="4" height="15" fill="rgb(249,204,54)"/><text x="77.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="420" width="4" height="15" fill="rgb(207,109,38)"/><text x="77.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="436" width="4" height="15" fill="rgb(211,185,12)"/><text x="77.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="452" width="4" height="15" fill="rgb(251,1,5)"/><text x="77.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="468" width="4" height="15" fill="rgb(244,94,54)"/><text x="77.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="484" width="4" height="15" fill="rgb(252,145,43)"/><text x="77.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.34%)</title><rect x="74" y="500" width="4" height="15" fill="rgb(233,15,22)"/><text x="77.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="516" width="4" height="15" fill="rgb(214,222,28)"/><text x="77.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="532" width="4" height="15" fill="rgb(239,179,26)"/><text x="77.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="548" width="4" height="15" fill="rgb(235,108,44)"/><text x="77.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="564" width="4" height="15" fill="rgb(221,101,24)"/><text x="77.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="580" width="4" height="15" fill="rgb(217,83,9)"/><text x="77.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.34%)</title><rect x="74" y="596" width="4" height="15" fill="rgb(225,119,8)"/><text x="77.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="612" width="4" height="15" fill="rgb(224,7,23)"/><text x="77.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="628" width="4" height="15" fill="rgb(229,152,26)"/><text x="77.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="644" width="4" height="15" fill="rgb(242,196,19)"/><text x="77.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="74" y="660" width="4" height="15" fill="rgb(239,217,7)"/><text x="77.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="676" width="4" height="15" fill="rgb(251,212,50)"/><text x="77.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.34%)</title><rect x="74" y="692" width="4" height="15" fill="rgb(252,40,6)"/><text x="77.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="708" width="4" height="15" fill="rgb(215,20,46)"/><text x="77.00" y="718.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="724" width="4" height="15" fill="rgb(205,61,23)"/><text x="77.00" y="734.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="74" y="740" width="4" height="15" fill="rgb(248,71,5)"/><text x="77.00" y="750.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.34%)</title><rect x="74" y="756" width="4" height="15" fill="rgb(219,197,43)"/><text x="77.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.12%)</title><rect x="10" y="68" width="72" height="15" fill="rgb(236,93,19)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.12%)</title><rect x="10" y="84" width="72" height="15" fill="rgb(243,219,54)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.12%)</title><rect x="10" y="100" width="72" height="15" fill="rgb(223,154,48)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 6.12%)</title><rect x="10" y="116" width="72" height="15" fill="rgb(235,217,24)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.12%)</title><rect x="10" y="132" width="72" height="15" fill="rgb(219,55,50)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (18 samples, 6.12%)</title><rect x="10" y="148" width="72" height="15" fill="rgb(233,10,12)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.12%)</title><rect x="10" y="164" width="72" height="15" fill="rgb(224,195,29)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 6.12%)</title><rect x="10" y="180" width="72" height="15" fill="rgb(209,21,15)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.40%)</title><rect x="42" y="196" width="40" height="15" fill="rgb(252,156,28)"/><text x="45.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.40%)</title><rect x="42" y="212" width="40" height="15" fill="rgb(225,82,5)"/><text x="45.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.40%)</title><rect x="42" y="228" width="40" height="15" fill="rgb(214,127,44)"/><text x="45.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.68%)</title><rect x="74" y="244" width="8" height="15" fill="rgb(212,78,5)"/><text x="77.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="74" y="260" width="8" height="15" fill="rgb(222,46,10)"/><text x="77.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="74" y="276" width="8" height="15" fill="rgb(220,73,43)"/><text x="77.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="74" y="292" width="8" height="15" fill="rgb(207,17,21)"/><text x="77.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="74" y="308" width="8" height="15" fill="rgb(248,148,7)"/><text x="77.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="74" y="324" width="8" height="15" fill="rgb(252,181,6)"/><text x="77.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.68%)</title><rect x="74" y="340" width="8" height="15" fill="rgb(230,176,5)"/><text x="77.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.68%)</title><rect x="74" y="356" width="8" height="15" fill="rgb(210,37,47)"/><text x="77.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.34%)</title><rect x="78" y="372" width="4" height="15" fill="rgb(236,106,13)"/><text x="81.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="388" width="4" height="15" fill="rgb(252,132,13)"/><text x="81.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="404" width="4" height="15" fill="rgb(248,138,17)"/><text x="81.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="420" width="4" height="15" fill="rgb(236,93,43)"/><text x="81.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="436" width="4" height="15" fill="rgb(230,141,12)"/><text x="81.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="452" width="4" height="15" fill="rgb(240,86,11)"/><text x="81.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="468" width="4" height="15" fill="rgb(220,144,29)"/><text x="81.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="484" width="4" height="15" fill="rgb(230,88,17)"/><text x="81.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.34%)</title><rect x="78" y="500" width="4" height="15" fill="rgb(240,78,51)"/><text x="81.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="516" width="4" height="15" fill="rgb(241,86,36)"/><text x="81.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="532" width="4" height="15" fill="rgb(235,228,27)"/><text x="81.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="548" width="4" height="15" fill="rgb(240,66,48)"/><text x="81.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="564" width="4" height="15" fill="rgb(245,75,3)"/><text x="81.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="580" width="4" height="15" fill="rgb(221,218,53)"/><text x="81.00" y="590.50"></text></g><g><title>0x7f1efcea5585 (?) (1 samples, 0.34%)</title><rect x="78" y="596" width="4" height="15" fill="rgb(206,36,45)"/><text x="81.00" y="606.50"></text></g><g><title>0x7f1efceab075 (?) (1 samples, 0.34%)</title><rect x="78" y="612" width="4" height="15" fill="rgb(214,10,18)"/><text x="81.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="628" width="4" height="15" fill="rgb(226,124,45)"/><text x="81.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="644" width="4" height="15" fill="rgb(206,25,13)"/><text x="81.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="660" width="4" height="15" fill="rgb(249,88,29)"/><text x="81.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="676" width="4" height="15" fill="rgb(227,67,16)"/><text x="81.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="692" width="4" height="15" fill="rgb(254,77,31)"/><text x="81.00" y="702.50"></text></g><g><title>0x7f1efc7e2543 (?) (1 samples, 0.34%)</title><rect x="78" y="708" width="4" height="15" fill="rgb(236,114,28)"/><text x="81.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="724" width="4" height="15" fill="rgb(231,85,38)"/><text x="81.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="740" width="4" height="15" fill="rgb(218,104,23)"/><text x="81.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="756" width="4" height="15" fill="rgb(236,151,27)"/><text x="81.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="772" width="4" height="15" fill="rgb(217,72,51)"/><text x="81.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="788" width="4" height="15" fill="rgb(229,68,31)"/><text x="81.00" y="798.50"></text></g><g><title>0x7f1efc5b7b9c (?) (1 samples, 0.34%)</title><rect x="78" y="804" width="4" height="15" fill="rgb(209,102,45)"/><text x="81.00" y="814.50"></text></g><g><title>0x7f1efc5bb885 (?) (1 samples, 0.34%)</title><rect x="78" y="820" width="4" height="15" fill="rgb(244,222,11)"/><text x="81.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="836" width="4" height="15" fill="rgb(254,105,15)"/><text x="81.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="852" width="4" height="15" fill="rgb(238,208,39)"/><text x="81.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="868" width="4" height="15" fill="rgb(218,108,4)"/><text x="81.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="884" width="4" height="15" fill="rgb(215,184,22)"/><text x="81.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="900" width="4" height="15" fill="rgb(228,67,7)"/><text x="81.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.34%)</title><rect x="78" y="916" width="4" height="15" fill="rgb(237,183,5)"/><text x="81.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="932" width="4" height="15" fill="rgb(220,8,30)"/><text x="81.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="948" width="4" height="15" fill="rgb(221,86,14)"/><text x="81.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="964" width="4" height="15" fill="rgb(249,98,22)"/><text x="81.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="980" width="4" height="15" fill="rgb(225,56,20)"/><text x="81.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="996" width="4" height="15" fill="rgb(222,137,34)"/><text x="81.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.34%)</title><rect x="78" y="1012" width="4" height="15" fill="rgb(206,111,31)"/><text x="81.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="1028" width="4" height="15" fill="rgb(232,55,17)"/><text x="81.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="1044" width="4" height="15" fill="rgb(250,166,27)"/><text x="81.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="1060" width="4" height="15" fill="rgb(216,109,14)"/><text x="81.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="1076" width="4" height="15" fill="rgb(254,64,49)"/><text x="81.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="78" y="1092" width="4" height="15" fill="rgb(226,90,20)"/><text x="81.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="78" y="1108" width="4" height="15" fill="rgb(218,189,50)"/><text x="81.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1124" width="4" height="15" fill="rgb(240,92,32)"/><text x="81.00" y="1134.50"></text></g><g><title>0x7f1f0a866995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1140" width="4" height="15" fill="rgb(244,89,3)"/><text x="81.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1156" width="4" height="15" fill="rgb(252,227,51)"/><text x="81.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1172" width="4" height="15" fill="rgb(223,202,46)"/><text x="81.00" y="1182.50"></text></g><g><title>0x7f1f0a866258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1188" width="4" height="15" fill="rgb(226,165,0)"/><text x="81.00" y="1198.50"></text></g><g><title>0x7f1f0a8b3d7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1204" width="4" height="15" fill="rgb(226,40,14)"/><text x="81.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1220" width="4" height="15" fill="rgb(228,226,10)"/><text x="81.00" y="1230.50"></text></g><g><title>0x7f1f0a8b4345 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1236" width="4" height="15" fill="rgb(235,63,25)"/><text x="81.00" y="1246.50"></text></g><g><title>0x7f1f0a8acfec (ld-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1252" width="4" height="15" fill="rgb(231,85,54)"/><text x="81.00" y="1262.50"></text></g><g><title>0x7f1f0a8ab494 (ld-2.29.so) (1 samples, 0.34%)</title><rect x="78" y="1268" width="4" height="15" fill="rgb(251,211,27)"/><text x="81.00" y="1278.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.34%)</title><rect x="82" y="180" width="4" height="15" fill="rgb(229,121,33)"/><text x="85.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.34%)</title><rect x="82" y="196" width="4" height="15" fill="rgb(208,3,23)"/><text x="85.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="212" width="4" height="15" fill="rgb(246,182,3)"/><text x="85.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="228" width="4" height="15" fill="rgb(216,171,42)"/><text x="85.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="244" width="4" height="15" fill="rgb(245,60,30)"/><text x="85.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="82" y="260" width="4" height="15" fill="rgb(229,111,0)"/><text x="85.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="276" width="4" height="15" fill="rgb(209,47,12)"/><text x="85.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.34%)</title><rect x="82" y="292" width="4" height="15" fill="rgb(234,174,18)"/><text x="85.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="308" width="4" height="15" fill="rgb(211,118,40)"/><text x="85.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="324" width="4" height="15" fill="rgb(245,171,8)"/><text x="85.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="340" width="4" height="15" fill="rgb(240,48,14)"/><text x="85.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="82" y="356" width="4" height="15" fill="rgb(253,40,50)"/><text x="85.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="82" y="372" width="4" height="15" fill="rgb(254,52,41)"/><text x="85.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.34%)</title><rect x="82" y="388" width="4" height="15" fill="rgb(245,26,0)"/><text x="85.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.34%)</title><rect x="82" y="404" width="4" height="15" fill="rgb(244,35,32)"/><text x="85.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.34%)</title><rect x="82" y="420" width="4" height="15" fill="rgb(206,97,12)"/><text x="85.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="82" y="436" width="4" height="15" fill="rgb(231,211,4)"/><text x="85.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="82" y="452" width="4" height="15" fill="rgb(211,186,39)"/><text x="85.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.34%)</title><rect x="82" y="468" width="4" height="15" fill="rgb(241,179,10)"/><text x="85.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="82" y="484" width="4" height="15" fill="rgb(211,198,34)"/><text x="85.00" y="494.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="82" y="500" width="4" height="15" fill="rgb(205,76,53)"/><text x="85.00" y="510.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="82" y="516" width="4" height="15" fill="rgb(246,56,50)"/><text x="85.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="82" y="532" width="4" height="15" fill="rgb(207,43,17)"/><text x="85.00" y="542.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="82" y="548" width="4" height="15" fill="rgb(210,42,8)"/><text x="85.00" y="558.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema::FormalParameter, &gt;::init_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="82" y="564" width="4" height="15" fill="rgb(209,69,36)"/><text x="85.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_insert_multi_node (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="82" y="580" width="4" height="15" fill="rgb(246,205,13)"/><text x="85.00" y="590.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.02%)</title><rect x="82" y="132" width="12" height="15" fill="rgb(219,51,18)"/><text x="85.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.02%)</title><rect x="82" y="148" width="12" height="15" fill="rgb(239,97,36)"/><text x="85.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.02%)</title><rect x="82" y="164" width="12" height="15" fill="rgb(205,70,16)"/><text x="85.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.68%)</title><rect x="86" y="180" width="8" height="15" fill="rgb(226,113,17)"/><text x="89.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.34%)</title><rect x="90" y="196" width="4" height="15" fill="rgb(252,161,41)"/><text x="93.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.34%)</title><rect x="90" y="212" width="4" height="15" fill="rgb(232,73,47)"/><text x="93.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.34%)</title><rect x="90" y="228" width="4" height="15" fill="rgb(248,148,52)"/><text x="93.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="90" y="244" width="4" height="15" fill="rgb(206,121,25)"/><text x="93.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.34%)</title><rect x="90" y="260" width="4" height="15" fill="rgb(230,128,15)"/><text x="93.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.34%)</title><rect x="90" y="276" width="4" height="15" fill="rgb(253,147,26)"/><text x="93.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.34%)</title><rect x="90" y="292" width="4" height="15" fill="rgb(216,162,22)"/><text x="93.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.34%)</title><rect x="90" y="308" width="4" height="15" fill="rgb(230,112,30)"/><text x="93.00" y="318.50"></text></g><g><title>0x7f1ef892875c (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="90" y="324" width="4" height="15" fill="rgb(251,112,25)"/><text x="93.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="90" y="340" width="4" height="15" fill="rgb(246,166,47)"/><text x="93.00" y="350.50"></text></g><g><title>google::protobuf::FieldDescriptor::type (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="90" y="356" width="4" height="15" fill="rgb(230,17,18)"/><text x="93.00" y="366.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (4 samples, 1.36%)</title><rect x="82" y="68" width="16" height="15" fill="rgb(254,116,34)"/><text x="85.00" y="78.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (4 samples, 1.36%)</title><rect x="82" y="84" width="16" height="15" fill="rgb(250,14,15)"/><text x="85.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.36%)</title><rect x="82" y="100" width="16" height="15" fill="rgb(220,211,15)"/><text x="85.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.36%)</title><rect x="82" y="116" width="16" height="15" fill="rgb(233,210,36)"/><text x="85.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="94" y="132" width="4" height="15" fill="rgb(250,117,6)"/><text x="97.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.34%)</title><rect x="94" y="148" width="4" height="15" fill="rgb(234,200,45)"/><text x="97.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.34%)</title><rect x="94" y="164" width="4" height="15" fill="rgb(235,224,43)"/><text x="97.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.34%)</title><rect x="94" y="180" width="4" height="15" fill="rgb(241,116,2)"/><text x="97.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.34%)</title><rect x="94" y="196" width="4" height="15" fill="rgb(243,197,54)"/><text x="97.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.34%)</title><rect x="94" y="212" width="4" height="15" fill="rgb(208,142,1)"/><text x="97.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py) (1 samples, 0.34%)</title><rect x="94" y="228" width="4" height="15" fill="rgb(231,59,7)"/><text x="97.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.34%)</title><rect x="94" y="244" width="4" height="15" fill="rgb(234,193,15)"/><text x="97.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.34%)</title><rect x="94" y="260" width="4" height="15" fill="rgb(248,37,24)"/><text x="97.00" y="270.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.34%)</title><rect x="94" y="276" width="4" height="15" fill="rgb(236,121,13)"/><text x="97.00" y="286.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.34%)</title><rect x="94" y="292" width="4" height="15" fill="rgb(224,174,49)"/><text x="97.00" y="302.50"></text></g><g><title>line (traceback.py) (1 samples, 0.34%)</title><rect x="94" y="308" width="4" height="15" fill="rgb(215,171,13)"/><text x="97.00" y="318.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.34%)</title><rect x="98" y="164" width="4" height="15" fill="rgb(217,134,27)"/><text x="101.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.34%)</title><rect x="98" y="180" width="4" height="15" fill="rgb(225,140,49)"/><text x="101.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.34%)</title><rect x="98" y="196" width="4" height="15" fill="rgb(239,10,35)"/><text x="101.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.34%)</title><rect x="98" y="212" width="4" height="15" fill="rgb(234,148,3)"/><text x="101.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="98" y="228" width="4" height="15" fill="rgb(241,171,20)"/><text x="101.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="98" y="244" width="4" height="15" fill="rgb(223,128,26)"/><text x="101.00" y="254.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.68%)</title><rect x="102" y="164" width="8" height="15" fill="rgb(248,97,4)"/><text x="105.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.68%)</title><rect x="102" y="180" width="8" height="15" fill="rgb(252,217,7)"/><text x="105.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.68%)</title><rect x="102" y="196" width="8" height="15" fill="rgb(229,70,26)"/><text x="105.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (4 samples, 1.36%)</title><rect x="146" y="212" width="16" height="15" fill="rgb(207,208,23)"/><text x="149.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.34%)</title><rect x="158" y="228" width="4" height="15" fill="rgb(252,80,43)"/><text x="161.00" y="238.50"></text></g><g><title>0x7f1f0a5f4730 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="158" y="244" width="4" height="15" fill="rgb(221,197,20)"/><text x="161.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="162" y="212" width="4" height="15" fill="rgb(215,124,50)"/><text x="165.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="162" y="228" width="4" height="15" fill="rgb(222,199,50)"/><text x="165.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="162" y="244" width="4" height="15" fill="rgb(249,17,13)"/><text x="165.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.68%)</title><rect x="166" y="212" width="8" height="15" fill="rgb(218,18,1)"/><text x="169.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (2 samples, 0.68%)</title><rect x="166" y="228" width="8" height="15" fill="rgb(218,107,54)"/><text x="169.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (2 samples, 0.68%)</title><rect x="166" y="244" width="8" height="15" fill="rgb(250,56,47)"/><text x="169.00" y="254.50"></text></g><g><title>array_clip (methods.c) (2 samples, 0.68%)</title><rect x="166" y="260" width="8" height="15" fill="rgb(249,70,51)"/><text x="169.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.68%)</title><rect x="166" y="276" width="8" height="15" fill="rgb(219,207,42)"/><text x="169.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.68%)</title><rect x="166" y="292" width="8" height="15" fill="rgb(214,122,41)"/><text x="169.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (2 samples, 0.68%)</title><rect x="166" y="308" width="8" height="15" fill="rgb(249,124,18)"/><text x="169.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.34%)</title><rect x="182" y="260" width="4" height="15" fill="rgb(222,120,15)"/><text x="185.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="186" y="260" width="4" height="15" fill="rgb(236,70,4)"/><text x="189.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="186" y="276" width="4" height="15" fill="rgb(215,76,41)"/><text x="189.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.34%)</title><rect x="186" y="292" width="4" height="15" fill="rgb(229,171,25)"/><text x="189.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="186" y="308" width="4" height="15" fill="rgb(221,219,42)"/><text x="189.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="186" y="324" width="4" height="15" fill="rgb(226,152,22)"/><text x="189.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.34%)</title><rect x="186" y="340" width="4" height="15" fill="rgb(246,9,7)"/><text x="189.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="190" y="276" width="4" height="15" fill="rgb(237,143,49)"/><text x="193.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="190" y="292" width="4" height="15" fill="rgb(249,100,5)"/><text x="193.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="190" y="308" width="4" height="15" fill="rgb(218,79,7)"/><text x="193.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.68%)</title><rect x="190" y="260" width="8" height="15" fill="rgb(232,133,48)"/><text x="193.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="194" y="276" width="4" height="15" fill="rgb(222,155,43)"/><text x="197.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="198" y="260" width="4" height="15" fill="rgb(213,26,39)"/><text x="201.00" y="270.50"></text></g><g><title>array_multiply (number.c) (8 samples, 2.72%)</title><rect x="174" y="212" width="32" height="15" fill="rgb(229,163,47)"/><text x="177.00" y="222.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.38%)</title><rect x="178" y="228" width="28" height="15" fill="rgb(213,18,35)"/><text x="181.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.38%)</title><rect x="178" y="244" width="28" height="15" fill="rgb(225,228,40)"/><text x="181.00" y="254.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="202" y="260" width="4" height="15" fill="rgb(211,89,16)"/><text x="205.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="202" y="276" width="4" height="15" fill="rgb(217,157,4)"/><text x="205.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="202" y="292" width="4" height="15" fill="rgb(246,126,26)"/><text x="205.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.34%)</title><rect x="206" y="212" width="4" height="15" fill="rgb(241,179,44)"/><text x="209.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.34%)</title><rect x="206" y="228" width="4" height="15" fill="rgb(227,224,20)"/><text x="209.00" y="238.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.34%)</title><rect x="206" y="244" width="4" height="15" fill="rgb(231,172,45)"/><text x="209.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="214" y="276" width="4" height="15" fill="rgb(230,36,34)"/><text x="217.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="222" y="308" width="4" height="15" fill="rgb(231,43,53)"/><text x="225.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="226" y="308" width="4" height="15" fill="rgb(224,55,15)"/><text x="229.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.34%)</title><rect x="226" y="324" width="4" height="15" fill="rgb(212,211,52)"/><text x="229.00" y="334.50"></text></g><g><title>array_subtract (number.c) (6 samples, 2.04%)</title><rect x="210" y="212" width="24" height="15" fill="rgb(216,222,31)"/><text x="213.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.70%)</title><rect x="214" y="228" width="20" height="15" fill="rgb(253,79,4)"/><text x="217.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.70%)</title><rect x="214" y="244" width="20" height="15" fill="rgb(239,135,18)"/><text x="217.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.70%)</title><rect x="214" y="260" width="20" height="15" fill="rgb(235,218,10)"/><text x="217.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.36%)</title><rect x="218" y="276" width="16" height="15" fill="rgb(234,167,45)"/><text x="221.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.02%)</title><rect x="222" y="292" width="12" height="15" fill="rgb(227,51,44)"/><text x="225.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="230" y="308" width="4" height="15" fill="rgb(214,119,37)"/><text x="233.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.68%)</title><rect x="238" y="276" width="8" height="15" fill="rgb(239,203,13)"/><text x="241.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.68%)</title><rect x="238" y="292" width="8" height="15" fill="rgb(207,197,46)"/><text x="241.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.68%)</title><rect x="238" y="308" width="8" height="15" fill="rgb(250,223,11)"/><text x="241.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.68%)</title><rect x="238" y="324" width="8" height="15" fill="rgb(228,38,6)"/><text x="241.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.68%)</title><rect x="238" y="340" width="8" height="15" fill="rgb(236,193,18)"/><text x="241.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.68%)</title><rect x="246" y="324" width="8" height="15" fill="rgb(225,155,18)"/><text x="249.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.34%)</title><rect x="250" y="340" width="4" height="15" fill="rgb(222,179,51)"/><text x="253.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.34%)</title><rect x="254" y="324" width="4" height="15" fill="rgb(237,198,41)"/><text x="257.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.34%)</title><rect x="254" y="340" width="4" height="15" fill="rgb(231,162,12)"/><text x="257.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.36%)</title><rect x="246" y="308" width="16" height="15" fill="rgb(224,75,50)"/><text x="249.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="258" y="324" width="4" height="15" fill="rgb(216,149,12)"/><text x="261.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="258" y="340" width="4" height="15" fill="rgb(244,88,35)"/><text x="261.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="258" y="356" width="4" height="15" fill="rgb(219,146,38)"/><text x="261.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.34%)</title><rect x="258" y="372" width="4" height="15" fill="rgb(209,41,10)"/><text x="261.00" y="382.50"></text></g><g><title>array_sum (methods.c) (8 samples, 2.72%)</title><rect x="234" y="212" width="32" height="15" fill="rgb(236,117,19)"/><text x="237.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (8 samples, 2.72%)</title><rect x="234" y="228" width="32" height="15" fill="rgb(225,101,37)"/><text x="237.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 2.38%)</title><rect x="238" y="244" width="28" height="15" fill="rgb(242,73,45)"/><text x="241.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 2.38%)</title><rect x="238" y="260" width="28" height="15" fill="rgb(233,86,43)"/><text x="241.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.70%)</title><rect x="246" y="276" width="20" height="15" fill="rgb(231,91,51)"/><text x="249.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.70%)</title><rect x="246" y="292" width="20" height="15" fill="rgb(235,85,29)"/><text x="249.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.34%)</title><rect x="262" y="308" width="4" height="15" fill="rgb(207,2,45)"/><text x="265.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="262" y="324" width="4" height="15" fill="rgb(247,161,23)"/><text x="265.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="262" y="340" width="4" height="15" fill="rgb(226,45,54)"/><text x="265.00" y="350.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="274" y="228" width="4" height="15" fill="rgb(244,125,9)"/><text x="277.00" y="238.50"></text></g><g><title>0x7f1f0a5ff12b (libc-2.29.so) (1 samples, 0.34%)</title><rect x="319" y="324" width="4" height="15" fill="rgb(229,29,51)"/><text x="322.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.68%)</title><rect x="323" y="388" width="8" height="15" fill="rgb(234,59,48)"/><text x="326.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.68%)</title><rect x="323" y="404" width="8" height="15" fill="rgb(233,160,2)"/><text x="326.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.68%)</title><rect x="323" y="420" width="8" height="15" fill="rgb(210,149,10)"/><text x="326.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.02%)</title><rect x="323" y="356" width="12" height="15" fill="rgb(222,63,4)"/><text x="326.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.02%)</title><rect x="323" y="372" width="12" height="15" fill="rgb(207,56,12)"/><text x="326.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.34%)</title><rect x="331" y="388" width="4" height="15" fill="rgb(231,183,9)"/><text x="334.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="331" y="404" width="4" height="15" fill="rgb(253,87,26)"/><text x="334.00" y="414.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.34%)</title><rect x="335" y="372" width="4" height="15" fill="rgb(224,190,23)"/><text x="338.00" y="382.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.34%)</title><rect x="339" y="420" width="4" height="15" fill="rgb(210,196,50)"/><text x="342.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="339" y="436" width="4" height="15" fill="rgb(238,152,31)"/><text x="342.00" y="446.50"></text></g><g><title>0x7f1f0a5de97c (libc-2.29.so) (1 samples, 0.34%)</title><rect x="343" y="436" width="4" height="15" fill="rgb(251,65,44)"/><text x="346.00" y="446.50"></text></g><g><title>0x7f1f0a5de982 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="347" y="436" width="4" height="15" fill="rgb(223,35,24)"/><text x="350.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.36%)</title><rect x="339" y="372" width="16" height="15" fill="rgb(244,226,50)"/><text x="342.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.36%)</title><rect x="339" y="388" width="16" height="15" fill="rgb(222,43,11)"/><text x="342.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.36%)</title><rect x="339" y="404" width="16" height="15" fill="rgb(248,18,29)"/><text x="342.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (3 samples, 1.02%)</title><rect x="343" y="420" width="12" height="15" fill="rgb(212,229,12)"/><text x="346.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.34%)</title><rect x="351" y="436" width="4" height="15" fill="rgb(229,187,11)"/><text x="354.00" y="446.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="351" y="452" width="4" height="15" fill="rgb(218,55,48)"/><text x="354.00" y="462.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.34%)</title><rect x="351" y="468" width="4" height="15" fill="rgb(243,171,33)"/><text x="354.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.04%)</title><rect x="335" y="356" width="24" height="15" fill="rgb(242,229,27)"/><text x="338.00" y="366.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.34%)</title><rect x="355" y="372" width="4" height="15" fill="rgb(245,132,39)"/><text x="358.00" y="382.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (10 samples, 3.40%)</title><rect x="323" y="324" width="40" height="15" fill="rgb(205,83,54)"/><text x="326.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.40%)</title><rect x="323" y="340" width="40" height="15" fill="rgb(234,11,52)"/><text x="326.00" y="350.50">ufu..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="359" y="356" width="4" height="15" fill="rgb(245,223,27)"/><text x="362.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="359" y="372" width="4" height="15" fill="rgb(216,229,51)"/><text x="362.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="359" y="388" width="4" height="15" fill="rgb(214,211,25)"/><text x="362.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.68%)</title><rect x="363" y="324" width="8" height="15" fill="rgb(250,125,30)"/><text x="366.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.34%)</title><rect x="367" y="340" width="4" height="15" fill="rgb(244,49,39)"/><text x="370.00" y="350.50"></text></g><g><title>_arraydescr_isnative (descriptor.c) (1 samples, 0.34%)</title><rect x="367" y="356" width="4" height="15" fill="rgb(233,144,28)"/><text x="370.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="399" y="340" width="4" height="15" fill="rgb(249,6,30)"/><text x="402.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.68%)</title><rect x="411" y="372" width="8" height="15" fill="rgb(227,93,14)"/><text x="414.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.68%)</title><rect x="411" y="388" width="8" height="15" fill="rgb(254,27,9)"/><text x="414.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.68%)</title><rect x="411" y="404" width="8" height="15" fill="rgb(224,34,34)"/><text x="414.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.68%)</title><rect x="411" y="420" width="8" height="15" fill="rgb(245,146,33)"/><text x="414.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="451" y="388" width="4" height="15" fill="rgb(206,176,27)"/><text x="454.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="451" y="404" width="4" height="15" fill="rgb(234,102,11)"/><text x="454.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="451" y="420" width="4" height="15" fill="rgb(251,103,11)"/><text x="454.00" y="430.50"></text></g><g><title>0x7f1f0a5f4730 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="463" y="420" width="4" height="15" fill="rgb(213,131,53)"/><text x="466.00" y="430.50"></text></g><g><title>0x7f1f0a5f4e7a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="467" y="468" width="4" height="15" fill="rgb(235,102,30)"/><text x="470.00" y="478.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.68%)</title><rect x="467" y="420" width="8" height="15" fill="rgb(252,201,8)"/><text x="470.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.68%)</title><rect x="467" y="436" width="8" height="15" fill="rgb(235,42,20)"/><text x="470.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.68%)</title><rect x="467" y="452" width="8" height="15" fill="rgb(205,208,29)"/><text x="470.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c) (1 samples, 0.34%)</title><rect x="471" y="468" width="4" height="15" fill="rgb(251,138,50)"/><text x="474.00" y="478.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h) (1 samples, 0.34%)</title><rect x="471" y="484" width="4" height="15" fill="rgb(206,185,45)"/><text x="474.00" y="494.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.34%)</title><rect x="471" y="500" width="4" height="15" fill="rgb(252,128,38)"/><text x="474.00" y="510.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (19 samples, 6.46%)</title><rect x="403" y="340" width="76" height="15" fill="rgb(252,37,20)"/><text x="406.00" y="350.50">ndim (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (17 samples, 5.78%)</title><rect x="411" y="356" width="68" height="15" fill="rgb(217,93,6)"/><text x="414.00" y="366.50">array_i..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (15 samples, 5.10%)</title><rect x="419" y="372" width="60" height="15" fill="rgb(219,14,37)"/><text x="422.00" y="382.50">ndim (..</text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 2.04%)</title><rect x="455" y="388" width="24" height="15" fill="rgb(231,179,23)"/><text x="458.00" y="398.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 2.04%)</title><rect x="455" y="404" width="24" height="15" fill="rgb(233,113,32)"/><text x="458.00" y="414.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="475" y="420" width="4" height="15" fill="rgb(223,2,37)"/><text x="478.00" y="430.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.34%)</title><rect x="479" y="356" width="4" height="15" fill="rgb(219,4,32)"/><text x="482.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="479" y="372" width="4" height="15" fill="rgb(228,228,41)"/><text x="482.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="479" y="388" width="4" height="15" fill="rgb(215,175,6)"/><text x="482.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="479" y="404" width="4" height="15" fill="rgb(228,213,6)"/><text x="482.00" y="414.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.34%)</title><rect x="483" y="388" width="4" height="15" fill="rgb(232,123,50)"/><text x="486.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.34%)</title><rect x="483" y="404" width="4" height="15" fill="rgb(231,6,45)"/><text x="486.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.34%)</title><rect x="483" y="420" width="4" height="15" fill="rgb(232,51,34)"/><text x="486.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.68%)</title><rect x="483" y="356" width="8" height="15" fill="rgb(206,70,18)"/><text x="486.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.68%)</title><rect x="483" y="372" width="8" height="15" fill="rgb(211,50,2)"/><text x="486.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.34%)</title><rect x="487" y="388" width="4" height="15" fill="rgb(239,15,53)"/><text x="490.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="491" y="372" width="4" height="15" fill="rgb(246,12,51)"/><text x="494.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="491" y="388" width="4" height="15" fill="rgb(223,89,19)"/><text x="494.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="491" y="404" width="4" height="15" fill="rgb(236,120,9)"/><text x="494.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (2 samples, 0.68%)</title><rect x="503" y="420" width="8" height="15" fill="rgb(210,172,40)"/><text x="506.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.34%)</title><rect x="507" y="436" width="4" height="15" fill="rgb(237,142,43)"/><text x="510.00" y="446.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.34%)</title><rect x="507" y="452" width="4" height="15" fill="rgb(217,222,48)"/><text x="510.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 1.70%)</title><rect x="495" y="372" width="20" height="15" fill="rgb(206,16,50)"/><text x="498.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 1.36%)</title><rect x="499" y="388" width="16" height="15" fill="rgb(212,142,11)"/><text x="502.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (4 samples, 1.36%)</title><rect x="499" y="404" width="16" height="15" fill="rgb(241,57,47)"/><text x="502.00" y="414.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.34%)</title><rect x="511" y="420" width="4" height="15" fill="rgb(210,101,46)"/><text x="514.00" y="430.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.34%)</title><rect x="515" y="388" width="4" height="15" fill="rgb(205,192,50)"/><text x="518.00" y="398.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="523" y="420" width="4" height="15" fill="rgb(233,146,48)"/><text x="526.00" y="430.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c) (1 samples, 0.34%)</title><rect x="523" y="436" width="4" height="15" fill="rgb(245,114,3)"/><text x="526.00" y="446.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 1.36%)</title><rect x="515" y="372" width="16" height="15" fill="rgb(244,65,2)"/><text x="518.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (3 samples, 1.02%)</title><rect x="519" y="388" width="12" height="15" fill="rgb(213,127,49)"/><text x="522.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (2 samples, 0.68%)</title><rect x="523" y="404" width="8" height="15" fill="rgb(231,162,24)"/><text x="526.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="527" y="420" width="4" height="15" fill="rgb(221,18,32)"/><text x="530.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="527" y="436" width="4" height="15" fill="rgb(232,4,16)"/><text x="530.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.34%)</title><rect x="527" y="452" width="4" height="15" fill="rgb(237,219,2)"/><text x="530.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.74%)</title><rect x="491" y="356" width="44" height="15" fill="rgb(232,216,24)"/><text x="494.00" y="366.50">PyUF..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="531" y="372" width="4" height="15" fill="rgb(230,208,21)"/><text x="534.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.34%)</title><rect x="531" y="388" width="4" height="15" fill="rgb(242,96,16)"/><text x="534.00" y="398.50"></text></g><g><title>0x7f1f09800e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="531" y="404" width="4" height="15" fill="rgb(223,48,49)"/><text x="534.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (64 samples, 21.77%)</title><rect x="282" y="244" width="257" height="15" fill="rgb(231,98,31)"/><text x="285.00" y="254.50">clip (numpy/core/fromnumeric.py)</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (63 samples, 21.43%)</title><rect x="286" y="260" width="253" height="15" fill="rgb(254,77,28)"/><text x="289.00" y="270.50">_wrapfunc (numpy/core/fromnumeric..</text></g><g><title>array_clip (methods.c) (61 samples, 20.75%)</title><rect x="294" y="276" width="245" height="15" fill="rgb(211,85,12)"/><text x="297.00" y="286.50">array_clip (methods.c)</text></g><g><title>forward_ndarray_method (methods.c) (61 samples, 20.75%)</title><rect x="294" y="292" width="245" height="15" fill="rgb(219,65,52)"/><text x="297.00" y="302.50">forward_ndarray_method (methods...</text></g><g><title>_clip (numpy/core/_methods.py) (61 samples, 20.75%)</title><rect x="294" y="308" width="245" height="15" fill="rgb(205,180,5)"/><text x="297.00" y="318.50">_clip (numpy/core/_methods.py)</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (42 samples, 14.29%)</title><rect x="371" y="324" width="168" height="15" fill="rgb(235,144,14)"/><text x="374.00" y="334.50">_clip_dep_is_scalar_n..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 5.10%)</title><rect x="479" y="340" width="60" height="15" fill="rgb(224,170,48)"/><text x="482.00" y="350.50">ufunc_..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="535" y="356" width="4" height="15" fill="rgb(242,166,11)"/><text x="538.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="535" y="372" width="4" height="15" fill="rgb(233,4,51)"/><text x="538.00" y="382.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (73 samples, 24.83%)</title><rect x="266" y="212" width="293" height="15" fill="rgb(241,228,51)"/><text x="269.00" y="222.50">clip (&lt;__array_function__ internals&gt;)</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (70 samples, 23.81%)</title><rect x="278" y="228" width="281" height="15" fill="rgb(205,183,39)"/><text x="281.00" y="238.50">array_implement_array_function (array..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (5 samples, 1.70%)</title><rect x="539" y="244" width="20" height="15" fill="rgb(252,175,2)"/><text x="542.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (4 samples, 1.36%)</title><rect x="543" y="260" width="16" height="15" fill="rgb(245,157,7)"/><text x="546.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.36%)</title><rect x="543" y="276" width="16" height="15" fill="rgb(216,44,18)"/><text x="546.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.36%)</title><rect x="543" y="292" width="16" height="15" fill="rgb(237,209,32)"/><text x="546.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="555" y="308" width="4" height="15" fill="rgb(214,54,33)"/><text x="558.00" y="318.50"></text></g><g><title>0x7f1ee4011cd0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="587" y="260" width="4" height="15" fill="rgb(239,228,46)"/><text x="590.00" y="270.50"></text></g><g><title>0x7f1ee4021f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="587" y="244" width="8" height="15" fill="rgb(219,34,17)"/><text x="590.00" y="254.50"></text></g><g><title>0x7f1ee4011d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="591" y="260" width="4" height="15" fill="rgb(219,9,1)"/><text x="594.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.34%)</title><rect x="591" y="276" width="4" height="15" fill="rgb(244,108,52)"/><text x="594.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="591" y="292" width="4" height="15" fill="rgb(226,219,44)"/><text x="594.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.34%)</title><rect x="591" y="308" width="4" height="15" fill="rgb(252,171,41)"/><text x="594.00" y="318.50"></text></g><g><title>0x7f1ee4014d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.02%)</title><rect x="595" y="292" width="13" height="15" fill="rgb(217,95,29)"/><text x="598.00" y="302.50"></text></g><g><title>0x7f1ee4014666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.02%)</title><rect x="595" y="308" width="13" height="15" fill="rgb(221,62,18)"/><text x="598.00" y="318.50"></text></g><g><title>0x7f1ee400a2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.02%)</title><rect x="595" y="324" width="13" height="15" fill="rgb(227,147,24)"/><text x="598.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.02%)</title><rect x="595" y="340" width="13" height="15" fill="rgb(212,215,14)"/><text x="598.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.02%)</title><rect x="595" y="356" width="13" height="15" fill="rgb(212,28,27)"/><text x="598.00" y="366.50"></text></g><g><title>0x7f1ee4014e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="608" y="292" width="4" height="15" fill="rgb(224,46,28)"/><text x="611.00" y="302.50"></text></g><g><title>0x7f1ee40082bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="608" y="308" width="4" height="15" fill="rgb(214,3,30)"/><text x="611.00" y="318.50"></text></g><g><title>0x7f1ee400790c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="608" y="324" width="4" height="15" fill="rgb(218,52,49)"/><text x="611.00" y="334.50"></text></g><g><title>0x7f1ee40302df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.70%)</title><rect x="595" y="276" width="21" height="15" fill="rgb(249,109,27)"/><text x="598.00" y="286.50"></text></g><g><title>0x7f1ee4015085 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="612" y="292" width="4" height="15" fill="rgb(242,52,20)"/><text x="615.00" y="302.50"></text></g><g><title>0x7f1ee4030474 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="616" y="276" width="4" height="15" fill="rgb(209,34,41)"/><text x="619.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.34%)</title><rect x="624" y="308" width="4" height="15" fill="rgb(215,162,1)"/><text x="627.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.34%)</title><rect x="624" y="324" width="4" height="15" fill="rgb(251,150,33)"/><text x="627.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.34%)</title><rect x="628" y="308" width="4" height="15" fill="rgb(225,94,41)"/><text x="631.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.34%)</title><rect x="628" y="324" width="4" height="15" fill="rgb(223,178,11)"/><text x="631.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="628" y="340" width="4" height="15" fill="rgb(236,118,41)"/><text x="631.00" y="350.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="632" y="308" width="4" height="15" fill="rgb(222,108,15)"/><text x="635.00" y="318.50"></text></g><g><title>0x7f1ee4030592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.70%)</title><rect x="620" y="276" width="20" height="15" fill="rgb(220,10,48)"/><text x="623.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 1.70%)</title><rect x="620" y="292" width="20" height="15" fill="rgb(244,40,32)"/><text x="623.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="636" y="308" width="4" height="15" fill="rgb(234,196,2)"/><text x="639.00" y="318.50"></text></g><g><title>0x7f1ee4030a10 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="640" y="276" width="4" height="15" fill="rgb(205,99,4)"/><text x="643.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.34%)</title><rect x="644" y="356" width="4" height="15" fill="rgb(241,190,24)"/><text x="647.00" y="366.50"></text></g><g><title>0x7f1ee4021fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.76%)</title><rect x="595" y="244" width="57" height="15" fill="rgb(241,181,7)"/><text x="598.00" y="254.50">0x7f1e..</text></g><g><title>0x7f1ee4031405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.76%)</title><rect x="595" y="260" width="57" height="15" fill="rgb(213,69,46)"/><text x="598.00" y="270.50">0x7f1e..</text></g><g><title>0x7f1ee4030c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="644" y="276" width="8" height="15" fill="rgb(207,65,1)"/><text x="647.00" y="286.50"></text></g><g><title>0x7f1ee4008529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.68%)</title><rect x="644" y="292" width="8" height="15" fill="rgb(206,26,33)"/><text x="647.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.68%)</title><rect x="644" y="308" width="8" height="15" fill="rgb(208,129,6)"/><text x="647.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.68%)</title><rect x="644" y="324" width="8" height="15" fill="rgb(249,228,20)"/><text x="647.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.68%)</title><rect x="644" y="340" width="8" height="15" fill="rgb(249,105,1)"/><text x="647.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="648" y="356" width="4" height="15" fill="rgb(244,181,40)"/><text x="651.00" y="366.50"></text></g><g><title>0x7f1ee4022009 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="652" y="244" width="4" height="15" fill="rgb(211,64,26)"/><text x="655.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.34%)</title><rect x="664" y="276" width="4" height="15" fill="rgb(242,180,25)"/><text x="667.00" y="286.50"></text></g><g><title>0x7f1ee402205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.04%)</title><rect x="656" y="244" width="24" height="15" fill="rgb(242,148,29)"/><text x="659.00" y="254.50">0..</text></g><g><title>array_take (methods.c) (6 samples, 2.04%)</title><rect x="656" y="260" width="24" height="15" fill="rgb(250,183,35)"/><text x="659.00" y="270.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 1.02%)</title><rect x="668" y="276" width="12" height="15" fill="rgb(235,143,51)"/><text x="671.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.68%)</title><rect x="672" y="292" width="8" height="15" fill="rgb(235,172,5)"/><text x="675.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.68%)</title><rect x="672" y="308" width="8" height="15" fill="rgb(228,143,5)"/><text x="675.00" y="318.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.34%)</title><rect x="676" y="324" width="4" height="15" fill="rgb(228,188,4)"/><text x="679.00" y="334.50"></text></g><g><title>0x7f1ee4022d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 8.84%)</title><rect x="587" y="228" width="105" height="15" fill="rgb(218,21,41)"/><text x="590.00" y="238.50">0x7f1ee4022d..</text></g><g><title>0x7f1ee402214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.02%)</title><rect x="680" y="244" width="12" height="15" fill="rgb(217,81,10)"/><text x="683.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.02%)</title><rect x="680" y="260" width="12" height="15" fill="rgb(211,79,41)"/><text x="683.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 1.02%)</title><rect x="680" y="276" width="12" height="15" fill="rgb(251,170,31)"/><text x="683.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 1.02%)</title><rect x="680" y="292" width="12" height="15" fill="rgb(242,215,50)"/><text x="683.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c) (2 samples, 0.68%)</title><rect x="684" y="308" width="8" height="15" fill="rgb(211,200,29)"/><text x="687.00" y="318.50"></text></g><g><title>0x7f1f0a5de902 (libc-2.29.so) (2 samples, 0.68%)</title><rect x="684" y="324" width="8" height="15" fill="rgb(205,182,29)"/><text x="687.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.02%)</title><rect x="772" y="260" width="12" height="15" fill="rgb(210,86,14)"/><text x="775.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.02%)</title><rect x="804" y="276" width="12" height="15" fill="rgb(216,65,13)"/><text x="807.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (14 samples, 4.76%)</title><rect x="784" y="260" width="56" height="15" fill="rgb(208,62,23)"/><text x="787.00" y="270.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.04%)</title><rect x="816" y="276" width="24" height="15" fill="rgb(223,62,29)"/><text x="819.00" y="286.50">p..</text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.34%)</title><rect x="836" y="292" width="4" height="15" fill="rgb(248,33,21)"/><text x="839.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.34%)</title><rect x="860" y="276" width="4" height="15" fill="rgb(212,6,41)"/><text x="863.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (11 samples, 3.74%)</title><rect x="840" y="260" width="44" height="15" fill="rgb(209,118,53)"/><text x="843.00" y="270.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 1.70%)</title><rect x="864" y="276" width="20" height="15" fill="rgb(232,85,17)"/><text x="867.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.68%)</title><rect x="876" y="292" width="8" height="15" fill="rgb(249,109,34)"/><text x="879.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.34%)</title><rect x="884" y="260" width="4" height="15" fill="rgb(248,71,12)"/><text x="887.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.34%)</title><rect x="884" y="276" width="4" height="15" fill="rgb(241,224,19)"/><text x="887.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.34%)</title><rect x="901" y="340" width="4" height="15" fill="rgb(237,158,37)"/><text x="904.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.34%)</title><rect x="901" y="356" width="4" height="15" fill="rgb(234,84,18)"/><text x="904.00" y="366.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.68%)</title><rect x="901" y="292" width="8" height="15" fill="rgb(213,63,51)"/><text x="904.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.68%)</title><rect x="901" y="308" width="8" height="15" fill="rgb(237,81,12)"/><text x="904.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.68%)</title><rect x="901" y="324" width="8" height="15" fill="rgb(221,86,37)"/><text x="904.00" y="334.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.34%)</title><rect x="905" y="340" width="4" height="15" fill="rgb(234,98,1)"/><text x="908.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="905" y="356" width="4" height="15" fill="rgb(232,15,2)"/><text x="908.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.34%)</title><rect x="905" y="372" width="4" height="15" fill="rgb(235,137,49)"/><text x="908.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="905" y="388" width="4" height="15" fill="rgb(250,91,21)"/><text x="908.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="905" y="404" width="4" height="15" fill="rgb(230,45,18)"/><text x="908.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="905" y="420" width="4" height="15" fill="rgb(221,216,41)"/><text x="908.00" y="430.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (7 samples, 2.38%)</title><rect x="888" y="260" width="29" height="15" fill="rgb(249,132,32)"/><text x="891.00" y="270.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c) (7 samples, 2.38%)</title><rect x="888" y="276" width="29" height="15" fill="rgb(218,129,36)"/><text x="891.00" y="286.50">_a..</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.68%)</title><rect x="909" y="292" width="8" height="15" fill="rgb(230,82,11)"/><text x="912.00" y="302.50"></text></g><g><title>0x7f1f0a6bc130 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="913" y="308" width="4" height="15" fill="rgb(215,75,14)"/><text x="916.00" y="318.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.68%)</title><rect x="917" y="260" width="8" height="15" fill="rgb(252,74,52)"/><text x="920.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (62 samples, 21.09%)</title><rect x="704" y="244" width="249" height="15" fill="rgb(205,161,4)"/><text x="707.00" y="254.50">check_array (sklearn/utils/valida..</text></g><g><title>simplefilter (warnings.py) (7 samples, 2.38%)</title><rect x="925" y="260" width="28" height="15" fill="rgb(230,170,15)"/><text x="928.00" y="270.50">s..</text></g><g><title>_add_filter (warnings.py) (5 samples, 1.70%)</title><rect x="933" y="276" width="20" height="15" fill="rgb(213,229,42)"/><text x="936.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (66 samples, 22.45%)</title><rect x="692" y="228" width="265" height="15" fill="rgb(240,77,45)"/><text x="695.00" y="238.50">_validate_X_predict (sklearn/tree/_..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.34%)</title><rect x="953" y="244" width="4" height="15" fill="rgb(214,127,4)"/><text x="956.00" y="254.50"></text></g><g><title>0x7f1f0a5969fb (libc-2.29.so) (1 samples, 0.34%)</title><rect x="957" y="308" width="4" height="15" fill="rgb(234,114,3)"/><text x="960.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.68%)</title><rect x="957" y="244" width="8" height="15" fill="rgb(224,214,18)"/><text x="960.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (2 samples, 0.68%)</title><rect x="957" y="260" width="8" height="15" fill="rgb(243,131,16)"/><text x="960.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (2 samples, 0.68%)</title><rect x="957" y="276" width="8" height="15" fill="rgb(212,21,46)"/><text x="960.00" y="286.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.68%)</title><rect x="957" y="292" width="8" height="15" fill="rgb(241,24,22)"/><text x="960.00" y="302.50"></text></g><g><title>0x7f1f0a5fed62 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="961" y="308" width="4" height="15" fill="rgb(254,64,0)"/><text x="964.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 1.02%)</title><rect x="957" y="228" width="12" height="15" fill="rgb(231,92,25)"/><text x="960.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.34%)</title><rect x="965" y="244" width="4" height="15" fill="rgb(213,40,54)"/><text x="968.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.34%)</title><rect x="965" y="260" width="4" height="15" fill="rgb(239,22,13)"/><text x="968.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.34%)</title><rect x="965" y="276" width="4" height="15" fill="rgb(230,69,40)"/><text x="968.00" y="286.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.34%)</title><rect x="969" y="244" width="4" height="15" fill="rgb(245,41,28)"/><text x="972.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="973" y="276" width="4" height="15" fill="rgb(231,52,44)"/><text x="976.00" y="286.50"></text></g><g><title>PyArray_CHKFLAGS (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="977" y="292" width="4" height="15" fill="rgb(205,206,36)"/><text x="980.00" y="302.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="977" y="308" width="4" height="15" fill="rgb(216,144,50)"/><text x="980.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.68%)</title><rect x="977" y="276" width="8" height="15" fill="rgb(234,95,26)"/><text x="980.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.34%)</title><rect x="981" y="292" width="4" height="15" fill="rgb(223,222,5)"/><text x="984.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="981" y="308" width="4" height="15" fill="rgb(249,222,44)"/><text x="984.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.34%)</title><rect x="981" y="324" width="4" height="15" fill="rgb(226,184,23)"/><text x="984.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.68%)</title><rect x="989" y="292" width="8" height="15" fill="rgb(228,141,5)"/><text x="992.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.34%)</title><rect x="993" y="308" width="4" height="15" fill="rgb(250,136,49)"/><text x="996.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="993" y="324" width="4" height="15" fill="rgb(214,152,27)"/><text x="996.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.34%)</title><rect x="993" y="340" width="4" height="15" fill="rgb(251,156,38)"/><text x="996.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.34%)</title><rect x="993" y="356" width="4" height="15" fill="rgb(249,168,6)"/><text x="996.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c) (8 samples, 2.72%)</title><rect x="969" y="228" width="32" height="15" fill="rgb(228,48,53)"/><text x="972.00" y="238.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.38%)</title><rect x="973" y="244" width="28" height="15" fill="rgb(214,70,47)"/><text x="976.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.38%)</title><rect x="973" y="260" width="28" height="15" fill="rgb(220,210,53)"/><text x="976.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 1.36%)</title><rect x="985" y="276" width="16" height="15" fill="rgb(247,151,50)"/><text x="988.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.34%)</title><rect x="997" y="292" width="4" height="15" fill="rgb(219,211,11)"/><text x="1000.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 1.02%)</title><rect x="1001" y="228" width="12" height="15" fill="rgb(205,196,24)"/><text x="1004.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.34%)</title><rect x="1009" y="244" width="4" height="15" fill="rgb(238,180,34)"/><text x="1012.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.68%)</title><rect x="1025" y="292" width="8" height="15" fill="rgb(234,86,44)"/><text x="1028.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.68%)</title><rect x="1025" y="308" width="8" height="15" fill="rgb(243,220,8)"/><text x="1028.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.68%)</title><rect x="1025" y="324" width="8" height="15" fill="rgb(244,125,38)"/><text x="1028.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.68%)</title><rect x="1025" y="340" width="8" height="15" fill="rgb(247,3,54)"/><text x="1028.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.68%)</title><rect x="1025" y="356" width="8" height="15" fill="rgb(229,69,5)"/><text x="1028.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.34%)</title><rect x="1037" y="308" width="4" height="15" fill="rgb(224,15,30)"/><text x="1040.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1045" y="356" width="4" height="15" fill="rgb(236,70,14)"/><text x="1048.00" y="366.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1049" y="356" width="4" height="15" fill="rgb(206,229,15)"/><text x="1052.00" y="366.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.34%)</title><rect x="1053" y="356" width="4" height="15" fill="rgb(212,58,36)"/><text x="1056.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.68%)</title><rect x="1057" y="356" width="8" height="15" fill="rgb(254,50,54)"/><text x="1060.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.38%)</title><rect x="1041" y="340" width="28" height="15" fill="rgb(205,72,49)"/><text x="1044.00" y="350.50">N..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1065" y="356" width="4" height="15" fill="rgb(209,186,36)"/><text x="1068.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 2.72%)</title><rect x="1041" y="324" width="32" height="15" fill="rgb(245,220,39)"/><text x="1044.00" y="334.50">Py..</text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.34%)</title><rect x="1069" y="340" width="4" height="15" fill="rgb(213,200,31)"/><text x="1072.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="1069" y="356" width="4" height="15" fill="rgb(213,191,11)"/><text x="1072.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.34%)</title><rect x="1069" y="372" width="4" height="15" fill="rgb(210,191,25)"/><text x="1072.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.34%)</title><rect x="1069" y="388" width="4" height="15" fill="rgb(213,179,7)"/><text x="1072.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="1069" y="404" width="4" height="15" fill="rgb(250,140,47)"/><text x="1072.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.34%)</title><rect x="1069" y="420" width="4" height="15" fill="rgb(234,106,6)"/><text x="1072.00" y="430.50"></text></g><g><title>array_sum (methods.c) (17 samples, 5.78%)</title><rect x="1013" y="228" width="68" height="15" fill="rgb(225,86,53)"/><text x="1016.00" y="238.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c) (17 samples, 5.78%)</title><rect x="1013" y="244" width="68" height="15" fill="rgb(225,122,36)"/><text x="1016.00" y="254.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 5.10%)</title><rect x="1021" y="260" width="60" height="15" fill="rgb(228,100,15)"/><text x="1024.00" y="270.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 4.76%)</title><rect x="1025" y="276" width="56" height="15" fill="rgb(242,186,37)"/><text x="1028.00" y="286.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 4.08%)</title><rect x="1033" y="292" width="48" height="15" fill="rgb(247,27,3)"/><text x="1036.00" y="302.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.40%)</title><rect x="1041" y="308" width="40" height="15" fill="rgb(225,6,7)"/><text x="1044.00" y="318.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.68%)</title><rect x="1073" y="324" width="8" height="15" fill="rgb(252,28,24)"/><text x="1076.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1077" y="340" width="4" height="15" fill="rgb(235,208,36)"/><text x="1080.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1077" y="356" width="4" height="15" fill="rgb(238,182,41)"/><text x="1080.00" y="366.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1077" y="372" width="4" height="15" fill="rgb(231,66,20)"/><text x="1080.00" y="382.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1077" y="388" width="4" height="15" fill="rgb(219,198,4)"/><text x="1080.00" y="398.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.02%)</title><rect x="1117" y="260" width="12" height="15" fill="rgb(207,161,49)"/><text x="1120.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 4.76%)</title><rect x="1081" y="228" width="56" height="15" fill="rgb(211,0,44)"/><text x="1084.00" y="238.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 3.06%)</title><rect x="1101" y="244" width="36" height="15" fill="rgb(245,207,23)"/><text x="1104.00" y="254.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.68%)</title><rect x="1129" y="260" width="8" height="15" fill="rgb(216,10,31)"/><text x="1132.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1137" y="292" width="4" height="15" fill="rgb(250,53,23)"/><text x="1140.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1137" y="308" width="4" height="15" fill="rgb(241,136,0)"/><text x="1140.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.02%)</title><rect x="1137" y="260" width="12" height="15" fill="rgb(213,201,14)"/><text x="1140.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.02%)</title><rect x="1137" y="276" width="12" height="15" fill="rgb(236,71,49)"/><text x="1140.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.68%)</title><rect x="1141" y="292" width="8" height="15" fill="rgb(249,157,31)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7f1f0a5dea41 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1145" y="308" width="4" height="15" fill="rgb(220,161,33)"/><text x="1148.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (259 samples, 88.10%)</title><rect x="114" y="180" width="1039" height="15" fill="rgb(235,14,48)"/><text x="117.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (259 samples, 88.10%)</title><rect x="114" y="196" width="1039" height="15" fill="rgb(220,188,10)"/><text x="117.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>predict_proba (sklearn/tree/_classes.py) (148 samples, 50.34%)</title><rect x="559" y="212" width="594" height="15" fill="rgb(240,33,26)"/><text x="562.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.36%)</title><rect x="1137" y="228" width="16" height="15" fill="rgb(249,148,54)"/><text x="1140.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.36%)</title><rect x="1137" y="244" width="16" height="15" fill="rgb(210,227,19)"/><text x="1140.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1149" y="260" width="4" height="15" fill="rgb(220,1,53)"/><text x="1152.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1149" y="276" width="4" height="15" fill="rgb(223,217,53)"/><text x="1152.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1149" y="292" width="4" height="15" fill="rgb(239,89,44)"/><text x="1152.00" y="302.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.34%)</title><rect x="1153" y="180" width="4" height="15" fill="rgb(239,42,53)"/><text x="1156.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="1153" y="196" width="4" height="15" fill="rgb(214,1,49)"/><text x="1156.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="1153" y="212" width="4" height="15" fill="rgb(240,15,41)"/><text x="1156.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.34%)</title><rect x="1157" y="228" width="4" height="15" fill="rgb(220,21,34)"/><text x="1160.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.34%)</title><rect x="1157" y="244" width="4" height="15" fill="rgb(214,117,2)"/><text x="1160.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1161" y="228" width="4" height="15" fill="rgb(244,88,19)"/><text x="1164.00" y="238.50"></text></g><g><title>array_add (number.c) (3 samples, 1.02%)</title><rect x="1157" y="180" width="12" height="15" fill="rgb(227,106,40)"/><text x="1160.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.02%)</title><rect x="1157" y="196" width="12" height="15" fill="rgb(239,23,10)"/><text x="1160.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.02%)</title><rect x="1157" y="212" width="12" height="15" fill="rgb(253,155,19)"/><text x="1160.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1165" y="228" width="4" height="15" fill="rgb(222,159,15)"/><text x="1168.00" y="238.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (269 samples, 91.50%)</title><rect x="98" y="68" width="1079" height="15" fill="rgb(239,63,46)"/><text x="101.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (269 samples, 91.50%)</title><rect x="98" y="84" width="1079" height="15" fill="rgb(213,139,5)"/><text x="101.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (269 samples, 91.50%)</title><rect x="98" y="100" width="1079" height="15" fill="rgb(229,190,15)"/><text x="101.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (269 samples, 91.50%)</title><rect x="98" y="116" width="1079" height="15" fill="rgb(245,83,47)"/><text x="101.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (269 samples, 91.50%)</title><rect x="98" y="132" width="1079" height="15" fill="rgb(216,163,34)"/><text x="101.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (269 samples, 91.50%)</title><rect x="98" y="148" width="1079" height="15" fill="rgb(242,2,14)"/><text x="101.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (266 samples, 90.48%)</title><rect x="110" y="164" width="1067" height="15" fill="rgb(230,33,19)"/><text x="113.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_sum (methods.c) (2 samples, 0.68%)</title><rect x="1169" y="180" width="8" height="15" fill="rgb(215,219,37)"/><text x="1172.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.68%)</title><rect x="1169" y="196" width="8" height="15" fill="rgb(212,141,13)"/><text x="1172.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (2 samples, 0.68%)</title><rect x="1169" y="212" width="8" height="15" fill="rgb(223,217,15)"/><text x="1172.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1173" y="228" width="4" height="15" fill="rgb(230,223,43)"/><text x="1176.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1173" y="244" width="4" height="15" fill="rgb(249,91,33)"/><text x="1176.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.34%)</title><rect x="1173" y="260" width="4" height="15" fill="rgb(240,82,43)"/><text x="1176.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.34%)</title><rect x="1173" y="276" width="4" height="15" fill="rgb(210,25,16)"/><text x="1176.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.34%)</title><rect x="1173" y="292" width="4" height="15" fill="rgb(209,25,17)"/><text x="1176.00" y="302.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.34%)</title><rect x="1177" y="180" width="4" height="15" fill="rgb(212,54,34)"/><text x="1180.00" y="190.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1177" y="196" width="4" height="15" fill="rgb(239,35,22)"/><text x="1180.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1177" y="212" width="4" height="15" fill="rgb(205,18,13)"/><text x="1180.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.34%)</title><rect x="1177" y="228" width="4" height="15" fill="rgb(214,96,51)"/><text x="1180.00" y="238.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.34%)</title><rect x="1177" y="244" width="4" height="15" fill="rgb(228,119,16)"/><text x="1180.00" y="254.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.34%)</title><rect x="1177" y="260" width="4" height="15" fill="rgb(213,108,22)"/><text x="1180.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.34%)</title><rect x="1177" y="276" width="4" height="15" fill="rgb(206,193,23)"/><text x="1180.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.34%)</title><rect x="1177" y="292" width="4" height="15" fill="rgb(211,6,53)"/><text x="1180.00" y="302.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.34%)</title><rect x="1181" y="180" width="4" height="15" fill="rgb(207,18,36)"/><text x="1184.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.34%)</title><rect x="1181" y="196" width="4" height="15" fill="rgb(217,103,41)"/><text x="1184.00" y="206.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="1181" y="212" width="4" height="15" fill="rgb(214,71,38)"/><text x="1184.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.34%)</title><rect x="1181" y="228" width="4" height="15" fill="rgb(252,104,16)"/><text x="1184.00" y="238.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.34%)</title><rect x="1181" y="244" width="4" height="15" fill="rgb(227,201,22)"/><text x="1184.00" y="254.50"></text></g><g><title>all (294 samples, 100%)</title><rect x="10" y="36" width="1179" height="15" fill="rgb(208,184,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (294 samples, 100.00%)</title><rect x="10" y="52" width="1179" height="15" fill="rgb(253,103,18)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_double_.py) (3 samples, 1.02%)</title><rect x="1177" y="68" width="12" height="15" fill="rgb(214,188,54)"/><text x="1180.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (3 samples, 1.02%)</title><rect x="1177" y="84" width="12" height="15" fill="rgb(253,29,53)"/><text x="1180.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.02%)</title><rect x="1177" y="100" width="12" height="15" fill="rgb(219,223,22)"/><text x="1180.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 1.02%)</title><rect x="1177" y="116" width="12" height="15" fill="rgb(223,72,45)"/><text x="1180.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 1.02%)</title><rect x="1177" y="132" width="12" height="15" fill="rgb(215,227,14)"/><text x="1180.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (3 samples, 1.02%)</title><rect x="1177" y="148" width="12" height="15" fill="rgb(234,80,6)"/><text x="1180.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (3 samples, 1.02%)</title><rect x="1177" y="164" width="12" height="15" fill="rgb(252,166,49)"/><text x="1180.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.34%)</title><rect x="1185" y="180" width="4" height="15" fill="rgb(232,186,35)"/><text x="1188.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.34%)</title><rect x="1185" y="196" width="4" height="15" fill="rgb(234,26,44)"/><text x="1188.00" y="206.50"></text></g><g><title>0x7f1ee4016b11 (?) (1 samples, 0.34%)</title><rect x="1185" y="212" width="4" height="15" fill="rgb(249,62,9)"/><text x="1188.00" y="222.50"></text></g><g><title>0x7f1ee404810a (?) (1 samples, 0.34%)</title><rect x="1185" y="228" width="4" height="15" fill="rgb(212,119,18)"/><text x="1188.00" y="238.50"></text></g><g><title>0x7f1ee4273d8c (?) (1 samples, 0.34%)</title><rect x="1185" y="244" width="4" height="15" fill="rgb(210,129,54)"/><text x="1188.00" y="254.50"></text></g><g><title>0x7f1ee426cd50 (?) (1 samples, 0.34%)</title><rect x="1185" y="260" width="4" height="15" fill="rgb(221,96,18)"/><text x="1188.00" y="270.50"></text></g><g><title>0x7f1ee426cd50 (?) (1 samples, 0.34%)</title><rect x="1185" y="276" width="4" height="15" fill="rgb(238,129,34)"/><text x="1188.00" y="286.50"></text></g><g><title>0x7f1ee426ccfe (?) (1 samples, 0.34%)</title><rect x="1185" y="292" width="4" height="15" fill="rgb(239,118,49)"/><text x="1188.00" y="302.50"></text></g></g></svg>