<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.30%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(238,53,3)"/><text x="13.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(226,161,31)"/><text x="13.00" y="174.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.30%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(230,72,53)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(238,182,44)"/><text x="16.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="13" y="228" width="4" height="15" fill="rgb(253,131,43)"/><text x="16.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.30%)</title><rect x="13" y="244" width="4" height="15" fill="rgb(222,212,2)"/><text x="16.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.30%)</title><rect x="13" y="260" width="4" height="15" fill="rgb(207,135,15)"/><text x="16.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="17" y="212" width="3" height="15" fill="rgb(236,33,25)"/><text x="20.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (3 samples, 0.90%)</title><rect x="13" y="164" width="11" height="15" fill="rgb(249,162,6)"/><text x="16.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (3 samples, 0.90%)</title><rect x="13" y="180" width="11" height="15" fill="rgb(232,175,37)"/><text x="16.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.60%)</title><rect x="17" y="196" width="7" height="15" fill="rgb(244,2,28)"/><text x="20.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="20" y="212" width="4" height="15" fill="rgb(254,16,19)"/><text x="23.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.30%)</title><rect x="20" y="228" width="4" height="15" fill="rgb(244,130,31)"/><text x="23.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.30%)</title><rect x="20" y="244" width="4" height="15" fill="rgb(244,78,33)"/><text x="23.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.30%)</title><rect x="20" y="260" width="4" height="15" fill="rgb(249,208,45)"/><text x="23.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="20" y="276" width="4" height="15" fill="rgb(233,209,50)"/><text x="23.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="20" y="292" width="4" height="15" fill="rgb(240,104,20)"/><text x="23.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="20" y="308" width="4" height="15" fill="rgb(231,71,49)"/><text x="23.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.30%)</title><rect x="24" y="212" width="3" height="15" fill="rgb(234,218,33)"/><text x="27.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.30%)</title><rect x="24" y="228" width="3" height="15" fill="rgb(237,19,2)"/><text x="27.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.30%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(254,142,42)"/><text x="27.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.30%)</title><rect x="24" y="260" width="3" height="15" fill="rgb(233,144,53)"/><text x="27.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.30%)</title><rect x="24" y="276" width="3" height="15" fill="rgb(226,228,34)"/><text x="27.00" y="286.50"></text></g><g><title>0x7f4ee11b37a5 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="24" y="292" width="3" height="15" fill="rgb(243,81,17)"/><text x="27.00" y="302.50"></text></g><g><title>0x7f4ee11b3a4d (libc-2.29.so) (1 samples, 0.30%)</title><rect x="24" y="308" width="3" height="15" fill="rgb(213,28,7)"/><text x="27.00" y="318.50"></text></g><g><title>0x7f4ec36019dd (?) (1 samples, 0.30%)</title><rect x="27" y="244" width="4" height="15" fill="rgb(250,103,11)"/><text x="30.00" y="254.50"></text></g><g><title>0x7f4ec3622265 (?) (1 samples, 0.30%)</title><rect x="27" y="260" width="4" height="15" fill="rgb(242,210,53)"/><text x="30.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.30%)</title><rect x="27" y="276" width="4" height="15" fill="rgb(216,139,50)"/><text x="30.00" y="286.50"></text></g><g><title>0x7f4ee13cdc7b (libm-2.29.so) (1 samples, 0.30%)</title><rect x="27" y="292" width="4" height="15" fill="rgb(242,176,25)"/><text x="30.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (3 samples, 0.90%)</title><rect x="24" y="164" width="10" height="15" fill="rgb(227,122,47)"/><text x="27.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.90%)</title><rect x="24" y="180" width="10" height="15" fill="rgb(231,0,5)"/><text x="27.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.90%)</title><rect x="24" y="196" width="10" height="15" fill="rgb(213,65,4)"/><text x="27.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.60%)</title><rect x="27" y="212" width="7" height="15" fill="rgb(235,52,41)"/><text x="30.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.60%)</title><rect x="27" y="228" width="7" height="15" fill="rgb(209,66,14)"/><text x="30.00" y="238.50"></text></g><g><title>0x7f4ec36019dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="31" y="244" width="3" height="15" fill="rgb(231,135,48)"/><text x="34.00" y="254.50"></text></g><g><title>0x7f4ec3622265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="31" y="260" width="3" height="15" fill="rgb(225,118,32)"/><text x="34.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.30%)</title><rect x="31" y="276" width="3" height="15" fill="rgb(245,146,34)"/><text x="34.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (9 samples, 2.70%)</title><rect x="10" y="100" width="31" height="15" fill="rgb(239,183,17)"/><text x="13.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (9 samples, 2.70%)</title><rect x="10" y="116" width="31" height="15" fill="rgb(242,228,44)"/><text x="13.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (9 samples, 2.70%)</title><rect x="10" y="132" width="31" height="15" fill="rgb(224,137,47)"/><text x="13.00" y="142.50">&lt;l..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (8 samples, 2.40%)</title><rect x="13" y="148" width="28" height="15" fill="rgb(222,137,2)"/><text x="16.00" y="158.50">p..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 0.60%)</title><rect x="34" y="164" width="7" height="15" fill="rgb(212,173,33)"/><text x="37.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.60%)</title><rect x="34" y="180" width="7" height="15" fill="rgb(213,38,47)"/><text x="37.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.60%)</title><rect x="34" y="196" width="7" height="15" fill="rgb(242,20,24)"/><text x="37.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.60%)</title><rect x="34" y="212" width="7" height="15" fill="rgb(241,134,2)"/><text x="37.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.60%)</title><rect x="34" y="228" width="7" height="15" fill="rgb(216,148,22)"/><text x="37.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.60%)</title><rect x="34" y="244" width="7" height="15" fill="rgb(230,188,21)"/><text x="37.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.60%)</title><rect x="34" y="260" width="7" height="15" fill="rgb(216,37,10)"/><text x="37.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.60%)</title><rect x="34" y="276" width="7" height="15" fill="rgb(251,177,7)"/><text x="37.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.60%)</title><rect x="34" y="292" width="7" height="15" fill="rgb(235,46,51)"/><text x="37.00" y="302.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="63" y="196" width="3" height="15" fill="rgb(254,117,3)"/><text x="66.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.20%)</title><rect x="59" y="180" width="14" height="15" fill="rgb(223,152,10)"/><text x="62.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="66" y="196" width="7" height="15" fill="rgb(208,217,52)"/><text x="69.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (8 samples, 2.40%)</title><rect x="48" y="148" width="29" height="15" fill="rgb(216,38,7)"/><text x="51.00" y="158.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 2.10%)</title><rect x="52" y="164" width="25" height="15" fill="rgb(250,190,42)"/><text x="55.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.30%)</title><rect x="73" y="180" width="4" height="15" fill="rgb(237,118,39)"/><text x="76.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.30%)</title><rect x="80" y="196" width="4" height="15" fill="rgb(224,57,14)"/><text x="83.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.30%)</title><rect x="80" y="212" width="4" height="15" fill="rgb(239,156,54)"/><text x="83.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="84" y="212" width="3" height="15" fill="rgb(213,114,17)"/><text x="87.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.90%)</title><rect x="80" y="180" width="11" height="15" fill="rgb(224,60,20)"/><text x="83.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.60%)</title><rect x="84" y="196" width="7" height="15" fill="rgb(224,62,39)"/><text x="87.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.30%)</title><rect x="87" y="212" width="4" height="15" fill="rgb(241,146,36)"/><text x="90.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="87" y="228" width="4" height="15" fill="rgb(229,127,29)"/><text x="90.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.30%)</title><rect x="91" y="196" width="4" height="15" fill="rgb(249,22,22)"/><text x="94.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.30%)</title><rect x="95" y="196" width="3" height="15" fill="rgb(227,5,2)"/><text x="98.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.30%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(250,217,7)"/><text x="98.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.30%)</title><rect x="98" y="196" width="4" height="15" fill="rgb(209,208,21)"/><text x="101.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.30%)</title><rect x="98" y="212" width="4" height="15" fill="rgb(232,210,25)"/><text x="101.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.60%)</title><rect x="102" y="196" width="7" height="15" fill="rgb(228,90,17)"/><text x="105.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.30%)</title><rect x="105" y="212" width="4" height="15" fill="rgb(211,224,40)"/><text x="108.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.30%)</title><rect x="105" y="228" width="4" height="15" fill="rgb(226,120,6)"/><text x="108.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.30%)</title><rect x="109" y="212" width="3" height="15" fill="rgb(254,48,39)"/><text x="112.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.30%)</title><rect x="109" y="228" width="3" height="15" fill="rgb(223,106,54)"/><text x="112.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (7 samples, 2.10%)</title><rect x="91" y="180" width="25" height="15" fill="rgb(215,115,18)"/><text x="94.00" y="190.50">d..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.60%)</title><rect x="109" y="196" width="7" height="15" fill="rgb(223,188,7)"/><text x="112.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.30%)</title><rect x="112" y="212" width="4" height="15" fill="rgb(209,99,41)"/><text x="115.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.30%)</title><rect x="112" y="228" width="4" height="15" fill="rgb(224,109,26)"/><text x="115.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.30%)</title><rect x="116" y="180" width="3" height="15" fill="rgb(219,123,5)"/><text x="119.00" y="190.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="119" y="260" width="4" height="15" fill="rgb(212,7,45)"/><text x="122.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="119" y="276" width="4" height="15" fill="rgb(218,176,38)"/><text x="122.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.30%)</title><rect x="119" y="292" width="4" height="15" fill="rgb(218,15,12)"/><text x="122.00" y="302.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1926) (1 samples, 0.30%)</title><rect x="119" y="308" width="4" height="15" fill="rgb(237,54,1)"/><text x="122.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.30%)</title><rect x="123" y="308" width="3" height="15" fill="rgb(243,102,12)"/><text x="126.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.60%)</title><rect x="123" y="260" width="7" height="15" fill="rgb(210,88,14)"/><text x="126.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.60%)</title><rect x="123" y="276" width="7" height="15" fill="rgb(234,123,34)"/><text x="126.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.60%)</title><rect x="123" y="292" width="7" height="15" fill="rgb(232,116,33)"/><text x="126.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.30%)</title><rect x="126" y="308" width="4" height="15" fill="rgb(220,227,39)"/><text x="129.00" y="318.50"></text></g><g><title>array_add (number.c:330) (4 samples, 1.20%)</title><rect x="119" y="196" width="15" height="15" fill="rgb(242,113,35)"/><text x="122.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.20%)</title><rect x="119" y="212" width="15" height="15" fill="rgb(214,196,16)"/><text x="122.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.20%)</title><rect x="119" y="228" width="15" height="15" fill="rgb(227,184,35)"/><text x="122.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.20%)</title><rect x="119" y="244" width="15" height="15" fill="rgb(219,86,7)"/><text x="122.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="130" y="260" width="4" height="15" fill="rgb(234,201,24)"/><text x="133.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="130" y="276" width="4" height="15" fill="rgb(247,32,50)"/><text x="133.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="130" y="292" width="4" height="15" fill="rgb(220,211,19)"/><text x="133.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.30%)</title><rect x="130" y="308" width="4" height="15" fill="rgb(246,114,50)"/><text x="133.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.30%)</title><rect x="130" y="324" width="4" height="15" fill="rgb(239,190,24)"/><text x="133.00" y="334.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 5.11%)</title><rect x="134" y="212" width="60" height="15" fill="rgb(212,74,33)"/><text x="137.00" y="222.50">dgemm_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (8 samples, 2.40%)</title><rect x="194" y="244" width="28" height="15" fill="rgb(213,34,22)"/><text x="197.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (8 samples, 2.40%)</title><rect x="194" y="260" width="28" height="15" fill="rgb(237,19,27)"/><text x="197.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (8 samples, 2.40%)</title><rect x="194" y="276" width="28" height="15" fill="rgb(252,108,23)"/><text x="197.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (8 samples, 2.40%)</title><rect x="194" y="292" width="28" height="15" fill="rgb(253,51,39)"/><text x="197.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (8 samples, 2.40%)</title><rect x="194" y="308" width="28" height="15" fill="rgb(237,38,15)"/><text x="197.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (8 samples, 2.40%)</title><rect x="194" y="324" width="28" height="15" fill="rgb(232,81,12)"/><text x="197.00" y="334.50">_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (33 samples, 9.91%)</title><rect x="134" y="196" width="116" height="15" fill="rgb(252,121,31)"/><text x="137.00" y="206.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 4.80%)</title><rect x="194" y="212" width="56" height="15" fill="rgb(232,46,10)"/><text x="197.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (16 samples, 4.80%)</title><rect x="194" y="228" width="56" height="15" fill="rgb(225,103,37)"/><text x="197.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (8 samples, 2.40%)</title><rect x="222" y="244" width="28" height="15" fill="rgb(243,47,36)"/><text x="225.00" y="254.50">P..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (8 samples, 2.40%)</title><rect x="222" y="260" width="28" height="15" fill="rgb(240,30,31)"/><text x="225.00" y="270.50">D..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 2.40%)</title><rect x="222" y="276" width="28" height="15" fill="rgb(212,28,5)"/><text x="225.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 2.40%)</title><rect x="222" y="292" width="28" height="15" fill="rgb(214,195,27)"/><text x="225.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 2.10%)</title><rect x="226" y="308" width="24" height="15" fill="rgb(252,96,40)"/><text x="229.00" y="318.50">d..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (50 samples, 15.02%)</title><rect x="77" y="164" width="177" height="15" fill="rgb(238,54,53)"/><text x="80.00" y="174.50">_predict_proba_lr (skle..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (38 samples, 11.41%)</title><rect x="119" y="180" width="135" height="15" fill="rgb(247,39,34)"/><text x="122.00" y="190.50">decision_function..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.30%)</title><rect x="250" y="196" width="4" height="15" fill="rgb(252,16,52)"/><text x="253.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1189) (1 samples, 0.30%)</title><rect x="250" y="212" width="4" height="15" fill="rgb(238,64,11)"/><text x="253.00" y="222.50"></text></g><g><title>0x7f4ec36019da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="254" y="244" width="4" height="15" fill="rgb(215,218,0)"/><text x="257.00" y="254.50"></text></g><g><title>0x7f4ec35dffe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="258" y="276" width="3" height="15" fill="rgb(244,182,38)"/><text x="261.00" y="286.50"></text></g><g><title>0x7f4ec372b9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="261" y="276" width="7" height="15" fill="rgb(238,194,6)"/><text x="264.00" y="286.50"></text></g><g><title>0x7f4ee13cdba0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="268" y="292" width="4" height="15" fill="rgb(237,123,42)"/><text x="271.00" y="302.50"></text></g><g><title>0x7f4ee13cdbb4 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="272" y="292" width="3" height="15" fill="rgb(222,51,44)"/><text x="275.00" y="302.50"></text></g><g><title>0x7f4ee13cdbd3 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="275" y="292" width="4" height="15" fill="rgb(252,136,35)"/><text x="278.00" y="302.50"></text></g><g><title>0x7f4ee13cdbf9 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="279" y="292" width="3" height="15" fill="rgb(240,1,2)"/><text x="282.00" y="302.50"></text></g><g><title>0x7f4ee13cdc2e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="282" y="292" width="4" height="15" fill="rgb(224,229,42)"/><text x="285.00" y="302.50"></text></g><g><title>0x7f4ec3622265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.70%)</title><rect x="258" y="260" width="31" height="15" fill="rgb(236,82,12)"/><text x="261.00" y="270.50">0x..</text></g><g><title>exp (libm-2.29.so) (6 samples, 1.80%)</title><rect x="268" y="276" width="21" height="15" fill="rgb(247,116,12)"/><text x="271.00" y="286.50"></text></g><g><title>0x7f4ee13cdc7b (libm-2.29.so) (1 samples, 0.30%)</title><rect x="286" y="292" width="3" height="15" fill="rgb(237,87,30)"/><text x="289.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (17 samples, 5.11%)</title><rect x="254" y="164" width="60" height="15" fill="rgb(230,198,43)"/><text x="257.00" y="174.50">_predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 5.11%)</title><rect x="254" y="180" width="60" height="15" fill="rgb(232,51,26)"/><text x="257.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (17 samples, 5.11%)</title><rect x="254" y="196" width="60" height="15" fill="rgb(244,112,3)"/><text x="257.00" y="206.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (17 samples, 5.11%)</title><rect x="254" y="212" width="60" height="15" fill="rgb(231,40,30)"/><text x="257.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (17 samples, 5.11%)</title><rect x="254" y="228" width="60" height="15" fill="rgb(225,229,4)"/><text x="257.00" y="238.50">trivia..</text></g><g><title>0x7f4ec36019dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.80%)</title><rect x="258" y="244" width="56" height="15" fill="rgb(240,1,27)"/><text x="261.00" y="254.50">0x7f4..</text></g><g><title>0x7f4ec3622279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.10%)</title><rect x="289" y="260" width="25" height="15" fill="rgb(249,132,53)"/><text x="292.00" y="270.50">0..</text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.30%)</title><rect x="318" y="180" width="3" height="15" fill="rgb(232,44,33)"/><text x="321.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.30%)</title><rect x="318" y="196" width="3" height="15" fill="rgb(211,187,49)"/><text x="321.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.30%)</title><rect x="318" y="212" width="3" height="15" fill="rgb(249,72,45)"/><text x="321.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.30%)</title><rect x="318" y="228" width="3" height="15" fill="rgb(245,103,16)"/><text x="321.00" y="238.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.30%)</title><rect x="318" y="244" width="3" height="15" fill="rgb(205,24,15)"/><text x="321.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.30%)</title><rect x="321" y="244" width="4" height="15" fill="rgb(230,182,51)"/><text x="324.00" y="254.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.30%)</title><rect x="325" y="308" width="3" height="15" fill="rgb(249,8,11)"/><text x="328.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.60%)</title><rect x="325" y="276" width="7" height="15" fill="rgb(217,6,40)"/><text x="328.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.60%)</title><rect x="325" y="292" width="7" height="15" fill="rgb(209,119,16)"/><text x="328.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.30%)</title><rect x="328" y="308" width="4" height="15" fill="rgb(207,61,51)"/><text x="331.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:50) (1 samples, 0.30%)</title><rect x="328" y="324" width="4" height="15" fill="rgb(226,22,24)"/><text x="331.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.30%)</title><rect x="328" y="340" width="4" height="15" fill="rgb(215,54,19)"/><text x="331.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.30%)</title><rect x="332" y="292" width="4" height="15" fill="rgb(231,136,43)"/><text x="335.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.30%)</title><rect x="336" y="292" width="3" height="15" fill="rgb(250,14,39)"/><text x="339.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.30%)</title><rect x="339" y="308" width="4" height="15" fill="rgb(207,188,52)"/><text x="342.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.30%)</title><rect x="339" y="324" width="4" height="15" fill="rgb(225,189,34)"/><text x="342.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.30%)</title><rect x="343" y="308" width="3" height="15" fill="rgb(243,12,35)"/><text x="346.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.30%)</title><rect x="346" y="308" width="4" height="15" fill="rgb(223,195,19)"/><text x="349.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:195) (1 samples, 0.30%)</title><rect x="350" y="308" width="3" height="15" fill="rgb(236,136,18)"/><text x="353.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 3.00%)</title><rect x="321" y="180" width="36" height="15" fill="rgb(222,86,0)"/><text x="324.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 3.00%)</title><rect x="321" y="196" width="36" height="15" fill="rgb(247,207,26)"/><text x="324.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.00%)</title><rect x="321" y="212" width="36" height="15" fill="rgb(233,206,5)"/><text x="324.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 3.00%)</title><rect x="321" y="228" width="36" height="15" fill="rgb(205,206,20)"/><text x="324.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 2.70%)</title><rect x="325" y="244" width="32" height="15" fill="rgb(245,215,47)"/><text x="328.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 2.70%)</title><rect x="325" y="260" width="32" height="15" fill="rgb(218,159,36)"/><text x="328.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 2.10%)</title><rect x="332" y="276" width="25" height="15" fill="rgb(246,45,10)"/><text x="335.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 1.50%)</title><rect x="339" y="292" width="18" height="15" fill="rgb(231,2,32)"/><text x="342.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.30%)</title><rect x="353" y="308" width="4" height="15" fill="rgb(234,119,44)"/><text x="356.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="357" y="180" width="3" height="15" fill="rgb(234,213,36)"/><text x="360.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="357" y="196" width="3" height="15" fill="rgb(210,150,24)"/><text x="360.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="357" y="212" width="3" height="15" fill="rgb(238,133,31)"/><text x="360.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.30%)</title><rect x="357" y="228" width="3" height="15" fill="rgb(223,72,15)"/><text x="360.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.30%)</title><rect x="360" y="228" width="4" height="15" fill="rgb(223,55,50)"/><text x="363.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.30%)</title><rect x="360" y="244" width="4" height="15" fill="rgb(239,146,52)"/><text x="363.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2156) (1 samples, 0.30%)</title><rect x="360" y="260" width="4" height="15" fill="rgb(216,192,38)"/><text x="363.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.30%)</title><rect x="364" y="228" width="3" height="15" fill="rgb(220,53,16)"/><text x="367.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.30%)</title><rect x="364" y="244" width="3" height="15" fill="rgb(217,226,29)"/><text x="367.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:38) (104 samples, 31.23%)</title><rect x="10" y="52" width="368" height="15" fill="rgb(225,190,32)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:37) (104 samples, 31.23%)</title><rect x="10" y="68" width="368" height="15" fill="rgb(225,66,16)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (104 samples, 31.23%)</title><rect x="10" y="84" width="368" height="15" fill="rgb(254,216,14)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (95 samples, 28.53%)</title><rect x="41" y="100" width="337" height="15" fill="rgb(234,176,44)"/><text x="44.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (93 samples, 27.93%)</title><rect x="48" y="116" width="330" height="15" fill="rgb(221,60,39)"/><text x="51.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (93 samples, 27.93%)</title><rect x="48" y="132" width="330" height="15" fill="rgb(210,62,37)"/><text x="51.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (85 samples, 25.53%)</title><rect x="77" y="148" width="301" height="15" fill="rgb(245,76,28)"/><text x="80.00" y="158.50">predict_proba (sklearn/linear_model/_log..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (18 samples, 5.41%)</title><rect x="314" y="164" width="64" height="15" fill="rgb(208,123,14)"/><text x="317.00" y="174.50">_predic..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.50%)</title><rect x="360" y="180" width="18" height="15" fill="rgb(231,211,20)"/><text x="363.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.50%)</title><rect x="360" y="196" width="18" height="15" fill="rgb(254,63,16)"/><text x="363.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.50%)</title><rect x="360" y="212" width="18" height="15" fill="rgb(231,190,51)"/><text x="363.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.90%)</title><rect x="367" y="228" width="11" height="15" fill="rgb(247,57,39)"/><text x="370.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.90%)</title><rect x="367" y="244" width="11" height="15" fill="rgb(205,177,3)"/><text x="370.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.90%)</title><rect x="367" y="260" width="11" height="15" fill="rgb(252,100,22)"/><text x="370.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.90%)</title><rect x="367" y="276" width="11" height="15" fill="rgb(209,147,35)"/><text x="370.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.90%)</title><rect x="367" y="292" width="11" height="15" fill="rgb(208,176,45)"/><text x="370.00" y="302.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.30%)</title><rect x="378" y="852" width="4" height="15" fill="rgb(248,221,43)"/><text x="381.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.30%)</title><rect x="378" y="868" width="4" height="15" fill="rgb(246,222,44)"/><text x="381.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.30%)</title><rect x="378" y="884" width="4" height="15" fill="rgb(207,129,2)"/><text x="381.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.30%)</title><rect x="378" y="900" width="4" height="15" fill="rgb(238,109,31)"/><text x="381.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.30%)</title><rect x="378" y="916" width="4" height="15" fill="rgb(225,219,52)"/><text x="381.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.30%)</title><rect x="378" y="932" width="4" height="15" fill="rgb(213,100,29)"/><text x="381.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:47) (1 samples, 0.30%)</title><rect x="378" y="948" width="4" height="15" fill="rgb(237,38,19)"/><text x="381.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.30%)</title><rect x="382" y="964" width="3" height="15" fill="rgb(213,194,26)"/><text x="385.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.30%)</title><rect x="382" y="980" width="3" height="15" fill="rgb(225,199,22)"/><text x="385.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (4 samples, 1.20%)</title><rect x="378" y="148" width="14" height="15" fill="rgb(229,4,4)"/><text x="381.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="164" width="14" height="15" fill="rgb(244,213,18)"/><text x="381.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.20%)</title><rect x="378" y="180" width="14" height="15" fill="rgb(249,210,33)"/><text x="381.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="196" width="14" height="15" fill="rgb(234,184,17)"/><text x="381.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="212" width="14" height="15" fill="rgb(227,68,52)"/><text x="381.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="378" y="228" width="14" height="15" fill="rgb(206,146,18)"/><text x="381.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="378" y="244" width="14" height="15" fill="rgb(225,90,19)"/><text x="381.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="378" y="260" width="14" height="15" fill="rgb(254,13,51)"/><text x="381.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="276" width="14" height="15" fill="rgb(213,60,49)"/><text x="381.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.20%)</title><rect x="378" y="292" width="14" height="15" fill="rgb(212,26,49)"/><text x="381.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="308" width="14" height="15" fill="rgb(229,151,34)"/><text x="381.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="378" y="324" width="14" height="15" fill="rgb(243,89,36)"/><text x="381.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="378" y="340" width="14" height="15" fill="rgb(213,198,29)"/><text x="381.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="378" y="356" width="14" height="15" fill="rgb(229,119,54)"/><text x="381.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="372" width="14" height="15" fill="rgb(241,141,2)"/><text x="381.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.20%)</title><rect x="378" y="388" width="14" height="15" fill="rgb(215,65,2)"/><text x="381.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="404" width="14" height="15" fill="rgb(234,11,30)"/><text x="381.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="378" y="420" width="14" height="15" fill="rgb(238,66,5)"/><text x="381.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="378" y="436" width="14" height="15" fill="rgb(232,64,50)"/><text x="381.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="378" y="452" width="14" height="15" fill="rgb(239,85,20)"/><text x="381.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="468" width="14" height="15" fill="rgb(208,54,44)"/><text x="381.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.20%)</title><rect x="378" y="484" width="14" height="15" fill="rgb(216,179,33)"/><text x="381.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="500" width="14" height="15" fill="rgb(238,63,34)"/><text x="381.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="378" y="516" width="14" height="15" fill="rgb(244,103,22)"/><text x="381.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="378" y="532" width="14" height="15" fill="rgb(215,185,36)"/><text x="381.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="378" y="548" width="14" height="15" fill="rgb(248,83,31)"/><text x="381.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="564" width="14" height="15" fill="rgb(250,14,48)"/><text x="381.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.20%)</title><rect x="378" y="580" width="14" height="15" fill="rgb(248,24,52)"/><text x="381.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="596" width="14" height="15" fill="rgb(254,82,38)"/><text x="381.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.20%)</title><rect x="378" y="612" width="14" height="15" fill="rgb(227,69,9)"/><text x="381.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="628" width="14" height="15" fill="rgb(224,43,21)"/><text x="381.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="644" width="14" height="15" fill="rgb(251,128,52)"/><text x="381.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="378" y="660" width="14" height="15" fill="rgb(216,189,7)"/><text x="381.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="378" y="676" width="14" height="15" fill="rgb(247,45,20)"/><text x="381.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="378" y="692" width="14" height="15" fill="rgb(245,23,3)"/><text x="381.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="708" width="14" height="15" fill="rgb(238,74,24)"/><text x="381.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.20%)</title><rect x="378" y="724" width="14" height="15" fill="rgb(246,14,12)"/><text x="381.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="378" y="740" width="14" height="15" fill="rgb(206,85,6)"/><text x="381.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="378" y="756" width="14" height="15" fill="rgb(207,76,46)"/><text x="381.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="378" y="772" width="14" height="15" fill="rgb(236,62,41)"/><text x="381.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="378" y="788" width="14" height="15" fill="rgb(217,30,3)"/><text x="381.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="378" y="804" width="14" height="15" fill="rgb(225,103,52)"/><text x="381.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.20%)</title><rect x="378" y="820" width="14" height="15" fill="rgb(219,30,27)"/><text x="381.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.20%)</title><rect x="378" y="836" width="14" height="15" fill="rgb(230,174,18)"/><text x="381.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.90%)</title><rect x="382" y="852" width="10" height="15" fill="rgb(238,65,32)"/><text x="385.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.90%)</title><rect x="382" y="868" width="10" height="15" fill="rgb(225,69,1)"/><text x="385.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.90%)</title><rect x="382" y="884" width="10" height="15" fill="rgb(224,206,37)"/><text x="385.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.90%)</title><rect x="382" y="900" width="10" height="15" fill="rgb(211,14,38)"/><text x="385.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.90%)</title><rect x="382" y="916" width="10" height="15" fill="rgb(207,99,46)"/><text x="385.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 0.90%)</title><rect x="382" y="932" width="10" height="15" fill="rgb(225,64,40)"/><text x="385.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 0.90%)</title><rect x="382" y="948" width="10" height="15" fill="rgb(252,29,20)"/><text x="385.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.60%)</title><rect x="385" y="964" width="7" height="15" fill="rgb(233,165,54)"/><text x="388.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.60%)</title><rect x="385" y="980" width="7" height="15" fill="rgb(253,92,29)"/><text x="388.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.60%)</title><rect x="385" y="996" width="7" height="15" fill="rgb(209,198,16)"/><text x="388.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.60%)</title><rect x="385" y="1012" width="7" height="15" fill="rgb(220,77,10)"/><text x="388.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.60%)</title><rect x="385" y="1028" width="7" height="15" fill="rgb(206,16,52)"/><text x="388.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.30%)</title><rect x="389" y="1044" width="3" height="15" fill="rgb(221,163,17)"/><text x="392.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.30%)</title><rect x="392" y="292" width="4" height="15" fill="rgb(211,159,8)"/><text x="395.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="308" width="4" height="15" fill="rgb(251,15,51)"/><text x="395.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="324" width="4" height="15" fill="rgb(214,182,3)"/><text x="395.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="340" width="4" height="15" fill="rgb(237,32,6)"/><text x="395.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="356" width="4" height="15" fill="rgb(254,114,39)"/><text x="395.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="372" width="4" height="15" fill="rgb(228,150,34)"/><text x="395.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.30%)</title><rect x="392" y="388" width="4" height="15" fill="rgb(232,72,9)"/><text x="395.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="404" width="4" height="15" fill="rgb(237,125,47)"/><text x="395.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="420" width="4" height="15" fill="rgb(246,205,47)"/><text x="395.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="436" width="4" height="15" fill="rgb(239,105,32)"/><text x="395.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="452" width="4" height="15" fill="rgb(229,144,28)"/><text x="395.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="468" width="4" height="15" fill="rgb(254,86,1)"/><text x="395.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.30%)</title><rect x="392" y="484" width="4" height="15" fill="rgb(220,15,41)"/><text x="395.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="500" width="4" height="15" fill="rgb(252,64,38)"/><text x="395.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="516" width="4" height="15" fill="rgb(220,172,51)"/><text x="395.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="532" width="4" height="15" fill="rgb(234,17,21)"/><text x="395.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="548" width="4" height="15" fill="rgb(224,176,17)"/><text x="395.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="564" width="4" height="15" fill="rgb(234,186,35)"/><text x="395.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.30%)</title><rect x="392" y="580" width="4" height="15" fill="rgb(205,19,36)"/><text x="395.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="596" width="4" height="15" fill="rgb(241,78,18)"/><text x="395.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="612" width="4" height="15" fill="rgb(236,126,22)"/><text x="395.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="628" width="4" height="15" fill="rgb(207,44,28)"/><text x="395.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="644" width="4" height="15" fill="rgb(254,56,28)"/><text x="395.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="660" width="4" height="15" fill="rgb(238,22,37)"/><text x="395.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.30%)</title><rect x="392" y="676" width="4" height="15" fill="rgb(249,45,49)"/><text x="395.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="692" width="4" height="15" fill="rgb(229,108,4)"/><text x="395.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="708" width="4" height="15" fill="rgb(214,219,18)"/><text x="395.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="724" width="4" height="15" fill="rgb(225,159,35)"/><text x="395.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="740" width="4" height="15" fill="rgb(232,153,30)"/><text x="395.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="756" width="4" height="15" fill="rgb(209,30,34)"/><text x="395.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.30%)</title><rect x="392" y="772" width="4" height="15" fill="rgb(230,166,29)"/><text x="395.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="788" width="4" height="15" fill="rgb(253,213,50)"/><text x="395.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="804" width="4" height="15" fill="rgb(232,27,10)"/><text x="395.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="820" width="4" height="15" fill="rgb(227,102,34)"/><text x="395.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="836" width="4" height="15" fill="rgb(230,109,29)"/><text x="395.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="852" width="4" height="15" fill="rgb(249,36,50)"/><text x="395.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.30%)</title><rect x="392" y="868" width="4" height="15" fill="rgb(233,85,7)"/><text x="395.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="884" width="4" height="15" fill="rgb(209,186,3)"/><text x="395.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="900" width="4" height="15" fill="rgb(241,16,36)"/><text x="395.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="916" width="4" height="15" fill="rgb(219,130,11)"/><text x="395.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="932" width="4" height="15" fill="rgb(206,29,34)"/><text x="395.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="948" width="4" height="15" fill="rgb(219,220,7)"/><text x="395.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.30%)</title><rect x="392" y="964" width="4" height="15" fill="rgb(225,38,53)"/><text x="395.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="980" width="4" height="15" fill="rgb(254,201,32)"/><text x="395.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="996" width="4" height="15" fill="rgb(251,216,26)"/><text x="395.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1012" width="4" height="15" fill="rgb(239,65,40)"/><text x="395.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1028" width="4" height="15" fill="rgb(253,165,39)"/><text x="395.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1044" width="4" height="15" fill="rgb(233,147,42)"/><text x="395.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.30%)</title><rect x="392" y="1060" width="4" height="15" fill="rgb(209,218,31)"/><text x="395.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="1076" width="4" height="15" fill="rgb(240,190,45)"/><text x="395.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="1092" width="4" height="15" fill="rgb(205,181,37)"/><text x="395.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1108" width="4" height="15" fill="rgb(248,96,34)"/><text x="395.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1124" width="4" height="15" fill="rgb(231,29,22)"/><text x="395.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1140" width="4" height="15" fill="rgb(247,99,36)"/><text x="395.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.30%)</title><rect x="392" y="1156" width="4" height="15" fill="rgb(230,156,25)"/><text x="395.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="1172" width="4" height="15" fill="rgb(224,141,43)"/><text x="395.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="1188" width="4" height="15" fill="rgb(245,26,23)"/><text x="395.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1204" width="4" height="15" fill="rgb(248,220,20)"/><text x="395.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1220" width="4" height="15" fill="rgb(252,126,31)"/><text x="395.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1236" width="4" height="15" fill="rgb(231,171,14)"/><text x="395.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.30%)</title><rect x="392" y="1252" width="4" height="15" fill="rgb(226,163,37)"/><text x="395.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="1268" width="4" height="15" fill="rgb(232,184,44)"/><text x="395.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="1284" width="4" height="15" fill="rgb(207,6,8)"/><text x="395.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1300" width="4" height="15" fill="rgb(228,141,10)"/><text x="395.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1316" width="4" height="15" fill="rgb(226,22,50)"/><text x="395.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1332" width="4" height="15" fill="rgb(247,148,31)"/><text x="395.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.30%)</title><rect x="392" y="1348" width="4" height="15" fill="rgb(247,74,15)"/><text x="395.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="1364" width="4" height="15" fill="rgb(253,167,37)"/><text x="395.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="1380" width="4" height="15" fill="rgb(250,101,37)"/><text x="395.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1396" width="4" height="15" fill="rgb(242,52,44)"/><text x="395.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1412" width="4" height="15" fill="rgb(214,137,13)"/><text x="395.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1428" width="4" height="15" fill="rgb(236,214,4)"/><text x="395.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.30%)</title><rect x="392" y="1444" width="4" height="15" fill="rgb(210,65,14)"/><text x="395.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="1460" width="4" height="15" fill="rgb(237,47,13)"/><text x="395.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="1476" width="4" height="15" fill="rgb(205,210,1)"/><text x="395.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1492" width="4" height="15" fill="rgb(224,88,51)"/><text x="395.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1508" width="4" height="15" fill="rgb(221,78,21)"/><text x="395.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1524" width="4" height="15" fill="rgb(210,8,10)"/><text x="395.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.30%)</title><rect x="392" y="1540" width="4" height="15" fill="rgb(217,135,33)"/><text x="395.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="392" y="1556" width="4" height="15" fill="rgb(253,53,46)"/><text x="395.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="392" y="1572" width="4" height="15" fill="rgb(251,146,19)"/><text x="395.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="392" y="1588" width="4" height="15" fill="rgb(248,212,12)"/><text x="395.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="392" y="1604" width="4" height="15" fill="rgb(228,188,53)"/><text x="395.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="392" y="1620" width="4" height="15" fill="rgb(218,53,54)"/><text x="395.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.30%)</title><rect x="392" y="1636" width="4" height="15" fill="rgb(217,79,20)"/><text x="395.00" y="1646.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.30%)</title><rect x="392" y="1652" width="4" height="15" fill="rgb(229,18,46)"/><text x="395.00" y="1662.50"></text></g><g><title>from_list (matplotlib/colors.py:748) (1 samples, 0.30%)</title><rect x="392" y="1668" width="4" height="15" fill="rgb(229,34,27)"/><text x="395.00" y="1678.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;:6) (1 samples, 0.30%)</title><rect x="392" y="1684" width="4" height="15" fill="rgb(251,97,47)"/><text x="395.00" y="1694.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.30%)</title><rect x="392" y="1700" width="4" height="15" fill="rgb(228,23,22)"/><text x="395.00" y="1710.50"></text></g><g><title>linspace (numpy/core/function_base.py:143) (1 samples, 0.30%)</title><rect x="392" y="1716" width="4" height="15" fill="rgb(245,144,31)"/><text x="395.00" y="1726.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.30%)</title><rect x="396" y="1108" width="3" height="15" fill="rgb(207,0,15)"/><text x="399.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="396" y="1124" width="3" height="15" fill="rgb(249,32,51)"/><text x="399.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="396" y="1140" width="3" height="15" fill="rgb(210,123,28)"/><text x="399.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="396" y="1156" width="3" height="15" fill="rgb(234,63,14)"/><text x="399.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="396" y="1172" width="3" height="15" fill="rgb(213,140,32)"/><text x="399.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="396" y="1188" width="3" height="15" fill="rgb(228,112,15)"/><text x="399.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.30%)</title><rect x="396" y="1204" width="3" height="15" fill="rgb(227,150,33)"/><text x="399.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="396" y="1220" width="3" height="15" fill="rgb(219,50,13)"/><text x="399.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="396" y="1236" width="3" height="15" fill="rgb(242,5,1)"/><text x="399.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="396" y="1252" width="3" height="15" fill="rgb(237,206,18)"/><text x="399.00" y="1262.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.30%)</title><rect x="396" y="1268" width="3" height="15" fill="rgb(239,10,38)"/><text x="399.00" y="1278.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.30%)</title><rect x="396" y="1284" width="3" height="15" fill="rgb(214,148,10)"/><text x="399.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="396" y="1300" width="3" height="15" fill="rgb(218,161,38)"/><text x="399.00" y="1310.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1316" width="3" height="15" fill="rgb(238,55,36)"/><text x="399.00" y="1326.50"></text></g><g><title>0x7f4ee1483995 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1332" width="3" height="15" fill="rgb(234,107,45)"/><text x="399.00" y="1342.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1348" width="3" height="15" fill="rgb(218,84,17)"/><text x="399.00" y="1358.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1364" width="3" height="15" fill="rgb(231,77,53)"/><text x="399.00" y="1374.50"></text></g><g><title>0x7f4ee1483258 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1380" width="3" height="15" fill="rgb(209,126,38)"/><text x="399.00" y="1390.50"></text></g><g><title>0x7f4ee14d0d7a (ld-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1396" width="3" height="15" fill="rgb(211,165,11)"/><text x="399.00" y="1406.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1412" width="3" height="15" fill="rgb(206,108,18)"/><text x="399.00" y="1422.50"></text></g><g><title>0x7f4ee14d1345 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1428" width="3" height="15" fill="rgb(224,27,49)"/><text x="399.00" y="1438.50"></text></g><g><title>0x7f4ee14c9fec (ld-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1444" width="3" height="15" fill="rgb(239,157,54)"/><text x="399.00" y="1454.50"></text></g><g><title>0x7f4ee14c856b (ld-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1460" width="3" height="15" fill="rgb(219,157,21)"/><text x="399.00" y="1470.50"></text></g><g><title>0x7f4ee14c7952 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="396" y="1476" width="3" height="15" fill="rgb(246,183,9)"/><text x="399.00" y="1486.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.30%)</title><rect x="399" y="1236" width="4" height="15" fill="rgb(214,221,29)"/><text x="402.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1252" width="4" height="15" fill="rgb(249,100,47)"/><text x="402.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1268" width="4" height="15" fill="rgb(243,227,43)"/><text x="402.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1284" width="4" height="15" fill="rgb(254,218,35)"/><text x="402.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="399" y="1300" width="4" height="15" fill="rgb(225,168,48)"/><text x="402.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1316" width="4" height="15" fill="rgb(232,201,29)"/><text x="402.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.30%)</title><rect x="399" y="1332" width="4" height="15" fill="rgb(226,204,35)"/><text x="402.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="399" y="1348" width="4" height="15" fill="rgb(205,160,51)"/><text x="402.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1364" width="4" height="15" fill="rgb(231,21,31)"/><text x="402.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1380" width="4" height="15" fill="rgb(216,223,46)"/><text x="402.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1396" width="4" height="15" fill="rgb(222,112,10)"/><text x="402.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1412" width="4" height="15" fill="rgb(233,4,21)"/><text x="402.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="399" y="1428" width="4" height="15" fill="rgb(251,3,50)"/><text x="402.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1444" width="4" height="15" fill="rgb(252,76,52)"/><text x="402.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.30%)</title><rect x="399" y="1460" width="4" height="15" fill="rgb(224,184,47)"/><text x="402.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1476" width="4" height="15" fill="rgb(248,210,17)"/><text x="402.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1492" width="4" height="15" fill="rgb(233,165,44)"/><text x="402.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1508" width="4" height="15" fill="rgb(234,97,27)"/><text x="402.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="399" y="1524" width="4" height="15" fill="rgb(251,107,0)"/><text x="402.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1540" width="4" height="15" fill="rgb(220,119,51)"/><text x="402.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:19) (1 samples, 0.30%)</title><rect x="399" y="1556" width="4" height="15" fill="rgb(222,187,51)"/><text x="402.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1572" width="4" height="15" fill="rgb(245,173,43)"/><text x="402.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1588" width="4" height="15" fill="rgb(207,57,2)"/><text x="402.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1604" width="4" height="15" fill="rgb(216,69,37)"/><text x="402.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="399" y="1620" width="4" height="15" fill="rgb(225,4,52)"/><text x="402.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1636" width="4" height="15" fill="rgb(224,0,37)"/><text x="402.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py:15) (1 samples, 0.30%)</title><rect x="399" y="1652" width="4" height="15" fill="rgb(248,176,41)"/><text x="402.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1668" width="4" height="15" fill="rgb(235,120,18)"/><text x="402.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1684" width="4" height="15" fill="rgb(235,190,7)"/><text x="402.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1700" width="4" height="15" fill="rgb(206,179,0)"/><text x="402.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="399" y="1716" width="4" height="15" fill="rgb(206,228,25)"/><text x="402.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1732" width="4" height="15" fill="rgb(227,27,25)"/><text x="402.00" y="1742.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py:4) (1 samples, 0.30%)</title><rect x="399" y="1748" width="4" height="15" fill="rgb(208,198,45)"/><text x="402.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1764" width="4" height="15" fill="rgb(219,198,1)"/><text x="402.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1780" width="4" height="15" fill="rgb(232,25,11)"/><text x="402.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1796" width="4" height="15" fill="rgb(207,35,16)"/><text x="402.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="399" y="1812" width="4" height="15" fill="rgb(243,178,42)"/><text x="402.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="399" y="1828" width="4" height="15" fill="rgb(235,167,2)"/><text x="402.00" y="1838.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/least_squares.py:15) (1 samples, 0.30%)</title><rect x="399" y="1844" width="4" height="15" fill="rgb(230,30,35)"/><text x="402.00" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="399" y="1860" width="4" height="15" fill="rgb(251,118,40)"/><text x="402.00" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="399" y="1876" width="4" height="15" fill="rgb(205,91,22)"/><text x="402.00" y="1886.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="399" y="1892" width="4" height="15" fill="rgb(225,173,46)"/><text x="402.00" y="1902.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="399" y="1908" width="4" height="15" fill="rgb(239,4,6)"/><text x="402.00" y="1918.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="399" y="1924" width="4" height="15" fill="rgb(234,119,11)"/><text x="402.00" y="1934.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="399" y="1940" width="4" height="15" fill="rgb(208,35,24)"/><text x="402.00" y="1950.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (3 samples, 0.90%)</title><rect x="396" y="532" width="10" height="15" fill="rgb(251,112,54)"/><text x="399.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="396" y="548" width="10" height="15" fill="rgb(248,46,25)"/><text x="399.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="396" y="564" width="10" height="15" fill="rgb(226,25,0)"/><text x="399.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="396" y="580" width="10" height="15" fill="rgb(247,51,15)"/><text x="399.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="396" y="596" width="10" height="15" fill="rgb(219,60,17)"/><text x="399.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="396" y="612" width="10" height="15" fill="rgb(227,126,23)"/><text x="399.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.90%)</title><rect x="396" y="628" width="10" height="15" fill="rgb(241,218,22)"/><text x="399.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="396" y="644" width="10" height="15" fill="rgb(238,89,20)"/><text x="399.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="396" y="660" width="10" height="15" fill="rgb(243,173,20)"/><text x="399.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="396" y="676" width="10" height="15" fill="rgb(221,31,6)"/><text x="399.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="396" y="692" width="10" height="15" fill="rgb(212,147,20)"/><text x="399.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="396" y="708" width="10" height="15" fill="rgb(246,190,42)"/><text x="399.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.90%)</title><rect x="396" y="724" width="10" height="15" fill="rgb(219,91,43)"/><text x="399.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="396" y="740" width="10" height="15" fill="rgb(206,68,54)"/><text x="399.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="396" y="756" width="10" height="15" fill="rgb(250,4,47)"/><text x="399.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="396" y="772" width="10" height="15" fill="rgb(246,209,22)"/><text x="399.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="396" y="788" width="10" height="15" fill="rgb(226,193,3)"/><text x="399.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="396" y="804" width="10" height="15" fill="rgb(238,90,6)"/><text x="399.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.90%)</title><rect x="396" y="820" width="10" height="15" fill="rgb(218,174,31)"/><text x="399.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="396" y="836" width="10" height="15" fill="rgb(210,224,39)"/><text x="399.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="396" y="852" width="10" height="15" fill="rgb(252,30,9)"/><text x="399.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="396" y="868" width="10" height="15" fill="rgb(207,26,41)"/><text x="399.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="396" y="884" width="10" height="15" fill="rgb(207,44,0)"/><text x="399.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="396" y="900" width="10" height="15" fill="rgb(227,102,4)"/><text x="399.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.90%)</title><rect x="396" y="916" width="10" height="15" fill="rgb(231,116,28)"/><text x="399.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="396" y="932" width="10" height="15" fill="rgb(235,153,18)"/><text x="399.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="396" y="948" width="10" height="15" fill="rgb(218,200,2)"/><text x="399.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="396" y="964" width="10" height="15" fill="rgb(225,164,9)"/><text x="399.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="396" y="980" width="10" height="15" fill="rgb(229,147,12)"/><text x="399.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="396" y="996" width="10" height="15" fill="rgb(223,73,27)"/><text x="399.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.90%)</title><rect x="396" y="1012" width="10" height="15" fill="rgb(240,213,37)"/><text x="399.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.90%)</title><rect x="396" y="1028" width="10" height="15" fill="rgb(252,63,6)"/><text x="399.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.90%)</title><rect x="396" y="1044" width="10" height="15" fill="rgb(228,74,39)"/><text x="399.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.90%)</title><rect x="396" y="1060" width="10" height="15" fill="rgb(210,215,45)"/><text x="399.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.90%)</title><rect x="396" y="1076" width="10" height="15" fill="rgb(220,33,12)"/><text x="399.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.90%)</title><rect x="396" y="1092" width="10" height="15" fill="rgb(253,28,43)"/><text x="399.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.60%)</title><rect x="399" y="1108" width="7" height="15" fill="rgb(237,225,36)"/><text x="402.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.60%)</title><rect x="399" y="1124" width="7" height="15" fill="rgb(205,139,42)"/><text x="402.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="399" y="1140" width="7" height="15" fill="rgb(235,27,20)"/><text x="402.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="399" y="1156" width="7" height="15" fill="rgb(218,91,1)"/><text x="402.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="399" y="1172" width="7" height="15" fill="rgb(239,146,46)"/><text x="402.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="399" y="1188" width="7" height="15" fill="rgb(236,78,48)"/><text x="402.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="399" y="1204" width="7" height="15" fill="rgb(207,123,25)"/><text x="402.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="399" y="1220" width="7" height="15" fill="rgb(221,12,3)"/><text x="402.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.30%)</title><rect x="403" y="1236" width="3" height="15" fill="rgb(229,28,45)"/><text x="406.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="403" y="1252" width="3" height="15" fill="rgb(244,218,11)"/><text x="406.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="403" y="1268" width="3" height="15" fill="rgb(214,53,27)"/><text x="406.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="403" y="1284" width="3" height="15" fill="rgb(212,203,51)"/><text x="406.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="403" y="1300" width="3" height="15" fill="rgb(227,11,48)"/><text x="406.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="403" y="1316" width="3" height="15" fill="rgb(217,34,19)"/><text x="406.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="403" y="1332" width="3" height="15" fill="rgb(248,59,40)"/><text x="406.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="403" y="1348" width="3" height="15" fill="rgb(211,16,35)"/><text x="406.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:620) (1 samples, 0.30%)</title><rect x="403" y="1364" width="3" height="15" fill="rgb(249,10,36)"/><text x="406.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.30%)</title><rect x="403" y="1380" width="3" height="15" fill="rgb(231,214,26)"/><text x="406.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.30%)</title><rect x="403" y="1396" width="3" height="15" fill="rgb(243,159,45)"/><text x="406.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.30%)</title><rect x="406" y="964" width="4" height="15" fill="rgb(213,163,49)"/><text x="409.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="406" y="980" width="4" height="15" fill="rgb(251,204,6)"/><text x="409.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="406" y="996" width="4" height="15" fill="rgb(244,190,12)"/><text x="409.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="406" y="1012" width="4" height="15" fill="rgb(211,112,12)"/><text x="409.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="406" y="1028" width="4" height="15" fill="rgb(227,210,15)"/><text x="409.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="406" y="1044" width="4" height="15" fill="rgb(213,21,50)"/><text x="409.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:43) (1 samples, 0.30%)</title><rect x="406" y="1060" width="4" height="15" fill="rgb(215,128,26)"/><text x="409.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="406" y="1076" width="4" height="15" fill="rgb(246,48,53)"/><text x="409.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="406" y="1092" width="4" height="15" fill="rgb(237,132,1)"/><text x="409.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="406" y="1108" width="4" height="15" fill="rgb(234,172,47)"/><text x="409.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="406" y="1124" width="4" height="15" fill="rgb(214,65,26)"/><text x="409.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="406" y="1140" width="4" height="15" fill="rgb(223,2,2)"/><text x="409.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/utils_classifier.py:8) (1 samples, 0.30%)</title><rect x="406" y="1156" width="4" height="15" fill="rgb(241,13,28)"/><text x="409.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="406" y="1172" width="4" height="15" fill="rgb(235,144,12)"/><text x="409.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.30%)</title><rect x="406" y="1188" width="4" height="15" fill="rgb(208,197,41)"/><text x="409.00" y="1198.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.30%)</title><rect x="406" y="1204" width="4" height="15" fill="rgb(247,33,14)"/><text x="409.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.30%)</title><rect x="406" y="1220" width="4" height="15" fill="rgb(230,97,41)"/><text x="409.00" y="1230.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.30%)</title><rect x="406" y="1236" width="4" height="15" fill="rgb(230,70,0)"/><text x="409.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.30%)</title><rect x="406" y="1252" width="4" height="15" fill="rgb(223,12,27)"/><text x="409.00" y="1262.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.30%)</title><rect x="406" y="1268" width="4" height="15" fill="rgb(215,186,53)"/><text x="409.00" y="1278.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:90) (1 samples, 0.30%)</title><rect x="406" y="1284" width="4" height="15" fill="rgb(223,11,9)"/><text x="409.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:4) (10 samples, 3.00%)</title><rect x="378" y="52" width="35" height="15" fill="rgb(244,6,30)"/><text x="381.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.00%)</title><rect x="378" y="68" width="35" height="15" fill="rgb(254,66,12)"/><text x="381.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.00%)</title><rect x="378" y="84" width="35" height="15" fill="rgb(212,29,48)"/><text x="381.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.00%)</title><rect x="378" y="100" width="35" height="15" fill="rgb(225,224,37)"/><text x="381.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.00%)</title><rect x="378" y="116" width="35" height="15" fill="rgb(252,182,4)"/><text x="381.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.00%)</title><rect x="378" y="132" width="35" height="15" fill="rgb(246,33,1)"/><text x="381.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (6 samples, 1.80%)</title><rect x="392" y="148" width="21" height="15" fill="rgb(217,27,9)"/><text x="395.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.80%)</title><rect x="392" y="164" width="21" height="15" fill="rgb(214,3,25)"/><text x="395.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.80%)</title><rect x="392" y="180" width="21" height="15" fill="rgb(223,36,39)"/><text x="395.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="392" y="196" width="21" height="15" fill="rgb(227,16,28)"/><text x="395.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.80%)</title><rect x="392" y="212" width="21" height="15" fill="rgb(235,78,20)"/><text x="395.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.80%)</title><rect x="392" y="228" width="21" height="15" fill="rgb(217,186,5)"/><text x="395.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.80%)</title><rect x="392" y="244" width="21" height="15" fill="rgb(250,124,39)"/><text x="395.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.80%)</title><rect x="392" y="260" width="21" height="15" fill="rgb(226,176,50)"/><text x="395.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="392" y="276" width="21" height="15" fill="rgb(247,169,7)"/><text x="395.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.50%)</title><rect x="396" y="292" width="17" height="15" fill="rgb(210,11,9)"/><text x="399.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.50%)</title><rect x="396" y="308" width="17" height="15" fill="rgb(229,119,53)"/><text x="399.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.50%)</title><rect x="396" y="324" width="17" height="15" fill="rgb(253,163,15)"/><text x="399.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.50%)</title><rect x="396" y="340" width="17" height="15" fill="rgb(210,73,39)"/><text x="399.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.50%)</title><rect x="396" y="356" width="17" height="15" fill="rgb(243,210,38)"/><text x="399.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.50%)</title><rect x="396" y="372" width="17" height="15" fill="rgb(243,86,2)"/><text x="399.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.50%)</title><rect x="396" y="388" width="17" height="15" fill="rgb(240,185,11)"/><text x="399.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.50%)</title><rect x="396" y="404" width="17" height="15" fill="rgb(253,28,54)"/><text x="399.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.50%)</title><rect x="396" y="420" width="17" height="15" fill="rgb(244,209,26)"/><text x="399.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.50%)</title><rect x="396" y="436" width="17" height="15" fill="rgb(253,209,0)"/><text x="399.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.50%)</title><rect x="396" y="452" width="17" height="15" fill="rgb(230,105,37)"/><text x="399.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.50%)</title><rect x="396" y="468" width="17" height="15" fill="rgb(212,180,31)"/><text x="399.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.50%)</title><rect x="396" y="484" width="17" height="15" fill="rgb(235,140,1)"/><text x="399.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.50%)</title><rect x="396" y="500" width="17" height="15" fill="rgb(228,140,48)"/><text x="399.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.50%)</title><rect x="396" y="516" width="17" height="15" fill="rgb(207,214,25)"/><text x="399.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.60%)</title><rect x="406" y="532" width="7" height="15" fill="rgb(215,138,30)"/><text x="409.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="406" y="548" width="7" height="15" fill="rgb(226,113,0)"/><text x="409.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="406" y="564" width="7" height="15" fill="rgb(211,60,14)"/><text x="409.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="406" y="580" width="7" height="15" fill="rgb(232,56,37)"/><text x="409.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="406" y="596" width="7" height="15" fill="rgb(232,181,4)"/><text x="409.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="406" y="612" width="7" height="15" fill="rgb(251,83,44)"/><text x="409.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.60%)</title><rect x="406" y="628" width="7" height="15" fill="rgb(216,22,28)"/><text x="409.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="406" y="644" width="7" height="15" fill="rgb(251,51,25)"/><text x="409.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="406" y="660" width="7" height="15" fill="rgb(229,178,8)"/><text x="409.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="406" y="676" width="7" height="15" fill="rgb(243,46,31)"/><text x="409.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="406" y="692" width="7" height="15" fill="rgb(250,142,36)"/><text x="409.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="406" y="708" width="7" height="15" fill="rgb(251,123,13)"/><text x="409.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.60%)</title><rect x="406" y="724" width="7" height="15" fill="rgb(250,152,10)"/><text x="409.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="406" y="740" width="7" height="15" fill="rgb(211,78,3)"/><text x="409.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.60%)</title><rect x="406" y="756" width="7" height="15" fill="rgb(220,21,48)"/><text x="409.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="406" y="772" width="7" height="15" fill="rgb(206,32,1)"/><text x="409.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="406" y="788" width="7" height="15" fill="rgb(254,219,41)"/><text x="409.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="406" y="804" width="7" height="15" fill="rgb(244,34,46)"/><text x="409.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="406" y="820" width="7" height="15" fill="rgb(229,151,23)"/><text x="409.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="406" y="836" width="7" height="15" fill="rgb(208,94,20)"/><text x="409.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="406" y="852" width="7" height="15" fill="rgb(205,48,20)"/><text x="409.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.60%)</title><rect x="406" y="868" width="7" height="15" fill="rgb(205,199,39)"/><text x="409.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="406" y="884" width="7" height="15" fill="rgb(231,105,30)"/><text x="409.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="406" y="900" width="7" height="15" fill="rgb(243,225,28)"/><text x="409.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="406" y="916" width="7" height="15" fill="rgb(208,59,47)"/><text x="409.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="406" y="932" width="7" height="15" fill="rgb(214,37,5)"/><text x="409.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="406" y="948" width="7" height="15" fill="rgb(236,158,51)"/><text x="409.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.30%)</title><rect x="410" y="964" width="3" height="15" fill="rgb(248,17,31)"/><text x="413.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="410" y="980" width="3" height="15" fill="rgb(231,182,25)"/><text x="413.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="996" width="3" height="15" fill="rgb(212,124,37)"/><text x="413.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1012" width="3" height="15" fill="rgb(244,165,44)"/><text x="413.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1028" width="3" height="15" fill="rgb(242,228,41)"/><text x="413.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1044" width="3" height="15" fill="rgb(208,16,23)"/><text x="413.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1060" width="3" height="15" fill="rgb(239,23,34)"/><text x="413.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1076" width="3" height="15" fill="rgb(205,215,42)"/><text x="413.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.30%)</title><rect x="410" y="1092" width="3" height="15" fill="rgb(250,94,35)"/><text x="413.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="410" y="1108" width="3" height="15" fill="rgb(240,150,5)"/><text x="413.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1124" width="3" height="15" fill="rgb(250,113,35)"/><text x="413.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1140" width="3" height="15" fill="rgb(208,216,7)"/><text x="413.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1156" width="3" height="15" fill="rgb(252,37,26)"/><text x="413.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1172" width="3" height="15" fill="rgb(245,11,4)"/><text x="413.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1188" width="3" height="15" fill="rgb(208,54,47)"/><text x="413.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1204" width="3" height="15" fill="rgb(237,105,36)"/><text x="413.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.30%)</title><rect x="410" y="1220" width="3" height="15" fill="rgb(214,202,23)"/><text x="413.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1236" width="3" height="15" fill="rgb(253,228,2)"/><text x="413.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1252" width="3" height="15" fill="rgb(234,2,6)"/><text x="413.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1268" width="3" height="15" fill="rgb(216,191,42)"/><text x="413.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1284" width="3" height="15" fill="rgb(246,32,23)"/><text x="413.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1300" width="3" height="15" fill="rgb(235,16,52)"/><text x="413.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.30%)</title><rect x="410" y="1316" width="3" height="15" fill="rgb(224,73,17)"/><text x="413.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1332" width="3" height="15" fill="rgb(213,104,31)"/><text x="413.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1348" width="3" height="15" fill="rgb(238,90,47)"/><text x="413.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1364" width="3" height="15" fill="rgb(246,228,27)"/><text x="413.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1380" width="3" height="15" fill="rgb(239,136,47)"/><text x="413.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1396" width="3" height="15" fill="rgb(234,172,44)"/><text x="413.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.30%)</title><rect x="410" y="1412" width="3" height="15" fill="rgb(228,111,47)"/><text x="413.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.30%)</title><rect x="410" y="1428" width="3" height="15" fill="rgb(205,191,11)"/><text x="413.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1444" width="3" height="15" fill="rgb(232,45,23)"/><text x="413.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1460" width="3" height="15" fill="rgb(251,131,38)"/><text x="413.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1476" width="3" height="15" fill="rgb(216,159,52)"/><text x="413.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1492" width="3" height="15" fill="rgb(245,0,11)"/><text x="413.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1508" width="3" height="15" fill="rgb(212,59,37)"/><text x="413.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.30%)</title><rect x="410" y="1524" width="3" height="15" fill="rgb(221,142,8)"/><text x="413.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1540" width="3" height="15" fill="rgb(234,126,31)"/><text x="413.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1556" width="3" height="15" fill="rgb(243,85,5)"/><text x="413.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1572" width="3" height="15" fill="rgb(228,98,22)"/><text x="413.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1588" width="3" height="15" fill="rgb(238,146,20)"/><text x="413.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1604" width="3" height="15" fill="rgb(222,136,0)"/><text x="413.00" y="1614.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:22) (1 samples, 0.30%)</title><rect x="410" y="1620" width="3" height="15" fill="rgb(225,218,24)"/><text x="413.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="410" y="1636" width="3" height="15" fill="rgb(225,78,1)"/><text x="413.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="410" y="1652" width="3" height="15" fill="rgb(214,204,17)"/><text x="413.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="410" y="1668" width="3" height="15" fill="rgb(238,219,54)"/><text x="413.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="410" y="1684" width="3" height="15" fill="rgb(254,123,17)"/><text x="413.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="410" y="1700" width="3" height="15" fill="rgb(251,222,34)"/><text x="413.00" y="1710.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py:46) (1 samples, 0.30%)</title><rect x="410" y="1716" width="3" height="15" fill="rgb(236,34,16)"/><text x="413.00" y="1726.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.30%)</title><rect x="410" y="1732" width="3" height="15" fill="rgb(224,0,49)"/><text x="413.00" y="1742.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.30%)</title><rect x="410" y="1748" width="3" height="15" fill="rgb(231,28,33)"/><text x="413.00" y="1758.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.30%)</title><rect x="410" y="1764" width="3" height="15" fill="rgb(246,22,54)"/><text x="413.00" y="1774.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.30%)</title><rect x="410" y="1780" width="3" height="15" fill="rgb(245,37,28)"/><text x="413.00" y="1790.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.30%)</title><rect x="410" y="1796" width="3" height="15" fill="rgb(226,57,16)"/><text x="413.00" y="1806.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.30%)</title><rect x="410" y="1812" width="3" height="15" fill="rgb(233,172,33)"/><text x="413.00" y="1822.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.30%)</title><rect x="410" y="1828" width="3" height="15" fill="rgb(214,148,10)"/><text x="413.00" y="1838.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.30%)</title><rect x="410" y="1844" width="3" height="15" fill="rgb(231,25,15)"/><text x="413.00" y="1854.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.30%)</title><rect x="410" y="1860" width="3" height="15" fill="rgb(223,15,35)"/><text x="413.00" y="1870.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (1 samples, 0.30%)</title><rect x="413" y="100" width="4" height="15" fill="rgb(248,70,36)"/><text x="416.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.30%)</title><rect x="413" y="116" width="4" height="15" fill="rgb(253,224,50)"/><text x="416.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.30%)</title><rect x="413" y="132" width="4" height="15" fill="rgb(218,172,42)"/><text x="416.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.30%)</title><rect x="413" y="148" width="4" height="15" fill="rgb(228,148,1)"/><text x="416.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.30%)</title><rect x="413" y="164" width="4" height="15" fill="rgb(223,225,39)"/><text x="416.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.30%)</title><rect x="413" y="180" width="4" height="15" fill="rgb(241,41,41)"/><text x="416.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.30%)</title><rect x="413" y="196" width="4" height="15" fill="rgb(210,50,19)"/><text x="416.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.30%)</title><rect x="413" y="212" width="4" height="15" fill="rgb(219,34,53)"/><text x="416.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.30%)</title><rect x="413" y="228" width="4" height="15" fill="rgb(223,108,44)"/><text x="416.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.30%)</title><rect x="413" y="244" width="4" height="15" fill="rgb(249,162,35)"/><text x="416.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.30%)</title><rect x="413" y="260" width="4" height="15" fill="rgb(212,13,16)"/><text x="416.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="413" y="276" width="4" height="15" fill="rgb(251,149,28)"/><text x="416.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:22) (1 samples, 0.30%)</title><rect x="417" y="100" width="4" height="15" fill="rgb(249,140,19)"/><text x="420.00" y="110.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:418) (1 samples, 0.30%)</title><rect x="424" y="164" width="4" height="15" fill="rgb(240,23,5)"/><text x="427.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.30%)</title><rect x="431" y="180" width="4" height="15" fill="rgb(206,134,0)"/><text x="434.00" y="190.50"></text></g><g><title>0x7f4ee121c1f2 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="438" y="244" width="4" height="15" fill="rgb(237,93,53)"/><text x="441.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="445" y="260" width="4" height="15" fill="rgb(243,185,25)"/><text x="448.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="445" y="276" width="4" height="15" fill="rgb(244,8,19)"/><text x="448.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="445" y="292" width="4" height="15" fill="rgb(245,219,50)"/><text x="448.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.60%)</title><rect x="452" y="324" width="8" height="15" fill="rgb(214,156,35)"/><text x="455.00" y="334.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (2 samples, 0.60%)</title><rect x="452" y="340" width="8" height="15" fill="rgb(233,57,42)"/><text x="455.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.30%)</title><rect x="460" y="356" width="3" height="15" fill="rgb(219,223,4)"/><text x="463.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="460" y="372" width="3" height="15" fill="rgb(245,41,42)"/><text x="463.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.30%)</title><rect x="463" y="372" width="4" height="15" fill="rgb(214,49,38)"/><text x="466.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.30%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(245,187,31)"/><text x="470.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (7 samples, 2.10%)</title><rect x="449" y="260" width="25" height="15" fill="rgb(216,58,4)"/><text x="452.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (7 samples, 2.10%)</title><rect x="449" y="276" width="25" height="15" fill="rgb(240,145,49)"/><text x="452.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (7 samples, 2.10%)</title><rect x="449" y="292" width="25" height="15" fill="rgb(221,174,44)"/><text x="452.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.80%)</title><rect x="452" y="308" width="22" height="15" fill="rgb(252,113,21)"/><text x="455.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.20%)</title><rect x="460" y="324" width="14" height="15" fill="rgb(205,168,5)"/><text x="463.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.20%)</title><rect x="460" y="340" width="14" height="15" fill="rgb(224,132,18)"/><text x="463.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.90%)</title><rect x="463" y="356" width="11" height="15" fill="rgb(244,103,48)"/><text x="466.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.30%)</title><rect x="470" y="372" width="4" height="15" fill="rgb(215,173,39)"/><text x="473.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.30%)</title><rect x="470" y="388" width="4" height="15" fill="rgb(210,187,14)"/><text x="473.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.30%)</title><rect x="470" y="404" width="4" height="15" fill="rgb(231,89,22)"/><text x="473.00" y="414.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.30%)</title><rect x="474" y="292" width="3" height="15" fill="rgb(243,115,23)"/><text x="477.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.30%)</title><rect x="474" y="308" width="3" height="15" fill="rgb(206,3,13)"/><text x="477.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="477" y="292" width="4" height="15" fill="rgb(224,48,18)"/><text x="480.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.30%)</title><rect x="477" y="308" width="4" height="15" fill="rgb(237,93,5)"/><text x="480.00" y="318.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (12 samples, 3.60%)</title><rect x="442" y="244" width="42" height="15" fill="rgb(239,119,31)"/><text x="445.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.90%)</title><rect x="474" y="260" width="10" height="15" fill="rgb(249,12,15)"/><text x="477.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.90%)</title><rect x="474" y="276" width="10" height="15" fill="rgb(245,110,12)"/><text x="477.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:89) (1 samples, 0.30%)</title><rect x="481" y="292" width="3" height="15" fill="rgb(228,28,49)"/><text x="484.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3149) (1 samples, 0.30%)</title><rect x="484" y="276" width="4" height="15" fill="rgb(253,63,35)"/><text x="487.00" y="286.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.30%)</title><rect x="484" y="292" width="4" height="15" fill="rgb(210,174,28)"/><text x="487.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="488" y="276" width="3" height="15" fill="rgb(213,53,1)"/><text x="491.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.30%)</title><rect x="488" y="292" width="3" height="15" fill="rgb(230,62,10)"/><text x="491.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.30%)</title><rect x="488" y="308" width="3" height="15" fill="rgb(237,132,1)"/><text x="491.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.30%)</title><rect x="491" y="276" width="4" height="15" fill="rgb(229,216,35)"/><text x="494.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.30%)</title><rect x="491" y="292" width="4" height="15" fill="rgb(217,44,54)"/><text x="494.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.30%)</title><rect x="495" y="292" width="4" height="15" fill="rgb(219,220,49)"/><text x="498.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.30%)</title><rect x="495" y="308" width="4" height="15" fill="rgb(227,34,35)"/><text x="498.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (20 samples, 6.01%)</title><rect x="435" y="196" width="71" height="15" fill="rgb(252,138,40)"/><text x="438.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (20 samples, 6.01%)</title><rect x="435" y="212" width="71" height="15" fill="rgb(218,33,48)"/><text x="438.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (20 samples, 6.01%)</title><rect x="435" y="228" width="71" height="15" fill="rgb(230,192,26)"/><text x="438.00" y="238.50">_run (ml..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 1.80%)</title><rect x="484" y="244" width="22" height="15" fill="rgb(237,115,22)"/><text x="487.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.80%)</title><rect x="484" y="260" width="22" height="15" fill="rgb(229,8,19)"/><text x="487.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.90%)</title><rect x="495" y="276" width="11" height="15" fill="rgb(241,141,27)"/><text x="498.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.60%)</title><rect x="499" y="292" width="7" height="15" fill="rgb(234,59,34)"/><text x="502.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.60%)</title><rect x="499" y="308" width="7" height="15" fill="rgb(208,74,31)"/><text x="502.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.60%)</title><rect x="499" y="324" width="7" height="15" fill="rgb(253,83,7)"/><text x="502.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.60%)</title><rect x="499" y="340" width="7" height="15" fill="rgb(231,74,44)"/><text x="502.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.30%)</title><rect x="502" y="356" width="4" height="15" fill="rgb(249,135,26)"/><text x="505.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.30%)</title><rect x="502" y="372" width="4" height="15" fill="rgb(212,29,50)"/><text x="505.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:252) (1 samples, 0.30%)</title><rect x="509" y="324" width="4" height="15" fill="rgb(239,6,29)"/><text x="512.00" y="334.50"></text></g><g><title>_select_matrix_shape (cblasfuncs.c:159) (1 samples, 0.30%)</title><rect x="509" y="340" width="4" height="15" fill="rgb(232,150,4)"/><text x="512.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.30%)</title><rect x="513" y="324" width="3" height="15" fill="rgb(254,209,27)"/><text x="516.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.30%)</title><rect x="513" y="340" width="3" height="15" fill="rgb(224,24,27)"/><text x="516.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(223,138,4)"/><text x="516.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.30%)</title><rect x="513" y="372" width="3" height="15" fill="rgb(229,204,3)"/><text x="516.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 4.80%)</title><rect x="509" y="276" width="57" height="15" fill="rgb(240,79,40)"/><text x="512.00" y="286.50">array_..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (16 samples, 4.80%)</title><rect x="509" y="292" width="57" height="15" fill="rgb(233,47,47)"/><text x="512.00" y="302.50">array_..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (16 samples, 4.80%)</title><rect x="509" y="308" width="57" height="15" fill="rgb(235,45,19)"/><text x="512.00" y="318.50">PyArra..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (14 samples, 4.20%)</title><rect x="516" y="324" width="50" height="15" fill="rgb(236,62,20)"/><text x="519.00" y="334.50">cblas..</text></g><g><title>gemm (cblasfuncs.c:40) (14 samples, 4.20%)</title><rect x="516" y="340" width="50" height="15" fill="rgb(219,148,39)"/><text x="519.00" y="350.50">gemm ..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 4.20%)</title><rect x="516" y="356" width="50" height="15" fill="rgb(216,194,15)"/><text x="519.00" y="366.50">cblas..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 4.20%)</title><rect x="516" y="372" width="50" height="15" fill="rgb(223,121,11)"/><text x="519.00" y="382.50">sgemm..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 4.20%)</title><rect x="516" y="388" width="50" height="15" fill="rgb(208,108,24)"/><text x="519.00" y="398.50">sgemm..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (49 samples, 14.71%)</title><rect x="509" y="228" width="174" height="15" fill="rgb(225,90,23)"/><text x="512.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (49 samples, 14.71%)</title><rect x="509" y="244" width="174" height="15" fill="rgb(208,0,1)"/><text x="512.00" y="254.50">numpy_dot_inplace (mlp..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (49 samples, 14.71%)</title><rect x="509" y="260" width="174" height="15" fill="rgb(226,127,19)"/><text x="512.00" y="270.50">dot (&lt;__array_function..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (33 samples, 9.91%)</title><rect x="566" y="276" width="117" height="15" fill="rgb(241,147,35)"/><text x="569.00" y="286.50">sgemm_kernel_S..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.30%)</title><rect x="683" y="228" width="3" height="15" fill="rgb(254,106,44)"/><text x="686.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="686" y="292" width="4" height="15" fill="rgb(238,22,24)"/><text x="689.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="686" y="308" width="4" height="15" fill="rgb(220,63,43)"/><text x="689.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.30%)</title><rect x="686" y="324" width="4" height="15" fill="rgb(229,81,34)"/><text x="689.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.30%)</title><rect x="686" y="340" width="4" height="15" fill="rgb(235,185,36)"/><text x="689.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.30%)</title><rect x="686" y="356" width="4" height="15" fill="rgb(207,155,52)"/><text x="689.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.30%)</title><rect x="686" y="372" width="4" height="15" fill="rgb(228,4,25)"/><text x="689.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.30%)</title><rect x="690" y="340" width="3" height="15" fill="rgb(223,113,31)"/><text x="693.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.90%)</title><rect x="686" y="276" width="11" height="15" fill="rgb(226,41,45)"/><text x="689.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.60%)</title><rect x="690" y="292" width="7" height="15" fill="rgb(209,107,44)"/><text x="693.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.60%)</title><rect x="690" y="308" width="7" height="15" fill="rgb(230,14,15)"/><text x="693.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.60%)</title><rect x="690" y="324" width="7" height="15" fill="rgb(236,212,26)"/><text x="693.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.30%)</title><rect x="693" y="340" width="4" height="15" fill="rgb(221,135,48)"/><text x="696.00" y="350.50"></text></g><g><title>0x7f4ee121bdae (libc-2.29.so) (1 samples, 0.30%)</title><rect x="693" y="356" width="4" height="15" fill="rgb(250,194,4)"/><text x="696.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 1.20%)</title><rect x="686" y="228" width="14" height="15" fill="rgb(243,225,19)"/><text x="689.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.20%)</title><rect x="686" y="244" width="14" height="15" fill="rgb(244,202,18)"/><text x="689.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.20%)</title><rect x="686" y="260" width="14" height="15" fill="rgb(217,136,17)"/><text x="689.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.30%)</title><rect x="697" y="276" width="3" height="15" fill="rgb(238,127,47)"/><text x="700.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.30%)</title><rect x="697" y="292" width="3" height="15" fill="rgb(239,216,20)"/><text x="700.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.30%)</title><rect x="697" y="308" width="3" height="15" fill="rgb(216,5,34)"/><text x="700.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.30%)</title><rect x="700" y="260" width="4" height="15" fill="rgb(234,126,42)"/><text x="703.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.30%)</title><rect x="700" y="276" width="4" height="15" fill="rgb(219,161,22)"/><text x="703.00" y="286.50"></text></g><g><title>0x7f4ee137ae0e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="718" y="356" width="4" height="15" fill="rgb(212,86,3)"/><text x="721.00" y="366.50"></text></g><g><title>0x7f4ee137ae17 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="722" y="356" width="7" height="15" fill="rgb(247,182,13)"/><text x="725.00" y="366.50"></text></g><g><title>0x7f4ee137ae37 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="729" y="356" width="3" height="15" fill="rgb(208,201,42)"/><text x="732.00" y="366.50"></text></g><g><title>0x7f4ee137ae4e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="732" y="356" width="4" height="15" fill="rgb(218,223,30)"/><text x="735.00" y="366.50"></text></g><g><title>0x7f4ee137ae96 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="736" y="356" width="3" height="15" fill="rgb(245,127,8)"/><text x="739.00" y="366.50"></text></g><g><title>0x7f4ec3622214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.90%)</title><rect x="704" y="324" width="46" height="15" fill="rgb(218,46,20)"/><text x="707.00" y="334.50">0x7f..</text></g><g><title>expf (libm-2.29.so) (13 samples, 3.90%)</title><rect x="704" y="340" width="46" height="15" fill="rgb(223,82,34)"/><text x="707.00" y="350.50">expf..</text></g><g><title>0x7f4ee137aea6 (libm-2.29.so) (3 samples, 0.90%)</title><rect x="739" y="356" width="11" height="15" fill="rgb(225,98,15)"/><text x="742.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (17 samples, 5.11%)</title><rect x="700" y="228" width="61" height="15" fill="rgb(223,82,47)"/><text x="703.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 5.11%)</title><rect x="700" y="244" width="61" height="15" fill="rgb(218,118,13)"/><text x="703.00" y="254.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 4.80%)</title><rect x="704" y="260" width="57" height="15" fill="rgb(252,222,48)"/><text x="707.00" y="270.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 4.80%)</title><rect x="704" y="276" width="57" height="15" fill="rgb(238,121,41)"/><text x="707.00" y="286.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (16 samples, 4.80%)</title><rect x="704" y="292" width="57" height="15" fill="rgb(234,5,11)"/><text x="707.00" y="302.50">trivia..</text></g><g><title>0x7f4ec360033d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.80%)</title><rect x="704" y="308" width="57" height="15" fill="rgb(210,109,27)"/><text x="707.00" y="318.50">0x7f4e..</text></g><g><title>0x7f4ec3622228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.90%)</title><rect x="750" y="324" width="11" height="15" fill="rgb(223,58,25)"/><text x="753.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.30%)</title><rect x="764" y="356" width="4" height="15" fill="rgb(244,47,15)"/><text x="767.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.30%)</title><rect x="764" y="372" width="4" height="15" fill="rgb(206,36,32)"/><text x="767.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.30%)</title><rect x="768" y="356" width="3" height="15" fill="rgb(209,136,47)"/><text x="771.00" y="366.50"></text></g><g><title>0x7f4ee121bdbe (libc-2.29.so) (1 samples, 0.30%)</title><rect x="768" y="372" width="3" height="15" fill="rgb(237,194,1)"/><text x="771.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (3 samples, 0.90%)</title><rect x="764" y="324" width="11" height="15" fill="rgb(221,127,47)"/><text x="767.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.90%)</title><rect x="764" y="340" width="11" height="15" fill="rgb(219,7,28)"/><text x="767.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.30%)</title><rect x="771" y="356" width="4" height="15" fill="rgb(233,31,44)"/><text x="774.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.30%)</title><rect x="771" y="372" width="4" height="15" fill="rgb(226,156,41)"/><text x="774.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.30%)</title><rect x="771" y="388" width="4" height="15" fill="rgb(208,135,3)"/><text x="774.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.30%)</title><rect x="771" y="404" width="4" height="15" fill="rgb(208,83,28)"/><text x="774.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="771" y="420" width="4" height="15" fill="rgb(220,34,0)"/><text x="774.00" y="430.50"></text></g><g><title>0x7f4ee11fd700 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="771" y="436" width="4" height="15" fill="rgb(218,47,28)"/><text x="774.00" y="446.50"></text></g><g><title>0x7f4ee11faab9 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="771" y="452" width="4" height="15" fill="rgb(232,50,49)"/><text x="774.00" y="462.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3089) (1 samples, 0.30%)</title><rect x="775" y="340" width="3" height="15" fill="rgb(239,185,44)"/><text x="778.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (78 samples, 23.42%)</title><rect x="506" y="196" width="276" height="15" fill="rgb(222,195,37)"/><text x="509.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (78 samples, 23.42%)</title><rect x="506" y="212" width="276" height="15" fill="rgb(207,22,48)"/><text x="509.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 1.80%)</title><rect x="761" y="228" width="21" height="15" fill="rgb(245,178,36)"/><text x="764.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.80%)</title><rect x="761" y="244" width="21" height="15" fill="rgb(244,9,16)"/><text x="764.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.80%)</title><rect x="761" y="260" width="21" height="15" fill="rgb(222,36,31)"/><text x="764.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.80%)</title><rect x="761" y="276" width="21" height="15" fill="rgb(233,218,39)"/><text x="764.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 1.50%)</title><rect x="764" y="292" width="18" height="15" fill="rgb(206,40,27)"/><text x="767.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (5 samples, 1.50%)</title><rect x="764" y="308" width="18" height="15" fill="rgb(245,200,14)"/><text x="767.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.60%)</title><rect x="775" y="324" width="7" height="15" fill="rgb(207,38,5)"/><text x="778.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.30%)</title><rect x="778" y="340" width="4" height="15" fill="rgb(222,48,47)"/><text x="781.00" y="350.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (101 samples, 30.33%)</title><rect x="428" y="164" width="358" height="15" fill="rgb(228,3,36)"/><text x="431.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (99 samples, 29.73%)</title><rect x="435" y="180" width="351" height="15" fill="rgb(251,52,39)"/><text x="438.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:13..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.30%)</title><rect x="782" y="196" width="4" height="15" fill="rgb(209,28,1)"/><text x="785.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (103 samples, 30.93%)</title><rect x="424" y="132" width="365" height="15" fill="rgb(230,145,34)"/><text x="427.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (103 samples, 30.93%)</title><rect x="424" y="148" width="365" height="15" fill="rgb(211,44,15)"/><text x="427.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.30%)</title><rect x="786" y="164" width="3" height="15" fill="rgb(237,189,51)"/><text x="789.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.30%)</title><rect x="786" y="180" width="3" height="15" fill="rgb(228,81,26)"/><text x="789.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:45) (107 samples, 32.13%)</title><rect x="413" y="52" width="380" height="15" fill="rgb(244,35,35)"/><text x="416.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_6..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:44) (107 samples, 32.13%)</title><rect x="413" y="68" width="380" height="15" fill="rgb(238,55,35)"/><text x="416.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (107 samples, 32.13%)</title><rect x="413" y="84" width="380" height="15" fill="rgb(254,144,31)"/><text x="416.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (105 samples, 31.53%)</title><rect x="421" y="100" width="372" height="15" fill="rgb(238,94,22)"/><text x="424.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_6..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (105 samples, 31.53%)</title><rect x="421" y="116" width="372" height="15" fill="rgb(250,210,8)"/><text x="424.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="789" y="132" width="4" height="15" fill="rgb(234,61,15)"/><text x="792.00" y="142.50"></text></g><g><title>0x7f4ea1aa4ff9 (?) (1 samples, 0.30%)</title><rect x="793" y="212" width="3" height="15" fill="rgb(227,222,46)"/><text x="796.00" y="222.50"></text></g><g><title>0x7f4ea1a9fef6 (?) (1 samples, 0.30%)</title><rect x="793" y="228" width="3" height="15" fill="rgb(223,74,34)"/><text x="796.00" y="238.50"></text></g><g><title>0x7f4ea1a94962 (?) (1 samples, 0.30%)</title><rect x="793" y="244" width="3" height="15" fill="rgb(230,209,15)"/><text x="796.00" y="254.50"></text></g><g><title>0x7f4ea1ac87a7 (?) (1 samples, 0.30%)</title><rect x="793" y="260" width="3" height="15" fill="rgb(232,134,48)"/><text x="796.00" y="270.50"></text></g><g><title>0x7f4ea1ac8379 (?) (1 samples, 0.30%)</title><rect x="793" y="276" width="3" height="15" fill="rgb(223,103,8)"/><text x="796.00" y="286.50"></text></g><g><title>0x7f4ea1f268b8 (?) (1 samples, 0.30%)</title><rect x="793" y="292" width="3" height="15" fill="rgb(225,1,5)"/><text x="796.00" y="302.50"></text></g><g><title>0x7f4ea1f24c7f (?) (1 samples, 0.30%)</title><rect x="793" y="308" width="3" height="15" fill="rgb(244,10,14)"/><text x="796.00" y="318.50"></text></g><g><title>0x7f4ea1f3799c (?) (1 samples, 0.30%)</title><rect x="793" y="324" width="3" height="15" fill="rgb(244,171,1)"/><text x="796.00" y="334.50"></text></g><g><title>0x7f4ea1c1cae6 (?) (1 samples, 0.30%)</title><rect x="793" y="340" width="3" height="15" fill="rgb(227,92,4)"/><text x="796.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:18) (4 samples, 1.20%)</title><rect x="793" y="100" width="14" height="15" fill="rgb(212,27,27)"/><text x="796.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 1.20%)</title><rect x="793" y="116" width="14" height="15" fill="rgb(222,37,25)"/><text x="796.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 1.20%)</title><rect x="793" y="132" width="14" height="15" fill="rgb(236,178,5)"/><text x="796.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 1.20%)</title><rect x="793" y="148" width="14" height="15" fill="rgb(242,30,0)"/><text x="796.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 1.20%)</title><rect x="793" y="164" width="14" height="15" fill="rgb(241,53,21)"/><text x="796.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 1.20%)</title><rect x="793" y="180" width="14" height="15" fill="rgb(218,11,19)"/><text x="796.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 1.20%)</title><rect x="793" y="196" width="14" height="15" fill="rgb(228,175,46)"/><text x="796.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="212" width="11" height="15" fill="rgb(214,36,38)"/><text x="799.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="228" width="11" height="15" fill="rgb(247,195,29)"/><text x="799.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="244" width="11" height="15" fill="rgb(221,155,5)"/><text x="799.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="260" width="11" height="15" fill="rgb(224,106,3)"/><text x="799.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="276" width="11" height="15" fill="rgb(208,223,16)"/><text x="799.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="292" width="11" height="15" fill="rgb(205,12,15)"/><text x="799.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="308" width="11" height="15" fill="rgb(215,216,15)"/><text x="799.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="324" width="11" height="15" fill="rgb(237,91,16)"/><text x="799.00" y="334.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.90%)</title><rect x="796" y="340" width="11" height="15" fill="rgb(252,209,20)"/><text x="799.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="803" y="356" width="4" height="15" fill="rgb(236,57,32)"/><text x="806.00" y="366.50"></text></g><g><title>0x7f4ee137ae96 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="803" y="372" width="4" height="15" fill="rgb(232,166,36)"/><text x="806.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.30%)</title><rect x="807" y="148" width="3" height="15" fill="rgb(209,141,46)"/><text x="810.00" y="158.50"></text></g><g><title>0x7f4ee121c14e (libc-2.29.so) (1 samples, 0.30%)</title><rect x="810" y="212" width="4" height="15" fill="rgb(238,69,54)"/><text x="813.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="817" y="260" width="4" height="15" fill="rgb(240,185,3)"/><text x="820.00" y="270.50"></text></g><g><title>0x7f4ee121bd50 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1119" y="372" width="3" height="15" fill="rgb(216,1,17)"/><text x="1122.00" y="382.50"></text></g><g><title>0x7f4ee121bdb3 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1122" y="372" width="4" height="15" fill="rgb(206,112,3)"/><text x="1125.00" y="382.50"></text></g><g><title>0x7f4ee137ae00 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1126" y="372" width="3" height="15" fill="rgb(241,157,32)"/><text x="1129.00" y="382.50"></text></g><g><title>0x7f4ee137ae37 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1129" y="372" width="4" height="15" fill="rgb(244,2,25)"/><text x="1132.00" y="382.50"></text></g><g><title>0x7f4ee137ae53 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1133" y="372" width="3" height="15" fill="rgb(251,91,1)"/><text x="1136.00" y="382.50"></text></g><g><title>0x7f4ee137ae6d (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1136" y="372" width="4" height="15" fill="rgb(237,70,25)"/><text x="1139.00" y="382.50"></text></g><g><title>0x7f4ee137ae76 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1140" y="372" width="3" height="15" fill="rgb(224,128,13)"/><text x="1143.00" y="382.50"></text></g><g><title>0x7f4ee137ae7a (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1143" y="372" width="4" height="15" fill="rgb(232,129,1)"/><text x="1146.00" y="382.50"></text></g><g><title>0x7f4ee137ae92 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1147" y="372" width="7" height="15" fill="rgb(211,154,16)"/><text x="1150.00" y="382.50"></text></g><g><title>0x7f4ee137ae9e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1154" y="372" width="4" height="15" fill="rgb(238,109,20)"/><text x="1157.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 28.83%)</title><rect x="821" y="340" width="340" height="15" fill="rgb(229,129,1)"/><text x="824.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Comp..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 6.61%)</title><rect x="1083" y="356" width="78" height="15" fill="rgb(240,208,3)"/><text x="1086.00" y="366.50">onnxrunti..</text></g><g><title>0x7f4ee137aea2 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1158" y="372" width="3" height="15" fill="rgb(231,186,30)"/><text x="1161.00" y="382.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (106 samples, 31.83%)</title><rect x="807" y="132" width="375" height="15" fill="rgb(241,165,50)"/><text x="810.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (105 samples, 31.53%)</title><rect x="810" y="148" width="372" height="15" fill="rgb(226,19,18)"/><text x="813.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (105 samples, 31.53%)</title><rect x="810" y="164" width="372" height="15" fill="rgb(248,33,28)"/><text x="813.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (105 samples, 31.53%)</title><rect x="810" y="180" width="372" height="15" fill="rgb(242,168,7)"/><text x="813.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (105 samples, 31.53%)</title><rect x="810" y="196" width="372" height="15" fill="rgb(206,210,5)"/><text x="813.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 31.23%)</title><rect x="814" y="212" width="368" height="15" fill="rgb(214,160,10)"/><text x="817.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 31.23%)</title><rect x="814" y="228" width="368" height="15" fill="rgb(236,109,26)"/><text x="817.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunti..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 31.23%)</title><rect x="814" y="244" width="368" height="15" fill="rgb(247,202,54)"/><text x="817.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::m..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 30.63%)</title><rect x="821" y="260" width="361" height="15" fill="rgb(212,6,43)"/><text x="824.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 30.63%)</title><rect x="821" y="276" width="361" height="15" fill="rgb(254,193,2)"/><text x="824.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 30.63%)</title><rect x="821" y="292" width="361" height="15" fill="rgb(219,9,49)"/><text x="824.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 30.63%)</title><rect x="821" y="308" width="361" height="15" fill="rgb(214,9,11)"/><text x="824.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 30.63%)</title><rect x="821" y="324" width="361" height="15" fill="rgb(233,220,33)"/><text x="824.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.80%)</title><rect x="1161" y="340" width="21" height="15" fill="rgb(225,72,24)"/><text x="1164.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.80%)</title><rect x="1161" y="356" width="21" height="15" fill="rgb(227,219,22)"/><text x="1164.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:52) (111 samples, 33.33%)</title><rect x="793" y="52" width="393" height="15" fill="rgb(248,187,45)"/><text x="796.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:51) (111 samples, 33.33%)</title><rect x="793" y="68" width="393" height="15" fill="rgb(225,226,7)"/><text x="796.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:29) (111 samples, 33.33%)</title><rect x="793" y="84" width="393" height="15" fill="rgb(238,77,36)"/><text x="796.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_50_12_float_nozipmap.py:23) (107 samples, 32.13%)</title><rect x="807" y="100" width="379" height="15" fill="rgb(233,16,52)"/><text x="810.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (107 samples, 32.13%)</title><rect x="807" y="116" width="379" height="15" fill="rgb(239,216,4)"/><text x="810.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(211,2,52)"/><text x="1185.00" y="142.50"></text></g><g><title>0x7f4ee12d9151 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(228,142,33)"/><text x="1185.00" y="158.50"></text></g><g><title>all (333 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,22,27)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(217,115,31)"/><text x="1189.00" y="62.50"></text></g></g></svg>