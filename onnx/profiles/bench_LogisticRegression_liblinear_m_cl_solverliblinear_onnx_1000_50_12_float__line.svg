<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:31) (1 samples, 0.15%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(242,93,35)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:11) (1 samples, 0.15%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(242,48,34)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:41) (1 samples, 0.15%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(245,9,39)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.15%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(251,170,46)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.15%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(240,29,12)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.15%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(222,223,3)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:233) (1 samples, 0.15%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(224,85,27)"/><text x="13.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.15%)</title><rect x="11" y="148" width="2" height="15" fill="rgb(235,182,23)"/><text x="14.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.15%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(231,164,23)"/><text x="14.00" y="174.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.15%)</title><rect x="13" y="164" width="2" height="15" fill="rgb(221,31,46)"/><text x="16.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.15%)</title><rect x="13" y="180" width="2" height="15" fill="rgb(233,112,50)"/><text x="16.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.15%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(209,75,27)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.15%)</title><rect x="15" y="228" width="2" height="15" fill="rgb(245,174,54)"/><text x="18.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="15" y="244" width="2" height="15" fill="rgb(235,157,40)"/><text x="18.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.15%)</title><rect x="15" y="260" width="2" height="15" fill="rgb(229,73,6)"/><text x="18.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.15%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(216,108,54)"/><text x="18.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.15%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(219,229,22)"/><text x="18.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.15%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(245,158,52)"/><text x="18.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.31%)</title><rect x="15" y="180" width="4" height="15" fill="rgb(228,134,54)"/><text x="18.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.31%)</title><rect x="15" y="196" width="4" height="15" fill="rgb(219,92,17)"/><text x="18.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.31%)</title><rect x="15" y="212" width="4" height="15" fill="rgb(209,33,7)"/><text x="18.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.15%)</title><rect x="17" y="228" width="2" height="15" fill="rgb(219,20,38)"/><text x="20.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.15%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(250,139,38)"/><text x="20.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.15%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(233,170,41)"/><text x="20.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.15%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(245,52,42)"/><text x="20.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.15%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(230,213,34)"/><text x="20.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2048) (1 samples, 0.15%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(216,128,41)"/><text x="20.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:18) (5 samples, 0.77%)</title><rect x="11" y="100" width="9" height="15" fill="rgb(210,10,27)"/><text x="14.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.77%)</title><rect x="11" y="116" width="9" height="15" fill="rgb(241,69,28)"/><text x="14.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (5 samples, 0.77%)</title><rect x="11" y="132" width="9" height="15" fill="rgb(205,115,3)"/><text x="14.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (4 samples, 0.62%)</title><rect x="13" y="148" width="7" height="15" fill="rgb(225,160,44)"/><text x="16.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (3 samples, 0.46%)</title><rect x="15" y="164" width="5" height="15" fill="rgb(250,75,48)"/><text x="18.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.15%)</title><rect x="19" y="180" width="1" height="15" fill="rgb(212,156,0)"/><text x="22.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="19" y="196" width="1" height="15" fill="rgb(233,48,51)"/><text x="22.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.15%)</title><rect x="19" y="212" width="1" height="15" fill="rgb(243,106,17)"/><text x="22.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.15%)</title><rect x="19" y="228" width="1" height="15" fill="rgb(235,158,37)"/><text x="22.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.15%)</title><rect x="19" y="244" width="1" height="15" fill="rgb(220,59,45)"/><text x="22.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.15%)</title><rect x="19" y="260" width="1" height="15" fill="rgb(213,114,11)"/><text x="22.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.15%)</title><rect x="19" y="276" width="1" height="15" fill="rgb(211,72,31)"/><text x="22.00" y="286.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="28" y="196" width="2" height="15" fill="rgb(227,61,21)"/><text x="31.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (3 samples, 0.46%)</title><rect x="26" y="148" width="5" height="15" fill="rgb(231,21,11)"/><text x="29.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.46%)</title><rect x="26" y="164" width="5" height="15" fill="rgb(226,94,12)"/><text x="29.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.46%)</title><rect x="26" y="180" width="5" height="15" fill="rgb(246,135,20)"/><text x="29.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="30" y="196" width="1" height="15" fill="rgb(207,209,19)"/><text x="33.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.31%)</title><rect x="31" y="212" width="4" height="15" fill="rgb(245,3,44)"/><text x="34.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.46%)</title><rect x="31" y="180" width="6" height="15" fill="rgb(239,165,33)"/><text x="34.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 0.46%)</title><rect x="31" y="196" width="6" height="15" fill="rgb(211,120,47)"/><text x="34.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.15%)</title><rect x="35" y="212" width="2" height="15" fill="rgb(224,225,32)"/><text x="38.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.15%)</title><rect x="37" y="196" width="2" height="15" fill="rgb(228,139,4)"/><text x="40.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.15%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(206,182,49)"/><text x="42.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.15%)</title><rect x="41" y="196" width="1" height="15" fill="rgb(225,65,51)"/><text x="44.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.31%)</title><rect x="42" y="196" width="4" height="15" fill="rgb(224,149,45)"/><text x="45.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.31%)</title><rect x="42" y="212" width="4" height="15" fill="rgb(212,176,21)"/><text x="45.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.15%)</title><rect x="46" y="228" width="2" height="15" fill="rgb(220,79,41)"/><text x="49.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.15%)</title><rect x="48" y="228" width="2" height="15" fill="rgb(218,72,24)"/><text x="51.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.46%)</title><rect x="46" y="196" width="5" height="15" fill="rgb(206,4,47)"/><text x="49.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.46%)</title><rect x="46" y="212" width="5" height="15" fill="rgb(238,31,15)"/><text x="49.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.15%)</title><rect x="50" y="228" width="1" height="15" fill="rgb(209,21,27)"/><text x="53.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.15%)</title><rect x="51" y="196" width="2" height="15" fill="rgb(252,137,15)"/><text x="54.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.15%)</title><rect x="51" y="212" width="2" height="15" fill="rgb(210,158,39)"/><text x="54.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:526) (1 samples, 0.15%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(231,75,52)"/><text x="56.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 0.46%)</title><rect x="55" y="196" width="6" height="15" fill="rgb(251,176,47)"/><text x="58.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.46%)</title><rect x="55" y="212" width="6" height="15" fill="rgb(245,76,26)"/><text x="58.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.31%)</title><rect x="57" y="228" width="4" height="15" fill="rgb(245,58,51)"/><text x="60.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.15%)</title><rect x="61" y="196" width="1" height="15" fill="rgb(213,139,12)"/><text x="64.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.31%)</title><rect x="62" y="196" width="4" height="15" fill="rgb(243,101,43)"/><text x="65.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.31%)</title><rect x="62" y="212" width="4" height="15" fill="rgb(224,5,35)"/><text x="65.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.31%)</title><rect x="62" y="228" width="4" height="15" fill="rgb(212,23,38)"/><text x="65.00" y="238.50"></text></g><g><title>0x7fd736d52e7e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="64" y="244" width="2" height="15" fill="rgb(218,139,42)"/><text x="67.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.15%)</title><rect x="66" y="212" width="2" height="15" fill="rgb(236,143,39)"/><text x="69.00" y="222.50"></text></g><g><title>0x7fd736d52b95 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="66" y="228" width="2" height="15" fill="rgb(218,31,13)"/><text x="69.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.15%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(233,59,14)"/><text x="71.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (22 samples, 3.40%)</title><rect x="37" y="180" width="40" height="15" fill="rgb(240,216,17)"/><text x="40.00" y="190.50">dec..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 0.93%)</title><rect x="66" y="196" width="11" height="15" fill="rgb(241,17,34)"/><text x="69.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.62%)</title><rect x="70" y="212" width="7" height="15" fill="rgb(210,52,11)"/><text x="73.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.46%)</title><rect x="72" y="228" width="5" height="15" fill="rgb(237,23,51)"/><text x="75.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.15%)</title><rect x="77" y="180" width="2" height="15" fill="rgb(227,36,42)"/><text x="80.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.15%)</title><rect x="77" y="196" width="2" height="15" fill="rgb(241,193,10)"/><text x="80.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.15%)</title><rect x="77" y="212" width="2" height="15" fill="rgb(242,196,26)"/><text x="80.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.15%)</title><rect x="77" y="228" width="2" height="15" fill="rgb(216,75,29)"/><text x="80.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:165) (1 samples, 0.15%)</title><rect x="77" y="244" width="2" height="15" fill="rgb(211,183,28)"/><text x="80.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1526) (1 samples, 0.15%)</title><rect x="79" y="260" width="2" height="15" fill="rgb(226,55,19)"/><text x="82.00" y="270.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.15%)</title><rect x="79" y="276" width="2" height="15" fill="rgb(242,73,16)"/><text x="82.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.15%)</title><rect x="81" y="308" width="1" height="15" fill="rgb(223,70,13)"/><text x="84.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.15%)</title><rect x="82" y="308" width="2" height="15" fill="rgb(231,124,25)"/><text x="85.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.46%)</title><rect x="81" y="260" width="5" height="15" fill="rgb(215,109,52)"/><text x="84.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.46%)</title><rect x="81" y="276" width="5" height="15" fill="rgb(241,17,17)"/><text x="84.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.46%)</title><rect x="81" y="292" width="5" height="15" fill="rgb(238,208,34)"/><text x="84.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.15%)</title><rect x="84" y="308" width="2" height="15" fill="rgb(248,61,21)"/><text x="87.00" y="318.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.31%)</title><rect x="86" y="308" width="4" height="15" fill="rgb(227,189,20)"/><text x="89.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.31%)</title><rect x="86" y="324" width="4" height="15" fill="rgb(243,218,33)"/><text x="89.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.08%)</title><rect x="79" y="228" width="13" height="15" fill="rgb(226,65,34)"/><text x="82.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.08%)</title><rect x="79" y="244" width="13" height="15" fill="rgb(239,111,27)"/><text x="82.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.46%)</title><rect x="86" y="260" width="6" height="15" fill="rgb(228,158,7)"/><text x="89.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.46%)</title><rect x="86" y="276" width="6" height="15" fill="rgb(244,20,13)"/><text x="89.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.46%)</title><rect x="86" y="292" width="6" height="15" fill="rgb(233,103,32)"/><text x="89.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.15%)</title><rect x="90" y="308" width="2" height="15" fill="rgb(226,201,46)"/><text x="93.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.15%)</title><rect x="90" y="324" width="2" height="15" fill="rgb(206,135,53)"/><text x="93.00" y="334.50"></text></g><g><title>array_add (number.c:330) (8 samples, 1.24%)</title><rect x="79" y="196" width="14" height="15" fill="rgb(219,44,52)"/><text x="82.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.24%)</title><rect x="79" y="212" width="14" height="15" fill="rgb(237,77,19)"/><text x="82.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.15%)</title><rect x="92" y="228" width="1" height="15" fill="rgb(252,174,40)"/><text x="95.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.15%)</title><rect x="93" y="196" width="2" height="15" fill="rgb(240,106,52)"/><text x="96.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.15%)</title><rect x="93" y="212" width="2" height="15" fill="rgb(227,210,22)"/><text x="96.00" y="222.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (2 samples, 0.31%)</title><rect x="95" y="196" width="4" height="15" fill="rgb(247,187,47)"/><text x="98.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="101" y="212" width="2" height="15" fill="rgb(205,208,53)"/><text x="104.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.01%)</title><rect x="103" y="212" width="23" height="15" fill="rgb(207,152,17)"/><text x="106.00" y="222.50">d..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2926) (1 samples, 0.15%)</title><rect x="126" y="276" width="2" height="15" fill="rgb(236,142,50)"/><text x="129.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.15%)</title><rect x="128" y="276" width="2" height="15" fill="rgb(208,10,32)"/><text x="131.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.15%)</title><rect x="128" y="292" width="2" height="15" fill="rgb(208,160,23)"/><text x="131.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.15%)</title><rect x="128" y="308" width="2" height="15" fill="rgb(243,88,38)"/><text x="131.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.15%)</title><rect x="128" y="324" width="2" height="15" fill="rgb(205,118,9)"/><text x="131.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (14 samples, 2.16%)</title><rect x="130" y="308" width="25" height="15" fill="rgb(243,176,39)"/><text x="133.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (14 samples, 2.16%)</title><rect x="130" y="324" width="25" height="15" fill="rgb(244,66,36)"/><text x="133.00" y="334.50">_..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (15 samples, 2.32%)</title><rect x="130" y="276" width="27" height="15" fill="rgb(238,25,44)"/><text x="133.00" y="286.50">n..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (15 samples, 2.32%)</title><rect x="130" y="292" width="27" height="15" fill="rgb(215,3,27)"/><text x="133.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.15%)</title><rect x="155" y="308" width="2" height="15" fill="rgb(208,116,24)"/><text x="158.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (18 samples, 2.78%)</title><rect x="126" y="244" width="33" height="15" fill="rgb(244,10,37)"/><text x="129.00" y="254.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (18 samples, 2.78%)</title><rect x="126" y="260" width="33" height="15" fill="rgb(217,38,44)"/><text x="129.00" y="270.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.15%)</title><rect x="157" y="276" width="2" height="15" fill="rgb(231,89,15)"/><text x="160.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.15%)</title><rect x="157" y="292" width="2" height="15" fill="rgb(228,71,47)"/><text x="160.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.15%)</title><rect x="157" y="308" width="2" height="15" fill="rgb(209,3,20)"/><text x="160.00" y="318.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="161" y="308" width="2" height="15" fill="rgb(207,117,31)"/><text x="164.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (45 samples, 6.96%)</title><rect x="99" y="196" width="82" height="15" fill="rgb(242,133,20)"/><text x="102.00" y="206.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 4.64%)</title><rect x="126" y="212" width="55" height="15" fill="rgb(224,92,49)"/><text x="129.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (30 samples, 4.64%)</title><rect x="126" y="228" width="55" height="15" fill="rgb(210,196,8)"/><text x="129.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (12 samples, 1.85%)</title><rect x="159" y="244" width="22" height="15" fill="rgb(227,18,51)"/><text x="162.00" y="254.50">P..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (12 samples, 1.85%)</title><rect x="159" y="260" width="22" height="15" fill="rgb(214,76,15)"/><text x="162.00" y="270.50">D..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 1.85%)</title><rect x="159" y="276" width="22" height="15" fill="rgb(240,124,14)"/><text x="162.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 1.85%)</title><rect x="159" y="292" width="22" height="15" fill="rgb(209,10,49)"/><text x="162.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 1.55%)</title><rect x="163" y="308" width="18" height="15" fill="rgb(245,81,38)"/><text x="166.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (84 samples, 12.98%)</title><rect x="31" y="164" width="154" height="15" fill="rgb(247,84,34)"/><text x="34.00" y="174.50">_predict_proba_lr (..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (58 samples, 8.96%)</title><rect x="79" y="180" width="106" height="15" fill="rgb(232,12,42)"/><text x="82.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.31%)</title><rect x="181" y="196" width="4" height="15" fill="rgb(206,8,0)"/><text x="184.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.15%)</title><rect x="183" y="212" width="2" height="15" fill="rgb(227,31,19)"/><text x="186.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.15%)</title><rect x="188" y="180" width="2" height="15" fill="rgb(224,38,33)"/><text x="191.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.15%)</title><rect x="188" y="196" width="2" height="15" fill="rgb(253,131,13)"/><text x="191.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.15%)</title><rect x="188" y="212" width="2" height="15" fill="rgb(221,18,33)"/><text x="191.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.15%)</title><rect x="188" y="228" width="2" height="15" fill="rgb(253,196,49)"/><text x="191.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="188" y="244" width="2" height="15" fill="rgb(232,57,24)"/><text x="191.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.15%)</title><rect x="190" y="212" width="2" height="15" fill="rgb(215,22,47)"/><text x="193.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.15%)</title><rect x="190" y="228" width="2" height="15" fill="rgb(243,188,3)"/><text x="193.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.15%)</title><rect x="190" y="244" width="2" height="15" fill="rgb(239,69,20)"/><text x="193.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.15%)</title><rect x="190" y="260" width="2" height="15" fill="rgb(205,30,1)"/><text x="193.00" y="270.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:283) (1 samples, 0.15%)</title><rect x="190" y="276" width="2" height="15" fill="rgb(237,136,2)"/><text x="193.00" y="286.50"></text></g><g><title>0x7fd7191429dd (?) (1 samples, 0.15%)</title><rect x="192" y="244" width="2" height="15" fill="rgb(221,186,53)"/><text x="195.00" y="254.50"></text></g><g><title>0x7fd719163265 (?) (1 samples, 0.15%)</title><rect x="192" y="260" width="2" height="15" fill="rgb(247,215,30)"/><text x="195.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.15%)</title><rect x="192" y="276" width="2" height="15" fill="rgb(220,92,40)"/><text x="195.00" y="286.50"></text></g><g><title>0x7fd736f0ebf9 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="192" y="292" width="2" height="15" fill="rgb(249,223,39)"/><text x="195.00" y="302.50"></text></g><g><title>0x7fd719163254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="194" y="260" width="2" height="15" fill="rgb(210,7,25)"/><text x="197.00" y="270.50"></text></g><g><title>0x7fd71926c9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="197" y="276" width="2" height="15" fill="rgb(212,193,18)"/><text x="200.00" y="286.50"></text></g><g><title>0x7fd736e881b0 (libm-2.29.so) (3 samples, 0.46%)</title><rect x="203" y="292" width="5" height="15" fill="rgb(234,79,8)"/><text x="206.00" y="302.50"></text></g><g><title>0x7fd736f0ebd3 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="208" y="292" width="2" height="15" fill="rgb(210,168,15)"/><text x="211.00" y="302.50"></text></g><g><title>0x7fd736f0ebf9 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="210" y="292" width="4" height="15" fill="rgb(234,185,46)"/><text x="213.00" y="302.50"></text></g><g><title>0x7fd736f0ec07 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="214" y="292" width="2" height="15" fill="rgb(236,19,53)"/><text x="217.00" y="302.50"></text></g><g><title>0x7fd736f0ec2e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="216" y="292" width="1" height="15" fill="rgb(213,48,1)"/><text x="219.00" y="302.50"></text></g><g><title>0x7fd719163265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.16%)</title><rect x="196" y="260" width="25" height="15" fill="rgb(225,201,41)"/><text x="199.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (12 samples, 1.85%)</title><rect x="199" y="276" width="22" height="15" fill="rgb(214,150,8)"/><text x="202.00" y="286.50">e..</text></g><g><title>0x7fd736f0ec56 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="217" y="292" width="4" height="15" fill="rgb(239,224,11)"/><text x="220.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (26 samples, 4.02%)</title><rect x="185" y="164" width="47" height="15" fill="rgb(236,149,18)"/><text x="188.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (23 samples, 3.55%)</title><rect x="190" y="180" width="42" height="15" fill="rgb(235,164,24)"/><text x="193.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (23 samples, 3.55%)</title><rect x="190" y="196" width="42" height="15" fill="rgb(220,19,54)"/><text x="193.00" y="206.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (22 samples, 3.40%)</title><rect x="192" y="212" width="40" height="15" fill="rgb(220,206,54)"/><text x="195.00" y="222.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (22 samples, 3.40%)</title><rect x="192" y="228" width="40" height="15" fill="rgb(220,70,16)"/><text x="195.00" y="238.50">tri..</text></g><g><title>0x7fd7191429dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.25%)</title><rect x="194" y="244" width="38" height="15" fill="rgb(238,195,26)"/><text x="197.00" y="254.50">0x7..</text></g><g><title>0x7fd719163279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.93%)</title><rect x="221" y="260" width="11" height="15" fill="rgb(248,103,11)"/><text x="224.00" y="270.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.15%)</title><rect x="232" y="180" width="2" height="15" fill="rgb(248,125,17)"/><text x="235.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.15%)</title><rect x="232" y="196" width="2" height="15" fill="rgb(227,178,43)"/><text x="235.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.15%)</title><rect x="232" y="212" width="2" height="15" fill="rgb(217,82,49)"/><text x="235.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.15%)</title><rect x="232" y="228" width="2" height="15" fill="rgb(215,5,50)"/><text x="235.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.15%)</title><rect x="232" y="244" width="2" height="15" fill="rgb(210,193,30)"/><text x="235.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.15%)</title><rect x="234" y="324" width="2" height="15" fill="rgb(208,68,52)"/><text x="237.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.15%)</title><rect x="234" y="340" width="2" height="15" fill="rgb(246,16,24)"/><text x="237.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.31%)</title><rect x="234" y="276" width="3" height="15" fill="rgb(215,171,49)"/><text x="237.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.31%)</title><rect x="234" y="292" width="3" height="15" fill="rgb(237,56,42)"/><text x="237.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.31%)</title><rect x="234" y="308" width="3" height="15" fill="rgb(209,120,40)"/><text x="237.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="236" y="324" width="1" height="15" fill="rgb(221,200,52)"/><text x="239.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="236" y="340" width="1" height="15" fill="rgb(240,143,25)"/><text x="239.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="236" y="356" width="1" height="15" fill="rgb(218,52,28)"/><text x="239.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.15%)</title><rect x="236" y="372" width="1" height="15" fill="rgb(244,189,33)"/><text x="239.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.15%)</title><rect x="237" y="276" width="2" height="15" fill="rgb(230,85,30)"/><text x="240.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.15%)</title><rect x="237" y="292" width="2" height="15" fill="rgb(210,201,24)"/><text x="240.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.15%)</title><rect x="237" y="308" width="2" height="15" fill="rgb(254,95,1)"/><text x="240.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.15%)</title><rect x="237" y="324" width="2" height="15" fill="rgb(215,228,10)"/><text x="240.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.15%)</title><rect x="237" y="340" width="2" height="15" fill="rgb(254,136,37)"/><text x="240.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.15%)</title><rect x="239" y="292" width="2" height="15" fill="rgb(233,37,53)"/><text x="242.00" y="302.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:801) (1 samples, 0.15%)</title><rect x="239" y="308" width="2" height="15" fill="rgb(240,197,49)"/><text x="242.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.31%)</title><rect x="239" y="276" width="4" height="15" fill="rgb(218,68,11)"/><text x="242.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.15%)</title><rect x="241" y="292" width="2" height="15" fill="rgb(252,74,33)"/><text x="244.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.15%)</title><rect x="241" y="308" width="2" height="15" fill="rgb(248,190,50)"/><text x="244.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:563) (1 samples, 0.15%)</title><rect x="243" y="276" width="2" height="15" fill="rgb(252,161,27)"/><text x="246.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1221) (1 samples, 0.15%)</title><rect x="243" y="292" width="2" height="15" fill="rgb(248,132,44)"/><text x="246.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.15%)</title><rect x="245" y="292" width="2" height="15" fill="rgb(226,210,52)"/><text x="248.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.31%)</title><rect x="248" y="308" width="4" height="15" fill="rgb(243,63,50)"/><text x="251.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 1.70%)</title><rect x="234" y="180" width="20" height="15" fill="rgb(214,151,20)"/><text x="237.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 1.70%)</title><rect x="234" y="196" width="20" height="15" fill="rgb(233,193,18)"/><text x="237.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 1.70%)</title><rect x="234" y="212" width="20" height="15" fill="rgb(221,130,9)"/><text x="237.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 1.70%)</title><rect x="234" y="228" width="20" height="15" fill="rgb(232,73,45)"/><text x="237.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.70%)</title><rect x="234" y="244" width="20" height="15" fill="rgb(211,12,50)"/><text x="237.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.70%)</title><rect x="234" y="260" width="20" height="15" fill="rgb(209,218,45)"/><text x="237.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.77%)</title><rect x="245" y="276" width="9" height="15" fill="rgb(248,202,0)"/><text x="248.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.62%)</title><rect x="247" y="292" width="7" height="15" fill="rgb(211,183,7)"/><text x="250.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.15%)</title><rect x="252" y="308" width="2" height="15" fill="rgb(228,98,38)"/><text x="255.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.15%)</title><rect x="254" y="196" width="2" height="15" fill="rgb(226,223,43)"/><text x="257.00" y="206.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.15%)</title><rect x="256" y="292" width="2" height="15" fill="rgb(222,120,44)"/><text x="259.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.31%)</title><rect x="256" y="228" width="3" height="15" fill="rgb(237,142,49)"/><text x="259.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.31%)</title><rect x="256" y="244" width="3" height="15" fill="rgb(227,107,42)"/><text x="259.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.31%)</title><rect x="256" y="260" width="3" height="15" fill="rgb(219,105,19)"/><text x="259.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.31%)</title><rect x="256" y="276" width="3" height="15" fill="rgb(226,46,11)"/><text x="259.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.15%)</title><rect x="258" y="292" width="1" height="15" fill="rgb(240,202,31)"/><text x="261.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:249) (1 samples, 0.15%)</title><rect x="259" y="260" width="2" height="15" fill="rgb(240,192,43)"/><text x="262.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.08%)</title><rect x="256" y="196" width="12" height="15" fill="rgb(235,34,16)"/><text x="259.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.08%)</title><rect x="256" y="212" width="12" height="15" fill="rgb(208,100,28)"/><text x="259.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 0.77%)</title><rect x="259" y="228" width="9" height="15" fill="rgb(234,36,15)"/><text x="262.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 0.77%)</title><rect x="259" y="244" width="9" height="15" fill="rgb(219,180,17)"/><text x="262.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.62%)</title><rect x="261" y="260" width="7" height="15" fill="rgb(234,182,36)"/><text x="264.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.62%)</title><rect x="261" y="276" width="7" height="15" fill="rgb(240,156,2)"/><text x="264.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.62%)</title><rect x="261" y="292" width="7" height="15" fill="rgb(249,23,16)"/><text x="264.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:38) (142 samples, 21.95%)</title><rect x="11" y="52" width="259" height="15" fill="rgb(247,118,49)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_LogisticRegression..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:37) (142 samples, 21.95%)</title><rect x="11" y="68" width="259" height="15" fill="rgb(236,57,30)"/><text x="14.00" y="78.50">profile_skl (bench_LogisticRegress..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:29) (142 samples, 21.95%)</title><rect x="11" y="84" width="259" height="15" fill="rgb(220,173,7)"/><text x="14.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:23) (137 samples, 21.17%)</title><rect x="20" y="100" width="250" height="15" fill="rgb(244,146,48)"/><text x="23.00" y="110.50">profile (bench_LogisticRegression..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (137 samples, 21.17%)</title><rect x="20" y="116" width="250" height="15" fill="rgb(249,180,44)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (135 samples, 20.87%)</title><rect x="24" y="132" width="246" height="15" fill="rgb(232,207,24)"/><text x="27.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (131 samples, 20.25%)</title><rect x="31" y="148" width="239" height="15" fill="rgb(218,82,29)"/><text x="34.00" y="158.50">predict_proba (sklearn/linear_m..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 3.25%)</title><rect x="232" y="164" width="38" height="15" fill="rgb(205,66,3)"/><text x="235.00" y="174.50">_pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.39%)</title><rect x="254" y="180" width="16" height="15" fill="rgb(236,50,47)"/><text x="257.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3284) (1 samples, 0.15%)</title><rect x="268" y="196" width="2" height="15" fill="rgb(208,89,33)"/><text x="271.00" y="206.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.15%)</title><rect x="270" y="244" width="2" height="15" fill="rgb(217,194,39)"/><text x="273.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="270" y="260" width="2" height="15" fill="rgb(212,65,29)"/><text x="273.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(221,35,51)"/><text x="273.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="292" width="2" height="15" fill="rgb(241,190,32)"/><text x="273.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="308" width="2" height="15" fill="rgb(234,71,36)"/><text x="273.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="324" width="2" height="15" fill="rgb(219,82,49)"/><text x="273.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="340" width="2" height="15" fill="rgb(222,194,23)"/><text x="273.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="356" width="2" height="15" fill="rgb(238,170,41)"/><text x="273.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.15%)</title><rect x="270" y="372" width="2" height="15" fill="rgb(247,109,36)"/><text x="273.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="270" y="388" width="2" height="15" fill="rgb(205,223,27)"/><text x="273.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="404" width="2" height="15" fill="rgb(209,3,7)"/><text x="273.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="420" width="2" height="15" fill="rgb(229,31,2)"/><text x="273.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="436" width="2" height="15" fill="rgb(209,162,3)"/><text x="273.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="452" width="2" height="15" fill="rgb(210,210,30)"/><text x="273.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="468" width="2" height="15" fill="rgb(211,151,8)"/><text x="273.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="484" width="2" height="15" fill="rgb(226,29,25)"/><text x="273.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.15%)</title><rect x="270" y="500" width="2" height="15" fill="rgb(233,71,47)"/><text x="273.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="516" width="2" height="15" fill="rgb(240,130,25)"/><text x="273.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="532" width="2" height="15" fill="rgb(213,61,43)"/><text x="273.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="548" width="2" height="15" fill="rgb(235,29,29)"/><text x="273.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="564" width="2" height="15" fill="rgb(212,201,3)"/><text x="273.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="580" width="2" height="15" fill="rgb(228,171,8)"/><text x="273.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.15%)</title><rect x="270" y="596" width="2" height="15" fill="rgb(248,196,13)"/><text x="273.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="612" width="2" height="15" fill="rgb(205,210,26)"/><text x="273.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="628" width="2" height="15" fill="rgb(205,56,13)"/><text x="273.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="644" width="2" height="15" fill="rgb(212,74,30)"/><text x="273.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="660" width="2" height="15" fill="rgb(248,153,21)"/><text x="273.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="676" width="2" height="15" fill="rgb(222,215,23)"/><text x="273.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py:155) (1 samples, 0.15%)</title><rect x="270" y="692" width="2" height="15" fill="rgb(217,56,7)"/><text x="273.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="708" width="2" height="15" fill="rgb(241,72,21)"/><text x="273.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="724" width="2" height="15" fill="rgb(232,218,30)"/><text x="273.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="740" width="2" height="15" fill="rgb(210,116,10)"/><text x="273.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="756" width="2" height="15" fill="rgb(235,46,44)"/><text x="273.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="772" width="2" height="15" fill="rgb(249,142,20)"/><text x="273.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py:8) (1 samples, 0.15%)</title><rect x="270" y="788" width="2" height="15" fill="rgb(239,211,11)"/><text x="273.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="804" width="2" height="15" fill="rgb(227,182,17)"/><text x="273.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="820" width="2" height="15" fill="rgb(234,195,15)"/><text x="273.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="836" width="2" height="15" fill="rgb(224,49,46)"/><text x="273.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="852" width="2" height="15" fill="rgb(219,128,35)"/><text x="273.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="868" width="2" height="15" fill="rgb(234,54,6)"/><text x="273.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py:5) (1 samples, 0.15%)</title><rect x="270" y="884" width="2" height="15" fill="rgb(236,106,24)"/><text x="273.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="900" width="2" height="15" fill="rgb(246,60,39)"/><text x="273.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="916" width="2" height="15" fill="rgb(254,53,53)"/><text x="273.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="932" width="2" height="15" fill="rgb(241,24,10)"/><text x="273.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="270" y="948" width="2" height="15" fill="rgb(211,120,27)"/><text x="273.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="270" y="964" width="2" height="15" fill="rgb(233,136,54)"/><text x="273.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py:11) (1 samples, 0.15%)</title><rect x="270" y="980" width="2" height="15" fill="rgb(211,206,44)"/><text x="273.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="270" y="996" width="2" height="15" fill="rgb(252,209,5)"/><text x="273.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="270" y="1012" width="2" height="15" fill="rgb(235,60,46)"/><text x="273.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="270" y="1028" width="2" height="15" fill="rgb(208,44,2)"/><text x="273.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="270" y="1044" width="2" height="15" fill="rgb(226,176,32)"/><text x="273.00" y="1054.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.15%)</title><rect x="270" y="1060" width="2" height="15" fill="rgb(250,192,15)"/><text x="273.00" y="1070.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.15%)</title><rect x="270" y="1076" width="2" height="15" fill="rgb(221,58,30)"/><text x="273.00" y="1086.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="270" y="1092" width="2" height="15" fill="rgb(212,84,52)"/><text x="273.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:1) (2 samples, 0.31%)</title><rect x="270" y="148" width="4" height="15" fill="rgb(227,213,52)"/><text x="273.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="270" y="164" width="4" height="15" fill="rgb(212,54,28)"/><text x="273.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="270" y="180" width="4" height="15" fill="rgb(241,125,15)"/><text x="273.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="270" y="196" width="4" height="15" fill="rgb(244,156,29)"/><text x="273.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="270" y="212" width="4" height="15" fill="rgb(240,107,4)"/><text x="273.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="270" y="228" width="4" height="15" fill="rgb(211,51,8)"/><text x="273.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (1 samples, 0.15%)</title><rect x="272" y="244" width="2" height="15" fill="rgb(223,84,23)"/><text x="275.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="272" y="260" width="2" height="15" fill="rgb(233,78,51)"/><text x="275.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="272" y="276" width="2" height="15" fill="rgb(218,127,21)"/><text x="275.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="272" y="292" width="2" height="15" fill="rgb(245,157,3)"/><text x="275.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="272" y="308" width="2" height="15" fill="rgb(249,164,12)"/><text x="275.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="272" y="324" width="2" height="15" fill="rgb(247,158,6)"/><text x="275.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="272" y="340" width="2" height="15" fill="rgb(240,111,17)"/><text x="275.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="272" y="356" width="2" height="15" fill="rgb(249,204,40)"/><text x="275.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py:44) (1 samples, 0.15%)</title><rect x="272" y="372" width="2" height="15" fill="rgb(240,116,2)"/><text x="275.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="272" y="388" width="2" height="15" fill="rgb(228,61,13)"/><text x="275.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="272" y="404" width="2" height="15" fill="rgb(207,22,30)"/><text x="275.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="272" y="420" width="2" height="15" fill="rgb(223,88,53)"/><text x="275.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="272" y="436" width="2" height="15" fill="rgb(252,114,34)"/><text x="275.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="272" y="452" width="2" height="15" fill="rgb(226,45,9)"/><text x="275.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="272" y="468" width="2" height="15" fill="rgb(219,87,27)"/><text x="275.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="272" y="484" width="2" height="15" fill="rgb(205,104,53)"/><text x="275.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py:7520) (1 samples, 0.15%)</title><rect x="272" y="500" width="2" height="15" fill="rgb(251,78,38)"/><text x="275.00" y="510.50"></text></g><g><title>doc_note (numpy/ma/core.py:132) (1 samples, 0.15%)</title><rect x="272" y="516" width="2" height="15" fill="rgb(214,164,30)"/><text x="275.00" y="526.50"></text></g><g><title>split (re.py:213) (1 samples, 0.15%)</title><rect x="272" y="532" width="2" height="15" fill="rgb(216,0,52)"/><text x="275.00" y="542.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.15%)</title><rect x="272" y="548" width="2" height="15" fill="rgb(216,65,44)"/><text x="275.00" y="558.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.15%)</title><rect x="272" y="564" width="2" height="15" fill="rgb(211,153,29)"/><text x="275.00" y="574.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.15%)</title><rect x="272" y="580" width="2" height="15" fill="rgb(231,103,0)"/><text x="275.00" y="590.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.15%)</title><rect x="272" y="596" width="2" height="15" fill="rgb(222,222,32)"/><text x="275.00" y="606.50"></text></g><g><title>_compile (sre_compile.py:130) (1 samples, 0.15%)</title><rect x="272" y="612" width="2" height="15" fill="rgb(213,216,20)"/><text x="275.00" y="622.50"></text></g><g><title>_compile_charset (sre_compile.py:268) (1 samples, 0.15%)</title><rect x="272" y="628" width="2" height="15" fill="rgb(245,170,24)"/><text x="275.00" y="638.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.15%)</title><rect x="274" y="884" width="2" height="15" fill="rgb(208,134,33)"/><text x="277.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.15%)</title><rect x="274" y="900" width="2" height="15" fill="rgb(218,5,37)"/><text x="277.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.15%)</title><rect x="274" y="916" width="2" height="15" fill="rgb(206,51,20)"/><text x="277.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.15%)</title><rect x="274" y="932" width="2" height="15" fill="rgb(252,163,6)"/><text x="277.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.15%)</title><rect x="274" y="948" width="2" height="15" fill="rgb(247,27,0)"/><text x="277.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.31%)</title><rect x="274" y="852" width="4" height="15" fill="rgb(207,131,39)"/><text x="277.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.31%)</title><rect x="274" y="868" width="4" height="15" fill="rgb(206,133,14)"/><text x="277.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.15%)</title><rect x="276" y="884" width="2" height="15" fill="rgb(230,77,45)"/><text x="279.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.15%)</title><rect x="276" y="900" width="2" height="15" fill="rgb(205,194,1)"/><text x="279.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.15%)</title><rect x="276" y="916" width="2" height="15" fill="rgb(213,147,25)"/><text x="279.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.15%)</title><rect x="276" y="932" width="2" height="15" fill="rgb(228,220,15)"/><text x="279.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.15%)</title><rect x="276" y="948" width="2" height="15" fill="rgb(235,221,42)"/><text x="279.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.15%)</title><rect x="276" y="964" width="2" height="15" fill="rgb(248,107,14)"/><text x="279.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.15%)</title><rect x="276" y="980" width="2" height="15" fill="rgb(208,52,40)"/><text x="279.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.15%)</title><rect x="276" y="996" width="2" height="15" fill="rgb(241,65,37)"/><text x="279.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.15%)</title><rect x="276" y="1012" width="2" height="15" fill="rgb(233,192,12)"/><text x="279.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="276" y="1028" width="2" height="15" fill="rgb(212,176,43)"/><text x="279.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (3 samples, 0.46%)</title><rect x="274" y="148" width="5" height="15" fill="rgb(250,112,11)"/><text x="277.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="164" width="5" height="15" fill="rgb(227,22,13)"/><text x="277.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="274" y="180" width="5" height="15" fill="rgb(228,147,25)"/><text x="277.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="196" width="5" height="15" fill="rgb(219,133,25)"/><text x="277.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="212" width="5" height="15" fill="rgb(214,137,10)"/><text x="277.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="274" y="228" width="5" height="15" fill="rgb(241,28,7)"/><text x="277.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="274" y="244" width="5" height="15" fill="rgb(239,161,14)"/><text x="277.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="274" y="260" width="5" height="15" fill="rgb(238,85,19)"/><text x="277.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="276" width="5" height="15" fill="rgb(218,78,36)"/><text x="277.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.46%)</title><rect x="274" y="292" width="5" height="15" fill="rgb(248,35,24)"/><text x="277.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="308" width="5" height="15" fill="rgb(229,127,41)"/><text x="277.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="274" y="324" width="5" height="15" fill="rgb(207,32,2)"/><text x="277.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="274" y="340" width="5" height="15" fill="rgb(241,180,15)"/><text x="277.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="274" y="356" width="5" height="15" fill="rgb(222,126,5)"/><text x="277.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="372" width="5" height="15" fill="rgb(231,74,43)"/><text x="277.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.46%)</title><rect x="274" y="388" width="5" height="15" fill="rgb(221,157,17)"/><text x="277.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="404" width="5" height="15" fill="rgb(227,99,17)"/><text x="277.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="274" y="420" width="5" height="15" fill="rgb(253,162,43)"/><text x="277.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="274" y="436" width="5" height="15" fill="rgb(214,204,14)"/><text x="277.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="274" y="452" width="5" height="15" fill="rgb(251,1,29)"/><text x="277.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="468" width="5" height="15" fill="rgb(210,135,9)"/><text x="277.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.46%)</title><rect x="274" y="484" width="5" height="15" fill="rgb(237,133,30)"/><text x="277.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="500" width="5" height="15" fill="rgb(241,177,12)"/><text x="277.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="274" y="516" width="5" height="15" fill="rgb(245,155,44)"/><text x="277.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="274" y="532" width="5" height="15" fill="rgb(234,59,32)"/><text x="277.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="274" y="548" width="5" height="15" fill="rgb(239,154,45)"/><text x="277.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="564" width="5" height="15" fill="rgb(230,33,15)"/><text x="277.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.46%)</title><rect x="274" y="580" width="5" height="15" fill="rgb(213,53,54)"/><text x="277.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="596" width="5" height="15" fill="rgb(212,155,40)"/><text x="277.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="274" y="612" width="5" height="15" fill="rgb(210,76,7)"/><text x="277.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="628" width="5" height="15" fill="rgb(232,31,30)"/><text x="277.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="644" width="5" height="15" fill="rgb(214,45,8)"/><text x="277.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="274" y="660" width="5" height="15" fill="rgb(221,228,47)"/><text x="277.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="274" y="676" width="5" height="15" fill="rgb(250,145,25)"/><text x="277.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="274" y="692" width="5" height="15" fill="rgb(219,200,9)"/><text x="277.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="708" width="5" height="15" fill="rgb(232,172,23)"/><text x="277.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.46%)</title><rect x="274" y="724" width="5" height="15" fill="rgb(217,84,20)"/><text x="277.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="274" y="740" width="5" height="15" fill="rgb(221,57,41)"/><text x="277.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="274" y="756" width="5" height="15" fill="rgb(217,98,9)"/><text x="277.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="274" y="772" width="5" height="15" fill="rgb(223,47,32)"/><text x="277.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="274" y="788" width="5" height="15" fill="rgb(229,132,47)"/><text x="277.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="274" y="804" width="5" height="15" fill="rgb(215,17,8)"/><text x="277.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.46%)</title><rect x="274" y="820" width="5" height="15" fill="rgb(254,117,26)"/><text x="277.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.46%)</title><rect x="274" y="836" width="5" height="15" fill="rgb(236,140,0)"/><text x="277.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.15%)</title><rect x="278" y="852" width="1" height="15" fill="rgb(235,56,2)"/><text x="281.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.15%)</title><rect x="278" y="868" width="1" height="15" fill="rgb(217,66,12)"/><text x="281.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.15%)</title><rect x="278" y="884" width="1" height="15" fill="rgb(231,222,5)"/><text x="281.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.15%)</title><rect x="278" y="900" width="1" height="15" fill="rgb(241,224,34)"/><text x="281.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="278" y="916" width="1" height="15" fill="rgb(235,163,28)"/><text x="281.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="278" y="932" width="1" height="15" fill="rgb(221,64,35)"/><text x="281.00" y="942.50"></text></g><g><title>0x7fd736d7c237 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="278" y="948" width="1" height="15" fill="rgb(235,27,26)"/><text x="281.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.31%)</title><rect x="279" y="820" width="4" height="15" fill="rgb(247,39,53)"/><text x="282.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.31%)</title><rect x="279" y="836" width="4" height="15" fill="rgb(207,25,51)"/><text x="282.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="852" width="4" height="15" fill="rgb(223,178,0)"/><text x="282.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="868" width="4" height="15" fill="rgb(248,162,33)"/><text x="282.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="884" width="4" height="15" fill="rgb(211,92,3)"/><text x="282.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="900" width="4" height="15" fill="rgb(242,185,28)"/><text x="282.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="916" width="4" height="15" fill="rgb(222,144,23)"/><text x="282.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="932" width="4" height="15" fill="rgb(223,53,7)"/><text x="282.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.31%)</title><rect x="279" y="948" width="4" height="15" fill="rgb(244,3,12)"/><text x="282.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="964" width="4" height="15" fill="rgb(231,34,38)"/><text x="282.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="980" width="4" height="15" fill="rgb(242,14,34)"/><text x="282.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="996" width="4" height="15" fill="rgb(233,76,27)"/><text x="282.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1012" width="4" height="15" fill="rgb(205,124,46)"/><text x="282.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1028" width="4" height="15" fill="rgb(242,178,53)"/><text x="282.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.31%)</title><rect x="279" y="1044" width="4" height="15" fill="rgb(218,5,26)"/><text x="282.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1060" width="4" height="15" fill="rgb(217,70,34)"/><text x="282.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1076" width="4" height="15" fill="rgb(208,58,27)"/><text x="282.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1092" width="4" height="15" fill="rgb(228,4,10)"/><text x="282.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1108" width="4" height="15" fill="rgb(253,77,49)"/><text x="282.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1124" width="4" height="15" fill="rgb(238,171,5)"/><text x="282.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.31%)</title><rect x="279" y="1140" width="4" height="15" fill="rgb(238,160,3)"/><text x="282.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1156" width="4" height="15" fill="rgb(253,10,20)"/><text x="282.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1172" width="4" height="15" fill="rgb(248,217,44)"/><text x="282.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1188" width="4" height="15" fill="rgb(251,50,52)"/><text x="282.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1204" width="4" height="15" fill="rgb(230,217,35)"/><text x="282.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1220" width="4" height="15" fill="rgb(217,126,28)"/><text x="282.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.31%)</title><rect x="279" y="1236" width="4" height="15" fill="rgb(224,32,13)"/><text x="282.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1252" width="4" height="15" fill="rgb(246,78,20)"/><text x="282.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1268" width="4" height="15" fill="rgb(224,226,37)"/><text x="282.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1284" width="4" height="15" fill="rgb(213,150,30)"/><text x="282.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1300" width="4" height="15" fill="rgb(215,42,30)"/><text x="282.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1316" width="4" height="15" fill="rgb(242,187,10)"/><text x="282.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.31%)</title><rect x="279" y="1332" width="4" height="15" fill="rgb(207,219,35)"/><text x="282.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1348" width="4" height="15" fill="rgb(220,66,27)"/><text x="282.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="279" y="1364" width="4" height="15" fill="rgb(249,175,20)"/><text x="282.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1380" width="4" height="15" fill="rgb(208,72,17)"/><text x="282.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1396" width="4" height="15" fill="rgb(246,37,35)"/><text x="282.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1412" width="4" height="15" fill="rgb(241,174,30)"/><text x="282.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1428" width="4" height="15" fill="rgb(243,106,32)"/><text x="282.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1444" width="4" height="15" fill="rgb(242,71,21)"/><text x="282.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1460" width="4" height="15" fill="rgb(216,197,35)"/><text x="282.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (2 samples, 0.31%)</title><rect x="279" y="1476" width="4" height="15" fill="rgb(211,110,10)"/><text x="282.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1492" width="4" height="15" fill="rgb(236,225,2)"/><text x="282.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1508" width="4" height="15" fill="rgb(234,15,25)"/><text x="282.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1524" width="4" height="15" fill="rgb(224,3,3)"/><text x="282.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1540" width="4" height="15" fill="rgb(243,176,0)"/><text x="282.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1556" width="4" height="15" fill="rgb(239,33,2)"/><text x="282.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/_base.py:22) (2 samples, 0.31%)</title><rect x="279" y="1572" width="4" height="15" fill="rgb(210,48,53)"/><text x="282.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1588" width="4" height="15" fill="rgb(241,36,53)"/><text x="282.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1604" width="4" height="15" fill="rgb(241,140,2)"/><text x="282.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1620" width="4" height="15" fill="rgb(216,100,12)"/><text x="282.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="279" y="1636" width="4" height="15" fill="rgb(220,65,8)"/><text x="282.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="279" y="1652" width="4" height="15" fill="rgb(252,201,36)"/><text x="282.00" y="1662.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/__init__.py:8) (2 samples, 0.31%)</title><rect x="279" y="1668" width="4" height="15" fill="rgb(218,156,9)"/><text x="282.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="279" y="1684" width="4" height="15" fill="rgb(214,221,52)"/><text x="282.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="279" y="1700" width="4" height="15" fill="rgb(229,16,46)"/><text x="282.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="279" y="1716" width="4" height="15" fill="rgb(254,125,22)"/><text x="282.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="281" y="1732" width="2" height="15" fill="rgb(241,109,40)"/><text x="284.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="281" y="1748" width="2" height="15" fill="rgb(244,41,10)"/><text x="284.00" y="1758.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/_base.py:615) (1 samples, 0.15%)</title><rect x="281" y="1764" width="2" height="15" fill="rgb(242,80,45)"/><text x="284.00" y="1774.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.15%)</title><rect x="283" y="1236" width="2" height="15" fill="rgb(223,183,32)"/><text x="286.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1252" width="2" height="15" fill="rgb(207,55,31)"/><text x="286.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1268" width="2" height="15" fill="rgb(236,211,35)"/><text x="286.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1284" width="2" height="15" fill="rgb(247,141,30)"/><text x="286.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1300" width="2" height="15" fill="rgb(249,42,38)"/><text x="286.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1316" width="2" height="15" fill="rgb(216,69,53)"/><text x="286.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.15%)</title><rect x="283" y="1332" width="2" height="15" fill="rgb(253,225,45)"/><text x="286.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="283" y="1348" width="2" height="15" fill="rgb(234,139,12)"/><text x="286.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1364" width="2" height="15" fill="rgb(240,202,20)"/><text x="286.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1380" width="2" height="15" fill="rgb(245,194,33)"/><text x="286.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1396" width="2" height="15" fill="rgb(214,36,8)"/><text x="286.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1412" width="2" height="15" fill="rgb(235,90,16)"/><text x="286.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1428" width="2" height="15" fill="rgb(217,85,37)"/><text x="286.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1444" width="2" height="15" fill="rgb(235,63,48)"/><text x="286.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.15%)</title><rect x="283" y="1460" width="2" height="15" fill="rgb(243,113,50)"/><text x="286.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1476" width="2" height="15" fill="rgb(239,111,41)"/><text x="286.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1492" width="2" height="15" fill="rgb(237,191,23)"/><text x="286.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1508" width="2" height="15" fill="rgb(253,178,0)"/><text x="286.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1524" width="2" height="15" fill="rgb(218,54,19)"/><text x="286.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1540" width="2" height="15" fill="rgb(243,136,24)"/><text x="286.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.15%)</title><rect x="283" y="1556" width="2" height="15" fill="rgb(238,69,23)"/><text x="286.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1572" width="2" height="15" fill="rgb(248,113,49)"/><text x="286.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1588" width="2" height="15" fill="rgb(236,1,37)"/><text x="286.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1604" width="2" height="15" fill="rgb(244,200,13)"/><text x="286.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1620" width="2" height="15" fill="rgb(226,78,49)"/><text x="286.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1636" width="2" height="15" fill="rgb(224,33,14)"/><text x="286.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.15%)</title><rect x="283" y="1652" width="2" height="15" fill="rgb(244,164,34)"/><text x="286.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1668" width="2" height="15" fill="rgb(233,58,14)"/><text x="286.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1684" width="2" height="15" fill="rgb(230,13,2)"/><text x="286.00" y="1694.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1700" width="2" height="15" fill="rgb(210,202,53)"/><text x="286.00" y="1710.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1716" width="2" height="15" fill="rgb(245,124,11)"/><text x="286.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1732" width="2" height="15" fill="rgb(238,11,49)"/><text x="286.00" y="1742.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:4) (1 samples, 0.15%)</title><rect x="283" y="1748" width="2" height="15" fill="rgb(230,200,18)"/><text x="286.00" y="1758.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1764" width="2" height="15" fill="rgb(236,170,14)"/><text x="286.00" y="1774.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1780" width="2" height="15" fill="rgb(251,99,33)"/><text x="286.00" y="1790.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1796" width="2" height="15" fill="rgb(219,110,23)"/><text x="286.00" y="1806.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="283" y="1812" width="2" height="15" fill="rgb(254,96,53)"/><text x="286.00" y="1822.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="283" y="1828" width="2" height="15" fill="rgb(213,64,18)"/><text x="286.00" y="1838.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:118) (1 samples, 0.15%)</title><rect x="283" y="1844" width="2" height="15" fill="rgb(247,78,8)"/><text x="286.00" y="1854.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="283" y="1860" width="2" height="15" fill="rgb(227,45,23)"/><text x="286.00" y="1870.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="283" y="1876" width="2" height="15" fill="rgb(228,189,15)"/><text x="286.00" y="1886.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="283" y="1892" width="2" height="15" fill="rgb(223,32,13)"/><text x="286.00" y="1902.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="283" y="1908" width="2" height="15" fill="rgb(228,83,9)"/><text x="286.00" y="1918.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="283" y="1924" width="2" height="15" fill="rgb(247,75,29)"/><text x="286.00" y="1934.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="283" y="1940" width="2" height="15" fill="rgb(205,111,3)"/><text x="286.00" y="1950.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="283" y="1956" width="2" height="15" fill="rgb(238,6,50)"/><text x="286.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (4 samples, 0.62%)</title><rect x="279" y="532" width="8" height="15" fill="rgb(253,176,2)"/><text x="282.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.62%)</title><rect x="279" y="548" width="8" height="15" fill="rgb(210,127,16)"/><text x="282.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.62%)</title><rect x="279" y="564" width="8" height="15" fill="rgb(224,16,32)"/><text x="282.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.62%)</title><rect x="279" y="580" width="8" height="15" fill="rgb(238,193,48)"/><text x="282.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.62%)</title><rect x="279" y="596" width="8" height="15" fill="rgb(211,185,12)"/><text x="282.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.62%)</title><rect x="279" y="612" width="8" height="15" fill="rgb(227,66,19)"/><text x="282.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 0.62%)</title><rect x="279" y="628" width="8" height="15" fill="rgb(249,29,49)"/><text x="282.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.62%)</title><rect x="279" y="644" width="8" height="15" fill="rgb(205,227,44)"/><text x="282.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.62%)</title><rect x="279" y="660" width="8" height="15" fill="rgb(227,187,30)"/><text x="282.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.62%)</title><rect x="279" y="676" width="8" height="15" fill="rgb(222,70,33)"/><text x="282.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.62%)</title><rect x="279" y="692" width="8" height="15" fill="rgb(252,8,16)"/><text x="282.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.62%)</title><rect x="279" y="708" width="8" height="15" fill="rgb(207,178,32)"/><text x="282.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 0.62%)</title><rect x="279" y="724" width="8" height="15" fill="rgb(244,165,42)"/><text x="282.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.62%)</title><rect x="279" y="740" width="8" height="15" fill="rgb(231,98,0)"/><text x="282.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.62%)</title><rect x="279" y="756" width="8" height="15" fill="rgb(227,173,44)"/><text x="282.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.62%)</title><rect x="279" y="772" width="8" height="15" fill="rgb(250,96,0)"/><text x="282.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.62%)</title><rect x="279" y="788" width="8" height="15" fill="rgb(228,108,46)"/><text x="282.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.62%)</title><rect x="279" y="804" width="8" height="15" fill="rgb(233,65,13)"/><text x="282.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.31%)</title><rect x="283" y="820" width="4" height="15" fill="rgb(248,149,8)"/><text x="286.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="283" y="836" width="4" height="15" fill="rgb(222,199,12)"/><text x="286.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="283" y="852" width="4" height="15" fill="rgb(242,225,38)"/><text x="286.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="283" y="868" width="4" height="15" fill="rgb(209,219,49)"/><text x="286.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="283" y="884" width="4" height="15" fill="rgb(215,140,44)"/><text x="286.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="283" y="900" width="4" height="15" fill="rgb(212,76,31)"/><text x="286.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.31%)</title><rect x="283" y="916" width="4" height="15" fill="rgb(243,175,49)"/><text x="286.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="283" y="932" width="4" height="15" fill="rgb(219,11,15)"/><text x="286.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="283" y="948" width="4" height="15" fill="rgb(205,80,49)"/><text x="286.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="283" y="964" width="4" height="15" fill="rgb(243,198,31)"/><text x="286.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="283" y="980" width="4" height="15" fill="rgb(215,126,40)"/><text x="286.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="283" y="996" width="4" height="15" fill="rgb(254,191,52)"/><text x="286.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.31%)</title><rect x="283" y="1012" width="4" height="15" fill="rgb(227,201,19)"/><text x="286.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="283" y="1028" width="4" height="15" fill="rgb(213,203,14)"/><text x="286.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="283" y="1044" width="4" height="15" fill="rgb(235,218,26)"/><text x="286.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="283" y="1060" width="4" height="15" fill="rgb(251,47,37)"/><text x="286.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="283" y="1076" width="4" height="15" fill="rgb(245,47,38)"/><text x="286.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="283" y="1092" width="4" height="15" fill="rgb(221,27,12)"/><text x="286.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.31%)</title><rect x="283" y="1108" width="4" height="15" fill="rgb(221,75,1)"/><text x="286.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.31%)</title><rect x="283" y="1124" width="4" height="15" fill="rgb(250,176,48)"/><text x="286.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="283" y="1140" width="4" height="15" fill="rgb(210,212,25)"/><text x="286.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="283" y="1156" width="4" height="15" fill="rgb(207,184,26)"/><text x="286.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="283" y="1172" width="4" height="15" fill="rgb(245,125,18)"/><text x="286.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="283" y="1188" width="4" height="15" fill="rgb(242,80,20)"/><text x="286.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="283" y="1204" width="4" height="15" fill="rgb(206,79,8)"/><text x="286.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="283" y="1220" width="4" height="15" fill="rgb(208,151,25)"/><text x="286.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.15%)</title><rect x="285" y="1236" width="2" height="15" fill="rgb(212,157,36)"/><text x="288.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="285" y="1252" width="2" height="15" fill="rgb(235,37,3)"/><text x="288.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="285" y="1268" width="2" height="15" fill="rgb(221,210,44)"/><text x="288.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="285" y="1284" width="2" height="15" fill="rgb(210,48,31)"/><text x="288.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="285" y="1300" width="2" height="15" fill="rgb(233,56,12)"/><text x="288.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="285" y="1316" width="2" height="15" fill="rgb(218,167,35)"/><text x="288.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="285" y="1332" width="2" height="15" fill="rgb(245,77,36)"/><text x="288.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="285" y="1348" width="2" height="15" fill="rgb(249,206,24)"/><text x="288.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="285" y="1364" width="2" height="15" fill="rgb(236,135,31)"/><text x="288.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.15%)</title><rect x="287" y="964" width="2" height="15" fill="rgb(243,5,22)"/><text x="290.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="287" y="980" width="2" height="15" fill="rgb(237,143,7)"/><text x="290.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="287" y="996" width="2" height="15" fill="rgb(214,193,47)"/><text x="290.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="287" y="1012" width="2" height="15" fill="rgb(251,13,29)"/><text x="290.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="287" y="1028" width="2" height="15" fill="rgb(235,92,36)"/><text x="290.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="287" y="1044" width="2" height="15" fill="rgb(229,186,50)"/><text x="290.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.15%)</title><rect x="287" y="1060" width="2" height="15" fill="rgb(210,189,19)"/><text x="290.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="287" y="1076" width="2" height="15" fill="rgb(208,119,33)"/><text x="290.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="287" y="1092" width="2" height="15" fill="rgb(244,155,37)"/><text x="290.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="287" y="1108" width="2" height="15" fill="rgb(253,62,44)"/><text x="290.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="287" y="1124" width="2" height="15" fill="rgb(214,126,38)"/><text x="290.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="287" y="1140" width="2" height="15" fill="rgb(218,227,49)"/><text x="290.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:108) (1 samples, 0.15%)</title><rect x="287" y="1156" width="2" height="15" fill="rgb(252,226,23)"/><text x="290.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="287" y="1172" width="2" height="15" fill="rgb(206,205,40)"/><text x="290.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="287" y="1188" width="2" height="15" fill="rgb(251,210,42)"/><text x="290.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="287" y="1204" width="2" height="15" fill="rgb(215,120,4)"/><text x="290.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="287" y="1220" width="2" height="15" fill="rgb(210,130,50)"/><text x="290.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="287" y="1236" width="2" height="15" fill="rgb(205,79,46)"/><text x="290.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py:10) (1 samples, 0.15%)</title><rect x="287" y="1252" width="2" height="15" fill="rgb(219,153,49)"/><text x="290.00" y="1262.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="287" y="1268" width="2" height="15" fill="rgb(243,210,21)"/><text x="290.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="287" y="1284" width="2" height="15" fill="rgb(241,73,52)"/><text x="290.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="287" y="1300" width="2" height="15" fill="rgb(249,84,40)"/><text x="290.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="287" y="1316" width="2" height="15" fill="rgb(225,162,24)"/><text x="290.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="287" y="1332" width="2" height="15" fill="rgb(252,174,45)"/><text x="290.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="287" y="1348" width="2" height="15" fill="rgb(245,201,39)"/><text x="290.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="287" y="1364" width="2" height="15" fill="rgb(208,195,1)"/><text x="290.00" y="1374.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/text.py:187) (1 samples, 0.15%)</title><rect x="287" y="1380" width="2" height="15" fill="rgb(243,186,43)"/><text x="290.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.15%)</title><rect x="289" y="1092" width="1" height="15" fill="rgb(243,161,18)"/><text x="292.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="289" y="1108" width="1" height="15" fill="rgb(249,214,31)"/><text x="292.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="289" y="1124" width="1" height="15" fill="rgb(252,38,11)"/><text x="292.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="289" y="1140" width="1" height="15" fill="rgb(230,66,6)"/><text x="292.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="289" y="1156" width="1" height="15" fill="rgb(235,159,47)"/><text x="292.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="289" y="1172" width="1" height="15" fill="rgb(240,44,2)"/><text x="292.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="289" y="1188" width="1" height="15" fill="rgb(244,108,25)"/><text x="292.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="289" y="1204" width="1" height="15" fill="rgb(220,11,32)"/><text x="292.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.15%)</title><rect x="289" y="1220" width="1" height="15" fill="rgb(252,217,33)"/><text x="292.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="289" y="1236" width="1" height="15" fill="rgb(243,144,4)"/><text x="292.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="289" y="1252" width="1" height="15" fill="rgb(206,21,37)"/><text x="292.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="289" y="1268" width="1" height="15" fill="rgb(221,159,8)"/><text x="292.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="289" y="1284" width="1" height="15" fill="rgb(208,93,51)"/><text x="292.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="289" y="1300" width="1" height="15" fill="rgb(223,78,37)"/><text x="292.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.15%)</title><rect x="289" y="1316" width="1" height="15" fill="rgb(214,103,16)"/><text x="292.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.15%)</title><rect x="289" y="1332" width="1" height="15" fill="rgb(221,33,10)"/><text x="292.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.15%)</title><rect x="289" y="1348" width="1" height="15" fill="rgb(224,42,0)"/><text x="292.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.15%)</title><rect x="289" y="1364" width="1" height="15" fill="rgb(221,30,39)"/><text x="292.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.15%)</title><rect x="289" y="1380" width="1" height="15" fill="rgb(208,0,27)"/><text x="292.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.15%)</title><rect x="289" y="1396" width="1" height="15" fill="rgb(247,168,1)"/><text x="292.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="289" y="1412" width="1" height="15" fill="rgb(252,145,50)"/><text x="292.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:101) (1 samples, 0.15%)</title><rect x="289" y="1428" width="1" height="15" fill="rgb(226,76,17)"/><text x="292.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.15%)</title><rect x="289" y="1444" width="1" height="15" fill="rgb(244,63,18)"/><text x="292.00" y="1454.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (7 samples, 1.08%)</title><rect x="279" y="148" width="13" height="15" fill="rgb(206,205,24)"/><text x="282.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="279" y="164" width="13" height="15" fill="rgb(220,211,7)"/><text x="282.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.08%)</title><rect x="279" y="180" width="13" height="15" fill="rgb(239,42,26)"/><text x="282.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="279" y="196" width="13" height="15" fill="rgb(215,21,39)"/><text x="282.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="279" y="212" width="13" height="15" fill="rgb(226,115,44)"/><text x="282.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.08%)</title><rect x="279" y="228" width="13" height="15" fill="rgb(246,56,5)"/><text x="282.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.08%)</title><rect x="279" y="244" width="13" height="15" fill="rgb(254,11,15)"/><text x="282.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.08%)</title><rect x="279" y="260" width="13" height="15" fill="rgb(233,181,5)"/><text x="282.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="279" y="276" width="13" height="15" fill="rgb(247,38,47)"/><text x="282.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 1.08%)</title><rect x="279" y="292" width="13" height="15" fill="rgb(234,63,25)"/><text x="282.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="279" y="308" width="13" height="15" fill="rgb(247,48,53)"/><text x="282.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.08%)</title><rect x="279" y="324" width="13" height="15" fill="rgb(229,105,39)"/><text x="282.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="279" y="340" width="13" height="15" fill="rgb(227,182,32)"/><text x="282.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="279" y="356" width="13" height="15" fill="rgb(252,3,1)"/><text x="282.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.08%)</title><rect x="279" y="372" width="13" height="15" fill="rgb(243,46,29)"/><text x="282.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.08%)</title><rect x="279" y="388" width="13" height="15" fill="rgb(212,36,34)"/><text x="282.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.08%)</title><rect x="279" y="404" width="13" height="15" fill="rgb(239,220,22)"/><text x="282.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="279" y="420" width="13" height="15" fill="rgb(209,203,43)"/><text x="282.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 1.08%)</title><rect x="279" y="436" width="13" height="15" fill="rgb(254,62,25)"/><text x="282.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.08%)</title><rect x="279" y="452" width="13" height="15" fill="rgb(232,179,54)"/><text x="282.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.08%)</title><rect x="279" y="468" width="13" height="15" fill="rgb(242,80,38)"/><text x="282.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.08%)</title><rect x="279" y="484" width="13" height="15" fill="rgb(245,89,13)"/><text x="282.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.08%)</title><rect x="279" y="500" width="13" height="15" fill="rgb(206,31,31)"/><text x="282.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.08%)</title><rect x="279" y="516" width="13" height="15" fill="rgb(245,43,12)"/><text x="282.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.46%)</title><rect x="287" y="532" width="5" height="15" fill="rgb(234,25,47)"/><text x="290.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="287" y="548" width="5" height="15" fill="rgb(230,51,42)"/><text x="290.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="287" y="564" width="5" height="15" fill="rgb(209,224,48)"/><text x="290.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="287" y="580" width="5" height="15" fill="rgb(230,127,37)"/><text x="290.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="287" y="596" width="5" height="15" fill="rgb(237,113,23)"/><text x="290.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="287" y="612" width="5" height="15" fill="rgb(210,172,53)"/><text x="290.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.46%)</title><rect x="287" y="628" width="5" height="15" fill="rgb(239,171,3)"/><text x="290.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="287" y="644" width="5" height="15" fill="rgb(217,91,30)"/><text x="290.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="287" y="660" width="5" height="15" fill="rgb(216,193,15)"/><text x="290.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="287" y="676" width="5" height="15" fill="rgb(247,114,41)"/><text x="290.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="287" y="692" width="5" height="15" fill="rgb(209,54,44)"/><text x="290.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="287" y="708" width="5" height="15" fill="rgb(230,93,41)"/><text x="290.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.46%)</title><rect x="287" y="724" width="5" height="15" fill="rgb(243,98,54)"/><text x="290.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="287" y="740" width="5" height="15" fill="rgb(254,93,54)"/><text x="290.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.46%)</title><rect x="287" y="756" width="5" height="15" fill="rgb(250,190,8)"/><text x="290.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="287" y="772" width="5" height="15" fill="rgb(208,98,26)"/><text x="290.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="287" y="788" width="5" height="15" fill="rgb(221,181,8)"/><text x="290.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="287" y="804" width="5" height="15" fill="rgb(205,45,43)"/><text x="290.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="287" y="820" width="5" height="15" fill="rgb(247,196,12)"/><text x="290.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="287" y="836" width="5" height="15" fill="rgb(247,107,33)"/><text x="290.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="287" y="852" width="5" height="15" fill="rgb(251,13,34)"/><text x="290.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.46%)</title><rect x="287" y="868" width="5" height="15" fill="rgb(217,141,13)"/><text x="290.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.46%)</title><rect x="287" y="884" width="5" height="15" fill="rgb(229,123,28)"/><text x="290.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.46%)</title><rect x="287" y="900" width="5" height="15" fill="rgb(250,74,5)"/><text x="290.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.46%)</title><rect x="287" y="916" width="5" height="15" fill="rgb(208,56,43)"/><text x="290.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.46%)</title><rect x="287" y="932" width="5" height="15" fill="rgb(244,219,45)"/><text x="290.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.46%)</title><rect x="287" y="948" width="5" height="15" fill="rgb(253,89,28)"/><text x="290.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.31%)</title><rect x="289" y="964" width="3" height="15" fill="rgb(213,175,49)"/><text x="292.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.31%)</title><rect x="289" y="980" width="3" height="15" fill="rgb(224,114,20)"/><text x="292.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="289" y="996" width="3" height="15" fill="rgb(229,49,25)"/><text x="292.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="289" y="1012" width="3" height="15" fill="rgb(239,21,30)"/><text x="292.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="289" y="1028" width="3" height="15" fill="rgb(235,64,41)"/><text x="292.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="289" y="1044" width="3" height="15" fill="rgb(241,24,24)"/><text x="292.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="289" y="1060" width="3" height="15" fill="rgb(222,173,12)"/><text x="292.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="289" y="1076" width="3" height="15" fill="rgb(234,54,13)"/><text x="292.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:23) (1 samples, 0.15%)</title><rect x="290" y="1092" width="2" height="15" fill="rgb(232,26,17)"/><text x="293.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="290" y="1108" width="2" height="15" fill="rgb(215,172,34)"/><text x="293.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="290" y="1124" width="2" height="15" fill="rgb(228,204,16)"/><text x="293.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="290" y="1140" width="2" height="15" fill="rgb(226,204,29)"/><text x="293.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="290" y="1156" width="2" height="15" fill="rgb(214,101,31)"/><text x="293.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="290" y="1172" width="2" height="15" fill="rgb(210,4,49)"/><text x="293.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.15%)</title><rect x="290" y="1188" width="2" height="15" fill="rgb(224,55,30)"/><text x="293.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.15%)</title><rect x="290" y="1204" width="2" height="15" fill="rgb(247,1,34)"/><text x="293.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.15%)</title><rect x="290" y="1220" width="2" height="15" fill="rgb(226,48,20)"/><text x="293.00" y="1230.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.15%)</title><rect x="292" y="900" width="2" height="15" fill="rgb(206,53,43)"/><text x="295.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="916" width="2" height="15" fill="rgb(237,181,23)"/><text x="295.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.15%)</title><rect x="292" y="932" width="2" height="15" fill="rgb(229,165,2)"/><text x="295.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="948" width="2" height="15" fill="rgb(253,129,9)"/><text x="295.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="964" width="2" height="15" fill="rgb(236,92,7)"/><text x="295.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="292" y="980" width="2" height="15" fill="rgb(209,55,20)"/><text x="295.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="292" y="996" width="2" height="15" fill="rgb(208,134,27)"/><text x="295.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="292" y="1012" width="2" height="15" fill="rgb(209,119,36)"/><text x="295.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1028" width="2" height="15" fill="rgb(246,31,15)"/><text x="295.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.15%)</title><rect x="292" y="1044" width="2" height="15" fill="rgb(227,84,23)"/><text x="295.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="292" y="1060" width="2" height="15" fill="rgb(209,198,34)"/><text x="295.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1076" width="2" height="15" fill="rgb(205,78,10)"/><text x="295.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="1092" width="2" height="15" fill="rgb(237,85,9)"/><text x="295.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="292" y="1108" width="2" height="15" fill="rgb(234,156,47)"/><text x="295.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="292" y="1124" width="2" height="15" fill="rgb(231,149,12)"/><text x="295.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="292" y="1140" width="2" height="15" fill="rgb(247,8,33)"/><text x="295.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1156" width="2" height="15" fill="rgb(248,216,54)"/><text x="295.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.15%)</title><rect x="292" y="1172" width="2" height="15" fill="rgb(230,94,13)"/><text x="295.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="292" y="1188" width="2" height="15" fill="rgb(206,105,29)"/><text x="295.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1204" width="2" height="15" fill="rgb(250,144,54)"/><text x="295.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="1220" width="2" height="15" fill="rgb(228,227,11)"/><text x="295.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="292" y="1236" width="2" height="15" fill="rgb(216,10,27)"/><text x="295.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="292" y="1252" width="2" height="15" fill="rgb(249,88,2)"/><text x="295.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="292" y="1268" width="2" height="15" fill="rgb(205,133,43)"/><text x="295.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1284" width="2" height="15" fill="rgb(218,110,12)"/><text x="295.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.15%)</title><rect x="292" y="1300" width="2" height="15" fill="rgb(206,114,12)"/><text x="295.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="1316" width="2" height="15" fill="rgb(229,144,5)"/><text x="295.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="292" y="1332" width="2" height="15" fill="rgb(234,120,53)"/><text x="295.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="292" y="1348" width="2" height="15" fill="rgb(238,200,23)"/><text x="295.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="292" y="1364" width="2" height="15" fill="rgb(218,52,4)"/><text x="295.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1380" width="2" height="15" fill="rgb(242,107,24)"/><text x="295.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (1 samples, 0.15%)</title><rect x="292" y="1396" width="2" height="15" fill="rgb(212,64,54)"/><text x="295.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.15%)</title><rect x="292" y="1412" width="2" height="15" fill="rgb(228,137,32)"/><text x="295.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1428" width="2" height="15" fill="rgb(242,70,23)"/><text x="295.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="1444" width="2" height="15" fill="rgb(239,96,30)"/><text x="295.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="292" y="1460" width="2" height="15" fill="rgb(244,131,49)"/><text x="295.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="292" y="1476" width="2" height="15" fill="rgb(228,64,44)"/><text x="295.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="292" y="1492" width="2" height="15" fill="rgb(237,124,32)"/><text x="295.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1508" width="2" height="15" fill="rgb(249,167,32)"/><text x="295.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/rsa.py:18) (1 samples, 0.15%)</title><rect x="292" y="1524" width="2" height="15" fill="rgb(222,18,35)"/><text x="295.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="292" y="1540" width="2" height="15" fill="rgb(222,136,13)"/><text x="295.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="292" y="1556" width="2" height="15" fill="rgb(247,23,16)"/><text x="295.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="292" y="1572" width="2" height="15" fill="rgb(240,12,3)"/><text x="295.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="292" y="1588" width="2" height="15" fill="rgb(236,26,14)"/><text x="295.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="292" y="1604" width="2" height="15" fill="rgb(209,97,46)"/><text x="295.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/interfaces.py:65) (1 samples, 0.15%)</title><rect x="292" y="1620" width="2" height="15" fill="rgb(250,71,32)"/><text x="295.00" y="1630.50"></text></g><g><title>wrapper (six.py:860) (1 samples, 0.15%)</title><rect x="292" y="1636" width="2" height="15" fill="rgb(234,159,17)"/><text x="295.00" y="1646.50"></text></g><g><title>__new__ (abc.py:127) (1 samples, 0.15%)</title><rect x="292" y="1652" width="2" height="15" fill="rgb(231,117,4)"/><text x="295.00" y="1662.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="292" y="1668" width="2" height="15" fill="rgb(231,29,39)"/><text x="295.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:4) (14 samples, 2.16%)</title><rect x="270" y="52" width="26" height="15" fill="rgb(243,91,1)"/><text x="273.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 2.16%)</title><rect x="270" y="68" width="26" height="15" fill="rgb(219,54,33)"/><text x="273.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 2.16%)</title><rect x="270" y="84" width="26" height="15" fill="rgb(233,85,1)"/><text x="273.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 2.16%)</title><rect x="270" y="100" width="26" height="15" fill="rgb(213,60,6)"/><text x="273.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 2.16%)</title><rect x="270" y="116" width="26" height="15" fill="rgb(217,132,22)"/><text x="273.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 2.16%)</title><rect x="270" y="132" width="26" height="15" fill="rgb(236,174,50)"/><text x="273.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (2 samples, 0.31%)</title><rect x="292" y="148" width="4" height="15" fill="rgb(207,189,16)"/><text x="295.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="164" width="4" height="15" fill="rgb(228,79,17)"/><text x="295.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="180" width="4" height="15" fill="rgb(236,24,38)"/><text x="295.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="196" width="4" height="15" fill="rgb(205,59,26)"/><text x="295.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="212" width="4" height="15" fill="rgb(205,176,17)"/><text x="295.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="228" width="4" height="15" fill="rgb(221,10,38)"/><text x="295.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.31%)</title><rect x="292" y="244" width="4" height="15" fill="rgb(222,13,54)"/><text x="295.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="260" width="4" height="15" fill="rgb(225,69,27)"/><text x="295.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="276" width="4" height="15" fill="rgb(213,112,52)"/><text x="295.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="292" width="4" height="15" fill="rgb(213,184,36)"/><text x="295.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="308" width="4" height="15" fill="rgb(241,121,39)"/><text x="295.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="324" width="4" height="15" fill="rgb(247,215,48)"/><text x="295.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.31%)</title><rect x="292" y="340" width="4" height="15" fill="rgb(254,221,21)"/><text x="295.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="356" width="4" height="15" fill="rgb(216,3,0)"/><text x="295.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.31%)</title><rect x="292" y="372" width="4" height="15" fill="rgb(251,56,45)"/><text x="295.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="388" width="4" height="15" fill="rgb(228,3,32)"/><text x="295.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="404" width="4" height="15" fill="rgb(239,185,43)"/><text x="295.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="420" width="4" height="15" fill="rgb(228,134,33)"/><text x="295.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="436" width="4" height="15" fill="rgb(212,107,51)"/><text x="295.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="452" width="4" height="15" fill="rgb(215,153,5)"/><text x="295.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="468" width="4" height="15" fill="rgb(221,142,11)"/><text x="295.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.31%)</title><rect x="292" y="484" width="4" height="15" fill="rgb(254,140,15)"/><text x="295.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="500" width="4" height="15" fill="rgb(232,4,16)"/><text x="295.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="516" width="4" height="15" fill="rgb(232,5,20)"/><text x="295.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="532" width="4" height="15" fill="rgb(220,170,48)"/><text x="295.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="548" width="4" height="15" fill="rgb(226,121,45)"/><text x="295.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="564" width="4" height="15" fill="rgb(206,163,7)"/><text x="295.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.31%)</title><rect x="292" y="580" width="4" height="15" fill="rgb(226,118,16)"/><text x="295.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="596" width="4" height="15" fill="rgb(227,39,49)"/><text x="295.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="612" width="4" height="15" fill="rgb(232,166,43)"/><text x="295.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="628" width="4" height="15" fill="rgb(218,49,1)"/><text x="295.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="644" width="4" height="15" fill="rgb(217,62,28)"/><text x="295.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="660" width="4" height="15" fill="rgb(224,85,22)"/><text x="295.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.31%)</title><rect x="292" y="676" width="4" height="15" fill="rgb(248,17,6)"/><text x="295.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="692" width="4" height="15" fill="rgb(216,56,6)"/><text x="295.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="708" width="4" height="15" fill="rgb(214,198,5)"/><text x="295.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="724" width="4" height="15" fill="rgb(225,8,8)"/><text x="295.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="740" width="4" height="15" fill="rgb(239,154,48)"/><text x="295.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="756" width="4" height="15" fill="rgb(227,154,19)"/><text x="295.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 0.31%)</title><rect x="292" y="772" width="4" height="15" fill="rgb(244,60,46)"/><text x="295.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.31%)</title><rect x="292" y="788" width="4" height="15" fill="rgb(210,36,36)"/><text x="295.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="804" width="4" height="15" fill="rgb(208,113,47)"/><text x="295.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.31%)</title><rect x="292" y="820" width="4" height="15" fill="rgb(239,71,2)"/><text x="295.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.31%)</title><rect x="292" y="836" width="4" height="15" fill="rgb(253,101,30)"/><text x="295.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.31%)</title><rect x="292" y="852" width="4" height="15" fill="rgb(209,11,50)"/><text x="295.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.31%)</title><rect x="292" y="868" width="4" height="15" fill="rgb(229,120,2)"/><text x="295.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.31%)</title><rect x="292" y="884" width="4" height="15" fill="rgb(245,80,33)"/><text x="295.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.15%)</title><rect x="294" y="900" width="2" height="15" fill="rgb(254,195,0)"/><text x="297.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="294" y="916" width="2" height="15" fill="rgb(254,136,27)"/><text x="297.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="294" y="932" width="2" height="15" fill="rgb(240,212,51)"/><text x="297.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="294" y="948" width="2" height="15" fill="rgb(209,216,33)"/><text x="297.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="294" y="964" width="2" height="15" fill="rgb(215,204,23)"/><text x="297.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="294" y="980" width="2" height="15" fill="rgb(205,211,41)"/><text x="297.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.15%)</title><rect x="294" y="996" width="2" height="15" fill="rgb(231,87,50)"/><text x="297.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.15%)</title><rect x="294" y="1012" width="2" height="15" fill="rgb(250,90,13)"/><text x="297.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.15%)</title><rect x="294" y="1028" width="2" height="15" fill="rgb(210,13,31)"/><text x="297.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.15%)</title><rect x="294" y="1044" width="2" height="15" fill="rgb(226,124,10)"/><text x="297.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.15%)</title><rect x="294" y="1060" width="2" height="15" fill="rgb(219,77,15)"/><text x="297.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.15%)</title><rect x="294" y="1076" width="2" height="15" fill="rgb(237,85,42)"/><text x="297.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:112) (1 samples, 0.15%)</title><rect x="294" y="1092" width="2" height="15" fill="rgb(214,103,11)"/><text x="297.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.15%)</title><rect x="294" y="1108" width="2" height="15" fill="rgb(252,84,40)"/><text x="297.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py:107) (1 samples, 0.15%)</title><rect x="294" y="1124" width="2" height="15" fill="rgb(224,187,0)"/><text x="297.00" y="1134.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.15%)</title><rect x="294" y="1140" width="2" height="15" fill="rgb(242,16,42)"/><text x="297.00" y="1150.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.15%)</title><rect x="294" y="1156" width="2" height="15" fill="rgb(210,148,21)"/><text x="297.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.15%)</title><rect x="294" y="1172" width="2" height="15" fill="rgb(221,70,52)"/><text x="297.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.15%)</title><rect x="294" y="1188" width="2" height="15" fill="rgb(235,153,28)"/><text x="297.00" y="1198.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.15%)</title><rect x="294" y="1204" width="2" height="15" fill="rgb(215,177,47)"/><text x="297.00" y="1214.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:18) (1 samples, 0.15%)</title><rect x="296" y="100" width="2" height="15" fill="rgb(211,126,26)"/><text x="299.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.15%)</title><rect x="296" y="116" width="2" height="15" fill="rgb(234,38,41)"/><text x="299.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.15%)</title><rect x="296" y="132" width="2" height="15" fill="rgb(254,21,48)"/><text x="299.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.15%)</title><rect x="296" y="148" width="2" height="15" fill="rgb(254,113,44)"/><text x="299.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.15%)</title><rect x="296" y="164" width="2" height="15" fill="rgb(250,0,39)"/><text x="299.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.15%)</title><rect x="296" y="180" width="2" height="15" fill="rgb(242,196,34)"/><text x="299.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.15%)</title><rect x="296" y="196" width="2" height="15" fill="rgb(235,1,5)"/><text x="299.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.15%)</title><rect x="296" y="212" width="2" height="15" fill="rgb(252,160,27)"/><text x="299.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.15%)</title><rect x="296" y="228" width="2" height="15" fill="rgb(205,115,44)"/><text x="299.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.15%)</title><rect x="296" y="244" width="2" height="15" fill="rgb(254,93,35)"/><text x="299.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.15%)</title><rect x="296" y="260" width="2" height="15" fill="rgb(226,22,1)"/><text x="299.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="296" y="276" width="2" height="15" fill="rgb(217,150,9)"/><text x="299.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.31%)</title><rect x="307" y="212" width="3" height="15" fill="rgb(213,211,13)"/><text x="310.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.15%)</title><rect x="309" y="228" width="1" height="15" fill="rgb(228,137,10)"/><text x="312.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.15%)</title><rect x="309" y="244" width="1" height="15" fill="rgb(241,28,47)"/><text x="312.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.15%)</title><rect x="309" y="260" width="1" height="15" fill="rgb(251,122,46)"/><text x="312.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.15%)</title><rect x="309" y="276" width="1" height="15" fill="rgb(220,145,18)"/><text x="312.00" y="286.50"></text></g><g><title>0x7fd736d5cd94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="309" y="292" width="1" height="15" fill="rgb(205,170,38)"/><text x="312.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.46%)</title><rect x="307" y="196" width="5" height="15" fill="rgb(245,49,24)"/><text x="310.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.15%)</title><rect x="310" y="212" width="2" height="15" fill="rgb(237,167,37)"/><text x="313.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.15%)</title><rect x="310" y="228" width="2" height="15" fill="rgb(230,126,13)"/><text x="313.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.15%)</title><rect x="316" y="260" width="2" height="15" fill="rgb(225,223,40)"/><text x="319.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.15%)</title><rect x="316" y="276" width="2" height="15" fill="rgb(205,113,50)"/><text x="319.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.15%)</title><rect x="316" y="292" width="2" height="15" fill="rgb(233,27,2)"/><text x="319.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.15%)</title><rect x="316" y="308" width="2" height="15" fill="rgb(252,200,19)"/><text x="319.00" y="318.50"></text></g><g><title>0x7fd735f5e380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="316" y="324" width="2" height="15" fill="rgb(232,113,9)"/><text x="319.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.15%)</title><rect x="318" y="260" width="2" height="15" fill="rgb(208,163,13)"/><text x="321.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.15%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(238,203,24)"/><text x="321.00" y="286.50"></text></g><g><title>0x7fd736d52757 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(234,226,29)"/><text x="321.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.15%)</title><rect x="320" y="324" width="1" height="15" fill="rgb(218,124,30)"/><text x="323.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.15%)</title><rect x="321" y="356" width="2" height="15" fill="rgb(243,90,48)"/><text x="324.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.15%)</title><rect x="321" y="372" width="2" height="15" fill="rgb(205,35,7)"/><text x="324.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.15%)</title><rect x="321" y="388" width="2" height="15" fill="rgb(224,80,44)"/><text x="324.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="321" y="404" width="2" height="15" fill="rgb(252,58,9)"/><text x="324.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.15%)</title><rect x="321" y="420" width="2" height="15" fill="rgb(240,216,53)"/><text x="324.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.15%)</title><rect x="321" y="436" width="2" height="15" fill="rgb(234,228,21)"/><text x="324.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.15%)</title><rect x="323" y="372" width="2" height="15" fill="rgb(213,41,52)"/><text x="326.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.15%)</title><rect x="325" y="404" width="2" height="15" fill="rgb(218,30,25)"/><text x="328.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3884) (1 samples, 0.15%)</title><rect x="325" y="420" width="2" height="15" fill="rgb(208,2,8)"/><text x="328.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.15%)</title><rect x="327" y="404" width="2" height="15" fill="rgb(240,90,50)"/><text x="330.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 0.62%)</title><rect x="323" y="356" width="7" height="15" fill="rgb(237,78,39)"/><text x="326.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.46%)</title><rect x="325" y="372" width="5" height="15" fill="rgb(250,224,20)"/><text x="328.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 0.46%)</title><rect x="325" y="388" width="5" height="15" fill="rgb(232,0,34)"/><text x="328.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.15%)</title><rect x="329" y="404" width="1" height="15" fill="rgb(208,137,31)"/><text x="332.00" y="414.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="329" y="420" width="1" height="15" fill="rgb(238,26,23)"/><text x="332.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.15%)</title><rect x="330" y="356" width="2" height="15" fill="rgb(222,56,22)"/><text x="333.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.15%)</title><rect x="330" y="372" width="2" height="15" fill="rgb(232,126,47)"/><text x="333.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.15%)</title><rect x="330" y="388" width="2" height="15" fill="rgb(215,57,16)"/><text x="333.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.15%)</title><rect x="330" y="404" width="2" height="15" fill="rgb(227,162,22)"/><text x="333.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.15%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(215,34,34)"/><text x="335.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.31%)</title><rect x="334" y="388" width="4" height="15" fill="rgb(209,27,2)"/><text x="337.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.31%)</title><rect x="338" y="388" width="3" height="15" fill="rgb(242,76,42)"/><text x="341.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.15%)</title><rect x="340" y="404" width="1" height="15" fill="rgb(254,29,14)"/><text x="343.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.15%)</title><rect x="341" y="388" width="2" height="15" fill="rgb(220,5,40)"/><text x="344.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.31%)</title><rect x="343" y="388" width="4" height="15" fill="rgb(219,192,25)"/><text x="346.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 2.63%)</title><rect x="320" y="260" width="31" height="15" fill="rgb(252,133,4)"/><text x="323.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 2.63%)</title><rect x="320" y="276" width="31" height="15" fill="rgb(239,101,45)"/><text x="323.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 2.63%)</title><rect x="320" y="292" width="31" height="15" fill="rgb(238,149,52)"/><text x="323.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 2.63%)</title><rect x="320" y="308" width="31" height="15" fill="rgb(224,139,5)"/><text x="323.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 2.47%)</title><rect x="321" y="324" width="30" height="15" fill="rgb(252,129,34)"/><text x="324.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (16 samples, 2.47%)</title><rect x="321" y="340" width="30" height="15" fill="rgb(214,32,40)"/><text x="324.00" y="350.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.55%)</title><rect x="332" y="356" width="19" height="15" fill="rgb(206,50,42)"/><text x="335.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.55%)</title><rect x="332" y="372" width="19" height="15" fill="rgb(220,93,22)"/><text x="335.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (2 samples, 0.31%)</title><rect x="347" y="388" width="4" height="15" fill="rgb(234,223,3)"/><text x="350.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.15%)</title><rect x="351" y="276" width="1" height="15" fill="rgb(216,9,7)"/><text x="354.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.15%)</title><rect x="351" y="292" width="1" height="15" fill="rgb(248,127,51)"/><text x="354.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.15%)</title><rect x="352" y="276" width="2" height="15" fill="rgb(213,23,39)"/><text x="355.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.15%)</title><rect x="352" y="292" width="2" height="15" fill="rgb(221,92,13)"/><text x="355.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.15%)</title><rect x="352" y="308" width="2" height="15" fill="rgb(230,80,8)"/><text x="355.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="352" y="324" width="2" height="15" fill="rgb(216,34,40)"/><text x="355.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="352" y="340" width="2" height="15" fill="rgb(241,43,25)"/><text x="355.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="352" y="356" width="2" height="15" fill="rgb(206,76,18)"/><text x="355.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="352" y="372" width="2" height="15" fill="rgb(209,130,7)"/><text x="355.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="352" y="388" width="2" height="15" fill="rgb(231,113,47)"/><text x="355.00" y="398.50"></text></g><g><title>0x7fd736d3e6df (libc-2.29.so) (1 samples, 0.15%)</title><rect x="352" y="404" width="2" height="15" fill="rgb(223,125,22)"/><text x="355.00" y="414.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (23 samples, 3.55%)</title><rect x="314" y="244" width="42" height="15" fill="rgb(226,137,50)"/><text x="317.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.46%)</title><rect x="351" y="260" width="5" height="15" fill="rgb(209,52,16)"/><text x="354.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.15%)</title><rect x="354" y="276" width="2" height="15" fill="rgb(253,120,23)"/><text x="357.00" y="286.50"></text></g><g><title>0x7fd735f5e7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="354" y="292" width="2" height="15" fill="rgb(237,8,38)"/><text x="357.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.15%)</title><rect x="356" y="276" width="2" height="15" fill="rgb(206,121,40)"/><text x="359.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.15%)</title><rect x="358" y="372" width="2" height="15" fill="rgb(240,54,23)"/><text x="361.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.31%)</title><rect x="358" y="308" width="3" height="15" fill="rgb(235,42,23)"/><text x="361.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.31%)</title><rect x="358" y="324" width="3" height="15" fill="rgb(215,44,36)"/><text x="361.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.31%)</title><rect x="358" y="340" width="3" height="15" fill="rgb(218,113,11)"/><text x="361.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.31%)</title><rect x="358" y="356" width="3" height="15" fill="rgb(241,95,0)"/><text x="361.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.15%)</title><rect x="360" y="372" width="1" height="15" fill="rgb(231,88,19)"/><text x="363.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (28 samples, 4.33%)</title><rect x="312" y="196" width="51" height="15" fill="rgb(207,128,51)"/><text x="315.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (28 samples, 4.33%)</title><rect x="312" y="212" width="51" height="15" fill="rgb(236,46,20)"/><text x="315.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (28 samples, 4.33%)</title><rect x="312" y="228" width="51" height="15" fill="rgb(250,143,37)"/><text x="315.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (4 samples, 0.62%)</title><rect x="356" y="244" width="7" height="15" fill="rgb(221,52,19)"/><text x="359.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.62%)</title><rect x="356" y="260" width="7" height="15" fill="rgb(253,182,0)"/><text x="359.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.46%)</title><rect x="358" y="276" width="5" height="15" fill="rgb(228,29,31)"/><text x="361.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.46%)</title><rect x="358" y="292" width="5" height="15" fill="rgb(250,148,31)"/><text x="361.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.15%)</title><rect x="361" y="308" width="2" height="15" fill="rgb(230,167,24)"/><text x="364.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.15%)</title><rect x="361" y="324" width="2" height="15" fill="rgb(220,50,45)"/><text x="364.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (1 samples, 0.15%)</title><rect x="361" y="340" width="2" height="15" fill="rgb(238,9,10)"/><text x="364.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:603) (1 samples, 0.15%)</title><rect x="361" y="356" width="2" height="15" fill="rgb(243,121,17)"/><text x="364.00" y="366.50"></text></g><g><title>_mm_div_ps (xmmintrin.h:175) (1 samples, 0.15%)</title><rect x="361" y="372" width="2" height="15" fill="rgb(229,147,22)"/><text x="364.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.15%)</title><rect x="363" y="244" width="2" height="15" fill="rgb(241,192,17)"/><text x="366.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.15%)</title><rect x="367" y="260" width="2" height="15" fill="rgb(236,96,35)"/><text x="370.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:792) (1 samples, 0.15%)</title><rect x="367" y="276" width="2" height="15" fill="rgb(208,136,10)"/><text x="370.00" y="286.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.15%)</title><rect x="369" y="324" width="2" height="15" fill="rgb(240,40,18)"/><text x="372.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.15%)</title><rect x="369" y="340" width="2" height="15" fill="rgb(224,185,40)"/><text x="372.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.15%)</title><rect x="369" y="356" width="2" height="15" fill="rgb(244,162,51)"/><text x="372.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="369" y="372" width="2" height="15" fill="rgb(224,2,6)"/><text x="372.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:123) (1 samples, 0.15%)</title><rect x="369" y="388" width="2" height="15" fill="rgb(248,129,32)"/><text x="372.00" y="398.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.15%)</title><rect x="371" y="324" width="1" height="15" fill="rgb(248,71,44)"/><text x="374.00" y="334.50"></text></g><g><title>0x7fd736d5d103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="371" y="340" width="1" height="15" fill="rgb(236,144,39)"/><text x="374.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 2.78%)</title><rect x="369" y="276" width="33" height="15" fill="rgb(234,34,26)"/><text x="372.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (18 samples, 2.78%)</title><rect x="369" y="292" width="33" height="15" fill="rgb(231,112,4)"/><text x="372.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (18 samples, 2.78%)</title><rect x="369" y="308" width="33" height="15" fill="rgb(212,160,17)"/><text x="372.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (16 samples, 2.47%)</title><rect x="372" y="324" width="30" height="15" fill="rgb(235,14,21)"/><text x="375.00" y="334.50">cb..</text></g><g><title>gemm (cblasfuncs.c:40) (16 samples, 2.47%)</title><rect x="372" y="340" width="30" height="15" fill="rgb(211,73,47)"/><text x="375.00" y="350.50">ge..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.47%)</title><rect x="372" y="356" width="30" height="15" fill="rgb(224,79,6)"/><text x="375.00" y="366.50">cb..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.47%)</title><rect x="372" y="372" width="30" height="15" fill="rgb(229,226,29)"/><text x="375.00" y="382.50">sg..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.47%)</title><rect x="372" y="388" width="30" height="15" fill="rgb(241,15,52)"/><text x="375.00" y="398.50">sg..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (49 samples, 7.57%)</title><rect x="363" y="228" width="90" height="15" fill="rgb(230,101,31)"/><text x="366.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (48 samples, 7.42%)</title><rect x="365" y="244" width="88" height="15" fill="rgb(247,23,21)"/><text x="368.00" y="254.50">numpy_dot_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (46 samples, 7.11%)</title><rect x="369" y="260" width="84" height="15" fill="rgb(251,199,4)"/><text x="372.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 4.33%)</title><rect x="402" y="276" width="51" height="15" fill="rgb(216,15,37)"/><text x="405.00" y="286.50">sgemm..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.15%)</title><rect x="455" y="308" width="1" height="15" fill="rgb(244,8,32)"/><text x="458.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.15%)</title><rect x="455" y="324" width="1" height="15" fill="rgb(226,31,37)"/><text x="458.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.15%)</title><rect x="455" y="340" width="1" height="15" fill="rgb(248,133,21)"/><text x="458.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.15%)</title><rect x="455" y="356" width="1" height="15" fill="rgb(213,118,13)"/><text x="458.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.31%)</title><rect x="455" y="292" width="3" height="15" fill="rgb(251,26,41)"/><text x="458.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.15%)</title><rect x="456" y="308" width="2" height="15" fill="rgb(223,174,46)"/><text x="459.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.15%)</title><rect x="456" y="324" width="2" height="15" fill="rgb(208,218,33)"/><text x="459.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.15%)</title><rect x="456" y="340" width="2" height="15" fill="rgb(231,120,11)"/><text x="459.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.15%)</title><rect x="458" y="340" width="2" height="15" fill="rgb(213,172,33)"/><text x="461.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.15%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(209,109,28)"/><text x="463.00" y="350.50"></text></g><g><title>0x7fd736d5cdbb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="460" y="356" width="2" height="15" fill="rgb(214,175,0)"/><text x="463.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.77%)</title><rect x="455" y="260" width="9" height="15" fill="rgb(211,48,32)"/><text x="458.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.77%)</title><rect x="455" y="276" width="9" height="15" fill="rgb(228,183,29)"/><text x="458.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.46%)</title><rect x="458" y="292" width="6" height="15" fill="rgb(214,87,13)"/><text x="461.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.46%)</title><rect x="458" y="308" width="6" height="15" fill="rgb(216,43,13)"/><text x="461.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.46%)</title><rect x="458" y="324" width="6" height="15" fill="rgb(223,47,6)"/><text x="461.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.15%)</title><rect x="462" y="340" width="2" height="15" fill="rgb(252,143,19)"/><text x="465.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 1.08%)</title><rect x="453" y="228" width="12" height="15" fill="rgb(231,39,6)"/><text x="456.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.93%)</title><rect x="455" y="244" width="10" height="15" fill="rgb(217,39,41)"/><text x="458.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.15%)</title><rect x="464" y="260" width="1" height="15" fill="rgb(252,185,5)"/><text x="467.00" y="270.50"></text></g><g><title>0x7fd71926cc70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="467" y="340" width="2" height="15" fill="rgb(212,3,41)"/><text x="470.00" y="350.50"></text></g><g><title>0x7fd736ebbe17 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="482" y="356" width="2" height="15" fill="rgb(247,210,13)"/><text x="485.00" y="366.50"></text></g><g><title>0x7fd736ebbe7e (libm-2.29.so) (2 samples, 0.31%)</title><rect x="484" y="356" width="3" height="15" fill="rgb(228,184,2)"/><text x="487.00" y="366.50"></text></g><g><title>0x7fd719163214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.32%)</title><rect x="465" y="324" width="28" height="15" fill="rgb(235,78,47)"/><text x="468.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (13 samples, 2.01%)</title><rect x="469" y="340" width="24" height="15" fill="rgb(216,149,9)"/><text x="472.00" y="350.50">e..</text></g><g><title>0x7fd736ebbea6 (libm-2.29.so) (3 samples, 0.46%)</title><rect x="487" y="356" width="6" height="15" fill="rgb(249,205,5)"/><text x="490.00" y="366.50"></text></g><g><title>0x7fd719163224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="493" y="324" width="2" height="15" fill="rgb(250,122,0)"/><text x="496.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (21 samples, 3.25%)</title><rect x="465" y="228" width="39" height="15" fill="rgb(223,56,6)"/><text x="468.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 3.25%)</title><rect x="465" y="244" width="39" height="15" fill="rgb(242,145,22)"/><text x="468.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 3.25%)</title><rect x="465" y="260" width="39" height="15" fill="rgb(217,39,49)"/><text x="468.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (21 samples, 3.25%)</title><rect x="465" y="276" width="39" height="15" fill="rgb(235,100,46)"/><text x="468.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (21 samples, 3.25%)</title><rect x="465" y="292" width="39" height="15" fill="rgb(235,35,50)"/><text x="468.00" y="302.50">tri..</text></g><g><title>0x7fd71914133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.25%)</title><rect x="465" y="308" width="39" height="15" fill="rgb(222,45,1)"/><text x="468.00" y="318.50">0x7..</text></g><g><title>0x7fd719163228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.77%)</title><rect x="495" y="324" width="9" height="15" fill="rgb(219,132,30)"/><text x="498.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.15%)</title><rect x="506" y="308" width="1" height="15" fill="rgb(210,32,8)"/><text x="509.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.15%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(229,64,9)"/><text x="510.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.15%)</title><rect x="507" y="372" width="2" height="15" fill="rgb(237,100,21)"/><text x="510.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (2 samples, 0.31%)</title><rect x="507" y="324" width="4" height="15" fill="rgb(215,193,15)"/><text x="510.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.31%)</title><rect x="507" y="340" width="4" height="15" fill="rgb(253,97,7)"/><text x="510.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.15%)</title><rect x="509" y="356" width="2" height="15" fill="rgb(238,104,27)"/><text x="512.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.15%)</title><rect x="509" y="372" width="2" height="15" fill="rgb(252,79,37)"/><text x="512.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.15%)</title><rect x="509" y="388" width="2" height="15" fill="rgb(223,114,50)"/><text x="512.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.15%)</title><rect x="509" y="404" width="2" height="15" fill="rgb(246,176,4)"/><text x="512.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="509" y="420" width="2" height="15" fill="rgb(231,158,47)"/><text x="512.00" y="430.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.15%)</title><rect x="511" y="340" width="2" height="15" fill="rgb(245,87,8)"/><text x="514.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.31%)</title><rect x="511" y="324" width="4" height="15" fill="rgb(231,125,16)"/><text x="514.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.15%)</title><rect x="513" y="340" width="2" height="15" fill="rgb(233,46,5)"/><text x="516.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (84 samples, 12.98%)</title><rect x="363" y="196" width="154" height="15" fill="rgb(223,208,32)"/><text x="366.00" y="206.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (84 samples, 12.98%)</title><rect x="363" y="212" width="154" height="15" fill="rgb(239,117,36)"/><text x="366.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 1.08%)</title><rect x="504" y="228" width="13" height="15" fill="rgb(230,107,5)"/><text x="507.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (7 samples, 1.08%)</title><rect x="504" y="244" width="13" height="15" fill="rgb(213,13,41)"/><text x="507.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.08%)</title><rect x="504" y="260" width="13" height="15" fill="rgb(236,0,9)"/><text x="507.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (7 samples, 1.08%)</title><rect x="504" y="276" width="13" height="15" fill="rgb(224,36,54)"/><text x="507.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 0.93%)</title><rect x="506" y="292" width="11" height="15" fill="rgb(216,144,23)"/><text x="509.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (5 samples, 0.77%)</title><rect x="507" y="308" width="10" height="15" fill="rgb(245,18,21)"/><text x="510.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.15%)</title><rect x="515" y="324" width="2" height="15" fill="rgb(206,159,10)"/><text x="518.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (118 samples, 18.24%)</title><rect x="303" y="180" width="215" height="15" fill="rgb(210,226,8)"/><text x="306.00" y="190.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.15%)</title><rect x="517" y="196" width="1" height="15" fill="rgb(247,142,9)"/><text x="520.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (123 samples, 19.01%)</title><rect x="303" y="164" width="224" height="15" fill="rgb(232,105,32)"/><text x="306.00" y="174.50">_run_sequence_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 0.77%)</title><rect x="518" y="180" width="9" height="15" fill="rgb(234,137,43)"/><text x="521.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:45) (128 samples, 19.78%)</title><rect x="296" y="52" width="233" height="15" fill="rgb(249,83,21)"/><text x="299.00" y="62.50">&lt;module&gt; (bench_LogisticRegres..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:44) (128 samples, 19.78%)</title><rect x="296" y="68" width="233" height="15" fill="rgb(226,148,51)"/><text x="299.00" y="78.50">profile_pyrt (bench_LogisticRe..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:29) (128 samples, 19.78%)</title><rect x="296" y="84" width="233" height="15" fill="rgb(223,216,53)"/><text x="299.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:23) (127 samples, 19.63%)</title><rect x="298" y="100" width="231" height="15" fill="rgb(218,1,21)"/><text x="301.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (125 samples, 19.32%)</title><rect x="301" y="116" width="228" height="15" fill="rgb(219,47,6)"/><text x="304.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (125 samples, 19.32%)</title><rect x="301" y="132" width="228" height="15" fill="rgb(245,79,12)"/><text x="304.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (125 samples, 19.32%)</title><rect x="301" y="148" width="228" height="15" fill="rgb(244,173,21)"/><text x="304.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.15%)</title><rect x="527" y="164" width="2" height="15" fill="rgb(224,174,49)"/><text x="530.00" y="174.50"></text></g><g><title>0x7fd6f75a5ff9 (?) (1 samples, 0.15%)</title><rect x="531" y="212" width="2" height="15" fill="rgb(242,136,45)"/><text x="534.00" y="222.50"></text></g><g><title>0x7fd6f75a0ef6 (?) (1 samples, 0.15%)</title><rect x="531" y="228" width="2" height="15" fill="rgb(206,185,53)"/><text x="534.00" y="238.50"></text></g><g><title>0x7fd6f7595962 (?) (1 samples, 0.15%)</title><rect x="531" y="244" width="2" height="15" fill="rgb(235,84,47)"/><text x="534.00" y="254.50"></text></g><g><title>0x7fd6f75c97a7 (?) (1 samples, 0.15%)</title><rect x="531" y="260" width="2" height="15" fill="rgb(211,42,16)"/><text x="534.00" y="270.50"></text></g><g><title>0x7fd6f75c9379 (?) (1 samples, 0.15%)</title><rect x="531" y="276" width="2" height="15" fill="rgb(253,100,32)"/><text x="534.00" y="286.50"></text></g><g><title>0x7fd6f7a278b8 (?) (1 samples, 0.15%)</title><rect x="531" y="292" width="2" height="15" fill="rgb(217,108,3)"/><text x="534.00" y="302.50"></text></g><g><title>0x7fd6f7a25c7f (?) (1 samples, 0.15%)</title><rect x="531" y="308" width="2" height="15" fill="rgb(245,124,39)"/><text x="534.00" y="318.50"></text></g><g><title>0x7fd6f7a3899c (?) (1 samples, 0.15%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(225,146,36)"/><text x="534.00" y="334.50"></text></g><g><title>0x7fd6f771dae2 (?) (1 samples, 0.15%)</title><rect x="531" y="340" width="2" height="15" fill="rgb(242,103,32)"/><text x="534.00" y="350.50"></text></g><g><title>0x7fd736d3c945 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="533" y="340" width="2" height="15" fill="rgb(253,194,24)"/><text x="536.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.77%)</title><rect x="535" y="340" width="9" height="15" fill="rgb(253,129,39)"/><text x="538.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="542" y="356" width="2" height="15" fill="rgb(223,57,6)"/><text x="545.00" y="366.50"></text></g><g><title>0x7fd736d5cdb3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="542" y="372" width="2" height="15" fill="rgb(229,223,26)"/><text x="545.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.39%)</title><rect x="533" y="260" width="16" height="15" fill="rgb(251,55,21)"/><text x="536.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.39%)</title><rect x="533" y="276" width="16" height="15" fill="rgb(246,182,52)"/><text x="536.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.39%)</title><rect x="533" y="292" width="16" height="15" fill="rgb(227,47,31)"/><text x="536.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.39%)</title><rect x="533" y="308" width="16" height="15" fill="rgb(243,167,14)"/><text x="536.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.39%)</title><rect x="533" y="324" width="16" height="15" fill="rgb(220,169,18)"/><text x="536.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="544" y="340" width="5" height="15" fill="rgb(222,192,1)"/><text x="547.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="546" y="356" width="3" height="15" fill="rgb(213,41,6)"/><text x="549.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.31%)</title><rect x="546" y="372" width="3" height="15" fill="rgb(214,11,6)"/><text x="549.00" y="382.50"></text></g><g><title>0x7fd736d3db1c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="548" y="388" width="1" height="15" fill="rgb(213,52,23)"/><text x="551.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="549" y="260" width="2" height="15" fill="rgb(229,218,38)"/><text x="552.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:18) (13 samples, 2.01%)</title><rect x="529" y="100" width="24" height="15" fill="rgb(246,196,19)"/><text x="532.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (12 samples, 1.85%)</title><rect x="531" y="116" width="22" height="15" fill="rgb(213,0,53)"/><text x="534.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (12 samples, 1.85%)</title><rect x="531" y="132" width="22" height="15" fill="rgb(231,229,22)"/><text x="534.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (12 samples, 1.85%)</title><rect x="531" y="148" width="22" height="15" fill="rgb(239,28,17)"/><text x="534.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (12 samples, 1.85%)</title><rect x="531" y="164" width="22" height="15" fill="rgb(239,199,14)"/><text x="534.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (12 samples, 1.85%)</title><rect x="531" y="180" width="22" height="15" fill="rgb(226,193,21)"/><text x="534.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py:136) (12 samples, 1.85%)</title><rect x="531" y="196" width="22" height="15" fill="rgb(230,217,48)"/><text x="534.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.70%)</title><rect x="533" y="212" width="20" height="15" fill="rgb(233,206,20)"/><text x="536.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.70%)</title><rect x="533" y="228" width="20" height="15" fill="rgb(239,181,15)"/><text x="536.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.70%)</title><rect x="533" y="244" width="20" height="15" fill="rgb(251,196,0)"/><text x="536.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="551" y="260" width="2" height="15" fill="rgb(250,21,47)"/><text x="554.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="551" y="276" width="2" height="15" fill="rgb(243,122,6)"/><text x="554.00" y="286.50"></text></g><g><title>0x7fd736d3c9d3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="551" y="292" width="2" height="15" fill="rgb(207,57,7)"/><text x="554.00" y="302.50"></text></g><g><title>0x7fd736d3bbc6 (libc-2.29.so) (3 samples, 0.46%)</title><rect x="589" y="132" width="6" height="15" fill="rgb(231,135,34)"/><text x="592.00" y="142.50"></text></g><g><title>0x7fd736d3bbcc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="595" y="132" width="2" height="15" fill="rgb(216,47,20)"/><text x="598.00" y="142.50"></text></g><g><title>0x7fd736d3bc00 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="597" y="132" width="2" height="15" fill="rgb(209,109,1)"/><text x="600.00" y="142.50"></text></g><g><title>0x7fd736d3bc20 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="599" y="132" width="1" height="15" fill="rgb(234,114,16)"/><text x="602.00" y="142.50"></text></g><g><title>0x7fd736d3bc49 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="600" y="132" width="2" height="15" fill="rgb(205,18,10)"/><text x="603.00" y="142.50"></text></g><g><title>0x7fd736d3bc51 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="602" y="132" width="2" height="15" fill="rgb(251,77,0)"/><text x="605.00" y="142.50"></text></g><g><title>0x7fd736d3bc6e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="604" y="132" width="2" height="15" fill="rgb(222,129,42)"/><text x="607.00" y="142.50"></text></g><g><title>0x7fd736d3baa4 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="608" y="148" width="3" height="15" fill="rgb(209,153,13)"/><text x="611.00" y="158.50"></text></g><g><title>0x7fd736d3bac1 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="611" y="148" width="2" height="15" fill="rgb(235,44,52)"/><text x="614.00" y="158.50"></text></g><g><title>0x7fd736d3bc73 (libc-2.29.so) (5 samples, 0.77%)</title><rect x="606" y="132" width="9" height="15" fill="rgb(242,121,30)"/><text x="609.00" y="142.50"></text></g><g><title>0x7fd736d3bad5 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="613" y="148" width="2" height="15" fill="rgb(217,49,35)"/><text x="616.00" y="158.50"></text></g><g><title>0x7fd736d3bab9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="615" y="148" width="2" height="15" fill="rgb(252,176,8)"/><text x="618.00" y="158.50"></text></g><g><title>0x7fd736d3ceb0 (libc-2.29.so) (16 samples, 2.47%)</title><rect x="589" y="116" width="30" height="15" fill="rgb(205,4,37)"/><text x="592.00" y="126.50">0x..</text></g><g><title>0x7fd736d3bca7 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="615" y="132" width="4" height="15" fill="rgb(246,9,43)"/><text x="618.00" y="142.50"></text></g><g><title>0x7fd736d3bacd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="617" y="148" width="2" height="15" fill="rgb(213,39,49)"/><text x="620.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.15%)</title><rect x="619" y="116" width="1" height="15" fill="rgb(214,197,32)"/><text x="622.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.15%)</title><rect x="619" y="132" width="1" height="15" fill="rgb(232,76,31)"/><text x="622.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.15%)</title><rect x="619" y="148" width="1" height="15" fill="rgb(221,105,31)"/><text x="622.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.15%)</title><rect x="619" y="164" width="1" height="15" fill="rgb(253,191,34)"/><text x="622.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.15%)</title><rect x="620" y="196" width="2" height="15" fill="rgb(209,123,52)"/><text x="623.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.15%)</title><rect x="620" y="212" width="2" height="15" fill="rgb(246,26,15)"/><text x="623.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="631" y="292" width="2" height="15" fill="rgb(240,60,5)"/><text x="634.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="631" y="308" width="2" height="15" fill="rgb(249,133,27)"/><text x="634.00" y="318.50"></text></g><g><title>0x7fd6f756c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="631" y="324" width="2" height="15" fill="rgb(220,63,13)"/><text x="634.00" y="334.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="356" width="2" height="15" fill="rgb(239,78,10)"/><text x="640.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="372" width="2" height="15" fill="rgb(241,145,33)"/><text x="640.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="388" width="2" height="15" fill="rgb(241,62,34)"/><text x="640.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="404" width="2" height="15" fill="rgb(252,3,44)"/><text x="640.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="420" width="2" height="15" fill="rgb(208,58,2)"/><text x="640.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="436" width="2" height="15" fill="rgb(216,96,49)"/><text x="640.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="452" width="2" height="15" fill="rgb(238,215,22)"/><text x="640.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="468" width="2" height="15" fill="rgb(217,103,42)"/><text x="640.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="637" y="484" width="2" height="15" fill="rgb(225,201,20)"/><text x="640.00" y="494.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="635" y="340" width="6" height="15" fill="rgb(247,137,20)"/><text x="638.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::Data&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="639" y="356" width="2" height="15" fill="rgb(235,34,30)"/><text x="642.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="641" y="340" width="3" height="15" fill="rgb(224,56,50)"/><text x="644.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="642" y="356" width="2" height="15" fill="rgb(230,109,25)"/><text x="645.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="642" y="372" width="2" height="15" fill="rgb(241,121,7)"/><text x="645.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="644" y="340" width="2" height="15" fill="rgb(246,108,49)"/><text x="647.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="644" y="356" width="2" height="15" fill="rgb(225,146,29)"/><text x="647.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="644" y="372" width="2" height="15" fill="rgb(221,184,37)"/><text x="647.00" y="382.50"></text></g><g><title>0x7fd736d3c92c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="644" y="388" width="2" height="15" fill="rgb(209,186,18)"/><text x="647.00" y="398.50"></text></g><g><title>0x7fd736ebbe0a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="827" y="372" width="1" height="15" fill="rgb(241,81,19)"/><text x="830.00" y="382.50"></text></g><g><title>0x7fd736ebbe14 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="828" y="372" width="2" height="15" fill="rgb(246,107,17)"/><text x="831.00" y="382.50"></text></g><g><title>0x7fd736ebbe2f (libm-2.29.so) (1 samples, 0.15%)</title><rect x="830" y="372" width="2" height="15" fill="rgb(225,54,50)"/><text x="833.00" y="382.50"></text></g><g><title>0x7fd736ebbe4a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="832" y="372" width="2" height="15" fill="rgb(248,145,48)"/><text x="835.00" y="382.50"></text></g><g><title>0x7fd736ebbe57 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="834" y="372" width="2" height="15" fill="rgb(232,86,27)"/><text x="837.00" y="382.50"></text></g><g><title>0x7fd736ebbe69 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="836" y="372" width="2" height="15" fill="rgb(242,101,31)"/><text x="839.00" y="382.50"></text></g><g><title>0x7fd736ebbe6d (libm-2.29.so) (1 samples, 0.15%)</title><rect x="838" y="372" width="1" height="15" fill="rgb(231,206,49)"/><text x="841.00" y="382.50"></text></g><g><title>0x7fd736ebbe92 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="839" y="372" width="2" height="15" fill="rgb(209,6,32)"/><text x="842.00" y="382.50"></text></g><g><title>0x7fd736ebbe96 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="841" y="372" width="2" height="15" fill="rgb(225,41,44)"/><text x="844.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 17.16%)</title><rect x="646" y="340" width="202" height="15" fill="rgb(241,74,35)"/><text x="649.00" y="350.50">onnxruntime::ml::LinearCla..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.09%)</title><rect x="812" y="356" width="36" height="15" fill="rgb(237,174,29)"/><text x="815.00" y="366.50">onn..</text></g><g><title>0x7fd736ebbea2 (libm-2.29.so) (3 samples, 0.46%)</title><rect x="843" y="372" width="5" height="15" fill="rgb(217,226,26)"/><text x="846.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.55%)</title><rect x="848" y="340" width="19" height="15" fill="rgb(233,4,13)"/><text x="851.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.55%)</title><rect x="848" y="356" width="19" height="15" fill="rgb(238,189,45)"/><text x="851.00" y="366.50"></text></g><g><title>0x7fd6f756dba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(232,206,31)"/><text x="886.00" y="366.50"></text></g><g><title>0x7fd726808d50 (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="887" y="372" width="3" height="15" fill="rgb(249,189,30)"/><text x="890.00" y="382.50"></text></g><g><title>0x7fd736d3db1c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="943" y="388" width="2" height="15" fill="rgb(210,86,12)"/><text x="946.00" y="398.50"></text></g><g><title>0x7fd736d3db24 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="945" y="388" width="4" height="15" fill="rgb(230,197,14)"/><text x="948.00" y="398.50"></text></g><g><title>0x7fd736d3db61 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="949" y="388" width="2" height="15" fill="rgb(209,134,34)"/><text x="952.00" y="398.50"></text></g><g><title>0x7fd736d3dd27 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="951" y="388" width="1" height="15" fill="rgb(244,175,32)"/><text x="954.00" y="398.50"></text></g><g><title>0x7fd736d3dd36 (libc-2.29.so) (3 samples, 0.46%)</title><rect x="952" y="388" width="6" height="15" fill="rgb(224,26,42)"/><text x="955.00" y="398.50"></text></g><g><title>0x7fd736d3dd48 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="958" y="388" width="4" height="15" fill="rgb(250,211,7)"/><text x="961.00" y="398.50"></text></g><g><title>0x7fd736d3dd54 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="962" y="388" width="3" height="15" fill="rgb(209,217,20)"/><text x="965.00" y="398.50"></text></g><g><title>0x7fd736d3dd8d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="965" y="388" width="2" height="15" fill="rgb(247,160,47)"/><text x="968.00" y="398.50"></text></g><g><title>0x7fd736d3dd9f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="967" y="388" width="2" height="15" fill="rgb(231,98,52)"/><text x="970.00" y="398.50"></text></g><g><title>0x7fd736d3dfd2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="969" y="388" width="2" height="15" fill="rgb(223,58,44)"/><text x="972.00" y="398.50"></text></g><g><title>0x7fd736d3dfde (libc-2.29.so) (1 samples, 0.15%)</title><rect x="971" y="388" width="1" height="15" fill="rgb(245,46,48)"/><text x="974.00" y="398.50"></text></g><g><title>0x7fd736d3e040 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="972" y="388" width="2" height="15" fill="rgb(254,127,43)"/><text x="975.00" y="398.50"></text></g><g><title>0x7fd736d3e06d (libc-2.29.so) (2 samples, 0.31%)</title><rect x="974" y="388" width="4" height="15" fill="rgb(230,214,4)"/><text x="977.00" y="398.50"></text></g><g><title>0x7fd736d3e07f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="978" y="388" width="2" height="15" fill="rgb(222,187,5)"/><text x="981.00" y="398.50"></text></g><g><title>0x7fd736d3e384 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="980" y="388" width="2" height="15" fill="rgb(225,225,12)"/><text x="983.00" y="398.50"></text></g><g><title>0x7fd736d3e395 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="982" y="388" width="1" height="15" fill="rgb(217,42,19)"/><text x="985.00" y="398.50"></text></g><g><title>0x7fd736d3e3ae (libc-2.29.so) (1 samples, 0.15%)</title><rect x="983" y="388" width="2" height="15" fill="rgb(211,158,39)"/><text x="986.00" y="398.50"></text></g><g><title>0x7fd736d3e3d1 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="985" y="388" width="4" height="15" fill="rgb(250,192,39)"/><text x="988.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (58 samples, 8.96%)</title><rect x="885" y="356" width="106" height="15" fill="rgb(247,203,33)"/><text x="888.00" y="366.50">operator new..</text></g><g><title>malloc (libc-2.29.so) (55 samples, 8.50%)</title><rect x="890" y="372" width="101" height="15" fill="rgb(252,52,39)"/><text x="893.00" y="382.50">malloc (libc..</text></g><g><title>0x7fd736d3e3e0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="989" y="388" width="2" height="15" fill="rgb(236,147,16)"/><text x="992.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="991" y="356" width="2" height="15" fill="rgb(217,203,28)"/><text x="994.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="993" y="356" width="1" height="15" fill="rgb(240,225,40)"/><text x="996.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.46%)</title><rect x="994" y="356" width="6" height="15" fill="rgb(228,50,37)"/><text x="997.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (202 samples, 31.22%)</title><rect x="633" y="308" width="369" height="15" fill="rgb(254,174,47)"/><text x="636.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (202 samples, 31.22%)</title><rect x="633" y="324" width="369" height="15" fill="rgb(210,8,30)"/><text x="636.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 11.44%)</title><rect x="867" y="340" width="135" height="15" fill="rgb(240,204,9)"/><text x="870.00" y="350.50">onnxruntime::ml::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1000" y="356" width="2" height="15" fill="rgb(234,148,33)"/><text x="1003.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 31.53%)</title><rect x="631" y="276" width="372" height="15" fill="rgb(217,32,8)"/><text x="634.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 31.38%)</title><rect x="633" y="292" width="370" height="15" fill="rgb(208,27,33)"/><text x="636.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1002" y="308" width="1" height="15" fill="rgb(251,123,41)"/><text x="1005.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1002" y="324" width="1" height="15" fill="rgb(241,163,24)"/><text x="1005.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1002" y="340" width="1" height="15" fill="rgb(206,88,51)"/><text x="1005.00" y="350.50"></text></g><g><title>0x7fd736e1a130 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1002" y="356" width="1" height="15" fill="rgb(211,59,15)"/><text x="1005.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 31.68%)</title><rect x="631" y="260" width="374" height="15" fill="rgb(248,108,40)"/><text x="634.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1003" y="276" width="2" height="15" fill="rgb(210,229,8)"/><text x="1006.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1003" y="292" width="2" height="15" fill="rgb(249,16,28)"/><text x="1006.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1005" y="260" width="2" height="15" fill="rgb(215,37,28)"/><text x="1008.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;void, (__gnu_cxx::_Lock_policy)2&gt;::reset&lt;void, void (*)(void*)&gt; [clone .localalias.62] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1005" y="276" width="2" height="15" fill="rgb(246,113,12)"/><text x="1008.00" y="286.50"></text></g><g><title>0x7fd6f756c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1005" y="292" width="2" height="15" fill="rgb(248,74,15)"/><text x="1008.00" y="302.50"></text></g><g><title>0x7fd6f756d5c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1104" y="276" width="2" height="15" fill="rgb(252,19,2)"/><text x="1107.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.63%)</title><rect x="1106" y="276" width="31" height="15" fill="rgb(232,145,7)"/><text x="1109.00" y="286.50">py..</text></g><g><title>0x7fd6f756d310 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1135" y="292" width="2" height="15" fill="rgb(223,128,18)"/><text x="1138.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 11.28%)</title><rect x="1007" y="260" width="133" height="15" fill="rgb(230,124,1)"/><text x="1010.00" y="270.50">pybind11::detail..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="1137" y="276" width="3" height="15" fill="rgb(240,106,35)"/><text x="1140.00" y="286.50"></text></g><g><title>0x7fd736d3c90e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1140" y="292" width="2" height="15" fill="rgb(209,115,38)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7fd736d3c91e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1142" y="292" width="2" height="15" fill="rgb(209,141,29)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7fd736d3c945 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(213,108,35)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7fd736d3c99b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1146" y="292" width="2" height="15" fill="rgb(218,170,49)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7fd736d3c9d3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1148" y="292" width="1" height="15" fill="rgb(215,216,8)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7fd736d3ca4b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(236,184,28)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7fd736d3cd07 (libc-2.29.so) (6 samples, 0.93%)</title><rect x="1151" y="292" width="11" height="15" fill="rgb(246,225,31)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fd736d3cd13 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(211,106,29)"/><text x="1165.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.31%)</title><rect x="1164" y="292" width="4" height="15" fill="rgb(241,108,16)"/><text x="1167.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="1168" y="292" width="1" height="15" fill="rgb(249,206,3)"/><text x="1171.00" y="302.50"></text></g><g><title>0x7fd736d3c90e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(222,55,5)"/><text x="1174.00" y="318.50"></text></g><g><title>0x7fd736d3ca33 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1173" y="308" width="2" height="15" fill="rgb(234,195,49)"/><text x="1176.00" y="318.50"></text></g><g><title>0x7fd736d3cd07 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(243,156,7)"/><text x="1178.00" y="318.50"></text></g><g><title>0x7fd736d3cd13 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1179" y="308" width="1" height="15" fill="rgb(229,105,45)"/><text x="1182.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (308 samples, 47.60%)</title><rect x="624" y="244" width="562" height="15" fill="rgb(251,41,50)"/><text x="627.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 3.86%)</title><rect x="1140" y="260" width="46" height="15" fill="rgb(210,155,50)"/><text x="1143.00" y="270.50">std:..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 3.86%)</title><rect x="1140" y="276" width="46" height="15" fill="rgb(226,84,20)"/><text x="1143.00" y="286.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.39%)</title><rect x="1169" y="292" width="17" height="15" fill="rgb(214,115,13)"/><text x="1172.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="1180" y="308" width="6" height="15" fill="rgb(218,49,14)"/><text x="1183.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (311 samples, 48.07%)</title><rect x="620" y="132" width="568" height="15" fill="rgb(215,59,6)"/><text x="623.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (311 samples, 48.07%)</title><rect x="620" y="148" width="568" height="15" fill="rgb(253,99,15)"/><text x="623.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (311 samples, 48.07%)</title><rect x="620" y="164" width="568" height="15" fill="rgb(228,114,13)"/><text x="623.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (311 samples, 48.07%)</title><rect x="620" y="180" width="568" height="15" fill="rgb(240,101,6)"/><text x="623.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (310 samples, 47.91%)</title><rect x="622" y="196" width="566" height="15" fill="rgb(237,173,34)"/><text x="625.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (309 samples, 47.76%)</title><rect x="624" y="212" width="564" height="15" fill="rgb(226,4,12)"/><text x="627.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_sta..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (309 samples, 47.76%)</title><rect x="624" y="228" width="564" height="15" fill="rgb(210,152,47)"/><text x="627.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(210,146,39)"/><text x="1189.00" y="254.50"></text></g><g><title>all (647 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,72,1)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:52) (362 samples, 55.95%)</title><rect x="529" y="52" width="661" height="15" fill="rgb(240,95,0)"/><text x="532.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:51) (362 samples, 55.95%)</title><rect x="529" y="68" width="661" height="15" fill="rgb(211,209,17)"/><text x="532.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:29) (362 samples, 55.95%)</title><rect x="529" y="84" width="661" height="15" fill="rgb(229,222,54)"/><text x="532.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_floa..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py:23) (349 samples, 53.94%)</title><rect x="553" y="100" width="637" height="15" fill="rgb(254,31,12)"/><text x="556.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (312 samples, 48.22%)</title><rect x="620" y="116" width="570" height="15" fill="rgb(206,141,20)"/><text x="623.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(213,27,32)"/><text x="1191.00" y="142.50"></text></g><g><title>0x7fd736e1a134 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(218,43,53)"/><text x="1191.00" y="158.50"></text></g></g></svg>