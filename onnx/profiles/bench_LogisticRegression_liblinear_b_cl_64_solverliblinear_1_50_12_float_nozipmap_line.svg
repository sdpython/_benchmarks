<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1606" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1589.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1589.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:31) (1 samples, 0.38%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(232,150,12)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:11) (1 samples, 0.38%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(247,17,13)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:39) (1 samples, 0.38%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(230,142,35)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.38%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(251,185,50)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py:1542) (1 samples, 0.38%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(223,117,16)"/><text x="13.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py:939) (1 samples, 0.38%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(207,134,3)"/><text x="13.00" y="142.50"></text></g><g><title>0x7f6a41eefc54 (?) (1 samples, 0.38%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(224,109,28)"/><text x="13.00" y="158.50"></text></g><g><title>0x7f6a41eec060 (?) (1 samples, 0.38%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(244,50,51)"/><text x="13.00" y="174.50"></text></g><g><title>0x7f6a41ef9d04 (?) (1 samples, 0.38%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(208,5,5)"/><text x="13.00" y="190.50"></text></g><g><title>0x7f6a41ef705a (?) (1 samples, 0.38%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(242,39,44)"/><text x="13.00" y="206.50"></text></g><g><title>0x7f6a41ef164a (?) (1 samples, 0.38%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(230,49,35)"/><text x="13.00" y="222.50"></text></g><g><title>0x7f6a41ef2075 (?) (1 samples, 0.38%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(205,198,44)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f6a41ef2023 (?) (1 samples, 0.38%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(236,169,4)"/><text x="13.00" y="254.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.38%)</title><rect x="14" y="148" width="5" height="15" fill="rgb(235,148,2)"/><text x="17.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.38%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(234,197,16)"/><text x="17.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.38%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(253,174,24)"/><text x="17.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.38%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(233,88,11)"/><text x="17.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.38%)</title><rect x="19" y="196" width="4" height="15" fill="rgb(217,2,19)"/><text x="22.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.38%)</title><rect x="19" y="212" width="4" height="15" fill="rgb(251,85,7)"/><text x="22.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:18) (3 samples, 1.15%)</title><rect x="14" y="100" width="14" height="15" fill="rgb(205,38,0)"/><text x="17.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 1.15%)</title><rect x="14" y="116" width="14" height="15" fill="rgb(214,17,4)"/><text x="17.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 1.15%)</title><rect x="14" y="132" width="14" height="15" fill="rgb(222,218,21)"/><text x="17.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.77%)</title><rect x="19" y="148" width="9" height="15" fill="rgb(233,162,29)"/><text x="22.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.77%)</title><rect x="19" y="164" width="9" height="15" fill="rgb(224,62,16)"/><text x="22.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (2 samples, 0.77%)</title><rect x="19" y="180" width="9" height="15" fill="rgb(223,113,44)"/><text x="22.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.38%)</title><rect x="23" y="196" width="5" height="15" fill="rgb(236,140,44)"/><text x="26.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.38%)</title><rect x="23" y="212" width="5" height="15" fill="rgb(220,190,51)"/><text x="26.00" y="222.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:22) (2 samples, 0.77%)</title><rect x="28" y="100" width="9" height="15" fill="rgb(223,38,30)"/><text x="31.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.77%)</title><rect x="55" y="164" width="9" height="15" fill="rgb(241,178,1)"/><text x="58.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.38%)</title><rect x="59" y="180" width="5" height="15" fill="rgb(234,151,38)"/><text x="62.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.38%)</title><rect x="64" y="164" width="5" height="15" fill="rgb(236,44,5)"/><text x="67.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.38%)</title><rect x="69" y="164" width="4" height="15" fill="rgb(232,115,9)"/><text x="72.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.77%)</title><rect x="73" y="180" width="9" height="15" fill="rgb(214,102,17)"/><text x="76.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.77%)</title><rect x="82" y="180" width="9" height="15" fill="rgb(248,24,21)"/><text x="85.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.38%)</title><rect x="87" y="196" width="4" height="15" fill="rgb(242,222,32)"/><text x="90.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (10 samples, 3.85%)</title><rect x="50" y="148" width="46" height="15" fill="rgb(222,120,53)"/><text x="53.00" y="158.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.92%)</title><rect x="73" y="164" width="23" height="15" fill="rgb(250,132,47)"/><text x="76.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.38%)</title><rect x="91" y="180" width="5" height="15" fill="rgb(231,63,28)"/><text x="94.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.38%)</title><rect x="91" y="196" width="5" height="15" fill="rgb(243,222,47)"/><text x="94.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1647) (1 samples, 0.38%)</title><rect x="96" y="148" width="4" height="15" fill="rgb(228,98,30)"/><text x="99.00" y="158.50"></text></g><g><title>0x7f6a695b8da2 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="96" y="164" width="4" height="15" fill="rgb(220,188,37)"/><text x="99.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.38%)</title><rect x="114" y="196" width="4" height="15" fill="rgb(252,47,18)"/><text x="117.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.15%)</title><rect x="137" y="228" width="13" height="15" fill="rgb(239,21,7)"/><text x="140.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (12 samples, 4.62%)</title><rect x="109" y="180" width="55" height="15" fill="rgb(225,202,37)"/><text x="112.00" y="190.50">decis..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 3.85%)</title><rect x="118" y="196" width="46" height="15" fill="rgb(229,143,10)"/><text x="121.00" y="206.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 3.46%)</title><rect x="123" y="212" width="41" height="15" fill="rgb(245,180,45)"/><text x="126.00" y="222.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.15%)</title><rect x="150" y="228" width="14" height="15" fill="rgb(218,148,50)"/><text x="153.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.38%)</title><rect x="168" y="196" width="5" height="15" fill="rgb(248,27,7)"/><text x="171.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (2 samples, 0.77%)</title><rect x="173" y="196" width="9" height="15" fill="rgb(224,51,16)"/><text x="176.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.77%)</title><rect x="182" y="212" width="9" height="15" fill="rgb(234,203,27)"/><text x="185.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.38%)</title><rect x="191" y="212" width="5" height="15" fill="rgb(215,60,51)"/><text x="194.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.54%)</title><rect x="182" y="196" width="18" height="15" fill="rgb(228,125,54)"/><text x="185.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.38%)</title><rect x="196" y="212" width="4" height="15" fill="rgb(221,111,45)"/><text x="199.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.38%)</title><rect x="200" y="212" width="5" height="15" fill="rgb(225,94,5)"/><text x="203.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.38%)</title><rect x="205" y="228" width="4" height="15" fill="rgb(206,155,28)"/><text x="208.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.38%)</title><rect x="209" y="228" width="5" height="15" fill="rgb(241,82,17)"/><text x="212.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.54%)</title><rect x="200" y="196" width="18" height="15" fill="rgb(245,229,21)"/><text x="203.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.15%)</title><rect x="205" y="212" width="13" height="15" fill="rgb(220,82,12)"/><text x="208.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.38%)</title><rect x="214" y="228" width="4" height="15" fill="rgb(236,175,44)"/><text x="217.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.38%)</title><rect x="218" y="196" width="5" height="15" fill="rgb(218,81,16)"/><text x="221.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.38%)</title><rect x="218" y="212" width="5" height="15" fill="rgb(219,74,20)"/><text x="221.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.38%)</title><rect x="223" y="196" width="4" height="15" fill="rgb(231,29,31)"/><text x="226.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:332) (1 samples, 0.38%)</title><rect x="232" y="212" width="4" height="15" fill="rgb(219,137,44)"/><text x="235.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.15%)</title><rect x="227" y="196" width="14" height="15" fill="rgb(240,29,26)"/><text x="230.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.38%)</title><rect x="236" y="212" width="5" height="15" fill="rgb(235,133,50)"/><text x="239.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.38%)</title><rect x="246" y="228" width="4" height="15" fill="rgb(238,34,33)"/><text x="249.00" y="238.50"></text></g><g><title>0x7f6a694f0e7a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="246" y="244" width="4" height="15" fill="rgb(219,54,40)"/><text x="249.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 1.15%)</title><rect x="241" y="212" width="14" height="15" fill="rgb(235,229,12)"/><text x="244.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.38%)</title><rect x="250" y="228" width="5" height="15" fill="rgb(238,90,1)"/><text x="253.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.38%)</title><rect x="255" y="212" width="4" height="15" fill="rgb(240,141,10)"/><text x="258.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.38%)</title><rect x="255" y="228" width="4" height="15" fill="rgb(221,6,7)"/><text x="258.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (6 samples, 2.31%)</title><rect x="241" y="196" width="27" height="15" fill="rgb(236,83,42)"/><text x="244.00" y="206.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (2 samples, 0.77%)</title><rect x="259" y="212" width="9" height="15" fill="rgb(239,85,20)"/><text x="262.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.38%)</title><rect x="264" y="228" width="4" height="15" fill="rgb(240,167,16)"/><text x="267.00" y="238.50"></text></g><g><title>0x7f6a695b90e6 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="282" y="228" width="4" height="15" fill="rgb(237,192,25)"/><text x="285.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 2.69%)</title><rect x="273" y="212" width="32" height="15" fill="rgb(205,128,44)"/><text x="276.00" y="222.50">_a..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.54%)</title><rect x="286" y="228" width="19" height="15" fill="rgb(221,20,32)"/><text x="289.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (9 samples, 3.46%)</title><rect x="268" y="196" width="41" height="15" fill="rgb(254,155,9)"/><text x="271.00" y="206.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.38%)</title><rect x="305" y="212" width="4" height="15" fill="rgb(242,45,51)"/><text x="308.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.38%)</title><rect x="309" y="196" width="5" height="15" fill="rgb(235,201,18)"/><text x="312.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.77%)</title><rect x="314" y="212" width="9" height="15" fill="rgb(228,116,28)"/><text x="317.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 2.31%)</title><rect x="314" y="196" width="27" height="15" fill="rgb(229,18,32)"/><text x="317.00" y="206.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.54%)</title><rect x="323" y="212" width="18" height="15" fill="rgb(209,115,17)"/><text x="326.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.77%)</title><rect x="332" y="228" width="9" height="15" fill="rgb(208,188,25)"/><text x="335.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.38%)</title><rect x="336" y="244" width="5" height="15" fill="rgb(215,144,33)"/><text x="339.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.38%)</title><rect x="341" y="196" width="4" height="15" fill="rgb(234,12,22)"/><text x="344.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (41 samples, 15.77%)</title><rect x="164" y="180" width="186" height="15" fill="rgb(249,229,24)"/><text x="167.00" y="190.50">decision_function (sklea..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.38%)</title><rect x="345" y="196" width="5" height="15" fill="rgb(238,92,35)"/><text x="348.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.38%)</title><rect x="350" y="180" width="4" height="15" fill="rgb(248,187,15)"/><text x="353.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (3 samples, 1.15%)</title><rect x="354" y="180" width="14" height="15" fill="rgb(254,55,43)"/><text x="357.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.38%)</title><rect x="364" y="196" width="4" height="15" fill="rgb(240,31,54)"/><text x="367.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.38%)</title><rect x="364" y="212" width="4" height="15" fill="rgb(209,29,34)"/><text x="367.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1022) (1 samples, 0.38%)</title><rect x="364" y="228" width="4" height="15" fill="rgb(211,133,22)"/><text x="367.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.77%)</title><rect x="368" y="228" width="9" height="15" fill="rgb(248,2,12)"/><text x="371.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.77%)</title><rect x="368" y="244" width="9" height="15" fill="rgb(205,195,6)"/><text x="371.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (2 samples, 0.77%)</title><rect x="368" y="260" width="9" height="15" fill="rgb(246,9,27)"/><text x="371.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (2 samples, 0.77%)</title><rect x="368" y="276" width="9" height="15" fill="rgb(246,205,28)"/><text x="371.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.38%)</title><rect x="377" y="308" width="5" height="15" fill="rgb(245,54,11)"/><text x="380.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.77%)</title><rect x="377" y="260" width="9" height="15" fill="rgb(221,12,38)"/><text x="380.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.77%)</title><rect x="377" y="276" width="9" height="15" fill="rgb(207,170,32)"/><text x="380.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.77%)</title><rect x="377" y="292" width="9" height="15" fill="rgb(240,209,5)"/><text x="380.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.38%)</title><rect x="382" y="308" width="4" height="15" fill="rgb(212,52,19)"/><text x="385.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.38%)</title><rect x="382" y="324" width="4" height="15" fill="rgb(218,197,44)"/><text x="385.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="382" y="340" width="4" height="15" fill="rgb(231,22,11)"/><text x="385.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.38%)</title><rect x="382" y="356" width="4" height="15" fill="rgb(253,202,18)"/><text x="385.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.38%)</title><rect x="386" y="260" width="5" height="15" fill="rgb(217,96,7)"/><text x="389.00" y="270.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1375) (1 samples, 0.38%)</title><rect x="386" y="276" width="5" height="15" fill="rgb(219,221,27)"/><text x="389.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.31%)</title><rect x="368" y="212" width="27" height="15" fill="rgb(210,73,19)"/><text x="371.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.54%)</title><rect x="377" y="228" width="18" height="15" fill="rgb(251,205,38)"/><text x="380.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.54%)</title><rect x="377" y="244" width="18" height="15" fill="rgb(249,191,35)"/><text x="380.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.38%)</title><rect x="391" y="260" width="4" height="15" fill="rgb(240,15,54)"/><text x="394.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:687) (1 samples, 0.38%)</title><rect x="391" y="276" width="4" height="15" fill="rgb(211,164,10)"/><text x="394.00" y="286.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.69%)</title><rect x="368" y="196" width="32" height="15" fill="rgb(235,50,29)"/><text x="371.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.38%)</title><rect x="395" y="212" width="5" height="15" fill="rgb(251,109,25)"/><text x="398.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.38%)</title><rect x="395" y="228" width="5" height="15" fill="rgb(220,96,10)"/><text x="398.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.38%)</title><rect x="395" y="244" width="5" height="15" fill="rgb(235,46,29)"/><text x="398.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="400" y="196" width="4" height="15" fill="rgb(212,210,18)"/><text x="403.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="400" y="212" width="4" height="15" fill="rgb(237,195,44)"/><text x="403.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.38%)</title><rect x="400" y="228" width="4" height="15" fill="rgb(228,126,37)"/><text x="403.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.38%)</title><rect x="404" y="196" width="5" height="15" fill="rgb(216,81,12)"/><text x="407.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.38%)</title><rect x="404" y="212" width="5" height="15" fill="rgb(216,142,31)"/><text x="407.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (1 samples, 0.38%)</title><rect x="409" y="244" width="4" height="15" fill="rgb(221,50,10)"/><text x="412.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.38%)</title><rect x="409" y="260" width="4" height="15" fill="rgb(206,3,53)"/><text x="412.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (1 samples, 0.38%)</title><rect x="413" y="244" width="5" height="15" fill="rgb(209,39,28)"/><text x="416.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.38%)</title><rect x="413" y="260" width="5" height="15" fill="rgb(242,114,11)"/><text x="416.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.38%)</title><rect x="418" y="276" width="5" height="15" fill="rgb(233,52,46)"/><text x="421.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.38%)</title><rect x="418" y="292" width="5" height="15" fill="rgb(210,174,17)"/><text x="421.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.38%)</title><rect x="418" y="308" width="5" height="15" fill="rgb(220,50,11)"/><text x="421.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="418" y="324" width="5" height="15" fill="rgb(222,116,18)"/><text x="421.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.38%)</title><rect x="418" y="340" width="5" height="15" fill="rgb(210,216,27)"/><text x="421.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.38%)</title><rect x="423" y="276" width="4" height="15" fill="rgb(213,219,16)"/><text x="426.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.38%)</title><rect x="423" y="292" width="4" height="15" fill="rgb(254,169,39)"/><text x="426.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.38%)</title><rect x="423" y="308" width="4" height="15" fill="rgb(211,176,12)"/><text x="426.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.38%)</title><rect x="423" y="324" width="4" height="15" fill="rgb(232,176,52)"/><text x="426.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.38%)</title><rect x="423" y="340" width="4" height="15" fill="rgb(245,135,18)"/><text x="426.00" y="350.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.38%)</title><rect x="423" y="356" width="4" height="15" fill="rgb(214,187,43)"/><text x="426.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.38%)</title><rect x="427" y="308" width="5" height="15" fill="rgb(224,214,33)"/><text x="430.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="427" y="324" width="5" height="15" fill="rgb(229,172,49)"/><text x="430.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.38%)</title><rect x="432" y="308" width="4" height="15" fill="rgb(222,81,5)"/><text x="435.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 1.92%)</title><rect x="418" y="244" width="23" height="15" fill="rgb(251,26,33)"/><text x="421.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (5 samples, 1.92%)</title><rect x="418" y="260" width="23" height="15" fill="rgb(252,157,22)"/><text x="421.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 1.15%)</title><rect x="427" y="276" width="14" height="15" fill="rgb(213,226,20)"/><text x="430.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.15%)</title><rect x="427" y="292" width="14" height="15" fill="rgb(245,150,9)"/><text x="430.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.38%)</title><rect x="436" y="308" width="5" height="15" fill="rgb(219,104,42)"/><text x="439.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4033) (1 samples, 0.38%)</title><rect x="436" y="324" width="5" height="15" fill="rgb(242,8,8)"/><text x="439.00" y="334.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:411) (1 samples, 0.38%)</title><rect x="441" y="260" width="4" height="15" fill="rgb(240,3,1)"/><text x="444.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:52) (1 samples, 0.38%)</title><rect x="441" y="276" width="4" height="15" fill="rgb(249,35,45)"/><text x="444.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.77%)</title><rect x="441" y="244" width="9" height="15" fill="rgb(232,209,42)"/><text x="444.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.38%)</title><rect x="445" y="260" width="5" height="15" fill="rgb(244,113,44)"/><text x="448.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.38%)</title><rect x="445" y="276" width="5" height="15" fill="rgb(224,172,33)"/><text x="448.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.38%)</title><rect x="445" y="292" width="5" height="15" fill="rgb(226,163,45)"/><text x="448.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.38%)</title><rect x="450" y="244" width="4" height="15" fill="rgb(210,27,31)"/><text x="453.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.38%)</title><rect x="454" y="244" width="5" height="15" fill="rgb(214,107,39)"/><text x="457.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="454" y="260" width="5" height="15" fill="rgb(250,206,36)"/><text x="457.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (12 samples, 4.62%)</title><rect x="409" y="196" width="54" height="15" fill="rgb(221,10,37)"/><text x="412.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 4.62%)</title><rect x="409" y="212" width="54" height="15" fill="rgb(219,46,46)"/><text x="412.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (12 samples, 4.62%)</title><rect x="409" y="228" width="54" height="15" fill="rgb(229,65,27)"/><text x="412.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.38%)</title><rect x="459" y="244" width="4" height="15" fill="rgb(245,7,53)"/><text x="462.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.38%)</title><rect x="459" y="260" width="4" height="15" fill="rgb(230,31,37)"/><text x="462.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="459" y="276" width="4" height="15" fill="rgb(235,199,21)"/><text x="462.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="459" y="292" width="4" height="15" fill="rgb(236,136,46)"/><text x="462.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.38%)</title><rect x="459" y="308" width="4" height="15" fill="rgb(218,120,54)"/><text x="462.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (80 samples, 30.77%)</title><rect x="109" y="164" width="363" height="15" fill="rgb(236,144,29)"/><text x="112.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (23 samples, 8.85%)</title><rect x="368" y="180" width="104" height="15" fill="rgb(244,143,37)"/><text x="371.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.77%)</title><rect x="463" y="196" width="9" height="15" fill="rgb(225,103,0)"/><text x="466.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.38%)</title><rect x="468" y="212" width="4" height="15" fill="rgb(232,6,11)"/><text x="471.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.38%)</title><rect x="482" y="212" width="4" height="15" fill="rgb(253,82,9)"/><text x="485.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.38%)</title><rect x="482" y="228" width="4" height="15" fill="rgb(232,204,5)"/><text x="485.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.77%)</title><rect x="482" y="196" width="9" height="15" fill="rgb(231,13,1)"/><text x="485.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.38%)</title><rect x="486" y="212" width="5" height="15" fill="rgb(222,170,41)"/><text x="489.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.38%)</title><rect x="491" y="244" width="4" height="15" fill="rgb(215,135,9)"/><text x="494.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.38%)</title><rect x="491" y="260" width="4" height="15" fill="rgb(230,93,9)"/><text x="494.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.38%)</title><rect x="491" y="276" width="4" height="15" fill="rgb(232,81,50)"/><text x="494.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.77%)</title><rect x="491" y="212" width="9" height="15" fill="rgb(232,28,49)"/><text x="494.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.77%)</title><rect x="491" y="228" width="9" height="15" fill="rgb(247,6,18)"/><text x="494.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.38%)</title><rect x="495" y="244" width="5" height="15" fill="rgb(226,183,18)"/><text x="498.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.38%)</title><rect x="495" y="260" width="5" height="15" fill="rgb(206,129,19)"/><text x="498.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:345) (1 samples, 0.38%)</title><rect x="495" y="276" width="5" height="15" fill="rgb(214,127,0)"/><text x="498.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (7 samples, 2.69%)</title><rect x="472" y="164" width="32" height="15" fill="rgb(245,141,27)"/><text x="475.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.92%)</title><rect x="482" y="180" width="22" height="15" fill="rgb(206,184,0)"/><text x="485.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.15%)</title><rect x="491" y="196" width="13" height="15" fill="rgb(209,79,24)"/><text x="494.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.38%)</title><rect x="500" y="212" width="4" height="15" fill="rgb(225,94,27)"/><text x="503.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.38%)</title><rect x="500" y="228" width="4" height="15" fill="rgb(225,144,51)"/><text x="503.00" y="238.50"></text></g><g><title>0x7f6a547c39dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="500" y="244" width="4" height="15" fill="rgb(205,0,42)"/><text x="503.00" y="254.50"></text></g><g><title>0x7f6a547e4265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="500" y="260" width="4" height="15" fill="rgb(210,99,3)"/><text x="503.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.38%)</title><rect x="500" y="276" width="4" height="15" fill="rgb(205,224,43)"/><text x="503.00" y="286.50"></text></g><g><title>0x7f6a696acba5 (libm-2.29.so) (1 samples, 0.38%)</title><rect x="500" y="292" width="4" height="15" fill="rgb(211,161,11)"/><text x="503.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.38%)</title><rect x="509" y="180" width="4" height="15" fill="rgb(253,178,2)"/><text x="512.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.38%)</title><rect x="509" y="196" width="4" height="15" fill="rgb(212,154,1)"/><text x="512.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:959) (1 samples, 0.38%)</title><rect x="509" y="212" width="4" height="15" fill="rgb(224,45,52)"/><text x="512.00" y="222.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.38%)</title><rect x="522" y="308" width="5" height="15" fill="rgb(241,177,27)"/><text x="525.00" y="318.50"></text></g><g><title>0x7f6a694f0e7a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="522" y="324" width="5" height="15" fill="rgb(217,226,47)"/><text x="525.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.77%)</title><rect x="522" y="228" width="9" height="15" fill="rgb(210,64,48)"/><text x="525.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.77%)</title><rect x="522" y="244" width="9" height="15" fill="rgb(237,133,8)"/><text x="525.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.77%)</title><rect x="522" y="260" width="9" height="15" fill="rgb(227,96,41)"/><text x="525.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.77%)</title><rect x="522" y="276" width="9" height="15" fill="rgb(210,166,18)"/><text x="525.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.77%)</title><rect x="522" y="292" width="9" height="15" fill="rgb(217,32,34)"/><text x="525.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.38%)</title><rect x="527" y="308" width="4" height="15" fill="rgb(229,93,11)"/><text x="530.00" y="318.50"></text></g><g><title>0x7f6a694f0e7a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="527" y="324" width="4" height="15" fill="rgb(227,50,41)"/><text x="530.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.38%)</title><rect x="536" y="260" width="5" height="15" fill="rgb(235,160,17)"/><text x="539.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (3 samples, 1.15%)</title><rect x="531" y="244" width="14" height="15" fill="rgb(218,173,35)"/><text x="534.00" y="254.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.38%)</title><rect x="541" y="260" width="4" height="15" fill="rgb(233,78,4)"/><text x="544.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.38%)</title><rect x="545" y="244" width="5" height="15" fill="rgb(234,63,53)"/><text x="548.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.38%)</title><rect x="545" y="260" width="5" height="15" fill="rgb(216,79,36)"/><text x="548.00" y="270.50"></text></g><g><title>array_sum (methods.c:2215) (9 samples, 3.46%)</title><rect x="513" y="180" width="41" height="15" fill="rgb(212,114,40)"/><text x="516.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 3.46%)</title><rect x="513" y="196" width="41" height="15" fill="rgb(254,185,22)"/><text x="516.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 3.08%)</title><rect x="518" y="212" width="36" height="15" fill="rgb(210,191,33)"/><text x="521.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.92%)</title><rect x="531" y="228" width="23" height="15" fill="rgb(252,170,22)"/><text x="534.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.38%)</title><rect x="550" y="244" width="4" height="15" fill="rgb(215,200,29)"/><text x="553.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.38%)</title><rect x="550" y="260" width="4" height="15" fill="rgb(217,102,39)"/><text x="553.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.38%)</title><rect x="550" y="276" width="4" height="15" fill="rgb(229,184,16)"/><text x="553.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.38%)</title><rect x="550" y="292" width="4" height="15" fill="rgb(241,211,26)"/><text x="553.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.38%)</title><rect x="550" y="308" width="4" height="15" fill="rgb(231,225,54)"/><text x="553.00" y="318.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.38%)</title><rect x="550" y="324" width="4" height="15" fill="rgb(244,99,8)"/><text x="553.00" y="334.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.38%)</title><rect x="554" y="212" width="5" height="15" fill="rgb(251,116,52)"/><text x="557.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.77%)</title><rect x="554" y="196" width="9" height="15" fill="rgb(242,104,24)"/><text x="557.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1965) (1 samples, 0.38%)</title><rect x="559" y="212" width="4" height="15" fill="rgb(223,95,8)"/><text x="562.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.77%)</title><rect x="563" y="228" width="9" height="15" fill="rgb(215,155,7)"/><text x="566.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (2 samples, 0.77%)</title><rect x="563" y="244" width="9" height="15" fill="rgb(227,79,51)"/><text x="566.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="568" y="260" width="4" height="15" fill="rgb(210,179,8)"/><text x="571.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:38) (124 samples, 47.69%)</title><rect x="14" y="52" width="563" height="15" fill="rgb(238,217,30)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:37) (124 samples, 47.69%)</title><rect x="14" y="68" width="563" height="15" fill="rgb(236,105,27)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:29) (124 samples, 47.69%)</title><rect x="14" y="84" width="563" height="15" fill="rgb(248,169,21)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_5..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:23) (119 samples, 45.77%)</title><rect x="37" y="100" width="540" height="15" fill="rgb(217,16,8)"/><text x="40.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 45.38%)</title><rect x="41" y="116" width="536" height="15" fill="rgb(209,30,34)"/><text x="44.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (116 samples, 44.62%)</title><rect x="50" y="132" width="527" height="15" fill="rgb(249,214,34)"/><text x="53.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (105 samples, 40.38%)</title><rect x="100" y="148" width="477" height="15" fill="rgb(220,182,1)"/><text x="103.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (16 samples, 6.15%)</title><rect x="504" y="164" width="73" height="15" fill="rgb(234,213,46)"/><text x="507.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.92%)</title><rect x="554" y="180" width="23" height="15" fill="rgb(246,18,37)"/><text x="557.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.15%)</title><rect x="563" y="196" width="14" height="15" fill="rgb(222,88,40)"/><text x="566.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.15%)</title><rect x="563" y="212" width="14" height="15" fill="rgb(232,12,17)"/><text x="566.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.38%)</title><rect x="572" y="228" width="5" height="15" fill="rgb(218,169,38)"/><text x="575.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:305) (1 samples, 0.38%)</title><rect x="572" y="244" width="5" height="15" fill="rgb(233,37,17)"/><text x="575.00" y="254.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (1 samples, 0.38%)</title><rect x="577" y="148" width="4" height="15" fill="rgb(224,110,9)"/><text x="580.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="577" y="164" width="4" height="15" fill="rgb(206,197,19)"/><text x="580.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="577" y="180" width="4" height="15" fill="rgb(240,190,37)"/><text x="580.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="577" y="196" width="4" height="15" fill="rgb(215,110,46)"/><text x="580.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="577" y="212" width="4" height="15" fill="rgb(247,11,22)"/><text x="580.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="577" y="228" width="4" height="15" fill="rgb(251,160,33)"/><text x="580.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.38%)</title><rect x="577" y="244" width="4" height="15" fill="rgb(227,65,26)"/><text x="580.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="577" y="260" width="4" height="15" fill="rgb(249,133,6)"/><text x="580.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="577" y="276" width="4" height="15" fill="rgb(222,22,47)"/><text x="580.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="577" y="292" width="4" height="15" fill="rgb(217,55,54)"/><text x="580.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="577" y="308" width="4" height="15" fill="rgb(215,26,9)"/><text x="580.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="577" y="324" width="4" height="15" fill="rgb(212,14,1)"/><text x="580.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="577" y="340" width="4" height="15" fill="rgb(236,13,33)"/><text x="580.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="577" y="356" width="4" height="15" fill="rgb(213,77,8)"/><text x="580.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.38%)</title><rect x="577" y="372" width="4" height="15" fill="rgb(238,37,50)"/><text x="580.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="577" y="388" width="4" height="15" fill="rgb(231,75,45)"/><text x="580.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="577" y="404" width="4" height="15" fill="rgb(207,186,51)"/><text x="580.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="577" y="420" width="4" height="15" fill="rgb(219,179,16)"/><text x="580.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="577" y="436" width="4" height="15" fill="rgb(224,5,11)"/><text x="580.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="577" y="452" width="4" height="15" fill="rgb(231,216,53)"/><text x="580.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.38%)</title><rect x="577" y="468" width="4" height="15" fill="rgb(219,140,37)"/><text x="580.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="577" y="484" width="4" height="15" fill="rgb(213,152,1)"/><text x="580.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="577" y="500" width="4" height="15" fill="rgb(235,132,51)"/><text x="580.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="577" y="516" width="4" height="15" fill="rgb(253,28,31)"/><text x="580.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.38%)</title><rect x="577" y="532" width="4" height="15" fill="rgb(220,95,27)"/><text x="580.00" y="542.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.38%)</title><rect x="577" y="548" width="4" height="15" fill="rgb(231,96,19)"/><text x="580.00" y="558.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.38%)</title><rect x="577" y="564" width="4" height="15" fill="rgb(217,1,44)"/><text x="580.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:15) (1 samples, 0.38%)</title><rect x="581" y="292" width="5" height="15" fill="rgb(247,62,5)"/><text x="584.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="581" y="308" width="5" height="15" fill="rgb(230,117,7)"/><text x="584.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="581" y="324" width="5" height="15" fill="rgb(242,207,37)"/><text x="584.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="581" y="340" width="5" height="15" fill="rgb(216,62,12)"/><text x="584.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="581" y="356" width="5" height="15" fill="rgb(213,223,28)"/><text x="584.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="581" y="372" width="5" height="15" fill="rgb(206,82,0)"/><text x="584.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/helper.py:14) (1 samples, 0.38%)</title><rect x="581" y="388" width="5" height="15" fill="rgb(207,140,41)"/><text x="584.00" y="398.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:208) (1 samples, 0.38%)</title><rect x="581" y="404" width="5" height="15" fill="rgb(239,67,47)"/><text x="584.00" y="414.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.77%)</title><rect x="586" y="852" width="9" height="15" fill="rgb(236,59,45)"/><text x="589.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.77%)</title><rect x="586" y="868" width="9" height="15" fill="rgb(206,183,53)"/><text x="589.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.77%)</title><rect x="586" y="884" width="9" height="15" fill="rgb(220,48,43)"/><text x="589.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.77%)</title><rect x="586" y="900" width="9" height="15" fill="rgb(227,54,51)"/><text x="589.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.77%)</title><rect x="586" y="916" width="9" height="15" fill="rgb(220,33,36)"/><text x="589.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.77%)</title><rect x="586" y="932" width="9" height="15" fill="rgb(217,66,15)"/><text x="589.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.38%)</title><rect x="590" y="948" width="5" height="15" fill="rgb(249,8,39)"/><text x="593.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.38%)</title><rect x="590" y="964" width="5" height="15" fill="rgb(219,161,35)"/><text x="593.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.38%)</title><rect x="590" y="980" width="5" height="15" fill="rgb(209,90,35)"/><text x="593.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.38%)</title><rect x="590" y="996" width="5" height="15" fill="rgb(219,104,29)"/><text x="593.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:351) (1 samples, 0.38%)</title><rect x="590" y="1012" width="5" height="15" fill="rgb(218,135,49)"/><text x="593.00" y="1022.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2191) (1 samples, 0.38%)</title><rect x="595" y="916" width="5" height="15" fill="rgb(226,116,23)"/><text x="598.00" y="926.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.77%)</title><rect x="595" y="852" width="9" height="15" fill="rgb(211,47,51)"/><text x="598.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.77%)</title><rect x="595" y="868" width="9" height="15" fill="rgb(245,51,53)"/><text x="598.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.77%)</title><rect x="595" y="884" width="9" height="15" fill="rgb(220,99,47)"/><text x="598.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.77%)</title><rect x="595" y="900" width="9" height="15" fill="rgb(218,68,12)"/><text x="598.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.38%)</title><rect x="600" y="916" width="4" height="15" fill="rgb(214,213,25)"/><text x="603.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.38%)</title><rect x="600" y="932" width="4" height="15" fill="rgb(245,8,7)"/><text x="603.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.38%)</title><rect x="600" y="948" width="4" height="15" fill="rgb(225,19,42)"/><text x="603.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.38%)</title><rect x="600" y="964" width="4" height="15" fill="rgb(240,131,51)"/><text x="603.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.38%)</title><rect x="600" y="980" width="4" height="15" fill="rgb(205,127,33)"/><text x="603.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (6 samples, 2.31%)</title><rect x="581" y="148" width="28" height="15" fill="rgb(240,105,5)"/><text x="584.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.31%)</title><rect x="581" y="164" width="28" height="15" fill="rgb(225,62,20)"/><text x="584.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.31%)</title><rect x="581" y="180" width="28" height="15" fill="rgb(239,35,28)"/><text x="584.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.31%)</title><rect x="581" y="196" width="28" height="15" fill="rgb(232,61,2)"/><text x="584.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.31%)</title><rect x="581" y="212" width="28" height="15" fill="rgb(212,209,3)"/><text x="584.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.31%)</title><rect x="581" y="228" width="28" height="15" fill="rgb(220,222,16)"/><text x="584.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.31%)</title><rect x="581" y="244" width="28" height="15" fill="rgb(210,24,33)"/><text x="584.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.31%)</title><rect x="581" y="260" width="28" height="15" fill="rgb(215,36,23)"/><text x="584.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.31%)</title><rect x="581" y="276" width="28" height="15" fill="rgb(246,1,41)"/><text x="584.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.92%)</title><rect x="586" y="292" width="23" height="15" fill="rgb(218,172,5)"/><text x="589.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="586" y="308" width="23" height="15" fill="rgb(232,192,42)"/><text x="589.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="586" y="324" width="23" height="15" fill="rgb(207,6,47)"/><text x="589.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="586" y="340" width="23" height="15" fill="rgb(225,83,53)"/><text x="589.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="586" y="356" width="23" height="15" fill="rgb(213,106,48)"/><text x="589.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="586" y="372" width="23" height="15" fill="rgb(238,65,7)"/><text x="589.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.92%)</title><rect x="586" y="388" width="23" height="15" fill="rgb(218,190,44)"/><text x="589.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="586" y="404" width="23" height="15" fill="rgb(234,36,46)"/><text x="589.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="586" y="420" width="23" height="15" fill="rgb(231,130,28)"/><text x="589.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="586" y="436" width="23" height="15" fill="rgb(207,194,0)"/><text x="589.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="586" y="452" width="23" height="15" fill="rgb(251,170,47)"/><text x="589.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="586" y="468" width="23" height="15" fill="rgb(222,101,37)"/><text x="589.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.92%)</title><rect x="586" y="484" width="23" height="15" fill="rgb(214,116,46)"/><text x="589.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="586" y="500" width="23" height="15" fill="rgb(236,211,31)"/><text x="589.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="586" y="516" width="23" height="15" fill="rgb(228,0,7)"/><text x="589.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="586" y="532" width="23" height="15" fill="rgb(214,106,36)"/><text x="589.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="586" y="548" width="23" height="15" fill="rgb(223,95,46)"/><text x="589.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="586" y="564" width="23" height="15" fill="rgb(236,19,48)"/><text x="589.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.92%)</title><rect x="586" y="580" width="23" height="15" fill="rgb(222,94,32)"/><text x="589.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="586" y="596" width="23" height="15" fill="rgb(206,109,13)"/><text x="589.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.92%)</title><rect x="586" y="612" width="23" height="15" fill="rgb(211,212,40)"/><text x="589.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="586" y="628" width="23" height="15" fill="rgb(248,68,50)"/><text x="589.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="586" y="644" width="23" height="15" fill="rgb(247,171,25)"/><text x="589.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="586" y="660" width="23" height="15" fill="rgb(232,164,32)"/><text x="589.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="586" y="676" width="23" height="15" fill="rgb(230,105,28)"/><text x="589.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="586" y="692" width="23" height="15" fill="rgb(207,50,36)"/><text x="589.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="586" y="708" width="23" height="15" fill="rgb(243,159,47)"/><text x="589.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.92%)</title><rect x="586" y="724" width="23" height="15" fill="rgb(240,69,40)"/><text x="589.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="586" y="740" width="23" height="15" fill="rgb(223,154,1)"/><text x="589.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="586" y="756" width="23" height="15" fill="rgb(251,228,35)"/><text x="589.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="586" y="772" width="23" height="15" fill="rgb(246,15,49)"/><text x="589.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="586" y="788" width="23" height="15" fill="rgb(216,125,52)"/><text x="589.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="586" y="804" width="23" height="15" fill="rgb(236,80,26)"/><text x="589.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.92%)</title><rect x="586" y="820" width="23" height="15" fill="rgb(244,13,34)"/><text x="589.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.92%)</title><rect x="586" y="836" width="23" height="15" fill="rgb(207,216,7)"/><text x="589.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.38%)</title><rect x="604" y="852" width="5" height="15" fill="rgb(219,28,53)"/><text x="607.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.38%)</title><rect x="604" y="868" width="5" height="15" fill="rgb(233,78,9)"/><text x="607.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.38%)</title><rect x="604" y="884" width="5" height="15" fill="rgb(231,1,21)"/><text x="607.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.38%)</title><rect x="604" y="900" width="5" height="15" fill="rgb(233,113,50)"/><text x="607.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.38%)</title><rect x="604" y="916" width="5" height="15" fill="rgb(215,73,46)"/><text x="607.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.38%)</title><rect x="604" y="932" width="5" height="15" fill="rgb(219,72,54)"/><text x="607.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.38%)</title><rect x="604" y="948" width="5" height="15" fill="rgb(253,174,53)"/><text x="607.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.38%)</title><rect x="604" y="964" width="5" height="15" fill="rgb(212,182,30)"/><text x="607.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.38%)</title><rect x="604" y="980" width="5" height="15" fill="rgb(218,10,35)"/><text x="607.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="609" y="180" width="4" height="15" fill="rgb(209,120,34)"/><text x="612.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="196" width="4" height="15" fill="rgb(205,129,9)"/><text x="612.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="212" width="4" height="15" fill="rgb(234,118,2)"/><text x="612.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="228" width="4" height="15" fill="rgb(230,9,36)"/><text x="612.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="244" width="4" height="15" fill="rgb(221,122,2)"/><text x="612.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="260" width="4" height="15" fill="rgb(206,84,16)"/><text x="612.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="276" width="4" height="15" fill="rgb(212,11,26)"/><text x="612.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.38%)</title><rect x="609" y="292" width="4" height="15" fill="rgb(232,182,51)"/><text x="612.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="308" width="4" height="15" fill="rgb(206,189,24)"/><text x="612.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="324" width="4" height="15" fill="rgb(208,173,34)"/><text x="612.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="340" width="4" height="15" fill="rgb(249,82,3)"/><text x="612.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="356" width="4" height="15" fill="rgb(231,41,29)"/><text x="612.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="372" width="4" height="15" fill="rgb(236,128,4)"/><text x="612.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.38%)</title><rect x="609" y="388" width="4" height="15" fill="rgb(245,169,35)"/><text x="612.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="404" width="4" height="15" fill="rgb(230,53,34)"/><text x="612.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="420" width="4" height="15" fill="rgb(243,189,24)"/><text x="612.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="436" width="4" height="15" fill="rgb(224,3,19)"/><text x="612.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="452" width="4" height="15" fill="rgb(223,10,38)"/><text x="612.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="468" width="4" height="15" fill="rgb(245,114,28)"/><text x="612.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.38%)</title><rect x="609" y="484" width="4" height="15" fill="rgb(221,196,28)"/><text x="612.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="609" y="500" width="4" height="15" fill="rgb(223,96,1)"/><text x="612.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="516" width="4" height="15" fill="rgb(245,63,3)"/><text x="612.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="532" width="4" height="15" fill="rgb(237,108,7)"/><text x="612.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="548" width="4" height="15" fill="rgb(237,221,38)"/><text x="612.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="564" width="4" height="15" fill="rgb(207,27,39)"/><text x="612.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="580" width="4" height="15" fill="rgb(208,156,22)"/><text x="612.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="596" width="4" height="15" fill="rgb(229,221,49)"/><text x="612.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.38%)</title><rect x="609" y="612" width="4" height="15" fill="rgb(253,113,33)"/><text x="612.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="628" width="4" height="15" fill="rgb(219,54,33)"/><text x="612.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="644" width="4" height="15" fill="rgb(221,47,33)"/><text x="612.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="660" width="4" height="15" fill="rgb(239,118,28)"/><text x="612.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="676" width="4" height="15" fill="rgb(218,3,43)"/><text x="612.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="692" width="4" height="15" fill="rgb(224,175,8)"/><text x="612.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.38%)</title><rect x="609" y="708" width="4" height="15" fill="rgb(248,154,13)"/><text x="612.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="724" width="4" height="15" fill="rgb(232,108,31)"/><text x="612.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="740" width="4" height="15" fill="rgb(210,116,41)"/><text x="612.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="756" width="4" height="15" fill="rgb(208,49,47)"/><text x="612.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="772" width="4" height="15" fill="rgb(209,122,23)"/><text x="612.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="788" width="4" height="15" fill="rgb(216,95,44)"/><text x="612.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.38%)</title><rect x="609" y="804" width="4" height="15" fill="rgb(230,97,4)"/><text x="612.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="820" width="4" height="15" fill="rgb(222,7,35)"/><text x="612.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="836" width="4" height="15" fill="rgb(250,193,14)"/><text x="612.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="852" width="4" height="15" fill="rgb(233,168,14)"/><text x="612.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="868" width="4" height="15" fill="rgb(245,56,35)"/><text x="612.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="884" width="4" height="15" fill="rgb(235,76,42)"/><text x="612.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.38%)</title><rect x="609" y="900" width="4" height="15" fill="rgb(217,73,14)"/><text x="612.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="916" width="4" height="15" fill="rgb(216,184,18)"/><text x="612.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="932" width="4" height="15" fill="rgb(221,122,39)"/><text x="612.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="948" width="4" height="15" fill="rgb(210,101,42)"/><text x="612.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="964" width="4" height="15" fill="rgb(233,209,46)"/><text x="612.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="980" width="4" height="15" fill="rgb(251,152,52)"/><text x="612.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.38%)</title><rect x="609" y="996" width="4" height="15" fill="rgb(227,199,24)"/><text x="612.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="1012" width="4" height="15" fill="rgb(217,114,48)"/><text x="612.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="609" y="1028" width="4" height="15" fill="rgb(239,138,15)"/><text x="612.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="1044" width="4" height="15" fill="rgb(211,175,13)"/><text x="612.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="1060" width="4" height="15" fill="rgb(206,135,27)"/><text x="612.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="1076" width="4" height="15" fill="rgb(236,216,3)"/><text x="612.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="1092" width="4" height="15" fill="rgb(215,117,27)"/><text x="612.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="1108" width="4" height="15" fill="rgb(217,181,7)"/><text x="612.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="1124" width="4" height="15" fill="rgb(208,105,33)"/><text x="612.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.38%)</title><rect x="609" y="1140" width="4" height="15" fill="rgb(247,162,4)"/><text x="612.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="1156" width="4" height="15" fill="rgb(214,183,32)"/><text x="612.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="1172" width="4" height="15" fill="rgb(222,39,30)"/><text x="612.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="1188" width="4" height="15" fill="rgb(210,126,27)"/><text x="612.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="1204" width="4" height="15" fill="rgb(243,69,0)"/><text x="612.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="1220" width="4" height="15" fill="rgb(245,176,9)"/><text x="612.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.38%)</title><rect x="609" y="1236" width="4" height="15" fill="rgb(236,86,51)"/><text x="612.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="1252" width="4" height="15" fill="rgb(215,95,51)"/><text x="612.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="1268" width="4" height="15" fill="rgb(247,207,40)"/><text x="612.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="1284" width="4" height="15" fill="rgb(232,2,42)"/><text x="612.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="1300" width="4" height="15" fill="rgb(231,177,47)"/><text x="612.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="1316" width="4" height="15" fill="rgb(212,216,28)"/><text x="612.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.38%)</title><rect x="609" y="1332" width="4" height="15" fill="rgb(208,124,51)"/><text x="612.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="1348" width="4" height="15" fill="rgb(208,9,52)"/><text x="612.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="1364" width="4" height="15" fill="rgb(247,104,45)"/><text x="612.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="1380" width="4" height="15" fill="rgb(206,79,28)"/><text x="612.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="1396" width="4" height="15" fill="rgb(230,139,40)"/><text x="612.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="1412" width="4" height="15" fill="rgb(212,148,27)"/><text x="612.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.38%)</title><rect x="609" y="1428" width="4" height="15" fill="rgb(232,98,3)"/><text x="612.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="609" y="1444" width="4" height="15" fill="rgb(248,131,19)"/><text x="612.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="609" y="1460" width="4" height="15" fill="rgb(230,123,19)"/><text x="612.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="609" y="1476" width="4" height="15" fill="rgb(235,80,25)"/><text x="612.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="609" y="1492" width="4" height="15" fill="rgb(239,224,8)"/><text x="612.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="609" y="1508" width="4" height="15" fill="rgb(248,93,29)"/><text x="612.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:1738) (1 samples, 0.38%)</title><rect x="609" y="1524" width="4" height="15" fill="rgb(217,17,20)"/><text x="612.00" y="1534.50"></text></g><g><title>cpu_times (psutil/__init__.py:1732) (1 samples, 0.38%)</title><rect x="609" y="1540" width="4" height="15" fill="rgb(210,9,6)"/><text x="612.00" y="1550.50"></text></g><g><title>cpu_times (psutil/_pslinux.py:566) (1 samples, 0.38%)</title><rect x="609" y="1556" width="4" height="15" fill="rgb(233,49,14)"/><text x="612.00" y="1566.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (2 samples, 0.77%)</title><rect x="609" y="148" width="9" height="15" fill="rgb(241,128,1)"/><text x="612.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="609" y="164" width="9" height="15" fill="rgb(242,183,3)"/><text x="612.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="613" y="180" width="5" height="15" fill="rgb(247,109,38)"/><text x="616.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="613" y="196" width="5" height="15" fill="rgb(236,189,9)"/><text x="616.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="613" y="212" width="5" height="15" fill="rgb(208,219,44)"/><text x="616.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="613" y="228" width="5" height="15" fill="rgb(219,142,9)"/><text x="616.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:23) (1 samples, 0.38%)</title><rect x="613" y="244" width="5" height="15" fill="rgb(221,62,29)"/><text x="616.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="613" y="260" width="5" height="15" fill="rgb(205,223,43)"/><text x="616.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.38%)</title><rect x="613" y="276" width="5" height="15" fill="rgb(232,18,0)"/><text x="616.00" y="286.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.38%)</title><rect x="613" y="292" width="5" height="15" fill="rgb(221,185,40)"/><text x="616.00" y="302.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.38%)</title><rect x="613" y="308" width="5" height="15" fill="rgb(234,99,24)"/><text x="616.00" y="318.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.38%)</title><rect x="613" y="324" width="5" height="15" fill="rgb(248,118,6)"/><text x="616.00" y="334.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.38%)</title><rect x="613" y="340" width="5" height="15" fill="rgb(224,31,18)"/><text x="616.00" y="350.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.38%)</title><rect x="613" y="356" width="5" height="15" fill="rgb(207,144,37)"/><text x="616.00" y="366.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="613" y="372" width="5" height="15" fill="rgb(220,95,9)"/><text x="616.00" y="382.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 1.54%)</title><rect x="618" y="724" width="18" height="15" fill="rgb(254,163,7)"/><text x="621.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.54%)</title><rect x="618" y="740" width="18" height="15" fill="rgb(252,15,42)"/><text x="621.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.54%)</title><rect x="618" y="756" width="18" height="15" fill="rgb(242,170,44)"/><text x="621.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.54%)</title><rect x="618" y="772" width="18" height="15" fill="rgb(228,62,11)"/><text x="621.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.54%)</title><rect x="618" y="788" width="18" height="15" fill="rgb(215,46,2)"/><text x="621.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.54%)</title><rect x="618" y="804" width="18" height="15" fill="rgb(207,94,8)"/><text x="621.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 1.54%)</title><rect x="618" y="820" width="18" height="15" fill="rgb(250,142,24)"/><text x="621.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.54%)</title><rect x="618" y="836" width="18" height="15" fill="rgb(215,14,18)"/><text x="621.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.54%)</title><rect x="618" y="852" width="18" height="15" fill="rgb(232,47,26)"/><text x="621.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.54%)</title><rect x="618" y="868" width="18" height="15" fill="rgb(221,170,1)"/><text x="621.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.54%)</title><rect x="618" y="884" width="18" height="15" fill="rgb(236,163,21)"/><text x="621.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.54%)</title><rect x="618" y="900" width="18" height="15" fill="rgb(223,191,39)"/><text x="621.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (4 samples, 1.54%)</title><rect x="618" y="916" width="18" height="15" fill="rgb(243,218,16)"/><text x="621.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.54%)</title><rect x="618" y="932" width="18" height="15" fill="rgb(231,81,27)"/><text x="621.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.54%)</title><rect x="618" y="948" width="18" height="15" fill="rgb(236,125,9)"/><text x="621.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.54%)</title><rect x="618" y="964" width="18" height="15" fill="rgb(225,62,22)"/><text x="621.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.54%)</title><rect x="618" y="980" width="18" height="15" fill="rgb(233,33,33)"/><text x="621.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.54%)</title><rect x="618" y="996" width="18" height="15" fill="rgb(228,197,38)"/><text x="621.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (4 samples, 1.54%)</title><rect x="618" y="1012" width="18" height="15" fill="rgb(231,126,0)"/><text x="621.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.54%)</title><rect x="618" y="1028" width="18" height="15" fill="rgb(235,152,36)"/><text x="621.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.54%)</title><rect x="618" y="1044" width="18" height="15" fill="rgb(216,82,22)"/><text x="621.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.54%)</title><rect x="618" y="1060" width="18" height="15" fill="rgb(212,47,30)"/><text x="621.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (4 samples, 1.54%)</title><rect x="618" y="1076" width="18" height="15" fill="rgb(247,177,22)"/><text x="621.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (4 samples, 1.54%)</title><rect x="618" y="1092" width="18" height="15" fill="rgb(236,5,49)"/><text x="621.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (4 samples, 1.54%)</title><rect x="618" y="1108" width="18" height="15" fill="rgb(246,97,1)"/><text x="621.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 1.92%)</title><rect x="618" y="436" width="22" height="15" fill="rgb(243,196,31)"/><text x="621.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="618" y="452" width="22" height="15" fill="rgb(218,14,37)"/><text x="621.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="618" y="468" width="22" height="15" fill="rgb(248,42,22)"/><text x="621.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="618" y="484" width="22" height="15" fill="rgb(228,192,17)"/><text x="621.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="618" y="500" width="22" height="15" fill="rgb(239,162,23)"/><text x="621.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="618" y="516" width="22" height="15" fill="rgb(247,127,44)"/><text x="621.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 1.92%)</title><rect x="618" y="532" width="22" height="15" fill="rgb(228,158,10)"/><text x="621.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="618" y="548" width="22" height="15" fill="rgb(221,169,24)"/><text x="621.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="618" y="564" width="22" height="15" fill="rgb(247,205,35)"/><text x="621.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="618" y="580" width="22" height="15" fill="rgb(253,144,4)"/><text x="621.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="618" y="596" width="22" height="15" fill="rgb(226,70,6)"/><text x="621.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="618" y="612" width="22" height="15" fill="rgb(244,222,52)"/><text x="621.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 1.92%)</title><rect x="618" y="628" width="22" height="15" fill="rgb(206,212,18)"/><text x="621.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.92%)</title><rect x="618" y="644" width="22" height="15" fill="rgb(245,45,21)"/><text x="621.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.92%)</title><rect x="618" y="660" width="22" height="15" fill="rgb(234,152,33)"/><text x="621.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.92%)</title><rect x="618" y="676" width="22" height="15" fill="rgb(243,23,42)"/><text x="621.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.92%)</title><rect x="618" y="692" width="22" height="15" fill="rgb(243,15,2)"/><text x="621.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.92%)</title><rect x="618" y="708" width="22" height="15" fill="rgb(232,43,21)"/><text x="621.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.38%)</title><rect x="636" y="724" width="4" height="15" fill="rgb(237,4,13)"/><text x="639.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="740" width="4" height="15" fill="rgb(241,103,44)"/><text x="639.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.38%)</title><rect x="636" y="756" width="4" height="15" fill="rgb(250,199,4)"/><text x="639.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="772" width="4" height="15" fill="rgb(209,132,48)"/><text x="639.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="788" width="4" height="15" fill="rgb(253,177,13)"/><text x="639.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="636" y="804" width="4" height="15" fill="rgb(249,5,37)"/><text x="639.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="636" y="820" width="4" height="15" fill="rgb(236,121,13)"/><text x="639.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="636" y="836" width="4" height="15" fill="rgb(247,18,42)"/><text x="639.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="852" width="4" height="15" fill="rgb(246,162,35)"/><text x="639.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.38%)</title><rect x="636" y="868" width="4" height="15" fill="rgb(240,123,36)"/><text x="639.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="884" width="4" height="15" fill="rgb(223,56,38)"/><text x="639.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="636" y="900" width="4" height="15" fill="rgb(227,106,31)"/><text x="639.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="636" y="916" width="4" height="15" fill="rgb(236,105,54)"/><text x="639.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="636" y="932" width="4" height="15" fill="rgb(230,195,51)"/><text x="639.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="948" width="4" height="15" fill="rgb(244,50,6)"/><text x="639.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.38%)</title><rect x="636" y="964" width="4" height="15" fill="rgb(230,212,38)"/><text x="639.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="980" width="4" height="15" fill="rgb(223,118,12)"/><text x="639.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="636" y="996" width="4" height="15" fill="rgb(234,37,45)"/><text x="639.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="636" y="1012" width="4" height="15" fill="rgb(243,12,51)"/><text x="639.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="636" y="1028" width="4" height="15" fill="rgb(220,79,15)"/><text x="639.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="1044" width="4" height="15" fill="rgb(223,96,47)"/><text x="639.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:74) (1 samples, 0.38%)</title><rect x="636" y="1060" width="4" height="15" fill="rgb(251,177,39)"/><text x="639.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="636" y="1076" width="4" height="15" fill="rgb(210,97,47)"/><text x="639.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="636" y="1092" width="4" height="15" fill="rgb(239,195,36)"/><text x="639.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="636" y="1108" width="4" height="15" fill="rgb(246,114,53)"/><text x="639.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="636" y="1124" width="4" height="15" fill="rgb(217,108,9)"/><text x="639.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="636" y="1140" width="4" height="15" fill="rgb(249,13,24)"/><text x="639.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/strings.py:1904) (1 samples, 0.38%)</title><rect x="636" y="1156" width="4" height="15" fill="rgb(207,101,2)"/><text x="639.00" y="1166.50"></text></g><g><title>StringMethods (pandas/core/strings.py:2763) (1 samples, 0.38%)</title><rect x="636" y="1172" width="4" height="15" fill="rgb(245,40,36)"/><text x="639.00" y="1182.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.38%)</title><rect x="636" y="1188" width="4" height="15" fill="rgb(221,208,11)"/><text x="639.00" y="1198.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.38%)</title><rect x="636" y="1204" width="4" height="15" fill="rgb(247,25,50)"/><text x="639.00" y="1214.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.38%)</title><rect x="636" y="1220" width="4" height="15" fill="rgb(238,228,5)"/><text x="639.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.38%)</title><rect x="640" y="1236" width="5" height="15" fill="rgb(231,228,45)"/><text x="643.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.38%)</title><rect x="640" y="1252" width="5" height="15" fill="rgb(209,90,38)"/><text x="643.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1268" width="5" height="15" fill="rgb(253,228,0)"/><text x="643.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="640" y="1284" width="5" height="15" fill="rgb(245,81,48)"/><text x="643.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="640" y="1300" width="5" height="15" fill="rgb(224,131,4)"/><text x="643.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="640" y="1316" width="5" height="15" fill="rgb(235,75,33)"/><text x="643.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="640" y="1332" width="5" height="15" fill="rgb(244,58,1)"/><text x="643.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1348" width="5" height="15" fill="rgb(227,150,48)"/><text x="643.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.38%)</title><rect x="640" y="1364" width="5" height="15" fill="rgb(243,12,3)"/><text x="643.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.38%)</title><rect x="640" y="1380" width="5" height="15" fill="rgb(237,136,23)"/><text x="643.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.38%)</title><rect x="640" y="1396" width="5" height="15" fill="rgb(208,98,17)"/><text x="643.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="640" y="1412" width="5" height="15" fill="rgb(221,30,14)"/><text x="643.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.38%)</title><rect x="640" y="1428" width="5" height="15" fill="rgb(213,218,30)"/><text x="643.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.38%)</title><rect x="640" y="1444" width="5" height="15" fill="rgb(243,76,43)"/><text x="643.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.38%)</title><rect x="640" y="1460" width="5" height="15" fill="rgb(228,188,30)"/><text x="643.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.38%)</title><rect x="640" y="1476" width="5" height="15" fill="rgb(249,4,51)"/><text x="643.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.38%)</title><rect x="640" y="1492" width="5" height="15" fill="rgb(223,199,46)"/><text x="643.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.38%)</title><rect x="640" y="1508" width="5" height="15" fill="rgb(248,214,32)"/><text x="643.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:4) (16 samples, 6.15%)</title><rect x="577" y="52" width="72" height="15" fill="rgb(213,226,53)"/><text x="580.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 6.15%)</title><rect x="577" y="68" width="72" height="15" fill="rgb(210,139,24)"/><text x="580.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 6.15%)</title><rect x="577" y="84" width="72" height="15" fill="rgb(215,157,1)"/><text x="580.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 6.15%)</title><rect x="577" y="100" width="72" height="15" fill="rgb(233,71,5)"/><text x="580.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 6.15%)</title><rect x="577" y="116" width="72" height="15" fill="rgb(219,150,2)"/><text x="580.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 6.15%)</title><rect x="577" y="132" width="72" height="15" fill="rgb(215,159,50)"/><text x="580.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (7 samples, 2.69%)</title><rect x="618" y="148" width="31" height="15" fill="rgb(213,15,10)"/><text x="621.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.69%)</title><rect x="618" y="164" width="31" height="15" fill="rgb(205,210,8)"/><text x="621.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.69%)</title><rect x="618" y="180" width="31" height="15" fill="rgb(246,148,16)"/><text x="621.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.69%)</title><rect x="618" y="196" width="31" height="15" fill="rgb(254,55,52)"/><text x="621.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.69%)</title><rect x="618" y="212" width="31" height="15" fill="rgb(235,41,17)"/><text x="621.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.69%)</title><rect x="618" y="228" width="31" height="15" fill="rgb(234,28,22)"/><text x="621.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 2.69%)</title><rect x="618" y="244" width="31" height="15" fill="rgb(219,48,51)"/><text x="621.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.69%)</title><rect x="618" y="260" width="31" height="15" fill="rgb(211,126,51)"/><text x="621.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.69%)</title><rect x="618" y="276" width="31" height="15" fill="rgb(221,168,34)"/><text x="621.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.69%)</title><rect x="618" y="292" width="31" height="15" fill="rgb(224,19,46)"/><text x="621.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.69%)</title><rect x="618" y="308" width="31" height="15" fill="rgb(223,164,47)"/><text x="621.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.69%)</title><rect x="618" y="324" width="31" height="15" fill="rgb(228,206,35)"/><text x="621.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 2.69%)</title><rect x="618" y="340" width="31" height="15" fill="rgb(241,123,11)"/><text x="621.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.69%)</title><rect x="618" y="356" width="31" height="15" fill="rgb(205,216,41)"/><text x="621.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.69%)</title><rect x="618" y="372" width="31" height="15" fill="rgb(229,172,27)"/><text x="621.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.69%)</title><rect x="618" y="388" width="31" height="15" fill="rgb(225,123,45)"/><text x="621.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.69%)</title><rect x="618" y="404" width="31" height="15" fill="rgb(210,36,26)"/><text x="621.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.69%)</title><rect x="618" y="420" width="31" height="15" fill="rgb(250,106,30)"/><text x="621.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.77%)</title><rect x="640" y="436" width="9" height="15" fill="rgb(246,98,12)"/><text x="643.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="452" width="9" height="15" fill="rgb(208,56,4)"/><text x="643.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.77%)</title><rect x="640" y="468" width="9" height="15" fill="rgb(208,115,23)"/><text x="643.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="484" width="9" height="15" fill="rgb(240,45,44)"/><text x="643.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="500" width="9" height="15" fill="rgb(239,5,47)"/><text x="643.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="516" width="9" height="15" fill="rgb(237,24,30)"/><text x="643.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="532" width="9" height="15" fill="rgb(221,91,10)"/><text x="643.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="548" width="9" height="15" fill="rgb(249,148,22)"/><text x="643.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="564" width="9" height="15" fill="rgb(251,112,4)"/><text x="643.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.77%)</title><rect x="640" y="580" width="9" height="15" fill="rgb(209,208,46)"/><text x="643.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="596" width="9" height="15" fill="rgb(215,81,17)"/><text x="643.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="612" width="9" height="15" fill="rgb(247,71,37)"/><text x="643.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="628" width="9" height="15" fill="rgb(235,3,49)"/><text x="643.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="644" width="9" height="15" fill="rgb(213,43,5)"/><text x="643.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="660" width="9" height="15" fill="rgb(241,159,12)"/><text x="643.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.77%)</title><rect x="640" y="676" width="9" height="15" fill="rgb(206,32,44)"/><text x="643.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="692" width="9" height="15" fill="rgb(233,133,42)"/><text x="643.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="708" width="9" height="15" fill="rgb(237,18,24)"/><text x="643.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="724" width="9" height="15" fill="rgb(254,190,7)"/><text x="643.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="740" width="9" height="15" fill="rgb(253,75,9)"/><text x="643.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="756" width="9" height="15" fill="rgb(222,55,13)"/><text x="643.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.77%)</title><rect x="640" y="772" width="9" height="15" fill="rgb(229,88,16)"/><text x="643.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="788" width="9" height="15" fill="rgb(247,43,50)"/><text x="643.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="804" width="9" height="15" fill="rgb(225,103,14)"/><text x="643.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="820" width="9" height="15" fill="rgb(245,78,20)"/><text x="643.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="836" width="9" height="15" fill="rgb(209,129,43)"/><text x="643.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="852" width="9" height="15" fill="rgb(236,142,22)"/><text x="643.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.77%)</title><rect x="640" y="868" width="9" height="15" fill="rgb(224,32,18)"/><text x="643.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="884" width="9" height="15" fill="rgb(222,224,22)"/><text x="643.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.77%)</title><rect x="640" y="900" width="9" height="15" fill="rgb(239,112,37)"/><text x="643.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="916" width="9" height="15" fill="rgb(244,72,23)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="932" width="9" height="15" fill="rgb(223,199,39)"/><text x="643.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="948" width="9" height="15" fill="rgb(241,130,1)"/><text x="643.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="964" width="9" height="15" fill="rgb(216,49,32)"/><text x="643.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="980" width="9" height="15" fill="rgb(250,0,18)"/><text x="643.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="996" width="9" height="15" fill="rgb(207,74,6)"/><text x="643.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.77%)</title><rect x="640" y="1012" width="9" height="15" fill="rgb(228,156,32)"/><text x="643.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="1028" width="9" height="15" fill="rgb(209,184,52)"/><text x="643.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="1044" width="9" height="15" fill="rgb(210,8,32)"/><text x="643.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="1060" width="9" height="15" fill="rgb(223,49,48)"/><text x="643.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="1076" width="9" height="15" fill="rgb(229,218,39)"/><text x="643.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="1092" width="9" height="15" fill="rgb(242,204,28)"/><text x="643.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.77%)</title><rect x="640" y="1108" width="9" height="15" fill="rgb(206,88,3)"/><text x="643.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.77%)</title><rect x="640" y="1124" width="9" height="15" fill="rgb(249,153,31)"/><text x="643.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="1140" width="9" height="15" fill="rgb(211,31,27)"/><text x="643.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="640" y="1156" width="9" height="15" fill="rgb(229,213,6)"/><text x="643.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="640" y="1172" width="9" height="15" fill="rgb(222,67,51)"/><text x="643.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="640" y="1188" width="9" height="15" fill="rgb(218,118,27)"/><text x="643.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="640" y="1204" width="9" height="15" fill="rgb(238,1,5)"/><text x="643.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="640" y="1220" width="9" height="15" fill="rgb(211,156,11)"/><text x="643.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:40) (1 samples, 0.38%)</title><rect x="645" y="1236" width="4" height="15" fill="rgb(227,148,5)"/><text x="648.00" y="1246.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:208) (1 samples, 0.38%)</title><rect x="645" y="1252" width="4" height="15" fill="rgb(214,214,23)"/><text x="648.00" y="1262.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:104) (1 samples, 0.38%)</title><rect x="645" y="1268" width="4" height="15" fill="rgb(239,228,52)"/><text x="648.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.38%)</title><rect x="649" y="436" width="5" height="15" fill="rgb(234,106,28)"/><text x="652.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.38%)</title><rect x="649" y="452" width="5" height="15" fill="rgb(252,53,14)"/><text x="652.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.38%)</title><rect x="649" y="468" width="5" height="15" fill="rgb(242,33,37)"/><text x="652.00" y="478.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.38%)</title><rect x="649" y="484" width="5" height="15" fill="rgb(226,55,21)"/><text x="652.00" y="494.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.38%)</title><rect x="649" y="500" width="5" height="15" fill="rgb(243,112,29)"/><text x="652.00" y="510.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.38%)</title><rect x="649" y="516" width="5" height="15" fill="rgb(223,151,49)"/><text x="652.00" y="526.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.38%)</title><rect x="649" y="532" width="5" height="15" fill="rgb(228,97,22)"/><text x="652.00" y="542.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.38%)</title><rect x="649" y="548" width="5" height="15" fill="rgb(210,57,20)"/><text x="652.00" y="558.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:28) (2 samples, 0.77%)</title><rect x="649" y="84" width="10" height="15" fill="rgb(226,2,15)"/><text x="652.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.77%)</title><rect x="649" y="100" width="10" height="15" fill="rgb(233,19,35)"/><text x="652.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.77%)</title><rect x="649" y="116" width="10" height="15" fill="rgb(249,177,48)"/><text x="652.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.77%)</title><rect x="649" y="132" width="10" height="15" fill="rgb(209,52,2)"/><text x="652.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.77%)</title><rect x="649" y="148" width="10" height="15" fill="rgb(223,2,20)"/><text x="652.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.77%)</title><rect x="649" y="164" width="10" height="15" fill="rgb(245,29,46)"/><text x="652.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.77%)</title><rect x="649" y="180" width="10" height="15" fill="rgb(223,128,0)"/><text x="652.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.77%)</title><rect x="649" y="196" width="10" height="15" fill="rgb(211,67,3)"/><text x="652.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="649" y="212" width="10" height="15" fill="rgb(248,156,19)"/><text x="652.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="649" y="228" width="10" height="15" fill="rgb(220,198,39)"/><text x="652.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="649" y="244" width="10" height="15" fill="rgb(219,185,26)"/><text x="652.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="649" y="260" width="10" height="15" fill="rgb(242,115,18)"/><text x="652.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="649" y="276" width="10" height="15" fill="rgb(254,128,3)"/><text x="652.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.77%)</title><rect x="649" y="292" width="10" height="15" fill="rgb(243,80,5)"/><text x="652.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="649" y="308" width="10" height="15" fill="rgb(245,167,54)"/><text x="652.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="649" y="324" width="10" height="15" fill="rgb(210,207,48)"/><text x="652.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.77%)</title><rect x="649" y="340" width="10" height="15" fill="rgb(233,184,24)"/><text x="652.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.77%)</title><rect x="649" y="356" width="10" height="15" fill="rgb(224,188,34)"/><text x="652.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.77%)</title><rect x="649" y="372" width="10" height="15" fill="rgb(212,81,26)"/><text x="652.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:26) (2 samples, 0.77%)</title><rect x="649" y="388" width="10" height="15" fill="rgb(237,188,49)"/><text x="652.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.77%)</title><rect x="649" y="404" width="10" height="15" fill="rgb(205,63,7)"/><text x="652.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.77%)</title><rect x="649" y="420" width="10" height="15" fill="rgb(230,50,15)"/><text x="652.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.38%)</title><rect x="654" y="436" width="5" height="15" fill="rgb(252,86,3)"/><text x="657.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="663" y="116" width="5" height="15" fill="rgb(221,210,42)"/><text x="666.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="663" y="132" width="5" height="15" fill="rgb(234,217,47)"/><text x="666.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.38%)</title><rect x="663" y="148" width="5" height="15" fill="rgb(248,17,12)"/><text x="666.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (4 samples, 1.54%)</title><rect x="677" y="148" width="18" height="15" fill="rgb(240,172,21)"/><text x="680.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (3 samples, 1.15%)</title><rect x="699" y="164" width="14" height="15" fill="rgb(230,45,53)"/><text x="702.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.38%)</title><rect x="713" y="164" width="5" height="15" fill="rgb(253,134,1)"/><text x="716.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.54%)</title><rect x="727" y="180" width="18" height="15" fill="rgb(250,68,54)"/><text x="730.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="758" y="260" width="5" height="15" fill="rgb(207,94,6)"/><text x="761.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.38%)</title><rect x="758" y="276" width="5" height="15" fill="rgb(207,21,7)"/><text x="761.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.38%)</title><rect x="758" y="292" width="5" height="15" fill="rgb(231,164,31)"/><text x="761.00" y="302.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.38%)</title><rect x="763" y="260" width="4" height="15" fill="rgb(233,71,48)"/><text x="766.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.38%)</title><rect x="763" y="276" width="4" height="15" fill="rgb(231,183,39)"/><text x="766.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.38%)</title><rect x="763" y="292" width="4" height="15" fill="rgb(210,196,28)"/><text x="766.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="763" y="308" width="4" height="15" fill="rgb(241,189,43)"/><text x="766.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.38%)</title><rect x="763" y="324" width="4" height="15" fill="rgb(209,192,20)"/><text x="766.00" y="334.50"></text></g><g><title>0x7f6a695b8151 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="767" y="404" width="5" height="15" fill="rgb(231,74,37)"/><text x="770.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.77%)</title><rect x="767" y="388" width="10" height="15" fill="rgb(219,115,4)"/><text x="770.00" y="398.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.38%)</title><rect x="772" y="404" width="5" height="15" fill="rgb(254,5,25)"/><text x="775.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.15%)</title><rect x="767" y="308" width="14" height="15" fill="rgb(219,13,53)"/><text x="770.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.15%)</title><rect x="767" y="324" width="14" height="15" fill="rgb(210,149,46)"/><text x="770.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.15%)</title><rect x="767" y="340" width="14" height="15" fill="rgb(251,227,10)"/><text x="770.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 1.15%)</title><rect x="767" y="356" width="14" height="15" fill="rgb(220,12,43)"/><text x="770.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 1.15%)</title><rect x="767" y="372" width="14" height="15" fill="rgb(226,92,42)"/><text x="770.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.38%)</title><rect x="777" y="388" width="4" height="15" fill="rgb(231,102,20)"/><text x="780.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="781" y="420" width="5" height="15" fill="rgb(212,124,3)"/><text x="784.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.38%)</title><rect x="781" y="436" width="5" height="15" fill="rgb(254,223,24)"/><text x="784.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.77%)</title><rect x="781" y="356" width="9" height="15" fill="rgb(234,48,37)"/><text x="784.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.77%)</title><rect x="781" y="372" width="9" height="15" fill="rgb(234,201,48)"/><text x="784.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.77%)</title><rect x="781" y="388" width="9" height="15" fill="rgb(219,110,40)"/><text x="784.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.77%)</title><rect x="781" y="404" width="9" height="15" fill="rgb(245,191,53)"/><text x="784.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.38%)</title><rect x="786" y="420" width="4" height="15" fill="rgb(238,183,36)"/><text x="789.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.38%)</title><rect x="786" y="436" width="4" height="15" fill="rgb(208,95,30)"/><text x="789.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.38%)</title><rect x="786" y="452" width="4" height="15" fill="rgb(205,203,15)"/><text x="789.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="786" y="468" width="4" height="15" fill="rgb(247,83,50)"/><text x="789.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.38%)</title><rect x="790" y="356" width="5" height="15" fill="rgb(219,89,18)"/><text x="793.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.38%)</title><rect x="790" y="372" width="5" height="15" fill="rgb(241,42,3)"/><text x="793.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.38%)</title><rect x="795" y="372" width="4" height="15" fill="rgb(222,224,37)"/><text x="798.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.38%)</title><rect x="795" y="388" width="4" height="15" fill="rgb(234,115,6)"/><text x="798.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.38%)</title><rect x="795" y="404" width="4" height="15" fill="rgb(253,147,2)"/><text x="798.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.38%)</title><rect x="799" y="372" width="5" height="15" fill="rgb(240,21,18)"/><text x="802.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.38%)</title><rect x="799" y="388" width="5" height="15" fill="rgb(251,149,42)"/><text x="802.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.38%)</title><rect x="804" y="372" width="4" height="15" fill="rgb(235,194,44)"/><text x="807.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.38%)</title><rect x="804" y="388" width="4" height="15" fill="rgb(246,6,18)"/><text x="807.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 1.54%)</title><rect x="795" y="356" width="18" height="15" fill="rgb(239,67,41)"/><text x="798.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.38%)</title><rect x="808" y="372" width="5" height="15" fill="rgb(216,165,43)"/><text x="811.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2169) (1 samples, 0.38%)</title><rect x="808" y="388" width="5" height="15" fill="rgb(246,119,21)"/><text x="811.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 3.08%)</title><rect x="781" y="308" width="36" height="15" fill="rgb(209,228,27)"/><text x="784.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 3.08%)</title><rect x="781" y="324" width="36" height="15" fill="rgb(212,3,52)"/><text x="784.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 3.08%)</title><rect x="781" y="340" width="36" height="15" fill="rgb(207,177,49)"/><text x="784.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.38%)</title><rect x="813" y="356" width="4" height="15" fill="rgb(206,28,31)"/><text x="816.00" y="366.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.38%)</title><rect x="813" y="372" width="4" height="15" fill="rgb(211,84,11)"/><text x="816.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:804) (1 samples, 0.38%)</title><rect x="813" y="388" width="4" height="15" fill="rgb(235,53,32)"/><text x="816.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 4.62%)</title><rect x="767" y="260" width="55" height="15" fill="rgb(206,222,13)"/><text x="770.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 4.62%)</title><rect x="767" y="276" width="55" height="15" fill="rgb(254,132,28)"/><text x="770.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 4.62%)</title><rect x="767" y="292" width="55" height="15" fill="rgb(210,153,40)"/><text x="770.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5522) (1 samples, 0.38%)</title><rect x="817" y="308" width="5" height="15" fill="rgb(220,35,17)"/><text x="820.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.38%)</title><rect x="822" y="276" width="4" height="15" fill="rgb(254,56,40)"/><text x="825.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.38%)</title><rect x="822" y="292" width="4" height="15" fill="rgb(242,27,9)"/><text x="825.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.77%)</title><rect x="822" y="260" width="9" height="15" fill="rgb(224,146,8)"/><text x="825.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.38%)</title><rect x="826" y="276" width="5" height="15" fill="rgb(248,21,16)"/><text x="829.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.38%)</title><rect x="826" y="292" width="5" height="15" fill="rgb(208,44,48)"/><text x="829.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.38%)</title><rect x="826" y="308" width="5" height="15" fill="rgb(247,186,7)"/><text x="829.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.38%)</title><rect x="826" y="324" width="5" height="15" fill="rgb(228,227,52)"/><text x="829.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.38%)</title><rect x="826" y="340" width="5" height="15" fill="rgb(208,185,46)"/><text x="829.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.38%)</title><rect x="826" y="356" width="5" height="15" fill="rgb(253,38,8)"/><text x="829.00" y="366.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (19 samples, 7.31%)</title><rect x="749" y="244" width="87" height="15" fill="rgb(228,21,51)"/><text x="752.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.38%)</title><rect x="831" y="260" width="5" height="15" fill="rgb(223,28,49)"/><text x="834.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.38%)</title><rect x="831" y="276" width="5" height="15" fill="rgb(206,102,14)"/><text x="834.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.38%)</title><rect x="831" y="292" width="5" height="15" fill="rgb(215,164,51)"/><text x="834.00" y="302.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.38%)</title><rect x="836" y="292" width="4" height="15" fill="rgb(206,223,17)"/><text x="839.00" y="302.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1165) (1 samples, 0.38%)</title><rect x="836" y="308" width="4" height="15" fill="rgb(224,219,11)"/><text x="839.00" y="318.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.38%)</title><rect x="836" y="324" width="4" height="15" fill="rgb(242,89,26)"/><text x="839.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.77%)</title><rect x="836" y="276" width="9" height="15" fill="rgb(222,148,27)"/><text x="839.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.38%)</title><rect x="840" y="292" width="5" height="15" fill="rgb(241,28,38)"/><text x="843.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.38%)</title><rect x="845" y="276" width="4" height="15" fill="rgb(222,119,12)"/><text x="848.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1299) (1 samples, 0.38%)</title><rect x="845" y="292" width="4" height="15" fill="rgb(212,126,25)"/><text x="848.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.38%)</title><rect x="849" y="308" width="5" height="15" fill="rgb(225,63,51)"/><text x="852.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.38%)</title><rect x="849" y="324" width="5" height="15" fill="rgb(239,6,39)"/><text x="852.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:777) (1 samples, 0.38%)</title><rect x="849" y="340" width="5" height="15" fill="rgb(205,105,16)"/><text x="852.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.77%)</title><rect x="849" y="276" width="9" height="15" fill="rgb(231,4,53)"/><text x="852.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.77%)</title><rect x="849" y="292" width="9" height="15" fill="rgb(205,32,18)"/><text x="852.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.38%)</title><rect x="854" y="308" width="4" height="15" fill="rgb(228,171,18)"/><text x="857.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.38%)</title><rect x="854" y="324" width="4" height="15" fill="rgb(242,73,27)"/><text x="857.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (26 samples, 10.00%)</title><rect x="745" y="196" width="118" height="15" fill="rgb(242,21,41)"/><text x="748.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (26 samples, 10.00%)</title><rect x="745" y="212" width="118" height="15" fill="rgb(212,112,28)"/><text x="748.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (26 samples, 10.00%)</title><rect x="745" y="228" width="118" height="15" fill="rgb(225,103,36)"/><text x="748.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (6 samples, 2.31%)</title><rect x="836" y="244" width="27" height="15" fill="rgb(251,154,6)"/><text x="839.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.31%)</title><rect x="836" y="260" width="27" height="15" fill="rgb(222,70,52)"/><text x="839.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.38%)</title><rect x="858" y="276" width="5" height="15" fill="rgb(207,43,34)"/><text x="861.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:38) (1 samples, 0.38%)</title><rect x="872" y="228" width="4" height="15" fill="rgb(250,171,34)"/><text x="875.00" y="238.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.38%)</title><rect x="890" y="308" width="5" height="15" fill="rgb(211,225,29)"/><text x="893.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.38%)</title><rect x="890" y="324" width="5" height="15" fill="rgb(220,50,26)"/><text x="893.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.38%)</title><rect x="890" y="340" width="5" height="15" fill="rgb(253,180,0)"/><text x="893.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.38%)</title><rect x="895" y="324" width="4" height="15" fill="rgb(233,217,14)"/><text x="898.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.38%)</title><rect x="895" y="340" width="4" height="15" fill="rgb(243,109,42)"/><text x="898.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.38%)</title><rect x="895" y="356" width="4" height="15" fill="rgb(217,138,0)"/><text x="898.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1116) (1 samples, 0.38%)</title><rect x="895" y="372" width="4" height="15" fill="rgb(221,191,2)"/><text x="898.00" y="382.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:578) (1 samples, 0.38%)</title><rect x="899" y="324" width="5" height="15" fill="rgb(214,133,17)"/><text x="902.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="899" y="340" width="5" height="15" fill="rgb(205,124,11)"/><text x="902.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.54%)</title><rect x="890" y="276" width="18" height="15" fill="rgb(243,142,30)"/><text x="893.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.54%)</title><rect x="890" y="292" width="18" height="15" fill="rgb(229,162,46)"/><text x="893.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.15%)</title><rect x="895" y="308" width="13" height="15" fill="rgb(229,184,11)"/><text x="898.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.38%)</title><rect x="904" y="324" width="4" height="15" fill="rgb(237,201,6)"/><text x="907.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:74) (1 samples, 0.38%)</title><rect x="904" y="340" width="4" height="15" fill="rgb(244,205,24)"/><text x="907.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (8 samples, 3.08%)</title><rect x="876" y="228" width="37" height="15" fill="rgb(209,125,18)"/><text x="879.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 2.69%)</title><rect x="881" y="244" width="32" height="15" fill="rgb(210,151,8)"/><text x="884.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 2.31%)</title><rect x="885" y="260" width="28" height="15" fill="rgb(222,157,16)"/><text x="888.00" y="270.50">d..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.38%)</title><rect x="908" y="276" width="5" height="15" fill="rgb(245,131,29)"/><text x="911.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.38%)</title><rect x="908" y="292" width="5" height="15" fill="rgb(229,24,5)"/><text x="911.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.38%)</title><rect x="908" y="308" width="5" height="15" fill="rgb(226,207,43)"/><text x="911.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:40) (1 samples, 0.38%)</title><rect x="913" y="228" width="4" height="15" fill="rgb(242,3,22)"/><text x="916.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (1 samples, 0.38%)</title><rect x="917" y="228" width="5" height="15" fill="rgb(209,142,7)"/><text x="920.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.38%)</title><rect x="917" y="244" width="5" height="15" fill="rgb(254,104,30)"/><text x="920.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.38%)</title><rect x="917" y="260" width="5" height="15" fill="rgb(246,163,50)"/><text x="920.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.38%)</title><rect x="917" y="276" width="5" height="15" fill="rgb(220,185,44)"/><text x="920.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.38%)</title><rect x="917" y="292" width="5" height="15" fill="rgb(249,172,21)"/><text x="920.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.38%)</title><rect x="926" y="244" width="5" height="15" fill="rgb(229,1,21)"/><text x="929.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.38%)</title><rect x="926" y="260" width="5" height="15" fill="rgb(239,73,39)"/><text x="929.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:54) (1 samples, 0.38%)</title><rect x="926" y="276" width="5" height="15" fill="rgb(217,112,48)"/><text x="929.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.38%)</title><rect x="931" y="260" width="4" height="15" fill="rgb(229,108,11)"/><text x="934.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.38%)</title><rect x="931" y="276" width="4" height="15" fill="rgb(219,98,44)"/><text x="934.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (4 samples, 1.54%)</title><rect x="922" y="228" width="18" height="15" fill="rgb(205,151,4)"/><text x="925.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.77%)</title><rect x="931" y="244" width="9" height="15" fill="rgb(248,3,39)"/><text x="934.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.38%)</title><rect x="935" y="260" width="5" height="15" fill="rgb(232,77,0)"/><text x="938.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.38%)</title><rect x="935" y="276" width="5" height="15" fill="rgb(239,153,3)"/><text x="938.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.38%)</title><rect x="935" y="292" width="5" height="15" fill="rgb(219,65,48)"/><text x="938.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.38%)</title><rect x="935" y="308" width="5" height="15" fill="rgb(238,38,4)"/><text x="938.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.38%)</title><rect x="940" y="228" width="4" height="15" fill="rgb(215,43,53)"/><text x="943.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.77%)</title><rect x="954" y="292" width="9" height="15" fill="rgb(250,29,27)"/><text x="957.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.38%)</title><rect x="963" y="292" width="4" height="15" fill="rgb(242,212,36)"/><text x="966.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.38%)</title><rect x="967" y="324" width="5" height="15" fill="rgb(215,208,19)"/><text x="970.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.38%)</title><rect x="967" y="340" width="5" height="15" fill="rgb(216,17,15)"/><text x="970.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.38%)</title><rect x="967" y="356" width="5" height="15" fill="rgb(224,39,49)"/><text x="970.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.38%)</title><rect x="967" y="372" width="5" height="15" fill="rgb(228,72,51)"/><text x="970.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (51 samples, 19.62%)</title><rect x="745" y="180" width="231" height="15" fill="rgb(208,67,2)"/><text x="748.00" y="190.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (25 samples, 9.62%)</title><rect x="863" y="196" width="113" height="15" fill="rgb(219,77,21)"/><text x="866.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 9.23%)</title><rect x="867" y="212" width="109" height="15" fill="rgb(224,83,46)"/><text x="870.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 2.69%)</title><rect x="944" y="228" width="32" height="15" fill="rgb(224,198,22)"/><text x="947.00" y="238.50">_r..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 2.31%)</title><rect x="949" y="244" width="27" height="15" fill="rgb(234,47,23)"/><text x="952.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.31%)</title><rect x="949" y="260" width="27" height="15" fill="rgb(235,170,0)"/><text x="952.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 2.31%)</title><rect x="949" y="276" width="27" height="15" fill="rgb(212,34,16)"/><text x="952.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.77%)</title><rect x="967" y="292" width="9" height="15" fill="rgb(226,35,27)"/><text x="970.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.77%)</title><rect x="967" y="308" width="9" height="15" fill="rgb(239,166,10)"/><text x="970.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.38%)</title><rect x="972" y="324" width="4" height="15" fill="rgb(252,182,44)"/><text x="975.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="972" y="340" width="4" height="15" fill="rgb(232,14,36)"/><text x="975.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 1.15%)</title><rect x="976" y="180" width="14" height="15" fill="rgb(241,107,31)"/><text x="979.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.38%)</title><rect x="990" y="180" width="4" height="15" fill="rgb(236,68,3)"/><text x="993.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (64 samples, 24.62%)</title><rect x="718" y="164" width="290" height="15" fill="rgb(231,110,21)"/><text x="721.00" y="174.50">_run_sequence_runtime (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 1.15%)</title><rect x="994" y="180" width="14" height="15" fill="rgb(218,214,10)"/><text x="997.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (76 samples, 29.23%)</title><rect x="668" y="132" width="345" height="15" fill="rgb(242,176,20)"/><text x="671.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (70 samples, 26.92%)</title><rect x="695" y="148" width="318" height="15" fill="rgb(221,198,52)"/><text x="698.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:40..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.38%)</title><rect x="1008" y="164" width="5" height="15" fill="rgb(233,142,50)"/><text x="1011.00" y="174.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.38%)</title><rect x="1013" y="132" width="4" height="15" fill="rgb(240,186,27)"/><text x="1016.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:45) (82 samples, 31.54%)</title><rect x="649" y="52" width="373" height="15" fill="rgb(226,168,48)"/><text x="652.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:44) (82 samples, 31.54%)</title><rect x="649" y="68" width="373" height="15" fill="rgb(249,153,54)"/><text x="652.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:29) (80 samples, 30.77%)</title><rect x="659" y="84" width="363" height="15" fill="rgb(240,29,40)"/><text x="662.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:23) (80 samples, 30.77%)</title><rect x="659" y="100" width="363" height="15" fill="rgb(222,94,41)"/><text x="662.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (78 samples, 30.00%)</title><rect x="668" y="116" width="354" height="15" fill="rgb(212,195,45)"/><text x="671.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.38%)</title><rect x="1017" y="132" width="5" height="15" fill="rgb(237,71,25)"/><text x="1020.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.38%)</title><rect x="1022" y="116" width="4" height="15" fill="rgb(212,170,11)"/><text x="1025.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.38%)</title><rect x="1022" y="132" width="4" height="15" fill="rgb(242,112,26)"/><text x="1025.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.38%)</title><rect x="1044" y="196" width="5" height="15" fill="rgb(222,11,52)"/><text x="1047.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.38%)</title><rect x="1049" y="196" width="4" height="15" fill="rgb(244,71,36)"/><text x="1052.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.38%)</title><rect x="1049" y="212" width="4" height="15" fill="rgb(220,195,50)"/><text x="1052.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1049" y="228" width="4" height="15" fill="rgb(235,107,43)"/><text x="1052.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1049" y="244" width="4" height="15" fill="rgb(233,44,7)"/><text x="1052.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1049" y="260" width="4" height="15" fill="rgb(235,41,48)"/><text x="1052.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1049" y="276" width="4" height="15" fill="rgb(238,93,37)"/><text x="1052.00" y="286.50"></text></g><g><title>0x7f6a2954aff9 (?) (1 samples, 0.38%)</title><rect x="1058" y="212" width="4" height="15" fill="rgb(220,119,42)"/><text x="1061.00" y="222.50"></text></g><g><title>0x7f6a29545ef6 (?) (1 samples, 0.38%)</title><rect x="1058" y="228" width="4" height="15" fill="rgb(244,191,29)"/><text x="1061.00" y="238.50"></text></g><g><title>0x7f6a2953ad49 (?) (1 samples, 0.38%)</title><rect x="1058" y="244" width="4" height="15" fill="rgb(254,118,52)"/><text x="1061.00" y="254.50"></text></g><g><title>0x7f6a29548c1a (?) (1 samples, 0.38%)</title><rect x="1058" y="260" width="4" height="15" fill="rgb(254,124,26)"/><text x="1061.00" y="270.50"></text></g><g><title>0x7f6a2996de0e (?) (1 samples, 0.38%)</title><rect x="1058" y="276" width="4" height="15" fill="rgb(225,213,34)"/><text x="1061.00" y="286.50"></text></g><g><title>0x7f6a299b0f6e (?) (1 samples, 0.38%)</title><rect x="1058" y="292" width="4" height="15" fill="rgb(253,52,29)"/><text x="1061.00" y="302.50"></text></g><g><title>0x7f6a29964d3d (?) (1 samples, 0.38%)</title><rect x="1058" y="308" width="4" height="15" fill="rgb(208,33,41)"/><text x="1061.00" y="318.50"></text></g><g><title>0x7f6a29964860 (?) (1 samples, 0.38%)</title><rect x="1058" y="324" width="4" height="15" fill="rgb(211,73,44)"/><text x="1061.00" y="334.50"></text></g><g><title>0x7f6a2996474c (?) (1 samples, 0.38%)</title><rect x="1058" y="340" width="4" height="15" fill="rgb(232,70,4)"/><text x="1061.00" y="350.50"></text></g><g><title>0x7f6a2996443a (?) (1 samples, 0.38%)</title><rect x="1058" y="356" width="4" height="15" fill="rgb(223,180,48)"/><text x="1061.00" y="366.50"></text></g><g><title>0x7f6a29964184 (?) (1 samples, 0.38%)</title><rect x="1058" y="372" width="4" height="15" fill="rgb(252,47,45)"/><text x="1061.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1062" y="228" width="5" height="15" fill="rgb(211,114,29)"/><text x="1065.00" y="238.50"></text></g><g><title>0x7f6a58fa6d50 (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1062" y="244" width="5" height="15" fill="rgb(211,194,18)"/><text x="1065.00" y="254.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1081" y="292" width="4" height="15" fill="rgb(217,19,24)"/><text x="1084.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1081" y="308" width="4" height="15" fill="rgb(243,188,37)"/><text x="1084.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1081" y="324" width="4" height="15" fill="rgb(210,196,7)"/><text x="1084.00" y="334.50"></text></g><g><title>0x7f6a694fad97 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1085" y="308" width="5" height="15" fill="rgb(250,159,52)"/><text x="1088.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1085" y="292" width="9" height="15" fill="rgb(220,205,4)"/><text x="1088.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1090" y="308" width="4" height="15" fill="rgb(221,28,28)"/><text x="1093.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1094" y="292" width="5" height="15" fill="rgb(226,103,28)"/><text x="1097.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1094" y="308" width="5" height="15" fill="rgb(229,132,32)"/><text x="1097.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1103" y="356" width="5" height="15" fill="rgb(228,214,6)"/><text x="1106.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1108" y="356" width="9" height="15" fill="rgb(220,10,52)"/><text x="1111.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1108" y="372" width="9" height="15" fill="rgb(242,110,16)"/><text x="1111.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1108" y="388" width="9" height="15" fill="rgb(244,184,14)"/><text x="1111.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1108" y="404" width="9" height="15" fill="rgb(233,164,52)"/><text x="1111.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1108" y="420" width="9" height="15" fill="rgb(242,44,54)"/><text x="1111.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1108" y="436" width="9" height="15" fill="rgb(245,56,4)"/><text x="1111.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1112" y="452" width="5" height="15" fill="rgb(213,43,39)"/><text x="1115.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1112" y="468" width="5" height="15" fill="rgb(253,132,4)"/><text x="1115.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1112" y="484" width="5" height="15" fill="rgb(245,30,14)"/><text x="1115.00" y="494.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.92%)</title><rect x="1099" y="292" width="22" height="15" fill="rgb(230,143,36)"/><text x="1102.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.92%)</title><rect x="1099" y="308" width="22" height="15" fill="rgb(250,196,22)"/><text x="1102.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.92%)</title><rect x="1099" y="324" width="22" height="15" fill="rgb(226,93,36)"/><text x="1102.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.92%)</title><rect x="1099" y="340" width="22" height="15" fill="rgb(227,117,26)"/><text x="1102.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1117" y="356" width="4" height="15" fill="rgb(209,7,42)"/><text x="1120.00" y="366.50"></text></g><g><title>0x7f6a69659e00 (libm-2.29.so) (1 samples, 0.38%)</title><rect x="1117" y="372" width="4" height="15" fill="rgb(216,85,11)"/><text x="1120.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.23%)</title><rect x="1076" y="260" width="50" height="15" fill="rgb(242,27,24)"/><text x="1079.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.85%)</title><rect x="1081" y="276" width="45" height="15" fill="rgb(243,220,53)"/><text x="1084.00" y="286.50">onnx..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1121" y="292" width="5" height="15" fill="rgb(219,194,31)"/><text x="1124.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1126" y="260" width="5" height="15" fill="rgb(243,110,39)"/><text x="1129.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.38%)</title><rect x="1131" y="276" width="4" height="15" fill="rgb(236,28,50)"/><text x="1134.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.38%)</title><rect x="1131" y="292" width="4" height="15" fill="rgb(222,122,17)"/><text x="1134.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1131" y="260" width="9" height="15" fill="rgb(221,215,45)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.38%)</title><rect x="1135" y="276" width="5" height="15" fill="rgb(214,213,0)"/><text x="1138.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.38%)</title><rect x="1135" y="292" width="5" height="15" fill="rgb(252,92,3)"/><text x="1138.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1135" y="308" width="5" height="15" fill="rgb(234,40,15)"/><text x="1138.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1140" y="260" width="4" height="15" fill="rgb(245,77,4)"/><text x="1143.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1140" y="276" width="4" height="15" fill="rgb(224,118,30)"/><text x="1143.00" y="286.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1144" y="260" width="5" height="15" fill="rgb(234,78,0)"/><text x="1147.00" y="270.50"></text></g><g><title>0x7f6a694da965 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1149" y="276" width="4" height="15" fill="rgb(223,130,32)"/><text x="1152.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.69%)</title><rect x="1067" y="244" width="91" height="15" fill="rgb(233,79,14)"/><text x="1070.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.77%)</title><rect x="1149" y="260" width="9" height="15" fill="rgb(213,168,6)"/><text x="1152.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="276" width="5" height="15" fill="rgb(233,21,31)"/><text x="1156.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="292" width="5" height="15" fill="rgb(243,119,15)"/><text x="1156.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="308" width="5" height="15" fill="rgb(235,148,43)"/><text x="1156.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="324" width="5" height="15" fill="rgb(234,135,23)"/><text x="1156.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="340" width="5" height="15" fill="rgb(236,90,25)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="356" width="5" height="15" fill="rgb(218,8,8)"/><text x="1156.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1153" y="372" width="5" height="15" fill="rgb(208,221,35)"/><text x="1156.00" y="382.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1158" y="244" width="4" height="15" fill="rgb(246,101,12)"/><text x="1161.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="1158" y="260" width="4" height="15" fill="rgb(239,63,31)"/><text x="1161.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (25 samples, 9.62%)</title><rect x="1053" y="196" width="114" height="15" fill="rgb(245,40,27)"/><text x="1056.00" y="206.50">run (onnxrunti..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 8.85%)</title><rect x="1062" y="212" width="105" height="15" fill="rgb(213,28,2)"/><text x="1065.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 8.46%)</title><rect x="1067" y="228" width="100" height="15" fill="rgb(251,129,20)"/><text x="1070.00" y="238.50">void pybind1..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.38%)</title><rect x="1162" y="244" width="5" height="15" fill="rgb(212,32,51)"/><text x="1165.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (30 samples, 11.54%)</title><rect x="1035" y="164" width="136" height="15" fill="rgb(249,187,52)"/><text x="1038.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (29 samples, 11.15%)</title><rect x="1040" y="180" width="131" height="15" fill="rgb(228,198,20)"/><text x="1043.00" y="190.50">run (mlprodict/o..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.38%)</title><rect x="1167" y="196" width="4" height="15" fill="rgb(253,81,3)"/><text x="1170.00" y="206.50"></text></g><g><title>all (260 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,176,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:52) (37 samples, 14.23%)</title><rect x="1022" y="52" width="168" height="15" fill="rgb(229,155,4)"/><text x="1025.00" y="62.50">&lt;module&gt; (bench_Logis..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:51) (37 samples, 14.23%)</title><rect x="1022" y="68" width="168" height="15" fill="rgb(228,182,51)"/><text x="1025.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:29) (37 samples, 14.23%)</title><rect x="1022" y="84" width="168" height="15" fill="rgb(245,134,49)"/><text x="1025.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py:23) (37 samples, 14.23%)</title><rect x="1022" y="100" width="168" height="15" fill="rgb(243,203,33)"/><text x="1025.00" y="110.50">profile (bench_Logist..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (36 samples, 13.85%)</title><rect x="1026" y="116" width="164" height="15" fill="rgb(236,145,54)"/><text x="1029.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (35 samples, 13.46%)</title><rect x="1031" y="132" width="159" height="15" fill="rgb(212,213,21)"/><text x="1034.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (34 samples, 13.08%)</title><rect x="1035" y="148" width="155" height="15" fill="rgb(252,187,16)"/><text x="1038.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 1.54%)</title><rect x="1171" y="164" width="19" height="15" fill="rgb(237,19,23)"/><text x="1174.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.77%)</title><rect x="1180" y="180" width="10" height="15" fill="rgb(210,102,43)"/><text x="1183.00" y="190.50"></text></g></g></svg>