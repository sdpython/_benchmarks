<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1638" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1621.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1621.00"> </text><g id="frames"><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.25%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(253,33,44)"/><text x="13.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.25%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(249,199,50)"/><text x="13.00" y="206.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (2 samples, 0.51%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(212,229,49)"/><text x="13.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (2 samples, 0.51%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(236,162,50)"/><text x="13.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.25%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(252,188,40)"/><text x="15.00" y="190.50"></text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:18) (3 samples, 0.76%)</title><rect x="10" y="100" width="8" height="15" fill="rgb(241,145,15)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.76%)</title><rect x="10" y="116" width="8" height="15" fill="rgb(209,26,48)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.76%)</title><rect x="10" y="132" width="8" height="15" fill="rgb(241,168,38)"/><text x="13.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:641) (1 samples, 0.25%)</title><rect x="15" y="148" width="3" height="15" fill="rgb(242,222,31)"/><text x="18.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="33" y="116" width="3" height="15" fill="rgb(235,162,16)"/><text x="36.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="33" y="132" width="3" height="15" fill="rgb(238,85,40)"/><text x="36.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.25%)</title><rect x="33" y="148" width="3" height="15" fill="rgb(219,32,23)"/><text x="36.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.51%)</title><rect x="51" y="180" width="6" height="15" fill="rgb(207,137,28)"/><text x="54.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.25%)</title><rect x="54" y="196" width="3" height="15" fill="rgb(252,55,35)"/><text x="57.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.25%)</title><rect x="57" y="180" width="3" height="15" fill="rgb(239,181,26)"/><text x="60.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 0.76%)</title><rect x="69" y="196" width="9" height="15" fill="rgb(228,199,46)"/><text x="72.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.27%)</title><rect x="126" y="212" width="15" height="15" fill="rgb(205,124,7)"/><text x="129.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (24 samples, 6.08%)</title><rect x="78" y="196" width="72" height="15" fill="rgb(250,170,0)"/><text x="81.00" y="206.50">&lt;listcom..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.76%)</title><rect x="141" y="212" width="9" height="15" fill="rgb(225,130,41)"/><text x="144.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (40 samples, 10.13%)</title><rect x="48" y="164" width="120" height="15" fill="rgb(247,16,5)"/><text x="51.00" y="174.50">_validate_for_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (36 samples, 9.11%)</title><rect x="60" y="180" width="108" height="15" fill="rgb(237,69,30)"/><text x="63.00" y="190.50">check_is_fitt..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (6 samples, 1.52%)</title><rect x="150" y="196" width="18" height="15" fill="rgb(223,25,5)"/><text x="153.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.51%)</title><rect x="162" y="212" width="6" height="15" fill="rgb(251,165,29)"/><text x="165.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:446) (1 samples, 0.25%)</title><rect x="168" y="164" width="3" height="15" fill="rgb(222,195,19)"/><text x="171.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.51%)</title><rect x="180" y="180" width="6" height="15" fill="rgb(241,194,16)"/><text x="183.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.51%)</title><rect x="186" y="180" width="6" height="15" fill="rgb(207,110,43)"/><text x="189.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.25%)</title><rect x="192" y="180" width="3" height="15" fill="rgb(229,79,0)"/><text x="195.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (3 samples, 0.76%)</title><rect x="195" y="180" width="9" height="15" fill="rgb(234,202,36)"/><text x="198.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (3 samples, 0.76%)</title><rect x="195" y="196" width="9" height="15" fill="rgb(235,74,30)"/><text x="198.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.25%)</title><rect x="222" y="196" width="3" height="15" fill="rgb(206,228,12)"/><text x="225.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.25%)</title><rect x="225" y="196" width="3" height="15" fill="rgb(225,59,51)"/><text x="228.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 2.28%)</title><rect x="204" y="180" width="27" height="15" fill="rgb(246,36,26)"/><text x="207.00" y="190.50">c..</text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.25%)</title><rect x="228" y="196" width="3" height="15" fill="rgb(240,29,44)"/><text x="231.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 1.27%)</title><rect x="237" y="212" width="14" height="15" fill="rgb(220,216,7)"/><text x="240.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 2.03%)</title><rect x="231" y="180" width="23" height="15" fill="rgb(212,127,13)"/><text x="234.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py:179) (8 samples, 2.03%)</title><rect x="231" y="196" width="23" height="15" fill="rgb(217,47,27)"/><text x="234.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.25%)</title><rect x="251" y="212" width="3" height="15" fill="rgb(213,23,43)"/><text x="254.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.25%)</title><rect x="254" y="180" width="3" height="15" fill="rgb(243,22,0)"/><text x="257.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.25%)</title><rect x="254" y="196" width="3" height="15" fill="rgb(244,4,22)"/><text x="257.00" y="206.50"></text></g><g><title>0x7f35dd05812b (libc-2.29.so) (1 samples, 0.25%)</title><rect x="260" y="212" width="3" height="15" fill="rgb(248,121,47)"/><text x="263.00" y="222.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:320) (1 samples, 0.25%)</title><rect x="269" y="228" width="3" height="15" fill="rgb(216,142,32)"/><text x="272.00" y="238.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:330) (1 samples, 0.25%)</title><rect x="272" y="228" width="3" height="15" fill="rgb(233,65,16)"/><text x="275.00" y="238.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.25%)</title><rect x="275" y="228" width="3" height="15" fill="rgb(224,93,28)"/><text x="278.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (6 samples, 1.52%)</title><rect x="263" y="212" width="18" height="15" fill="rgb(218,99,40)"/><text x="266.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="278" y="228" width="3" height="15" fill="rgb(217,149,23)"/><text x="281.00" y="238.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.25%)</title><rect x="281" y="276" width="3" height="15" fill="rgb(242,60,43)"/><text x="284.00" y="286.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.25%)</title><rect x="281" y="292" width="3" height="15" fill="rgb(254,52,41)"/><text x="284.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.25%)</title><rect x="281" y="308" width="3" height="15" fill="rgb(235,62,18)"/><text x="284.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.25%)</title><rect x="281" y="324" width="3" height="15" fill="rgb(243,62,44)"/><text x="284.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:668) (1 samples, 0.25%)</title><rect x="281" y="340" width="3" height="15" fill="rgb(205,81,3)"/><text x="284.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.25%)</title><rect x="284" y="292" width="3" height="15" fill="rgb(241,100,14)"/><text x="287.00" y="302.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.25%)</title><rect x="284" y="308" width="3" height="15" fill="rgb(219,25,54)"/><text x="287.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:948) (1 samples, 0.25%)</title><rect x="284" y="324" width="3" height="15" fill="rgb(231,158,28)"/><text x="287.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.25%)</title><rect x="287" y="292" width="3" height="15" fill="rgb(210,203,46)"/><text x="290.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="287" y="308" width="3" height="15" fill="rgb(230,13,8)"/><text x="290.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:775) (1 samples, 0.25%)</title><rect x="290" y="324" width="3" height="15" fill="rgb(226,141,34)"/><text x="293.00" y="334.50"></text></g><g><title>0x7f35dd057d50 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="293" y="340" width="3" height="15" fill="rgb(214,38,40)"/><text x="296.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (14 samples, 3.54%)</title><rect x="257" y="180" width="42" height="15" fill="rgb(215,81,32)"/><text x="260.00" y="190.50">che..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (13 samples, 3.29%)</title><rect x="260" y="196" width="39" height="15" fill="rgb(220,208,44)"/><text x="263.00" y="206.50">asa..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (6 samples, 1.52%)</title><rect x="281" y="212" width="18" height="15" fill="rgb(225,222,29)"/><text x="284.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (6 samples, 1.52%)</title><rect x="281" y="228" width="18" height="15" fill="rgb(231,87,24)"/><text x="284.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (6 samples, 1.52%)</title><rect x="281" y="244" width="18" height="15" fill="rgb(221,113,9)"/><text x="284.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (6 samples, 1.52%)</title><rect x="281" y="260" width="18" height="15" fill="rgb(246,69,32)"/><text x="284.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 1.27%)</title><rect x="284" y="276" width="15" height="15" fill="rgb(215,94,47)"/><text x="287.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (3 samples, 0.76%)</title><rect x="290" y="292" width="9" height="15" fill="rgb(226,182,0)"/><text x="293.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (3 samples, 0.76%)</title><rect x="290" y="308" width="9" height="15" fill="rgb(229,43,34)"/><text x="293.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.51%)</title><rect x="293" y="324" width="6" height="15" fill="rgb(213,104,1)"/><text x="296.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="296" y="340" width="3" height="15" fill="rgb(224,139,19)"/><text x="299.00" y="350.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.25%)</title><rect x="308" y="196" width="3" height="15" fill="rgb(209,188,42)"/><text x="311.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.25%)</title><rect x="311" y="196" width="3" height="15" fill="rgb(206,146,1)"/><text x="314.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.25%)</title><rect x="314" y="196" width="3" height="15" fill="rgb(210,117,37)"/><text x="317.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (7 samples, 1.77%)</title><rect x="299" y="180" width="21" height="15" fill="rgb(205,214,40)"/><text x="302.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.25%)</title><rect x="317" y="196" width="3" height="15" fill="rgb(239,221,21)"/><text x="320.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.51%)</title><rect x="320" y="196" width="6" height="15" fill="rgb(249,218,0)"/><text x="323.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.76%)</title><rect x="320" y="180" width="9" height="15" fill="rgb(212,71,33)"/><text x="323.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.25%)</title><rect x="326" y="196" width="3" height="15" fill="rgb(250,43,18)"/><text x="329.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.76%)</title><rect x="341" y="212" width="9" height="15" fill="rgb(236,119,25)"/><text x="344.00" y="222.50"></text></g><g><title>0x7f35dd04de7a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="347" y="228" width="3" height="15" fill="rgb(218,95,37)"/><text x="350.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.76%)</title><rect x="350" y="212" width="9" height="15" fill="rgb(227,228,18)"/><text x="353.00" y="222.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.25%)</title><rect x="356" y="228" width="3" height="15" fill="rgb(215,190,53)"/><text x="359.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (9 samples, 2.28%)</title><rect x="335" y="196" width="27" height="15" fill="rgb(248,86,40)"/><text x="338.00" y="206.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="359" y="212" width="3" height="15" fill="rgb(240,30,42)"/><text x="362.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 3.04%)</title><rect x="329" y="180" width="36" height="15" fill="rgb(207,130,23)"/><text x="332.00" y="190.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.25%)</title><rect x="362" y="196" width="3" height="15" fill="rgb(224,32,44)"/><text x="365.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.25%)</title><rect x="362" y="212" width="3" height="15" fill="rgb(216,31,20)"/><text x="365.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.25%)</title><rect x="365" y="180" width="3" height="15" fill="rgb(212,29,21)"/><text x="368.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 1.27%)</title><rect x="368" y="196" width="15" height="15" fill="rgb(205,221,29)"/><text x="371.00" y="206.50"></text></g><g><title>0x7f35dd04de7a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="380" y="212" width="3" height="15" fill="rgb(253,18,38)"/><text x="383.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.25%)</title><rect x="383" y="196" width="3" height="15" fill="rgb(232,28,39)"/><text x="386.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.25%)</title><rect x="386" y="196" width="3" height="15" fill="rgb(209,225,38)"/><text x="389.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.25%)</title><rect x="389" y="196" width="3" height="15" fill="rgb(242,98,2)"/><text x="392.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (9 samples, 2.28%)</title><rect x="392" y="196" width="27" height="15" fill="rgb(252,201,46)"/><text x="395.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.27%)</title><rect x="404" y="212" width="15" height="15" fill="rgb(253,72,18)"/><text x="407.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.51%)</title><rect x="413" y="228" width="6" height="15" fill="rgb(234,224,23)"/><text x="416.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (18 samples, 4.56%)</title><rect x="368" y="180" width="54" height="15" fill="rgb(217,5,40)"/><text x="371.00" y="190.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.25%)</title><rect x="419" y="196" width="3" height="15" fill="rgb(239,120,43)"/><text x="422.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (85 samples, 21.52%)</title><rect x="171" y="164" width="254" height="15" fill="rgb(214,33,2)"/><text x="174.00" y="174.50">_validate_for_predict (sklearn/sv..</text></g><g><title>check_array (sklearn/utils/validation.py:598) (1 samples, 0.25%)</title><rect x="422" y="180" width="3" height="15" fill="rgb(238,148,14)"/><text x="425.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (1 samples, 0.25%)</title><rect x="425" y="164" width="3" height="15" fill="rgb(207,29,1)"/><text x="428.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.25%)</title><rect x="425" y="180" width="3" height="15" fill="rgb(248,160,14)"/><text x="428.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (128 samples, 32.41%)</title><rect x="48" y="148" width="383" height="15" fill="rgb(222,131,19)"/><text x="51.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:464) (1 samples, 0.25%)</title><rect x="428" y="164" width="3" height="15" fill="rgb(205,196,1)"/><text x="431.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:641) (2 samples, 0.51%)</title><rect x="431" y="148" width="6" height="15" fill="rgb(232,113,12)"/><text x="434.00" y="158.50"></text></g><g><title>array_size_get (getset.c:450) (1 samples, 0.25%)</title><rect x="434" y="164" width="3" height="15" fill="rgb(236,93,41)"/><text x="437.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.25%)</title><rect x="434" y="180" width="3" height="15" fill="rgb(217,73,42)"/><text x="437.00" y="190.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:682) (2 samples, 0.51%)</title><rect x="443" y="164" width="6" height="15" fill="rgb(212,161,47)"/><text x="446.00" y="174.50"></text></g><g><title>_compute_kernel (sklearn/svm/_base.py:366) (1 samples, 0.25%)</title><rect x="446" y="180" width="3" height="15" fill="rgb(240,108,37)"/><text x="449.00" y="190.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:688) (1 samples, 0.25%)</title><rect x="449" y="164" width="3" height="15" fill="rgb(253,131,30)"/><text x="452.00" y="174.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:691) (1 samples, 0.25%)</title><rect x="452" y="164" width="3" height="15" fill="rgb(241,60,41)"/><text x="455.00" y="174.50"></text></g><g><title>0x7f35b7b28012 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="467" y="180" width="3" height="15" fill="rgb(228,141,32)"/><text x="470.00" y="190.50"></text></g><g><title>0x7f35b7b283fd (?) (1 samples, 0.25%)</title><rect x="470" y="180" width="3" height="15" fill="rgb(237,195,50)"/><text x="473.00" y="190.50"></text></g><g><title>0x7f35b7b26528 (?) (1 samples, 0.25%)</title><rect x="470" y="196" width="3" height="15" fill="rgb(207,102,18)"/><text x="473.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (?) (1 samples, 0.25%)</title><rect x="470" y="212" width="3" height="15" fill="rgb(247,194,39)"/><text x="473.00" y="222.50"></text></g><g><title>_buffer_info_new (buffer.c:516) (1 samples, 0.25%)</title><rect x="473" y="260" width="3" height="15" fill="rgb(243,192,14)"/><text x="476.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.25%)</title><rect x="476" y="260" width="3" height="15" fill="rgb(239,220,17)"/><text x="479.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="476" y="276" width="3" height="15" fill="rgb(212,103,0)"/><text x="479.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 0.76%)</title><rect x="473" y="244" width="9" height="15" fill="rgb(247,224,0)"/><text x="476.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.25%)</title><rect x="479" y="260" width="3" height="15" fill="rgb(210,225,14)"/><text x="482.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.25%)</title><rect x="479" y="276" width="3" height="15" fill="rgb(246,14,7)"/><text x="482.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:206) (1 samples, 0.25%)</title><rect x="479" y="292" width="3" height="15" fill="rgb(209,98,50)"/><text x="482.00" y="302.50"></text></g><g><title>0x7f35b7b25d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.01%)</title><rect x="473" y="196" width="11" height="15" fill="rgb(208,12,37)"/><text x="476.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.01%)</title><rect x="473" y="212" width="11" height="15" fill="rgb(220,182,21)"/><text x="476.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.01%)</title><rect x="473" y="228" width="11" height="15" fill="rgb(234,224,9)"/><text x="476.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.25%)</title><rect x="482" y="244" width="2" height="15" fill="rgb(210,121,47)"/><text x="485.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.25%)</title><rect x="484" y="244" width="3" height="15" fill="rgb(247,6,20)"/><text x="487.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:522) (1 samples, 0.25%)</title><rect x="484" y="260" width="3" height="15" fill="rgb(215,158,33)"/><text x="487.00" y="270.50"></text></g><g><title>0x7f35b7b25d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="484" y="196" width="6" height="15" fill="rgb(213,225,4)"/><text x="487.00" y="206.50"></text></g><g><title>0x7f35b7b0f5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="484" y="212" width="6" height="15" fill="rgb(235,42,14)"/><text x="487.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.51%)</title><rect x="484" y="228" width="6" height="15" fill="rgb(213,10,9)"/><text x="487.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.25%)</title><rect x="487" y="244" width="3" height="15" fill="rgb(208,133,24)"/><text x="490.00" y="254.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="490" y="228" width="3" height="15" fill="rgb(223,127,33)"/><text x="493.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.25%)</title><rect x="490" y="244" width="3" height="15" fill="rgb(246,10,45)"/><text x="493.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.25%)</title><rect x="490" y="260" width="3" height="15" fill="rgb(223,114,5)"/><text x="493.00" y="270.50"></text></g><g><title>0x7f35dd03790e (libc-2.29.so) (1 samples, 0.25%)</title><rect x="490" y="276" width="3" height="15" fill="rgb(222,157,45)"/><text x="493.00" y="286.50"></text></g><g><title>0x7f35b7b25d9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="490" y="196" width="6" height="15" fill="rgb(227,40,2)"/><text x="493.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="490" y="212" width="6" height="15" fill="rgb(252,152,0)"/><text x="493.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:798) (1 samples, 0.25%)</title><rect x="493" y="228" width="3" height="15" fill="rgb(211,149,30)"/><text x="496.00" y="238.50"></text></g><g><title>PyArray_CHKFLAGS (ndarraytypes.h:1552) (1 samples, 0.25%)</title><rect x="493" y="244" width="3" height="15" fill="rgb(222,206,5)"/><text x="496.00" y="254.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h:1534) (1 samples, 0.25%)</title><rect x="493" y="260" width="3" height="15" fill="rgb(237,172,38)"/><text x="496.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.25%)</title><rect x="496" y="244" width="3" height="15" fill="rgb(211,65,1)"/><text x="499.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.25%)</title><rect x="496" y="260" width="3" height="15" fill="rgb(229,104,26)"/><text x="499.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="496" y="276" width="3" height="15" fill="rgb(236,116,39)"/><text x="499.00" y="286.50"></text></g><g><title>0x7f35b7b25e20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="496" y="196" width="6" height="15" fill="rgb(254,124,25)"/><text x="499.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="496" y="212" width="6" height="15" fill="rgb(207,137,6)"/><text x="499.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.51%)</title><rect x="496" y="228" width="6" height="15" fill="rgb(213,127,27)"/><text x="499.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.25%)</title><rect x="499" y="244" width="3" height="15" fill="rgb(233,110,42)"/><text x="502.00" y="254.50"></text></g><g><title>0x7f35b7b25eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="502" y="196" width="3" height="15" fill="rgb(228,44,1)"/><text x="505.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="502" y="212" width="3" height="15" fill="rgb(235,58,54)"/><text x="505.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="502" y="228" width="3" height="15" fill="rgb(211,76,27)"/><text x="505.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.25%)</title><rect x="502" y="244" width="3" height="15" fill="rgb(228,112,35)"/><text x="505.00" y="254.50"></text></g><g><title>0x7f35b7b25f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="505" y="196" width="3" height="15" fill="rgb(226,46,18)"/><text x="508.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="505" y="212" width="3" height="15" fill="rgb(232,116,45)"/><text x="508.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="505" y="228" width="3" height="15" fill="rgb(216,207,28)"/><text x="508.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.25%)</title><rect x="505" y="244" width="3" height="15" fill="rgb(239,105,28)"/><text x="508.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.25%)</title><rect x="505" y="260" width="3" height="15" fill="rgb(245,39,8)"/><text x="508.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="505" y="276" width="3" height="15" fill="rgb(210,210,29)"/><text x="508.00" y="286.50"></text></g><g><title>0x7f35b7b25f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="508" y="196" width="3" height="15" fill="rgb(238,72,49)"/><text x="511.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="508" y="212" width="3" height="15" fill="rgb(223,206,54)"/><text x="511.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="508" y="228" width="3" height="15" fill="rgb(240,6,4)"/><text x="511.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.25%)</title><rect x="508" y="244" width="3" height="15" fill="rgb(239,40,1)"/><text x="511.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.25%)</title><rect x="508" y="260" width="3" height="15" fill="rgb(241,90,16)"/><text x="511.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="508" y="276" width="3" height="15" fill="rgb(236,204,19)"/><text x="511.00" y="286.50"></text></g><g><title>0x7f35b7b25f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="511" y="196" width="3" height="15" fill="rgb(239,36,13)"/><text x="514.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="511" y="212" width="3" height="15" fill="rgb(220,129,13)"/><text x="514.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="511" y="228" width="3" height="15" fill="rgb(210,57,20)"/><text x="514.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.25%)</title><rect x="511" y="244" width="3" height="15" fill="rgb(213,152,43)"/><text x="514.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.25%)</title><rect x="511" y="260" width="3" height="15" fill="rgb(247,119,27)"/><text x="514.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="511" y="276" width="3" height="15" fill="rgb(243,30,37)"/><text x="514.00" y="286.50"></text></g><g><title>0x7f35b7b25ff0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="514" y="196" width="3" height="15" fill="rgb(211,182,10)"/><text x="517.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (3 samples, 0.76%)</title><rect x="520" y="212" width="9" height="15" fill="rgb(208,114,33)"/><text x="523.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.25%)</title><rect x="526" y="228" width="3" height="15" fill="rgb(244,69,9)"/><text x="529.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.25%)</title><rect x="526" y="244" width="3" height="15" fill="rgb(242,129,22)"/><text x="529.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.25%)</title><rect x="526" y="260" width="3" height="15" fill="rgb(238,228,12)"/><text x="529.00" y="270.50"></text></g><g><title>0x7f35b7b2612f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.27%)</title><rect x="517" y="196" width="15" height="15" fill="rgb(238,219,37)"/><text x="520.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.25%)</title><rect x="529" y="212" width="3" height="15" fill="rgb(215,170,16)"/><text x="532.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3354) (1 samples, 0.25%)</title><rect x="529" y="228" width="3" height="15" fill="rgb(254,132,14)"/><text x="532.00" y="238.50"></text></g><g><title>0x7f35b7b26237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="196" width="3" height="15" fill="rgb(209,13,36)"/><text x="535.00" y="206.50"></text></g><g><title>0x7f35b7b10ce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="532" y="212" width="3" height="15" fill="rgb(217,168,52)"/><text x="535.00" y="222.50"></text></g><g><title>0x7f35b7b262b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="535" y="196" width="6" height="15" fill="rgb(206,115,8)"/><text x="538.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="535" y="212" width="6" height="15" fill="rgb(252,140,30)"/><text x="538.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="535" y="228" width="6" height="15" fill="rgb(237,185,34)"/><text x="538.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (2 samples, 0.51%)</title><rect x="541" y="244" width="6" height="15" fill="rgb(254,65,27)"/><text x="544.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 0.76%)</title><rect x="541" y="228" width="9" height="15" fill="rgb(253,165,30)"/><text x="544.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.25%)</title><rect x="547" y="244" width="3" height="15" fill="rgb(226,47,45)"/><text x="550.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.25%)</title><rect x="547" y="260" width="3" height="15" fill="rgb(206,49,25)"/><text x="550.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.25%)</title><rect x="547" y="276" width="3" height="15" fill="rgb(241,105,44)"/><text x="550.00" y="286.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (4 samples, 1.01%)</title><rect x="541" y="212" width="12" height="15" fill="rgb(216,159,44)"/><text x="544.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.25%)</title><rect x="550" y="228" width="3" height="15" fill="rgb(212,14,21)"/><text x="553.00" y="238.50"></text></g><g><title>0x7f35b7b2646c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.27%)</title><rect x="541" y="196" width="15" height="15" fill="rgb(251,51,5)"/><text x="544.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.25%)</title><rect x="553" y="212" width="3" height="15" fill="rgb(219,136,36)"/><text x="556.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.25%)</title><rect x="553" y="228" width="3" height="15" fill="rgb(208,62,32)"/><text x="556.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.25%)</title><rect x="553" y="244" width="3" height="15" fill="rgb(209,175,34)"/><text x="556.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.25%)</title><rect x="553" y="260" width="3" height="15" fill="rgb(236,189,49)"/><text x="556.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.25%)</title><rect x="553" y="276" width="3" height="15" fill="rgb(221,126,27)"/><text x="556.00" y="286.50"></text></g><g><title>0x7f35b7b0fe1b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="556" y="212" width="3" height="15" fill="rgb(220,6,36)"/><text x="559.00" y="222.50"></text></g><g><title>0x7f35b7b26528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="556" y="196" width="6" height="15" fill="rgb(222,12,14)"/><text x="559.00" y="206.50"></text></g><g><title>0x7f35b7b0fe39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="559" y="212" width="3" height="15" fill="rgb(229,7,50)"/><text x="562.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.25%)</title><rect x="559" y="228" width="3" height="15" fill="rgb(240,143,7)"/><text x="562.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.25%)</title><rect x="559" y="244" width="3" height="15" fill="rgb(233,116,27)"/><text x="562.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.25%)</title><rect x="559" y="260" width="3" height="15" fill="rgb(247,34,41)"/><text x="562.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="559" y="276" width="3" height="15" fill="rgb(216,194,38)"/><text x="562.00" y="286.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="562" y="228" width="3" height="15" fill="rgb(230,209,14)"/><text x="565.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="562" y="244" width="3" height="15" fill="rgb(224,8,51)"/><text x="565.00" y="254.50"></text></g><g><title>0x7f35dd0379d3 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="568" y="244" width="3" height="15" fill="rgb(235,175,52)"/><text x="571.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="571" y="244" width="3" height="15" fill="rgb(205,2,31)"/><text x="574.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.51%)</title><rect x="574" y="244" width="6" height="15" fill="rgb(214,84,50)"/><text x="577.00" y="254.50"></text></g><g><title>0x7f35dd039700 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="577" y="260" width="3" height="15" fill="rgb(232,50,4)"/><text x="580.00" y="270.50"></text></g><g><title>0x7f35dd036b0a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="577" y="276" width="3" height="15" fill="rgb(226,162,16)"/><text x="580.00" y="286.50"></text></g><g><title>0x7f35dd037a41 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="580" y="260" width="3" height="15" fill="rgb(245,123,27)"/><text x="583.00" y="270.50"></text></g><g><title>0x7f35dd058120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="583" y="260" width="3" height="15" fill="rgb(243,183,40)"/><text x="586.00" y="270.50"></text></g><g><title>0x7f35b7b26553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.28%)</title><rect x="562" y="196" width="27" height="15" fill="rgb(209,176,16)"/><text x="565.00" y="206.50">0..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.28%)</title><rect x="562" y="212" width="27" height="15" fill="rgb(222,129,1)"/><text x="565.00" y="222.50">c..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.03%)</title><rect x="565" y="228" width="24" height="15" fill="rgb(229,178,15)"/><text x="568.00" y="238.50">s..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.76%)</title><rect x="580" y="244" width="9" height="15" fill="rgb(230,116,33)"/><text x="583.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="586" y="260" width="3" height="15" fill="rgb(240,168,22)"/><text x="589.00" y="270.50"></text></g><g><title>0x7f35b7b26c35 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="589" y="196" width="3" height="15" fill="rgb(251,79,34)"/><text x="592.00" y="206.50"></text></g><g><title>0x7f35b7b278e6 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="592" y="196" width="3" height="15" fill="rgb(220,89,44)"/><text x="595.00" y="206.50"></text></g><g><title>0x7f35b7b27cd7 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="595" y="196" width="3" height="15" fill="rgb(248,222,2)"/><text x="598.00" y="206.50"></text></g><g><title>0x7f35b7b09b30 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="595" y="212" width="3" height="15" fill="rgb(218,90,48)"/><text x="598.00" y="222.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.25%)</title><rect x="598" y="244" width="3" height="15" fill="rgb(230,182,21)"/><text x="601.00" y="254.50"></text></g><g><title>0x7f35b7b283fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (44 samples, 11.14%)</title><rect x="473" y="180" width="131" height="15" fill="rgb(234,83,16)"/><text x="476.00" y="190.50">0x7f35b7b283fd (..</text></g><g><title>0x7f35b7b27d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="598" y="196" width="6" height="15" fill="rgb(221,82,10)"/><text x="601.00" y="206.50"></text></g><g><title>0x7f35b7b0f5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="598" y="212" width="6" height="15" fill="rgb(218,182,39)"/><text x="601.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.51%)</title><rect x="598" y="228" width="6" height="15" fill="rgb(239,228,17)"/><text x="601.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:708) (1 samples, 0.25%)</title><rect x="601" y="244" width="3" height="15" fill="rgb(210,126,31)"/><text x="604.00" y="254.50"></text></g><g><title>0x7f35b7b28f55 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="604" y="180" width="3" height="15" fill="rgb(229,113,0)"/><text x="607.00" y="190.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (52 samples, 13.16%)</title><rect x="455" y="164" width="155" height="15" fill="rgb(249,153,43)"/><text x="458.00" y="174.50">_dense_predict_prob..</text></g><g><title>0x7f35b7b2922c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="607" y="180" width="3" height="15" fill="rgb(216,213,31)"/><text x="610.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (59 samples, 14.94%)</title><rect x="437" y="148" width="176" height="15" fill="rgb(213,171,5)"/><text x="440.00" y="158.50">_predict_proba (sklear..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:696) (1 samples, 0.25%)</title><rect x="610" y="164" width="3" height="15" fill="rgb(221,110,17)"/><text x="613.00" y="174.50"></text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (2 samples, 0.51%)</title><rect x="613" y="148" width="6" height="15" fill="rgb(243,111,29)"/><text x="616.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py:605) (2 samples, 0.51%)</title><rect x="613" y="164" width="6" height="15" fill="rgb(247,90,39)"/><text x="616.00" y="174.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (193 samples, 48.86%)</title><rect x="45" y="132" width="577" height="15" fill="rgb(228,218,32)"/><text x="48.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:637) (1 samples, 0.25%)</title><rect x="619" y="148" width="3" height="15" fill="rgb(246,169,54)"/><text x="622.00" y="158.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:38) (206 samples, 52.15%)</title><rect x="10" y="52" width="615" height="15" fill="rgb(252,18,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:37) (206 samples, 52.15%)</title><rect x="10" y="68" width="615" height="15" fill="rgb(219,74,47)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29) (206 samples, 52.15%)</title><rect x="10" y="84" width="615" height="15" fill="rgb(232,96,40)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29)</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23) (203 samples, 51.39%)</title><rect x="18" y="100" width="607" height="15" fill="rgb(220,117,18)"/><text x="21.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (197 samples, 49.87%)</title><rect x="36" y="116" width="589" height="15" fill="rgb(248,123,4)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.25%)</title><rect x="622" y="132" width="3" height="15" fill="rgb(252,34,33)"/><text x="625.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:2) (1 samples, 0.25%)</title><rect x="625" y="148" width="3" height="15" fill="rgb(206,180,6)"/><text x="628.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="164" width="3" height="15" fill="rgb(247,3,24)"/><text x="628.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="625" y="180" width="3" height="15" fill="rgb(250,150,32)"/><text x="628.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="196" width="3" height="15" fill="rgb(233,52,11)"/><text x="628.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="212" width="3" height="15" fill="rgb(217,29,8)"/><text x="628.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="625" y="228" width="3" height="15" fill="rgb(248,125,5)"/><text x="628.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="625" y="244" width="3" height="15" fill="rgb(254,105,42)"/><text x="628.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="625" y="260" width="3" height="15" fill="rgb(238,223,18)"/><text x="628.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="276" width="3" height="15" fill="rgb(244,172,39)"/><text x="628.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (1 samples, 0.25%)</title><rect x="625" y="292" width="3" height="15" fill="rgb(233,147,35)"/><text x="628.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="308" width="3" height="15" fill="rgb(226,146,12)"/><text x="628.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="625" y="324" width="3" height="15" fill="rgb(221,80,30)"/><text x="628.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="625" y="340" width="3" height="15" fill="rgb(205,97,1)"/><text x="628.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="625" y="356" width="3" height="15" fill="rgb(237,228,31)"/><text x="628.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="372" width="3" height="15" fill="rgb(230,135,0)"/><text x="628.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (1 samples, 0.25%)</title><rect x="625" y="388" width="3" height="15" fill="rgb(235,28,31)"/><text x="628.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="404" width="3" height="15" fill="rgb(250,148,34)"/><text x="628.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="625" y="420" width="3" height="15" fill="rgb(231,6,4)"/><text x="628.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="625" y="436" width="3" height="15" fill="rgb(242,90,44)"/><text x="628.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="625" y="452" width="3" height="15" fill="rgb(231,135,24)"/><text x="628.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="468" width="3" height="15" fill="rgb(209,149,40)"/><text x="628.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (1 samples, 0.25%)</title><rect x="625" y="484" width="3" height="15" fill="rgb(218,95,20)"/><text x="628.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="500" width="3" height="15" fill="rgb(253,188,27)"/><text x="628.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="625" y="516" width="3" height="15" fill="rgb(227,17,42)"/><text x="628.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="625" y="532" width="3" height="15" fill="rgb(210,170,27)"/><text x="628.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="625" y="548" width="3" height="15" fill="rgb(207,164,16)"/><text x="628.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="564" width="3" height="15" fill="rgb(251,207,15)"/><text x="628.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (1 samples, 0.25%)</title><rect x="625" y="580" width="3" height="15" fill="rgb(252,186,24)"/><text x="628.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="596" width="3" height="15" fill="rgb(220,124,10)"/><text x="628.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="625" y="612" width="3" height="15" fill="rgb(216,207,21)"/><text x="628.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="628" width="3" height="15" fill="rgb(213,181,20)"/><text x="628.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="644" width="3" height="15" fill="rgb(218,51,43)"/><text x="628.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="625" y="660" width="3" height="15" fill="rgb(241,49,13)"/><text x="628.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="625" y="676" width="3" height="15" fill="rgb(251,156,45)"/><text x="628.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="625" y="692" width="3" height="15" fill="rgb(226,108,18)"/><text x="628.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="708" width="3" height="15" fill="rgb(251,103,36)"/><text x="628.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (1 samples, 0.25%)</title><rect x="625" y="724" width="3" height="15" fill="rgb(205,146,20)"/><text x="628.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="625" y="740" width="3" height="15" fill="rgb(254,194,0)"/><text x="628.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="625" y="756" width="3" height="15" fill="rgb(210,168,5)"/><text x="628.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="625" y="772" width="3" height="15" fill="rgb(220,109,41)"/><text x="628.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="625" y="788" width="3" height="15" fill="rgb(212,51,24)"/><text x="628.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="625" y="804" width="3" height="15" fill="rgb(209,115,25)"/><text x="628.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.25%)</title><rect x="625" y="820" width="3" height="15" fill="rgb(219,35,35)"/><text x="628.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.25%)</title><rect x="625" y="836" width="3" height="15" fill="rgb(224,176,42)"/><text x="628.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.25%)</title><rect x="625" y="852" width="3" height="15" fill="rgb(238,143,5)"/><text x="628.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.25%)</title><rect x="625" y="868" width="3" height="15" fill="rgb(224,137,14)"/><text x="628.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.25%)</title><rect x="625" y="884" width="3" height="15" fill="rgb(223,156,51)"/><text x="628.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.25%)</title><rect x="625" y="900" width="3" height="15" fill="rgb(225,108,32)"/><text x="628.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.25%)</title><rect x="625" y="916" width="3" height="15" fill="rgb(212,160,43)"/><text x="628.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.25%)</title><rect x="625" y="932" width="3" height="15" fill="rgb(227,46,52)"/><text x="628.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.25%)</title><rect x="625" y="948" width="3" height="15" fill="rgb(213,18,49)"/><text x="628.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.25%)</title><rect x="625" y="964" width="3" height="15" fill="rgb(250,197,5)"/><text x="628.00" y="974.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.25%)</title><rect x="628" y="484" width="3" height="15" fill="rgb(230,197,14)"/><text x="631.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="628" y="500" width="3" height="15" fill="rgb(239,179,19)"/><text x="631.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="516" width="3" height="15" fill="rgb(248,60,15)"/><text x="631.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="532" width="3" height="15" fill="rgb(254,120,31)"/><text x="631.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="548" width="3" height="15" fill="rgb(207,104,53)"/><text x="631.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="564" width="3" height="15" fill="rgb(212,11,17)"/><text x="631.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="580" width="3" height="15" fill="rgb(240,48,45)"/><text x="631.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="596" width="3" height="15" fill="rgb(205,24,32)"/><text x="631.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.25%)</title><rect x="628" y="612" width="3" height="15" fill="rgb(254,217,15)"/><text x="631.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="628" width="3" height="15" fill="rgb(229,187,7)"/><text x="631.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="644" width="3" height="15" fill="rgb(247,14,7)"/><text x="631.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="660" width="3" height="15" fill="rgb(241,168,39)"/><text x="631.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="676" width="3" height="15" fill="rgb(206,190,38)"/><text x="631.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="692" width="3" height="15" fill="rgb(206,22,33)"/><text x="631.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.25%)</title><rect x="628" y="708" width="3" height="15" fill="rgb(226,162,39)"/><text x="631.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="724" width="3" height="15" fill="rgb(219,189,29)"/><text x="631.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="740" width="3" height="15" fill="rgb(220,204,52)"/><text x="631.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="756" width="3" height="15" fill="rgb(224,16,43)"/><text x="631.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="772" width="3" height="15" fill="rgb(234,218,16)"/><text x="631.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="788" width="3" height="15" fill="rgb(227,176,39)"/><text x="631.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.25%)</title><rect x="628" y="804" width="3" height="15" fill="rgb(244,19,9)"/><text x="631.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="820" width="3" height="15" fill="rgb(207,51,30)"/><text x="631.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="836" width="3" height="15" fill="rgb(210,58,35)"/><text x="631.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="852" width="3" height="15" fill="rgb(213,82,0)"/><text x="631.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="868" width="3" height="15" fill="rgb(218,42,54)"/><text x="631.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="884" width="3" height="15" fill="rgb(229,38,21)"/><text x="631.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.25%)</title><rect x="628" y="900" width="3" height="15" fill="rgb(218,40,31)"/><text x="631.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="916" width="3" height="15" fill="rgb(239,224,32)"/><text x="631.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="932" width="3" height="15" fill="rgb(231,57,3)"/><text x="631.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="948" width="3" height="15" fill="rgb(222,125,12)"/><text x="631.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="964" width="3" height="15" fill="rgb(223,108,8)"/><text x="631.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="980" width="3" height="15" fill="rgb(214,143,18)"/><text x="631.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.25%)</title><rect x="628" y="996" width="3" height="15" fill="rgb(248,212,4)"/><text x="631.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="1012" width="3" height="15" fill="rgb(233,97,26)"/><text x="631.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="628" y="1028" width="3" height="15" fill="rgb(217,208,54)"/><text x="631.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="1044" width="3" height="15" fill="rgb(253,94,28)"/><text x="631.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="1060" width="3" height="15" fill="rgb(222,105,42)"/><text x="631.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="1076" width="3" height="15" fill="rgb(254,136,41)"/><text x="631.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="1092" width="3" height="15" fill="rgb(209,56,7)"/><text x="631.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="1108" width="3" height="15" fill="rgb(216,116,17)"/><text x="631.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="1124" width="3" height="15" fill="rgb(209,206,44)"/><text x="631.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.25%)</title><rect x="628" y="1140" width="3" height="15" fill="rgb(208,26,1)"/><text x="631.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="1156" width="3" height="15" fill="rgb(209,224,3)"/><text x="631.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="1172" width="3" height="15" fill="rgb(248,96,37)"/><text x="631.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="1188" width="3" height="15" fill="rgb(225,223,35)"/><text x="631.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="1204" width="3" height="15" fill="rgb(224,113,1)"/><text x="631.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="1220" width="3" height="15" fill="rgb(247,94,33)"/><text x="631.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.25%)</title><rect x="628" y="1236" width="3" height="15" fill="rgb(240,85,48)"/><text x="631.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="1252" width="3" height="15" fill="rgb(239,20,8)"/><text x="631.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="1268" width="3" height="15" fill="rgb(212,69,0)"/><text x="631.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="1284" width="3" height="15" fill="rgb(208,190,26)"/><text x="631.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="1300" width="3" height="15" fill="rgb(224,123,41)"/><text x="631.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="1316" width="3" height="15" fill="rgb(227,183,5)"/><text x="631.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.25%)</title><rect x="628" y="1332" width="3" height="15" fill="rgb(231,190,8)"/><text x="631.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="628" y="1348" width="3" height="15" fill="rgb(206,158,12)"/><text x="631.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="628" y="1364" width="3" height="15" fill="rgb(246,28,29)"/><text x="631.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="628" y="1380" width="3" height="15" fill="rgb(225,3,30)"/><text x="631.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="628" y="1396" width="3" height="15" fill="rgb(252,132,15)"/><text x="631.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="628" y="1412" width="3" height="15" fill="rgb(217,23,29)"/><text x="631.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:6) (1 samples, 0.25%)</title><rect x="628" y="1428" width="3" height="15" fill="rgb(253,89,11)"/><text x="631.00" y="1438.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:4) (2 samples, 0.51%)</title><rect x="628" y="148" width="6" height="15" fill="rgb(212,217,13)"/><text x="631.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="628" y="164" width="6" height="15" fill="rgb(214,143,8)"/><text x="631.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.51%)</title><rect x="628" y="180" width="6" height="15" fill="rgb(223,185,30)"/><text x="631.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="628" y="196" width="6" height="15" fill="rgb(235,80,34)"/><text x="631.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="628" y="212" width="6" height="15" fill="rgb(247,125,31)"/><text x="631.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="628" y="228" width="6" height="15" fill="rgb(223,36,54)"/><text x="631.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="628" y="244" width="6" height="15" fill="rgb(246,174,18)"/><text x="631.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="628" y="260" width="6" height="15" fill="rgb(241,224,28)"/><text x="631.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="628" y="276" width="6" height="15" fill="rgb(208,43,32)"/><text x="631.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.51%)</title><rect x="628" y="292" width="6" height="15" fill="rgb(226,7,29)"/><text x="631.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="628" y="308" width="6" height="15" fill="rgb(226,224,10)"/><text x="631.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="628" y="324" width="6" height="15" fill="rgb(225,14,32)"/><text x="631.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="628" y="340" width="6" height="15" fill="rgb(232,52,39)"/><text x="631.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="628" y="356" width="6" height="15" fill="rgb(253,123,21)"/><text x="631.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="628" y="372" width="6" height="15" fill="rgb(222,37,29)"/><text x="631.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.51%)</title><rect x="628" y="388" width="6" height="15" fill="rgb(243,78,0)"/><text x="631.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="628" y="404" width="6" height="15" fill="rgb(213,189,48)"/><text x="631.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="628" y="420" width="6" height="15" fill="rgb(208,61,40)"/><text x="631.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="628" y="436" width="6" height="15" fill="rgb(254,35,21)"/><text x="631.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="628" y="452" width="6" height="15" fill="rgb(210,212,39)"/><text x="631.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="628" y="468" width="6" height="15" fill="rgb(218,117,0)"/><text x="631.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.25%)</title><rect x="631" y="484" width="3" height="15" fill="rgb(247,131,30)"/><text x="634.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="631" y="500" width="3" height="15" fill="rgb(209,202,5)"/><text x="634.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="631" y="516" width="3" height="15" fill="rgb(216,108,48)"/><text x="634.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="631" y="532" width="3" height="15" fill="rgb(211,47,39)"/><text x="634.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="631" y="548" width="3" height="15" fill="rgb(212,190,33)"/><text x="634.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="564" width="3" height="15" fill="rgb(210,20,23)"/><text x="634.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.25%)</title><rect x="631" y="580" width="3" height="15" fill="rgb(236,101,33)"/><text x="634.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="631" y="596" width="3" height="15" fill="rgb(253,111,53)"/><text x="634.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="631" y="612" width="3" height="15" fill="rgb(250,10,9)"/><text x="634.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="631" y="628" width="3" height="15" fill="rgb(240,20,37)"/><text x="634.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="631" y="644" width="3" height="15" fill="rgb(220,134,41)"/><text x="634.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="660" width="3" height="15" fill="rgb(251,126,11)"/><text x="634.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.25%)</title><rect x="631" y="676" width="3" height="15" fill="rgb(244,215,17)"/><text x="634.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="631" y="692" width="3" height="15" fill="rgb(219,198,33)"/><text x="634.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="631" y="708" width="3" height="15" fill="rgb(216,213,40)"/><text x="634.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="631" y="724" width="3" height="15" fill="rgb(253,19,23)"/><text x="634.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="631" y="740" width="3" height="15" fill="rgb(238,88,2)"/><text x="634.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="756" width="3" height="15" fill="rgb(221,210,52)"/><text x="634.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.25%)</title><rect x="631" y="772" width="3" height="15" fill="rgb(252,185,16)"/><text x="634.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="631" y="788" width="3" height="15" fill="rgb(214,228,24)"/><text x="634.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="804" width="3" height="15" fill="rgb(208,190,36)"/><text x="634.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="631" y="820" width="3" height="15" fill="rgb(217,92,29)"/><text x="634.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="631" y="836" width="3" height="15" fill="rgb(206,138,36)"/><text x="634.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="631" y="852" width="3" height="15" fill="rgb(243,99,42)"/><text x="634.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="631" y="868" width="3" height="15" fill="rgb(248,75,27)"/><text x="634.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="884" width="3" height="15" fill="rgb(219,76,24)"/><text x="634.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.25%)</title><rect x="631" y="900" width="3" height="15" fill="rgb(212,96,31)"/><text x="634.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="631" y="916" width="3" height="15" fill="rgb(247,131,24)"/><text x="634.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="932" width="3" height="15" fill="rgb(240,224,29)"/><text x="634.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="631" y="948" width="3" height="15" fill="rgb(252,101,10)"/><text x="634.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="631" y="964" width="3" height="15" fill="rgb(225,208,11)"/><text x="634.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="631" y="980" width="3" height="15" fill="rgb(240,90,17)"/><text x="634.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="631" y="996" width="3" height="15" fill="rgb(243,76,31)"/><text x="634.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="631" y="1012" width="3" height="15" fill="rgb(222,218,44)"/><text x="634.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:620) (1 samples, 0.25%)</title><rect x="631" y="1028" width="3" height="15" fill="rgb(228,8,43)"/><text x="634.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.25%)</title><rect x="631" y="1044" width="3" height="15" fill="rgb(236,66,7)"/><text x="634.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.25%)</title><rect x="631" y="1060" width="3" height="15" fill="rgb(239,226,25)"/><text x="634.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:63) (1 samples, 0.25%)</title><rect x="631" y="1076" width="3" height="15" fill="rgb(206,206,51)"/><text x="634.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.25%)</title><rect x="634" y="340" width="3" height="15" fill="rgb(223,182,15)"/><text x="637.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="634" y="356" width="3" height="15" fill="rgb(209,43,54)"/><text x="637.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="634" y="372" width="3" height="15" fill="rgb(229,68,32)"/><text x="637.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="634" y="388" width="3" height="15" fill="rgb(232,130,37)"/><text x="637.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="634" y="404" width="3" height="15" fill="rgb(214,198,24)"/><text x="637.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="634" y="420" width="3" height="15" fill="rgb(220,51,4)"/><text x="637.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (1 samples, 0.25%)</title><rect x="634" y="436" width="3" height="15" fill="rgb(239,152,10)"/><text x="637.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="634" y="452" width="3" height="15" fill="rgb(237,225,34)"/><text x="637.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="634" y="468" width="3" height="15" fill="rgb(246,129,44)"/><text x="637.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="634" y="484" width="3" height="15" fill="rgb(218,65,32)"/><text x="637.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="634" y="500" width="3" height="15" fill="rgb(219,69,0)"/><text x="637.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="634" y="516" width="3" height="15" fill="rgb(252,2,22)"/><text x="637.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py:18) (1 samples, 0.25%)</title><rect x="634" y="532" width="3" height="15" fill="rgb(244,97,22)"/><text x="637.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="634" y="548" width="3" height="15" fill="rgb(216,7,16)"/><text x="637.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="634" y="564" width="3" height="15" fill="rgb(242,129,16)"/><text x="637.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="634" y="580" width="3" height="15" fill="rgb(220,67,36)"/><text x="637.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="634" y="596" width="3" height="15" fill="rgb(249,118,52)"/><text x="637.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="634" y="612" width="3" height="15" fill="rgb(220,223,17)"/><text x="637.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="634" y="628" width="3" height="15" fill="rgb(224,156,52)"/><text x="637.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="634" y="644" width="3" height="15" fill="rgb(249,1,14)"/><text x="637.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:223) (1 samples, 0.25%)</title><rect x="634" y="660" width="3" height="15" fill="rgb(251,72,41)"/><text x="637.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py:204) (1 samples, 0.25%)</title><rect x="634" y="676" width="3" height="15" fill="rgb(241,68,0)"/><text x="637.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="634" y="692" width="3" height="15" fill="rgb(226,170,50)"/><text x="637.00" y="702.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="634" y="708" width="3" height="15" fill="rgb(254,139,43)"/><text x="637.00" y="718.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.25%)</title><rect x="634" y="724" width="3" height="15" fill="rgb(248,73,13)"/><text x="637.00" y="734.50"></text></g><g><title>parse (sre_parse.py:938) (1 samples, 0.25%)</title><rect x="634" y="740" width="3" height="15" fill="rgb(253,149,0)"/><text x="637.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="634" y="756" width="3" height="15" fill="rgb(244,165,48)"/><text x="637.00" y="766.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.25%)</title><rect x="634" y="772" width="3" height="15" fill="rgb(213,175,47)"/><text x="637.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="634" y="788" width="3" height="15" fill="rgb(246,135,52)"/><text x="637.00" y="798.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.25%)</title><rect x="634" y="804" width="3" height="15" fill="rgb(241,218,42)"/><text x="637.00" y="814.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="634" y="820" width="3" height="15" fill="rgb(254,120,40)"/><text x="637.00" y="830.50"></text></g><g><title>_parse (sre_parse.py:497) (1 samples, 0.25%)</title><rect x="634" y="836" width="3" height="15" fill="rgb(223,108,6)"/><text x="637.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.25%)</title><rect x="637" y="436" width="3" height="15" fill="rgb(232,35,40)"/><text x="640.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="637" y="452" width="3" height="15" fill="rgb(234,46,7)"/><text x="640.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="637" y="468" width="3" height="15" fill="rgb(252,152,21)"/><text x="640.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="637" y="484" width="3" height="15" fill="rgb(221,1,34)"/><text x="640.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="637" y="500" width="3" height="15" fill="rgb(253,186,5)"/><text x="640.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="637" y="516" width="3" height="15" fill="rgb(244,107,28)"/><text x="640.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.25%)</title><rect x="637" y="532" width="3" height="15" fill="rgb(230,26,16)"/><text x="640.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="637" y="548" width="3" height="15" fill="rgb(229,77,41)"/><text x="640.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="637" y="564" width="3" height="15" fill="rgb(224,147,2)"/><text x="640.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="637" y="580" width="3" height="15" fill="rgb(206,8,29)"/><text x="640.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="637" y="596" width="3" height="15" fill="rgb(211,179,45)"/><text x="640.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="637" y="612" width="3" height="15" fill="rgb(247,110,44)"/><text x="640.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:182) (1 samples, 0.25%)</title><rect x="637" y="628" width="3" height="15" fill="rgb(213,229,46)"/><text x="640.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="637" y="644" width="3" height="15" fill="rgb(236,89,18)"/><text x="640.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="637" y="660" width="3" height="15" fill="rgb(251,141,46)"/><text x="640.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="637" y="676" width="3" height="15" fill="rgb(244,77,16)"/><text x="640.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="637" y="692" width="3" height="15" fill="rgb(219,131,13)"/><text x="640.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="637" y="708" width="3" height="15" fill="rgb(248,207,31)"/><text x="640.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/testing.py:7) (1 samples, 0.25%)</title><rect x="637" y="724" width="3" height="15" fill="rgb(208,138,15)"/><text x="640.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.25%)</title><rect x="637" y="740" width="3" height="15" fill="rgb(220,13,34)"/><text x="640.00" y="750.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.25%)</title><rect x="637" y="756" width="3" height="15" fill="rgb(215,97,11)"/><text x="640.00" y="766.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:166) (1 samples, 0.25%)</title><rect x="637" y="772" width="3" height="15" fill="rgb(205,227,33)"/><text x="640.00" y="782.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:4) (6 samples, 1.52%)</title><rect x="625" y="52" width="18" height="15" fill="rgb(250,113,25)"/><text x="628.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.52%)</title><rect x="625" y="68" width="18" height="15" fill="rgb(249,56,27)"/><text x="628.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.52%)</title><rect x="625" y="84" width="18" height="15" fill="rgb(254,177,23)"/><text x="628.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.52%)</title><rect x="625" y="100" width="18" height="15" fill="rgb(210,143,11)"/><text x="628.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.52%)</title><rect x="625" y="116" width="18" height="15" fill="rgb(222,29,22)"/><text x="628.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.52%)</title><rect x="625" y="132" width="18" height="15" fill="rgb(211,48,20)"/><text x="628.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:7) (3 samples, 0.76%)</title><rect x="634" y="148" width="9" height="15" fill="rgb(250,97,31)"/><text x="637.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="634" y="164" width="9" height="15" fill="rgb(213,127,29)"/><text x="637.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="634" y="180" width="9" height="15" fill="rgb(205,137,13)"/><text x="637.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="634" y="196" width="9" height="15" fill="rgb(237,195,29)"/><text x="637.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="634" y="212" width="9" height="15" fill="rgb(253,72,36)"/><text x="637.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="634" y="228" width="9" height="15" fill="rgb(237,4,10)"/><text x="637.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.76%)</title><rect x="634" y="244" width="9" height="15" fill="rgb(208,187,51)"/><text x="637.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="634" y="260" width="9" height="15" fill="rgb(222,187,24)"/><text x="637.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="634" y="276" width="9" height="15" fill="rgb(233,129,11)"/><text x="637.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="634" y="292" width="9" height="15" fill="rgb(242,162,8)"/><text x="637.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="634" y="308" width="9" height="15" fill="rgb(228,175,26)"/><text x="637.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="634" y="324" width="9" height="15" fill="rgb(246,164,45)"/><text x="637.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (2 samples, 0.51%)</title><rect x="637" y="340" width="6" height="15" fill="rgb(217,145,34)"/><text x="640.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="637" y="356" width="6" height="15" fill="rgb(227,138,38)"/><text x="640.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="637" y="372" width="6" height="15" fill="rgb(236,136,51)"/><text x="640.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="637" y="388" width="6" height="15" fill="rgb(229,210,8)"/><text x="640.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="637" y="404" width="6" height="15" fill="rgb(218,32,30)"/><text x="640.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="637" y="420" width="6" height="15" fill="rgb(210,76,21)"/><text x="640.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.25%)</title><rect x="640" y="436" width="3" height="15" fill="rgb(205,10,16)"/><text x="643.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="452" width="3" height="15" fill="rgb(238,75,38)"/><text x="643.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="640" y="468" width="3" height="15" fill="rgb(250,213,37)"/><text x="643.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="484" width="3" height="15" fill="rgb(230,181,2)"/><text x="643.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="500" width="3" height="15" fill="rgb(238,22,24)"/><text x="643.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="516" width="3" height="15" fill="rgb(206,168,52)"/><text x="643.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="532" width="3" height="15" fill="rgb(209,188,29)"/><text x="643.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="548" width="3" height="15" fill="rgb(230,36,27)"/><text x="643.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="564" width="3" height="15" fill="rgb(206,56,19)"/><text x="643.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.25%)</title><rect x="640" y="580" width="3" height="15" fill="rgb(238,163,54)"/><text x="643.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="596" width="3" height="15" fill="rgb(207,154,32)"/><text x="643.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="612" width="3" height="15" fill="rgb(228,154,34)"/><text x="643.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="628" width="3" height="15" fill="rgb(210,138,37)"/><text x="643.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="644" width="3" height="15" fill="rgb(226,180,46)"/><text x="643.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="660" width="3" height="15" fill="rgb(252,139,18)"/><text x="643.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.25%)</title><rect x="640" y="676" width="3" height="15" fill="rgb(248,31,41)"/><text x="643.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="692" width="3" height="15" fill="rgb(219,136,52)"/><text x="643.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="708" width="3" height="15" fill="rgb(237,124,9)"/><text x="643.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="724" width="3" height="15" fill="rgb(243,129,50)"/><text x="643.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="740" width="3" height="15" fill="rgb(242,43,25)"/><text x="643.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="756" width="3" height="15" fill="rgb(249,144,34)"/><text x="643.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.25%)</title><rect x="640" y="772" width="3" height="15" fill="rgb(252,14,30)"/><text x="643.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="788" width="3" height="15" fill="rgb(231,135,1)"/><text x="643.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="804" width="3" height="15" fill="rgb(251,81,12)"/><text x="643.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="820" width="3" height="15" fill="rgb(219,139,20)"/><text x="643.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="836" width="3" height="15" fill="rgb(235,53,47)"/><text x="643.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="852" width="3" height="15" fill="rgb(219,90,41)"/><text x="643.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.25%)</title><rect x="640" y="868" width="3" height="15" fill="rgb(239,39,54)"/><text x="643.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="884" width="3" height="15" fill="rgb(250,142,50)"/><text x="643.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="640" y="900" width="3" height="15" fill="rgb(237,46,46)"/><text x="643.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="916" width="3" height="15" fill="rgb(213,40,14)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="932" width="3" height="15" fill="rgb(227,0,38)"/><text x="643.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="948" width="3" height="15" fill="rgb(243,224,50)"/><text x="643.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="964" width="3" height="15" fill="rgb(243,70,15)"/><text x="643.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="980" width="3" height="15" fill="rgb(229,67,52)"/><text x="643.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="996" width="3" height="15" fill="rgb(222,92,35)"/><text x="643.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.25%)</title><rect x="640" y="1012" width="3" height="15" fill="rgb(237,40,10)"/><text x="643.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="1028" width="3" height="15" fill="rgb(214,42,11)"/><text x="643.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="1044" width="3" height="15" fill="rgb(217,195,42)"/><text x="643.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="1060" width="3" height="15" fill="rgb(241,189,11)"/><text x="643.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="1076" width="3" height="15" fill="rgb(220,92,9)"/><text x="643.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="1092" width="3" height="15" fill="rgb(225,203,51)"/><text x="643.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.25%)</title><rect x="640" y="1108" width="3" height="15" fill="rgb(250,23,39)"/><text x="643.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="1124" width="3" height="15" fill="rgb(209,168,10)"/><text x="643.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="1140" width="3" height="15" fill="rgb(229,5,33)"/><text x="643.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="1156" width="3" height="15" fill="rgb(217,155,7)"/><text x="643.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="1172" width="3" height="15" fill="rgb(238,47,13)"/><text x="643.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="1188" width="3" height="15" fill="rgb(235,118,38)"/><text x="643.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.25%)</title><rect x="640" y="1204" width="3" height="15" fill="rgb(236,203,14)"/><text x="643.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="1220" width="3" height="15" fill="rgb(225,0,22)"/><text x="643.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="1236" width="3" height="15" fill="rgb(243,89,6)"/><text x="643.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="1252" width="3" height="15" fill="rgb(251,205,35)"/><text x="643.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="1268" width="3" height="15" fill="rgb(214,194,0)"/><text x="643.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="1284" width="3" height="15" fill="rgb(223,161,51)"/><text x="643.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:98) (1 samples, 0.25%)</title><rect x="640" y="1300" width="3" height="15" fill="rgb(228,0,12)"/><text x="643.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="1316" width="3" height="15" fill="rgb(244,105,48)"/><text x="643.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="1332" width="3" height="15" fill="rgb(233,139,49)"/><text x="643.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="1348" width="3" height="15" fill="rgb(237,29,13)"/><text x="643.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="1364" width="3" height="15" fill="rgb(246,30,13)"/><text x="643.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="1380" width="3" height="15" fill="rgb(210,44,35)"/><text x="643.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/__init__.py:10) (1 samples, 0.25%)</title><rect x="640" y="1396" width="3" height="15" fill="rgb(225,197,11)"/><text x="643.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="1412" width="3" height="15" fill="rgb(232,189,41)"/><text x="643.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="640" y="1428" width="3" height="15" fill="rgb(250,113,40)"/><text x="643.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="640" y="1444" width="3" height="15" fill="rgb(210,56,34)"/><text x="643.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="640" y="1460" width="3" height="15" fill="rgb(216,88,1)"/><text x="643.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="640" y="1476" width="3" height="15" fill="rgb(241,66,53)"/><text x="643.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/_multilayer_perceptron.py:19) (1 samples, 0.25%)</title><rect x="640" y="1492" width="3" height="15" fill="rgb(254,125,2)"/><text x="643.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="640" y="1508" width="3" height="15" fill="rgb(237,6,31)"/><text x="643.00" y="1518.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.25%)</title><rect x="640" y="1524" width="3" height="15" fill="rgb(247,83,51)"/><text x="643.00" y="1534.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:105) (1 samples, 0.25%)</title><rect x="640" y="1540" width="3" height="15" fill="rgb(253,224,26)"/><text x="643.00" y="1550.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="640" y="1556" width="3" height="15" fill="rgb(248,40,26)"/><text x="643.00" y="1566.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="640" y="1572" width="3" height="15" fill="rgb(214,35,5)"/><text x="643.00" y="1582.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="640" y="1588" width="3" height="15" fill="rgb(252,143,40)"/><text x="643.00" y="1598.50"></text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:18) (1 samples, 0.25%)</title><rect x="643" y="100" width="3" height="15" fill="rgb(229,112,12)"/><text x="646.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.25%)</title><rect x="643" y="116" width="3" height="15" fill="rgb(251,156,25)"/><text x="646.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.25%)</title><rect x="643" y="132" width="3" height="15" fill="rgb(206,2,41)"/><text x="646.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.25%)</title><rect x="643" y="148" width="3" height="15" fill="rgb(217,46,36)"/><text x="646.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.25%)</title><rect x="643" y="164" width="3" height="15" fill="rgb(207,172,36)"/><text x="646.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.25%)</title><rect x="643" y="180" width="3" height="15" fill="rgb(236,174,21)"/><text x="646.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.25%)</title><rect x="643" y="196" width="3" height="15" fill="rgb(248,156,28)"/><text x="646.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.25%)</title><rect x="643" y="212" width="3" height="15" fill="rgb(229,129,41)"/><text x="646.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.25%)</title><rect x="646" y="116" width="3" height="15" fill="rgb(214,123,21)"/><text x="649.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="646" y="132" width="3" height="15" fill="rgb(206,171,45)"/><text x="649.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="646" y="148" width="3" height="15" fill="rgb(223,0,6)"/><text x="649.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.25%)</title><rect x="646" y="164" width="3" height="15" fill="rgb(228,19,39)"/><text x="649.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.25%)</title><rect x="664" y="148" width="3" height="15" fill="rgb(215,222,47)"/><text x="667.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.51%)</title><rect x="667" y="148" width="6" height="15" fill="rgb(232,225,6)"/><text x="670.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.25%)</title><rect x="673" y="148" width="3" height="15" fill="rgb(228,192,36)"/><text x="676.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.51%)</title><rect x="676" y="164" width="6" height="15" fill="rgb(218,17,22)"/><text x="679.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.25%)</title><rect x="682" y="164" width="3" height="15" fill="rgb(250,5,14)"/><text x="685.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (8 samples, 2.03%)</title><rect x="694" y="180" width="24" height="15" fill="rgb(253,24,13)"/><text x="697.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.25%)</title><rect x="715" y="196" width="3" height="15" fill="rgb(253,94,19)"/><text x="718.00" y="206.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.25%)</title><rect x="753" y="276" width="3" height="15" fill="rgb(247,78,9)"/><text x="756.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.25%)</title><rect x="753" y="292" width="3" height="15" fill="rgb(243,41,24)"/><text x="756.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.25%)</title><rect x="753" y="308" width="3" height="15" fill="rgb(219,77,10)"/><text x="756.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:350) (1 samples, 0.25%)</title><rect x="753" y="324" width="3" height="15" fill="rgb(227,205,41)"/><text x="756.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.25%)</title><rect x="756" y="276" width="3" height="15" fill="rgb(207,163,28)"/><text x="759.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (10 samples, 2.53%)</title><rect x="732" y="212" width="30" height="15" fill="rgb(222,108,50)"/><text x="735.00" y="222.50">_r..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (5 samples, 1.27%)</title><rect x="747" y="228" width="15" height="15" fill="rgb(215,30,8)"/><text x="750.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (3 samples, 0.76%)</title><rect x="753" y="244" width="9" height="15" fill="rgb(241,10,11)"/><text x="756.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.76%)</title><rect x="753" y="260" width="9" height="15" fill="rgb(216,25,13)"/><text x="756.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.25%)</title><rect x="759" y="276" width="3" height="15" fill="rgb(212,130,50)"/><text x="762.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="759" y="292" width="3" height="15" fill="rgb(246,118,33)"/><text x="762.00" y="302.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (3 samples, 0.76%)</title><rect x="765" y="228" width="9" height="15" fill="rgb(245,159,31)"/><text x="768.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (18 samples, 4.56%)</title><rect x="729" y="196" width="54" height="15" fill="rgb(236,58,22)"/><text x="732.00" y="206.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (7 samples, 1.77%)</title><rect x="762" y="212" width="21" height="15" fill="rgb(206,187,9)"/><text x="765.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (3 samples, 0.76%)</title><rect x="774" y="228" width="9" height="15" fill="rgb(227,119,49)"/><text x="777.00" y="238.50"></text></g><g><title>0x7f359e1a6c29 (?) (1 samples, 0.25%)</title><rect x="786" y="244" width="3" height="15" fill="rgb(231,102,36)"/><text x="789.00" y="254.50"></text></g><g><title>0x7f359e1add9e (?) (1 samples, 0.25%)</title><rect x="786" y="260" width="3" height="15" fill="rgb(205,93,47)"/><text x="789.00" y="270.50"></text></g><g><title>0x7f359e1adc56 (?) (1 samples, 0.25%)</title><rect x="786" y="276" width="3" height="15" fill="rgb(223,147,23)"/><text x="789.00" y="286.50"></text></g><g><title>0x7f359e1b3994 (?) (1 samples, 0.25%)</title><rect x="786" y="292" width="3" height="15" fill="rgb(224,116,23)"/><text x="789.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="786" y="308" width="3" height="15" fill="rgb(243,129,16)"/><text x="789.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="786" y="324" width="3" height="15" fill="rgb(223,39,18)"/><text x="789.00" y="334.50"></text></g><g><title>0x7f35dd037902 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="789" y="468" width="3" height="15" fill="rgb(254,155,4)"/><text x="792.00" y="478.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (2 samples, 0.51%)</title><rect x="789" y="436" width="6" height="15" fill="rgb(221,144,22)"/><text x="792.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.51%)</title><rect x="789" y="452" width="6" height="15" fill="rgb(211,25,9)"/><text x="792.00" y="462.50"></text></g><g><title>0x7f35dd037a4f (libc-2.29.so) (1 samples, 0.25%)</title><rect x="792" y="468" width="3" height="15" fill="rgb(208,46,14)"/><text x="795.00" y="478.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (3 samples, 0.76%)</title><rect x="789" y="276" width="9" height="15" fill="rgb(205,76,22)"/><text x="792.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (3 samples, 0.76%)</title><rect x="789" y="292" width="9" height="15" fill="rgb(232,166,50)"/><text x="792.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (3 samples, 0.76%)</title><rect x="789" y="308" width="9" height="15" fill="rgb(205,38,24)"/><text x="792.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (3 samples, 0.76%)</title><rect x="789" y="324" width="9" height="15" fill="rgb(213,41,49)"/><text x="792.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (3 samples, 0.76%)</title><rect x="789" y="340" width="9" height="15" fill="rgb(241,47,11)"/><text x="792.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (3 samples, 0.76%)</title><rect x="789" y="356" width="9" height="15" fill="rgb(241,16,19)"/><text x="792.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (3 samples, 0.76%)</title><rect x="789" y="372" width="9" height="15" fill="rgb(237,34,53)"/><text x="792.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (3 samples, 0.76%)</title><rect x="789" y="388" width="9" height="15" fill="rgb(249,86,53)"/><text x="792.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (3 samples, 0.76%)</title><rect x="789" y="404" width="9" height="15" fill="rgb(250,226,0)"/><text x="792.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (3 samples, 0.76%)</title><rect x="789" y="420" width="9" height="15" fill="rgb(239,132,51)"/><text x="792.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.25%)</title><rect x="795" y="436" width="3" height="15" fill="rgb(216,87,21)"/><text x="798.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.25%)</title><rect x="795" y="452" width="3" height="15" fill="rgb(211,118,7)"/><text x="798.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.25%)</title><rect x="795" y="468" width="3" height="15" fill="rgb(222,183,14)"/><text x="798.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.25%)</title><rect x="795" y="484" width="3" height="15" fill="rgb(215,154,13)"/><text x="798.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.25%)</title><rect x="795" y="500" width="3" height="15" fill="rgb(210,154,39)"/><text x="798.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.25%)</title><rect x="795" y="516" width="3" height="15" fill="rgb(217,136,12)"/><text x="798.00" y="526.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.25%)</title><rect x="795" y="532" width="3" height="15" fill="rgb(210,97,25)"/><text x="798.00" y="542.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.25%)</title><rect x="795" y="548" width="3" height="15" fill="rgb(222,157,7)"/><text x="798.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:255) (1 samples, 0.25%)</title><rect x="798" y="420" width="3" height="15" fill="rgb(207,50,43)"/><text x="801.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h:379) (1 samples, 0.25%)</title><rect x="798" y="436" width="3" height="15" fill="rgb(243,172,45)"/><text x="801.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_initialize&lt;long*&gt; (stl_vector.h:1288) (1 samples, 0.25%)</title><rect x="798" y="452" width="3" height="15" fill="rgb(238,55,14)"/><text x="801.00" y="462.50"></text></g><g><title>std::__uninitialized_copy_a&lt;long*, long*, long&gt; (stl_uninitialized.h:281) (1 samples, 0.25%)</title><rect x="798" y="468" width="3" height="15" fill="rgb(249,87,46)"/><text x="801.00" y="478.50"></text></g><g><title>std::uninitialized_copy&lt;long*, long*&gt; (stl_uninitialized.h:126) (1 samples, 0.25%)</title><rect x="798" y="484" width="3" height="15" fill="rgb(214,146,13)"/><text x="801.00" y="494.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;long*, long*&gt; (stl_uninitialized.h:93) (1 samples, 0.25%)</title><rect x="798" y="500" width="3" height="15" fill="rgb(254,205,15)"/><text x="801.00" y="510.50"></text></g><g><title>std::copy&lt;long*, long*&gt; (stl_algobase.h:456) (1 samples, 0.25%)</title><rect x="798" y="516" width="3" height="15" fill="rgb(213,29,32)"/><text x="801.00" y="526.50"></text></g><g><title>std::__copy_move_a2&lt;false, long*, long*&gt; (stl_algobase.h:424) (1 samples, 0.25%)</title><rect x="798" y="532" width="3" height="15" fill="rgb(228,185,6)"/><text x="801.00" y="542.50"></text></g><g><title>std::__copy_move_a&lt;false, long*, long*&gt; (stl_algobase.h:386) (1 samples, 0.25%)</title><rect x="798" y="548" width="3" height="15" fill="rgb(207,107,27)"/><text x="801.00" y="558.50"></text></g><g><title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;long&gt; (stl_algobase.h:368) (1 samples, 0.25%)</title><rect x="798" y="564" width="3" height="15" fill="rgb(227,147,25)"/><text x="801.00" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="798" y="580" width="3" height="15" fill="rgb(235,137,21)"/><text x="801.00" y="590.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="798" y="596" width="3" height="15" fill="rgb(247,225,53)"/><text x="801.00" y="606.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:258) (1 samples, 0.25%)</title><rect x="801" y="420" width="3" height="15" fill="rgb(210,59,38)"/><text x="804.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.25%)</title><rect x="801" y="436" width="3" height="15" fill="rgb(252,141,23)"/><text x="804.00" y="446.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.25%)</title><rect x="801" y="452" width="3" height="15" fill="rgb(252,110,12)"/><text x="804.00" y="462.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.25%)</title><rect x="801" y="468" width="3" height="15" fill="rgb(206,121,49)"/><text x="804.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.25%)</title><rect x="801" y="484" width="3" height="15" fill="rgb(215,198,39)"/><text x="804.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.25%)</title><rect x="801" y="500" width="3" height="15" fill="rgb(229,3,7)"/><text x="804.00" y="510.50"></text></g><g><title>pybind11::make_tuple&lt;(pybind11::return_value_policy)1, pybind11::array_t&lt;long, 16&gt;&amp;, pybind11::array_t&lt;float, 16&gt;&amp;&gt; (cast.h:1758) (1 samples, 0.25%)</title><rect x="801" y="516" width="3" height="15" fill="rgb(220,108,30)"/><text x="804.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (1 samples, 0.25%)</title><rect x="804" y="452" width="3" height="15" fill="rgb(220,169,8)"/><text x="807.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.25%)</title><rect x="804" y="468" width="3" height="15" fill="rgb(212,49,44)"/><text x="807.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.25%)</title><rect x="804" y="484" width="3" height="15" fill="rgb(247,140,34)"/><text x="807.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.25%)</title><rect x="804" y="500" width="3" height="15" fill="rgb(223,181,3)"/><text x="807.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1422) (1 samples, 0.25%)</title><rect x="804" y="516" width="3" height="15" fill="rgb(207,117,39)"/><text x="807.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.25%)</title><rect x="804" y="532" width="3" height="15" fill="rgb(253,40,5)"/><text x="807.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (1 samples, 0.25%)</title><rect x="807" y="452" width="3" height="15" fill="rgb(218,107,53)"/><text x="810.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.25%)</title><rect x="807" y="468" width="3" height="15" fill="rgb(226,172,15)"/><text x="810.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.25%)</title><rect x="807" y="484" width="3" height="15" fill="rgb(229,218,30)"/><text x="810.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.25%)</title><rect x="807" y="500" width="3" height="15" fill="rgb(244,113,2)"/><text x="810.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="807" y="516" width="3" height="15" fill="rgb(220,218,13)"/><text x="810.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.25%)</title><rect x="810" y="452" width="3" height="15" fill="rgb(245,107,35)"/><text x="813.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.25%)</title><rect x="810" y="468" width="3" height="15" fill="rgb(221,69,19)"/><text x="813.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.25%)</title><rect x="810" y="484" width="3" height="15" fill="rgb(205,172,52)"/><text x="813.00" y="494.50"></text></g><g><title>0x7f35dd1b6e57 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="810" y="500" width="3" height="15" fill="rgb(253,170,42)"/><text x="813.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.25%)</title><rect x="813" y="484" width="3" height="15" fill="rgb(226,134,16)"/><text x="816.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.25%)</title><rect x="813" y="500" width="3" height="15" fill="rgb(240,195,15)"/><text x="816.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.25%)</title><rect x="813" y="516" width="3" height="15" fill="rgb(239,54,12)"/><text x="816.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.25%)</title><rect x="813" y="532" width="3" height="15" fill="rgb(242,4,51)"/><text x="816.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.25%)</title><rect x="813" y="548" width="3" height="15" fill="rgb(243,228,23)"/><text x="816.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="813" y="564" width="3" height="15" fill="rgb(238,96,26)"/><text x="816.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="813" y="580" width="3" height="15" fill="rgb(208,148,38)"/><text x="816.00" y="590.50"></text></g><g><title>0x7f35dd03900a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="813" y="596" width="3" height="15" fill="rgb(234,6,51)"/><text x="816.00" y="606.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (12 samples, 3.04%)</title><rect x="783" y="228" width="36" height="15" fill="rgb(228,60,52)"/><text x="786.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (10 samples, 2.53%)</title><rect x="789" y="244" width="30" height="15" fill="rgb(230,26,51)"/><text x="792.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (10 samples, 2.53%)</title><rect x="789" y="260" width="30" height="15" fill="rgb(241,61,39)"/><text x="792.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (7 samples, 1.77%)</title><rect x="798" y="276" width="21" height="15" fill="rgb(226,215,32)"/><text x="801.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (7 samples, 1.77%)</title><rect x="798" y="292" width="21" height="15" fill="rgb(213,105,53)"/><text x="801.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (7 samples, 1.77%)</title><rect x="798" y="308" width="21" height="15" fill="rgb(213,119,18)"/><text x="801.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (7 samples, 1.77%)</title><rect x="798" y="324" width="21" height="15" fill="rgb(244,217,20)"/><text x="801.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (7 samples, 1.77%)</title><rect x="798" y="340" width="21" height="15" fill="rgb(239,19,48)"/><text x="801.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (7 samples, 1.77%)</title><rect x="798" y="356" width="21" height="15" fill="rgb(223,193,0)"/><text x="801.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (7 samples, 1.77%)</title><rect x="798" y="372" width="21" height="15" fill="rgb(215,61,52)"/><text x="801.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (7 samples, 1.77%)</title><rect x="798" y="388" width="21" height="15" fill="rgb(207,161,25)"/><text x="801.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (7 samples, 1.77%)</title><rect x="798" y="404" width="21" height="15" fill="rgb(248,198,16)"/><text x="801.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (5 samples, 1.27%)</title><rect x="804" y="420" width="15" height="15" fill="rgb(234,65,19)"/><text x="807.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (5 samples, 1.27%)</title><rect x="804" y="436" width="15" height="15" fill="rgb(239,160,52)"/><text x="807.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (2 samples, 0.51%)</title><rect x="813" y="452" width="6" height="15" fill="rgb(217,20,9)"/><text x="816.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.51%)</title><rect x="813" y="468" width="6" height="15" fill="rgb(244,188,39)"/><text x="816.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:348) (1 samples, 0.25%)</title><rect x="816" y="484" width="3" height="15" fill="rgb(229,205,15)"/><text x="819.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:60) (1 samples, 0.25%)</title><rect x="819" y="228" width="3" height="15" fill="rgb(217,130,25)"/><text x="822.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:61) (2 samples, 0.51%)</title><rect x="822" y="228" width="6" height="15" fill="rgb(247,50,50)"/><text x="825.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.25%)</title><rect x="840" y="244" width="3" height="15" fill="rgb(222,77,15)"/><text x="843.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.25%)</title><rect x="840" y="260" width="3" height="15" fill="rgb(221,28,5)"/><text x="843.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.25%)</title><rect x="843" y="260" width="3" height="15" fill="rgb(229,216,11)"/><text x="846.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:960) (1 samples, 0.25%)</title><rect x="843" y="276" width="3" height="15" fill="rgb(252,29,49)"/><text x="846.00" y="286.50"></text></g><g><title>array_reshape (methods.c:201) (2 samples, 0.51%)</title><rect x="843" y="244" width="6" height="15" fill="rgb(230,60,15)"/><text x="846.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:92) (1 samples, 0.25%)</title><rect x="846" y="260" width="3" height="15" fill="rgb(237,21,52)"/><text x="849.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (8 samples, 2.03%)</title><rect x="828" y="228" width="24" height="15" fill="rgb(205,187,54)"/><text x="831.00" y="238.50">_..</text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.25%)</title><rect x="849" y="244" width="3" height="15" fill="rgb(253,84,34)"/><text x="852.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.25%)</title><rect x="849" y="260" width="3" height="15" fill="rgb(205,53,48)"/><text x="852.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.25%)</title><rect x="849" y="276" width="3" height="15" fill="rgb(225,214,54)"/><text x="852.00" y="286.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.25%)</title><rect x="849" y="292" width="3" height="15" fill="rgb(223,162,47)"/><text x="852.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.25%)</title><rect x="849" y="308" width="3" height="15" fill="rgb(240,29,0)"/><text x="852.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 6.08%)</title><rect x="783" y="212" width="72" height="15" fill="rgb(211,102,3)"/><text x="786.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:63) (1 samples, 0.25%)</title><rect x="852" y="228" width="3" height="15" fill="rgb(235,188,24)"/><text x="855.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (26 samples, 6.58%)</title><rect x="783" y="196" width="78" height="15" fill="rgb(243,198,25)"/><text x="786.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (2 samples, 0.51%)</title><rect x="855" y="212" width="6" height="15" fill="rgb(252,100,39)"/><text x="858.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (51 samples, 12.91%)</title><rect x="718" y="180" width="152" height="15" fill="rgb(249,223,8)"/><text x="721.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 0.76%)</title><rect x="861" y="196" width="9" height="15" fill="rgb(244,123,13)"/><text x="864.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.25%)</title><rect x="867" y="212" width="3" height="15" fill="rgb(238,166,42)"/><text x="870.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.51%)</title><rect x="870" y="180" width="6" height="15" fill="rgb(245,190,35)"/><text x="873.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.25%)</title><rect x="876" y="180" width="3" height="15" fill="rgb(250,15,4)"/><text x="879.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.25%)</title><rect x="879" y="180" width="3" height="15" fill="rgb(239,34,29)"/><text x="882.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (8 samples, 2.03%)</title><rect x="882" y="180" width="24" height="15" fill="rgb(236,51,8)"/><text x="885.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (76 samples, 19.24%)</title><rect x="685" y="164" width="227" height="15" fill="rgb(217,54,3)"/><text x="688.00" y="174.50">_run_sequence_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.51%)</title><rect x="906" y="180" width="6" height="15" fill="rgb(249,31,36)"/><text x="909.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (7 samples, 1.77%)</title><rect x="912" y="164" width="21" height="15" fill="rgb(213,20,37)"/><text x="915.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (5 samples, 1.27%)</title><rect x="918" y="180" width="15" height="15" fill="rgb(236,88,49)"/><text x="921.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="933" y="164" width="3" height="15" fill="rgb(241,176,54)"/><text x="936.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="933" y="180" width="3" height="15" fill="rgb(214,152,26)"/><text x="936.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.25%)</title><rect x="933" y="196" width="3" height="15" fill="rgb(251,26,4)"/><text x="936.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:45) (99 samples, 25.06%)</title><rect x="643" y="52" width="296" height="15" fill="rgb(229,72,43)"/><text x="646.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabili..</text></g><g><title>profile_pyrt (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:44) (99 samples, 25.06%)</title><rect x="643" y="68" width="296" height="15" fill="rgb(206,137,21)"/><text x="646.00" y="78.50">profile_pyrt (bench_SVC_poly_m_cl_proba..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29) (99 samples, 25.06%)</title><rect x="643" y="84" width="296" height="15" fill="rgb(231,63,42)"/><text x="646.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_prob..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23) (98 samples, 24.81%)</title><rect x="646" y="100" width="293" height="15" fill="rgb(205,223,34)"/><text x="649.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilit..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (97 samples, 24.56%)</title><rect x="649" y="116" width="290" height="15" fill="rgb(214,220,13)"/><text x="652.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (95 samples, 24.05%)</title><rect x="655" y="132" width="284" height="15" fill="rgb(220,89,14)"/><text x="658.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (88 samples, 22.28%)</title><rect x="676" y="148" width="263" height="15" fill="rgb(209,219,11)"/><text x="679.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.25%)</title><rect x="936" y="164" width="3" height="15" fill="rgb(239,43,21)"/><text x="939.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.25%)</title><rect x="936" y="180" width="3" height="15" fill="rgb(230,129,32)"/><text x="939.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.25%)</title><rect x="936" y="196" width="3" height="15" fill="rgb(225,186,16)"/><text x="939.00" y="206.50"></text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:28) (1 samples, 0.25%)</title><rect x="939" y="84" width="3" height="15" fill="rgb(233,177,0)"/><text x="942.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="939" y="100" width="3" height="15" fill="rgb(205,191,11)"/><text x="942.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.25%)</title><rect x="939" y="116" width="3" height="15" fill="rgb(220,105,21)"/><text x="942.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.25%)</title><rect x="939" y="132" width="3" height="15" fill="rgb(246,41,21)"/><text x="942.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.25%)</title><rect x="939" y="148" width="3" height="15" fill="rgb(224,170,51)"/><text x="942.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.25%)</title><rect x="939" y="164" width="3" height="15" fill="rgb(224,136,26)"/><text x="942.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="939" y="180" width="3" height="15" fill="rgb(243,50,25)"/><text x="942.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="939" y="196" width="3" height="15" fill="rgb(225,100,2)"/><text x="942.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="939" y="212" width="3" height="15" fill="rgb(211,154,41)"/><text x="942.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="939" y="228" width="3" height="15" fill="rgb(237,84,3)"/><text x="942.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="939" y="244" width="3" height="15" fill="rgb(254,71,30)"/><text x="942.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.25%)</title><rect x="939" y="260" width="3" height="15" fill="rgb(222,228,8)"/><text x="942.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="939" y="276" width="3" height="15" fill="rgb(229,86,38)"/><text x="942.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="939" y="292" width="3" height="15" fill="rgb(205,41,47)"/><text x="942.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="939" y="308" width="3" height="15" fill="rgb(222,15,24)"/><text x="942.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="939" y="324" width="3" height="15" fill="rgb(215,30,10)"/><text x="942.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="939" y="340" width="3" height="15" fill="rgb(209,96,49)"/><text x="942.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.25%)</title><rect x="939" y="356" width="3" height="15" fill="rgb(248,184,17)"/><text x="942.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="939" y="372" width="3" height="15" fill="rgb(205,196,46)"/><text x="942.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="939" y="388" width="3" height="15" fill="rgb(212,182,3)"/><text x="942.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="939" y="404" width="3" height="15" fill="rgb(228,85,44)"/><text x="942.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="939" y="420" width="3" height="15" fill="rgb(233,219,42)"/><text x="942.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="939" y="436" width="3" height="15" fill="rgb(237,197,36)"/><text x="942.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.25%)</title><rect x="939" y="452" width="3" height="15" fill="rgb(249,163,28)"/><text x="942.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="939" y="468" width="3" height="15" fill="rgb(233,202,13)"/><text x="942.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="939" y="484" width="3" height="15" fill="rgb(227,227,28)"/><text x="942.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.25%)</title><rect x="939" y="500" width="3" height="15" fill="rgb(221,68,1)"/><text x="942.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.25%)</title><rect x="939" y="516" width="3" height="15" fill="rgb(206,173,2)"/><text x="942.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.25%)</title><rect x="939" y="532" width="3" height="15" fill="rgb(239,59,32)"/><text x="942.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="939" y="548" width="3" height="15" fill="rgb(239,21,40)"/><text x="942.00" y="558.50"></text></g><g><title>0x7f359d0afaf0 (?) (1 samples, 0.25%)</title><rect x="939" y="564" width="3" height="15" fill="rgb(217,139,5)"/><text x="942.00" y="574.50"></text></g><g><title>0x7f359d0c21d2 (?) (1 samples, 0.25%)</title><rect x="939" y="580" width="3" height="15" fill="rgb(212,170,12)"/><text x="942.00" y="590.50"></text></g><g><title>0x7f359d0c17b8 (?) (1 samples, 0.25%)</title><rect x="939" y="596" width="3" height="15" fill="rgb(239,160,31)"/><text x="942.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="939" y="612" width="3" height="15" fill="rgb(248,199,4)"/><text x="942.00" y="622.50"></text></g><g><title>0x7f359d0bf9cb (?) (1 samples, 0.25%)</title><rect x="939" y="628" width="3" height="15" fill="rgb(209,3,46)"/><text x="942.00" y="638.50"></text></g><g><title>0x7f359d0bede7 (?) (1 samples, 0.25%)</title><rect x="939" y="644" width="3" height="15" fill="rgb(234,166,38)"/><text x="942.00" y="654.50"></text></g><g><title>0x7f359d698c4b (?) (1 samples, 0.25%)</title><rect x="939" y="660" width="3" height="15" fill="rgb(213,107,15)"/><text x="942.00" y="670.50"></text></g><g><title>0x7f359d665f5e (?) (1 samples, 0.25%)</title><rect x="939" y="676" width="3" height="15" fill="rgb(214,94,27)"/><text x="942.00" y="686.50"></text></g><g><title>0x7f359d6657b0 (?) (1 samples, 0.25%)</title><rect x="939" y="692" width="3" height="15" fill="rgb(247,12,34)"/><text x="942.00" y="702.50"></text></g><g><title>0x7f359d5f4017 (?) (1 samples, 0.25%)</title><rect x="939" y="708" width="3" height="15" fill="rgb(227,73,52)"/><text x="942.00" y="718.50"></text></g><g><title>0x7f359d5f3df6 (?) (1 samples, 0.25%)</title><rect x="939" y="724" width="3" height="15" fill="rgb(224,214,18)"/><text x="942.00" y="734.50"></text></g><g><title>0x7f359d6bb14f (?) (1 samples, 0.25%)</title><rect x="939" y="740" width="3" height="15" fill="rgb(245,21,2)"/><text x="942.00" y="750.50"></text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:22) (1 samples, 0.25%)</title><rect x="942" y="100" width="3" height="15" fill="rgb(252,85,38)"/><text x="945.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.25%)</title><rect x="945" y="116" width="3" height="15" fill="rgb(215,179,13)"/><text x="948.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.25%)</title><rect x="948" y="116" width="3" height="15" fill="rgb(237,45,35)"/><text x="951.00" y="126.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.25%)</title><rect x="948" y="132" width="3" height="15" fill="rgb(206,152,17)"/><text x="951.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.25%)</title><rect x="948" y="148" width="3" height="15" fill="rgb(248,190,23)"/><text x="951.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.51%)</title><rect x="956" y="148" width="6" height="15" fill="rgb(223,175,20)"/><text x="959.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.25%)</title><rect x="962" y="148" width="3" height="15" fill="rgb(223,100,2)"/><text x="965.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.25%)</title><rect x="968" y="196" width="3" height="15" fill="rgb(249,104,4)"/><text x="971.00" y="206.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="995" y="260" width="3" height="15" fill="rgb(223,25,4)"/><text x="998.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="995" y="276" width="3" height="15" fill="rgb(217,56,39)"/><text x="998.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="998" y="260" width="3" height="15" fill="rgb(228,27,7)"/><text x="1001.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (11 samples, 2.78%)</title><rect x="971" y="196" width="33" height="15" fill="rgb(247,59,39)"/><text x="974.00" y="206.50">ru..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (9 samples, 2.28%)</title><rect x="977" y="212" width="27" height="15" fill="rgb(211,170,19)"/><text x="980.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.03%)</title><rect x="980" y="228" width="24" height="15" fill="rgb(224,63,32)"/><text x="983.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.01%)</title><rect x="992" y="244" width="12" height="15" fill="rgb(241,217,47)"/><text x="995.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1001" y="260" width="3" height="15" fill="rgb(228,211,21)"/><text x="1004.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1001" y="276" width="3" height="15" fill="rgb(242,207,28)"/><text x="1004.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="1025" y="260" width="3" height="15" fill="rgb(233,160,11)"/><text x="1028.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="1028" y="276" width="3" height="15" fill="rgb(247,229,5)"/><text x="1031.00" y="286.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1028" y="260" width="6" height="15" fill="rgb(215,128,8)"/><text x="1031.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1031" y="276" width="3" height="15" fill="rgb(232,133,46)"/><text x="1034.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="1031" y="292" width="3" height="15" fill="rgb(251,14,19)"/><text x="1034.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1040" y="292" width="3" height="15" fill="rgb(246,225,30)"/><text x="1043.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1040" y="308" width="3" height="15" fill="rgb(208,176,25)"/><text x="1043.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1043" y="292" width="3" height="15" fill="rgb(216,168,28)"/><text x="1046.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1046" y="340" width="3" height="15" fill="rgb(227,175,31)"/><text x="1049.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1046" y="356" width="3" height="15" fill="rgb(217,97,0)"/><text x="1049.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1046" y="372" width="3" height="15" fill="rgb(251,195,52)"/><text x="1049.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1046" y="388" width="3" height="15" fill="rgb(254,139,18)"/><text x="1049.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1049" y="356" width="3" height="15" fill="rgb(206,80,29)"/><text x="1052.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1049" y="372" width="3" height="15" fill="rgb(246,37,45)"/><text x="1052.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1049" y="388" width="3" height="15" fill="rgb(250,110,49)"/><text x="1052.00" y="398.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1049" y="404" width="3" height="15" fill="rgb(223,81,14)"/><text x="1052.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1052" y="356" width="3" height="15" fill="rgb(213,9,7)"/><text x="1055.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1049" y="340" width="9" height="15" fill="rgb(216,2,10)"/><text x="1052.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1055" y="356" width="3" height="15" fill="rgb(228,101,23)"/><text x="1058.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1058" y="340" width="3" height="15" fill="rgb(235,172,54)"/><text x="1061.00" y="350.50"></text></g><g><title>0x7f35dd0581d6 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1058" y="356" width="3" height="15" fill="rgb(245,43,14)"/><text x="1061.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1061" y="340" width="3" height="15" fill="rgb(249,172,31)"/><text x="1064.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1064" y="340" width="3" height="15" fill="rgb(215,74,17)"/><text x="1067.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1064" y="356" width="3" height="15" fill="rgb(206,170,2)"/><text x="1067.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1064" y="372" width="3" height="15" fill="rgb(250,64,27)"/><text x="1067.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1064" y="388" width="3" height="15" fill="rgb(209,33,9)"/><text x="1067.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="468" width="3" height="15" fill="rgb(233,203,38)"/><text x="1082.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="484" width="3" height="15" fill="rgb(250,48,39)"/><text x="1082.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1079" y="500" width="3" height="15" fill="rgb(242,172,37)"/><text x="1082.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1079" y="516" width="3" height="15" fill="rgb(205,123,50)"/><text x="1082.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1079" y="532" width="3" height="15" fill="rgb(224,101,19)"/><text x="1082.00" y="542.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1076" y="356" width="9" height="15" fill="rgb(232,199,16)"/><text x="1079.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1076" y="372" width="9" height="15" fill="rgb(217,20,25)"/><text x="1079.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1076" y="388" width="9" height="15" fill="rgb(208,43,16)"/><text x="1079.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1076" y="404" width="9" height="15" fill="rgb(207,14,14)"/><text x="1079.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1076" y="420" width="9" height="15" fill="rgb(218,41,47)"/><text x="1079.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1076" y="436" width="9" height="15" fill="rgb(239,215,40)"/><text x="1079.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1079" y="452" width="6" height="15" fill="rgb(246,52,38)"/><text x="1082.00" y="462.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1082" y="468" width="3" height="15" fill="rgb(230,166,7)"/><text x="1085.00" y="478.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1085" y="356" width="3" height="15" fill="rgb(243,105,11)"/><text x="1088.00" y="366.50"></text></g><g><title>0x7f35dd1a1b78 (libm-2.29.so) (2 samples, 0.51%)</title><rect x="1091" y="372" width="6" height="15" fill="rgb(208,205,14)"/><text x="1094.00" y="382.50"></text></g><g><title>0x7f35dd1a1c50 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1097" y="372" width="3" height="15" fill="rgb(207,102,18)"/><text x="1100.00" y="382.50"></text></g><g><title>0x7f35dd1a1cb5 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1100" y="372" width="3" height="15" fill="rgb(222,97,5)"/><text x="1103.00" y="382.50"></text></g><g><title>0x7f35dd1a1d74 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1103" y="372" width="3" height="15" fill="rgb(231,2,35)"/><text x="1106.00" y="382.50"></text></g><g><title>0x7f35dd1a1df8 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1106" y="372" width="3" height="15" fill="rgb(248,228,43)"/><text x="1109.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.80%)</title><rect x="1067" y="340" width="45" height="15" fill="rgb(243,65,26)"/><text x="1070.00" y="350.50">onnx..</text></g><g><title>powf32x (libm-2.29.so) (8 samples, 2.03%)</title><rect x="1088" y="356" width="24" height="15" fill="rgb(235,222,23)"/><text x="1091.00" y="366.50">p..</text></g><g><title>0x7f35dd1a1e0d (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1109" y="372" width="3" height="15" fill="rgb(211,149,18)"/><text x="1112.00" y="382.50"></text></g><g><title>onnxruntime::DataTypeImpl::IsSparseTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1112" y="404" width="3" height="15" fill="rgb(230,9,9)"/><text x="1115.00" y="414.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 6.08%)</title><rect x="1046" y="308" width="72" height="15" fill="rgb(245,41,49)"/><text x="1049.00" y="318.50">onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 6.08%)</title><rect x="1046" y="324" width="72" height="15" fill="rgb(217,8,54)"/><text x="1049.00" y="334.50">onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1112" y="340" width="6" height="15" fill="rgb(227,157,0)"/><text x="1115.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1112" y="356" width="6" height="15" fill="rgb(218,29,51)"/><text x="1115.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1112" y="372" width="6" height="15" fill="rgb(221,118,22)"/><text x="1115.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1112" y="388" width="6" height="15" fill="rgb(242,226,20)"/><text x="1115.00" y="398.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::GetCreateFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1115" y="404" width="3" height="15" fill="rgb(240,71,12)"/><text x="1118.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 6.84%)</title><rect x="1040" y="276" width="81" height="15" fill="rgb(247,155,14)"/><text x="1043.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 6.33%)</title><rect x="1046" y="292" width="75" height="15" fill="rgb(226,166,5)"/><text x="1049.00" y="302.50">onnxrunt..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1118" y="308" width="3" height="15" fill="rgb(233,74,3)"/><text x="1121.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::SetDeviceCopyChecks (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1118" y="324" width="3" height="15" fill="rgb(254,168,43)"/><text x="1121.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1121" y="276" width="3" height="15" fill="rgb(244,208,1)"/><text x="1124.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1121" y="292" width="3" height="15" fill="rgb(230,217,39)"/><text x="1124.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 7.85%)</title><rect x="1034" y="260" width="93" height="15" fill="rgb(213,220,35)"/><text x="1037.00" y="270.50">onnxruntime..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1124" y="276" width="3" height="15" fill="rgb(231,42,49)"/><text x="1127.00" y="286.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1127" y="260" width="3" height="15" fill="rgb(249,65,46)"/><text x="1130.00" y="270.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1130" y="260" width="3" height="15" fill="rgb(235,108,29)"/><text x="1133.00" y="270.50"></text></g><g><title>0x7f35dd037a41 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1142" y="292" width="3" height="15" fill="rgb(234,225,53)"/><text x="1145.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.27%)</title><rect x="1133" y="260" width="15" height="15" fill="rgb(222,229,28)"/><text x="1136.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1142" y="276" width="6" height="15" fill="rgb(223,210,13)"/><text x="1145.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1145" y="292" width="3" height="15" fill="rgb(205,103,24)"/><text x="1148.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1145" y="308" width="3" height="15" fill="rgb(250,118,50)"/><text x="1148.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1145" y="324" width="3" height="15" fill="rgb(239,206,7)"/><text x="1148.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.25%)</title><rect x="1148" y="292" width="3" height="15" fill="rgb(243,99,33)"/><text x="1151.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.25%)</title><rect x="1148" y="308" width="3" height="15" fill="rgb(253,54,42)"/><text x="1151.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.25%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(209,145,4)"/><text x="1154.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c:4084) (1 samples, 0.25%)</title><rect x="1151" y="308" width="3" height="15" fill="rgb(206,41,54)"/><text x="1154.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.76%)</title><rect x="1148" y="260" width="9" height="15" fill="rgb(230,88,15)"/><text x="1151.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.76%)</title><rect x="1148" y="276" width="9" height="15" fill="rgb(249,197,53)"/><text x="1151.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.25%)</title><rect x="1154" y="292" width="3" height="15" fill="rgb(218,47,21)"/><text x="1157.00" y="302.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1157" y="260" width="3" height="15" fill="rgb(211,211,20)"/><text x="1160.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1160" y="260" width="3" height="15" fill="rgb(216,68,20)"/><text x="1163.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1160" y="276" width="3" height="15" fill="rgb(238,125,41)"/><text x="1163.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1160" y="292" width="3" height="15" fill="rgb(245,53,44)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7f35dd037d07 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1160" y="308" width="3" height="15" fill="rgb(232,117,13)"/><text x="1163.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 12.41%)</title><rect x="1019" y="244" width="147" height="15" fill="rgb(213,41,26)"/><text x="1022.00" y="254.50">onnxruntime::pytho..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1163" y="260" width="3" height="15" fill="rgb(221,8,9)"/><text x="1166.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1163" y="276" width="3" height="15" fill="rgb(218,131,35)"/><text x="1166.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1163" y="292" width="3" height="15" fill="rgb(238,189,4)"/><text x="1166.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1163" y="308" width="3" height="15" fill="rgb(247,229,5)"/><text x="1166.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1163" y="324" width="3" height="15" fill="rgb(252,193,54)"/><text x="1166.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1163" y="340" width="3" height="15" fill="rgb(210,15,2)"/><text x="1166.00" y="350.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (58 samples, 14.68%)</title><rect x="1004" y="196" width="174" height="15" fill="rgb(225,171,7)"/><text x="1007.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 13.42%)</title><rect x="1019" y="212" width="159" height="15" fill="rgb(248,172,52)"/><text x="1022.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (53 samples, 13.42%)</title><rect x="1019" y="228" width="159" height="15" fill="rgb(211,8,12)"/><text x="1022.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.01%)</title><rect x="1166" y="244" width="12" height="15" fill="rgb(249,9,48)"/><text x="1169.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1172" y="260" width="6" height="15" fill="rgb(244,178,30)"/><text x="1175.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1175" y="276" width="3" height="15" fill="rgb(254,180,8)"/><text x="1178.00" y="286.50"></text></g><g><title>0x7f35dd057d50 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1175" y="292" width="3" height="15" fill="rgb(244,103,8)"/><text x="1178.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (72 samples, 18.23%)</title><rect x="965" y="164" width="216" height="15" fill="rgb(240,35,5)"/><text x="968.00" y="174.50">_run_whole_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (71 samples, 17.97%)</title><rect x="968" y="180" width="213" height="15" fill="rgb(220,130,43)"/><text x="971.00" y="190.50">run (mlprodict/onnxrt/ops_wh..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.25%)</title><rect x="1178" y="196" width="3" height="15" fill="rgb(217,81,39)"/><text x="1181.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (78 samples, 19.75%)</title><rect x="951" y="132" width="233" height="15" fill="rgb(247,48,53)"/><text x="954.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (73 samples, 18.48%)</title><rect x="965" y="148" width="219" height="15" fill="rgb(214,221,32)"/><text x="968.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.25%)</title><rect x="1181" y="164" width="3" height="15" fill="rgb(206,128,42)"/><text x="1184.00" y="174.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.25%)</title><rect x="1184" y="132" width="3" height="15" fill="rgb(222,77,42)"/><text x="1187.00" y="142.50"></text></g><g><title>all (395 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,18,2)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:52) (84 samples, 21.27%)</title><rect x="939" y="52" width="251" height="15" fill="rgb(229,228,14)"/><text x="942.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_pro..</text></g><g><title>profile_ort (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:51) (84 samples, 21.27%)</title><rect x="939" y="68" width="251" height="15" fill="rgb(243,91,22)"/><text x="942.00" y="78.50">profile_ort (bench_SVC_poly_m_cl_..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:29) (83 samples, 21.01%)</title><rect x="942" y="84" width="248" height="15" fill="rgb(223,36,52)"/><text x="945.00" y="94.50">setup_profile (bench_SVC_poly_m_c..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1_4_12_float_.py:23) (82 samples, 20.76%)</title><rect x="945" y="100" width="245" height="15" fill="rgb(217,201,34)"/><text x="948.00" y="110.50">profile (bench_SVC_poly_m_cl_pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (80 samples, 20.25%)</title><rect x="951" y="116" width="239" height="15" fill="rgb(248,31,51)"/><text x="954.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(241,40,29)"/><text x="1190.00" y="142.50"></text></g></g></svg>