<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2710" onload="init(evt)" viewBox="0 0 1200 2710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2710" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2693.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2693.00"> </text><g id="frames"><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (1 samples, 0.24%)</title><rect x="12" y="164" width="3" height="15" fill="rgb(251,81,52)"/><text x="15.00" y="174.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (1 samples, 0.24%)</title><rect x="12" y="180" width="3" height="15" fill="rgb(209,191,12)"/><text x="15.00" y="190.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (1 samples, 0.24%)</title><rect x="12" y="196" width="3" height="15" fill="rgb(231,179,0)"/><text x="15.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.24%)</title><rect x="12" y="212" width="3" height="15" fill="rgb(254,43,28)"/><text x="15.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.24%)</title><rect x="12" y="228" width="3" height="15" fill="rgb(251,63,5)"/><text x="15.00" y="238.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (1 samples, 0.24%)</title><rect x="15" y="180" width="3" height="15" fill="rgb(234,6,24)"/><text x="18.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.24%)</title><rect x="15" y="196" width="3" height="15" fill="rgb(253,153,27)"/><text x="18.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.24%)</title><rect x="15" y="212" width="3" height="15" fill="rgb(212,189,33)"/><text x="18.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.24%)</title><rect x="15" y="228" width="3" height="15" fill="rgb(214,174,26)"/><text x="18.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.24%)</title><rect x="15" y="244" width="3" height="15" fill="rgb(207,52,38)"/><text x="18.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.24%)</title><rect x="15" y="260" width="3" height="15" fill="rgb(254,162,20)"/><text x="18.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.24%)</title><rect x="15" y="276" width="3" height="15" fill="rgb(224,55,52)"/><text x="18.00" y="286.50"></text></g><g><title>PyArray_Return (scalarapi.c:854) (1 samples, 0.24%)</title><rect x="15" y="292" width="3" height="15" fill="rgb(213,54,38)"/><text x="18.00" y="302.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:18) (4 samples, 0.94%)</title><rect x="10" y="100" width="11" height="15" fill="rgb(253,226,12)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.94%)</title><rect x="10" y="116" width="11" height="15" fill="rgb(220,94,40)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 0.94%)</title><rect x="10" y="132" width="11" height="15" fill="rgb(233,2,14)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (4 samples, 0.94%)</title><rect x="10" y="148" width="11" height="15" fill="rgb(253,37,6)"/><text x="13.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (2 samples, 0.47%)</title><rect x="15" y="164" width="6" height="15" fill="rgb(239,161,44)"/><text x="18.00" y="174.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (1 samples, 0.24%)</title><rect x="18" y="180" width="3" height="15" fill="rgb(254,81,0)"/><text x="21.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="26" y="164" width="3" height="15" fill="rgb(243,142,17)"/><text x="29.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="26" y="180" width="3" height="15" fill="rgb(241,70,2)"/><text x="29.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.24%)</title><rect x="26" y="196" width="3" height="15" fill="rgb(210,214,24)"/><text x="29.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.24%)</title><rect x="32" y="180" width="2" height="15" fill="rgb(253,106,39)"/><text x="35.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.24%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(231,109,10)"/><text x="35.00" y="206.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (7 samples, 1.65%)</title><rect x="29" y="164" width="19" height="15" fill="rgb(230,119,8)"/><text x="32.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.18%)</title><rect x="34" y="180" width="14" height="15" fill="rgb(210,178,16)"/><text x="37.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.47%)</title><rect x="43" y="196" width="5" height="15" fill="rgb(231,3,39)"/><text x="46.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.24%)</title><rect x="46" y="212" width="2" height="15" fill="rgb(207,215,52)"/><text x="49.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.24%)</title><rect x="54" y="212" width="3" height="15" fill="rgb(242,147,3)"/><text x="57.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.24%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(241,139,33)"/><text x="60.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.24%)</title><rect x="62" y="228" width="3" height="15" fill="rgb(223,106,54)"/><text x="65.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.71%)</title><rect x="59" y="212" width="9" height="15" fill="rgb(247,30,50)"/><text x="62.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.24%)</title><rect x="65" y="228" width="3" height="15" fill="rgb(247,105,22)"/><text x="68.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.24%)</title><rect x="71" y="244" width="2" height="15" fill="rgb(230,72,46)"/><text x="74.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.71%)</title><rect x="68" y="212" width="8" height="15" fill="rgb(207,21,50)"/><text x="71.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.47%)</title><rect x="71" y="228" width="5" height="15" fill="rgb(218,86,40)"/><text x="74.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.24%)</title><rect x="73" y="244" width="3" height="15" fill="rgb(228,222,35)"/><text x="76.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.24%)</title><rect x="76" y="228" width="3" height="15" fill="rgb(232,55,28)"/><text x="79.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.24%)</title><rect x="76" y="244" width="3" height="15" fill="rgb(252,192,13)"/><text x="79.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.47%)</title><rect x="76" y="212" width="6" height="15" fill="rgb(229,37,53)"/><text x="79.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.24%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(220,90,47)"/><text x="82.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.24%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(242,96,44)"/><text x="82.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1391) (1 samples, 0.24%)</title><rect x="79" y="260" width="3" height="15" fill="rgb(253,18,1)"/><text x="82.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.94%)</title><rect x="82" y="228" width="11" height="15" fill="rgb(225,127,52)"/><text x="85.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.47%)</title><rect x="87" y="244" width="6" height="15" fill="rgb(214,72,0)"/><text x="90.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.18%)</title><rect x="82" y="212" width="14" height="15" fill="rgb(231,74,25)"/><text x="85.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.24%)</title><rect x="93" y="228" width="3" height="15" fill="rgb(225,209,32)"/><text x="96.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.24%)</title><rect x="93" y="244" width="3" height="15" fill="rgb(232,48,44)"/><text x="96.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.47%)</title><rect x="96" y="228" width="5" height="15" fill="rgb(240,31,41)"/><text x="99.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.41%)</title><rect x="96" y="212" width="16" height="15" fill="rgb(231,227,22)"/><text x="99.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.94%)</title><rect x="101" y="228" width="11" height="15" fill="rgb(237,85,3)"/><text x="104.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.71%)</title><rect x="104" y="244" width="8" height="15" fill="rgb(239,78,43)"/><text x="107.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.24%)</title><rect x="109" y="260" width="3" height="15" fill="rgb(252,14,45)"/><text x="112.00" y="270.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (24 samples, 5.65%)</title><rect x="51" y="180" width="67" height="15" fill="rgb(235,210,36)"/><text x="54.00" y="190.50">_check_..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (23 samples, 5.41%)</title><rect x="54" y="196" width="64" height="15" fill="rgb(233,70,38)"/><text x="57.00" y="206.50">_check_..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (2 samples, 0.47%)</title><rect x="112" y="212" width="6" height="15" fill="rgb(225,42,53)"/><text x="115.00" y="222.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:986) (1 samples, 0.24%)</title><rect x="118" y="180" width="3" height="15" fill="rgb(209,144,48)"/><text x="121.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.47%)</title><rect x="126" y="212" width="6" height="15" fill="rgb(241,48,48)"/><text x="129.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.47%)</title><rect x="132" y="212" width="5" height="15" fill="rgb(215,144,23)"/><text x="135.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.24%)</title><rect x="134" y="228" width="3" height="15" fill="rgb(232,201,37)"/><text x="137.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.24%)</title><rect x="134" y="244" width="3" height="15" fill="rgb(249,95,51)"/><text x="137.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.24%)</title><rect x="137" y="228" width="3" height="15" fill="rgb(252,67,18)"/><text x="140.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.47%)</title><rect x="137" y="212" width="6" height="15" fill="rgb(209,214,33)"/><text x="140.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.24%)</title><rect x="140" y="228" width="3" height="15" fill="rgb(220,44,39)"/><text x="143.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.24%)</title><rect x="143" y="212" width="3" height="15" fill="rgb(243,22,8)"/><text x="146.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.24%)</title><rect x="143" y="228" width="3" height="15" fill="rgb(209,51,9)"/><text x="146.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.71%)</title><rect x="146" y="228" width="8" height="15" fill="rgb(223,72,8)"/><text x="149.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.24%)</title><rect x="151" y="244" width="3" height="15" fill="rgb(239,170,15)"/><text x="154.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.94%)</title><rect x="146" y="212" width="11" height="15" fill="rgb(215,25,51)"/><text x="149.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.24%)</title><rect x="154" y="228" width="3" height="15" fill="rgb(251,139,53)"/><text x="157.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.24%)</title><rect x="154" y="244" width="3" height="15" fill="rgb(240,60,22)"/><text x="157.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.24%)</title><rect x="157" y="212" width="2" height="15" fill="rgb(226,105,51)"/><text x="160.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.24%)</title><rect x="157" y="228" width="2" height="15" fill="rgb(227,147,10)"/><text x="160.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.24%)</title><rect x="157" y="244" width="2" height="15" fill="rgb(226,93,24)"/><text x="160.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.24%)</title><rect x="159" y="212" width="3" height="15" fill="rgb(231,225,15)"/><text x="162.00" y="222.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;:6) (1 samples, 0.24%)</title><rect x="159" y="228" width="3" height="15" fill="rgb(223,117,30)"/><text x="162.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.24%)</title><rect x="162" y="228" width="3" height="15" fill="rgb(243,104,17)"/><text x="165.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:556) (1 samples, 0.24%)</title><rect x="165" y="244" width="3" height="15" fill="rgb(242,113,33)"/><text x="168.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.24%)</title><rect x="165" y="260" width="3" height="15" fill="rgb(243,106,36)"/><text x="168.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.24%)</title><rect x="165" y="276" width="3" height="15" fill="rgb(239,200,6)"/><text x="168.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.24%)</title><rect x="165" y="292" width="3" height="15" fill="rgb(234,102,26)"/><text x="168.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.24%)</title><rect x="165" y="308" width="3" height="15" fill="rgb(221,217,46)"/><text x="168.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.24%)</title><rect x="165" y="324" width="3" height="15" fill="rgb(239,132,15)"/><text x="168.00" y="334.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (17 samples, 4.00%)</title><rect x="123" y="196" width="48" height="15" fill="rgb(238,203,20)"/><text x="126.00" y="206.50">bina..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (3 samples, 0.71%)</title><rect x="162" y="212" width="9" height="15" fill="rgb(231,194,13)"/><text x="165.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (2 samples, 0.47%)</title><rect x="165" y="228" width="6" height="15" fill="rgb(238,183,39)"/><text x="168.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (1 samples, 0.24%)</title><rect x="168" y="244" width="3" height="15" fill="rgb(253,15,2)"/><text x="171.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.24%)</title><rect x="168" y="260" width="3" height="15" fill="rgb(244,43,33)"/><text x="171.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.24%)</title><rect x="168" y="276" width="3" height="15" fill="rgb(215,73,12)"/><text x="171.00" y="286.50"></text></g><g><title>0x7fbce2fcfc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="168" y="292" width="3" height="15" fill="rgb(233,17,40)"/><text x="171.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.24%)</title><rect x="171" y="228" width="2" height="15" fill="rgb(238,229,18)"/><text x="174.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="171" y="244" width="2" height="15" fill="rgb(241,200,43)"/><text x="174.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.24%)</title><rect x="171" y="260" width="2" height="15" fill="rgb(240,133,23)"/><text x="174.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.24%)</title><rect x="171" y="276" width="2" height="15" fill="rgb(213,139,47)"/><text x="174.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.24%)</title><rect x="173" y="244" width="3" height="15" fill="rgb(235,18,45)"/><text x="176.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.24%)</title><rect x="173" y="260" width="3" height="15" fill="rgb(240,211,3)"/><text x="176.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.24%)</title><rect x="173" y="276" width="3" height="15" fill="rgb(248,144,6)"/><text x="176.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.24%)</title><rect x="173" y="292" width="3" height="15" fill="rgb(205,50,30)"/><text x="176.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.24%)</title><rect x="176" y="244" width="3" height="15" fill="rgb(206,5,23)"/><text x="179.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.24%)</title><rect x="176" y="260" width="3" height="15" fill="rgb(233,72,28)"/><text x="179.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.24%)</title><rect x="176" y="276" width="3" height="15" fill="rgb(238,69,40)"/><text x="179.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1711) (1 samples, 0.24%)</title><rect x="176" y="292" width="3" height="15" fill="rgb(215,187,3)"/><text x="179.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.24%)</title><rect x="179" y="260" width="3" height="15" fill="rgb(231,132,48)"/><text x="182.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1479) (1 samples, 0.24%)</title><rect x="179" y="276" width="3" height="15" fill="rgb(243,73,34)"/><text x="182.00" y="286.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (5 samples, 1.18%)</title><rect x="171" y="196" width="13" height="15" fill="rgb(238,100,9)"/><text x="174.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (5 samples, 1.18%)</title><rect x="171" y="212" width="13" height="15" fill="rgb(254,35,18)"/><text x="174.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.94%)</title><rect x="173" y="228" width="11" height="15" fill="rgb(205,123,23)"/><text x="176.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.47%)</title><rect x="179" y="244" width="5" height="15" fill="rgb(226,174,37)"/><text x="182.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.24%)</title><rect x="182" y="260" width="2" height="15" fill="rgb(205,194,47)"/><text x="185.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1369) (1 samples, 0.24%)</title><rect x="182" y="276" width="2" height="15" fill="rgb(239,55,34)"/><text x="185.00" y="286.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1874) (1 samples, 0.24%)</title><rect x="184" y="196" width="3" height="15" fill="rgb(239,20,43)"/><text x="187.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.24%)</title><rect x="184" y="212" width="3" height="15" fill="rgb(223,77,31)"/><text x="187.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="184" y="228" width="3" height="15" fill="rgb(221,63,7)"/><text x="187.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.24%)</title><rect x="184" y="244" width="3" height="15" fill="rgb(224,16,8)"/><text x="187.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.24%)</title><rect x="184" y="260" width="3" height="15" fill="rgb(228,156,19)"/><text x="187.00" y="270.50"></text></g><g><title>BOOL_logical_not (loops.c.src:648) (1 samples, 0.24%)</title><rect x="184" y="276" width="3" height="15" fill="rgb(224,33,20)"/><text x="187.00" y="286.50"></text></g><g><title>run_unary_simd_logical_not_BOOL (simd.inc.src:400) (1 samples, 0.24%)</title><rect x="184" y="292" width="3" height="15" fill="rgb(214,71,30)"/><text x="187.00" y="302.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.24%)</title><rect x="184" y="308" width="3" height="15" fill="rgb(251,6,41)"/><text x="187.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.24%)</title><rect x="187" y="212" width="3" height="15" fill="rgb(227,151,45)"/><text x="190.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:423) (1 samples, 0.24%)</title><rect x="187" y="228" width="3" height="15" fill="rgb(206,153,45)"/><text x="190.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (52 samples, 12.24%)</title><rect x="48" y="164" width="145" height="15" fill="rgb(210,55,4)"/><text x="51.00" y="174.50">predict_log_proba ..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (26 samples, 6.12%)</title><rect x="121" y="180" width="72" height="15" fill="rgb(245,77,35)"/><text x="124.00" y="190.50">_check_X..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (2 samples, 0.47%)</title><rect x="187" y="196" width="6" height="15" fill="rgb(231,32,6)"/><text x="190.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.24%)</title><rect x="190" y="212" width="3" height="15" fill="rgb(222,167,48)"/><text x="193.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1240) (1 samples, 0.24%)</title><rect x="190" y="228" width="3" height="15" fill="rgb(247,96,53)"/><text x="193.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.24%)</title><rect x="190" y="244" width="3" height="15" fill="rgb(205,29,2)"/><text x="193.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.24%)</title><rect x="190" y="260" width="3" height="15" fill="rgb(243,56,29)"/><text x="193.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1478) (1 samples, 0.24%)</title><rect x="190" y="276" width="3" height="15" fill="rgb(251,60,35)"/><text x="193.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.24%)</title><rect x="201" y="260" width="3" height="15" fill="rgb(245,38,30)"/><text x="204.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.24%)</title><rect x="201" y="276" width="3" height="15" fill="rgb(252,203,30)"/><text x="204.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.24%)</title><rect x="201" y="292" width="3" height="15" fill="rgb(242,56,3)"/><text x="204.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src:1924) (1 samples, 0.24%)</title><rect x="201" y="308" width="3" height="15" fill="rgb(221,46,38)"/><text x="204.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1890) (1 samples, 0.24%)</title><rect x="201" y="324" width="3" height="15" fill="rgb(228,42,50)"/><text x="204.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.47%)</title><rect x="201" y="228" width="6" height="15" fill="rgb(239,79,0)"/><text x="204.00" y="238.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (2 samples, 0.47%)</title><rect x="201" y="244" width="6" height="15" fill="rgb(213,221,12)"/><text x="204.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.24%)</title><rect x="204" y="260" width="3" height="15" fill="rgb(213,43,43)"/><text x="207.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.24%)</title><rect x="204" y="276" width="3" height="15" fill="rgb(216,177,7)"/><text x="207.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.24%)</title><rect x="204" y="292" width="3" height="15" fill="rgb(236,93,35)"/><text x="207.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:899) (1 samples, 0.24%)</title><rect x="204" y="308" width="3" height="15" fill="rgb(247,8,35)"/><text x="207.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.24%)</title><rect x="207" y="228" width="2" height="15" fill="rgb(207,171,0)"/><text x="210.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.24%)</title><rect x="207" y="244" width="2" height="15" fill="rgb(227,74,44)"/><text x="210.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.24%)</title><rect x="207" y="260" width="2" height="15" fill="rgb(238,29,33)"/><text x="210.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.24%)</title><rect x="207" y="276" width="2" height="15" fill="rgb(223,88,22)"/><text x="210.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.24%)</title><rect x="207" y="292" width="2" height="15" fill="rgb(213,157,9)"/><text x="210.00" y="302.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.94%)</title><rect x="201" y="196" width="11" height="15" fill="rgb(249,181,40)"/><text x="204.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.94%)</title><rect x="201" y="212" width="11" height="15" fill="rgb(209,222,43)"/><text x="204.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="209" y="228" width="3" height="15" fill="rgb(239,211,9)"/><text x="212.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.24%)</title><rect x="209" y="244" width="3" height="15" fill="rgb(244,134,41)"/><text x="212.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.24%)</title><rect x="209" y="260" width="3" height="15" fill="rgb(219,196,24)"/><text x="212.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.24%)</title><rect x="209" y="276" width="3" height="15" fill="rgb(231,69,12)"/><text x="212.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:241) (1 samples, 0.24%)</title><rect x="209" y="292" width="3" height="15" fill="rgb(216,221,0)"/><text x="212.00" y="302.50"></text></g><g><title>sse2_binary_scalar1_subtract_DOUBLE (simd.inc.src:693) (1 samples, 0.24%)</title><rect x="209" y="308" width="3" height="15" fill="rgb(227,5,41)"/><text x="212.00" y="318.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h:438) (1 samples, 0.24%)</title><rect x="209" y="324" width="3" height="15" fill="rgb(229,58,5)"/><text x="212.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.24%)</title><rect x="212" y="228" width="3" height="15" fill="rgb(243,188,39)"/><text x="215.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="212" y="244" width="3" height="15" fill="rgb(224,193,12)"/><text x="215.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.24%)</title><rect x="212" y="260" width="3" height="15" fill="rgb(221,201,12)"/><text x="215.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.24%)</title><rect x="212" y="276" width="3" height="15" fill="rgb(213,158,0)"/><text x="215.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.24%)</title><rect x="212" y="292" width="3" height="15" fill="rgb(213,171,12)"/><text x="215.00" y="302.50"></text></g><g><title>0x7fbce2fd15b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="212" y="308" width="3" height="15" fill="rgb(253,125,30)"/><text x="215.00" y="318.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:186) (2 samples, 0.47%)</title><rect x="215" y="260" width="6" height="15" fill="rgb(217,110,5)"/><text x="218.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.94%)</title><rect x="212" y="196" width="11" height="15" fill="rgb(221,196,15)"/><text x="215.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.94%)</title><rect x="212" y="212" width="11" height="15" fill="rgb(232,79,39)"/><text x="215.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.71%)</title><rect x="215" y="228" width="8" height="15" fill="rgb(246,149,4)"/><text x="218.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (3 samples, 0.71%)</title><rect x="215" y="244" width="8" height="15" fill="rgb(222,90,53)"/><text x="218.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.24%)</title><rect x="221" y="260" width="2" height="15" fill="rgb(249,148,25)"/><text x="224.00" y="270.50"></text></g><g><title>0x7fbce3f80ef6 (libm-2.29.so) (1 samples, 0.24%)</title><rect x="221" y="276" width="2" height="15" fill="rgb(213,206,22)"/><text x="224.00" y="286.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (11 samples, 2.59%)</title><rect x="196" y="180" width="30" height="15" fill="rgb(215,129,7)"/><text x="199.00" y="190.50">_j..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4766) (1 samples, 0.24%)</title><rect x="223" y="196" width="3" height="15" fill="rgb(222,225,4)"/><text x="226.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.24%)</title><rect x="229" y="260" width="3" height="15" fill="rgb(243,178,4)"/><text x="232.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.24%)</title><rect x="229" y="276" width="3" height="15" fill="rgb(217,134,33)"/><text x="232.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.47%)</title><rect x="229" y="196" width="5" height="15" fill="rgb(210,162,36)"/><text x="232.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="229" y="212" width="5" height="15" fill="rgb(245,198,42)"/><text x="232.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (2 samples, 0.47%)</title><rect x="229" y="228" width="5" height="15" fill="rgb(237,86,1)"/><text x="232.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.47%)</title><rect x="229" y="244" width="5" height="15" fill="rgb(221,92,0)"/><text x="232.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.24%)</title><rect x="232" y="260" width="2" height="15" fill="rgb(226,54,17)"/><text x="235.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.24%)</title><rect x="232" y="276" width="2" height="15" fill="rgb(215,72,48)"/><text x="235.00" y="286.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (4 samples, 0.94%)</title><rect x="226" y="180" width="11" height="15" fill="rgb(222,119,37)"/><text x="229.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.24%)</title><rect x="234" y="196" width="3" height="15" fill="rgb(240,109,33)"/><text x="237.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.24%)</title><rect x="234" y="212" width="3" height="15" fill="rgb(213,66,44)"/><text x="237.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.24%)</title><rect x="248" y="244" width="3" height="15" fill="rgb(247,75,19)"/><text x="251.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="248" y="260" width="3" height="15" fill="rgb(218,26,14)"/><text x="251.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.24%)</title><rect x="248" y="276" width="3" height="15" fill="rgb(208,214,46)"/><text x="251.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.24%)</title><rect x="248" y="292" width="3" height="15" fill="rgb(231,10,36)"/><text x="251.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.24%)</title><rect x="248" y="308" width="3" height="15" fill="rgb(230,207,33)"/><text x="251.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.24%)</title><rect x="248" y="324" width="3" height="15" fill="rgb(229,82,18)"/><text x="251.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.24%)</title><rect x="251" y="276" width="3" height="15" fill="rgb(212,79,8)"/><text x="254.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.24%)</title><rect x="251" y="292" width="3" height="15" fill="rgb(209,115,41)"/><text x="254.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.24%)</title><rect x="251" y="308" width="3" height="15" fill="rgb(240,98,43)"/><text x="254.00" y="318.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2191) (1 samples, 0.24%)</title><rect x="251" y="324" width="3" height="15" fill="rgb(223,13,3)"/><text x="254.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.24%)</title><rect x="254" y="324" width="3" height="15" fill="rgb(251,70,45)"/><text x="257.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="254" y="340" width="3" height="15" fill="rgb(210,133,35)"/><text x="257.00" y="350.50"></text></g><g><title>0x7fbce3d66a05 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="254" y="356" width="3" height="15" fill="rgb(214,1,13)"/><text x="257.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.47%)</title><rect x="254" y="292" width="5" height="15" fill="rgb(235,6,33)"/><text x="257.00" y="302.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.47%)</title><rect x="254" y="308" width="5" height="15" fill="rgb(229,10,15)"/><text x="257.00" y="318.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.24%)</title><rect x="257" y="324" width="2" height="15" fill="rgb(242,189,25)"/><text x="260.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="257" y="340" width="2" height="15" fill="rgb(229,3,12)"/><text x="260.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.24%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(253,169,46)"/><text x="260.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.24%)</title><rect x="257" y="372" width="2" height="15" fill="rgb(230,125,29)"/><text x="260.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:73) (1 samples, 0.24%)</title><rect x="257" y="388" width="2" height="15" fill="rgb(217,132,40)"/><text x="260.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:490) (1 samples, 0.24%)</title><rect x="259" y="292" width="3" height="15" fill="rgb(254,190,21)"/><text x="262.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.24%)</title><rect x="262" y="324" width="3" height="15" fill="rgb(240,4,2)"/><text x="265.00" y="334.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3773) (1 samples, 0.24%)</title><rect x="262" y="340" width="3" height="15" fill="rgb(208,57,28)"/><text x="265.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.47%)</title><rect x="262" y="292" width="6" height="15" fill="rgb(206,144,9)"/><text x="265.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.47%)</title><rect x="262" y="308" width="6" height="15" fill="rgb(231,93,20)"/><text x="265.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.24%)</title><rect x="265" y="324" width="3" height="15" fill="rgb(229,174,20)"/><text x="268.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.24%)</title><rect x="265" y="340" width="3" height="15" fill="rgb(207,66,30)"/><text x="268.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.24%)</title><rect x="265" y="356" width="3" height="15" fill="rgb(207,16,3)"/><text x="268.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="265" y="372" width="3" height="15" fill="rgb(220,141,44)"/><text x="268.00" y="382.50"></text></g><g><title>0x7fbce3d66785 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="265" y="388" width="3" height="15" fill="rgb(237,140,5)"/><text x="268.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 2.35%)</title><rect x="243" y="196" width="27" height="15" fill="rgb(251,72,30)"/><text x="246.00" y="206.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 2.35%)</title><rect x="243" y="212" width="27" height="15" fill="rgb(206,23,28)"/><text x="246.00" y="222.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 1.88%)</title><rect x="248" y="228" width="22" height="15" fill="rgb(218,121,8)"/><text x="251.00" y="238.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.65%)</title><rect x="251" y="244" width="19" height="15" fill="rgb(246,220,43)"/><text x="254.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.65%)</title><rect x="251" y="260" width="19" height="15" fill="rgb(242,172,44)"/><text x="254.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.41%)</title><rect x="254" y="276" width="16" height="15" fill="rgb(209,22,8)"/><text x="257.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.24%)</title><rect x="268" y="292" width="2" height="15" fill="rgb(253,116,40)"/><text x="271.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.24%)</title><rect x="268" y="308" width="2" height="15" fill="rgb(223,218,2)"/><text x="271.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.24%)</title><rect x="270" y="228" width="3" height="15" fill="rgb(215,99,17)"/><text x="273.00" y="238.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1472) (1 samples, 0.24%)</title><rect x="273" y="276" width="3" height="15" fill="rgb(246,70,6)"/><text x="276.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.47%)</title><rect x="273" y="244" width="6" height="15" fill="rgb(226,48,15)"/><text x="276.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.47%)</title><rect x="273" y="260" width="6" height="15" fill="rgb(248,145,7)"/><text x="276.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.24%)</title><rect x="276" y="276" width="3" height="15" fill="rgb(208,115,35)"/><text x="279.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (32 samples, 7.53%)</title><rect x="193" y="164" width="89" height="15" fill="rgb(229,100,12)"/><text x="196.00" y="174.50">predict_lo..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (16 samples, 3.76%)</title><rect x="237" y="180" width="45" height="15" fill="rgb(254,186,21)"/><text x="240.00" y="190.50">_joi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.94%)</title><rect x="270" y="196" width="12" height="15" fill="rgb(229,149,53)"/><text x="273.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.94%)</title><rect x="270" y="212" width="12" height="15" fill="rgb(208,227,9)"/><text x="273.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.71%)</title><rect x="273" y="228" width="9" height="15" fill="rgb(254,191,18)"/><text x="276.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.24%)</title><rect x="279" y="244" width="3" height="15" fill="rgb(208,50,42)"/><text x="282.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.24%)</title><rect x="279" y="260" width="3" height="15" fill="rgb(234,25,4)"/><text x="282.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.24%)</title><rect x="282" y="212" width="2" height="15" fill="rgb(224,101,19)"/><text x="285.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2620) (1 samples, 0.24%)</title><rect x="284" y="228" width="3" height="15" fill="rgb(224,110,54)"/><text x="287.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (2 samples, 0.47%)</title><rect x="287" y="244" width="6" height="15" fill="rgb(249,154,22)"/><text x="290.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.47%)</title><rect x="295" y="276" width="6" height="15" fill="rgb(218,57,52)"/><text x="298.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="298" y="292" width="3" height="15" fill="rgb(212,161,42)"/><text x="301.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.24%)</title><rect x="301" y="276" width="3" height="15" fill="rgb(214,145,53)"/><text x="304.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.24%)</title><rect x="301" y="292" width="3" height="15" fill="rgb(234,100,33)"/><text x="304.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.24%)</title><rect x="304" y="292" width="3" height="15" fill="rgb(235,55,7)"/><text x="307.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.24%)</title><rect x="304" y="308" width="3" height="15" fill="rgb(253,74,2)"/><text x="307.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.24%)</title><rect x="304" y="324" width="3" height="15" fill="rgb(246,118,37)"/><text x="307.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.24%)</title><rect x="307" y="340" width="2" height="15" fill="rgb(235,176,39)"/><text x="310.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="307" y="356" width="2" height="15" fill="rgb(240,85,44)"/><text x="310.00" y="366.50"></text></g><g><title>0x7fbce3d66760 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="307" y="372" width="2" height="15" fill="rgb(221,152,6)"/><text x="310.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.47%)</title><rect x="307" y="308" width="5" height="15" fill="rgb(223,75,28)"/><text x="310.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.47%)</title><rect x="307" y="324" width="5" height="15" fill="rgb(222,206,34)"/><text x="310.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.24%)</title><rect x="309" y="340" width="3" height="15" fill="rgb(211,119,10)"/><text x="312.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="309" y="356" width="3" height="15" fill="rgb(215,197,43)"/><text x="312.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1041) (1 samples, 0.24%)</title><rect x="309" y="372" width="3" height="15" fill="rgb(205,96,40)"/><text x="312.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (12 samples, 2.82%)</title><rect x="282" y="180" width="33" height="15" fill="rgb(247,136,34)"/><text x="285.00" y="190.50">lo..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (12 samples, 2.82%)</title><rect x="282" y="196" width="33" height="15" fill="rgb(249,218,30)"/><text x="285.00" y="206.50">am..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.59%)</title><rect x="284" y="212" width="31" height="15" fill="rgb(237,110,18)"/><text x="287.00" y="222.50">ar..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (10 samples, 2.35%)</title><rect x="287" y="228" width="28" height="15" fill="rgb(252,45,46)"/><text x="290.00" y="238.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (8 samples, 1.88%)</title><rect x="293" y="244" width="22" height="15" fill="rgb(243,81,40)"/><text x="296.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.65%)</title><rect x="295" y="260" width="20" height="15" fill="rgb(215,67,41)"/><text x="298.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 0.94%)</title><rect x="304" y="276" width="11" height="15" fill="rgb(235,67,18)"/><text x="307.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.71%)</title><rect x="307" y="292" width="8" height="15" fill="rgb(212,114,32)"/><text x="310.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.24%)</title><rect x="312" y="308" width="3" height="15" fill="rgb(231,114,45)"/><text x="315.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.24%)</title><rect x="312" y="324" width="3" height="15" fill="rgb(235,18,18)"/><text x="315.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.24%)</title><rect x="312" y="340" width="3" height="15" fill="rgb(222,80,30)"/><text x="315.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.24%)</title><rect x="312" y="356" width="3" height="15" fill="rgb(241,213,23)"/><text x="315.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="312" y="372" width="3" height="15" fill="rgb(218,33,30)"/><text x="315.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:103) (1 samples, 0.24%)</title><rect x="315" y="180" width="3" height="15" fill="rgb(242,132,3)"/><text x="318.00" y="190.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.24%)</title><rect x="320" y="196" width="3" height="15" fill="rgb(240,14,47)"/><text x="323.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.24%)</title><rect x="320" y="212" width="3" height="15" fill="rgb(229,211,24)"/><text x="323.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.24%)</title><rect x="320" y="228" width="3" height="15" fill="rgb(206,94,37)"/><text x="323.00" y="238.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.24%)</title><rect x="323" y="196" width="3" height="15" fill="rgb(228,53,52)"/><text x="326.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.24%)</title><rect x="323" y="212" width="3" height="15" fill="rgb(252,185,43)"/><text x="326.00" y="222.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.24%)</title><rect x="323" y="228" width="3" height="15" fill="rgb(242,85,39)"/><text x="326.00" y="238.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.24%)</title><rect x="323" y="244" width="3" height="15" fill="rgb(239,176,29)"/><text x="326.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="323" y="260" width="3" height="15" fill="rgb(241,69,51)"/><text x="326.00" y="270.50"></text></g><g><title>0x7fbce3d66a05 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="323" y="276" width="3" height="15" fill="rgb(226,64,33)"/><text x="326.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.24%)</title><rect x="326" y="212" width="3" height="15" fill="rgb(233,66,30)"/><text x="329.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:309) (1 samples, 0.24%)</title><rect x="326" y="228" width="3" height="15" fill="rgb(206,16,17)"/><text x="329.00" y="238.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (5 samples, 1.18%)</title><rect x="318" y="180" width="14" height="15" fill="rgb(247,139,54)"/><text x="321.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="326" y="196" width="6" height="15" fill="rgb(236,98,20)"/><text x="329.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="329" y="212" width="3" height="15" fill="rgb(220,121,34)"/><text x="332.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.24%)</title><rect x="329" y="228" width="3" height="15" fill="rgb(224,6,31)"/><text x="332.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.24%)</title><rect x="329" y="244" width="3" height="15" fill="rgb(209,217,8)"/><text x="332.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.24%)</title><rect x="332" y="228" width="2" height="15" fill="rgb(215,124,44)"/><text x="335.00" y="238.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:874) (1 samples, 0.24%)</title><rect x="332" y="244" width="2" height="15" fill="rgb(207,48,30)"/><text x="335.00" y="254.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.47%)</title><rect x="332" y="196" width="5" height="15" fill="rgb(243,212,15)"/><text x="335.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="332" y="212" width="5" height="15" fill="rgb(214,31,12)"/><text x="335.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="334" y="228" width="3" height="15" fill="rgb(244,11,25)"/><text x="337.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.24%)</title><rect x="334" y="244" width="3" height="15" fill="rgb(223,226,32)"/><text x="337.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.24%)</title><rect x="334" y="260" width="3" height="15" fill="rgb(242,47,44)"/><text x="337.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:668) (1 samples, 0.24%)</title><rect x="334" y="276" width="3" height="15" fill="rgb(248,42,21)"/><text x="337.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (3 samples, 0.71%)</title><rect x="332" y="180" width="8" height="15" fill="rgb(249,74,52)"/><text x="335.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.24%)</title><rect x="337" y="196" width="3" height="15" fill="rgb(248,213,5)"/><text x="340.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="337" y="212" width="3" height="15" fill="rgb(206,97,35)"/><text x="340.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.24%)</title><rect x="337" y="228" width="3" height="15" fill="rgb(221,32,2)"/><text x="340.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.24%)</title><rect x="337" y="244" width="3" height="15" fill="rgb(234,173,12)"/><text x="340.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:186) (1 samples, 0.24%)</title><rect x="337" y="260" width="3" height="15" fill="rgb(237,30,51)"/><text x="340.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (2 samples, 0.47%)</title><rect x="340" y="212" width="5" height="15" fill="rgb(247,142,12)"/><text x="343.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:176) (2 samples, 0.47%)</title><rect x="340" y="228" width="5" height="15" fill="rgb(251,133,29)"/><text x="343.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (3 samples, 0.71%)</title><rect x="340" y="196" width="8" height="15" fill="rgb(253,206,26)"/><text x="343.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.24%)</title><rect x="345" y="212" width="3" height="15" fill="rgb(237,154,4)"/><text x="348.00" y="222.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:443) (1 samples, 0.24%)</title><rect x="348" y="196" width="3" height="15" fill="rgb(248,199,37)"/><text x="351.00" y="206.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (5 samples, 1.18%)</title><rect x="340" y="180" width="14" height="15" fill="rgb(212,202,11)"/><text x="343.00" y="190.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py:439) (1 samples, 0.24%)</title><rect x="351" y="196" width="3" height="15" fill="rgb(242,229,18)"/><text x="354.00" y="206.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.24%)</title><rect x="357" y="228" width="2" height="15" fill="rgb(205,200,26)"/><text x="360.00" y="238.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.24%)</title><rect x="359" y="292" width="3" height="15" fill="rgb(229,1,32)"/><text x="362.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.24%)</title><rect x="359" y="308" width="3" height="15" fill="rgb(216,63,17)"/><text x="362.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.24%)</title><rect x="359" y="324" width="3" height="15" fill="rgb(235,57,3)"/><text x="362.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2200) (1 samples, 0.24%)</title><rect x="359" y="340" width="3" height="15" fill="rgb(228,163,27)"/><text x="362.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.24%)</title><rect x="362" y="308" width="3" height="15" fill="rgb(246,160,37)"/><text x="365.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.24%)</title><rect x="362" y="324" width="3" height="15" fill="rgb(246,134,46)"/><text x="365.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.24%)</title><rect x="362" y="340" width="3" height="15" fill="rgb(251,189,22)"/><text x="365.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="362" y="356" width="3" height="15" fill="rgb(224,202,39)"/><text x="365.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="362" y="372" width="3" height="15" fill="rgb(243,96,33)"/><text x="365.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (5 samples, 1.18%)</title><rect x="354" y="180" width="14" height="15" fill="rgb(234,71,21)"/><text x="357.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 0.94%)</title><rect x="357" y="196" width="11" height="15" fill="rgb(254,229,22)"/><text x="360.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.94%)</title><rect x="357" y="212" width="11" height="15" fill="rgb(226,205,42)"/><text x="360.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 0.71%)</title><rect x="359" y="228" width="9" height="15" fill="rgb(220,145,13)"/><text x="362.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.71%)</title><rect x="359" y="244" width="9" height="15" fill="rgb(233,192,53)"/><text x="362.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.71%)</title><rect x="359" y="260" width="9" height="15" fill="rgb(233,142,37)"/><text x="362.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.71%)</title><rect x="359" y="276" width="9" height="15" fill="rgb(227,162,12)"/><text x="362.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.47%)</title><rect x="362" y="292" width="6" height="15" fill="rgb(234,212,16)"/><text x="365.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:565) (1 samples, 0.24%)</title><rect x="365" y="308" width="3" height="15" fill="rgb(240,126,33)"/><text x="368.00" y="318.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.24%)</title><rect x="365" y="324" width="3" height="15" fill="rgb(254,159,7)"/><text x="368.00" y="334.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.24%)</title><rect x="370" y="196" width="3" height="15" fill="rgb(216,170,6)"/><text x="373.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.24%)</title><rect x="370" y="212" width="3" height="15" fill="rgb(208,49,12)"/><text x="373.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (3 samples, 0.71%)</title><rect x="368" y="180" width="8" height="15" fill="rgb(247,148,42)"/><text x="371.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.24%)</title><rect x="373" y="196" width="3" height="15" fill="rgb(235,208,35)"/><text x="376.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="373" y="212" width="3" height="15" fill="rgb(217,142,2)"/><text x="376.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.24%)</title><rect x="373" y="228" width="3" height="15" fill="rgb(217,196,1)"/><text x="376.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="373" y="244" width="3" height="15" fill="rgb(210,211,19)"/><text x="376.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.24%)</title><rect x="373" y="260" width="3" height="15" fill="rgb(227,98,39)"/><text x="376.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.24%)</title><rect x="373" y="276" width="3" height="15" fill="rgb(212,8,38)"/><text x="376.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (1 samples, 0.24%)</title><rect x="376" y="180" width="3" height="15" fill="rgb(242,166,9)"/><text x="379.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:6) (1 samples, 0.24%)</title><rect x="376" y="196" width="3" height="15" fill="rgb(206,80,2)"/><text x="379.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.24%)</title><rect x="376" y="212" width="3" height="15" fill="rgb(237,78,10)"/><text x="379.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py:1438) (1 samples, 0.24%)</title><rect x="376" y="228" width="3" height="15" fill="rgb(214,153,26)"/><text x="379.00" y="238.50"></text></g><g><title>array_squeeze (methods.c:225) (1 samples, 0.24%)</title><rect x="376" y="244" width="3" height="15" fill="rgb(228,81,14)"/><text x="379.00" y="254.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:230) (2 samples, 0.47%)</title><rect x="384" y="196" width="6" height="15" fill="rgb(234,48,40)"/><text x="387.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.24%)</title><rect x="387" y="212" width="3" height="15" fill="rgb(215,126,40)"/><text x="390.00" y="222.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (40 samples, 9.41%)</title><rect x="282" y="164" width="111" height="15" fill="rgb(238,217,35)"/><text x="285.00" y="174.50">predict_log_p..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (5 samples, 1.18%)</title><rect x="379" y="180" width="14" height="15" fill="rgb(233,141,15)"/><text x="382.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:239) (1 samples, 0.24%)</title><rect x="390" y="196" width="3" height="15" fill="rgb(227,45,24)"/><text x="393.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.24%)</title><rect x="390" y="212" width="3" height="15" fill="rgb(224,131,21)"/><text x="393.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.24%)</title><rect x="395" y="212" width="3" height="15" fill="rgb(207,76,11)"/><text x="398.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.24%)</title><rect x="395" y="228" width="3" height="15" fill="rgb(254,100,1)"/><text x="398.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.24%)</title><rect x="398" y="244" width="3" height="15" fill="rgb(248,144,28)"/><text x="401.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.24%)</title><rect x="398" y="260" width="3" height="15" fill="rgb(220,101,54)"/><text x="401.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.24%)</title><rect x="398" y="276" width="3" height="15" fill="rgb(242,0,51)"/><text x="401.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.24%)</title><rect x="401" y="244" width="3" height="15" fill="rgb(247,178,14)"/><text x="404.00" y="254.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1039) (1 samples, 0.24%)</title><rect x="401" y="260" width="3" height="15" fill="rgb(241,82,24)"/><text x="404.00" y="270.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 0.94%)</title><rect x="395" y="180" width="12" height="15" fill="rgb(243,30,38)"/><text x="398.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.94%)</title><rect x="395" y="196" width="12" height="15" fill="rgb(249,147,35)"/><text x="398.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.71%)</title><rect x="398" y="212" width="9" height="15" fill="rgb(236,110,38)"/><text x="401.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.71%)</title><rect x="398" y="228" width="9" height="15" fill="rgb(217,51,17)"/><text x="401.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.24%)</title><rect x="404" y="244" width="3" height="15" fill="rgb(251,210,16)"/><text x="407.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.24%)</title><rect x="404" y="260" width="3" height="15" fill="rgb(217,72,25)"/><text x="407.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:246) (1 samples, 0.24%)</title><rect x="404" y="276" width="3" height="15" fill="rgb(249,117,48)"/><text x="407.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_subtract_DOUBLE (simd.inc.src:760) (1 samples, 0.24%)</title><rect x="404" y="292" width="3" height="15" fill="rgb(228,85,45)"/><text x="407.00" y="302.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:121) (1 samples, 0.24%)</title><rect x="409" y="212" width="3" height="15" fill="rgb(251,39,21)"/><text x="412.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (141 samples, 33.18%)</title><rect x="23" y="132" width="392" height="15" fill="rgb(230,123,38)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:2..</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (141 samples, 33.18%)</title><rect x="23" y="148" width="392" height="15" fill="rgb(219,121,51)"/><text x="26.00" y="158.50">predict_proba (sklearn/naive_bayes.py:115)</text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (8 samples, 1.88%)</title><rect x="393" y="164" width="22" height="15" fill="rgb(239,139,53)"/><text x="396.00" y="174.50">p..</text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (3 samples, 0.71%)</title><rect x="407" y="180" width="8" height="15" fill="rgb(220,156,30)"/><text x="410.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.71%)</title><rect x="407" y="196" width="8" height="15" fill="rgb(237,190,13)"/><text x="410.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:129) (1 samples, 0.24%)</title><rect x="412" y="212" width="3" height="15" fill="rgb(212,128,52)"/><text x="415.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:38) (147 samples, 34.59%)</title><rect x="10" y="52" width="408" height="15" fill="rgb(221,11,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_..</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:37) (147 samples, 34.59%)</title><rect x="10" y="68" width="408" height="15" fill="rgb(208,134,13)"/><text x="13.00" y="78.50">profile_skl (bench_BernoulliNB_default_m_cl_1_50_12_flo..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:29) (147 samples, 34.59%)</title><rect x="10" y="84" width="408" height="15" fill="rgb(235,38,34)"/><text x="13.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_f..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:23) (143 samples, 33.65%)</title><rect x="21" y="100" width="397" height="15" fill="rgb(236,176,10)"/><text x="24.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_50_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (143 samples, 33.65%)</title><rect x="21" y="116" width="397" height="15" fill="rgb(246,54,20)"/><text x="24.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.24%)</title><rect x="415" y="132" width="3" height="15" fill="rgb(234,57,3)"/><text x="418.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:1) (1 samples, 0.24%)</title><rect x="418" y="148" width="2" height="15" fill="rgb(205,210,1)"/><text x="421.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="418" y="164" width="2" height="15" fill="rgb(237,101,51)"/><text x="421.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="418" y="180" width="2" height="15" fill="rgb(226,163,27)"/><text x="421.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="418" y="196" width="2" height="15" fill="rgb(209,45,30)"/><text x="421.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="418" y="212" width="2" height="15" fill="rgb(234,101,24)"/><text x="421.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="418" y="228" width="2" height="15" fill="rgb(244,13,43)"/><text x="421.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:149) (1 samples, 0.24%)</title><rect x="418" y="244" width="2" height="15" fill="rgb(228,147,41)"/><text x="421.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="418" y="260" width="2" height="15" fill="rgb(250,204,8)"/><text x="421.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="418" y="276" width="2" height="15" fill="rgb(219,105,22)"/><text x="421.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="418" y="292" width="2" height="15" fill="rgb(250,101,13)"/><text x="421.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="418" y="308" width="2" height="15" fill="rgb(253,170,46)"/><text x="421.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(227,70,51)"/><text x="421.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="418" y="340" width="2" height="15" fill="rgb(219,111,26)"/><text x="421.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="418" y="356" width="2" height="15" fill="rgb(237,200,35)"/><text x="421.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py:21) (1 samples, 0.24%)</title><rect x="418" y="372" width="2" height="15" fill="rgb(244,134,2)"/><text x="421.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="418" y="388" width="2" height="15" fill="rgb(246,168,19)"/><text x="421.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="418" y="404" width="2" height="15" fill="rgb(215,122,26)"/><text x="421.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="418" y="420" width="2" height="15" fill="rgb(223,78,13)"/><text x="421.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="418" y="436" width="2" height="15" fill="rgb(214,74,45)"/><text x="421.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="418" y="452" width="2" height="15" fill="rgb(209,121,39)"/><text x="421.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/hermite.py:1627) (1 samples, 0.24%)</title><rect x="418" y="468" width="2" height="15" fill="rgb(227,145,7)"/><text x="421.00" y="478.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.24%)</title><rect x="418" y="484" width="2" height="15" fill="rgb(252,28,37)"/><text x="421.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="418" y="500" width="2" height="15" fill="rgb(236,21,20)"/><text x="421.00" y="510.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.24%)</title><rect x="420" y="964" width="3" height="15" fill="rgb(235,109,11)"/><text x="423.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.24%)</title><rect x="420" y="980" width="3" height="15" fill="rgb(211,61,23)"/><text x="423.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.24%)</title><rect x="420" y="996" width="3" height="15" fill="rgb(227,226,39)"/><text x="423.00" y="1006.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.47%)</title><rect x="420" y="884" width="6" height="15" fill="rgb(234,70,17)"/><text x="423.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.47%)</title><rect x="420" y="900" width="6" height="15" fill="rgb(229,68,51)"/><text x="423.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.47%)</title><rect x="420" y="916" width="6" height="15" fill="rgb(205,90,21)"/><text x="423.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.47%)</title><rect x="420" y="932" width="6" height="15" fill="rgb(227,85,7)"/><text x="423.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.47%)</title><rect x="420" y="948" width="6" height="15" fill="rgb(232,169,46)"/><text x="423.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1390) (1 samples, 0.24%)</title><rect x="423" y="964" width="3" height="15" fill="rgb(243,211,18)"/><text x="426.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.71%)</title><rect x="420" y="852" width="9" height="15" fill="rgb(233,123,32)"/><text x="423.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.71%)</title><rect x="420" y="868" width="9" height="15" fill="rgb(250,82,48)"/><text x="423.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.24%)</title><rect x="426" y="884" width="3" height="15" fill="rgb(224,128,13)"/><text x="429.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.24%)</title><rect x="426" y="900" width="3" height="15" fill="rgb(236,190,50)"/><text x="429.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.24%)</title><rect x="426" y="916" width="3" height="15" fill="rgb(235,183,45)"/><text x="429.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.24%)</title><rect x="426" y="932" width="3" height="15" fill="rgb(244,221,42)"/><text x="429.00" y="942.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.24%)</title><rect x="426" y="948" width="3" height="15" fill="rgb(205,95,11)"/><text x="429.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.24%)</title><rect x="426" y="964" width="3" height="15" fill="rgb(215,37,39)"/><text x="429.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.24%)</title><rect x="426" y="980" width="3" height="15" fill="rgb(206,70,5)"/><text x="429.00" y="990.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.24%)</title><rect x="429" y="916" width="3" height="15" fill="rgb(242,183,25)"/><text x="432.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:66) (1 samples, 0.24%)</title><rect x="429" y="932" width="3" height="15" fill="rgb(211,224,11)"/><text x="432.00" y="942.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.47%)</title><rect x="429" y="884" width="5" height="15" fill="rgb(238,192,8)"/><text x="432.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.47%)</title><rect x="429" y="900" width="5" height="15" fill="rgb(216,124,6)"/><text x="432.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.24%)</title><rect x="432" y="916" width="2" height="15" fill="rgb(250,51,6)"/><text x="435.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.24%)</title><rect x="432" y="932" width="2" height="15" fill="rgb(216,27,33)"/><text x="435.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.24%)</title><rect x="432" y="948" width="2" height="15" fill="rgb(245,70,26)"/><text x="435.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.24%)</title><rect x="432" y="964" width="2" height="15" fill="rgb(212,151,31)"/><text x="435.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.24%)</title><rect x="432" y="980" width="2" height="15" fill="rgb(250,75,0)"/><text x="435.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.24%)</title><rect x="432" y="996" width="2" height="15" fill="rgb(251,109,6)"/><text x="435.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.24%)</title><rect x="432" y="1012" width="2" height="15" fill="rgb(205,137,21)"/><text x="435.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.24%)</title><rect x="432" y="1028" width="2" height="15" fill="rgb(239,90,7)"/><text x="435.00" y="1038.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.24%)</title><rect x="432" y="1044" width="2" height="15" fill="rgb(225,17,8)"/><text x="435.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:2) (6 samples, 1.41%)</title><rect x="420" y="148" width="17" height="15" fill="rgb(238,163,26)"/><text x="423.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="164" width="17" height="15" fill="rgb(222,160,8)"/><text x="423.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.41%)</title><rect x="420" y="180" width="17" height="15" fill="rgb(209,124,16)"/><text x="423.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="196" width="17" height="15" fill="rgb(217,216,52)"/><text x="423.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="212" width="17" height="15" fill="rgb(252,143,25)"/><text x="423.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="420" y="228" width="17" height="15" fill="rgb(235,222,38)"/><text x="423.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="420" y="244" width="17" height="15" fill="rgb(212,26,42)"/><text x="423.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="420" y="260" width="17" height="15" fill="rgb(211,210,22)"/><text x="423.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="276" width="17" height="15" fill="rgb(217,182,16)"/><text x="423.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.41%)</title><rect x="420" y="292" width="17" height="15" fill="rgb(232,15,37)"/><text x="423.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="308" width="17" height="15" fill="rgb(224,19,25)"/><text x="423.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="420" y="324" width="17" height="15" fill="rgb(239,68,42)"/><text x="423.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="420" y="340" width="17" height="15" fill="rgb(221,83,31)"/><text x="423.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="420" y="356" width="17" height="15" fill="rgb(231,69,24)"/><text x="423.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="372" width="17" height="15" fill="rgb(222,83,45)"/><text x="423.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.41%)</title><rect x="420" y="388" width="17" height="15" fill="rgb(254,165,27)"/><text x="423.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="404" width="17" height="15" fill="rgb(210,89,21)"/><text x="423.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="420" y="420" width="17" height="15" fill="rgb(207,113,29)"/><text x="423.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="420" y="436" width="17" height="15" fill="rgb(209,170,23)"/><text x="423.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="420" y="452" width="17" height="15" fill="rgb(216,124,9)"/><text x="423.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="468" width="17" height="15" fill="rgb(240,118,47)"/><text x="423.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.41%)</title><rect x="420" y="484" width="17" height="15" fill="rgb(251,210,50)"/><text x="423.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="500" width="17" height="15" fill="rgb(227,112,3)"/><text x="423.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="420" y="516" width="17" height="15" fill="rgb(253,94,3)"/><text x="423.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="420" y="532" width="17" height="15" fill="rgb(216,52,4)"/><text x="423.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="420" y="548" width="17" height="15" fill="rgb(223,141,46)"/><text x="423.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="564" width="17" height="15" fill="rgb(209,48,6)"/><text x="423.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.41%)</title><rect x="420" y="580" width="17" height="15" fill="rgb(210,208,31)"/><text x="423.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="596" width="17" height="15" fill="rgb(225,58,26)"/><text x="423.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.41%)</title><rect x="420" y="612" width="17" height="15" fill="rgb(231,168,10)"/><text x="423.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="628" width="17" height="15" fill="rgb(216,81,45)"/><text x="423.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="644" width="17" height="15" fill="rgb(232,201,22)"/><text x="423.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="420" y="660" width="17" height="15" fill="rgb(240,195,41)"/><text x="423.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="420" y="676" width="17" height="15" fill="rgb(218,142,29)"/><text x="423.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="420" y="692" width="17" height="15" fill="rgb(221,104,16)"/><text x="423.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="708" width="17" height="15" fill="rgb(250,22,19)"/><text x="423.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.41%)</title><rect x="420" y="724" width="17" height="15" fill="rgb(221,128,45)"/><text x="423.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="420" y="740" width="17" height="15" fill="rgb(218,41,51)"/><text x="423.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="420" y="756" width="17" height="15" fill="rgb(241,219,32)"/><text x="423.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="420" y="772" width="17" height="15" fill="rgb(208,198,31)"/><text x="423.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="420" y="788" width="17" height="15" fill="rgb(254,122,50)"/><text x="423.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="420" y="804" width="17" height="15" fill="rgb(212,226,30)"/><text x="423.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.41%)</title><rect x="420" y="820" width="17" height="15" fill="rgb(253,45,4)"/><text x="423.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.41%)</title><rect x="420" y="836" width="17" height="15" fill="rgb(224,132,49)"/><text x="423.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.71%)</title><rect x="429" y="852" width="8" height="15" fill="rgb(245,95,14)"/><text x="432.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.71%)</title><rect x="429" y="868" width="8" height="15" fill="rgb(218,6,18)"/><text x="432.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.24%)</title><rect x="434" y="884" width="3" height="15" fill="rgb(242,167,4)"/><text x="437.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.24%)</title><rect x="434" y="900" width="3" height="15" fill="rgb(212,201,17)"/><text x="437.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.24%)</title><rect x="434" y="916" width="3" height="15" fill="rgb(217,16,3)"/><text x="437.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.24%)</title><rect x="434" y="932" width="3" height="15" fill="rgb(205,167,48)"/><text x="437.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.24%)</title><rect x="434" y="948" width="3" height="15" fill="rgb(213,196,8)"/><text x="437.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.24%)</title><rect x="434" y="964" width="3" height="15" fill="rgb(207,137,52)"/><text x="437.00" y="974.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.47%)</title><rect x="437" y="484" width="6" height="15" fill="rgb(225,158,19)"/><text x="440.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="437" y="500" width="6" height="15" fill="rgb(212,68,8)"/><text x="440.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="516" width="6" height="15" fill="rgb(239,55,48)"/><text x="440.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="437" y="532" width="6" height="15" fill="rgb(227,171,12)"/><text x="440.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="437" y="548" width="6" height="15" fill="rgb(238,74,52)"/><text x="440.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="437" y="564" width="6" height="15" fill="rgb(211,171,5)"/><text x="440.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="437" y="580" width="6" height="15" fill="rgb(221,54,40)"/><text x="440.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="596" width="6" height="15" fill="rgb(251,216,43)"/><text x="440.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.47%)</title><rect x="437" y="612" width="6" height="15" fill="rgb(215,110,19)"/><text x="440.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="437" y="628" width="6" height="15" fill="rgb(238,32,32)"/><text x="440.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="437" y="644" width="6" height="15" fill="rgb(237,171,43)"/><text x="440.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="437" y="660" width="6" height="15" fill="rgb(225,94,0)"/><text x="440.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="437" y="676" width="6" height="15" fill="rgb(232,229,19)"/><text x="440.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="692" width="6" height="15" fill="rgb(225,184,36)"/><text x="440.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (2 samples, 0.47%)</title><rect x="437" y="708" width="6" height="15" fill="rgb(222,227,13)"/><text x="440.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="437" y="724" width="6" height="15" fill="rgb(231,206,1)"/><text x="440.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="437" y="740" width="6" height="15" fill="rgb(214,178,32)"/><text x="440.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="437" y="756" width="6" height="15" fill="rgb(225,23,51)"/><text x="440.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="437" y="772" width="6" height="15" fill="rgb(244,218,39)"/><text x="440.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="788" width="6" height="15" fill="rgb(209,173,6)"/><text x="440.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (2 samples, 0.47%)</title><rect x="437" y="804" width="6" height="15" fill="rgb(243,215,34)"/><text x="440.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="437" y="820" width="6" height="15" fill="rgb(216,214,1)"/><text x="440.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="437" y="836" width="6" height="15" fill="rgb(239,184,15)"/><text x="440.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="437" y="852" width="6" height="15" fill="rgb(239,37,25)"/><text x="440.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="437" y="868" width="6" height="15" fill="rgb(205,96,13)"/><text x="440.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="884" width="6" height="15" fill="rgb(217,196,38)"/><text x="440.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:18) (2 samples, 0.47%)</title><rect x="437" y="900" width="6" height="15" fill="rgb(248,73,45)"/><text x="440.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="437" y="916" width="6" height="15" fill="rgb(208,111,28)"/><text x="440.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="932" width="6" height="15" fill="rgb(210,54,7)"/><text x="440.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="437" y="948" width="6" height="15" fill="rgb(231,53,51)"/><text x="440.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="437" y="964" width="6" height="15" fill="rgb(214,140,12)"/><text x="440.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="437" y="980" width="6" height="15" fill="rgb(225,179,43)"/><text x="440.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="437" y="996" width="6" height="15" fill="rgb(210,188,4)"/><text x="440.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="1012" width="6" height="15" fill="rgb(225,154,20)"/><text x="440.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py:16) (2 samples, 0.47%)</title><rect x="437" y="1028" width="6" height="15" fill="rgb(230,148,8)"/><text x="440.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="437" y="1044" width="6" height="15" fill="rgb(222,97,17)"/><text x="440.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="437" y="1060" width="6" height="15" fill="rgb(243,51,17)"/><text x="440.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="437" y="1076" width="6" height="15" fill="rgb(209,183,9)"/><text x="440.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="437" y="1092" width="6" height="15" fill="rgb(254,134,37)"/><text x="440.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="437" y="1108" width="6" height="15" fill="rgb(233,150,38)"/><text x="440.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py:213) (2 samples, 0.47%)</title><rect x="437" y="1124" width="6" height="15" fill="rgb(223,50,22)"/><text x="440.00" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2991) (1 samples, 0.24%)</title><rect x="443" y="1028" width="2" height="15" fill="rgb(243,178,27)"/><text x="446.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.24%)</title><rect x="443" y="1044" width="2" height="15" fill="rgb(228,140,8)"/><text x="446.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.24%)</title><rect x="443" y="1060" width="2" height="15" fill="rgb(222,152,14)"/><text x="446.00" y="1070.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="443" y="1076" width="2" height="15" fill="rgb(218,71,42)"/><text x="446.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.47%)</title><rect x="443" y="772" width="5" height="15" fill="rgb(244,51,7)"/><text x="446.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="443" y="788" width="5" height="15" fill="rgb(222,222,40)"/><text x="446.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="443" y="804" width="5" height="15" fill="rgb(228,81,5)"/><text x="446.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="443" y="820" width="5" height="15" fill="rgb(242,229,48)"/><text x="446.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="443" y="836" width="5" height="15" fill="rgb(205,108,9)"/><text x="446.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="443" y="852" width="5" height="15" fill="rgb(241,183,52)"/><text x="446.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="443" y="868" width="5" height="15" fill="rgb(215,225,46)"/><text x="446.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="443" y="884" width="5" height="15" fill="rgb(248,49,24)"/><text x="446.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.47%)</title><rect x="443" y="900" width="5" height="15" fill="rgb(252,94,36)"/><text x="446.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="443" y="916" width="5" height="15" fill="rgb(235,39,35)"/><text x="446.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="443" y="932" width="5" height="15" fill="rgb(246,83,51)"/><text x="446.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="443" y="948" width="5" height="15" fill="rgb(217,11,36)"/><text x="446.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="443" y="964" width="5" height="15" fill="rgb(206,107,34)"/><text x="446.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="443" y="980" width="5" height="15" fill="rgb(246,144,36)"/><text x="446.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="443" y="996" width="5" height="15" fill="rgb(210,135,25)"/><text x="446.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="443" y="1012" width="5" height="15" fill="rgb(241,209,54)"/><text x="446.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5296) (1 samples, 0.24%)</title><rect x="445" y="1028" width="3" height="15" fill="rgb(218,43,24)"/><text x="448.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.24%)</title><rect x="445" y="1044" width="3" height="15" fill="rgb(246,70,49)"/><text x="448.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.24%)</title><rect x="445" y="1060" width="3" height="15" fill="rgb(208,145,33)"/><text x="448.00" y="1070.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:4) (5 samples, 1.18%)</title><rect x="437" y="148" width="14" height="15" fill="rgb(225,105,24)"/><text x="440.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="437" y="164" width="14" height="15" fill="rgb(252,197,16)"/><text x="440.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.18%)</title><rect x="437" y="180" width="14" height="15" fill="rgb(207,190,13)"/><text x="440.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="437" y="196" width="14" height="15" fill="rgb(221,54,14)"/><text x="440.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="437" y="212" width="14" height="15" fill="rgb(245,50,6)"/><text x="440.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="437" y="228" width="14" height="15" fill="rgb(211,173,25)"/><text x="440.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="437" y="244" width="14" height="15" fill="rgb(251,86,53)"/><text x="440.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="437" y="260" width="14" height="15" fill="rgb(245,171,26)"/><text x="440.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="437" y="276" width="14" height="15" fill="rgb(208,179,53)"/><text x="440.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 1.18%)</title><rect x="437" y="292" width="14" height="15" fill="rgb(207,40,13)"/><text x="440.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="437" y="308" width="14" height="15" fill="rgb(246,78,50)"/><text x="440.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="437" y="324" width="14" height="15" fill="rgb(211,68,44)"/><text x="440.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="437" y="340" width="14" height="15" fill="rgb(254,42,15)"/><text x="440.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="437" y="356" width="14" height="15" fill="rgb(249,25,43)"/><text x="440.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="437" y="372" width="14" height="15" fill="rgb(254,40,52)"/><text x="440.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 1.18%)</title><rect x="437" y="388" width="14" height="15" fill="rgb(214,176,48)"/><text x="440.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="437" y="404" width="14" height="15" fill="rgb(213,118,9)"/><text x="440.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="437" y="420" width="14" height="15" fill="rgb(209,154,26)"/><text x="440.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="437" y="436" width="14" height="15" fill="rgb(250,33,11)"/><text x="440.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="437" y="452" width="14" height="15" fill="rgb(231,21,47)"/><text x="440.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="437" y="468" width="14" height="15" fill="rgb(234,207,45)"/><text x="440.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.71%)</title><rect x="443" y="484" width="8" height="15" fill="rgb(241,57,1)"/><text x="446.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="443" y="500" width="8" height="15" fill="rgb(219,178,25)"/><text x="446.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="443" y="516" width="8" height="15" fill="rgb(223,117,45)"/><text x="446.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="443" y="532" width="8" height="15" fill="rgb(254,86,45)"/><text x="446.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="443" y="548" width="8" height="15" fill="rgb(242,77,12)"/><text x="446.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="443" y="564" width="8" height="15" fill="rgb(226,228,10)"/><text x="446.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.71%)</title><rect x="443" y="580" width="8" height="15" fill="rgb(217,8,14)"/><text x="446.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="443" y="596" width="8" height="15" fill="rgb(213,24,42)"/><text x="446.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="443" y="612" width="8" height="15" fill="rgb(250,77,49)"/><text x="446.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="443" y="628" width="8" height="15" fill="rgb(249,138,40)"/><text x="446.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="443" y="644" width="8" height="15" fill="rgb(225,22,2)"/><text x="446.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="443" y="660" width="8" height="15" fill="rgb(247,138,31)"/><text x="446.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.71%)</title><rect x="443" y="676" width="8" height="15" fill="rgb(234,215,20)"/><text x="446.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="443" y="692" width="8" height="15" fill="rgb(254,112,18)"/><text x="446.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="443" y="708" width="8" height="15" fill="rgb(209,195,25)"/><text x="446.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="443" y="724" width="8" height="15" fill="rgb(205,7,6)"/><text x="446.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="443" y="740" width="8" height="15" fill="rgb(209,11,42)"/><text x="446.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="443" y="756" width="8" height="15" fill="rgb(227,159,40)"/><text x="446.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:183) (1 samples, 0.24%)</title><rect x="448" y="772" width="3" height="15" fill="rgb(248,52,5)"/><text x="451.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="448" y="788" width="3" height="15" fill="rgb(233,203,20)"/><text x="451.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="448" y="804" width="3" height="15" fill="rgb(242,50,49)"/><text x="451.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="448" y="820" width="3" height="15" fill="rgb(215,39,36)"/><text x="451.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="448" y="836" width="3" height="15" fill="rgb(208,183,42)"/><text x="451.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="448" y="852" width="3" height="15" fill="rgb(223,15,18)"/><text x="451.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="448" y="868" width="3" height="15" fill="rgb(242,166,21)"/><text x="451.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="448" y="884" width="3" height="15" fill="rgb(251,214,33)"/><text x="451.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py:402) (1 samples, 0.24%)</title><rect x="448" y="900" width="3" height="15" fill="rgb(245,54,28)"/><text x="451.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py:464) (1 samples, 0.24%)</title><rect x="448" y="916" width="3" height="15" fill="rgb(209,8,37)"/><text x="451.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.24%)</title><rect x="451" y="628" width="3" height="15" fill="rgb(232,13,29)"/><text x="454.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="644" width="3" height="15" fill="rgb(221,5,25)"/><text x="454.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="660" width="3" height="15" fill="rgb(227,26,27)"/><text x="454.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="676" width="3" height="15" fill="rgb(239,81,26)"/><text x="454.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="451" y="692" width="3" height="15" fill="rgb(227,223,50)"/><text x="454.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="708" width="3" height="15" fill="rgb(253,41,11)"/><text x="454.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.24%)</title><rect x="451" y="724" width="3" height="15" fill="rgb(247,9,14)"/><text x="454.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="740" width="3" height="15" fill="rgb(254,113,37)"/><text x="454.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="756" width="3" height="15" fill="rgb(248,195,25)"/><text x="454.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="772" width="3" height="15" fill="rgb(242,184,38)"/><text x="454.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="451" y="788" width="3" height="15" fill="rgb(242,3,26)"/><text x="454.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="804" width="3" height="15" fill="rgb(227,47,49)"/><text x="454.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.24%)</title><rect x="451" y="820" width="3" height="15" fill="rgb(241,144,34)"/><text x="454.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="836" width="3" height="15" fill="rgb(211,53,36)"/><text x="454.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="852" width="3" height="15" fill="rgb(252,111,21)"/><text x="454.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="868" width="3" height="15" fill="rgb(238,211,24)"/><text x="454.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="884" width="3" height="15" fill="rgb(213,215,1)"/><text x="454.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="900" width="3" height="15" fill="rgb(220,141,44)"/><text x="454.00" y="910.50"></text></g><g><title>0x7fbcbc65740e (?) (1 samples, 0.24%)</title><rect x="451" y="916" width="3" height="15" fill="rgb(245,62,45)"/><text x="454.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="932" width="3" height="15" fill="rgb(205,117,20)"/><text x="454.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="948" width="3" height="15" fill="rgb(236,131,42)"/><text x="454.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="964" width="3" height="15" fill="rgb(226,212,24)"/><text x="454.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="980" width="3" height="15" fill="rgb(221,15,44)"/><text x="454.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="996" width="3" height="15" fill="rgb(253,139,8)"/><text x="454.00" y="1006.50"></text></g><g><title>0x7fbcbc410cd2 (?) (1 samples, 0.24%)</title><rect x="451" y="1012" width="3" height="15" fill="rgb(207,96,8)"/><text x="454.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="1028" width="3" height="15" fill="rgb(220,102,51)"/><text x="454.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="1044" width="3" height="15" fill="rgb(245,26,28)"/><text x="454.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="1060" width="3" height="15" fill="rgb(232,227,45)"/><text x="454.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="1076" width="3" height="15" fill="rgb(217,113,45)"/><text x="454.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="1092" width="3" height="15" fill="rgb(248,205,0)"/><text x="454.00" y="1102.50"></text></g><g><title>0x7fbcbbb060e5 (?) (1 samples, 0.24%)</title><rect x="451" y="1108" width="3" height="15" fill="rgb(246,200,33)"/><text x="454.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="1124" width="3" height="15" fill="rgb(216,39,11)"/><text x="454.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="1140" width="3" height="15" fill="rgb(235,207,4)"/><text x="454.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="1156" width="3" height="15" fill="rgb(231,126,31)"/><text x="454.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="1172" width="3" height="15" fill="rgb(239,184,4)"/><text x="454.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="1188" width="3" height="15" fill="rgb(244,29,16)"/><text x="454.00" y="1198.50"></text></g><g><title>0x7fbcbb88ae68 (?) (1 samples, 0.24%)</title><rect x="451" y="1204" width="3" height="15" fill="rgb(231,118,44)"/><text x="454.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="1220" width="3" height="15" fill="rgb(226,223,14)"/><text x="454.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="1236" width="3" height="15" fill="rgb(218,116,16)"/><text x="454.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="1252" width="3" height="15" fill="rgb(228,76,40)"/><text x="454.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="1268" width="3" height="15" fill="rgb(211,9,9)"/><text x="454.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="1284" width="3" height="15" fill="rgb(224,156,0)"/><text x="454.00" y="1294.50"></text></g><g><title>0x7fbcbb61b2fb (?) (1 samples, 0.24%)</title><rect x="451" y="1300" width="3" height="15" fill="rgb(245,33,7)"/><text x="454.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="1316" width="3" height="15" fill="rgb(221,229,2)"/><text x="454.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="1332" width="3" height="15" fill="rgb(232,111,40)"/><text x="454.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="1348" width="3" height="15" fill="rgb(232,140,53)"/><text x="454.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="1364" width="3" height="15" fill="rgb(250,210,43)"/><text x="454.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="1380" width="3" height="15" fill="rgb(229,121,29)"/><text x="454.00" y="1390.50"></text></g><g><title>0x7fbcbb3ff153 (?) (1 samples, 0.24%)</title><rect x="451" y="1396" width="3" height="15" fill="rgb(215,229,18)"/><text x="454.00" y="1406.50"></text></g><g><title>0x7fbcbb3fdc13 (?) (1 samples, 0.24%)</title><rect x="451" y="1412" width="3" height="15" fill="rgb(225,57,6)"/><text x="454.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="1428" width="3" height="15" fill="rgb(233,184,25)"/><text x="454.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="451" y="1444" width="3" height="15" fill="rgb(240,22,4)"/><text x="454.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="451" y="1460" width="3" height="15" fill="rgb(205,168,38)"/><text x="454.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="451" y="1476" width="3" height="15" fill="rgb(219,51,29)"/><text x="454.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="451" y="1492" width="3" height="15" fill="rgb(223,111,3)"/><text x="454.00" y="1502.50"></text></g><g><title>0x7fbcbb1984c3 (?) (1 samples, 0.24%)</title><rect x="451" y="1508" width="3" height="15" fill="rgb(205,28,19)"/><text x="454.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="451" y="1524" width="3" height="15" fill="rgb(237,48,35)"/><text x="454.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.24%)</title><rect x="451" y="1540" width="3" height="15" fill="rgb(214,106,36)"/><text x="454.00" y="1550.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.24%)</title><rect x="451" y="1556" width="3" height="15" fill="rgb(245,168,13)"/><text x="454.00" y="1566.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.24%)</title><rect x="451" y="1572" width="3" height="15" fill="rgb(209,180,49)"/><text x="454.00" y="1582.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.24%)</title><rect x="451" y="1588" width="3" height="15" fill="rgb(217,125,32)"/><text x="454.00" y="1598.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.24%)</title><rect x="451" y="1604" width="3" height="15" fill="rgb(242,21,44)"/><text x="454.00" y="1614.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.24%)</title><rect x="451" y="1620" width="3" height="15" fill="rgb(243,9,1)"/><text x="454.00" y="1630.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.24%)</title><rect x="454" y="916" width="3" height="15" fill="rgb(248,173,35)"/><text x="457.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="932" width="3" height="15" fill="rgb(210,95,47)"/><text x="457.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="948" width="3" height="15" fill="rgb(215,60,4)"/><text x="457.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="964" width="3" height="15" fill="rgb(220,68,26)"/><text x="457.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="980" width="3" height="15" fill="rgb(231,143,10)"/><text x="457.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="996" width="3" height="15" fill="rgb(206,150,32)"/><text x="457.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.24%)</title><rect x="454" y="1012" width="3" height="15" fill="rgb(239,23,41)"/><text x="457.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1028" width="3" height="15" fill="rgb(223,119,37)"/><text x="457.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1044" width="3" height="15" fill="rgb(209,139,35)"/><text x="457.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1060" width="3" height="15" fill="rgb(254,24,38)"/><text x="457.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1076" width="3" height="15" fill="rgb(248,159,17)"/><text x="457.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1092" width="3" height="15" fill="rgb(239,179,32)"/><text x="457.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.24%)</title><rect x="454" y="1108" width="3" height="15" fill="rgb(237,92,48)"/><text x="457.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1124" width="3" height="15" fill="rgb(237,188,47)"/><text x="457.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1140" width="3" height="15" fill="rgb(251,157,17)"/><text x="457.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1156" width="3" height="15" fill="rgb(217,99,28)"/><text x="457.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1172" width="3" height="15" fill="rgb(214,2,12)"/><text x="457.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1188" width="3" height="15" fill="rgb(222,80,41)"/><text x="457.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.24%)</title><rect x="454" y="1204" width="3" height="15" fill="rgb(235,58,26)"/><text x="457.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1220" width="3" height="15" fill="rgb(253,4,22)"/><text x="457.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1236" width="3" height="15" fill="rgb(213,213,49)"/><text x="457.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1252" width="3" height="15" fill="rgb(208,39,52)"/><text x="457.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1268" width="3" height="15" fill="rgb(242,150,38)"/><text x="457.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1284" width="3" height="15" fill="rgb(217,83,34)"/><text x="457.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.24%)</title><rect x="454" y="1300" width="3" height="15" fill="rgb(254,172,39)"/><text x="457.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1316" width="3" height="15" fill="rgb(233,74,41)"/><text x="457.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1332" width="3" height="15" fill="rgb(207,158,16)"/><text x="457.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1348" width="3" height="15" fill="rgb(217,117,43)"/><text x="457.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1364" width="3" height="15" fill="rgb(239,16,3)"/><text x="457.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1380" width="3" height="15" fill="rgb(216,222,14)"/><text x="457.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.24%)</title><rect x="454" y="1396" width="3" height="15" fill="rgb(247,43,46)"/><text x="457.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1412" width="3" height="15" fill="rgb(247,44,40)"/><text x="457.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1428" width="3" height="15" fill="rgb(247,140,38)"/><text x="457.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1444" width="3" height="15" fill="rgb(219,5,7)"/><text x="457.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1460" width="3" height="15" fill="rgb(245,139,0)"/><text x="457.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1476" width="3" height="15" fill="rgb(205,218,24)"/><text x="457.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.24%)</title><rect x="454" y="1492" width="3" height="15" fill="rgb(220,16,13)"/><text x="457.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="454" y="1508" width="3" height="15" fill="rgb(241,33,52)"/><text x="457.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1524" width="3" height="15" fill="rgb(254,206,38)"/><text x="457.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1540" width="3" height="15" fill="rgb(208,75,21)"/><text x="457.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1556" width="3" height="15" fill="rgb(236,123,46)"/><text x="457.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1572" width="3" height="15" fill="rgb(218,41,14)"/><text x="457.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1588" width="3" height="15" fill="rgb(247,161,51)"/><text x="457.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1604" width="3" height="15" fill="rgb(235,170,27)"/><text x="457.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.24%)</title><rect x="454" y="1620" width="3" height="15" fill="rgb(249,189,27)"/><text x="457.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1636" width="3" height="15" fill="rgb(235,186,9)"/><text x="457.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1652" width="3" height="15" fill="rgb(251,202,52)"/><text x="457.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1668" width="3" height="15" fill="rgb(237,172,10)"/><text x="457.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1684" width="3" height="15" fill="rgb(213,156,20)"/><text x="457.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1700" width="3" height="15" fill="rgb(253,9,33)"/><text x="457.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py:159) (1 samples, 0.24%)</title><rect x="454" y="1716" width="3" height="15" fill="rgb(234,65,12)"/><text x="457.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="454" y="1732" width="3" height="15" fill="rgb(246,205,1)"/><text x="457.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="454" y="1748" width="3" height="15" fill="rgb(234,200,48)"/><text x="457.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="454" y="1764" width="3" height="15" fill="rgb(234,157,24)"/><text x="457.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="454" y="1780" width="3" height="15" fill="rgb(210,97,33)"/><text x="457.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="454" y="1796" width="3" height="15" fill="rgb(254,151,52)"/><text x="457.00" y="1806.50"></text></g><g><title>&lt;module&gt; (matplotlib/ticker.py:2200) (1 samples, 0.24%)</title><rect x="454" y="1812" width="3" height="15" fill="rgb(249,197,54)"/><text x="457.00" y="1822.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.71%)</title><rect x="451" y="436" width="8" height="15" fill="rgb(240,197,49)"/><text x="454.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="451" y="452" width="8" height="15" fill="rgb(217,105,19)"/><text x="454.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="451" y="468" width="8" height="15" fill="rgb(208,31,44)"/><text x="454.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="451" y="484" width="8" height="15" fill="rgb(236,39,13)"/><text x="454.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="451" y="500" width="8" height="15" fill="rgb(227,138,5)"/><text x="454.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="451" y="516" width="8" height="15" fill="rgb(247,225,53)"/><text x="454.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.71%)</title><rect x="451" y="532" width="8" height="15" fill="rgb(217,225,0)"/><text x="454.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="451" y="548" width="8" height="15" fill="rgb(208,153,8)"/><text x="454.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="451" y="564" width="8" height="15" fill="rgb(219,107,4)"/><text x="454.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="451" y="580" width="8" height="15" fill="rgb(213,92,10)"/><text x="454.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="451" y="596" width="8" height="15" fill="rgb(231,116,30)"/><text x="454.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="451" y="612" width="8" height="15" fill="rgb(240,216,42)"/><text x="454.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.47%)</title><rect x="454" y="628" width="5" height="15" fill="rgb(211,111,10)"/><text x="457.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="454" y="644" width="5" height="15" fill="rgb(224,190,30)"/><text x="457.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="454" y="660" width="5" height="15" fill="rgb(238,199,53)"/><text x="457.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="454" y="676" width="5" height="15" fill="rgb(227,32,6)"/><text x="457.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="454" y="692" width="5" height="15" fill="rgb(223,123,26)"/><text x="457.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="454" y="708" width="5" height="15" fill="rgb(213,47,6)"/><text x="457.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.47%)</title><rect x="454" y="724" width="5" height="15" fill="rgb(224,186,52)"/><text x="457.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="454" y="740" width="5" height="15" fill="rgb(218,62,36)"/><text x="457.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="454" y="756" width="5" height="15" fill="rgb(219,137,17)"/><text x="457.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="454" y="772" width="5" height="15" fill="rgb(210,122,0)"/><text x="457.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="454" y="788" width="5" height="15" fill="rgb(210,121,54)"/><text x="457.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="454" y="804" width="5" height="15" fill="rgb(220,218,50)"/><text x="457.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.47%)</title><rect x="454" y="820" width="5" height="15" fill="rgb(248,14,24)"/><text x="457.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="454" y="836" width="5" height="15" fill="rgb(248,196,23)"/><text x="457.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="454" y="852" width="5" height="15" fill="rgb(224,222,5)"/><text x="457.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="454" y="868" width="5" height="15" fill="rgb(219,152,52)"/><text x="457.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="454" y="884" width="5" height="15" fill="rgb(208,26,13)"/><text x="457.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="454" y="900" width="5" height="15" fill="rgb(208,21,46)"/><text x="457.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.24%)</title><rect x="457" y="916" width="2" height="15" fill="rgb(223,31,36)"/><text x="460.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="457" y="932" width="2" height="15" fill="rgb(236,161,33)"/><text x="460.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="457" y="948" width="2" height="15" fill="rgb(212,114,52)"/><text x="460.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="457" y="964" width="2" height="15" fill="rgb(227,91,1)"/><text x="460.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="457" y="980" width="2" height="15" fill="rgb(208,94,1)"/><text x="460.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="457" y="996" width="2" height="15" fill="rgb(232,157,7)"/><text x="460.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:28) (1 samples, 0.24%)</title><rect x="457" y="1012" width="2" height="15" fill="rgb(230,91,4)"/><text x="460.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="457" y="1028" width="2" height="15" fill="rgb(214,52,49)"/><text x="460.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="457" y="1044" width="2" height="15" fill="rgb(235,67,5)"/><text x="460.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="457" y="1060" width="2" height="15" fill="rgb(250,136,0)"/><text x="460.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="457" y="1076" width="2" height="15" fill="rgb(212,91,4)"/><text x="460.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="457" y="1092" width="2" height="15" fill="rgb(233,183,32)"/><text x="460.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/series.py:49) (1 samples, 0.24%)</title><rect x="457" y="1108" width="2" height="15" fill="rgb(212,158,29)"/><text x="460.00" y="1118.50"></text></g><g><title>SparseSeries (pandas/core/sparse/series.py:521) (1 samples, 0.24%)</title><rect x="457" y="1124" width="2" height="15" fill="rgb(238,100,4)"/><text x="460.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.24%)</title><rect x="457" y="1140" width="2" height="15" fill="rgb(221,43,27)"/><text x="460.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.24%)</title><rect x="457" y="1156" width="2" height="15" fill="rgb(210,124,15)"/><text x="460.00" y="1166.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.24%)</title><rect x="457" y="1172" width="2" height="15" fill="rgb(248,88,18)"/><text x="460.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.24%)</title><rect x="457" y="1188" width="2" height="15" fill="rgb(208,144,52)"/><text x="460.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.24%)</title><rect x="457" y="1204" width="2" height="15" fill="rgb(210,210,6)"/><text x="460.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.24%)</title><rect x="457" y="1220" width="2" height="15" fill="rgb(242,140,37)"/><text x="460.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.24%)</title><rect x="459" y="1380" width="3" height="15" fill="rgb(238,203,54)"/><text x="462.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.24%)</title><rect x="459" y="1396" width="3" height="15" fill="rgb(238,28,3)"/><text x="462.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.24%)</title><rect x="459" y="1412" width="3" height="15" fill="rgb(254,188,54)"/><text x="462.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.24%)</title><rect x="459" y="1428" width="3" height="15" fill="rgb(212,153,46)"/><text x="462.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.24%)</title><rect x="459" y="1444" width="3" height="15" fill="rgb(230,64,38)"/><text x="462.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.24%)</title><rect x="459" y="1460" width="3" height="15" fill="rgb(232,179,43)"/><text x="462.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="459" y="1476" width="3" height="15" fill="rgb(235,151,39)"/><text x="462.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.24%)</title><rect x="459" y="1492" width="3" height="15" fill="rgb(251,204,46)"/><text x="462.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="459" y="1508" width="3" height="15" fill="rgb(239,115,1)"/><text x="462.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.24%)</title><rect x="459" y="1524" width="3" height="15" fill="rgb(228,125,51)"/><text x="462.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.24%)</title><rect x="459" y="1540" width="3" height="15" fill="rgb(250,32,30)"/><text x="462.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:817) (1 samples, 0.24%)</title><rect x="459" y="1556" width="3" height="15" fill="rgb(251,115,1)"/><text x="462.00" y="1566.50"></text></g><g><title>match (sre_parse.py:251) (1 samples, 0.24%)</title><rect x="459" y="1572" width="3" height="15" fill="rgb(224,223,22)"/><text x="462.00" y="1582.50"></text></g><g><title>__next (sre_parse.py:247) (1 samples, 0.24%)</title><rect x="459" y="1588" width="3" height="15" fill="rgb(233,57,21)"/><text x="462.00" y="1598.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.47%)</title><rect x="459" y="1364" width="6" height="15" fill="rgb(252,191,4)"/><text x="462.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:627) (1 samples, 0.24%)</title><rect x="462" y="1380" width="3" height="15" fill="rgb(215,135,48)"/><text x="465.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.71%)</title><rect x="459" y="1108" width="9" height="15" fill="rgb(229,133,14)"/><text x="462.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="459" y="1124" width="9" height="15" fill="rgb(214,213,23)"/><text x="462.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="459" y="1140" width="9" height="15" fill="rgb(238,134,44)"/><text x="462.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="459" y="1156" width="9" height="15" fill="rgb(213,211,16)"/><text x="462.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="459" y="1172" width="9" height="15" fill="rgb(235,16,52)"/><text x="462.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="459" y="1188" width="9" height="15" fill="rgb(217,200,36)"/><text x="462.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (3 samples, 0.71%)</title><rect x="459" y="1204" width="9" height="15" fill="rgb(236,6,37)"/><text x="462.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.71%)</title><rect x="459" y="1220" width="9" height="15" fill="rgb(228,54,12)"/><text x="462.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.71%)</title><rect x="459" y="1236" width="9" height="15" fill="rgb(209,23,5)"/><text x="462.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.71%)</title><rect x="459" y="1252" width="9" height="15" fill="rgb(207,222,31)"/><text x="462.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.71%)</title><rect x="459" y="1268" width="9" height="15" fill="rgb(229,94,40)"/><text x="462.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.71%)</title><rect x="459" y="1284" width="9" height="15" fill="rgb(249,189,13)"/><text x="462.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (3 samples, 0.71%)</title><rect x="459" y="1300" width="9" height="15" fill="rgb(210,114,4)"/><text x="462.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (3 samples, 0.71%)</title><rect x="459" y="1316" width="9" height="15" fill="rgb(243,209,8)"/><text x="462.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (3 samples, 0.71%)</title><rect x="459" y="1332" width="9" height="15" fill="rgb(224,178,49)"/><text x="462.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (3 samples, 0.71%)</title><rect x="459" y="1348" width="9" height="15" fill="rgb(246,59,17)"/><text x="462.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.24%)</title><rect x="465" y="1364" width="3" height="15" fill="rgb(211,124,54)"/><text x="468.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py:920) (1 samples, 0.24%)</title><rect x="465" y="1380" width="3" height="15" fill="rgb(210,223,7)"/><text x="468.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.24%)</title><rect x="468" y="1108" width="2" height="15" fill="rgb(247,158,7)"/><text x="471.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1124" width="2" height="15" fill="rgb(247,35,21)"/><text x="471.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1140" width="2" height="15" fill="rgb(207,47,30)"/><text x="471.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1156" width="2" height="15" fill="rgb(249,47,22)"/><text x="471.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1172" width="2" height="15" fill="rgb(229,67,37)"/><text x="471.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1188" width="2" height="15" fill="rgb(209,3,28)"/><text x="471.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.24%)</title><rect x="468" y="1204" width="2" height="15" fill="rgb(250,210,26)"/><text x="471.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1220" width="2" height="15" fill="rgb(244,40,11)"/><text x="471.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1236" width="2" height="15" fill="rgb(253,112,17)"/><text x="471.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1252" width="2" height="15" fill="rgb(215,148,22)"/><text x="471.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1268" width="2" height="15" fill="rgb(212,113,26)"/><text x="471.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1284" width="2" height="15" fill="rgb(207,59,48)"/><text x="471.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.24%)</title><rect x="468" y="1300" width="2" height="15" fill="rgb(223,162,41)"/><text x="471.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1316" width="2" height="15" fill="rgb(220,132,23)"/><text x="471.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1332" width="2" height="15" fill="rgb(254,40,34)"/><text x="471.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1348" width="2" height="15" fill="rgb(205,40,22)"/><text x="471.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1364" width="2" height="15" fill="rgb(247,159,40)"/><text x="471.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1380" width="2" height="15" fill="rgb(231,145,29)"/><text x="471.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.24%)</title><rect x="468" y="1396" width="2" height="15" fill="rgb(214,203,31)"/><text x="471.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1412" width="2" height="15" fill="rgb(219,154,12)"/><text x="471.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1428" width="2" height="15" fill="rgb(239,52,33)"/><text x="471.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1444" width="2" height="15" fill="rgb(240,122,23)"/><text x="471.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1460" width="2" height="15" fill="rgb(214,66,43)"/><text x="471.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1476" width="2" height="15" fill="rgb(247,157,34)"/><text x="471.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.24%)</title><rect x="468" y="1492" width="2" height="15" fill="rgb(247,74,35)"/><text x="471.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="468" y="1508" width="2" height="15" fill="rgb(245,72,21)"/><text x="471.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1524" width="2" height="15" fill="rgb(218,114,45)"/><text x="471.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1540" width="2" height="15" fill="rgb(220,67,17)"/><text x="471.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1556" width="2" height="15" fill="rgb(235,104,1)"/><text x="471.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1572" width="2" height="15" fill="rgb(226,198,8)"/><text x="471.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1588" width="2" height="15" fill="rgb(208,90,0)"/><text x="471.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1604" width="2" height="15" fill="rgb(212,110,22)"/><text x="471.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.24%)</title><rect x="468" y="1620" width="2" height="15" fill="rgb(224,69,11)"/><text x="471.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1636" width="2" height="15" fill="rgb(254,202,11)"/><text x="471.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1652" width="2" height="15" fill="rgb(243,4,15)"/><text x="471.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1668" width="2" height="15" fill="rgb(244,134,45)"/><text x="471.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1684" width="2" height="15" fill="rgb(253,157,18)"/><text x="471.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1700" width="2" height="15" fill="rgb(210,12,36)"/><text x="471.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.24%)</title><rect x="468" y="1716" width="2" height="15" fill="rgb(244,84,9)"/><text x="471.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1732" width="2" height="15" fill="rgb(254,221,35)"/><text x="471.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1748" width="2" height="15" fill="rgb(207,1,18)"/><text x="471.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1764" width="2" height="15" fill="rgb(227,167,51)"/><text x="471.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1780" width="2" height="15" fill="rgb(238,179,46)"/><text x="471.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1796" width="2" height="15" fill="rgb(240,197,18)"/><text x="471.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.24%)</title><rect x="468" y="1812" width="2" height="15" fill="rgb(240,65,46)"/><text x="471.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1828" width="2" height="15" fill="rgb(211,153,19)"/><text x="471.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1844" width="2" height="15" fill="rgb(231,25,9)"/><text x="471.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1860" width="2" height="15" fill="rgb(223,127,26)"/><text x="471.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="1876" width="2" height="15" fill="rgb(232,116,34)"/><text x="471.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1892" width="2" height="15" fill="rgb(235,161,13)"/><text x="471.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py:26) (1 samples, 0.24%)</title><rect x="468" y="1908" width="2" height="15" fill="rgb(227,190,54)"/><text x="471.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="468" y="1924" width="2" height="15" fill="rgb(216,166,4)"/><text x="471.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="1940" width="2" height="15" fill="rgb(230,95,27)"/><text x="471.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="1956" width="2" height="15" fill="rgb(218,229,46)"/><text x="471.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="1972" width="2" height="15" fill="rgb(217,221,49)"/><text x="471.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="1988" width="2" height="15" fill="rgb(244,216,48)"/><text x="471.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="468" y="2004" width="2" height="15" fill="rgb(225,18,3)"/><text x="471.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2020" width="2" height="15" fill="rgb(228,30,39)"/><text x="471.00" y="2030.50"></text></g><g><title>0x7fbcb2287d1a (?) (1 samples, 0.24%)</title><rect x="468" y="2036" width="2" height="15" fill="rgb(223,95,10)"/><text x="471.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2052" width="2" height="15" fill="rgb(249,6,39)"/><text x="471.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="2068" width="2" height="15" fill="rgb(250,3,20)"/><text x="471.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="2084" width="2" height="15" fill="rgb(233,212,17)"/><text x="471.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="468" y="2100" width="2" height="15" fill="rgb(229,91,38)"/><text x="471.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2116" width="2" height="15" fill="rgb(251,173,15)"/><text x="471.00" y="2126.50"></text></g><g><title>0x7fbcb200a195 (?) (1 samples, 0.24%)</title><rect x="468" y="2132" width="2" height="15" fill="rgb(206,177,44)"/><text x="471.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2148" width="2" height="15" fill="rgb(221,183,52)"/><text x="471.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.24%)</title><rect x="468" y="2164" width="2" height="15" fill="rgb(212,5,50)"/><text x="471.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2180" width="2" height="15" fill="rgb(241,88,9)"/><text x="471.00" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2196" width="2" height="15" fill="rgb(232,17,19)"/><text x="471.00" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="2212" width="2" height="15" fill="rgb(228,229,3)"/><text x="471.00" y="2222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="2228" width="2" height="15" fill="rgb(215,197,10)"/><text x="471.00" y="2238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="2244" width="2" height="15" fill="rgb(238,137,16)"/><text x="471.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2260" width="2" height="15" fill="rgb(229,6,48)"/><text x="471.00" y="2270.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.24%)</title><rect x="468" y="2276" width="2" height="15" fill="rgb(227,150,39)"/><text x="471.00" y="2286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2292" width="2" height="15" fill="rgb(206,209,14)"/><text x="471.00" y="2302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="2308" width="2" height="15" fill="rgb(211,151,9)"/><text x="471.00" y="2318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="2324" width="2" height="15" fill="rgb(209,96,45)"/><text x="471.00" y="2334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="468" y="2340" width="2" height="15" fill="rgb(239,216,30)"/><text x="471.00" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2356" width="2" height="15" fill="rgb(249,11,36)"/><text x="471.00" y="2366.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.24%)</title><rect x="468" y="2372" width="2" height="15" fill="rgb(234,123,6)"/><text x="471.00" y="2382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2388" width="2" height="15" fill="rgb(217,166,45)"/><text x="471.00" y="2398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="2404" width="2" height="15" fill="rgb(228,32,30)"/><text x="471.00" y="2414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="2420" width="2" height="15" fill="rgb(233,208,10)"/><text x="471.00" y="2430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="468" y="2436" width="2" height="15" fill="rgb(234,112,25)"/><text x="471.00" y="2446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2452" width="2" height="15" fill="rgb(245,45,16)"/><text x="471.00" y="2462.50"></text></g><g><title>0x7fbcb1dd2373 (?) (1 samples, 0.24%)</title><rect x="468" y="2468" width="2" height="15" fill="rgb(207,41,38)"/><text x="471.00" y="2478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2484" width="2" height="15" fill="rgb(244,95,54)"/><text x="471.00" y="2494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="2500" width="2" height="15" fill="rgb(214,52,45)"/><text x="471.00" y="2510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="468" y="2516" width="2" height="15" fill="rgb(237,91,24)"/><text x="471.00" y="2526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.24%)</title><rect x="468" y="2532" width="2" height="15" fill="rgb(226,142,10)"/><text x="471.00" y="2542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2548" width="2" height="15" fill="rgb(207,172,31)"/><text x="471.00" y="2558.50"></text></g><g><title>0x7fbcb1b95eea (?) (1 samples, 0.24%)</title><rect x="468" y="2564" width="2" height="15" fill="rgb(226,222,5)"/><text x="471.00" y="2574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="468" y="2580" width="2" height="15" fill="rgb(254,148,29)"/><text x="471.00" y="2590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="468" y="2596" width="2" height="15" fill="rgb(207,0,22)"/><text x="471.00" y="2606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.24%)</title><rect x="468" y="2612" width="2" height="15" fill="rgb(212,50,41)"/><text x="471.00" y="2622.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.24%)</title><rect x="468" y="2628" width="2" height="15" fill="rgb(210,142,25)"/><text x="471.00" y="2638.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.24%)</title><rect x="468" y="2644" width="2" height="15" fill="rgb(226,67,12)"/><text x="471.00" y="2654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="468" y="2660" width="2" height="15" fill="rgb(228,59,47)"/><text x="471.00" y="2670.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:4) (20 samples, 4.71%)</title><rect x="418" y="52" width="55" height="15" fill="rgb(208,46,2)"/><text x="421.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 4.71%)</title><rect x="418" y="68" width="55" height="15" fill="rgb(219,58,44)"/><text x="421.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 4.71%)</title><rect x="418" y="84" width="55" height="15" fill="rgb(205,146,29)"/><text x="421.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 4.71%)</title><rect x="418" y="100" width="55" height="15" fill="rgb(217,106,37)"/><text x="421.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 4.71%)</title><rect x="418" y="116" width="55" height="15" fill="rgb(246,217,10)"/><text x="421.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 4.71%)</title><rect x="418" y="132" width="55" height="15" fill="rgb(211,184,11)"/><text x="421.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:7) (8 samples, 1.88%)</title><rect x="451" y="148" width="22" height="15" fill="rgb(207,0,11)"/><text x="454.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.88%)</title><rect x="451" y="164" width="22" height="15" fill="rgb(224,43,9)"/><text x="454.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.88%)</title><rect x="451" y="180" width="22" height="15" fill="rgb(252,88,10)"/><text x="454.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.88%)</title><rect x="451" y="196" width="22" height="15" fill="rgb(248,93,32)"/><text x="454.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.88%)</title><rect x="451" y="212" width="22" height="15" fill="rgb(233,202,42)"/><text x="454.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.88%)</title><rect x="451" y="228" width="22" height="15" fill="rgb(217,217,14)"/><text x="454.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.88%)</title><rect x="451" y="244" width="22" height="15" fill="rgb(212,184,34)"/><text x="454.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.88%)</title><rect x="451" y="260" width="22" height="15" fill="rgb(205,90,32)"/><text x="454.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.88%)</title><rect x="451" y="276" width="22" height="15" fill="rgb(223,6,34)"/><text x="454.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.88%)</title><rect x="451" y="292" width="22" height="15" fill="rgb(254,170,28)"/><text x="454.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.88%)</title><rect x="451" y="308" width="22" height="15" fill="rgb(212,141,47)"/><text x="454.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.88%)</title><rect x="451" y="324" width="22" height="15" fill="rgb(228,163,7)"/><text x="454.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.88%)</title><rect x="451" y="340" width="22" height="15" fill="rgb(229,61,1)"/><text x="454.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.88%)</title><rect x="451" y="356" width="22" height="15" fill="rgb(253,185,30)"/><text x="454.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.88%)</title><rect x="451" y="372" width="22" height="15" fill="rgb(229,170,12)"/><text x="454.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.88%)</title><rect x="451" y="388" width="22" height="15" fill="rgb(228,66,1)"/><text x="454.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.88%)</title><rect x="451" y="404" width="22" height="15" fill="rgb(234,29,24)"/><text x="454.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.88%)</title><rect x="451" y="420" width="22" height="15" fill="rgb(213,217,23)"/><text x="454.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.18%)</title><rect x="459" y="436" width="14" height="15" fill="rgb(215,214,11)"/><text x="462.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="452" width="14" height="15" fill="rgb(231,58,45)"/><text x="462.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.18%)</title><rect x="459" y="468" width="14" height="15" fill="rgb(219,120,54)"/><text x="462.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="484" width="14" height="15" fill="rgb(235,170,20)"/><text x="462.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="500" width="14" height="15" fill="rgb(248,210,15)"/><text x="462.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="459" y="516" width="14" height="15" fill="rgb(252,16,48)"/><text x="462.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="459" y="532" width="14" height="15" fill="rgb(244,58,0)"/><text x="462.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="459" y="548" width="14" height="15" fill="rgb(248,116,29)"/><text x="462.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="564" width="14" height="15" fill="rgb(221,190,34)"/><text x="462.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.18%)</title><rect x="459" y="580" width="14" height="15" fill="rgb(208,209,25)"/><text x="462.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="596" width="14" height="15" fill="rgb(218,134,35)"/><text x="462.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="459" y="612" width="14" height="15" fill="rgb(213,139,53)"/><text x="462.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="459" y="628" width="14" height="15" fill="rgb(230,54,39)"/><text x="462.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="459" y="644" width="14" height="15" fill="rgb(247,206,42)"/><text x="462.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="660" width="14" height="15" fill="rgb(223,56,52)"/><text x="462.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.18%)</title><rect x="459" y="676" width="14" height="15" fill="rgb(242,90,19)"/><text x="462.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="692" width="14" height="15" fill="rgb(244,201,1)"/><text x="462.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="459" y="708" width="14" height="15" fill="rgb(232,77,18)"/><text x="462.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="459" y="724" width="14" height="15" fill="rgb(208,55,17)"/><text x="462.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="459" y="740" width="14" height="15" fill="rgb(223,156,40)"/><text x="462.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="756" width="14" height="15" fill="rgb(223,202,50)"/><text x="462.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.18%)</title><rect x="459" y="772" width="14" height="15" fill="rgb(247,79,4)"/><text x="462.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="788" width="14" height="15" fill="rgb(209,184,3)"/><text x="462.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="459" y="804" width="14" height="15" fill="rgb(216,85,29)"/><text x="462.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="459" y="820" width="14" height="15" fill="rgb(210,211,13)"/><text x="462.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="459" y="836" width="14" height="15" fill="rgb(254,58,17)"/><text x="462.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="852" width="14" height="15" fill="rgb(215,163,26)"/><text x="462.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.18%)</title><rect x="459" y="868" width="14" height="15" fill="rgb(237,1,54)"/><text x="462.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="884" width="14" height="15" fill="rgb(251,63,6)"/><text x="462.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.18%)</title><rect x="459" y="900" width="14" height="15" fill="rgb(214,190,16)"/><text x="462.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="916" width="14" height="15" fill="rgb(224,221,38)"/><text x="462.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="932" width="14" height="15" fill="rgb(247,30,6)"/><text x="462.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="459" y="948" width="14" height="15" fill="rgb(221,96,26)"/><text x="462.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="459" y="964" width="14" height="15" fill="rgb(240,187,6)"/><text x="462.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="459" y="980" width="14" height="15" fill="rgb(209,198,5)"/><text x="462.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="996" width="14" height="15" fill="rgb(228,207,36)"/><text x="462.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.18%)</title><rect x="459" y="1012" width="14" height="15" fill="rgb(208,160,3)"/><text x="462.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.18%)</title><rect x="459" y="1028" width="14" height="15" fill="rgb(223,83,48)"/><text x="462.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.18%)</title><rect x="459" y="1044" width="14" height="15" fill="rgb(230,54,41)"/><text x="462.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.18%)</title><rect x="459" y="1060" width="14" height="15" fill="rgb(226,97,2)"/><text x="462.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.18%)</title><rect x="459" y="1076" width="14" height="15" fill="rgb(230,212,8)"/><text x="462.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.18%)</title><rect x="459" y="1092" width="14" height="15" fill="rgb(225,120,31)"/><text x="462.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.24%)</title><rect x="470" y="1108" width="3" height="15" fill="rgb(250,179,51)"/><text x="473.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="470" y="1124" width="3" height="15" fill="rgb(221,219,33)"/><text x="473.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="470" y="1140" width="3" height="15" fill="rgb(222,104,36)"/><text x="473.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="470" y="1156" width="3" height="15" fill="rgb(221,189,18)"/><text x="473.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="470" y="1172" width="3" height="15" fill="rgb(216,98,25)"/><text x="473.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="470" y="1188" width="3" height="15" fill="rgb(235,62,22)"/><text x="473.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="470" y="1204" width="3" height="15" fill="rgb(226,144,46)"/><text x="473.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="470" y="1220" width="3" height="15" fill="rgb(218,13,40)"/><text x="473.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.24%)</title><rect x="470" y="1236" width="3" height="15" fill="rgb(250,206,4)"/><text x="473.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.24%)</title><rect x="470" y="1252" width="3" height="15" fill="rgb(244,10,44)"/><text x="473.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="470" y="1268" width="3" height="15" fill="rgb(237,86,27)"/><text x="473.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="470" y="1284" width="3" height="15" fill="rgb(214,138,34)"/><text x="473.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="470" y="1300" width="3" height="15" fill="rgb(216,229,49)"/><text x="473.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="470" y="1316" width="3" height="15" fill="rgb(236,163,2)"/><text x="473.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="470" y="1332" width="3" height="15" fill="rgb(217,194,50)"/><text x="473.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="470" y="1348" width="3" height="15" fill="rgb(232,191,9)"/><text x="473.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.24%)</title><rect x="470" y="1364" width="3" height="15" fill="rgb(221,139,41)"/><text x="473.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="470" y="1380" width="3" height="15" fill="rgb(211,19,27)"/><text x="473.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="470" y="1396" width="3" height="15" fill="rgb(236,86,12)"/><text x="473.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="470" y="1412" width="3" height="15" fill="rgb(252,182,47)"/><text x="473.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="470" y="1428" width="3" height="15" fill="rgb(227,114,29)"/><text x="473.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="470" y="1444" width="3" height="15" fill="rgb(253,213,28)"/><text x="473.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.24%)</title><rect x="470" y="1460" width="3" height="15" fill="rgb(240,28,40)"/><text x="473.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.24%)</title><rect x="470" y="1476" width="3" height="15" fill="rgb(225,198,41)"/><text x="473.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.24%)</title><rect x="470" y="1492" width="3" height="15" fill="rgb(232,163,43)"/><text x="473.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.24%)</title><rect x="470" y="1508" width="3" height="15" fill="rgb(253,52,18)"/><text x="473.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.24%)</title><rect x="470" y="1524" width="3" height="15" fill="rgb(249,33,1)"/><text x="473.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.24%)</title><rect x="470" y="1540" width="3" height="15" fill="rgb(238,182,1)"/><text x="473.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.24%)</title><rect x="470" y="1556" width="3" height="15" fill="rgb(209,122,34)"/><text x="473.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.24%)</title><rect x="470" y="1572" width="3" height="15" fill="rgb(248,55,48)"/><text x="473.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.24%)</title><rect x="470" y="1588" width="3" height="15" fill="rgb(240,181,3)"/><text x="473.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.24%)</title><rect x="470" y="1604" width="3" height="15" fill="rgb(229,201,38)"/><text x="473.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.24%)</title><rect x="470" y="1620" width="3" height="15" fill="rgb(245,8,31)"/><text x="473.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.24%)</title><rect x="470" y="1636" width="3" height="15" fill="rgb(243,217,17)"/><text x="473.00" y="1646.50"></text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:28) (1 samples, 0.24%)</title><rect x="473" y="84" width="3" height="15" fill="rgb(213,79,0)"/><text x="476.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.24%)</title><rect x="473" y="100" width="3" height="15" fill="rgb(235,171,9)"/><text x="476.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.24%)</title><rect x="473" y="116" width="3" height="15" fill="rgb(239,224,16)"/><text x="476.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.24%)</title><rect x="473" y="132" width="3" height="15" fill="rgb(216,6,23)"/><text x="476.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.24%)</title><rect x="473" y="148" width="3" height="15" fill="rgb(242,169,15)"/><text x="476.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.24%)</title><rect x="473" y="164" width="3" height="15" fill="rgb(217,218,19)"/><text x="476.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.24%)</title><rect x="473" y="180" width="3" height="15" fill="rgb(234,175,4)"/><text x="476.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.24%)</title><rect x="473" y="196" width="3" height="15" fill="rgb(223,207,32)"/><text x="476.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="473" y="212" width="3" height="15" fill="rgb(218,94,36)"/><text x="476.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="473" y="228" width="3" height="15" fill="rgb(248,42,26)"/><text x="476.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="473" y="244" width="3" height="15" fill="rgb(216,76,31)"/><text x="476.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="473" y="260" width="3" height="15" fill="rgb(219,181,47)"/><text x="476.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="473" y="276" width="3" height="15" fill="rgb(238,27,7)"/><text x="476.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.24%)</title><rect x="473" y="292" width="3" height="15" fill="rgb(206,180,37)"/><text x="476.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="473" y="308" width="3" height="15" fill="rgb(241,182,49)"/><text x="476.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="473" y="324" width="3" height="15" fill="rgb(246,202,14)"/><text x="476.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="473" y="340" width="3" height="15" fill="rgb(249,153,8)"/><text x="476.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.24%)</title><rect x="473" y="356" width="3" height="15" fill="rgb(250,202,24)"/><text x="476.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.24%)</title><rect x="473" y="372" width="3" height="15" fill="rgb(223,174,31)"/><text x="476.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:74) (1 samples, 0.24%)</title><rect x="473" y="388" width="3" height="15" fill="rgb(209,229,10)"/><text x="476.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.24%)</title><rect x="473" y="404" width="3" height="15" fill="rgb(232,226,43)"/><text x="476.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.24%)</title><rect x="473" y="420" width="3" height="15" fill="rgb(222,64,47)"/><text x="476.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.24%)</title><rect x="473" y="436" width="3" height="15" fill="rgb(249,150,44)"/><text x="476.00" y="446.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:321) (1 samples, 0.24%)</title><rect x="473" y="452" width="3" height="15" fill="rgb(253,208,27)"/><text x="476.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.24%)</title><rect x="476" y="180" width="3" height="15" fill="rgb(210,133,34)"/><text x="479.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.24%)</title><rect x="479" y="196" width="3" height="15" fill="rgb(247,72,24)"/><text x="482.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.24%)</title><rect x="479" y="212" width="3" height="15" fill="rgb(252,116,34)"/><text x="482.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (1 samples, 0.24%)</title><rect x="479" y="228" width="3" height="15" fill="rgb(238,92,2)"/><text x="482.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (1 samples, 0.24%)</title><rect x="479" y="244" width="3" height="15" fill="rgb(218,222,47)"/><text x="482.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.24%)</title><rect x="479" y="260" width="3" height="15" fill="rgb(242,103,24)"/><text x="482.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.24%)</title><rect x="479" y="276" width="3" height="15" fill="rgb(218,41,31)"/><text x="482.00" y="286.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:18) (3 samples, 0.71%)</title><rect x="476" y="100" width="8" height="15" fill="rgb(210,168,40)"/><text x="479.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.71%)</title><rect x="476" y="116" width="8" height="15" fill="rgb(214,183,6)"/><text x="479.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.71%)</title><rect x="476" y="132" width="8" height="15" fill="rgb(236,180,44)"/><text x="479.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.71%)</title><rect x="476" y="148" width="8" height="15" fill="rgb(211,116,40)"/><text x="479.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (3 samples, 0.71%)</title><rect x="476" y="164" width="8" height="15" fill="rgb(235,29,39)"/><text x="479.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.47%)</title><rect x="479" y="180" width="5" height="15" fill="rgb(210,132,46)"/><text x="482.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (1 samples, 0.24%)</title><rect x="482" y="196" width="2" height="15" fill="rgb(208,9,45)"/><text x="485.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.24%)</title><rect x="482" y="212" width="2" height="15" fill="rgb(235,208,54)"/><text x="485.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (1 samples, 0.24%)</title><rect x="482" y="228" width="2" height="15" fill="rgb(250,172,43)"/><text x="485.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (3 samples, 0.71%)</title><rect x="518" y="180" width="8" height="15" fill="rgb(206,91,31)"/><text x="521.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (22 samples, 5.18%)</title><rect x="526" y="180" width="61" height="15" fill="rgb(219,221,14)"/><text x="529.00" y="190.50">run (m..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.24%)</title><rect x="584" y="196" width="3" height="15" fill="rgb(249,223,21)"/><text x="587.00" y="206.50"></text></g><g><title>0x7fbce3dcf1d6 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="629" y="196" width="2" height="15" fill="rgb(238,144,31)"/><text x="632.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:117) (1 samples, 0.24%)</title><rect x="631" y="196" width="3" height="15" fill="rgb(225,210,6)"/><text x="634.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:40) (1 samples, 0.24%)</title><rect x="645" y="212" width="3" height="15" fill="rgb(217,31,36)"/><text x="648.00" y="222.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.24%)</title><rect x="645" y="228" width="3" height="15" fill="rgb(208,124,40)"/><text x="648.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.24%)</title><rect x="648" y="228" width="3" height="15" fill="rgb(252,132,22)"/><text x="651.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.24%)</title><rect x="648" y="244" width="3" height="15" fill="rgb(217,226,43)"/><text x="651.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.24%)</title><rect x="648" y="260" width="3" height="15" fill="rgb(252,146,26)"/><text x="651.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.24%)</title><rect x="648" y="276" width="3" height="15" fill="rgb(226,57,41)"/><text x="651.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.24%)</title><rect x="648" y="292" width="3" height="15" fill="rgb(239,86,22)"/><text x="651.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.24%)</title><rect x="648" y="308" width="3" height="15" fill="rgb(230,81,8)"/><text x="651.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (1 samples, 0.24%)</title><rect x="648" y="324" width="3" height="15" fill="rgb(229,73,42)"/><text x="651.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.24%)</title><rect x="651" y="244" width="3" height="15" fill="rgb(240,16,23)"/><text x="654.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="651" y="260" width="3" height="15" fill="rgb(212,144,45)"/><text x="654.00" y="270.50"></text></g><g><title>0x7fbce3db0700 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="651" y="276" width="3" height="15" fill="rgb(212,206,33)"/><text x="654.00" y="286.50"></text></g><g><title>0x7fbce3dadad1 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="651" y="292" width="3" height="15" fill="rgb(226,227,7)"/><text x="654.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2662) (1 samples, 0.24%)</title><rect x="654" y="244" width="2" height="15" fill="rgb(236,177,24)"/><text x="657.00" y="254.50"></text></g><g><title>mapiter_fill_info (mapping.c:2410) (1 samples, 0.24%)</title><rect x="654" y="260" width="2" height="15" fill="rgb(219,163,0)"/><text x="657.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2869) (1 samples, 0.24%)</title><rect x="656" y="244" width="3" height="15" fill="rgb(237,219,13)"/><text x="659.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="656" y="260" width="3" height="15" fill="rgb(240,197,46)"/><text x="659.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.24%)</title><rect x="656" y="276" width="3" height="15" fill="rgb(230,159,47)"/><text x="659.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.24%)</title><rect x="656" y="292" width="3" height="15" fill="rgb(249,180,10)"/><text x="659.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:73) (1 samples, 0.24%)</title><rect x="656" y="308" width="3" height="15" fill="rgb(229,221,26)"/><text x="659.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2896) (1 samples, 0.24%)</title><rect x="659" y="244" width="3" height="15" fill="rgb(229,134,10)"/><text x="662.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (5 samples, 1.18%)</title><rect x="651" y="228" width="14" height="15" fill="rgb(250,41,14)"/><text x="654.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.24%)</title><rect x="662" y="244" width="3" height="15" fill="rgb(234,127,6)"/><text x="665.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.24%)</title><rect x="662" y="260" width="3" height="15" fill="rgb(251,133,50)"/><text x="665.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:247) (1 samples, 0.24%)</title><rect x="662" y="276" width="3" height="15" fill="rgb(218,79,40)"/><text x="665.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1672) (1 samples, 0.24%)</title><rect x="665" y="228" width="3" height="15" fill="rgb(233,122,5)"/><text x="668.00" y="238.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:262) (1 samples, 0.24%)</title><rect x="665" y="244" width="3" height="15" fill="rgb(239,7,54)"/><text x="668.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1540) (1 samples, 0.24%)</title><rect x="668" y="244" width="2" height="15" fill="rgb(245,51,49)"/><text x="671.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="668" y="260" width="2" height="15" fill="rgb(211,208,10)"/><text x="671.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.47%)</title><rect x="668" y="228" width="5" height="15" fill="rgb(236,65,52)"/><text x="671.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1611) (1 samples, 0.24%)</title><rect x="670" y="244" width="3" height="15" fill="rgb(221,112,38)"/><text x="673.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.24%)</title><rect x="670" y="260" width="3" height="15" fill="rgb(236,86,42)"/><text x="673.00" y="270.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1972) (1 samples, 0.24%)</title><rect x="670" y="276" width="3" height="15" fill="rgb(250,159,49)"/><text x="673.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (10 samples, 2.35%)</title><rect x="648" y="212" width="28" height="15" fill="rgb(226,126,43)"/><text x="651.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.24%)</title><rect x="673" y="228" width="3" height="15" fill="rgb(224,149,51)"/><text x="676.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.24%)</title><rect x="676" y="212" width="3" height="15" fill="rgb(244,102,31)"/><text x="679.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.24%)</title><rect x="676" y="228" width="3" height="15" fill="rgb(248,66,5)"/><text x="679.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:46) (1 samples, 0.24%)</title><rect x="679" y="212" width="2" height="15" fill="rgb(217,188,1)"/><text x="682.00" y="222.50"></text></g><g><title>0x7fbce3dcf12f (libc-2.29.so) (1 samples, 0.24%)</title><rect x="681" y="244" width="3" height="15" fill="rgb(253,218,24)"/><text x="684.00" y="254.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.24%)</title><rect x="684" y="244" width="3" height="15" fill="rgb(225,31,9)"/><text x="687.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.24%)</title><rect x="684" y="260" width="3" height="15" fill="rgb(248,207,48)"/><text x="687.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.24%)</title><rect x="687" y="260" width="3" height="15" fill="rgb(230,201,22)"/><text x="690.00" y="270.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.24%)</title><rect x="687" y="276" width="3" height="15" fill="rgb(239,115,19)"/><text x="690.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.24%)</title><rect x="690" y="260" width="3" height="15" fill="rgb(235,154,27)"/><text x="693.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.24%)</title><rect x="690" y="276" width="3" height="15" fill="rgb(216,136,41)"/><text x="693.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.24%)</title><rect x="690" y="292" width="3" height="15" fill="rgb(254,3,42)"/><text x="693.00" y="302.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.24%)</title><rect x="690" y="308" width="3" height="15" fill="rgb(231,11,13)"/><text x="693.00" y="318.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:680) (1 samples, 0.24%)</title><rect x="690" y="324" width="3" height="15" fill="rgb(223,21,7)"/><text x="693.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:111) (1 samples, 0.24%)</title><rect x="693" y="276" width="2" height="15" fill="rgb(205,16,27)"/><text x="696.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.47%)</title><rect x="695" y="276" width="6" height="15" fill="rgb(213,98,23)"/><text x="698.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (2 samples, 0.47%)</title><rect x="695" y="292" width="6" height="15" fill="rgb(212,66,4)"/><text x="698.00" y="302.50"></text></g><g><title>0x7fbce2fd0b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="701" y="292" width="3" height="15" fill="rgb(229,205,43)"/><text x="704.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.47%)</title><rect x="701" y="276" width="5" height="15" fill="rgb(240,132,40)"/><text x="704.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="704" y="292" width="2" height="15" fill="rgb(233,70,23)"/><text x="707.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (10 samples, 2.35%)</title><rect x="681" y="212" width="28" height="15" fill="rgb(232,213,22)"/><text x="684.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (10 samples, 2.35%)</title><rect x="681" y="228" width="28" height="15" fill="rgb(212,56,32)"/><text x="684.00" y="238.50">&lt;..</text></g><g><title>array_astype (methods.c:845) (8 samples, 1.88%)</title><rect x="687" y="244" width="22" height="15" fill="rgb(230,139,0)"/><text x="690.00" y="254.50">a..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 1.41%)</title><rect x="693" y="260" width="16" height="15" fill="rgb(213,214,40)"/><text x="696.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.24%)</title><rect x="706" y="276" width="3" height="15" fill="rgb(238,107,46)"/><text x="709.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.24%)</title><rect x="706" y="292" width="3" height="15" fill="rgb(209,139,44)"/><text x="709.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="706" y="308" width="3" height="15" fill="rgb(246,49,37)"/><text x="709.00" y="318.50"></text></g><g><title>0x7fbce3d669f1 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="706" y="324" width="3" height="15" fill="rgb(244,207,35)"/><text x="709.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.24%)</title><rect x="712" y="228" width="3" height="15" fill="rgb(251,51,23)"/><text x="715.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.24%)</title><rect x="712" y="244" width="3" height="15" fill="rgb(253,16,11)"/><text x="715.00" y="254.50"></text></g><g><title>0x7fbce3dc4786 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="712" y="260" width="3" height="15" fill="rgb(247,199,4)"/><text x="715.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.24%)</title><rect x="718" y="244" width="2" height="15" fill="rgb(223,141,41)"/><text x="721.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.24%)</title><rect x="718" y="260" width="2" height="15" fill="rgb(205,144,52)"/><text x="721.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (5 samples, 1.18%)</title><rect x="709" y="212" width="14" height="15" fill="rgb(216,105,48)"/><text x="712.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.71%)</title><rect x="715" y="228" width="8" height="15" fill="rgb(237,50,26)"/><text x="718.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.24%)</title><rect x="720" y="244" width="3" height="15" fill="rgb(220,163,36)"/><text x="723.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:952) (1 samples, 0.24%)</title><rect x="720" y="260" width="3" height="15" fill="rgb(205,74,33)"/><text x="723.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.24%)</title><rect x="723" y="276" width="3" height="15" fill="rgb(249,186,42)"/><text x="726.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.24%)</title><rect x="726" y="292" width="3" height="15" fill="rgb(254,111,11)"/><text x="729.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.24%)</title><rect x="726" y="308" width="3" height="15" fill="rgb(249,98,21)"/><text x="729.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.24%)</title><rect x="726" y="324" width="3" height="15" fill="rgb(212,26,34)"/><text x="729.00" y="334.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.24%)</title><rect x="726" y="340" width="3" height="15" fill="rgb(232,142,6)"/><text x="729.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.24%)</title><rect x="729" y="292" width="2" height="15" fill="rgb(236,72,8)"/><text x="732.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.24%)</title><rect x="729" y="308" width="2" height="15" fill="rgb(210,155,34)"/><text x="732.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.71%)</title><rect x="726" y="276" width="8" height="15" fill="rgb(251,46,5)"/><text x="729.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.24%)</title><rect x="731" y="292" width="3" height="15" fill="rgb(252,35,7)"/><text x="734.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.24%)</title><rect x="731" y="308" width="3" height="15" fill="rgb(209,88,12)"/><text x="734.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.24%)</title><rect x="731" y="324" width="3" height="15" fill="rgb(208,158,25)"/><text x="734.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.24%)</title><rect x="731" y="340" width="3" height="15" fill="rgb(243,164,19)"/><text x="734.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (5 samples, 1.18%)</title><rect x="723" y="260" width="14" height="15" fill="rgb(238,192,1)"/><text x="726.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.24%)</title><rect x="734" y="276" width="3" height="15" fill="rgb(245,178,2)"/><text x="737.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.24%)</title><rect x="734" y="292" width="3" height="15" fill="rgb(224,154,25)"/><text x="737.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.24%)</title><rect x="737" y="260" width="3" height="15" fill="rgb(208,128,20)"/><text x="740.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.24%)</title><rect x="737" y="276" width="3" height="15" fill="rgb(213,153,8)"/><text x="740.00" y="286.50"></text></g><g><title>_extract_pyvals (extobj.c:203) (1 samples, 0.24%)</title><rect x="737" y="292" width="3" height="15" fill="rgb(242,89,46)"/><text x="740.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.24%)</title><rect x="740" y="260" width="2" height="15" fill="rgb(228,149,28)"/><text x="743.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.24%)</title><rect x="740" y="276" width="2" height="15" fill="rgb(221,119,49)"/><text x="743.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="740" y="292" width="2" height="15" fill="rgb(210,138,25)"/><text x="743.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.24%)</title><rect x="740" y="308" width="2" height="15" fill="rgb(237,104,37)"/><text x="743.00" y="318.50"></text></g><g><title>0x7fbce2fd07c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="740" y="324" width="2" height="15" fill="rgb(244,139,15)"/><text x="743.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1691) (1 samples, 0.24%)</title><rect x="742" y="276" width="3" height="15" fill="rgb(240,117,16)"/><text x="745.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.47%)</title><rect x="742" y="260" width="6" height="15" fill="rgb(242,216,54)"/><text x="745.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.24%)</title><rect x="745" y="276" width="3" height="15" fill="rgb(236,76,43)"/><text x="748.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="745" y="292" width="3" height="15" fill="rgb(230,39,9)"/><text x="748.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.24%)</title><rect x="745" y="308" width="3" height="15" fill="rgb(217,3,25)"/><text x="748.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:89) (1 samples, 0.24%)</title><rect x="745" y="324" width="3" height="15" fill="rgb(231,179,13)"/><text x="748.00" y="334.50"></text></g><g><title>array_add (number.c:330) (10 samples, 2.35%)</title><rect x="723" y="228" width="28" height="15" fill="rgb(246,47,0)"/><text x="726.00" y="238.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.35%)</title><rect x="723" y="244" width="28" height="15" fill="rgb(239,38,6)"/><text x="726.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.24%)</title><rect x="748" y="260" width="3" height="15" fill="rgb(219,84,4)"/><text x="751.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.24%)</title><rect x="748" y="276" width="3" height="15" fill="rgb(251,146,49)"/><text x="751.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.24%)</title><rect x="748" y="292" width="3" height="15" fill="rgb(252,149,36)"/><text x="751.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.24%)</title><rect x="748" y="308" width="3" height="15" fill="rgb(231,201,44)"/><text x="751.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (11 samples, 2.59%)</title><rect x="723" y="212" width="31" height="15" fill="rgb(213,130,27)"/><text x="726.00" y="222.50">_r..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="751" y="228" width="3" height="15" fill="rgb(244,188,15)"/><text x="754.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="751" y="244" width="3" height="15" fill="rgb(244,40,19)"/><text x="754.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.24%)</title><rect x="751" y="260" width="3" height="15" fill="rgb(229,148,44)"/><text x="754.00" y="270.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (2 samples, 0.47%)</title><rect x="754" y="228" width="5" height="15" fill="rgb(239,125,44)"/><text x="757.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (46 samples, 10.82%)</title><rect x="634" y="196" width="128" height="15" fill="rgb(221,29,24)"/><text x="637.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (3 samples, 0.71%)</title><rect x="754" y="212" width="8" height="15" fill="rgb(239,214,42)"/><text x="757.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.24%)</title><rect x="759" y="228" width="3" height="15" fill="rgb(241,17,8)"/><text x="762.00" y="238.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.24%)</title><rect x="767" y="356" width="3" height="15" fill="rgb(231,171,35)"/><text x="770.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="767" y="372" width="3" height="15" fill="rgb(211,115,15)"/><text x="770.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.24%)</title><rect x="767" y="388" width="3" height="15" fill="rgb(245,44,30)"/><text x="770.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.24%)</title><rect x="767" y="404" width="3" height="15" fill="rgb(207,174,37)"/><text x="770.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.24%)</title><rect x="767" y="420" width="3" height="15" fill="rgb(234,121,2)"/><text x="770.00" y="430.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.24%)</title><rect x="767" y="436" width="3" height="15" fill="rgb(228,160,5)"/><text x="770.00" y="446.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (2 samples, 0.47%)</title><rect x="767" y="260" width="6" height="15" fill="rgb(219,75,51)"/><text x="770.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.47%)</title><rect x="767" y="276" width="6" height="15" fill="rgb(212,31,3)"/><text x="770.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.47%)</title><rect x="767" y="292" width="6" height="15" fill="rgb(246,89,12)"/><text x="770.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 0.47%)</title><rect x="767" y="308" width="6" height="15" fill="rgb(245,31,36)"/><text x="770.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.47%)</title><rect x="767" y="324" width="6" height="15" fill="rgb(243,175,0)"/><text x="770.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.47%)</title><rect x="767" y="340" width="6" height="15" fill="rgb(236,41,9)"/><text x="770.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:42) (1 samples, 0.24%)</title><rect x="770" y="356" width="3" height="15" fill="rgb(232,122,46)"/><text x="773.00" y="366.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (2 samples, 0.47%)</title><rect x="776" y="308" width="5" height="15" fill="rgb(225,210,16)"/><text x="779.00" y="318.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (2 samples, 0.47%)</title><rect x="781" y="308" width="6" height="15" fill="rgb(231,133,0)"/><text x="784.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.24%)</title><rect x="784" y="324" width="3" height="15" fill="rgb(246,108,13)"/><text x="787.00" y="334.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (6 samples, 1.41%)</title><rect x="773" y="260" width="17" height="15" fill="rgb(245,5,14)"/><text x="776.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (5 samples, 1.18%)</title><rect x="776" y="276" width="14" height="15" fill="rgb(209,181,28)"/><text x="779.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.18%)</title><rect x="776" y="292" width="14" height="15" fill="rgb(241,49,31)"/><text x="779.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.24%)</title><rect x="787" y="308" width="3" height="15" fill="rgb(253,222,40)"/><text x="790.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.24%)</title><rect x="787" y="324" width="3" height="15" fill="rgb(216,16,53)"/><text x="790.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.24%)</title><rect x="787" y="340" width="3" height="15" fill="rgb(227,155,5)"/><text x="790.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:277) (1 samples, 0.24%)</title><rect x="787" y="356" width="3" height="15" fill="rgb(243,93,4)"/><text x="790.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (11 samples, 2.59%)</title><rect x="762" y="196" width="30" height="15" fill="rgb(232,145,19)"/><text x="765.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (11 samples, 2.59%)</title><rect x="762" y="212" width="30" height="15" fill="rgb(208,216,32)"/><text x="765.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (11 samples, 2.59%)</title><rect x="762" y="228" width="30" height="15" fill="rgb(237,177,46)"/><text x="765.00" y="238.50">_r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (11 samples, 2.59%)</title><rect x="762" y="244" width="30" height="15" fill="rgb(235,75,48)"/><text x="765.00" y="254.50">_r..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="790" y="260" width="2" height="15" fill="rgb(216,141,51)"/><text x="793.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="790" y="276" width="2" height="15" fill="rgb(245,0,8)"/><text x="793.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.24%)</title><rect x="790" y="292" width="2" height="15" fill="rgb(244,135,43)"/><text x="793.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:313) (2 samples, 0.47%)</title><rect x="792" y="196" width="6" height="15" fill="rgb(234,34,13)"/><text x="795.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.24%)</title><rect x="795" y="212" width="3" height="15" fill="rgb(209,56,34)"/><text x="798.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:344) (1 samples, 0.24%)</title><rect x="798" y="196" width="3" height="15" fill="rgb(229,98,46)"/><text x="801.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.47%)</title><rect x="812" y="244" width="5" height="15" fill="rgb(205,133,16)"/><text x="815.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.47%)</title><rect x="812" y="260" width="5" height="15" fill="rgb(207,30,5)"/><text x="815.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.47%)</title><rect x="812" y="276" width="5" height="15" fill="rgb(238,15,46)"/><text x="815.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.47%)</title><rect x="812" y="292" width="5" height="15" fill="rgb(251,55,13)"/><text x="815.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.24%)</title><rect x="815" y="308" width="2" height="15" fill="rgb(244,116,11)"/><text x="818.00" y="318.50"></text></g><g><title>0x7fbce3e8c130 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="815" y="324" width="2" height="15" fill="rgb(225,98,29)"/><text x="818.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.24%)</title><rect x="817" y="276" width="3" height="15" fill="rgb(234,130,29)"/><text x="820.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.24%)</title><rect x="817" y="292" width="3" height="15" fill="rgb(240,94,31)"/><text x="820.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.24%)</title><rect x="820" y="276" width="3" height="15" fill="rgb(252,187,52)"/><text x="823.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.24%)</title><rect x="820" y="292" width="3" height="15" fill="rgb(250,12,36)"/><text x="823.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.24%)</title><rect x="820" y="308" width="3" height="15" fill="rgb(206,76,50)"/><text x="823.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.24%)</title><rect x="820" y="324" width="3" height="15" fill="rgb(243,97,23)"/><text x="823.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:266) (1 samples, 0.24%)</title><rect x="820" y="340" width="3" height="15" fill="rgb(221,163,52)"/><text x="823.00" y="350.50"></text></g><g><title>euclid (mem_overlap.c:224) (1 samples, 0.24%)</title><rect x="820" y="356" width="3" height="15" fill="rgb(211,227,35)"/><text x="823.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (6 samples, 1.41%)</title><rect x="809" y="228" width="17" height="15" fill="rgb(234,75,1)"/><text x="812.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.71%)</title><rect x="817" y="244" width="9" height="15" fill="rgb(237,55,38)"/><text x="820.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.71%)</title><rect x="817" y="260" width="9" height="15" fill="rgb(239,189,15)"/><text x="820.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1662) (1 samples, 0.24%)</title><rect x="823" y="276" width="3" height="15" fill="rgb(225,222,17)"/><text x="826.00" y="286.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c:1402) (1 samples, 0.24%)</title><rect x="823" y="292" width="3" height="15" fill="rgb(251,107,9)"/><text x="826.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.47%)</title><rect x="826" y="260" width="5" height="15" fill="rgb(226,143,28)"/><text x="829.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (2 samples, 0.47%)</title><rect x="826" y="276" width="5" height="15" fill="rgb(247,129,12)"/><text x="829.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (2 samples, 0.47%)</title><rect x="826" y="292" width="5" height="15" fill="rgb(228,122,5)"/><text x="829.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.24%)</title><rect x="831" y="260" width="3" height="15" fill="rgb(219,202,40)"/><text x="834.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.24%)</title><rect x="831" y="276" width="3" height="15" fill="rgb(239,204,21)"/><text x="834.00" y="286.50"></text></g><g><title>0x7fbce3f2de4e (libm-2.29.so) (1 samples, 0.24%)</title><rect x="834" y="340" width="3" height="15" fill="rgb(221,75,2)"/><text x="837.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:20) (5 samples, 1.18%)</title><rect x="826" y="228" width="14" height="15" fill="rgb(240,91,3)"/><text x="829.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.18%)</title><rect x="826" y="244" width="14" height="15" fill="rgb(239,168,8)"/><text x="829.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.47%)</title><rect x="834" y="260" width="6" height="15" fill="rgb(207,176,46)"/><text x="837.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.47%)</title><rect x="834" y="276" width="6" height="15" fill="rgb(213,72,17)"/><text x="837.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.47%)</title><rect x="834" y="292" width="6" height="15" fill="rgb(254,40,32)"/><text x="837.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (2 samples, 0.47%)</title><rect x="834" y="308" width="6" height="15" fill="rgb(209,198,10)"/><text x="837.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (2 samples, 0.47%)</title><rect x="834" y="324" width="6" height="15" fill="rgb(222,203,19)"/><text x="837.00" y="334.50"></text></g><g><title>0x7fbce3f2de7e (libm-2.29.so) (1 samples, 0.24%)</title><rect x="837" y="340" width="3" height="15" fill="rgb(246,191,7)"/><text x="840.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.24%)</title><rect x="840" y="260" width="2" height="15" fill="rgb(240,198,6)"/><text x="843.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.24%)</title><rect x="840" y="276" width="2" height="15" fill="rgb(206,7,10)"/><text x="843.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1693) (1 samples, 0.24%)</title><rect x="840" y="292" width="2" height="15" fill="rgb(249,201,29)"/><text x="843.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (2 samples, 0.47%)</title><rect x="840" y="228" width="5" height="15" fill="rgb(234,222,6)"/><text x="843.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="840" y="244" width="5" height="15" fill="rgb(205,17,30)"/><text x="843.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.24%)</title><rect x="842" y="260" width="3" height="15" fill="rgb(227,229,5)"/><text x="845.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.24%)</title><rect x="842" y="276" width="3" height="15" fill="rgb(226,149,51)"/><text x="845.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="842" y="292" width="3" height="15" fill="rgb(228,134,44)"/><text x="845.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.24%)</title><rect x="842" y="308" width="3" height="15" fill="rgb(228,61,8)"/><text x="845.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.24%)</title><rect x="856" y="340" width="3" height="15" fill="rgb(226,124,23)"/><text x="859.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.24%)</title><rect x="856" y="356" width="3" height="15" fill="rgb(221,12,43)"/><text x="859.00" y="366.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.24%)</title><rect x="856" y="372" width="3" height="15" fill="rgb(222,216,4)"/><text x="859.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.71%)</title><rect x="856" y="308" width="9" height="15" fill="rgb(219,212,1)"/><text x="859.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.71%)</title><rect x="856" y="324" width="9" height="15" fill="rgb(222,36,5)"/><text x="859.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.47%)</title><rect x="859" y="340" width="6" height="15" fill="rgb(228,63,34)"/><text x="862.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.47%)</title><rect x="859" y="356" width="6" height="15" fill="rgb(236,33,38)"/><text x="862.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.47%)</title><rect x="859" y="372" width="6" height="15" fill="rgb(226,197,30)"/><text x="862.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.47%)</title><rect x="859" y="388" width="6" height="15" fill="rgb(238,126,27)"/><text x="862.00" y="398.50"></text></g><g><title>0x7fbce3dc4e54 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="862" y="404" width="3" height="15" fill="rgb(209,199,33)"/><text x="865.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5518) (1 samples, 0.24%)</title><rect x="865" y="308" width="2" height="15" fill="rgb(222,22,12)"/><text x="868.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.24%)</title><rect x="867" y="356" width="3" height="15" fill="rgb(212,225,22)"/><text x="870.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.24%)</title><rect x="867" y="372" width="3" height="15" fill="rgb(252,209,41)"/><text x="870.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.24%)</title><rect x="867" y="388" width="3" height="15" fill="rgb(230,216,52)"/><text x="870.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:777) (1 samples, 0.24%)</title><rect x="867" y="404" width="3" height="15" fill="rgb(254,226,15)"/><text x="870.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:228) (1 samples, 0.24%)</title><rect x="870" y="388" width="3" height="15" fill="rgb(248,123,28)"/><text x="873.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1485) (1 samples, 0.24%)</title><rect x="870" y="404" width="3" height="15" fill="rgb(238,229,53)"/><text x="873.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.47%)</title><rect x="870" y="356" width="6" height="15" fill="rgb(237,45,32)"/><text x="873.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.47%)</title><rect x="870" y="372" width="6" height="15" fill="rgb(242,87,46)"/><text x="873.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.24%)</title><rect x="873" y="388" width="3" height="15" fill="rgb(219,25,21)"/><text x="876.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.24%)</title><rect x="873" y="404" width="3" height="15" fill="rgb(219,79,18)"/><text x="876.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.24%)</title><rect x="873" y="420" width="3" height="15" fill="rgb(214,219,9)"/><text x="876.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.24%)</title><rect x="873" y="436" width="3" height="15" fill="rgb(253,220,4)"/><text x="876.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.24%)</title><rect x="876" y="356" width="3" height="15" fill="rgb(226,13,8)"/><text x="879.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.24%)</title><rect x="876" y="372" width="3" height="15" fill="rgb(239,82,18)"/><text x="879.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.24%)</title><rect x="876" y="388" width="3" height="15" fill="rgb(225,185,41)"/><text x="879.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (13 samples, 3.06%)</title><rect x="845" y="228" width="36" height="15" fill="rgb(226,206,45)"/><text x="848.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (11 samples, 2.59%)</title><rect x="851" y="244" width="30" height="15" fill="rgb(229,109,38)"/><text x="854.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 2.59%)</title><rect x="851" y="260" width="30" height="15" fill="rgb(217,21,28)"/><text x="854.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (11 samples, 2.59%)</title><rect x="851" y="276" width="30" height="15" fill="rgb(238,117,8)"/><text x="854.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (9 samples, 2.12%)</title><rect x="856" y="292" width="25" height="15" fill="rgb(228,17,2)"/><text x="859.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.18%)</title><rect x="867" y="308" width="14" height="15" fill="rgb(246,127,7)"/><text x="870.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.18%)</title><rect x="867" y="324" width="14" height="15" fill="rgb(236,154,11)"/><text x="870.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.18%)</title><rect x="867" y="340" width="14" height="15" fill="rgb(254,199,48)"/><text x="870.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.24%)</title><rect x="879" y="356" width="2" height="15" fill="rgb(254,174,14)"/><text x="882.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.24%)</title><rect x="879" y="372" width="2" height="15" fill="rgb(218,207,39)"/><text x="882.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.24%)</title><rect x="881" y="260" width="3" height="15" fill="rgb(223,200,4)"/><text x="884.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:131) (1 samples, 0.24%)</title><rect x="881" y="276" width="3" height="15" fill="rgb(220,153,40)"/><text x="884.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.24%)</title><rect x="887" y="388" width="3" height="15" fill="rgb(237,30,40)"/><text x="890.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.47%)</title><rect x="887" y="308" width="5" height="15" fill="rgb(246,76,40)"/><text x="890.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.47%)</title><rect x="887" y="324" width="5" height="15" fill="rgb(236,202,37)"/><text x="890.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.47%)</title><rect x="887" y="340" width="5" height="15" fill="rgb(235,92,22)"/><text x="890.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.47%)</title><rect x="887" y="356" width="5" height="15" fill="rgb(246,94,36)"/><text x="890.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.47%)</title><rect x="887" y="372" width="5" height="15" fill="rgb(212,153,39)"/><text x="890.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.24%)</title><rect x="890" y="388" width="2" height="15" fill="rgb(239,84,26)"/><text x="893.00" y="398.50"></text></g><g><title>0x7fbce3dc4e7a (libc-2.29.so) (1 samples, 0.24%)</title><rect x="890" y="404" width="2" height="15" fill="rgb(229,151,28)"/><text x="893.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4564) (1 samples, 0.24%)</title><rect x="892" y="324" width="3" height="15" fill="rgb(230,134,40)"/><text x="895.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.24%)</title><rect x="892" y="340" width="3" height="15" fill="rgb(244,159,25)"/><text x="895.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.24%)</title><rect x="892" y="356" width="3" height="15" fill="rgb(247,5,18)"/><text x="895.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.24%)</title><rect x="892" y="372" width="3" height="15" fill="rgb(252,58,37)"/><text x="895.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.24%)</title><rect x="898" y="388" width="3" height="15" fill="rgb(226,114,32)"/><text x="901.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.47%)</title><rect x="898" y="340" width="6" height="15" fill="rgb(213,53,42)"/><text x="901.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.47%)</title><rect x="898" y="356" width="6" height="15" fill="rgb(210,71,42)"/><text x="901.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.47%)</title><rect x="898" y="372" width="6" height="15" fill="rgb(254,83,7)"/><text x="901.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.24%)</title><rect x="901" y="388" width="3" height="15" fill="rgb(214,60,32)"/><text x="904.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.24%)</title><rect x="904" y="356" width="2" height="15" fill="rgb(248,15,12)"/><text x="907.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.24%)</title><rect x="904" y="372" width="2" height="15" fill="rgb(209,31,36)"/><text x="907.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.24%)</title><rect x="904" y="388" width="2" height="15" fill="rgb(215,15,18)"/><text x="907.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (39 samples, 9.18%)</title><rect x="801" y="196" width="108" height="15" fill="rgb(226,23,8)"/><text x="804.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (38 samples, 8.94%)</title><rect x="804" y="212" width="105" height="15" fill="rgb(208,163,44)"/><text x="807.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (10 samples, 2.35%)</title><rect x="881" y="228" width="28" height="15" fill="rgb(216,72,37)"/><text x="884.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 2.35%)</title><rect x="881" y="244" width="28" height="15" fill="rgb(231,200,38)"/><text x="884.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.12%)</title><rect x="884" y="260" width="25" height="15" fill="rgb(226,207,45)"/><text x="887.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 2.12%)</title><rect x="884" y="276" width="25" height="15" fill="rgb(249,141,2)"/><text x="887.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (8 samples, 1.88%)</title><rect x="887" y="292" width="22" height="15" fill="rgb(237,171,23)"/><text x="890.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.41%)</title><rect x="892" y="308" width="17" height="15" fill="rgb(231,31,37)"/><text x="895.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.18%)</title><rect x="895" y="324" width="14" height="15" fill="rgb(247,162,47)"/><text x="898.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.47%)</title><rect x="904" y="340" width="5" height="15" fill="rgb(208,184,5)"/><text x="907.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.24%)</title><rect x="906" y="356" width="3" height="15" fill="rgb(250,150,34)"/><text x="909.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.24%)</title><rect x="906" y="372" width="3" height="15" fill="rgb(253,5,45)"/><text x="909.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.24%)</title><rect x="909" y="196" width="3" height="15" fill="rgb(251,201,21)"/><text x="912.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.24%)</title><rect x="912" y="196" width="3" height="15" fill="rgb(212,178,31)"/><text x="915.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.24%)</title><rect x="912" y="212" width="3" height="15" fill="rgb(221,176,1)"/><text x="915.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.24%)</title><rect x="912" y="228" width="3" height="15" fill="rgb(209,12,41)"/><text x="915.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.24%)</title><rect x="915" y="244" width="2" height="15" fill="rgb(220,172,8)"/><text x="918.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.47%)</title><rect x="915" y="196" width="5" height="15" fill="rgb(238,196,41)"/><text x="918.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (2 samples, 0.47%)</title><rect x="915" y="212" width="5" height="15" fill="rgb(228,114,18)"/><text x="918.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.47%)</title><rect x="915" y="228" width="5" height="15" fill="rgb(235,98,44)"/><text x="918.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.24%)</title><rect x="917" y="244" width="3" height="15" fill="rgb(213,96,3)"/><text x="920.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.24%)</title><rect x="917" y="260" width="3" height="15" fill="rgb(239,103,35)"/><text x="920.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.24%)</title><rect x="917" y="276" width="3" height="15" fill="rgb(219,161,26)"/><text x="920.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.24%)</title><rect x="926" y="212" width="3" height="15" fill="rgb(220,38,23)"/><text x="929.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.24%)</title><rect x="934" y="228" width="3" height="15" fill="rgb(223,153,2)"/><text x="937.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (3 samples, 0.71%)</title><rect x="937" y="228" width="8" height="15" fill="rgb(217,100,45)"/><text x="940.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.24%)</title><rect x="948" y="244" width="3" height="15" fill="rgb(231,122,47)"/><text x="951.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.24%)</title><rect x="948" y="260" width="3" height="15" fill="rgb(223,104,7)"/><text x="951.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.24%)</title><rect x="948" y="276" width="3" height="15" fill="rgb(231,215,7)"/><text x="951.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.24%)</title><rect x="948" y="292" width="3" height="15" fill="rgb(219,173,28)"/><text x="951.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.24%)</title><rect x="951" y="260" width="3" height="15" fill="rgb(209,228,45)"/><text x="954.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.24%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(240,181,33)"/><text x="954.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:926) (1 samples, 0.24%)</title><rect x="951" y="292" width="3" height="15" fill="rgb(238,15,18)"/><text x="954.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.24%)</title><rect x="954" y="276" width="2" height="15" fill="rgb(251,153,2)"/><text x="957.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.47%)</title><rect x="954" y="260" width="5" height="15" fill="rgb(208,129,47)"/><text x="957.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.24%)</title><rect x="956" y="276" width="3" height="15" fill="rgb(243,25,19)"/><text x="959.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.24%)</title><rect x="956" y="292" width="3" height="15" fill="rgb(250,29,13)"/><text x="959.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.24%)</title><rect x="959" y="276" width="3" height="15" fill="rgb(247,178,41)"/><text x="962.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.24%)</title><rect x="959" y="292" width="3" height="15" fill="rgb(245,110,19)"/><text x="962.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.24%)</title><rect x="962" y="276" width="3" height="15" fill="rgb(227,19,16)"/><text x="965.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.24%)</title><rect x="962" y="292" width="3" height="15" fill="rgb(245,223,30)"/><text x="965.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.24%)</title><rect x="962" y="308" width="3" height="15" fill="rgb(251,207,38)"/><text x="965.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.24%)</title><rect x="962" y="324" width="3" height="15" fill="rgb(241,218,35)"/><text x="965.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.24%)</title><rect x="962" y="340" width="3" height="15" fill="rgb(240,183,51)"/><text x="965.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h:97) (1 samples, 0.24%)</title><rect x="962" y="356" width="3" height="15" fill="rgb(217,135,12)"/><text x="965.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.24%)</title><rect x="962" y="372" width="3" height="15" fill="rgb(225,158,34)"/><text x="965.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.24%)</title><rect x="965" y="292" width="2" height="15" fill="rgb(221,111,2)"/><text x="968.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.24%)</title><rect x="965" y="308" width="2" height="15" fill="rgb(217,141,18)"/><text x="968.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="965" y="324" width="2" height="15" fill="rgb(233,126,28)"/><text x="968.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (9 samples, 2.12%)</title><rect x="945" y="228" width="25" height="15" fill="rgb(228,142,44)"/><text x="948.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.65%)</title><rect x="951" y="244" width="19" height="15" fill="rgb(213,54,13)"/><text x="954.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.94%)</title><rect x="959" y="260" width="11" height="15" fill="rgb(228,171,52)"/><text x="962.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.47%)</title><rect x="965" y="276" width="5" height="15" fill="rgb(212,134,36)"/><text x="968.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.24%)</title><rect x="967" y="292" width="3" height="15" fill="rgb(252,181,6)"/><text x="970.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.24%)</title><rect x="967" y="308" width="3" height="15" fill="rgb(231,152,50)"/><text x="970.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="967" y="324" width="3" height="15" fill="rgb(250,44,2)"/><text x="970.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.24%)</title><rect x="970" y="260" width="3" height="15" fill="rgb(213,76,43)"/><text x="973.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.24%)</title><rect x="970" y="276" width="3" height="15" fill="rgb(241,70,43)"/><text x="973.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.24%)</title><rect x="973" y="276" width="3" height="15" fill="rgb(241,26,32)"/><text x="976.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.24%)</title><rect x="973" y="292" width="3" height="15" fill="rgb(248,43,42)"/><text x="976.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.24%)</title><rect x="973" y="308" width="3" height="15" fill="rgb(252,104,16)"/><text x="976.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.24%)</title><rect x="973" y="324" width="3" height="15" fill="rgb(226,170,20)"/><text x="976.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:604) (1 samples, 0.24%)</title><rect x="973" y="340" width="3" height="15" fill="rgb(254,161,26)"/><text x="976.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.24%)</title><rect x="973" y="356" width="3" height="15" fill="rgb(240,109,4)"/><text x="976.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.24%)</title><rect x="976" y="292" width="2" height="15" fill="rgb(213,50,28)"/><text x="979.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.24%)</title><rect x="976" y="308" width="2" height="15" fill="rgb(229,161,50)"/><text x="979.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.24%)</title><rect x="976" y="324" width="2" height="15" fill="rgb(208,143,45)"/><text x="979.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.24%)</title><rect x="976" y="340" width="2" height="15" fill="rgb(242,176,41)"/><text x="979.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.24%)</title><rect x="976" y="356" width="2" height="15" fill="rgb(232,79,5)"/><text x="979.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.24%)</title><rect x="976" y="372" width="2" height="15" fill="rgb(231,168,41)"/><text x="979.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.24%)</title><rect x="976" y="388" width="2" height="15" fill="rgb(239,195,22)"/><text x="979.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (4 samples, 0.94%)</title><rect x="970" y="228" width="11" height="15" fill="rgb(231,126,11)"/><text x="973.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.94%)</title><rect x="970" y="244" width="11" height="15" fill="rgb(236,94,17)"/><text x="973.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.71%)</title><rect x="973" y="260" width="8" height="15" fill="rgb(224,63,22)"/><text x="976.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.47%)</title><rect x="976" y="276" width="5" height="15" fill="rgb(254,88,46)"/><text x="979.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.24%)</title><rect x="978" y="292" width="3" height="15" fill="rgb(211,81,46)"/><text x="981.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.24%)</title><rect x="978" y="308" width="3" height="15" fill="rgb(223,16,49)"/><text x="981.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.47%)</title><rect x="981" y="244" width="6" height="15" fill="rgb(251,114,3)"/><text x="984.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (1 samples, 0.24%)</title><rect x="987" y="244" width="3" height="15" fill="rgb(212,173,26)"/><text x="990.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.24%)</title><rect x="995" y="260" width="3" height="15" fill="rgb(226,86,12)"/><text x="998.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2216) (1 samples, 0.24%)</title><rect x="1001" y="292" width="2" height="15" fill="rgb(228,43,4)"/><text x="1004.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.24%)</title><rect x="1003" y="292" width="3" height="15" fill="rgb(230,106,24)"/><text x="1006.00" y="302.50"></text></g><g><title>0x7fbce2fd1dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="1003" y="308" width="3" height="15" fill="rgb(234,87,21)"/><text x="1006.00" y="318.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.24%)</title><rect x="1006" y="308" width="3" height="15" fill="rgb(224,7,44)"/><text x="1009.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.24%)</title><rect x="1006" y="324" width="3" height="15" fill="rgb(248,210,51)"/><text x="1009.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.24%)</title><rect x="1006" y="340" width="3" height="15" fill="rgb(250,62,51)"/><text x="1009.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:511) (1 samples, 0.24%)</title><rect x="1006" y="356" width="3" height="15" fill="rgb(231,217,4)"/><text x="1009.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:355) (1 samples, 0.24%)</title><rect x="1009" y="324" width="3" height="15" fill="rgb(211,107,29)"/><text x="1012.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:867) (1 samples, 0.24%)</title><rect x="1012" y="340" width="3" height="15" fill="rgb(210,55,27)"/><text x="1015.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.47%)</title><rect x="1012" y="324" width="5" height="15" fill="rgb(222,45,8)"/><text x="1015.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:875) (1 samples, 0.24%)</title><rect x="1015" y="340" width="2" height="15" fill="rgb(207,167,7)"/><text x="1018.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.24%)</title><rect x="1015" y="356" width="2" height="15" fill="rgb(207,112,40)"/><text x="1018.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.24%)</title><rect x="1015" y="372" width="2" height="15" fill="rgb(246,150,50)"/><text x="1018.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1015" y="388" width="2" height="15" fill="rgb(229,114,41)"/><text x="1018.00" y="398.50"></text></g><g><title>0x7fbce3d66760 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1015" y="404" width="2" height="15" fill="rgb(227,132,49)"/><text x="1018.00" y="414.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (156 samples, 36.71%)</title><rect x="587" y="180" width="433" height="15" fill="rgb(236,37,8)"/><text x="590.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (36 samples, 8.47%)</title><rect x="920" y="196" width="100" height="15" fill="rgb(228,223,34)"/><text x="923.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (33 samples, 7.76%)</title><rect x="929" y="212" width="91" height="15" fill="rgb(236,151,45)"/><text x="932.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (14 samples, 3.29%)</title><rect x="981" y="228" width="39" height="15" fill="rgb(227,172,37)"/><text x="984.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (11 samples, 2.59%)</title><rect x="990" y="244" width="30" height="15" fill="rgb(228,226,52)"/><text x="993.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (8 samples, 1.88%)</title><rect x="998" y="260" width="22" height="15" fill="rgb(252,172,33)"/><text x="1001.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.65%)</title><rect x="1001" y="276" width="19" height="15" fill="rgb(218,171,26)"/><text x="1004.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.18%)</title><rect x="1006" y="292" width="14" height="15" fill="rgb(244,30,39)"/><text x="1009.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.94%)</title><rect x="1009" y="308" width="11" height="15" fill="rgb(219,8,12)"/><text x="1012.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:688) (1 samples, 0.24%)</title><rect x="1017" y="324" width="3" height="15" fill="rgb(245,189,2)"/><text x="1020.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.24%)</title><rect x="1017" y="340" width="3" height="15" fill="rgb(228,88,45)"/><text x="1020.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (5 samples, 1.18%)</title><rect x="1020" y="180" width="14" height="15" fill="rgb(219,20,50)"/><text x="1023.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (7 samples, 1.65%)</title><rect x="1034" y="180" width="19" height="15" fill="rgb(210,191,33)"/><text x="1037.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (3 samples, 0.71%)</title><rect x="1053" y="180" width="9" height="15" fill="rgb(209,205,41)"/><text x="1056.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (9 samples, 2.12%)</title><rect x="1062" y="180" width="25" height="15" fill="rgb(245,154,52)"/><text x="1065.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (213 samples, 50.12%)</title><rect x="498" y="164" width="592" height="15" fill="rgb(248,41,0)"/><text x="501.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.24%)</title><rect x="1087" y="180" width="3" height="15" fill="rgb(238,182,5)"/><text x="1090.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.47%)</title><rect x="1090" y="164" width="5" height="15" fill="rgb(254,24,22)"/><text x="1093.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.24%)</title><rect x="1092" y="180" width="3" height="15" fill="rgb(218,55,32)"/><text x="1095.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:45) (225 samples, 52.94%)</title><rect x="473" y="52" width="625" height="15" fill="rgb(227,73,53)"/><text x="476.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:44) (225 samples, 52.94%)</title><rect x="473" y="68" width="625" height="15" fill="rgb(227,14,12)"/><text x="476.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:44)</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:29) (224 samples, 52.71%)</title><rect x="476" y="84" width="622" height="15" fill="rgb(206,220,24)"/><text x="479.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:23) (221 samples, 52.00%)</title><rect x="484" y="100" width="614" height="15" fill="rgb(218,174,20)"/><text x="487.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (220 samples, 51.76%)</title><rect x="487" y="116" width="611" height="15" fill="rgb(207,54,53)"/><text x="490.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (217 samples, 51.06%)</title><rect x="495" y="132" width="603" height="15" fill="rgb(225,222,50)"/><text x="498.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (217 samples, 51.06%)</title><rect x="495" y="148" width="603" height="15" fill="rgb(207,161,35)"/><text x="498.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.24%)</title><rect x="1095" y="164" width="3" height="15" fill="rgb(240,106,31)"/><text x="1098.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.24%)</title><rect x="1095" y="180" width="3" height="15" fill="rgb(207,15,53)"/><text x="1098.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.24%)</title><rect x="1095" y="196" width="3" height="15" fill="rgb(221,75,3)"/><text x="1098.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.24%)</title><rect x="1098" y="196" width="3" height="15" fill="rgb(210,123,40)"/><text x="1101.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.24%)</title><rect x="1098" y="212" width="3" height="15" fill="rgb(238,14,35)"/><text x="1101.00" y="222.50"></text></g><g><title>0x7fbca3df246c (?) (1 samples, 0.24%)</title><rect x="1098" y="228" width="3" height="15" fill="rgb(247,221,36)"/><text x="1101.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1098" y="244" width="3" height="15" fill="rgb(252,92,11)"/><text x="1101.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1098" y="260" width="3" height="15" fill="rgb(237,83,38)"/><text x="1101.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.47%)</title><rect x="1098" y="164" width="5" height="15" fill="rgb(224,189,5)"/><text x="1101.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.47%)</title><rect x="1098" y="180" width="5" height="15" fill="rgb(243,149,50)"/><text x="1101.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.24%)</title><rect x="1101" y="196" width="2" height="15" fill="rgb(243,175,30)"/><text x="1104.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="212" width="2" height="15" fill="rgb(252,86,49)"/><text x="1104.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="228" width="2" height="15" fill="rgb(251,206,41)"/><text x="1104.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="244" width="2" height="15" fill="rgb(252,34,14)"/><text x="1104.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="260" width="2" height="15" fill="rgb(238,48,18)"/><text x="1104.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="276" width="2" height="15" fill="rgb(234,218,9)"/><text x="1104.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="292" width="2" height="15" fill="rgb(230,62,38)"/><text x="1104.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="308" width="2" height="15" fill="rgb(246,110,8)"/><text x="1104.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="324" width="2" height="15" fill="rgb(221,47,8)"/><text x="1104.00" y="334.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="340" width="2" height="15" fill="rgb(230,59,5)"/><text x="1104.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="356" width="2" height="15" fill="rgb(212,196,30)"/><text x="1104.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1101" y="372" width="2" height="15" fill="rgb(215,4,15)"/><text x="1104.00" y="382.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:18) (3 samples, 0.71%)</title><rect x="1098" y="100" width="8" height="15" fill="rgb(243,222,3)"/><text x="1101.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.71%)</title><rect x="1098" y="116" width="8" height="15" fill="rgb(228,120,46)"/><text x="1101.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.71%)</title><rect x="1098" y="132" width="8" height="15" fill="rgb(240,112,50)"/><text x="1101.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.71%)</title><rect x="1098" y="148" width="8" height="15" fill="rgb(220,222,0)"/><text x="1101.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.24%)</title><rect x="1103" y="164" width="3" height="15" fill="rgb(226,220,20)"/><text x="1106.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.24%)</title><rect x="1103" y="180" width="3" height="15" fill="rgb(252,216,43)"/><text x="1106.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.71%)</title><rect x="1117" y="196" width="9" height="15" fill="rgb(212,47,49)"/><text x="1120.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.71%)</title><rect x="1117" y="212" width="9" height="15" fill="rgb(215,132,12)"/><text x="1120.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.71%)</title><rect x="1117" y="228" width="9" height="15" fill="rgb(239,139,45)"/><text x="1120.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1120" y="244" width="6" height="15" fill="rgb(224,110,47)"/><text x="1123.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1120" y="260" width="6" height="15" fill="rgb(232,96,10)"/><text x="1123.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1120" y="276" width="6" height="15" fill="rgb(230,156,45)"/><text x="1123.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1123" y="292" width="3" height="15" fill="rgb(221,91,7)"/><text x="1126.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1131" y="292" width="3" height="15" fill="rgb(239,31,54)"/><text x="1134.00" y="302.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1134" y="340" width="3" height="15" fill="rgb(247,206,40)"/><text x="1137.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1134" y="356" width="3" height="15" fill="rgb(247,187,35)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2247] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1134" y="372" width="3" height="15" fill="rgb(226,11,17)"/><text x="1137.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1134" y="388" width="3" height="15" fill="rgb(249,86,33)"/><text x="1137.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1134" y="404" width="3" height="15" fill="rgb(206,121,14)"/><text x="1137.00" y="414.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="340" width="3" height="15" fill="rgb(246,151,17)"/><text x="1140.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="356" width="3" height="15" fill="rgb(214,190,32)"/><text x="1140.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="372" width="3" height="15" fill="rgb(211,158,27)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="388" width="3" height="15" fill="rgb(234,45,6)"/><text x="1140.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="404" width="3" height="15" fill="rgb(212,55,21)"/><text x="1140.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="420" width="3" height="15" fill="rgb(222,99,29)"/><text x="1140.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="436" width="3" height="15" fill="rgb(228,172,27)"/><text x="1140.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="452" width="3" height="15" fill="rgb(246,57,33)"/><text x="1140.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1137" y="468" width="3" height="15" fill="rgb(208,142,17)"/><text x="1140.00" y="478.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1140" y="340" width="2" height="15" fill="rgb(251,153,13)"/><text x="1143.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1140" y="356" width="2" height="15" fill="rgb(253,30,53)"/><text x="1143.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1140" y="372" width="2" height="15" fill="rgb(245,225,33)"/><text x="1143.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1140" y="388" width="2" height="15" fill="rgb(252,31,0)"/><text x="1143.00" y="398.50"></text></g><g><title>0x7fbce3dbd6a2 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1140" y="404" width="2" height="15" fill="rgb(234,113,46)"/><text x="1143.00" y="414.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="340" width="3" height="15" fill="rgb(235,34,34)"/><text x="1145.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="356" width="3" height="15" fill="rgb(231,199,11)"/><text x="1145.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="372" width="3" height="15" fill="rgb(228,165,46)"/><text x="1145.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="388" width="3" height="15" fill="rgb(207,77,6)"/><text x="1145.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="404" width="3" height="15" fill="rgb(245,28,9)"/><text x="1145.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="420" width="3" height="15" fill="rgb(237,64,36)"/><text x="1145.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="436" width="3" height="15" fill="rgb(236,49,7)"/><text x="1145.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="452" width="3" height="15" fill="rgb(239,72,47)"/><text x="1145.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="468" width="3" height="15" fill="rgb(218,75,22)"/><text x="1145.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="484" width="3" height="15" fill="rgb(227,61,3)"/><text x="1145.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1142" y="500" width="3" height="15" fill="rgb(227,49,20)"/><text x="1145.00" y="510.50"></text></g><g><title>0x7fbce3dbd6df (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1142" y="516" width="3" height="15" fill="rgb(223,48,6)"/><text x="1145.00" y="526.50"></text></g><g><title>0x7fbce3dae92c (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1145" y="388" width="3" height="15" fill="rgb(244,9,18)"/><text x="1148.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1145" y="340" width="6" height="15" fill="rgb(237,153,21)"/><text x="1148.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1145" y="356" width="6" height="15" fill="rgb(223,193,24)"/><text x="1148.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1145" y="372" width="6" height="15" fill="rgb(207,113,26)"/><text x="1148.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1148" y="388" width="3" height="15" fill="rgb(218,15,34)"/><text x="1151.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1148" y="404" width="3" height="15" fill="rgb(240,217,26)"/><text x="1151.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1151" y="340" width="2" height="15" fill="rgb(254,31,28)"/><text x="1154.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1151" y="356" width="2" height="15" fill="rgb(243,214,24)"/><text x="1154.00" y="366.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1153" y="340" width="3" height="15" fill="rgb(212,203,28)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1156" y="340" width="3" height="15" fill="rgb(226,147,11)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1156" y="356" width="3" height="15" fill="rgb(247,219,39)"/><text x="1159.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="340" width="3" height="15" fill="rgb(220,147,12)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="356" width="3" height="15" fill="rgb(213,84,13)"/><text x="1162.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="372" width="3" height="15" fill="rgb(228,159,33)"/><text x="1162.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="388" width="3" height="15" fill="rgb(241,52,52)"/><text x="1162.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="404" width="3" height="15" fill="rgb(240,181,11)"/><text x="1162.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="420" width="3" height="15" fill="rgb(232,226,37)"/><text x="1162.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1159" y="436" width="3" height="15" fill="rgb(238,74,31)"/><text x="1162.00" y="446.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.82%)</title><rect x="1131" y="260" width="34" height="15" fill="rgb(230,179,46)"/><text x="1134.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.82%)</title><rect x="1131" y="276" width="34" height="15" fill="rgb(243,14,17)"/><text x="1134.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.59%)</title><rect x="1134" y="292" width="31" height="15" fill="rgb(215,109,20)"/><text x="1137.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.59%)</title><rect x="1134" y="308" width="31" height="15" fill="rgb(219,161,48)"/><text x="1137.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.59%)</title><rect x="1134" y="324" width="31" height="15" fill="rgb(236,177,17)"/><text x="1137.00" y="334.50">on..</text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1162" y="340" width="3" height="15" fill="rgb(216,98,50)"/><text x="1165.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1162" y="356" width="3" height="15" fill="rgb(237,88,42)"/><text x="1165.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1162" y="372" width="3" height="15" fill="rgb(247,226,50)"/><text x="1165.00" y="382.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1165" y="260" width="2" height="15" fill="rgb(249,196,6)"/><text x="1168.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.24%)</title><rect x="1165" y="276" width="2" height="15" fill="rgb(252,130,20)"/><text x="1168.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1167" y="260" width="3" height="15" fill="rgb(236,72,23)"/><text x="1170.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.76%)</title><rect x="1128" y="244" width="45" height="15" fill="rgb(215,68,54)"/><text x="1131.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(211,197,51)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1170" y="276" width="3" height="15" fill="rgb(214,170,13)"/><text x="1173.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1170" y="292" width="3" height="15" fill="rgb(237,189,51)"/><text x="1173.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1170" y="308" width="3" height="15" fill="rgb(208,190,54)"/><text x="1173.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1173" y="244" width="3" height="15" fill="rgb(224,164,51)"/><text x="1176.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(250,173,19)"/><text x="1176.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (23 samples, 5.41%)</title><rect x="1115" y="164" width="63" height="15" fill="rgb(227,66,43)"/><text x="1118.00" y="174.50">_run_w..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (23 samples, 5.41%)</title><rect x="1115" y="180" width="63" height="15" fill="rgb(206,82,30)"/><text x="1118.00" y="190.50">run (m..</text></g><g><title>run (onnxruntime/capi/session.py:136) (19 samples, 4.47%)</title><rect x="1126" y="196" width="52" height="15" fill="rgb(234,200,44)"/><text x="1129.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 4.47%)</title><rect x="1126" y="212" width="52" height="15" fill="rgb(241,2,39)"/><text x="1129.00" y="222.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.24%)</title><rect x="1128" y="228" width="50" height="15" fill="rgb(252,33,7)"/><text x="1131.00" y="238.50">void ..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(217,164,34)"/><text x="1179.00" y="254.50"></text></g><g><title>all (425 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(215,151,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:52) (33 samples, 7.76%)</title><rect x="1098" y="52" width="92" height="15" fill="rgb(244,74,37)"/><text x="1101.00" y="62.50">&lt;module&gt; (..</text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:51) (33 samples, 7.76%)</title><rect x="1098" y="68" width="92" height="15" fill="rgb(217,174,30)"/><text x="1101.00" y="78.50">profile_or..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:29) (33 samples, 7.76%)</title><rect x="1098" y="84" width="92" height="15" fill="rgb(253,42,43)"/><text x="1101.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py:23) (30 samples, 7.06%)</title><rect x="1106" y="100" width="84" height="15" fill="rgb(253,204,9)"/><text x="1109.00" y="110.50">profile (..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (30 samples, 7.06%)</title><rect x="1106" y="116" width="84" height="15" fill="rgb(237,41,7)"/><text x="1109.00" y="126.50">time_pred..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (29 samples, 6.82%)</title><rect x="1109" y="132" width="81" height="15" fill="rgb(225,43,13)"/><text x="1112.00" y="142.50">&lt;lambda&gt; ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (28 samples, 6.59%)</title><rect x="1112" y="148" width="78" height="15" fill="rgb(210,23,50)"/><text x="1115.00" y="158.50">run (mlpr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.94%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(239,75,14)"/><text x="1181.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.47%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(249,153,10)"/><text x="1187.00" y="190.50"></text></g></g></svg>