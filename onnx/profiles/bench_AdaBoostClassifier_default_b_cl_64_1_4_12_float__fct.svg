<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(231,165,17)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(224,102,46)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(221,138,22)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(205,17,6)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(213,229,51)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(253,128,10)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(251,30,22)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(212,89,38)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(222,155,39)"/><text x="15.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(245,81,6)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(218,223,19)"/><text x="17.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.18%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(223,49,15)"/><text x="17.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.18%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(239,50,9)"/><text x="17.00" y="990.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.18%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(224,228,17)"/><text x="17.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(214,131,24)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(216,177,52)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(232,188,38)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(218,162,24)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(220,111,29)"/><text x="19.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(232,169,46)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(242,141,11)"/><text x="19.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(251,127,12)"/><text x="19.00" y="990.50"></text></g><g><title>sub (re.py) (1 samples, 0.18%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(235,193,23)"/><text x="19.00" y="1006.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(251,176,0)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.90%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(215,153,37)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(246,3,40)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(242,17,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(240,105,26)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(253,89,6)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(213,108,36)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.90%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(218,71,41)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(235,141,42)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(244,204,19)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(230,82,41)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(235,106,51)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(205,43,32)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.90%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(215,226,20)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(233,225,20)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(239,5,2)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(209,183,16)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(206,153,44)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(216,202,47)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.90%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(207,49,47)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(245,120,32)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(253,218,17)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(221,93,42)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(241,51,46)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(239,66,34)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(235,210,52)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(230,80,37)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(251,47,24)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.90%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(225,2,4)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(239,129,8)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(246,144,9)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(237,129,33)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(216,208,3)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(247,57,52)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.90%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(226,222,29)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.90%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(219,45,12)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.90%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(223,107,50)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(216,50,8)"/><text x="21.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(244,225,15)"/><text x="21.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(217,72,11)"/><text x="21.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(250,135,22)"/><text x="21.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(217,112,46)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(242,186,3)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(238,133,16)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(221,67,35)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.08%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(208,92,47)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(236,213,46)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="292" width="2" height="15" fill="rgb(243,217,45)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="308" width="2" height="15" fill="rgb(230,38,27)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="324" width="2" height="15" fill="rgb(251,44,27)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="340" width="2" height="15" fill="rgb(230,75,15)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="356" width="2" height="15" fill="rgb(235,15,7)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="372" width="2" height="15" fill="rgb(248,69,50)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.18%)</title><rect x="20" y="388" width="2" height="15" fill="rgb(251,213,26)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="404" width="2" height="15" fill="rgb(251,88,4)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="420" width="2" height="15" fill="rgb(254,205,35)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="436" width="2" height="15" fill="rgb(247,121,6)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="452" width="2" height="15" fill="rgb(233,39,43)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="468" width="2" height="15" fill="rgb(214,94,38)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(219,26,48)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(237,81,38)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(208,137,2)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(215,76,6)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(211,15,3)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(224,79,1)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.18%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(223,108,18)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(236,12,15)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(215,96,1)"/><text x="23.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(211,57,5)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(213,181,31)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(224,14,16)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(231,192,26)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(244,166,10)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(240,55,23)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(224,148,20)"/><text x="23.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(216,217,38)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(217,169,38)"/><text x="23.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(223,226,24)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(233,178,39)"/><text x="23.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(249,171,6)"/><text x="23.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(234,149,52)"/><text x="23.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(253,188,41)"/><text x="23.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.18%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(243,208,28)"/><text x="23.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(249,170,45)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(251,109,42)"/><text x="23.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(215,144,22)"/><text x="23.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(210,31,6)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(206,47,6)"/><text x="23.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/errors.py) (1 samples, 0.18%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(240,106,3)"/><text x="23.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="484" width="2" height="15" fill="rgb(208,207,36)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="500" width="2" height="15" fill="rgb(235,19,34)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="516" width="2" height="15" fill="rgb(244,215,50)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="532" width="2" height="15" fill="rgb(212,87,3)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="548" width="2" height="15" fill="rgb(250,165,29)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="564" width="2" height="15" fill="rgb(247,37,46)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="580" width="2" height="15" fill="rgb(251,183,20)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="596" width="2" height="15" fill="rgb(221,161,44)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(253,220,24)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(242,174,52)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="644" width="2" height="15" fill="rgb(213,60,44)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="660" width="2" height="15" fill="rgb(209,170,0)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.18%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(209,15,7)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(218,98,5)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(206,187,9)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(208,69,0)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(232,142,7)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(212,155,49)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(221,7,26)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(239,14,11)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(212,140,49)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(245,49,48)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(224,219,48)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(230,227,43)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.18%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(214,190,23)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(240,187,36)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(214,206,26)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(209,64,43)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(205,116,54)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(224,180,44)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(240,119,9)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(244,90,47)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(219,195,13)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(215,200,11)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(245,113,47)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(210,2,28)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(232,106,16)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(250,149,47)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(228,39,13)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.18%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(247,171,9)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(251,69,26)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(254,149,0)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(222,112,50)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(225,127,50)"/><text x="25.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(207,113,27)"/><text x="25.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(250,100,7)"/><text x="25.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(209,122,20)"/><text x="25.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(209,92,34)"/><text x="25.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(235,207,2)"/><text x="25.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(234,6,24)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(217,98,3)"/><text x="25.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(221,114,9)"/><text x="25.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(221,195,29)"/><text x="25.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(242,203,47)"/><text x="25.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(250,169,48)"/><text x="25.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.18%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(252,50,3)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(246,43,15)"/><text x="25.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(224,107,10)"/><text x="25.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(234,123,54)"/><text x="25.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(216,181,22)"/><text x="25.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(219,64,14)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="22" y="1460" width="2" height="15" fill="rgb(245,51,41)"/><text x="25.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="22" y="1476" width="2" height="15" fill="rgb(238,81,0)"/><text x="25.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.18%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(206,43,5)"/><text x="25.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.18%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(234,214,10)"/><text x="25.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.18%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(245,78,49)"/><text x="25.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="22" y="1540" width="2" height="15" fill="rgb(226,140,20)"/><text x="25.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="22" y="1556" width="2" height="15" fill="rgb(241,143,36)"/><text x="25.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.18%)</title><rect x="22" y="1572" width="2" height="15" fill="rgb(230,81,2)"/><text x="25.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(251,73,21)"/><text x="25.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(208,131,0)"/><text x="25.00" y="1614.50"></text></g><g><title>0x7f0788bb36b3 (?) (1 samples, 0.18%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(243,218,15)"/><text x="25.00" y="1630.50"></text></g><g><title>0x7f0788c598e7 (?) (1 samples, 0.18%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(252,37,31)"/><text x="25.00" y="1646.50"></text></g><g><title>0x7f0788c5876d (?) (1 samples, 0.18%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(230,123,29)"/><text x="25.00" y="1662.50"></text></g><g><title>0x7f0788bfa0f6 (?) (1 samples, 0.18%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(216,15,3)"/><text x="25.00" y="1678.50"></text></g><g><title>0x7f0788bfa020 (?) (1 samples, 0.18%)</title><rect x="22" y="1684" width="2" height="15" fill="rgb(213,80,54)"/><text x="25.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.36%)</title><rect x="22" y="436" width="4" height="15" fill="rgb(254,124,21)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="452" width="4" height="15" fill="rgb(210,93,10)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="22" y="468" width="4" height="15" fill="rgb(211,105,13)"/><text x="25.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="484" width="2" height="15" fill="rgb(250,217,38)"/><text x="27.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="500" width="2" height="15" fill="rgb(227,193,0)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="516" width="2" height="15" fill="rgb(234,94,6)"/><text x="27.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="24" y="532" width="2" height="15" fill="rgb(208,34,10)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="548" width="2" height="15" fill="rgb(232,85,24)"/><text x="27.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="564" width="2" height="15" fill="rgb(248,105,42)"/><text x="27.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(252,100,42)"/><text x="27.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(219,82,48)"/><text x="27.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(244,99,2)"/><text x="27.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.18%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(238,179,14)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(217,189,19)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(217,203,20)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(230,228,24)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(251,37,2)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(222,1,46)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.18%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(243,70,30)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(228,150,46)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(229,58,41)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(240,6,0)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(223,226,17)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(239,12,28)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.18%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(205,118,46)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(235,78,9)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(219,24,49)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(221,32,34)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(239,132,52)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(236,195,1)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.18%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(235,138,23)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(234,181,2)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(249,77,47)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(238,103,34)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(227,195,37)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(234,79,20)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.18%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(216,0,39)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(238,97,53)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(238,22,7)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(225,218,8)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(239,67,19)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(230,177,9)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.18%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(244,97,4)"/><text x="27.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.18%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(236,75,46)"/><text x="27.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(218,192,26)"/><text x="27.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(252,41,1)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(222,206,46)"/><text x="27.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(231,225,5)"/><text x="27.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(226,22,20)"/><text x="27.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(252,91,33)"/><text x="27.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(222,135,35)"/><text x="27.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.18%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(243,76,27)"/><text x="27.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(225,213,4)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(210,25,52)"/><text x="27.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(213,26,0)"/><text x="27.00" y="1310.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(226,199,29)"/><text x="27.00" y="1326.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(243,30,46)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(220,194,49)"/><text x="27.00" y="1358.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(208,83,14)"/><text x="27.00" y="1374.50"></text></g><g><title>0x7f079aaed995 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(243,35,37)"/><text x="27.00" y="1390.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(244,36,17)"/><text x="27.00" y="1406.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(208,70,35)"/><text x="27.00" y="1422.50"></text></g><g><title>0x7f079aaed258 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(235,38,52)"/><text x="27.00" y="1438.50"></text></g><g><title>0x7f079ab3ad7a (ld-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(246,31,11)"/><text x="27.00" y="1454.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(216,156,22)"/><text x="27.00" y="1470.50"></text></g><g><title>0x7f079ab3b18b (ld-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(215,68,13)"/><text x="27.00" y="1486.50"></text></g><g><title>0x7f079ab30c1a (ld-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(249,79,40)"/><text x="27.00" y="1502.50"></text></g><g><title>0x7f079ab2ddcf (ld-2.29.so) (1 samples, 0.18%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(236,147,7)"/><text x="27.00" y="1518.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.18%)</title><rect x="26" y="532" width="3" height="15" fill="rgb(205,140,30)"/><text x="29.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="548" width="3" height="15" fill="rgb(227,98,35)"/><text x="29.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="564" width="3" height="15" fill="rgb(240,198,54)"/><text x="29.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="580" width="3" height="15" fill="rgb(216,16,14)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="596" width="3" height="15" fill="rgb(223,163,25)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="612" width="3" height="15" fill="rgb(206,197,1)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(239,138,19)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(252,85,8)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="660" width="3" height="15" fill="rgb(239,215,2)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.18%)</title><rect x="26" y="676" width="3" height="15" fill="rgb(243,176,50)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="692" width="3" height="15" fill="rgb(246,121,27)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="708" width="3" height="15" fill="rgb(249,210,26)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(233,203,7)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(221,16,17)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(240,106,11)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py) (1 samples, 0.18%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(210,183,11)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(248,212,23)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(211,49,40)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(219,76,33)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(217,71,6)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(237,222,1)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py) (1 samples, 0.18%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(237,25,50)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(214,147,7)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(232,6,2)"/><text x="29.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(212,90,15)"/><text x="29.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(214,188,13)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(253,42,5)"/><text x="29.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio5.py) (1 samples, 0.18%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(213,34,19)"/><text x="29.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.72%)</title><rect x="22" y="340" width="9" height="15" fill="rgb(225,200,33)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="22" y="356" width="9" height="15" fill="rgb(250,46,10)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="22" y="372" width="9" height="15" fill="rgb(248,194,2)"/><text x="25.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="22" y="388" width="9" height="15" fill="rgb(241,40,46)"/><text x="25.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="22" y="404" width="9" height="15" fill="rgb(235,164,32)"/><text x="25.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="22" y="420" width="9" height="15" fill="rgb(218,138,47)"/><text x="25.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (2 samples, 0.36%)</title><rect x="26" y="436" width="5" height="15" fill="rgb(253,73,12)"/><text x="29.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="26" y="452" width="5" height="15" fill="rgb(252,126,2)"/><text x="29.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="26" y="468" width="5" height="15" fill="rgb(228,46,19)"/><text x="29.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="26" y="484" width="5" height="15" fill="rgb(220,94,11)"/><text x="29.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="26" y="500" width="5" height="15" fill="rgb(224,88,43)"/><text x="29.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="26" y="516" width="5" height="15" fill="rgb(213,41,17)"/><text x="29.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.18%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(223,36,29)"/><text x="32.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(225,20,40)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(242,133,49)"/><text x="32.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(250,155,25)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(254,205,9)"/><text x="32.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(232,158,31)"/><text x="32.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(252,106,15)"/><text x="32.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(254,31,49)"/><text x="32.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.18%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(244,180,46)"/><text x="32.00" y="670.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(237,61,15)"/><text x="32.00" y="686.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(226,209,29)"/><text x="32.00" y="702.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(236,144,22)"/><text x="32.00" y="718.50"></text></g><g><title>_sre_compile (python3.7) (1 samples, 0.18%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(224,53,2)"/><text x="32.00" y="734.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.90%)</title><rect x="22" y="244" width="11" height="15" fill="rgb(240,61,29)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="22" y="260" width="11" height="15" fill="rgb(244,186,54)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="22" y="276" width="11" height="15" fill="rgb(239,186,25)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="22" y="292" width="11" height="15" fill="rgb(222,90,3)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="22" y="308" width="11" height="15" fill="rgb(228,120,34)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="22" y="324" width="11" height="15" fill="rgb(246,151,27)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.18%)</title><rect x="31" y="340" width="2" height="15" fill="rgb(222,145,13)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="356" width="2" height="15" fill="rgb(246,164,18)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="372" width="2" height="15" fill="rgb(208,201,42)"/><text x="34.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="388" width="2" height="15" fill="rgb(205,215,9)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="404" width="2" height="15" fill="rgb(218,44,37)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="420" width="2" height="15" fill="rgb(226,14,9)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="436" width="2" height="15" fill="rgb(245,33,39)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="31" y="452" width="2" height="15" fill="rgb(228,21,19)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="468" width="2" height="15" fill="rgb(231,103,15)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.18%)</title><rect x="31" y="484" width="2" height="15" fill="rgb(243,64,15)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="500" width="2" height="15" fill="rgb(223,63,46)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="516" width="2" height="15" fill="rgb(230,32,43)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="532" width="2" height="15" fill="rgb(234,84,21)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="31" y="548" width="2" height="15" fill="rgb(222,59,1)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="564" width="2" height="15" fill="rgb(221,178,12)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.18%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(220,213,45)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(213,166,13)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(234,189,17)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(208,41,8)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="31" y="644" width="2" height="15" fill="rgb(220,110,44)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="660" width="2" height="15" fill="rgb(242,60,12)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.18%)</title><rect x="31" y="676" width="2" height="15" fill="rgb(245,105,28)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="692" width="2" height="15" fill="rgb(237,114,40)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="708" width="2" height="15" fill="rgb(230,90,34)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="724" width="2" height="15" fill="rgb(241,44,11)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="31" y="740" width="2" height="15" fill="rgb(219,99,25)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="756" width="2" height="15" fill="rgb(250,19,0)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.18%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(233,119,5)"/><text x="34.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(241,206,33)"/><text x="34.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(252,197,40)"/><text x="34.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(229,30,53)"/><text x="34.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(226,119,4)"/><text x="34.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(217,125,2)"/><text x="34.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(208,132,53)"/><text x="34.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(226,71,12)"/><text x="34.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(220,125,28)"/><text x="34.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(244,72,45)"/><text x="34.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.18%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(227,51,51)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.15%)</title><rect x="10" y="68" width="25" height="15" fill="rgb(239,95,12)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.15%)</title><rect x="10" y="84" width="25" height="15" fill="rgb(242,134,33)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.15%)</title><rect x="10" y="100" width="25" height="15" fill="rgb(233,228,16)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.15%)</title><rect x="10" y="116" width="25" height="15" fill="rgb(219,140,24)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.15%)</title><rect x="10" y="132" width="25" height="15" fill="rgb(237,57,35)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (12 samples, 2.15%)</title><rect x="10" y="148" width="25" height="15" fill="rgb(208,227,45)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.15%)</title><rect x="10" y="164" width="25" height="15" fill="rgb(217,216,46)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.15%)</title><rect x="10" y="180" width="25" height="15" fill="rgb(216,37,28)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="22" y="196" width="13" height="15" fill="rgb(232,219,31)"/><text x="25.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.08%)</title><rect x="22" y="212" width="13" height="15" fill="rgb(239,115,21)"/><text x="25.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.08%)</title><rect x="22" y="228" width="13" height="15" fill="rgb(249,116,3)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.18%)</title><rect x="33" y="244" width="2" height="15" fill="rgb(214,156,3)"/><text x="36.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="260" width="2" height="15" fill="rgb(231,123,49)"/><text x="36.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="276" width="2" height="15" fill="rgb(217,176,46)"/><text x="36.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="292" width="2" height="15" fill="rgb(244,56,6)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="308" width="2" height="15" fill="rgb(215,42,38)"/><text x="36.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="324" width="2" height="15" fill="rgb(254,105,20)"/><text x="36.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="340" width="2" height="15" fill="rgb(251,201,33)"/><text x="36.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="356" width="2" height="15" fill="rgb(241,220,15)"/><text x="36.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.18%)</title><rect x="33" y="372" width="2" height="15" fill="rgb(247,76,26)"/><text x="36.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="388" width="2" height="15" fill="rgb(247,65,5)"/><text x="36.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="404" width="2" height="15" fill="rgb(250,202,41)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="420" width="2" height="15" fill="rgb(250,63,22)"/><text x="36.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="436" width="2" height="15" fill="rgb(219,166,52)"/><text x="36.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="452" width="2" height="15" fill="rgb(213,31,41)"/><text x="36.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="468" width="2" height="15" fill="rgb(207,141,4)"/><text x="36.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="484" width="2" height="15" fill="rgb(206,31,15)"/><text x="36.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.18%)</title><rect x="33" y="500" width="2" height="15" fill="rgb(211,6,41)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="516" width="2" height="15" fill="rgb(245,211,36)"/><text x="36.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="532" width="2" height="15" fill="rgb(226,116,46)"/><text x="36.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="548" width="2" height="15" fill="rgb(224,167,8)"/><text x="36.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="564" width="2" height="15" fill="rgb(252,125,7)"/><text x="36.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="580" width="2" height="15" fill="rgb(254,90,38)"/><text x="36.00" y="590.50"></text></g><g><title>0x7f078d12c585 (?) (1 samples, 0.18%)</title><rect x="33" y="596" width="2" height="15" fill="rgb(230,75,10)"/><text x="36.00" y="606.50"></text></g><g><title>0x7f078d132075 (?) (1 samples, 0.18%)</title><rect x="33" y="612" width="2" height="15" fill="rgb(224,177,5)"/><text x="36.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="628" width="2" height="15" fill="rgb(209,25,8)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="644" width="2" height="15" fill="rgb(246,84,51)"/><text x="36.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="660" width="2" height="15" fill="rgb(211,16,5)"/><text x="36.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="676" width="2" height="15" fill="rgb(210,187,52)"/><text x="36.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="692" width="2" height="15" fill="rgb(228,191,28)"/><text x="36.00" y="702.50"></text></g><g><title>0x7f078ca69543 (?) (1 samples, 0.18%)</title><rect x="33" y="708" width="2" height="15" fill="rgb(222,92,34)"/><text x="36.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(245,36,13)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="740" width="2" height="15" fill="rgb(213,153,50)"/><text x="36.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="756" width="2" height="15" fill="rgb(209,121,35)"/><text x="36.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(215,144,0)"/><text x="36.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(242,190,21)"/><text x="36.00" y="798.50"></text></g><g><title>0x7f078c83eb9c (?) (1 samples, 0.18%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(219,105,6)"/><text x="36.00" y="814.50"></text></g><g><title>0x7f078c842885 (?) (1 samples, 0.18%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(249,202,41)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(249,130,49)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(236,39,11)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(235,65,2)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(213,22,8)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(233,134,46)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.18%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(215,128,21)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(247,101,5)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(249,20,42)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(209,67,28)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(254,156,11)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(228,192,27)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.18%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(234,89,21)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(224,194,51)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(239,131,11)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(207,185,5)"/><text x="36.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(208,74,47)"/><text x="36.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(214,171,52)"/><text x="36.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(243,19,40)"/><text x="36.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(246,71,51)"/><text x="36.00" y="1134.50"></text></g><g><title>0x7f079aaed995 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(239,1,48)"/><text x="36.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(245,43,46)"/><text x="36.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(211,125,29)"/><text x="36.00" y="1182.50"></text></g><g><title>0x7f079aaed258 (libdl-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(223,0,26)"/><text x="36.00" y="1198.50"></text></g><g><title>0x7f079ab3ad7a (ld-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(233,166,35)"/><text x="36.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(217,79,47)"/><text x="36.00" y="1230.50"></text></g><g><title>0x7f079ab3b345 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(234,27,35)"/><text x="36.00" y="1246.50"></text></g><g><title>0x7f079ab33fec (ld-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(231,74,24)"/><text x="36.00" y="1262.50"></text></g><g><title>0x7f079ab3256b (ld-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(254,127,44)"/><text x="36.00" y="1278.50"></text></g><g><title>0x7f079ab31c10 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(216,194,2)"/><text x="36.00" y="1294.50"></text></g><g><title>0x7f075a523ff9 (?) (1 samples, 0.18%)</title><rect x="41" y="212" width="2" height="15" fill="rgb(234,113,35)"/><text x="44.00" y="222.50"></text></g><g><title>0x7f075a51eef6 (?) (1 samples, 0.18%)</title><rect x="41" y="228" width="2" height="15" fill="rgb(223,224,32)"/><text x="44.00" y="238.50"></text></g><g><title>0x7f075a513962 (?) (1 samples, 0.18%)</title><rect x="41" y="244" width="2" height="15" fill="rgb(246,5,31)"/><text x="44.00" y="254.50"></text></g><g><title>0x7f075a5477a7 (?) (1 samples, 0.18%)</title><rect x="41" y="260" width="2" height="15" fill="rgb(217,196,33)"/><text x="44.00" y="270.50"></text></g><g><title>0x7f075a547379 (?) (1 samples, 0.18%)</title><rect x="41" y="276" width="2" height="15" fill="rgb(252,177,20)"/><text x="44.00" y="286.50"></text></g><g><title>0x7f075a9a58b8 (?) (1 samples, 0.18%)</title><rect x="41" y="292" width="2" height="15" fill="rgb(253,127,11)"/><text x="44.00" y="302.50"></text></g><g><title>0x7f075a9a3c7f (?) (1 samples, 0.18%)</title><rect x="41" y="308" width="2" height="15" fill="rgb(214,180,44)"/><text x="44.00" y="318.50"></text></g><g><title>0x7f075a9b699c (?) (1 samples, 0.18%)</title><rect x="41" y="324" width="2" height="15" fill="rgb(236,226,18)"/><text x="44.00" y="334.50"></text></g><g><title>0x7f075a60d413 (?) (1 samples, 0.18%)</title><rect x="41" y="340" width="2" height="15" fill="rgb(230,55,2)"/><text x="44.00" y="350.50"></text></g><g><title>0x7f075a60cb63 (?) (1 samples, 0.18%)</title><rect x="41" y="356" width="2" height="15" fill="rgb(208,128,13)"/><text x="44.00" y="366.50"></text></g><g><title>0x7f079a865d07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="41" y="372" width="2" height="15" fill="rgb(226,92,50)"/><text x="44.00" y="382.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="43" y="340" width="5" height="15" fill="rgb(228,153,18)"/><text x="46.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="48" y="340" width="4" height="15" fill="rgb(235,92,51)"/><text x="51.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="48" y="356" width="4" height="15" fill="rgb(244,208,53)"/><text x="51.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="48" y="372" width="4" height="15" fill="rgb(248,180,11)"/><text x="51.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="50" y="388" width="2" height="15" fill="rgb(250,129,25)"/><text x="53.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="50" y="404" width="2" height="15" fill="rgb(240,107,13)"/><text x="53.00" y="414.50"></text></g><g><title>0x7f079a865906 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="50" y="420" width="2" height="15" fill="rgb(242,71,50)"/><text x="53.00" y="430.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="52" y="372" width="2" height="15" fill="rgb(239,111,21)"/><text x="55.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="52" y="388" width="2" height="15" fill="rgb(205,44,47)"/><text x="55.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastIterator::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="52" y="404" width="2" height="15" fill="rgb(206,5,50)"/><text x="55.00" y="414.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="52" y="340" width="4" height="15" fill="rgb(227,58,17)"/><text x="55.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="52" y="356" width="4" height="15" fill="rgb(237,139,5)"/><text x="55.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="54" y="372" width="2" height="15" fill="rgb(238,100,39)"/><text x="57.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="54" y="388" width="2" height="15" fill="rgb(206,84,19)"/><text x="57.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="54" y="404" width="2" height="15" fill="rgb(207,159,30)"/><text x="57.00" y="414.50"></text></g><g><title>0x7f079a86700a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="54" y="420" width="2" height="15" fill="rgb(208,31,54)"/><text x="57.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(218,85,45)"/><text x="59.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="56" y="356" width="2" height="15" fill="rgb(250,166,19)"/><text x="59.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="58" y="340" width="4" height="15" fill="rgb(246,211,33)"/><text x="61.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="58" y="356" width="4" height="15" fill="rgb(237,57,53)"/><text x="61.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="58" y="372" width="4" height="15" fill="rgb(239,62,48)"/><text x="61.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="58" y="388" width="4" height="15" fill="rgb(243,1,50)"/><text x="61.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="58" y="404" width="4" height="15" fill="rgb(222,133,0)"/><text x="61.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="60" y="420" width="2" height="15" fill="rgb(215,137,3)"/><text x="63.00" y="430.50"></text></g><g><title>0x7f079a86590e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="62" y="372" width="2" height="15" fill="rgb(242,93,38)"/><text x="65.00" y="382.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (15 samples, 2.69%)</title><rect x="35" y="68" width="32" height="15" fill="rgb(234,132,1)"/><text x="38.00" y="78.50">pr..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (15 samples, 2.69%)</title><rect x="35" y="84" width="32" height="15" fill="rgb(217,12,5)"/><text x="38.00" y="94.50">se..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (15 samples, 2.69%)</title><rect x="35" y="100" width="32" height="15" fill="rgb(250,195,40)"/><text x="38.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 2.69%)</title><rect x="35" y="116" width="32" height="15" fill="rgb(210,213,2)"/><text x="38.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 2.69%)</title><rect x="35" y="132" width="32" height="15" fill="rgb(210,17,51)"/><text x="38.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (15 samples, 2.69%)</title><rect x="35" y="148" width="32" height="15" fill="rgb(207,93,45)"/><text x="38.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (15 samples, 2.69%)</title><rect x="35" y="164" width="32" height="15" fill="rgb(229,203,27)"/><text x="38.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (14 samples, 2.51%)</title><rect x="37" y="180" width="30" height="15" fill="rgb(236,208,22)"/><text x="40.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py) (14 samples, 2.51%)</title><rect x="37" y="196" width="30" height="15" fill="rgb(243,110,54)"/><text x="40.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="212" width="24" height="15" fill="rgb(254,88,17)"/><text x="46.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="228" width="24" height="15" fill="rgb(244,98,41)"/><text x="46.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="244" width="24" height="15" fill="rgb(229,149,18)"/><text x="46.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="260" width="24" height="15" fill="rgb(242,74,10)"/><text x="46.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="276" width="24" height="15" fill="rgb(208,109,22)"/><text x="46.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="292" width="24" height="15" fill="rgb(228,98,3)"/><text x="46.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="308" width="24" height="15" fill="rgb(243,223,41)"/><text x="46.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.97%)</title><rect x="43" y="324" width="24" height="15" fill="rgb(231,199,46)"/><text x="46.00" y="334.50">o..</text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="62" y="340" width="5" height="15" fill="rgb(237,118,1)"/><text x="65.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="62" y="356" width="5" height="15" fill="rgb(236,206,11)"/><text x="65.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="64" y="372" width="3" height="15" fill="rgb(218,66,16)"/><text x="67.00" y="382.50"></text></g><g><title>0x7f079a8861ef (libc-2.29.so) (1 samples, 0.18%)</title><rect x="196" y="196" width="2" height="15" fill="rgb(230,161,5)"/><text x="199.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.54%)</title><rect x="198" y="196" width="6" height="15" fill="rgb(253,86,47)"/><text x="201.00" y="206.50"></text></g><g><title>0x7f079a866e19 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="227" y="276" width="2" height="15" fill="rgb(218,75,23)"/><text x="230.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (2 samples, 0.36%)</title><rect x="227" y="212" width="5" height="15" fill="rgb(218,199,21)"/><text x="230.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.36%)</title><rect x="227" y="228" width="5" height="15" fill="rgb(213,144,47)"/><text x="230.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.36%)</title><rect x="227" y="244" width="5" height="15" fill="rgb(218,218,10)"/><text x="230.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="227" y="260" width="5" height="15" fill="rgb(219,115,28)"/><text x="230.00" y="270.50"></text></g><g><title>0x7f079a867028 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="229" y="276" width="3" height="15" fill="rgb(224,47,7)"/><text x="232.00" y="286.50"></text></g><g><title>0x7f079a864c28 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="229" y="292" width="3" height="15" fill="rgb(239,46,22)"/><text x="232.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.36%)</title><rect x="232" y="244" width="4" height="15" fill="rgb(249,176,22)"/><text x="235.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.18%)</title><rect x="234" y="260" width="2" height="15" fill="rgb(232,102,5)"/><text x="237.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.18%)</title><rect x="234" y="276" width="2" height="15" fill="rgb(213,28,33)"/><text x="237.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.18%)</title><rect x="234" y="292" width="2" height="15" fill="rgb(249,225,38)"/><text x="237.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.54%)</title><rect x="232" y="212" width="6" height="15" fill="rgb(246,58,48)"/><text x="235.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.54%)</title><rect x="232" y="228" width="6" height="15" fill="rgb(238,0,29)"/><text x="235.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.18%)</title><rect x="236" y="244" width="2" height="15" fill="rgb(218,17,31)"/><text x="239.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.18%)</title><rect x="236" y="260" width="2" height="15" fill="rgb(234,16,37)"/><text x="239.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="236" y="276" width="2" height="15" fill="rgb(230,96,20)"/><text x="239.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="236" y="292" width="2" height="15" fill="rgb(231,119,5)"/><text x="239.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="236" y="308" width="2" height="15" fill="rgb(240,167,39)"/><text x="239.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="236" y="324" width="2" height="15" fill="rgb(251,18,22)"/><text x="239.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="238" y="276" width="2" height="15" fill="rgb(244,138,41)"/><text x="241.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="238" y="292" width="2" height="15" fill="rgb(251,204,46)"/><text x="241.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.18%)</title><rect x="238" y="308" width="2" height="15" fill="rgb(237,176,5)"/><text x="241.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.18%)</title><rect x="238" y="324" width="2" height="15" fill="rgb(214,130,17)"/><text x="241.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.18%)</title><rect x="240" y="276" width="2" height="15" fill="rgb(235,70,43)"/><text x="243.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="240" y="292" width="2" height="15" fill="rgb(248,95,24)"/><text x="243.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (3 samples, 0.54%)</title><rect x="238" y="212" width="6" height="15" fill="rgb(246,105,39)"/><text x="241.00" y="222.50"></text></g><g><title>array_add (number.c) (3 samples, 0.54%)</title><rect x="238" y="228" width="6" height="15" fill="rgb(226,217,21)"/><text x="241.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.54%)</title><rect x="238" y="244" width="6" height="15" fill="rgb(217,59,39)"/><text x="241.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.54%)</title><rect x="238" y="260" width="6" height="15" fill="rgb(247,202,50)"/><text x="241.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="242" y="276" width="2" height="15" fill="rgb(208,40,28)"/><text x="245.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="242" y="292" width="2" height="15" fill="rgb(251,125,11)"/><text x="245.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.18%)</title><rect x="242" y="308" width="2" height="15" fill="rgb(227,87,25)"/><text x="245.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="242" y="324" width="2" height="15" fill="rgb(230,152,43)"/><text x="245.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.18%)</title><rect x="242" y="340" width="2" height="15" fill="rgb(207,174,35)"/><text x="245.00" y="350.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.18%)</title><rect x="244" y="212" width="2" height="15" fill="rgb(228,182,3)"/><text x="247.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.54%)</title><rect x="278" y="260" width="6" height="15" fill="rgb(231,20,17)"/><text x="281.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.54%)</title><rect x="278" y="276" width="6" height="15" fill="rgb(213,114,31)"/><text x="281.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="282" y="292" width="2" height="15" fill="rgb(224,130,10)"/><text x="285.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (2 samples, 0.36%)</title><rect x="284" y="276" width="5" height="15" fill="rgb(238,126,36)"/><text x="287.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.18%)</title><rect x="287" y="292" width="2" height="15" fill="rgb(210,36,31)"/><text x="290.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(216,120,48)"/><text x="292.00" y="302.50"></text></g><g><title>0x7f079a88614e (libc-2.29.so) (1 samples, 0.18%)</title><rect x="291" y="324" width="2" height="15" fill="rgb(212,93,45)"/><text x="294.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="293" y="324" width="2" height="15" fill="rgb(254,122,26)"/><text x="296.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="295" y="324" width="2" height="15" fill="rgb(210,26,40)"/><text x="298.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.18%)</title><rect x="297" y="324" width="2" height="15" fill="rgb(252,99,26)"/><text x="300.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="297" y="340" width="2" height="15" fill="rgb(250,144,44)"/><text x="300.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="301" y="356" width="2" height="15" fill="rgb(251,116,28)"/><text x="304.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.18%)</title><rect x="301" y="372" width="2" height="15" fill="rgb(236,197,40)"/><text x="304.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.43%)</title><rect x="289" y="276" width="17" height="15" fill="rgb(218,63,15)"/><text x="292.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.25%)</title><rect x="291" y="292" width="15" height="15" fill="rgb(209,158,19)"/><text x="294.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.25%)</title><rect x="291" y="308" width="15" height="15" fill="rgb(226,127,50)"/><text x="294.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (3 samples, 0.54%)</title><rect x="299" y="324" width="7" height="15" fill="rgb(208,189,18)"/><text x="302.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (3 samples, 0.54%)</title><rect x="299" y="340" width="7" height="15" fill="rgb(218,144,14)"/><text x="302.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(248,58,17)"/><text x="306.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 2.69%)</title><rect x="284" y="260" width="32" height="15" fill="rgb(223,100,22)"/><text x="287.00" y="270.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.90%)</title><rect x="306" y="276" width="10" height="15" fill="rgb(252,220,10)"/><text x="309.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.18%)</title><rect x="314" y="292" width="2" height="15" fill="rgb(217,200,2)"/><text x="317.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (29 samples, 5.20%)</title><rect x="257" y="228" width="61" height="15" fill="rgb(245,67,2)"/><text x="260.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 3.94%)</title><rect x="272" y="244" width="46" height="15" fill="rgb(214,28,38)"/><text x="275.00" y="254.50">ufun..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="316" y="260" width="2" height="15" fill="rgb(233,187,21)"/><text x="319.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.18%)</title><rect x="318" y="228" width="2" height="15" fill="rgb(241,154,51)"/><text x="321.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.18%)</title><rect x="318" y="244" width="2" height="15" fill="rgb(252,137,24)"/><text x="321.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.18%)</title><rect x="318" y="260" width="2" height="15" fill="rgb(233,202,23)"/><text x="321.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.18%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(234,119,10)"/><text x="321.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.18%)</title><rect x="318" y="292" width="2" height="15" fill="rgb(254,152,52)"/><text x="321.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.18%)</title><rect x="318" y="308" width="2" height="15" fill="rgb(237,130,4)"/><text x="321.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (1 samples, 0.18%)</title><rect x="320" y="228" width="2" height="15" fill="rgb(210,44,54)"/><text x="323.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="320" y="244" width="2" height="15" fill="rgb(214,16,27)"/><text x="323.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="320" y="260" width="2" height="15" fill="rgb(205,45,38)"/><text x="323.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="320" y="276" width="2" height="15" fill="rgb(210,79,10)"/><text x="323.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.18%)</title><rect x="320" y="292" width="2" height="15" fill="rgb(222,172,46)"/><text x="323.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.18%)</title><rect x="320" y="308" width="2" height="15" fill="rgb(242,21,41)"/><text x="323.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.18%)</title><rect x="320" y="324" width="2" height="15" fill="rgb(214,160,6)"/><text x="323.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="320" y="340" width="2" height="15" fill="rgb(248,153,25)"/><text x="323.00" y="350.50"></text></g><g><title>0x7f079a8672c1 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(234,20,16)"/><text x="323.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.18%)</title><rect x="331" y="276" width="2" height="15" fill="rgb(226,179,23)"/><text x="334.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.18%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(218,218,10)"/><text x="334.00" y="302.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.18%)</title><rect x="335" y="356" width="2" height="15" fill="rgb(248,219,43)"/><text x="338.00" y="366.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 0.54%)</title><rect x="333" y="340" width="6" height="15" fill="rgb(207,177,37)"/><text x="336.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.18%)</title><rect x="337" y="356" width="2" height="15" fill="rgb(216,147,5)"/><text x="340.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.18%)</title><rect x="337" y="372" width="2" height="15" fill="rgb(232,163,11)"/><text x="340.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (5 samples, 0.90%)</title><rect x="333" y="292" width="11" height="15" fill="rgb(219,156,53)"/><text x="336.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (5 samples, 0.90%)</title><rect x="333" y="308" width="11" height="15" fill="rgb(216,209,17)"/><text x="336.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (5 samples, 0.90%)</title><rect x="333" y="324" width="11" height="15" fill="rgb(211,106,9)"/><text x="336.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="339" y="340" width="5" height="15" fill="rgb(232,122,4)"/><text x="342.00" y="350.50"></text></g><g><title>0x7f079a866b12 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="342" y="356" width="2" height="15" fill="rgb(251,56,51)"/><text x="345.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (11 samples, 1.97%)</title><rect x="322" y="228" width="24" height="15" fill="rgb(211,127,42)"/><text x="325.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.25%)</title><rect x="331" y="244" width="15" height="15" fill="rgb(229,23,33)"/><text x="334.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.25%)</title><rect x="331" y="260" width="15" height="15" fill="rgb(210,123,9)"/><text x="334.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.08%)</title><rect x="333" y="276" width="13" height="15" fill="rgb(215,42,46)"/><text x="336.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="344" y="292" width="2" height="15" fill="rgb(227,6,14)"/><text x="347.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.18%)</title><rect x="344" y="308" width="2" height="15" fill="rgb(239,209,12)"/><text x="347.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.18%)</title><rect x="344" y="324" width="2" height="15" fill="rgb(210,221,22)"/><text x="347.00" y="334.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="356" y="260" width="2" height="15" fill="rgb(222,87,52)"/><text x="359.00" y="270.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(210,204,0)"/><text x="380.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.36%)</title><rect x="380" y="356" width="4" height="15" fill="rgb(208,51,30)"/><text x="383.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.36%)</title><rect x="380" y="372" width="4" height="15" fill="rgb(211,47,34)"/><text x="383.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.36%)</title><rect x="380" y="388" width="4" height="15" fill="rgb(213,122,36)"/><text x="383.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.54%)</title><rect x="380" y="324" width="6" height="15" fill="rgb(212,15,42)"/><text x="383.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.54%)</title><rect x="380" y="340" width="6" height="15" fill="rgb(232,152,1)"/><text x="383.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="384" y="356" width="2" height="15" fill="rgb(240,67,24)"/><text x="387.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="384" y="372" width="2" height="15" fill="rgb(253,19,43)"/><text x="387.00" y="382.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.18%)</title><rect x="392" y="340" width="2" height="15" fill="rgb(231,144,13)"/><text x="395.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="394" y="388" width="2" height="15" fill="rgb(229,42,47)"/><text x="397.00" y="398.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="396" y="388" width="3" height="15" fill="rgb(235,164,35)"/><text x="399.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.54%)</title><rect x="394" y="372" width="7" height="15" fill="rgb(225,65,15)"/><text x="397.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="399" y="388" width="2" height="15" fill="rgb(205,87,35)"/><text x="402.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.36%)</title><rect x="401" y="404" width="4" height="15" fill="rgb(228,12,2)"/><text x="404.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.36%)</title><rect x="401" y="420" width="4" height="15" fill="rgb(247,187,47)"/><text x="404.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.36%)</title><rect x="401" y="436" width="4" height="15" fill="rgb(251,199,7)"/><text x="404.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.36%)</title><rect x="401" y="452" width="4" height="15" fill="rgb(247,41,0)"/><text x="404.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="403" y="468" width="2" height="15" fill="rgb(233,13,26)"/><text x="406.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="403" y="484" width="2" height="15" fill="rgb(213,115,6)"/><text x="406.00" y="494.50"></text></g><g><title>0x7f079a8676df (libc-2.29.so) (1 samples, 0.18%)</title><rect x="403" y="500" width="2" height="15" fill="rgb(254,98,24)"/><text x="406.00" y="510.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.54%)</title><rect x="401" y="372" width="6" height="15" fill="rgb(250,218,44)"/><text x="404.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.54%)</title><rect x="401" y="388" width="6" height="15" fill="rgb(251,163,35)"/><text x="404.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="405" y="404" width="2" height="15" fill="rgb(243,206,24)"/><text x="408.00" y="414.50"></text></g><g><title>0x7f079a81d760 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="405" y="420" width="2" height="15" fill="rgb(231,52,34)"/><text x="408.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.36%)</title><rect x="407" y="372" width="4" height="15" fill="rgb(219,137,32)"/><text x="410.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="409" y="388" width="2" height="15" fill="rgb(252,158,53)"/><text x="412.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="409" y="404" width="2" height="15" fill="rgb(230,158,16)"/><text x="412.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.61%)</title><rect x="394" y="356" width="19" height="15" fill="rgb(239,129,38)"/><text x="397.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="411" y="372" width="2" height="15" fill="rgb(243,187,11)"/><text x="414.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.18%)</title><rect x="411" y="388" width="2" height="15" fill="rgb(225,119,43)"/><text x="414.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.18%)</title><rect x="413" y="356" width="3" height="15" fill="rgb(242,120,7)"/><text x="416.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (34 samples, 6.09%)</title><rect x="346" y="228" width="72" height="15" fill="rgb(209,35,6)"/><text x="349.00" y="238.50">_run (ml..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (31 samples, 5.56%)</title><rect x="352" y="244" width="66" height="15" fill="rgb(222,25,17)"/><text x="355.00" y="254.50">sum (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (28 samples, 5.02%)</title><rect x="358" y="260" width="60" height="15" fill="rgb(238,197,22)"/><text x="361.00" y="270.50">array_..</text></g><g><title>sum (numpy/core/fromnumeric.py) (27 samples, 4.84%)</title><rect x="361" y="276" width="57" height="15" fill="rgb(244,228,25)"/><text x="364.00" y="286.50">sum (n..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (24 samples, 4.30%)</title><rect x="367" y="292" width="51" height="15" fill="rgb(229,179,43)"/><text x="370.00" y="302.50">_wrap..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 3.23%)</title><rect x="380" y="308" width="38" height="15" fill="rgb(240,101,49)"/><text x="383.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 2.69%)</title><rect x="386" y="324" width="32" height="15" fill="rgb(226,94,19)"/><text x="389.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 1.97%)</title><rect x="394" y="340" width="24" height="15" fill="rgb(246,90,54)"/><text x="397.00" y="350.50">P..</text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.18%)</title><rect x="416" y="356" width="2" height="15" fill="rgb(205,80,6)"/><text x="419.00" y="366.50"></text></g><g><title>0x7f075b3c3422 (?) (1 samples, 0.18%)</title><rect x="418" y="244" width="2" height="15" fill="rgb(219,43,38)"/><text x="421.00" y="254.50"></text></g><g><title>0x7f075b3c989e (?) (1 samples, 0.18%)</title><rect x="418" y="260" width="2" height="15" fill="rgb(246,125,27)"/><text x="421.00" y="270.50"></text></g><g><title>0x7f075b3c974f (?) (1 samples, 0.18%)</title><rect x="418" y="276" width="2" height="15" fill="rgb(217,71,23)"/><text x="421.00" y="286.50"></text></g><g><title>0x7f075b3cfa3a (?) (1 samples, 0.18%)</title><rect x="418" y="292" width="2" height="15" fill="rgb(245,186,35)"/><text x="421.00" y="302.50"></text></g><g><title>0x7f076482bab9 (?) (1 samples, 0.18%)</title><rect x="418" y="308" width="2" height="15" fill="rgb(239,40,32)"/><text x="421.00" y="318.50"></text></g><g><title>0x7f076482cead (?) (1 samples, 0.18%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(221,5,35)"/><text x="421.00" y="334.50"></text></g><g><title>0x7f076482cea0 (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="420" y="468" width="4" height="15" fill="rgb(235,8,40)"/><text x="423.00" y="478.50"></text></g><g><title>0x7f076482cea9 (libgomp.so.1.0.0) (6 samples, 1.08%)</title><rect x="424" y="468" width="13" height="15" fill="rgb(230,137,1)"/><text x="427.00" y="478.50"></text></g><g><title>0x7f076482ceab (libgomp.so.1.0.0) (9 samples, 1.61%)</title><rect x="437" y="468" width="19" height="15" fill="rgb(241,88,47)"/><text x="440.00" y="478.50"></text></g><g><title>0x7f076482bab9 (libgomp.so.1.0.0) (22 samples, 3.94%)</title><rect x="420" y="452" width="46" height="15" fill="rgb(244,209,23)"/><text x="423.00" y="462.50">0x7f..</text></g><g><title>0x7f076482cead (libgomp.so.1.0.0) (5 samples, 0.90%)</title><rect x="456" y="468" width="10" height="15" fill="rgb(243,207,37)"/><text x="459.00" y="478.50"></text></g><g><title>0x7f076482ccfb (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="466" y="484" width="5" height="15" fill="rgb(241,229,25)"/><text x="469.00" y="494.50"></text></g><g><title>0x7f076482ccfd (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="471" y="484" width="4" height="15" fill="rgb(208,3,23)"/><text x="474.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (130 samples, 23.30%)</title><rect x="204" y="196" width="275" height="15" fill="rgb(229,92,19)"/><text x="207.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (110 samples, 19.71%)</title><rect x="246" y="212" width="233" height="15" fill="rgb(242,195,43)"/><text x="249.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (29 samples, 5.20%)</title><rect x="418" y="228" width="61" height="15" fill="rgb(241,160,18)"/><text x="421.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (28 samples, 5.02%)</title><rect x="420" y="244" width="59" height="15" fill="rgb(250,96,44)"/><text x="423.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (28 samples, 5.02%)</title><rect x="420" y="260" width="59" height="15" fill="rgb(214,107,31)"/><text x="423.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (28 samples, 5.02%)</title><rect x="420" y="276" width="59" height="15" fill="rgb(243,159,21)"/><text x="423.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (28 samples, 5.02%)</title><rect x="420" y="292" width="59" height="15" fill="rgb(251,70,9)"/><text x="423.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (28 samples, 5.02%)</title><rect x="420" y="308" width="59" height="15" fill="rgb(215,223,48)"/><text x="423.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (28 samples, 5.02%)</title><rect x="420" y="324" width="59" height="15" fill="rgb(208,124,46)"/><text x="423.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (28 samples, 5.02%)</title><rect x="420" y="340" width="59" height="15" fill="rgb(239,91,36)"/><text x="423.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (28 samples, 5.02%)</title><rect x="420" y="356" width="59" height="15" fill="rgb(245,204,14)"/><text x="423.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (28 samples, 5.02%)</title><rect x="420" y="372" width="59" height="15" fill="rgb(215,154,13)"/><text x="423.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (28 samples, 5.02%)</title><rect x="420" y="388" width="59" height="15" fill="rgb(211,7,14)"/><text x="423.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (28 samples, 5.02%)</title><rect x="420" y="404" width="59" height="15" fill="rgb(206,74,13)"/><text x="423.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (28 samples, 5.02%)</title><rect x="420" y="420" width="59" height="15" fill="rgb(241,163,51)"/><text x="423.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (28 samples, 5.02%)</title><rect x="420" y="436" width="59" height="15" fill="rgb(232,13,38)"/><text x="423.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (6 samples, 1.08%)</title><rect x="466" y="452" width="13" height="15" fill="rgb(221,104,34)"/><text x="469.00" y="462.50"></text></g><g><title>0x7f076482adaa (libgomp.so.1.0.0) (6 samples, 1.08%)</title><rect x="466" y="468" width="13" height="15" fill="rgb(236,20,36)"/><text x="469.00" y="478.50"></text></g><g><title>0x7f076482cd6d (libgomp.so.1.0.0) (2 samples, 0.36%)</title><rect x="475" y="484" width="4" height="15" fill="rgb(243,214,32)"/><text x="478.00" y="494.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.18%)</title><rect x="496" y="420" width="2" height="15" fill="rgb(207,59,44)"/><text x="499.00" y="430.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.18%)</title><rect x="496" y="436" width="2" height="15" fill="rgb(250,26,40)"/><text x="499.00" y="446.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (3 samples, 0.54%)</title><rect x="494" y="404" width="6" height="15" fill="rgb(231,109,52)"/><text x="497.00" y="414.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.18%)</title><rect x="498" y="420" width="2" height="15" fill="rgb(214,80,54)"/><text x="501.00" y="430.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (5 samples, 0.90%)</title><rect x="494" y="388" width="10" height="15" fill="rgb(220,2,16)"/><text x="497.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="500" y="404" width="4" height="15" fill="rgb(210,46,35)"/><text x="503.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 0.36%)</title><rect x="500" y="420" width="4" height="15" fill="rgb(230,102,37)"/><text x="503.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="502" y="436" width="2" height="15" fill="rgb(241,197,35)"/><text x="505.00" y="446.50"></text></g><g><title>0x7f079a88614a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="504" y="436" width="2" height="15" fill="rgb(205,68,5)"/><text x="507.00" y="446.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="506" y="452" width="3" height="15" fill="rgb(227,119,11)"/><text x="509.00" y="462.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="506" y="468" width="3" height="15" fill="rgb(230,175,50)"/><text x="509.00" y="478.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="506" y="484" width="3" height="15" fill="rgb(221,110,9)"/><text x="509.00" y="494.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (2 samples, 0.36%)</title><rect x="506" y="436" width="5" height="15" fill="rgb(247,86,47)"/><text x="509.00" y="446.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="509" y="452" width="2" height="15" fill="rgb(253,50,18)"/><text x="512.00" y="462.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="509" y="468" width="2" height="15" fill="rgb(238,145,12)"/><text x="512.00" y="478.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="511" y="436" width="2" height="15" fill="rgb(216,172,7)"/><text x="514.00" y="446.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="513" y="436" width="2" height="15" fill="rgb(214,109,23)"/><text x="516.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.25%)</title><rect x="504" y="420" width="15" height="15" fill="rgb(238,44,50)"/><text x="507.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.36%)</title><rect x="515" y="436" width="4" height="15" fill="rgb(220,6,25)"/><text x="518.00" y="446.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="517" y="452" width="2" height="15" fill="rgb(243,209,0)"/><text x="520.00" y="462.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="519" y="420" width="2" height="15" fill="rgb(251,5,25)"/><text x="522.00" y="430.50"></text></g><g><title>0x7f079a865bcd (libc-2.29.so) (1 samples, 0.18%)</title><rect x="519" y="436" width="2" height="15" fill="rgb(248,18,13)"/><text x="522.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.61%)</title><rect x="504" y="388" width="19" height="15" fill="rgb(217,188,41)"/><text x="507.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.61%)</title><rect x="504" y="404" width="19" height="15" fill="rgb(219,227,47)"/><text x="507.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.18%)</title><rect x="521" y="420" width="2" height="15" fill="rgb(216,177,24)"/><text x="524.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="521" y="436" width="2" height="15" fill="rgb(220,102,2)"/><text x="524.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="521" y="452" width="2" height="15" fill="rgb(236,155,18)"/><text x="524.00" y="462.50"></text></g><g><title>0x7f079a866b68 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="521" y="468" width="2" height="15" fill="rgb(249,115,32)"/><text x="524.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (16 samples, 2.87%)</title><rect x="492" y="340" width="33" height="15" fill="rgb(244,138,52)"/><text x="495.00" y="350.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.87%)</title><rect x="492" y="356" width="33" height="15" fill="rgb(244,101,13)"/><text x="495.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 2.87%)</title><rect x="492" y="372" width="33" height="15" fill="rgb(217,53,46)"/><text x="495.00" y="382.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.18%)</title><rect x="523" y="388" width="2" height="15" fill="rgb(223,39,33)"/><text x="526.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="523" y="404" width="2" height="15" fill="rgb(229,67,47)"/><text x="526.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="523" y="420" width="2" height="15" fill="rgb(227,186,47)"/><text x="526.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="523" y="436" width="2" height="15" fill="rgb(238,80,38)"/><text x="526.00" y="446.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.36%)</title><rect x="525" y="340" width="5" height="15" fill="rgb(252,82,44)"/><text x="528.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="542" y="356" width="11" height="15" fill="rgb(226,75,54)"/><text x="545.00" y="366.50"></text></g><g><title>0x7f0799a88800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="561" y="404" width="3" height="15" fill="rgb(238,115,44)"/><text x="564.00" y="414.50"></text></g><g><title>0x7f079a8861d6 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="564" y="404" width="2" height="15" fill="rgb(236,228,52)"/><text x="567.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="566" y="404" width="2" height="15" fill="rgb(232,55,3)"/><text x="569.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (11 samples, 1.97%)</title><rect x="553" y="356" width="23" height="15" fill="rgb(207,161,50)"/><text x="556.00" y="366.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.79%)</title><rect x="555" y="372" width="21" height="15" fill="rgb(216,210,21)"/><text x="558.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (9 samples, 1.61%)</title><rect x="557" y="388" width="19" height="15" fill="rgb(209,217,22)"/><text x="560.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.72%)</title><rect x="568" y="404" width="8" height="15" fill="rgb(237,86,31)"/><text x="571.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.72%)</title><rect x="568" y="420" width="8" height="15" fill="rgb(225,121,34)"/><text x="571.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.18%)</title><rect x="574" y="436" width="2" height="15" fill="rgb(212,212,6)"/><text x="577.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="574" y="452" width="2" height="15" fill="rgb(235,87,11)"/><text x="577.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="574" y="468" width="2" height="15" fill="rgb(205,121,52)"/><text x="577.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="574" y="484" width="2" height="15" fill="rgb(228,22,36)"/><text x="577.00" y="494.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="574" y="500" width="2" height="15" fill="rgb(241,195,25)"/><text x="577.00" y="510.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.18%)</title><rect x="574" y="516" width="2" height="15" fill="rgb(224,106,24)"/><text x="577.00" y="526.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.18%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(227,2,35)"/><text x="579.00" y="398.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (242 samples, 43.37%)</title><rect x="71" y="164" width="512" height="15" fill="rgb(225,1,49)"/><text x="74.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (233 samples, 41.76%)</title><rect x="90" y="180" width="493" height="15" fill="rgb(230,180,3)"/><text x="93.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (49 samples, 8.78%)</title><rect x="479" y="196" width="104" height="15" fill="rgb(220,98,51)"/><text x="482.00" y="206.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (48 samples, 8.60%)</title><rect x="481" y="212" width="102" height="15" fill="rgb(242,122,43)"/><text x="484.00" y="222.50">_run (mlprod..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (47 samples, 8.42%)</title><rect x="483" y="228" width="100" height="15" fill="rgb(239,36,13)"/><text x="486.00" y="238.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (47 samples, 8.42%)</title><rect x="483" y="244" width="100" height="15" fill="rgb(207,179,37)"/><text x="486.00" y="254.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py) (47 samples, 8.42%)</title><rect x="483" y="260" width="100" height="15" fill="rgb(228,193,10)"/><text x="486.00" y="270.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (47 samples, 8.42%)</title><rect x="483" y="276" width="100" height="15" fill="rgb(240,135,29)"/><text x="486.00" y="286.50">_wrapfunc (n..</text></g><g><title>array_clip (methods.c) (47 samples, 8.42%)</title><rect x="483" y="292" width="100" height="15" fill="rgb(229,220,27)"/><text x="486.00" y="302.50">array_clip (..</text></g><g><title>forward_ndarray_method (methods.c) (47 samples, 8.42%)</title><rect x="483" y="308" width="100" height="15" fill="rgb(230,127,13)"/><text x="486.00" y="318.50">forward_ndar..</text></g><g><title>_clip (numpy/core/_methods.py) (45 samples, 8.06%)</title><rect x="487" y="324" width="96" height="15" fill="rgb(245,108,31)"/><text x="490.00" y="334.50">_clip (nump..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (25 samples, 4.48%)</title><rect x="530" y="340" width="53" height="15" fill="rgb(211,183,45)"/><text x="533.00" y="350.50">_clip..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.54%)</title><rect x="576" y="356" width="7" height="15" fill="rgb(240,191,6)"/><text x="579.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.54%)</title><rect x="576" y="372" width="7" height="15" fill="rgb(248,90,34)"/><text x="579.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="578" y="388" width="5" height="15" fill="rgb(241,6,39)"/><text x="581.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="580" y="404" width="3" height="15" fill="rgb(207,96,47)"/><text x="583.00" y="414.50"></text></g><g><title>0x7f079a865d07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="583" y="180" width="2" height="15" fill="rgb(209,65,25)"/><text x="586.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="585" y="180" width="2" height="15" fill="rgb(249,29,49)"/><text x="588.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="585" y="196" width="2" height="15" fill="rgb(218,181,32)"/><text x="588.00" y="206.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (247 samples, 44.27%)</title><rect x="67" y="68" width="522" height="15" fill="rgb(228,167,25)"/><text x="70.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (247 samples, 44.27%)</title><rect x="67" y="84" width="522" height="15" fill="rgb(208,194,35)"/><text x="70.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.p..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (247 samples, 44.27%)</title><rect x="67" y="100" width="522" height="15" fill="rgb(238,136,8)"/><text x="70.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (247 samples, 44.27%)</title><rect x="67" y="116" width="522" height="15" fill="rgb(209,114,14)"/><text x="70.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (247 samples, 44.27%)</title><rect x="67" y="132" width="522" height="15" fill="rgb(248,124,11)"/><text x="70.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (246 samples, 44.09%)</title><rect x="69" y="148" width="520" height="15" fill="rgb(219,113,3)"/><text x="72.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.54%)</title><rect x="583" y="164" width="6" height="15" fill="rgb(252,4,33)"/><text x="586.00" y="174.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="587" y="180" width="2" height="15" fill="rgb(249,149,40)"/><text x="590.00" y="190.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="587" y="196" width="2" height="15" fill="rgb(218,205,43)"/><text x="590.00" y="206.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.18%)</title><rect x="587" y="212" width="2" height="15" fill="rgb(232,201,41)"/><text x="590.00" y="222.50"></text></g><g><title>0x7f079a865d07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="587" y="228" width="2" height="15" fill="rgb(245,153,35)"/><text x="590.00" y="238.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.36%)</title><rect x="589" y="164" width="4" height="15" fill="rgb(219,97,32)"/><text x="592.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (2 samples, 0.36%)</title><rect x="589" y="180" width="4" height="15" fill="rgb(253,226,32)"/><text x="592.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.36%)</title><rect x="589" y="196" width="4" height="15" fill="rgb(219,223,46)"/><text x="592.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.36%)</title><rect x="589" y="212" width="4" height="15" fill="rgb(237,107,44)"/><text x="592.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="591" y="228" width="2" height="15" fill="rgb(215,162,16)"/><text x="594.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="591" y="244" width="2" height="15" fill="rgb(216,66,38)"/><text x="594.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.18%)</title><rect x="591" y="260" width="2" height="15" fill="rgb(223,78,38)"/><text x="594.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.18%)</title><rect x="591" y="276" width="2" height="15" fill="rgb(241,217,14)"/><text x="594.00" y="286.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.18%)</title><rect x="593" y="164" width="2" height="15" fill="rgb(249,12,35)"/><text x="596.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="593" y="180" width="2" height="15" fill="rgb(230,147,10)"/><text x="596.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.18%)</title><rect x="593" y="196" width="2" height="15" fill="rgb(207,164,34)"/><text x="596.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.18%)</title><rect x="593" y="212" width="2" height="15" fill="rgb(221,109,46)"/><text x="596.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (4 samples, 0.72%)</title><rect x="619" y="212" width="8" height="15" fill="rgb(236,33,45)"/><text x="622.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="627" y="212" width="2" height="15" fill="rgb(220,149,25)"/><text x="630.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="627" y="228" width="2" height="15" fill="rgb(219,112,20)"/><text x="630.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="631" y="244" width="2" height="15" fill="rgb(209,110,28)"/><text x="634.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(215,69,28)"/><text x="634.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="631" y="276" width="2" height="15" fill="rgb(245,65,49)"/><text x="634.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="633" y="276" width="2" height="15" fill="rgb(219,201,51)"/><text x="636.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.18%)</title><rect x="633" y="292" width="2" height="15" fill="rgb(251,225,41)"/><text x="636.00" y="302.50"></text></g><g><title>type_num_unsigned_to_signed (convert_datatype.c) (1 samples, 0.18%)</title><rect x="633" y="308" width="2" height="15" fill="rgb(252,181,5)"/><text x="636.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="633" y="260" width="5" height="15" fill="rgb(212,36,11)"/><text x="636.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="635" y="276" width="3" height="15" fill="rgb(223,79,9)"/><text x="638.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.18%)</title><rect x="638" y="260" width="2" height="15" fill="rgb(206,69,36)"/><text x="641.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="640" y="276" width="2" height="15" fill="rgb(230,91,41)"/><text x="643.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.18%)</title><rect x="640" y="292" width="2" height="15" fill="rgb(243,215,27)"/><text x="643.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="640" y="308" width="2" height="15" fill="rgb(235,210,22)"/><text x="643.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="640" y="324" width="2" height="15" fill="rgb(231,3,27)"/><text x="643.00" y="334.50"></text></g><g><title>0x7f079a8861ef (libc-2.29.so) (1 samples, 0.18%)</title><rect x="640" y="340" width="2" height="15" fill="rgb(205,196,44)"/><text x="643.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.36%)</title><rect x="640" y="260" width="4" height="15" fill="rgb(244,63,28)"/><text x="643.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="642" y="276" width="2" height="15" fill="rgb(214,7,40)"/><text x="645.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="642" y="292" width="2" height="15" fill="rgb(244,12,25)"/><text x="645.00" y="302.50"></text></g><g><title>0x7f0799a877c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="642" y="308" width="2" height="15" fill="rgb(245,178,35)"/><text x="645.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="644" y="276" width="2" height="15" fill="rgb(253,65,24)"/><text x="647.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="644" y="292" width="2" height="15" fill="rgb(223,211,10)"/><text x="647.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="644" y="308" width="2" height="15" fill="rgb(217,112,47)"/><text x="647.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="644" y="324" width="2" height="15" fill="rgb(228,225,46)"/><text x="647.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="644" y="340" width="2" height="15" fill="rgb(224,57,44)"/><text x="647.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="644" y="260" width="6" height="15" fill="rgb(214,43,46)"/><text x="647.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.36%)</title><rect x="646" y="276" width="4" height="15" fill="rgb(254,171,29)"/><text x="649.00" y="286.50"></text></g><g><title>DOUBLE_multiply (loops.c.src) (1 samples, 0.18%)</title><rect x="648" y="292" width="2" height="15" fill="rgb(235,198,28)"/><text x="651.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="652" y="292" width="2" height="15" fill="rgb(239,91,2)"/><text x="655.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.18%)</title><rect x="652" y="308" width="2" height="15" fill="rgb(224,100,22)"/><text x="655.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.54%)</title><rect x="650" y="260" width="7" height="15" fill="rgb(248,151,9)"/><text x="653.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.54%)</title><rect x="650" y="276" width="7" height="15" fill="rgb(214,123,10)"/><text x="653.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="654" y="292" width="3" height="15" fill="rgb(245,204,38)"/><text x="657.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="654" y="308" width="3" height="15" fill="rgb(226,182,12)"/><text x="657.00" y="318.50"></text></g><g><title>0x7f0799a877c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="654" y="324" width="3" height="15" fill="rgb(211,72,16)"/><text x="657.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 2.15%)</title><rect x="633" y="244" width="26" height="15" fill="rgb(227,78,48)"/><text x="636.00" y="254.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="657" y="260" width="2" height="15" fill="rgb(227,8,39)"/><text x="660.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="657" y="276" width="2" height="15" fill="rgb(247,137,48)"/><text x="660.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="657" y="292" width="2" height="15" fill="rgb(241,91,31)"/><text x="660.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="659" y="244" width="2" height="15" fill="rgb(246,148,41)"/><text x="662.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.18%)</title><rect x="659" y="260" width="2" height="15" fill="rgb(249,33,3)"/><text x="662.00" y="270.50"></text></g><g><title>array_multiply (number.c) (16 samples, 2.87%)</title><rect x="629" y="212" width="34" height="15" fill="rgb(225,65,41)"/><text x="632.00" y="222.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.87%)</title><rect x="629" y="228" width="34" height="15" fill="rgb(213,43,39)"/><text x="632.00" y="238.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="661" y="244" width="2" height="15" fill="rgb(229,35,0)"/><text x="664.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="661" y="260" width="2" height="15" fill="rgb(217,16,27)"/><text x="664.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="661" y="276" width="2" height="15" fill="rgb(207,150,2)"/><text x="664.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="665" y="244" width="2" height="15" fill="rgb(210,225,36)"/><text x="668.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="665" y="260" width="2" height="15" fill="rgb(214,25,24)"/><text x="668.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="665" y="276" width="2" height="15" fill="rgb(233,119,50)"/><text x="668.00" y="286.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="667" y="260" width="4" height="15" fill="rgb(218,165,45)"/><text x="670.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="669" y="276" width="2" height="15" fill="rgb(252,223,49)"/><text x="672.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="669" y="292" width="2" height="15" fill="rgb(208,62,14)"/><text x="672.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.18%)</title><rect x="669" y="308" width="2" height="15" fill="rgb(245,48,49)"/><text x="672.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.18%)</title><rect x="669" y="324" width="2" height="15" fill="rgb(229,67,9)"/><text x="672.00" y="334.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.18%)</title><rect x="671" y="260" width="3" height="15" fill="rgb(248,210,9)"/><text x="674.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.36%)</title><rect x="674" y="292" width="4" height="15" fill="rgb(227,218,42)"/><text x="677.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="676" y="308" width="2" height="15" fill="rgb(221,117,20)"/><text x="679.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.08%)</title><rect x="667" y="244" width="13" height="15" fill="rgb(208,160,18)"/><text x="670.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="674" y="260" width="6" height="15" fill="rgb(234,1,41)"/><text x="677.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="674" y="276" width="6" height="15" fill="rgb(254,169,13)"/><text x="677.00" y="286.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.18%)</title><rect x="678" y="292" width="2" height="15" fill="rgb(238,154,32)"/><text x="681.00" y="302.50"></text></g><g><title>array_subtract (number.c) (9 samples, 1.61%)</title><rect x="663" y="212" width="19" height="15" fill="rgb(244,207,54)"/><text x="666.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.43%)</title><rect x="665" y="228" width="17" height="15" fill="rgb(253,206,48)"/><text x="668.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.18%)</title><rect x="680" y="244" width="2" height="15" fill="rgb(248,70,54)"/><text x="683.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="684" y="276" width="2" height="15" fill="rgb(225,176,52)"/><text x="687.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="684" y="292" width="2" height="15" fill="rgb(237,196,24)"/><text x="687.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="684" y="308" width="2" height="15" fill="rgb(228,133,22)"/><text x="687.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.18%)</title><rect x="684" y="324" width="2" height="15" fill="rgb(227,210,47)"/><text x="687.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="684" y="340" width="2" height="15" fill="rgb(249,97,50)"/><text x="687.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="688" y="340" width="2" height="15" fill="rgb(243,143,44)"/><text x="691.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.18%)</title><rect x="690" y="340" width="3" height="15" fill="rgb(239,136,27)"/><text x="693.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="693" y="340" width="2" height="15" fill="rgb(230,196,14)"/><text x="696.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.72%)</title><rect x="688" y="324" width="9" height="15" fill="rgb(212,163,10)"/><text x="691.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="695" y="340" width="2" height="15" fill="rgb(252,90,17)"/><text x="698.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.18%)</title><rect x="697" y="324" width="2" height="15" fill="rgb(252,212,20)"/><text x="700.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.18%)</title><rect x="697" y="340" width="2" height="15" fill="rgb(236,89,14)"/><text x="700.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="697" y="356" width="2" height="15" fill="rgb(249,31,21)"/><text x="700.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="697" y="372" width="2" height="15" fill="rgb(209,28,24)"/><text x="700.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="697" y="388" width="2" height="15" fill="rgb(248,203,52)"/><text x="700.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="697" y="404" width="2" height="15" fill="rgb(232,172,52)"/><text x="700.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.25%)</title><rect x="686" y="308" width="15" height="15" fill="rgb(252,144,18)"/><text x="689.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="699" y="324" width="2" height="15" fill="rgb(218,4,4)"/><text x="702.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="699" y="340" width="2" height="15" fill="rgb(240,189,10)"/><text x="702.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.61%)</title><rect x="686" y="292" width="19" height="15" fill="rgb(252,38,34)"/><text x="689.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.36%)</title><rect x="701" y="308" width="4" height="15" fill="rgb(229,205,44)"/><text x="704.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="703" y="324" width="2" height="15" fill="rgb(220,23,10)"/><text x="706.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="703" y="340" width="2" height="15" fill="rgb(233,41,41)"/><text x="706.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.18%)</title><rect x="703" y="356" width="2" height="15" fill="rgb(216,216,41)"/><text x="706.00" y="366.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.18%)</title><rect x="703" y="372" width="2" height="15" fill="rgb(243,212,42)"/><text x="706.00" y="382.50"></text></g><g><title>array_sum (methods.c) (12 samples, 2.15%)</title><rect x="682" y="212" width="25" height="15" fill="rgb(219,145,24)"/><text x="685.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 2.15%)</title><rect x="682" y="228" width="25" height="15" fill="rgb(206,226,24)"/><text x="685.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.15%)</title><rect x="682" y="244" width="25" height="15" fill="rgb(236,218,1)"/><text x="685.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 1.97%)</title><rect x="684" y="260" width="23" height="15" fill="rgb(205,160,45)"/><text x="687.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 1.79%)</title><rect x="686" y="276" width="21" height="15" fill="rgb(219,91,8)"/><text x="689.00" y="286.50"></text></g><g><title>_wheremask_converter (ufunc_object.c) (1 samples, 0.18%)</title><rect x="705" y="292" width="2" height="15" fill="rgb(247,17,19)"/><text x="708.00" y="302.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="712" y="228" width="2" height="15" fill="rgb(212,207,29)"/><text x="715.00" y="238.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.18%)</title><rect x="741" y="420" width="2" height="15" fill="rgb(230,177,0)"/><text x="744.00" y="430.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.54%)</title><rect x="741" y="388" width="7" height="15" fill="rgb(233,30,27)"/><text x="744.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.54%)</title><rect x="741" y="404" width="7" height="15" fill="rgb(216,8,2)"/><text x="744.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.36%)</title><rect x="743" y="420" width="5" height="15" fill="rgb(237,161,53)"/><text x="746.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 0.90%)</title><rect x="741" y="356" width="11" height="15" fill="rgb(254,4,44)"/><text x="744.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 0.90%)</title><rect x="741" y="372" width="11" height="15" fill="rgb(242,174,26)"/><text x="744.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.36%)</title><rect x="748" y="388" width="4" height="15" fill="rgb(243,174,44)"/><text x="751.00" y="398.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.18%)</title><rect x="752" y="420" width="2" height="15" fill="rgb(246,53,31)"/><text x="755.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="752" y="372" width="6" height="15" fill="rgb(208,70,44)"/><text x="755.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.54%)</title><rect x="752" y="388" width="6" height="15" fill="rgb(254,43,40)"/><text x="755.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.54%)</title><rect x="752" y="404" width="6" height="15" fill="rgb(209,143,9)"/><text x="755.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.36%)</title><rect x="754" y="420" width="4" height="15" fill="rgb(241,168,15)"/><text x="757.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="756" y="436" width="2" height="15" fill="rgb(252,151,26)"/><text x="759.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.18%)</title><rect x="758" y="372" width="2" height="15" fill="rgb(232,121,27)"/><text x="761.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="758" y="388" width="2" height="15" fill="rgb(239,186,48)"/><text x="761.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="758" y="404" width="2" height="15" fill="rgb(247,182,42)"/><text x="761.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.90%)</title><rect x="752" y="356" width="10" height="15" fill="rgb(215,169,27)"/><text x="755.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="760" y="372" width="2" height="15" fill="rgb(218,38,43)"/><text x="763.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="760" y="388" width="2" height="15" fill="rgb(226,229,9)"/><text x="763.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="760" y="404" width="2" height="15" fill="rgb(213,37,2)"/><text x="763.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (12 samples, 2.15%)</title><rect x="739" y="324" width="25" height="15" fill="rgb(240,124,54)"/><text x="742.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.97%)</title><rect x="741" y="340" width="23" height="15" fill="rgb(235,80,38)"/><text x="744.00" y="350.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.18%)</title><rect x="762" y="356" width="2" height="15" fill="rgb(211,57,36)"/><text x="765.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.36%)</title><rect x="764" y="324" width="5" height="15" fill="rgb(224,53,50)"/><text x="767.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="786" y="340" width="6" height="15" fill="rgb(225,33,16)"/><text x="789.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="815" y="388" width="2" height="15" fill="rgb(227,161,11)"/><text x="818.00" y="398.50"></text></g><g><title>PyArray_XDECREF (refcount.c) (1 samples, 0.18%)</title><rect x="815" y="404" width="2" height="15" fill="rgb(205,106,12)"/><text x="818.00" y="414.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (16 samples, 2.87%)</title><rect x="792" y="340" width="34" height="15" fill="rgb(219,66,7)"/><text x="795.00" y="350.50">nd..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 2.51%)</title><rect x="796" y="356" width="30" height="15" fill="rgb(240,107,53)"/><text x="799.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (13 samples, 2.33%)</title><rect x="798" y="372" width="28" height="15" fill="rgb(209,228,13)"/><text x="801.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.72%)</title><rect x="817" y="388" width="9" height="15" fill="rgb(227,94,2)"/><text x="820.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.72%)</title><rect x="817" y="404" width="9" height="15" fill="rgb(210,187,1)"/><text x="820.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 0.72%)</title><rect x="817" y="420" width="9" height="15" fill="rgb(226,181,9)"/><text x="820.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.72%)</title><rect x="817" y="436" width="9" height="15" fill="rgb(231,28,5)"/><text x="820.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (4 samples, 0.72%)</title><rect x="817" y="452" width="9" height="15" fill="rgb(209,107,9)"/><text x="820.00" y="462.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.18%)</title><rect x="826" y="372" width="2" height="15" fill="rgb(229,100,53)"/><text x="829.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="828" y="372" width="2" height="15" fill="rgb(250,75,50)"/><text x="831.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="828" y="388" width="2" height="15" fill="rgb(237,179,23)"/><text x="831.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="828" y="404" width="2" height="15" fill="rgb(226,166,7)"/><text x="831.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.72%)</title><rect x="830" y="372" width="8" height="15" fill="rgb(230,134,1)"/><text x="833.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.36%)</title><rect x="834" y="388" width="4" height="15" fill="rgb(214,24,18)"/><text x="837.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="836" y="404" width="2" height="15" fill="rgb(233,155,9)"/><text x="839.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.18%)</title><rect x="836" y="420" width="2" height="15" fill="rgb(235,154,14)"/><text x="839.00" y="430.50"></text></g><g><title>npy_casting_to_string (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="843" y="388" width="2" height="15" fill="rgb(227,51,38)"/><text x="846.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="845" y="404" width="2" height="15" fill="rgb(244,70,46)"/><text x="848.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="845" y="420" width="2" height="15" fill="rgb(247,229,31)"/><text x="848.00" y="430.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (63 samples, 11.29%)</title><rect x="716" y="244" width="133" height="15" fill="rgb(219,139,36)"/><text x="719.00" y="254.50">clip (numpy/core..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (63 samples, 11.29%)</title><rect x="716" y="260" width="133" height="15" fill="rgb(210,93,14)"/><text x="719.00" y="270.50">_wrapfunc (numpy..</text></g><g><title>array_clip (methods.c) (61 samples, 10.93%)</title><rect x="720" y="276" width="129" height="15" fill="rgb(234,150,32)"/><text x="723.00" y="286.50">array_clip (meth..</text></g><g><title>forward_ndarray_method (methods.c) (61 samples, 10.93%)</title><rect x="720" y="292" width="129" height="15" fill="rgb(252,135,54)"/><text x="723.00" y="302.50">forward_ndarray_..</text></g><g><title>_clip (numpy/core/_methods.py) (61 samples, 10.93%)</title><rect x="720" y="308" width="129" height="15" fill="rgb(234,112,18)"/><text x="723.00" y="318.50">_clip (numpy/cor..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (38 samples, 6.81%)</title><rect x="769" y="324" width="80" height="15" fill="rgb(224,204,8)"/><text x="772.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.97%)</title><rect x="826" y="340" width="23" height="15" fill="rgb(241,206,16)"/><text x="829.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.97%)</title><rect x="826" y="356" width="23" height="15" fill="rgb(222,200,18)"/><text x="829.00" y="366.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (5 samples, 0.90%)</title><rect x="838" y="372" width="11" height="15" fill="rgb(242,55,43)"/><text x="841.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="845" y="388" width="4" height="15" fill="rgb(232,176,11)"/><text x="848.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="847" y="404" width="2" height="15" fill="rgb(210,68,26)"/><text x="850.00" y="414.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (69 samples, 12.37%)</title><rect x="707" y="212" width="146" height="15" fill="rgb(238,74,25)"/><text x="710.00" y="222.50">clip (&lt;__array_fun..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (66 samples, 11.83%)</title><rect x="714" y="228" width="139" height="15" fill="rgb(220,215,33)"/><text x="717.00" y="238.50">array_implement_a..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.36%)</title><rect x="849" y="244" width="4" height="15" fill="rgb(221,48,18)"/><text x="852.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.36%)</title><rect x="849" y="260" width="4" height="15" fill="rgb(240,19,34)"/><text x="852.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.36%)</title><rect x="849" y="276" width="4" height="15" fill="rgb(223,203,4)"/><text x="852.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.36%)</title><rect x="849" y="292" width="4" height="15" fill="rgb(214,181,20)"/><text x="852.00" y="302.50"></text></g><g><title>0x7f0799a880a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="874" y="308" width="3" height="15" fill="rgb(218,80,50)"/><text x="877.00" y="318.50"></text></g><g><title>0x7f07742b7225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="872" y="276" width="7" height="15" fill="rgb(227,62,40)"/><text x="875.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (3 samples, 0.54%)</title><rect x="872" y="292" width="7" height="15" fill="rgb(237,87,29)"/><text x="875.00" y="302.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="877" y="308" width="2" height="15" fill="rgb(216,54,8)"/><text x="880.00" y="318.50"></text></g><g><title>0x7f077429b604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="879" y="308" width="2" height="15" fill="rgb(222,164,54)"/><text x="882.00" y="318.50"></text></g><g><title>0x7f0774291243 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="881" y="324" width="2" height="15" fill="rgb(247,115,41)"/><text x="884.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(235,85,40)"/><text x="886.00" y="366.50"></text></g><g><title>0x7f077429bd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.90%)</title><rect x="879" y="292" width="10" height="15" fill="rgb(236,132,37)"/><text x="882.00" y="302.50"></text></g><g><title>0x7f077429b666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.72%)</title><rect x="881" y="308" width="8" height="15" fill="rgb(247,39,15)"/><text x="884.00" y="318.50"></text></g><g><title>0x7f07742912fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="883" y="324" width="6" height="15" fill="rgb(211,100,46)"/><text x="886.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.54%)</title><rect x="883" y="340" width="6" height="15" fill="rgb(225,107,53)"/><text x="886.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.36%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(242,165,49)"/><text x="888.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.18%)</title><rect x="887" y="372" width="2" height="15" fill="rgb(232,45,9)"/><text x="890.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.18%)</title><rect x="887" y="388" width="2" height="15" fill="rgb(236,96,4)"/><text x="890.00" y="398.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.18%)</title><rect x="887" y="404" width="2" height="15" fill="rgb(236,60,39)"/><text x="890.00" y="414.50"></text></g><g><title>0x7f07742b72df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.08%)</title><rect x="879" y="276" width="12" height="15" fill="rgb(247,61,8)"/><text x="882.00" y="286.50"></text></g><g><title>0x7f077429be72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="889" y="292" width="2" height="15" fill="rgb(236,29,40)"/><text x="892.00" y="302.50"></text></g><g><title>0x7f077428ef24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="889" y="308" width="2" height="15" fill="rgb(235,56,32)"/><text x="892.00" y="318.50"></text></g><g><title>0x7f07742b74b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="891" y="276" width="2" height="15" fill="rgb(237,149,52)"/><text x="894.00" y="286.50"></text></g><g><title>0x7f07742b7511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="893" y="276" width="3" height="15" fill="rgb(216,37,15)"/><text x="896.00" y="286.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.18%)</title><rect x="900" y="308" width="2" height="15" fill="rgb(216,209,3)"/><text x="903.00" y="318.50"></text></g><g><title>0x7f07742b7592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.72%)</title><rect x="896" y="276" width="8" height="15" fill="rgb(253,141,13)"/><text x="899.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 0.72%)</title><rect x="896" y="292" width="8" height="15" fill="rgb(243,39,30)"/><text x="899.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="902" y="308" width="2" height="15" fill="rgb(249,31,11)"/><text x="905.00" y="318.50"></text></g><g><title>0x7f07742b7644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="904" y="276" width="2" height="15" fill="rgb(224,145,37)"/><text x="907.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="904" y="292" width="2" height="15" fill="rgb(248,17,52)"/><text x="907.00" y="302.50"></text></g><g><title>0x7f07742b8405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.05%)</title><rect x="872" y="260" width="36" height="15" fill="rgb(206,202,28)"/><text x="875.00" y="270.50">0x7..</text></g><g><title>0x7f07742b792f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="906" y="276" width="2" height="15" fill="rgb(212,222,30)"/><text x="909.00" y="286.50"></text></g><g><title>0x7f077428c9af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="906" y="292" width="2" height="15" fill="rgb(249,134,53)"/><text x="909.00" y="302.50"></text></g><g><title>0x7f07742a8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 3.23%)</title><rect x="872" y="244" width="38" height="15" fill="rgb(241,123,48)"/><text x="875.00" y="254.50">0x7..</text></g><g><title>0x7f07742b8540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="908" y="260" width="2" height="15" fill="rgb(243,38,48)"/><text x="911.00" y="270.50"></text></g><g><title>0x7f077428d2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="908" y="276" width="2" height="15" fill="rgb(243,22,3)"/><text x="911.00" y="286.50"></text></g><g><title>0x7f077428c4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="908" y="292" width="2" height="15" fill="rgb(245,0,32)"/><text x="911.00" y="302.50"></text></g><g><title>0x7f0774283900 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="908" y="308" width="2" height="15" fill="rgb(239,42,18)"/><text x="911.00" y="318.50"></text></g><g><title>0x7f07742a905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="910" y="244" width="5" height="15" fill="rgb(220,188,0)"/><text x="913.00" y="254.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.36%)</title><rect x="910" y="260" width="5" height="15" fill="rgb(241,7,12)"/><text x="913.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.18%)</title><rect x="912" y="276" width="3" height="15" fill="rgb(240,28,27)"/><text x="915.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.18%)</title><rect x="912" y="292" width="3" height="15" fill="rgb(218,153,51)"/><text x="915.00" y="302.50"></text></g><g><title>0x7f07742a9062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="915" y="244" width="2" height="15" fill="rgb(248,169,18)"/><text x="918.00" y="254.50"></text></g><g><title>0x7f07742a914f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="917" y="244" width="2" height="15" fill="rgb(226,212,34)"/><text x="920.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="917" y="260" width="2" height="15" fill="rgb(221,63,38)"/><text x="920.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.18%)</title><rect x="917" y="276" width="2" height="15" fill="rgb(232,154,16)"/><text x="920.00" y="286.50"></text></g><g><title>0x7f07742a918f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="919" y="244" width="2" height="15" fill="rgb(245,105,22)"/><text x="922.00" y="254.50"></text></g><g><title>0x7f07742a9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 4.48%)</title><rect x="872" y="228" width="53" height="15" fill="rgb(207,2,21)"/><text x="875.00" y="238.50">0x7f0..</text></g><g><title>0x7f07742a9328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="921" y="244" width="4" height="15" fill="rgb(241,159,39)"/><text x="924.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.36%)</title><rect x="921" y="260" width="4" height="15" fill="rgb(226,198,29)"/><text x="924.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.36%)</title><rect x="921" y="276" width="4" height="15" fill="rgb(214,30,7)"/><text x="924.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.36%)</title><rect x="959" y="260" width="4" height="15" fill="rgb(230,101,13)"/><text x="962.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.18%)</title><rect x="963" y="260" width="2" height="15" fill="rgb(205,156,8)"/><text x="966.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.18%)</title><rect x="965" y="260" width="2" height="15" fill="rgb(248,53,17)"/><text x="968.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.08%)</title><rect x="967" y="260" width="13" height="15" fill="rgb(231,221,6)"/><text x="970.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="974" y="276" width="6" height="15" fill="rgb(218,207,1)"/><text x="977.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="980" y="260" width="2" height="15" fill="rgb(244,43,32)"/><text x="983.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 2.15%)</title><rect x="982" y="260" width="26" height="15" fill="rgb(233,165,47)"/><text x="985.00" y="270.50">_..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 0.72%)</title><rect x="999" y="276" width="9" height="15" fill="rgb(243,75,26)"/><text x="1002.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.18%)</title><rect x="1006" y="292" width="2" height="15" fill="rgb(240,188,40)"/><text x="1009.00" y="302.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.18%)</title><rect x="1008" y="260" width="2" height="15" fill="rgb(244,43,14)"/><text x="1011.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.18%)</title><rect x="1008" y="276" width="2" height="15" fill="rgb(236,156,37)"/><text x="1011.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.18%)</title><rect x="1008" y="292" width="2" height="15" fill="rgb(245,63,7)"/><text x="1011.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.18%)</title><rect x="1008" y="308" width="2" height="15" fill="rgb(210,42,40)"/><text x="1011.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.18%)</title><rect x="1008" y="324" width="2" height="15" fill="rgb(229,160,16)"/><text x="1011.00" y="334.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.18%)</title><rect x="1010" y="260" width="2" height="15" fill="rgb(234,218,1)"/><text x="1013.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (50 samples, 8.96%)</title><rect x="929" y="244" width="106" height="15" fill="rgb(227,35,49)"/><text x="932.00" y="254.50">check_array ..</text></g><g><title>simplefilter (warnings.py) (11 samples, 1.97%)</title><rect x="1012" y="260" width="23" height="15" fill="rgb(237,8,40)"/><text x="1015.00" y="270.50">s..</text></g><g><title>_add_filter (warnings.py) (10 samples, 1.79%)</title><rect x="1014" y="276" width="21" height="15" fill="rgb(236,172,8)"/><text x="1017.00" y="286.50"></text></g><g><title>0x7f079a87be7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1033" y="292" width="2" height="15" fill="rgb(238,95,4)"/><text x="1036.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (53 samples, 9.50%)</title><rect x="925" y="228" width="112" height="15" fill="rgb(230,228,54)"/><text x="928.00" y="238.50">_validate_X_p..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.18%)</title><rect x="1035" y="244" width="2" height="15" fill="rgb(244,85,12)"/><text x="1038.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.36%)</title><rect x="1039" y="244" width="5" height="15" fill="rgb(234,95,19)"/><text x="1042.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="1041" y="260" width="3" height="15" fill="rgb(233,225,3)"/><text x="1044.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (4 samples, 0.72%)</title><rect x="1037" y="228" width="9" height="15" fill="rgb(237,183,44)"/><text x="1040.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.18%)</title><rect x="1044" y="244" width="2" height="15" fill="rgb(226,28,10)"/><text x="1047.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="1044" y="260" width="2" height="15" fill="rgb(252,75,24)"/><text x="1047.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.18%)</title><rect x="1046" y="260" width="2" height="15" fill="rgb(220,26,42)"/><text x="1049.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1048" y="276" width="2" height="15" fill="rgb(237,227,37)"/><text x="1051.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.36%)</title><rect x="1050" y="276" width="4" height="15" fill="rgb(246,118,4)"/><text x="1053.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.36%)</title><rect x="1050" y="292" width="4" height="15" fill="rgb(210,59,36)"/><text x="1053.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="1058" y="308" width="3" height="15" fill="rgb(249,138,3)"/><text x="1061.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1061" y="308" width="2" height="15" fill="rgb(248,14,44)"/><text x="1064.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.43%)</title><rect x="1048" y="260" width="17" height="15" fill="rgb(228,133,34)"/><text x="1051.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.90%)</title><rect x="1054" y="276" width="11" height="15" fill="rgb(209,39,3)"/><text x="1057.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.54%)</title><rect x="1058" y="292" width="7" height="15" fill="rgb(252,161,26)"/><text x="1061.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="1063" y="308" width="2" height="15" fill="rgb(238,194,27)"/><text x="1066.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="1063" y="324" width="2" height="15" fill="rgb(234,70,18)"/><text x="1066.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="1063" y="340" width="2" height="15" fill="rgb(244,226,17)"/><text x="1066.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c) (10 samples, 1.79%)</title><rect x="1046" y="228" width="21" height="15" fill="rgb(221,34,26)"/><text x="1049.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.79%)</title><rect x="1046" y="244" width="21" height="15" fill="rgb(231,85,51)"/><text x="1049.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1065" y="260" width="2" height="15" fill="rgb(232,156,24)"/><text x="1068.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1065" y="276" width="2" height="15" fill="rgb(206,80,36)"/><text x="1068.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1065" y="292" width="2" height="15" fill="rgb(211,155,25)"/><text x="1068.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.18%)</title><rect x="1067" y="244" width="2" height="15" fill="rgb(210,154,6)"/><text x="1070.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.18%)</title><rect x="1067" y="260" width="2" height="15" fill="rgb(243,4,23)"/><text x="1070.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1067" y="276" width="2" height="15" fill="rgb(213,192,45)"/><text x="1070.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1067" y="292" width="2" height="15" fill="rgb(218,9,39)"/><text x="1070.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.54%)</title><rect x="1067" y="228" width="6" height="15" fill="rgb(238,208,15)"/><text x="1070.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.36%)</title><rect x="1069" y="244" width="4" height="15" fill="rgb(246,74,23)"/><text x="1072.00" y="254.50"></text></g><g><title>0x7f079a943fc2 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1086" y="372" width="2" height="15" fill="rgb(248,158,28)"/><text x="1089.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (6 samples, 1.08%)</title><rect x="1080" y="324" width="12" height="15" fill="rgb(227,41,24)"/><text x="1083.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (6 samples, 1.08%)</title><rect x="1080" y="340" width="12" height="15" fill="rgb(235,206,48)"/><text x="1083.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (6 samples, 1.08%)</title><rect x="1080" y="356" width="12" height="15" fill="rgb(242,181,41)"/><text x="1083.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.36%)</title><rect x="1088" y="372" width="4" height="15" fill="rgb(246,17,32)"/><text x="1091.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (7 samples, 1.25%)</title><rect x="1080" y="292" width="14" height="15" fill="rgb(220,38,5)"/><text x="1083.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (7 samples, 1.25%)</title><rect x="1080" y="308" width="14" height="15" fill="rgb(215,155,11)"/><text x="1083.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="1092" y="324" width="2" height="15" fill="rgb(206,191,54)"/><text x="1095.00" y="334.50"></text></g><g><title>0x7f079a87b757 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1099" y="308" width="2" height="15" fill="rgb(248,51,35)"/><text x="1102.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="1101" y="308" width="2" height="15" fill="rgb(249,121,9)"/><text x="1104.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.18%)</title><rect x="1101" y="324" width="2" height="15" fill="rgb(217,95,47)"/><text x="1104.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1107" y="356" width="2" height="15" fill="rgb(234,97,13)"/><text x="1110.00" y="366.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1109" y="356" width="2" height="15" fill="rgb(216,152,10)"/><text x="1112.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.54%)</title><rect x="1107" y="340" width="6" height="15" fill="rgb(246,61,10)"/><text x="1110.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1111" y="356" width="2" height="15" fill="rgb(231,165,45)"/><text x="1114.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1111" y="372" width="2" height="15" fill="rgb(223,127,0)"/><text x="1114.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1113" y="372" width="2" height="15" fill="rgb(206,101,39)"/><text x="1116.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1113" y="388" width="2" height="15" fill="rgb(219,120,26)"/><text x="1116.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="1113" y="404" width="2" height="15" fill="rgb(227,66,8)"/><text x="1116.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="1113" y="420" width="2" height="15" fill="rgb(217,49,27)"/><text x="1116.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.54%)</title><rect x="1113" y="340" width="7" height="15" fill="rgb(226,155,49)"/><text x="1116.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.54%)</title><rect x="1113" y="356" width="7" height="15" fill="rgb(229,192,3)"/><text x="1116.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.36%)</title><rect x="1115" y="372" width="5" height="15" fill="rgb(209,134,29)"/><text x="1118.00" y="382.50"></text></g><g><title>0x7f079a807318 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1118" y="388" width="2" height="15" fill="rgb(224,7,29)"/><text x="1121.00" y="398.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="1120" y="388" width="2" height="15" fill="rgb(218,105,43)"/><text x="1123.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.61%)</title><rect x="1105" y="324" width="19" height="15" fill="rgb(235,114,33)"/><text x="1108.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.36%)</title><rect x="1120" y="340" width="4" height="15" fill="rgb(208,120,26)"/><text x="1123.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.36%)</title><rect x="1120" y="356" width="4" height="15" fill="rgb(251,185,46)"/><text x="1123.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.36%)</title><rect x="1120" y="372" width="4" height="15" fill="rgb(250,173,10)"/><text x="1123.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="1122" y="388" width="2" height="15" fill="rgb(213,106,39)"/><text x="1125.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="1122" y="404" width="2" height="15" fill="rgb(240,83,17)"/><text x="1125.00" y="414.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1124" y="324" width="2" height="15" fill="rgb(224,118,17)"/><text x="1127.00" y="334.50"></text></g><g><title>array_sum (methods.c) (27 samples, 4.84%)</title><rect x="1073" y="228" width="57" height="15" fill="rgb(213,207,53)"/><text x="1076.00" y="238.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (27 samples, 4.84%)</title><rect x="1073" y="244" width="57" height="15" fill="rgb(206,80,5)"/><text x="1076.00" y="254.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (24 samples, 4.30%)</title><rect x="1080" y="260" width="50" height="15" fill="rgb(217,163,49)"/><text x="1083.00" y="270.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (24 samples, 4.30%)</title><rect x="1080" y="276" width="50" height="15" fill="rgb(247,31,43)"/><text x="1083.00" y="286.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (17 samples, 3.05%)</title><rect x="1094" y="292" width="36" height="15" fill="rgb(232,122,40)"/><text x="1097.00" y="302.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 2.33%)</title><rect x="1103" y="308" width="27" height="15" fill="rgb(216,76,52)"/><text x="1106.00" y="318.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.36%)</title><rect x="1126" y="324" width="4" height="15" fill="rgb(213,195,38)"/><text x="1129.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="1126" y="340" width="4" height="15" fill="rgb(208,45,52)"/><text x="1129.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="1126" y="356" width="4" height="15" fill="rgb(219,165,46)"/><text x="1129.00" y="366.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1128" y="372" width="2" height="15" fill="rgb(230,38,10)"/><text x="1131.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 1.61%)</title><rect x="1135" y="244" width="19" height="15" fill="rgb(208,58,22)"/><text x="1138.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.54%)</title><rect x="1147" y="260" width="7" height="15" fill="rgb(205,141,7)"/><text x="1150.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 2.69%)</title><rect x="1130" y="228" width="32" height="15" fill="rgb(225,12,6)"/><text x="1133.00" y="238.50">ch..</text></g><g><title>isclass (inspect.py) (4 samples, 0.72%)</title><rect x="1154" y="244" width="8" height="15" fill="rgb(237,36,52)"/><text x="1157.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1162" y="260" width="2" height="15" fill="rgb(243,199,38)"/><text x="1165.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.18%)</title><rect x="1164" y="292" width="2" height="15" fill="rgb(232,118,14)"/><text x="1167.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(253,141,49)"/><text x="1169.00" y="318.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="1166" y="324" width="2" height="15" fill="rgb(224,11,52)"/><text x="1169.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.36%)</title><rect x="1166" y="292" width="4" height="15" fill="rgb(237,100,46)"/><text x="1169.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1168" y="308" width="2" height="15" fill="rgb(232,42,35)"/><text x="1171.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1168" y="324" width="2" height="15" fill="rgb(220,17,44)"/><text x="1171.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="1168" y="340" width="2" height="15" fill="rgb(240,104,16)"/><text x="1171.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.18%)</title><rect x="1168" y="356" width="2" height="15" fill="rgb(242,148,54)"/><text x="1171.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (151 samples, 27.06%)</title><rect x="853" y="212" width="320" height="15" fill="rgb(216,78,36)"/><text x="856.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.90%)</title><rect x="1162" y="228" width="11" height="15" fill="rgb(249,117,38)"/><text x="1165.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.90%)</title><rect x="1162" y="244" width="11" height="15" fill="rgb(207,77,40)"/><text x="1165.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1164" y="260" width="9" height="15" fill="rgb(213,82,22)"/><text x="1167.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1164" y="276" width="9" height="15" fill="rgb(240,164,27)"/><text x="1167.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.18%)</title><rect x="1170" y="292" width="3" height="15" fill="rgb(207,196,24)"/><text x="1173.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1177" y="244" width="2" height="15" fill="rgb(213,84,30)"/><text x="1180.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(229,221,28)"/><text x="1180.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (277 samples, 49.64%)</title><rect x="595" y="180" width="586" height="15" fill="rgb(210,90,26)"/><text x="598.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (277 samples, 49.64%)</title><rect x="595" y="196" width="586" height="15" fill="rgb(225,19,20)"/><text x="598.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1173" y="212" width="8" height="15" fill="rgb(224,49,14)"/><text x="1176.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1173" y="228" width="8" height="15" fill="rgb(215,116,45)"/><text x="1176.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1179" y="244" width="2" height="15" fill="rgb(242,35,5)"/><text x="1182.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1179" y="260" width="2" height="15" fill="rgb(241,170,4)"/><text x="1182.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1179" y="276" width="2" height="15" fill="rgb(251,182,27)"/><text x="1182.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="1179" y="292" width="2" height="15" fill="rgb(223,191,41)"/><text x="1182.00" y="302.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (281 samples, 50.36%)</title><rect x="589" y="68" width="594" height="15" fill="rgb(222,136,1)"/><text x="592.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (281 samples, 50.36%)</title><rect x="589" y="84" width="594" height="15" fill="rgb(214,156,52)"/><text x="592.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (281 samples, 50.36%)</title><rect x="589" y="100" width="594" height="15" fill="rgb(252,108,45)"/><text x="592.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (281 samples, 50.36%)</title><rect x="589" y="116" width="594" height="15" fill="rgb(248,45,44)"/><text x="592.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (281 samples, 50.36%)</title><rect x="589" y="132" width="594" height="15" fill="rgb(210,43,1)"/><text x="592.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (281 samples, 50.36%)</title><rect x="589" y="148" width="594" height="15" fill="rgb(218,202,14)"/><text x="592.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (278 samples, 49.82%)</title><rect x="595" y="164" width="588" height="15" fill="rgb(208,162,9)"/><text x="598.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_add (number.c) (1 samples, 0.18%)</title><rect x="1181" y="180" width="2" height="15" fill="rgb(233,29,40)"/><text x="1184.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1181" y="196" width="2" height="15" fill="rgb(207,149,51)"/><text x="1184.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1181" y="212" width="2" height="15" fill="rgb(217,91,49)"/><text x="1184.00" y="222.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.18%)</title><rect x="1181" y="228" width="2" height="15" fill="rgb(220,54,49)"/><text x="1184.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(250,78,29)"/><text x="1184.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(233,181,21)"/><text x="1184.00" y="270.50"></text></g><g><title>0x7f077429db11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1183" y="212" width="2" height="15" fill="rgb(220,210,17)"/><text x="1186.00" y="222.50"></text></g><g><title>0x7f07742cf10a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(228,108,26)"/><text x="1186.00" y="238.50"></text></g><g><title>0x7f07744fae2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(213,222,8)"/><text x="1186.00" y="254.50"></text></g><g><title>0x7f0774737022 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(224,24,29)"/><text x="1186.00" y="270.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(232,110,4)"/><text x="1188.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.18%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(226,190,48)"/><text x="1188.00" y="238.50"></text></g><g><title>all (558 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,202,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (558 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(226,49,5)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1_4_12_float_.py) (3 samples, 0.54%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(208,80,17)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (3 samples, 0.54%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(231,22,29)"/><text x="1186.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.54%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(234,107,44)"/><text x="1186.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.54%)</title><rect x="1183" y="116" width="7" height="15" fill="rgb(218,17,16)"/><text x="1186.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.54%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(233,174,38)"/><text x="1186.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.54%)</title><rect x="1183" y="148" width="7" height="15" fill="rgb(222,72,29)"/><text x="1186.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.54%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(242,108,7)"/><text x="1186.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.54%)</title><rect x="1183" y="180" width="7" height="15" fill="rgb(248,219,45)"/><text x="1186.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.54%)</title><rect x="1183" y="196" width="7" height="15" fill="rgb(231,200,9)"/><text x="1186.00" y="206.50"></text></g><g><title>unique (&lt;__array_function__ internals&gt;) (1 samples, 0.18%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(233,226,3)"/><text x="1190.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.18%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(225,10,51)"/><text x="1190.00" y="238.50"></text></g><g><title>unique (numpy/lib/arraysetops.py) (1 samples, 0.18%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(212,119,23)"/><text x="1190.00" y="254.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py) (1 samples, 0.18%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(246,53,16)"/><text x="1190.00" y="270.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(217,73,24)"/><text x="1190.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.18%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(222,138,26)"/><text x="1190.00" y="302.50"></text></g></g></svg>