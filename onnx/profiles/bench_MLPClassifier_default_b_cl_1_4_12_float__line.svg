<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2086" onload="init(evt)" viewBox="0 0 1200 2086" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2086" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2069.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2069.00"> </text><g id="frames"><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:515) (1 samples, 0.21%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(245,25,15)"/><text x="13.00" y="158.50"></text></g><g><title>shuffle (sklearn/utils/__init__.py:699) (1 samples, 0.21%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(219,119,22)"/><text x="13.00" y="174.50"></text></g><g><title>resample (sklearn/utils/__init__.py:623) (1 samples, 0.21%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(216,43,46)"/><text x="13.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/__init__.py:623) (1 samples, 0.21%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(212,200,2)"/><text x="13.00" y="206.50"></text></g><g><title>_safe_indexing (sklearn/utils/__init__.py:411) (1 samples, 0.21%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(254,159,47)"/><text x="13.00" y="222.50"></text></g><g><title>_array_indexing (sklearn/utils/__init__.py:197) (1 samples, 0.21%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(219,96,9)"/><text x="13.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.21%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(252,9,44)"/><text x="13.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1775) (1 samples, 0.21%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(214,101,22)"/><text x="13.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(249,143,30)"/><text x="13.00" y="286.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (1 samples, 0.21%)</title><rect x="12" y="148" width="2" height="15" fill="rgb(219,114,45)"/><text x="15.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:254) (1 samples, 0.21%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(248,63,44)"/><text x="15.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:125) (1 samples, 0.21%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(214,148,32)"/><text x="15.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.21%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(220,199,42)"/><text x="15.00" y="206.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(212,192,22)"/><text x="15.00" y="222.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py:258) (1 samples, 0.21%)</title><rect x="14" y="180" width="3" height="15" fill="rgb(222,8,0)"/><text x="17.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py:258) (1 samples, 0.21%)</title><rect x="14" y="196" width="3" height="15" fill="rgb(251,177,44)"/><text x="17.00" y="206.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py:260) (1 samples, 0.21%)</title><rect x="17" y="180" width="2" height="15" fill="rgb(226,24,4)"/><text x="20.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py:260) (1 samples, 0.21%)</title><rect x="17" y="196" width="2" height="15" fill="rgb(248,54,0)"/><text x="20.00" y="206.50"></text></g><g><title>array_power (number.c:567) (1 samples, 0.21%)</title><rect x="17" y="212" width="2" height="15" fill="rgb(244,126,21)"/><text x="20.00" y="222.50"></text></g><g><title>fast_scalar_power (number.c:518) (1 samples, 0.21%)</title><rect x="17" y="228" width="2" height="15" fill="rgb(237,189,22)"/><text x="20.00" y="238.50"></text></g><g><title>PyArray_GenericUnaryFunction (number.c:296) (1 samples, 0.21%)</title><rect x="17" y="244" width="2" height="15" fill="rgb(246,185,22)"/><text x="20.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.21%)</title><rect x="17" y="260" width="2" height="15" fill="rgb(210,35,6)"/><text x="20.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.21%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(253,184,37)"/><text x="20.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.21%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(245,177,28)"/><text x="20.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1649) (1 samples, 0.21%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(237,119,3)"/><text x="20.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:31) (5 samples, 1.04%)</title><rect x="10" y="52" width="12" height="15" fill="rgb(223,98,46)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:11) (5 samples, 1.04%)</title><rect x="10" y="68" width="12" height="15" fill="rgb(253,107,18)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:39) (5 samples, 1.04%)</title><rect x="10" y="84" width="12" height="15" fill="rgb(209,28,54)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (5 samples, 1.04%)</title><rect x="10" y="100" width="12" height="15" fill="rgb(253,198,15)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:995) (5 samples, 1.04%)</title><rect x="10" y="116" width="12" height="15" fill="rgb(215,88,32)"/><text x="13.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (5 samples, 1.04%)</title><rect x="10" y="132" width="12" height="15" fill="rgb(253,184,13)"/><text x="13.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:527) (3 samples, 0.62%)</title><rect x="14" y="148" width="8" height="15" fill="rgb(233,102,35)"/><text x="17.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py:43) (3 samples, 0.62%)</title><rect x="14" y="164" width="8" height="15" fill="rgb(228,168,0)"/><text x="17.00" y="174.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py:265) (1 samples, 0.21%)</title><rect x="19" y="180" width="3" height="15" fill="rgb(236,169,38)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py:265) (1 samples, 0.21%)</title><rect x="19" y="196" width="3" height="15" fill="rgb(250,164,54)"/><text x="22.00" y="206.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.21%)</title><rect x="19" y="212" width="3" height="15" fill="rgb(216,209,30)"/><text x="22.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.21%)</title><rect x="19" y="228" width="3" height="15" fill="rgb(232,225,13)"/><text x="22.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.21%)</title><rect x="19" y="244" width="3" height="15" fill="rgb(208,177,42)"/><text x="22.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.21%)</title><rect x="19" y="260" width="3" height="15" fill="rgb(208,116,25)"/><text x="22.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.21%)</title><rect x="19" y="276" width="3" height="15" fill="rgb(254,71,28)"/><text x="22.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.21%)</title><rect x="22" y="180" width="2" height="15" fill="rgb(205,206,11)"/><text x="25.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.21%)</title><rect x="22" y="196" width="2" height="15" fill="rgb(227,51,21)"/><text x="25.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.21%)</title><rect x="22" y="212" width="2" height="15" fill="rgb(223,8,19)"/><text x="25.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (2 samples, 0.42%)</title><rect x="22" y="164" width="5" height="15" fill="rgb(209,126,20)"/><text x="25.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.21%)</title><rect x="24" y="180" width="3" height="15" fill="rgb(245,185,50)"/><text x="27.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.21%)</title><rect x="24" y="196" width="3" height="15" fill="rgb(217,196,21)"/><text x="27.00" y="206.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (1 samples, 0.21%)</title><rect x="27" y="180" width="2" height="15" fill="rgb(225,83,45)"/><text x="30.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.21%)</title><rect x="27" y="196" width="2" height="15" fill="rgb(244,155,6)"/><text x="30.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.21%)</title><rect x="27" y="212" width="2" height="15" fill="rgb(214,147,25)"/><text x="30.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.21%)</title><rect x="27" y="228" width="2" height="15" fill="rgb(214,47,46)"/><text x="30.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.21%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(210,44,9)"/><text x="30.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.21%)</title><rect x="27" y="260" width="2" height="15" fill="rgb(211,94,25)"/><text x="30.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.21%)</title><rect x="27" y="276" width="2" height="15" fill="rgb(218,115,29)"/><text x="30.00" y="286.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:18) (4 samples, 0.83%)</title><rect x="22" y="100" width="10" height="15" fill="rgb(244,161,15)"/><text x="25.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.83%)</title><rect x="22" y="116" width="10" height="15" fill="rgb(243,69,11)"/><text x="25.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 0.83%)</title><rect x="22" y="132" width="10" height="15" fill="rgb(222,140,15)"/><text x="25.00" y="142.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (4 samples, 0.83%)</title><rect x="22" y="148" width="10" height="15" fill="rgb(234,46,22)"/><text x="25.00" y="158.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (2 samples, 0.42%)</title><rect x="27" y="164" width="5" height="15" fill="rgb(239,216,21)"/><text x="30.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (1 samples, 0.21%)</title><rect x="29" y="180" width="3" height="15" fill="rgb(206,215,39)"/><text x="32.00" y="190.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (1 samples, 0.21%)</title><rect x="29" y="196" width="3" height="15" fill="rgb(207,144,37)"/><text x="32.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.42%)</title><rect x="44" y="164" width="5" height="15" fill="rgb(216,71,11)"/><text x="47.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.21%)</title><rect x="46" y="180" width="3" height="15" fill="rgb(222,84,7)"/><text x="49.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.21%)</title><rect x="49" y="164" width="2" height="15" fill="rgb(220,119,50)"/><text x="52.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.21%)</title><rect x="56" y="180" width="3" height="15" fill="rgb(226,147,46)"/><text x="59.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.04%)</title><rect x="81" y="196" width="12" height="15" fill="rgb(224,94,41)"/><text x="84.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (18 samples, 3.74%)</title><rect x="59" y="180" width="44" height="15" fill="rgb(246,117,38)"/><text x="62.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 0.83%)</title><rect x="93" y="196" width="10" height="15" fill="rgb(219,210,14)"/><text x="96.00" y="206.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1071) (28 samples, 5.82%)</title><rect x="44" y="148" width="69" height="15" fill="rgb(213,10,0)"/><text x="47.00" y="158.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (25 samples, 5.20%)</title><rect x="51" y="164" width="62" height="15" fill="rgb(221,50,40)"/><text x="54.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 0.83%)</title><rect x="103" y="180" width="10" height="15" fill="rgb(221,40,2)"/><text x="106.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.21%)</title><rect x="113" y="180" width="2" height="15" fill="rgb(222,74,12)"/><text x="116.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.21%)</title><rect x="115" y="180" width="2" height="15" fill="rgb(211,4,14)"/><text x="118.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.21%)</title><rect x="117" y="180" width="3" height="15" fill="rgb(233,72,41)"/><text x="120.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (2 samples, 0.42%)</title><rect x="120" y="180" width="5" height="15" fill="rgb(247,219,33)"/><text x="123.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:481) (1 samples, 0.21%)</title><rect x="125" y="180" width="2" height="15" fill="rgb(216,151,31)"/><text x="128.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.21%)</title><rect x="127" y="180" width="3" height="15" fill="rgb(216,181,8)"/><text x="130.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.21%)</title><rect x="127" y="196" width="3" height="15" fill="rgb(217,171,12)"/><text x="130.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.83%)</title><rect x="130" y="180" width="10" height="15" fill="rgb(217,80,22)"/><text x="133.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 0.42%)</title><rect x="135" y="196" width="5" height="15" fill="rgb(247,59,30)"/><text x="138.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.62%)</title><rect x="140" y="212" width="7" height="15" fill="rgb(210,196,41)"/><text x="143.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.21%)</title><rect x="147" y="212" width="2" height="15" fill="rgb(221,159,38)"/><text x="150.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.21%)</title><rect x="149" y="212" width="3" height="15" fill="rgb(239,71,10)"/><text x="152.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.25%)</title><rect x="140" y="180" width="14" height="15" fill="rgb(230,172,53)"/><text x="143.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 1.25%)</title><rect x="140" y="196" width="14" height="15" fill="rgb(232,100,22)"/><text x="143.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.21%)</title><rect x="152" y="212" width="2" height="15" fill="rgb(215,198,32)"/><text x="155.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 0.83%)</title><rect x="154" y="180" width="10" height="15" fill="rgb(237,222,18)"/><text x="157.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.42%)</title><rect x="159" y="196" width="5" height="15" fill="rgb(240,87,41)"/><text x="162.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.21%)</title><rect x="164" y="180" width="3" height="15" fill="rgb(251,14,19)"/><text x="167.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.21%)</title><rect x="164" y="196" width="3" height="15" fill="rgb(252,194,45)"/><text x="167.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.42%)</title><rect x="167" y="180" width="4" height="15" fill="rgb(220,175,25)"/><text x="170.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.42%)</title><rect x="167" y="196" width="4" height="15" fill="rgb(227,176,10)"/><text x="170.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.42%)</title><rect x="174" y="196" width="5" height="15" fill="rgb(254,24,21)"/><text x="177.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.42%)</title><rect x="174" y="212" width="5" height="15" fill="rgb(206,96,43)"/><text x="177.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.21%)</title><rect x="184" y="212" width="2" height="15" fill="rgb(222,3,15)"/><text x="187.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.21%)</title><rect x="186" y="212" width="3" height="15" fill="rgb(253,94,34)"/><text x="189.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (8 samples, 1.66%)</title><rect x="171" y="180" width="20" height="15" fill="rgb(242,186,15)"/><text x="174.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (5 samples, 1.04%)</title><rect x="179" y="196" width="12" height="15" fill="rgb(227,62,42)"/><text x="182.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.21%)</title><rect x="189" y="212" width="2" height="15" fill="rgb(205,128,46)"/><text x="192.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.21%)</title><rect x="189" y="228" width="2" height="15" fill="rgb(230,76,17)"/><text x="192.00" y="238.50"></text></g><g><title>0x7f26db7b90e6 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="201" y="212" width="2" height="15" fill="rgb(246,128,15)"/><text x="204.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.21%)</title><rect x="203" y="212" width="3" height="15" fill="rgb(246,106,47)"/><text x="206.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.46%)</title><rect x="191" y="180" width="17" height="15" fill="rgb(239,19,43)"/><text x="194.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.25%)</title><rect x="193" y="196" width="15" height="15" fill="rgb(230,80,25)"/><text x="196.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.21%)</title><rect x="206" y="212" width="2" height="15" fill="rgb(226,38,36)"/><text x="209.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.62%)</title><rect x="208" y="196" width="8" height="15" fill="rgb(209,72,33)"/><text x="211.00" y="206.50"></text></g><g><title>0x7f26db6f0e6d (libc-2.29.so) (1 samples, 0.21%)</title><rect x="213" y="212" width="3" height="15" fill="rgb(252,222,40)"/><text x="216.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.42%)</title><rect x="216" y="196" width="4" height="15" fill="rgb(250,126,1)"/><text x="219.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.21%)</title><rect x="218" y="212" width="2" height="15" fill="rgb(249,1,14)"/><text x="221.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.21%)</title><rect x="218" y="228" width="2" height="15" fill="rgb(252,62,48)"/><text x="221.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (45 samples, 9.36%)</title><rect x="113" y="164" width="110" height="15" fill="rgb(232,45,44)"/><text x="116.00" y="174.50">_predict (skl..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.25%)</title><rect x="208" y="180" width="15" height="15" fill="rgb(226,221,30)"/><text x="211.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.21%)</title><rect x="220" y="196" width="3" height="15" fill="rgb(227,197,3)"/><text x="223.00" y="206.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:673) (1 samples, 0.21%)</title><rect x="223" y="164" width="2" height="15" fill="rgb(242,199,4)"/><text x="226.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:679) (1 samples, 0.21%)</title><rect x="225" y="164" width="3" height="15" fill="rgb(209,204,35)"/><text x="228.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:102) (1 samples, 0.21%)</title><rect x="230" y="180" width="3" height="15" fill="rgb(227,107,44)"/><text x="233.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:539) (1 samples, 0.21%)</title><rect x="233" y="196" width="2" height="15" fill="rgb(251,61,50)"/><text x="236.00" y="206.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.21%)</title><rect x="235" y="196" width="3" height="15" fill="rgb(223,88,39)"/><text x="238.00" y="206.50"></text></g><g><title>array_matrix_multiply (number.c:388) (1 samples, 0.21%)</title><rect x="243" y="212" width="2" height="15" fill="rgb(222,169,26)"/><text x="246.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2582) (1 samples, 0.21%)</title><rect x="245" y="244" width="2" height="15" fill="rgb(224,63,31)"/><text x="248.00" y="254.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.21%)</title><rect x="245" y="260" width="2" height="15" fill="rgb(243,92,22)"/><text x="248.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.21%)</title><rect x="247" y="244" width="3" height="15" fill="rgb(241,190,40)"/><text x="250.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.21%)</title><rect x="247" y="260" width="3" height="15" fill="rgb(212,215,43)"/><text x="250.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2645) (1 samples, 0.21%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(215,72,53)"/><text x="253.00" y="254.50"></text></g><g><title>_validate_num_dims (ufunc_object.c:2080) (1 samples, 0.21%)</title><rect x="250" y="260" width="2" height="15" fill="rgb(236,94,23)"/><text x="253.00" y="270.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.21%)</title><rect x="252" y="324" width="3" height="15" fill="rgb(251,9,41)"/><text x="255.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (2 samples, 0.42%)</title><rect x="252" y="244" width="5" height="15" fill="rgb(205,156,31)"/><text x="255.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.42%)</title><rect x="252" y="260" width="5" height="15" fill="rgb(212,151,15)"/><text x="255.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (2 samples, 0.42%)</title><rect x="252" y="276" width="5" height="15" fill="rgb(242,104,0)"/><text x="255.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (2 samples, 0.42%)</title><rect x="252" y="292" width="5" height="15" fill="rgb(240,31,20)"/><text x="255.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (2 samples, 0.42%)</title><rect x="252" y="308" width="5" height="15" fill="rgb(250,212,12)"/><text x="255.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1516) (1 samples, 0.21%)</title><rect x="255" y="324" width="2" height="15" fill="rgb(250,138,51)"/><text x="258.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.21%)</title><rect x="257" y="292" width="3" height="15" fill="rgb(221,217,15)"/><text x="260.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.42%)</title><rect x="257" y="260" width="5" height="15" fill="rgb(251,51,19)"/><text x="260.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.42%)</title><rect x="257" y="276" width="5" height="15" fill="rgb(231,206,19)"/><text x="260.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.21%)</title><rect x="260" y="292" width="2" height="15" fill="rgb(243,99,4)"/><text x="263.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.21%)</title><rect x="260" y="308" width="2" height="15" fill="rgb(246,213,13)"/><text x="263.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.21%)</title><rect x="260" y="324" width="2" height="15" fill="rgb(232,145,25)"/><text x="263.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.21%)</title><rect x="260" y="340" width="2" height="15" fill="rgb(234,13,2)"/><text x="263.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.62%)</title><rect x="257" y="244" width="8" height="15" fill="rgb(242,34,38)"/><text x="260.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:451) (1 samples, 0.21%)</title><rect x="262" y="260" width="3" height="15" fill="rgb(208,52,39)"/><text x="265.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (1 samples, 0.21%)</title><rect x="265" y="244" width="2" height="15" fill="rgb(222,82,54)"/><text x="268.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="265" y="260" width="2" height="15" fill="rgb(241,129,20)"/><text x="268.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.21%)</title><rect x="267" y="244" width="3" height="15" fill="rgb(213,207,3)"/><text x="270.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.21%)</title><rect x="267" y="260" width="3" height="15" fill="rgb(221,77,33)"/><text x="270.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.21%)</title><rect x="267" y="276" width="3" height="15" fill="rgb(239,209,41)"/><text x="270.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="267" y="292" width="3" height="15" fill="rgb(222,19,35)"/><text x="270.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (14 samples, 2.91%)</title><rect x="238" y="196" width="34" height="15" fill="rgb(252,101,37)"/><text x="241.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.29%)</title><rect x="245" y="212" width="27" height="15" fill="rgb(246,92,52)"/><text x="248.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (11 samples, 2.29%)</title><rect x="245" y="228" width="27" height="15" fill="rgb(241,105,13)"/><text x="248.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.21%)</title><rect x="270" y="244" width="2" height="15" fill="rgb(222,196,14)"/><text x="273.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.21%)</title><rect x="270" y="260" width="2" height="15" fill="rgb(238,200,51)"/><text x="273.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.21%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(219,87,35)"/><text x="273.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (19 samples, 3.95%)</title><rect x="233" y="180" width="46" height="15" fill="rgb(242,13,14)"/><text x="236.00" y="190.50">_for..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (3 samples, 0.62%)</title><rect x="272" y="196" width="7" height="15" fill="rgb(249,211,6)"/><text x="275.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.21%)</title><rect x="282" y="212" width="2" height="15" fill="rgb(250,20,7)"/><text x="285.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.21%)</title><rect x="284" y="212" width="3" height="15" fill="rgb(216,54,14)"/><text x="287.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.21%)</title><rect x="284" y="228" width="3" height="15" fill="rgb(230,79,4)"/><text x="287.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.21%)</title><rect x="287" y="212" width="2" height="15" fill="rgb(237,224,49)"/><text x="290.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.21%)</title><rect x="287" y="228" width="2" height="15" fill="rgb(237,139,9)"/><text x="290.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.21%)</title><rect x="289" y="228" width="3" height="15" fill="rgb(224,169,50)"/><text x="292.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.21%)</title><rect x="292" y="260" width="2" height="15" fill="rgb(219,131,45)"/><text x="295.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:745) (1 samples, 0.21%)</title><rect x="292" y="276" width="2" height="15" fill="rgb(249,220,51)"/><text x="295.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.21%)</title><rect x="294" y="260" width="3" height="15" fill="rgb(241,58,32)"/><text x="297.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.21%)</title><rect x="294" y="276" width="3" height="15" fill="rgb(242,192,51)"/><text x="297.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:276) (1 samples, 0.21%)</title><rect x="297" y="260" width="2" height="15" fill="rgb(249,161,21)"/><text x="300.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.83%)</title><rect x="292" y="244" width="9" height="15" fill="rgb(253,90,52)"/><text x="295.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:454) (1 samples, 0.21%)</title><rect x="299" y="260" width="2" height="15" fill="rgb(250,213,39)"/><text x="302.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.04%)</title><rect x="292" y="228" width="12" height="15" fill="rgb(251,54,15)"/><text x="295.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.21%)</title><rect x="301" y="244" width="3" height="15" fill="rgb(253,36,39)"/><text x="304.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.21%)</title><rect x="301" y="260" width="3" height="15" fill="rgb(254,43,42)"/><text x="304.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.21%)</title><rect x="304" y="244" width="2" height="15" fill="rgb(225,57,24)"/><text x="307.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.21%)</title><rect x="304" y="260" width="2" height="15" fill="rgb(224,88,7)"/><text x="307.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.66%)</title><rect x="289" y="212" width="20" height="15" fill="rgb(218,122,1)"/><text x="292.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.42%)</title><rect x="304" y="228" width="5" height="15" fill="rgb(211,104,7)"/><text x="307.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.21%)</title><rect x="306" y="244" width="3" height="15" fill="rgb(245,227,14)"/><text x="309.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.49%)</title><rect x="282" y="196" width="29" height="15" fill="rgb(226,128,42)"/><text x="285.00" y="206.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.21%)</title><rect x="309" y="212" width="2" height="15" fill="rgb(243,170,16)"/><text x="312.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (14 samples, 2.91%)</title><rect x="279" y="180" width="35" height="15" fill="rgb(231,69,51)"/><text x="282.00" y="190.50">_f..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.21%)</title><rect x="311" y="196" width="3" height="15" fill="rgb(220,199,29)"/><text x="314.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.21%)</title><rect x="311" y="212" width="3" height="15" fill="rgb(218,216,21)"/><text x="314.00" y="222.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:108) (1 samples, 0.21%)</title><rect x="314" y="180" width="2" height="15" fill="rgb(222,144,22)"/><text x="317.00" y="190.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.21%)</title><rect x="324" y="212" width="2" height="15" fill="rgb(232,181,17)"/><text x="327.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.42%)</title><rect x="326" y="228" width="5" height="15" fill="rgb(243,187,11)"/><text x="329.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.42%)</title><rect x="326" y="244" width="5" height="15" fill="rgb(247,191,10)"/><text x="329.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.42%)</title><rect x="326" y="260" width="5" height="15" fill="rgb(231,109,41)"/><text x="329.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.42%)</title><rect x="326" y="276" width="5" height="15" fill="rgb(246,182,48)"/><text x="329.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.42%)</title><rect x="326" y="292" width="5" height="15" fill="rgb(242,187,52)"/><text x="329.00" y="302.50"></text></g><g><title>0x7f26db7b8e61 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="328" y="308" width="3" height="15" fill="rgb(218,46,44)"/><text x="331.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.21%)</title><rect x="341" y="308" width="2" height="15" fill="rgb(206,167,5)"/><text x="344.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (1 samples, 0.21%)</title><rect x="341" y="324" width="2" height="15" fill="rgb(212,11,41)"/><text x="344.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.42%)</title><rect x="343" y="324" width="5" height="15" fill="rgb(229,128,27)"/><text x="346.00" y="334.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (2 samples, 0.42%)</title><rect x="348" y="372" width="5" height="15" fill="rgb(245,68,50)"/><text x="351.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.21%)</title><rect x="358" y="388" width="2" height="15" fill="rgb(220,41,54)"/><text x="361.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.21%)</title><rect x="358" y="404" width="2" height="15" fill="rgb(205,114,26)"/><text x="361.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.21%)</title><rect x="358" y="420" width="2" height="15" fill="rgb(244,45,24)"/><text x="361.00" y="430.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.42%)</title><rect x="360" y="404" width="5" height="15" fill="rgb(247,80,47)"/><text x="363.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="363" y="420" width="2" height="15" fill="rgb(224,95,3)"/><text x="366.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (8 samples, 1.66%)</title><rect x="348" y="324" width="20" height="15" fill="rgb(237,70,7)"/><text x="351.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (8 samples, 1.66%)</title><rect x="348" y="340" width="20" height="15" fill="rgb(208,123,11)"/><text x="351.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.66%)</title><rect x="348" y="356" width="20" height="15" fill="rgb(228,214,43)"/><text x="351.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 1.25%)</title><rect x="353" y="372" width="15" height="15" fill="rgb(236,131,33)"/><text x="356.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.62%)</title><rect x="360" y="388" width="8" height="15" fill="rgb(218,185,33)"/><text x="363.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.21%)</title><rect x="365" y="404" width="3" height="15" fill="rgb(230,88,51)"/><text x="368.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.21%)</title><rect x="365" y="420" width="3" height="15" fill="rgb(250,176,13)"/><text x="368.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.21%)</title><rect x="365" y="436" width="3" height="15" fill="rgb(251,181,25)"/><text x="368.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.21%)</title><rect x="365" y="452" width="3" height="15" fill="rgb(235,129,31)"/><text x="368.00" y="462.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.21%)</title><rect x="365" y="468" width="3" height="15" fill="rgb(229,164,28)"/><text x="368.00" y="478.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.21%)</title><rect x="368" y="372" width="2" height="15" fill="rgb(221,162,12)"/><text x="371.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.42%)</title><rect x="368" y="340" width="5" height="15" fill="rgb(232,164,36)"/><text x="371.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.42%)</title><rect x="368" y="356" width="5" height="15" fill="rgb(250,92,18)"/><text x="371.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:59) (1 samples, 0.21%)</title><rect x="370" y="372" width="3" height="15" fill="rgb(226,215,44)"/><text x="373.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.21%)</title><rect x="373" y="356" width="2" height="15" fill="rgb(206,53,14)"/><text x="376.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:282) (1 samples, 0.21%)</title><rect x="373" y="372" width="2" height="15" fill="rgb(227,198,22)"/><text x="376.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.42%)</title><rect x="373" y="340" width="4" height="15" fill="rgb(215,221,30)"/><text x="376.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.21%)</title><rect x="375" y="356" width="2" height="15" fill="rgb(220,16,22)"/><text x="378.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.21%)</title><rect x="375" y="372" width="2" height="15" fill="rgb(240,75,29)"/><text x="378.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.21%)</title><rect x="375" y="388" width="2" height="15" fill="rgb(214,8,47)"/><text x="378.00" y="398.50"></text></g><g><title>LONG_isnan (loops.c.src:929) (1 samples, 0.21%)</title><rect x="375" y="404" width="2" height="15" fill="rgb(235,30,47)"/><text x="378.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (15 samples, 3.12%)</title><rect x="343" y="308" width="37" height="15" fill="rgb(214,137,45)"/><text x="346.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 1.04%)</title><rect x="368" y="324" width="12" height="15" fill="rgb(208,133,46)"/><text x="371.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4778) (1 samples, 0.21%)</title><rect x="377" y="340" width="3" height="15" fill="rgb(223,153,47)"/><text x="380.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.21%)</title><rect x="380" y="324" width="2" height="15" fill="rgb(244,124,16)"/><text x="383.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.21%)</title><rect x="380" y="340" width="2" height="15" fill="rgb(216,217,39)"/><text x="383.00" y="350.50"></text></g><g><title>0x7f26db6fb120 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="382" y="340" width="3" height="15" fill="rgb(213,221,38)"/><text x="385.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (3 samples, 0.62%)</title><rect x="382" y="324" width="8" height="15" fill="rgb(251,99,51)"/><text x="385.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.42%)</title><rect x="385" y="340" width="5" height="15" fill="rgb(219,182,6)"/><text x="388.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.42%)</title><rect x="385" y="356" width="5" height="15" fill="rgb(212,70,43)"/><text x="388.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.42%)</title><rect x="385" y="372" width="5" height="15" fill="rgb(242,123,9)"/><text x="388.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.42%)</title><rect x="385" y="388" width="5" height="15" fill="rgb(249,93,52)"/><text x="388.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.42%)</title><rect x="385" y="404" width="5" height="15" fill="rgb(232,60,38)"/><text x="388.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.42%)</title><rect x="385" y="420" width="5" height="15" fill="rgb(248,85,49)"/><text x="388.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.21%)</title><rect x="397" y="356" width="3" height="15" fill="rgb(242,218,15)"/><text x="400.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.21%)</title><rect x="397" y="372" width="3" height="15" fill="rgb(214,223,20)"/><text x="400.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.21%)</title><rect x="397" y="388" width="3" height="15" fill="rgb(235,175,39)"/><text x="400.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.42%)</title><rect x="400" y="356" width="4" height="15" fill="rgb(233,220,35)"/><text x="403.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.42%)</title><rect x="400" y="372" width="4" height="15" fill="rgb(210,119,23)"/><text x="403.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.21%)</title><rect x="402" y="388" width="2" height="15" fill="rgb(213,134,48)"/><text x="405.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.21%)</title><rect x="402" y="404" width="2" height="15" fill="rgb(205,193,27)"/><text x="405.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.21%)</title><rect x="402" y="420" width="2" height="15" fill="rgb(244,24,51)"/><text x="405.00" y="430.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:404) (1 samples, 0.21%)</title><rect x="402" y="436" width="2" height="15" fill="rgb(211,168,6)"/><text x="405.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3184) (1 samples, 0.21%)</title><rect x="404" y="356" width="3" height="15" fill="rgb(218,228,45)"/><text x="407.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.04%)</title><rect x="397" y="340" width="12" height="15" fill="rgb(235,16,40)"/><text x="400.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.21%)</title><rect x="407" y="356" width="2" height="15" fill="rgb(234,5,51)"/><text x="410.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.21%)</title><rect x="407" y="372" width="2" height="15" fill="rgb(251,35,42)"/><text x="410.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.21%)</title><rect x="407" y="388" width="2" height="15" fill="rgb(228,206,20)"/><text x="410.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.21%)</title><rect x="407" y="404" width="2" height="15" fill="rgb(236,30,25)"/><text x="410.00" y="414.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.21%)</title><rect x="407" y="420" width="2" height="15" fill="rgb(214,84,41)"/><text x="410.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (13 samples, 2.70%)</title><rect x="380" y="308" width="32" height="15" fill="rgb(212,185,23)"/><text x="383.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (9 samples, 1.87%)</title><rect x="390" y="324" width="22" height="15" fill="rgb(230,173,4)"/><text x="393.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.21%)</title><rect x="409" y="340" width="3" height="15" fill="rgb(208,22,19)"/><text x="412.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.21%)</title><rect x="409" y="356" width="3" height="15" fill="rgb(242,220,28)"/><text x="412.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.21%)</title><rect x="409" y="372" width="3" height="15" fill="rgb(211,68,12)"/><text x="412.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.21%)</title><rect x="409" y="388" width="3" height="15" fill="rgb(245,219,29)"/><text x="412.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.21%)</title><rect x="409" y="404" width="3" height="15" fill="rgb(235,41,11)"/><text x="412.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.42%)</title><rect x="412" y="356" width="5" height="15" fill="rgb(245,117,0)"/><text x="415.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (2 samples, 0.42%)</title><rect x="412" y="372" width="5" height="15" fill="rgb(216,84,45)"/><text x="415.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (2 samples, 0.42%)</title><rect x="412" y="388" width="5" height="15" fill="rgb(253,204,0)"/><text x="415.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (2 samples, 0.42%)</title><rect x="412" y="404" width="5" height="15" fill="rgb(233,12,38)"/><text x="415.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.21%)</title><rect x="414" y="420" width="3" height="15" fill="rgb(237,141,8)"/><text x="417.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.21%)</title><rect x="414" y="436" width="3" height="15" fill="rgb(238,7,47)"/><text x="417.00" y="446.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:462) (1 samples, 0.21%)</title><rect x="414" y="452" width="3" height="15" fill="rgb(218,29,40)"/><text x="417.00" y="462.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.21%)</title><rect x="417" y="356" width="2" height="15" fill="rgb(250,188,10)"/><text x="420.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.21%)</title><rect x="417" y="372" width="2" height="15" fill="rgb(212,213,48)"/><text x="420.00" y="382.50"></text></g><g><title>0x7f26db6fb120 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="417" y="388" width="2" height="15" fill="rgb(230,95,20)"/><text x="420.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.21%)</title><rect x="419" y="388" width="3" height="15" fill="rgb(207,11,33)"/><text x="422.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.21%)</title><rect x="419" y="404" width="3" height="15" fill="rgb(224,63,13)"/><text x="422.00" y="414.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.21%)</title><rect x="419" y="420" width="3" height="15" fill="rgb(212,101,49)"/><text x="422.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.21%)</title><rect x="419" y="436" width="3" height="15" fill="rgb(228,143,50)"/><text x="422.00" y="446.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.21%)</title><rect x="419" y="452" width="3" height="15" fill="rgb(234,92,48)"/><text x="422.00" y="462.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:355) (1 samples, 0.21%)</title><rect x="419" y="468" width="3" height="15" fill="rgb(245,31,10)"/><text x="422.00" y="478.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.21%)</title><rect x="422" y="388" width="2" height="15" fill="rgb(209,213,45)"/><text x="425.00" y="398.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.21%)</title><rect x="422" y="404" width="2" height="15" fill="rgb(235,82,38)"/><text x="425.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2072) (1 samples, 0.21%)</title><rect x="422" y="420" width="2" height="15" fill="rgb(239,33,44)"/><text x="425.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.62%)</title><rect x="419" y="356" width="8" height="15" fill="rgb(248,161,36)"/><text x="422.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.62%)</title><rect x="419" y="372" width="8" height="15" fill="rgb(240,88,25)"/><text x="422.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.21%)</title><rect x="424" y="388" width="3" height="15" fill="rgb(233,158,2)"/><text x="427.00" y="398.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.21%)</title><rect x="424" y="404" width="3" height="15" fill="rgb(223,228,34)"/><text x="427.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.46%)</title><rect x="412" y="340" width="17" height="15" fill="rgb(213,17,18)"/><text x="415.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.21%)</title><rect x="427" y="356" width="2" height="15" fill="rgb(210,200,29)"/><text x="430.00" y="366.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (47 samples, 9.77%)</title><rect x="316" y="180" width="115" height="15" fill="rgb(237,90,48)"/><text x="319.00" y="190.50">_forward_pass ..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (46 samples, 9.56%)</title><rect x="319" y="196" width="112" height="15" fill="rgb(212,177,50)"/><text x="322.00" y="206.50">relu (sklearn..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (43 samples, 8.94%)</title><rect x="326" y="212" width="105" height="15" fill="rgb(231,165,12)"/><text x="329.00" y="222.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (41 samples, 8.52%)</title><rect x="331" y="228" width="100" height="15" fill="rgb(206,117,24)"/><text x="334.00" y="238.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (40 samples, 8.32%)</title><rect x="333" y="244" width="98" height="15" fill="rgb(229,74,4)"/><text x="336.00" y="254.50">clip (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (39 samples, 8.11%)</title><rect x="336" y="260" width="95" height="15" fill="rgb(250,10,24)"/><text x="339.00" y="270.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c:2381) (39 samples, 8.11%)</title><rect x="336" y="276" width="95" height="15" fill="rgb(216,21,10)"/><text x="339.00" y="286.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c:108) (39 samples, 8.11%)</title><rect x="336" y="292" width="95" height="15" fill="rgb(251,114,23)"/><text x="339.00" y="302.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py:132) (8 samples, 1.66%)</title><rect x="412" y="308" width="19" height="15" fill="rgb(251,175,7)"/><text x="415.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (8 samples, 1.66%)</title><rect x="412" y="324" width="19" height="15" fill="rgb(213,48,42)"/><text x="415.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.21%)</title><rect x="429" y="340" width="2" height="15" fill="rgb(244,135,33)"/><text x="432.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.21%)</title><rect x="429" y="356" width="2" height="15" fill="rgb(214,96,31)"/><text x="432.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.21%)</title><rect x="429" y="372" width="2" height="15" fill="rgb(231,46,22)"/><text x="432.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.21%)</title><rect x="429" y="388" width="2" height="15" fill="rgb(234,23,13)"/><text x="432.00" y="398.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:112) (1 samples, 0.21%)</title><rect x="431" y="180" width="3" height="15" fill="rgb(220,147,51)"/><text x="434.00" y="190.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.21%)</title><rect x="436" y="260" width="3" height="15" fill="rgb(231,29,1)"/><text x="439.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.21%)</title><rect x="436" y="276" width="3" height="15" fill="rgb(211,35,0)"/><text x="439.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.21%)</title><rect x="436" y="292" width="3" height="15" fill="rgb(217,122,2)"/><text x="439.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.21%)</title><rect x="436" y="308" width="3" height="15" fill="rgb(250,132,49)"/><text x="439.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.21%)</title><rect x="436" y="324" width="3" height="15" fill="rgb(226,103,25)"/><text x="439.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.21%)</title><rect x="436" y="340" width="3" height="15" fill="rgb(214,58,54)"/><text x="439.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.21%)</title><rect x="439" y="276" width="2" height="15" fill="rgb(241,131,0)"/><text x="442.00" y="286.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.21%)</title><rect x="439" y="292" width="2" height="15" fill="rgb(237,109,4)"/><text x="442.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.21%)</title><rect x="441" y="292" width="3" height="15" fill="rgb(245,45,54)"/><text x="444.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.21%)</title><rect x="441" y="308" width="3" height="15" fill="rgb(206,165,51)"/><text x="444.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.21%)</title><rect x="441" y="324" width="3" height="15" fill="rgb(214,207,0)"/><text x="444.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.21%)</title><rect x="444" y="340" width="2" height="15" fill="rgb(244,30,7)"/><text x="447.00" y="350.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.21%)</title><rect x="444" y="356" width="2" height="15" fill="rgb(238,125,48)"/><text x="447.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.42%)</title><rect x="444" y="308" width="5" height="15" fill="rgb(246,38,7)"/><text x="447.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.42%)</title><rect x="444" y="324" width="5" height="15" fill="rgb(220,108,36)"/><text x="447.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.21%)</title><rect x="446" y="340" width="3" height="15" fill="rgb(211,66,31)"/><text x="449.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.21%)</title><rect x="446" y="356" width="3" height="15" fill="rgb(248,35,5)"/><text x="449.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.21%)</title><rect x="446" y="372" width="3" height="15" fill="rgb(248,20,16)"/><text x="449.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.21%)</title><rect x="446" y="388" width="3" height="15" fill="rgb(225,200,37)"/><text x="449.00" y="398.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:316) (1 samples, 0.21%)</title><rect x="449" y="324" width="2" height="15" fill="rgb(238,142,33)"/><text x="452.00" y="334.50"></text></g><g><title>PyArray_View (convert.c:574) (1 samples, 0.21%)</title><rect x="449" y="340" width="2" height="15" fill="rgb(244,61,12)"/><text x="452.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.21%)</title><rect x="451" y="356" width="3" height="15" fill="rgb(237,224,39)"/><text x="454.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="451" y="372" width="3" height="15" fill="rgb(222,84,5)"/><text x="454.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (3 samples, 0.62%)</title><rect x="449" y="308" width="7" height="15" fill="rgb(235,182,14)"/><text x="452.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (2 samples, 0.42%)</title><rect x="451" y="324" width="5" height="15" fill="rgb(227,118,53)"/><text x="454.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.42%)</title><rect x="451" y="340" width="5" height="15" fill="rgb(226,24,7)"/><text x="454.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.21%)</title><rect x="454" y="356" width="2" height="15" fill="rgb(239,90,39)"/><text x="457.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4061) (1 samples, 0.21%)</title><rect x="454" y="372" width="2" height="15" fill="rgb(206,100,24)"/><text x="457.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.21%)</title><rect x="456" y="308" width="2" height="15" fill="rgb(252,183,8)"/><text x="459.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3559) (1 samples, 0.21%)</title><rect x="456" y="324" width="2" height="15" fill="rgb(249,196,22)"/><text x="459.00" y="334.50"></text></g><g><title>array_max (methods.c:323) (11 samples, 2.29%)</title><rect x="434" y="212" width="27" height="15" fill="rgb(210,96,36)"/><text x="437.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.29%)</title><rect x="434" y="228" width="27" height="15" fill="rgb(208,113,22)"/><text x="437.00" y="238.50">f..</text></g><g><title>_amax (numpy/core/_methods.py:30) (11 samples, 2.29%)</title><rect x="434" y="244" width="27" height="15" fill="rgb(205,216,41)"/><text x="437.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.87%)</title><rect x="439" y="260" width="22" height="15" fill="rgb(229,41,28)"/><text x="442.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.66%)</title><rect x="441" y="276" width="20" height="15" fill="rgb(246,176,48)"/><text x="444.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.46%)</title><rect x="444" y="292" width="17" height="15" fill="rgb(253,170,28)"/><text x="447.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.21%)</title><rect x="458" y="308" width="3" height="15" fill="rgb(213,129,17)"/><text x="461.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.21%)</title><rect x="458" y="324" width="3" height="15" fill="rgb(246,39,16)"/><text x="461.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.21%)</title><rect x="458" y="340" width="3" height="15" fill="rgb(245,36,7)"/><text x="461.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.21%)</title><rect x="458" y="356" width="3" height="15" fill="rgb(223,8,0)"/><text x="461.00" y="366.50"></text></g><g><title>prepare_index (mapping.c:411) (1 samples, 0.21%)</title><rect x="461" y="228" width="2" height="15" fill="rgb(217,195,27)"/><text x="464.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.42%)</title><rect x="461" y="212" width="5" height="15" fill="rgb(211,163,12)"/><text x="464.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:742) (1 samples, 0.21%)</title><rect x="463" y="228" width="3" height="15" fill="rgb(249,57,5)"/><text x="466.00" y="238.50"></text></g><g><title>array_subtract (number.c:334) (1 samples, 0.21%)</title><rect x="466" y="212" width="2" height="15" fill="rgb(235,131,18)"/><text x="469.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.21%)</title><rect x="468" y="244" width="3" height="15" fill="rgb(251,220,20)"/><text x="471.00" y="254.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.21%)</title><rect x="468" y="260" width="3" height="15" fill="rgb(220,216,48)"/><text x="471.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.21%)</title><rect x="468" y="276" width="3" height="15" fill="rgb(212,41,52)"/><text x="471.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.21%)</title><rect x="468" y="292" width="3" height="15" fill="rgb(248,52,29)"/><text x="471.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:969) (1 samples, 0.21%)</title><rect x="468" y="308" width="3" height="15" fill="rgb(225,120,28)"/><text x="471.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.21%)</title><rect x="471" y="244" width="2" height="15" fill="rgb(221,7,27)"/><text x="474.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.21%)</title><rect x="471" y="260" width="2" height="15" fill="rgb(225,60,28)"/><text x="474.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2851) (1 samples, 0.21%)</title><rect x="476" y="308" width="2" height="15" fill="rgb(226,79,41)"/><text x="479.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.62%)</title><rect x="473" y="276" width="8" height="15" fill="rgb(239,193,23)"/><text x="476.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.62%)</title><rect x="473" y="292" width="8" height="15" fill="rgb(227,128,49)"/><text x="476.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3031) (1 samples, 0.21%)</title><rect x="478" y="308" width="3" height="15" fill="rgb(242,171,10)"/><text x="481.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:305) (1 samples, 0.21%)</title><rect x="481" y="292" width="2" height="15" fill="rgb(248,228,38)"/><text x="484.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.46%)</title><rect x="468" y="228" width="17" height="15" fill="rgb(253,186,15)"/><text x="471.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.04%)</title><rect x="473" y="244" width="12" height="15" fill="rgb(221,119,13)"/><text x="476.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.04%)</title><rect x="473" y="260" width="12" height="15" fill="rgb(208,193,0)"/><text x="476.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.42%)</title><rect x="481" y="276" width="4" height="15" fill="rgb(211,185,53)"/><text x="484.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.21%)</title><rect x="483" y="292" width="2" height="15" fill="rgb(221,115,52)"/><text x="486.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.21%)</title><rect x="485" y="228" width="3" height="15" fill="rgb(244,191,16)"/><text x="488.00" y="238.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:92) (23 samples, 4.78%)</title><rect x="434" y="196" width="56" height="15" fill="rgb(211,64,0)"/><text x="437.00" y="206.50">softm..</text></g><g><title>array_subtract (number.c:342) (9 samples, 1.87%)</title><rect x="468" y="212" width="22" height="15" fill="rgb(248,228,33)"/><text x="471.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.21%)</title><rect x="488" y="228" width="2" height="15" fill="rgb(207,81,52)"/><text x="491.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.21%)</title><rect x="490" y="212" width="3" height="15" fill="rgb(218,226,26)"/><text x="493.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.21%)</title><rect x="490" y="228" width="3" height="15" fill="rgb(249,215,22)"/><text x="493.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.21%)</title><rect x="490" y="244" width="3" height="15" fill="rgb(219,114,34)"/><text x="493.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.21%)</title><rect x="490" y="260" width="3" height="15" fill="rgb(232,67,24)"/><text x="493.00" y="270.50"></text></g><g><title>softmax (sklearn/neural_network/_base.py:93) (2 samples, 0.42%)</title><rect x="490" y="196" width="5" height="15" fill="rgb(248,80,24)"/><text x="493.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.21%)</title><rect x="493" y="212" width="2" height="15" fill="rgb(225,229,22)"/><text x="496.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.21%)</title><rect x="493" y="228" width="2" height="15" fill="rgb(243,10,25)"/><text x="496.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2006) (1 samples, 0.21%)</title><rect x="493" y="244" width="2" height="15" fill="rgb(230,22,30)"/><text x="496.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:51) (1 samples, 0.21%)</title><rect x="500" y="292" width="3" height="15" fill="rgb(205,52,34)"/><text x="503.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.42%)</title><rect x="503" y="340" width="5" height="15" fill="rgb(216,16,23)"/><text x="506.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="505" y="356" width="3" height="15" fill="rgb(206,159,38)"/><text x="508.00" y="366.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 0.83%)</title><rect x="500" y="260" width="10" height="15" fill="rgb(242,124,3)"/><text x="503.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.83%)</title><rect x="500" y="276" width="10" height="15" fill="rgb(244,158,15)"/><text x="503.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.62%)</title><rect x="503" y="292" width="7" height="15" fill="rgb(247,1,32)"/><text x="506.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.62%)</title><rect x="503" y="308" width="7" height="15" fill="rgb(242,151,29)"/><text x="506.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.62%)</title><rect x="503" y="324" width="7" height="15" fill="rgb(220,15,7)"/><text x="506.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.21%)</title><rect x="508" y="340" width="2" height="15" fill="rgb(211,140,45)"/><text x="511.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.21%)</title><rect x="510" y="276" width="2" height="15" fill="rgb(251,165,49)"/><text x="513.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.21%)</title><rect x="510" y="292" width="2" height="15" fill="rgb(244,121,47)"/><text x="513.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.21%)</title><rect x="512" y="292" width="3" height="15" fill="rgb(244,160,11)"/><text x="515.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.21%)</title><rect x="512" y="308" width="3" height="15" fill="rgb(248,107,37)"/><text x="515.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.21%)</title><rect x="512" y="324" width="3" height="15" fill="rgb(237,143,42)"/><text x="515.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.21%)</title><rect x="512" y="340" width="3" height="15" fill="rgb(222,31,29)"/><text x="515.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.21%)</title><rect x="515" y="308" width="2" height="15" fill="rgb(220,18,7)"/><text x="518.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.21%)</title><rect x="515" y="324" width="2" height="15" fill="rgb(254,215,53)"/><text x="518.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.21%)</title><rect x="515" y="340" width="2" height="15" fill="rgb(206,176,19)"/><text x="518.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.21%)</title><rect x="515" y="356" width="2" height="15" fill="rgb(251,192,1)"/><text x="518.00" y="366.50"></text></g><g><title>0x7f26db692a74 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="515" y="372" width="2" height="15" fill="rgb(214,190,20)"/><text x="518.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.21%)</title><rect x="517" y="324" width="3" height="15" fill="rgb(216,151,23)"/><text x="520.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:725) (1 samples, 0.21%)</title><rect x="517" y="340" width="3" height="15" fill="rgb(220,10,12)"/><text x="520.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.42%)</title><rect x="517" y="308" width="5" height="15" fill="rgb(221,156,52)"/><text x="520.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.21%)</title><rect x="520" y="324" width="2" height="15" fill="rgb(249,207,1)"/><text x="523.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.21%)</title><rect x="520" y="340" width="2" height="15" fill="rgb(215,87,44)"/><text x="523.00" y="350.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (1 samples, 0.21%)</title><rect x="520" y="356" width="2" height="15" fill="rgb(230,21,9)"/><text x="523.00" y="366.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 2.29%)</title><rect x="498" y="212" width="27" height="15" fill="rgb(206,43,41)"/><text x="501.00" y="222.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.29%)</title><rect x="498" y="228" width="27" height="15" fill="rgb(243,18,5)"/><text x="501.00" y="238.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 2.29%)</title><rect x="498" y="244" width="27" height="15" fill="rgb(209,128,26)"/><text x="501.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.25%)</title><rect x="510" y="260" width="15" height="15" fill="rgb(240,101,48)"/><text x="513.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.04%)</title><rect x="512" y="276" width="13" height="15" fill="rgb(254,200,9)"/><text x="515.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.83%)</title><rect x="515" y="292" width="10" height="15" fill="rgb(250,204,13)"/><text x="518.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.21%)</title><rect x="522" y="308" width="3" height="15" fill="rgb(247,121,46)"/><text x="525.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.21%)</title><rect x="522" y="324" width="3" height="15" fill="rgb(249,172,38)"/><text x="525.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.21%)</title><rect x="522" y="340" width="3" height="15" fill="rgb(247,105,14)"/><text x="525.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.21%)</title><rect x="522" y="356" width="3" height="15" fill="rgb(219,42,27)"/><text x="525.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.21%)</title><rect x="525" y="228" width="2" height="15" fill="rgb(254,166,11)"/><text x="528.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.21%)</title><rect x="525" y="244" width="2" height="15" fill="rgb(228,65,10)"/><text x="528.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.21%)</title><rect x="527" y="244" width="3" height="15" fill="rgb(239,50,2)"/><text x="530.00" y="254.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:203) (1 samples, 0.21%)</title><rect x="527" y="260" width="3" height="15" fill="rgb(247,68,34)"/><text x="530.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:206) (1 samples, 0.21%)</title><rect x="530" y="276" width="2" height="15" fill="rgb(209,76,15)"/><text x="533.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.83%)</title><rect x="525" y="212" width="9" height="15" fill="rgb(225,164,30)"/><text x="528.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.62%)</title><rect x="527" y="228" width="7" height="15" fill="rgb(238,163,38)"/><text x="530.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.42%)</title><rect x="530" y="244" width="4" height="15" fill="rgb(231,145,49)"/><text x="533.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.42%)</title><rect x="530" y="260" width="4" height="15" fill="rgb(220,133,52)"/><text x="533.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.21%)</title><rect x="532" y="276" width="2" height="15" fill="rgb(244,99,6)"/><text x="535.00" y="286.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2156) (1 samples, 0.21%)</title><rect x="532" y="292" width="2" height="15" fill="rgb(242,53,31)"/><text x="535.00" y="302.50"></text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1072) (173 samples, 35.97%)</title><rect x="113" y="148" width="424" height="15" fill="rgb(242,26,32)"/><text x="116.00" y="158.50">predict_proba (sklearn/neural_network/_multilayer_percept..</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (126 samples, 26.20%)</title><rect x="228" y="164" width="309" height="15" fill="rgb(211,172,26)"/><text x="231.00" y="174.50">_predict (sklearn/neural_network/_multila..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:113) (42 samples, 8.73%)</title><rect x="434" y="180" width="103" height="15" fill="rgb(235,42,26)"/><text x="437.00" y="190.50">_forward_pas..</text></g><g><title>softmax (sklearn/neural_network/_base.py:94) (17 samples, 3.53%)</title><rect x="495" y="196" width="42" height="15" fill="rgb(211,100,46)"/><text x="498.00" y="206.50">sof..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.21%)</title><rect x="534" y="212" width="3" height="15" fill="rgb(250,50,30)"/><text x="537.00" y="222.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.21%)</title><rect x="534" y="228" width="3" height="15" fill="rgb(211,200,9)"/><text x="537.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:38) (211 samples, 43.87%)</title><rect x="22" y="52" width="517" height="15" fill="rgb(218,40,2)"/><text x="25.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:37) (211 samples, 43.87%)</title><rect x="22" y="68" width="517" height="15" fill="rgb(209,217,6)"/><text x="25.00" y="78.50">profile_skl (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:29) (211 samples, 43.87%)</title><rect x="22" y="84" width="517" height="15" fill="rgb(234,202,34)"/><text x="25.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:23) (207 samples, 43.04%)</title><rect x="32" y="100" width="507" height="15" fill="rgb(250,160,10)"/><text x="35.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (207 samples, 43.04%)</title><rect x="32" y="116" width="507" height="15" fill="rgb(231,66,46)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (202 samples, 42.00%)</title><rect x="44" y="132" width="495" height="15" fill="rgb(207,26,37)"/><text x="47.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/neural_network/_multilayer_perceptron.py:1074) (1 samples, 0.21%)</title><rect x="537" y="148" width="2" height="15" fill="rgb(221,49,32)"/><text x="540.00" y="158.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.21%)</title><rect x="539" y="820" width="3" height="15" fill="rgb(207,80,0)"/><text x="542.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.21%)</title><rect x="539" y="836" width="3" height="15" fill="rgb(238,134,52)"/><text x="542.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.21%)</title><rect x="539" y="852" width="3" height="15" fill="rgb(221,82,54)"/><text x="542.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.21%)</title><rect x="539" y="868" width="3" height="15" fill="rgb(229,132,26)"/><text x="542.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.21%)</title><rect x="539" y="884" width="3" height="15" fill="rgb(251,158,5)"/><text x="542.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.21%)</title><rect x="539" y="900" width="3" height="15" fill="rgb(234,183,26)"/><text x="542.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.21%)</title><rect x="539" y="916" width="3" height="15" fill="rgb(228,196,13)"/><text x="542.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.21%)</title><rect x="539" y="932" width="3" height="15" fill="rgb(222,23,45)"/><text x="542.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.21%)</title><rect x="539" y="948" width="3" height="15" fill="rgb(243,21,26)"/><text x="542.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.21%)</title><rect x="539" y="964" width="3" height="15" fill="rgb(212,218,19)"/><text x="542.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.21%)</title><rect x="539" y="980" width="3" height="15" fill="rgb(212,206,6)"/><text x="542.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.21%)</title><rect x="539" y="996" width="3" height="15" fill="rgb(212,50,15)"/><text x="542.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.21%)</title><rect x="539" y="1012" width="3" height="15" fill="rgb(221,61,31)"/><text x="542.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.21%)</title><rect x="539" y="1028" width="3" height="15" fill="rgb(235,132,34)"/><text x="542.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.21%)</title><rect x="539" y="1044" width="3" height="15" fill="rgb(239,137,31)"/><text x="542.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:2) (2 samples, 0.42%)</title><rect x="539" y="148" width="5" height="15" fill="rgb(212,3,14)"/><text x="542.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="164" width="5" height="15" fill="rgb(253,225,41)"/><text x="542.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="539" y="180" width="5" height="15" fill="rgb(247,123,29)"/><text x="542.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="196" width="5" height="15" fill="rgb(226,58,28)"/><text x="542.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="212" width="5" height="15" fill="rgb(217,29,31)"/><text x="542.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="539" y="228" width="5" height="15" fill="rgb(252,215,45)"/><text x="542.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="539" y="244" width="5" height="15" fill="rgb(220,214,33)"/><text x="542.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="539" y="260" width="5" height="15" fill="rgb(253,74,5)"/><text x="542.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="276" width="5" height="15" fill="rgb(238,142,2)"/><text x="542.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.42%)</title><rect x="539" y="292" width="5" height="15" fill="rgb(221,169,11)"/><text x="542.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="308" width="5" height="15" fill="rgb(228,185,1)"/><text x="542.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="539" y="324" width="5" height="15" fill="rgb(209,0,32)"/><text x="542.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="539" y="340" width="5" height="15" fill="rgb(214,6,17)"/><text x="542.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="539" y="356" width="5" height="15" fill="rgb(238,223,52)"/><text x="542.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="372" width="5" height="15" fill="rgb(223,78,41)"/><text x="542.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.42%)</title><rect x="539" y="388" width="5" height="15" fill="rgb(253,18,13)"/><text x="542.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="404" width="5" height="15" fill="rgb(215,194,29)"/><text x="542.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="539" y="420" width="5" height="15" fill="rgb(225,99,21)"/><text x="542.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="539" y="436" width="5" height="15" fill="rgb(253,219,1)"/><text x="542.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="539" y="452" width="5" height="15" fill="rgb(239,14,14)"/><text x="542.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="468" width="5" height="15" fill="rgb(237,52,44)"/><text x="542.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.42%)</title><rect x="539" y="484" width="5" height="15" fill="rgb(220,82,49)"/><text x="542.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="500" width="5" height="15" fill="rgb(236,188,22)"/><text x="542.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="539" y="516" width="5" height="15" fill="rgb(236,148,52)"/><text x="542.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="539" y="532" width="5" height="15" fill="rgb(229,179,2)"/><text x="542.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="539" y="548" width="5" height="15" fill="rgb(248,166,30)"/><text x="542.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="564" width="5" height="15" fill="rgb(248,145,52)"/><text x="542.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.42%)</title><rect x="539" y="580" width="5" height="15" fill="rgb(219,170,27)"/><text x="542.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="596" width="5" height="15" fill="rgb(219,212,27)"/><text x="542.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="539" y="612" width="5" height="15" fill="rgb(209,101,25)"/><text x="542.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="628" width="5" height="15" fill="rgb(237,55,37)"/><text x="542.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="644" width="5" height="15" fill="rgb(215,109,31)"/><text x="542.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="539" y="660" width="5" height="15" fill="rgb(219,209,54)"/><text x="542.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="539" y="676" width="5" height="15" fill="rgb(222,115,54)"/><text x="542.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="539" y="692" width="5" height="15" fill="rgb(230,221,50)"/><text x="542.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="708" width="5" height="15" fill="rgb(236,87,29)"/><text x="542.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.42%)</title><rect x="539" y="724" width="5" height="15" fill="rgb(240,32,17)"/><text x="542.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="539" y="740" width="5" height="15" fill="rgb(209,146,49)"/><text x="542.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="539" y="756" width="5" height="15" fill="rgb(211,214,2)"/><text x="542.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="539" y="772" width="5" height="15" fill="rgb(222,186,0)"/><text x="542.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="539" y="788" width="5" height="15" fill="rgb(243,147,17)"/><text x="542.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="539" y="804" width="5" height="15" fill="rgb(205,11,36)"/><text x="542.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.21%)</title><rect x="542" y="820" width="2" height="15" fill="rgb(248,6,9)"/><text x="545.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="542" y="836" width="2" height="15" fill="rgb(211,132,44)"/><text x="545.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="542" y="852" width="2" height="15" fill="rgb(224,60,12)"/><text x="545.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="542" y="868" width="2" height="15" fill="rgb(208,114,34)"/><text x="545.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="542" y="884" width="2" height="15" fill="rgb(229,212,27)"/><text x="545.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="542" y="900" width="2" height="15" fill="rgb(236,82,35)"/><text x="545.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.21%)</title><rect x="542" y="916" width="2" height="15" fill="rgb(216,151,23)"/><text x="545.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="542" y="932" width="2" height="15" fill="rgb(250,186,45)"/><text x="545.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="542" y="948" width="2" height="15" fill="rgb(206,69,12)"/><text x="545.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.21%)</title><rect x="542" y="964" width="2" height="15" fill="rgb(234,149,44)"/><text x="545.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.21%)</title><rect x="542" y="980" width="2" height="15" fill="rgb(217,218,10)"/><text x="545.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.21%)</title><rect x="542" y="996" width="2" height="15" fill="rgb(237,139,28)"/><text x="545.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="542" y="1012" width="2" height="15" fill="rgb(227,222,40)"/><text x="545.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="542" y="1028" width="2" height="15" fill="rgb(254,190,25)"/><text x="545.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="542" y="1044" width="2" height="15" fill="rgb(235,110,14)"/><text x="545.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="542" y="1060" width="2" height="15" fill="rgb(206,198,47)"/><text x="545.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="542" y="1076" width="2" height="15" fill="rgb(247,212,0)"/><text x="545.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5391) (1 samples, 0.21%)</title><rect x="542" y="1092" width="2" height="15" fill="rgb(236,209,26)"/><text x="545.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2703) (1 samples, 0.21%)</title><rect x="542" y="1108" width="2" height="15" fill="rgb(224,133,48)"/><text x="545.00" y="1118.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.21%)</title><rect x="542" y="1124" width="2" height="15" fill="rgb(210,3,3)"/><text x="545.00" y="1134.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.21%)</title><rect x="542" y="1140" width="2" height="15" fill="rgb(212,72,33)"/><text x="545.00" y="1150.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.21%)</title><rect x="542" y="1156" width="2" height="15" fill="rgb(216,78,33)"/><text x="545.00" y="1166.50"></text></g><g><title>parse (sre_parse.py:922) (1 samples, 0.21%)</title><rect x="542" y="1172" width="2" height="15" fill="rgb(249,152,11)"/><text x="545.00" y="1182.50"></text></g><g><title>__init__ (sre_parse.py:232) (1 samples, 0.21%)</title><rect x="542" y="1188" width="2" height="15" fill="rgb(232,153,54)"/><text x="545.00" y="1198.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:4) (1 samples, 0.21%)</title><rect x="544" y="148" width="3" height="15" fill="rgb(210,26,31)"/><text x="547.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="164" width="3" height="15" fill="rgb(240,163,48)"/><text x="547.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="544" y="180" width="3" height="15" fill="rgb(208,191,27)"/><text x="547.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="196" width="3" height="15" fill="rgb(230,204,29)"/><text x="547.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="212" width="3" height="15" fill="rgb(230,48,44)"/><text x="547.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="228" width="3" height="15" fill="rgb(224,163,18)"/><text x="547.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="244" width="3" height="15" fill="rgb(208,6,41)"/><text x="547.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="260" width="3" height="15" fill="rgb(230,96,5)"/><text x="547.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="276" width="3" height="15" fill="rgb(242,154,46)"/><text x="547.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.21%)</title><rect x="544" y="292" width="3" height="15" fill="rgb(217,68,7)"/><text x="547.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="308" width="3" height="15" fill="rgb(244,2,28)"/><text x="547.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="324" width="3" height="15" fill="rgb(214,33,47)"/><text x="547.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="340" width="3" height="15" fill="rgb(236,4,19)"/><text x="547.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="356" width="3" height="15" fill="rgb(208,58,54)"/><text x="547.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(227,7,47)"/><text x="547.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.21%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(227,3,53)"/><text x="547.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="404" width="3" height="15" fill="rgb(219,78,36)"/><text x="547.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="420" width="3" height="15" fill="rgb(209,166,35)"/><text x="547.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="436" width="3" height="15" fill="rgb(236,83,34)"/><text x="547.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="452" width="3" height="15" fill="rgb(224,22,14)"/><text x="547.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="468" width="3" height="15" fill="rgb(205,137,29)"/><text x="547.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.21%)</title><rect x="544" y="484" width="3" height="15" fill="rgb(213,142,45)"/><text x="547.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="500" width="3" height="15" fill="rgb(218,173,17)"/><text x="547.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="516" width="3" height="15" fill="rgb(254,76,16)"/><text x="547.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="532" width="3" height="15" fill="rgb(236,193,42)"/><text x="547.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="548" width="3" height="15" fill="rgb(221,179,13)"/><text x="547.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="564" width="3" height="15" fill="rgb(244,1,27)"/><text x="547.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.21%)</title><rect x="544" y="580" width="3" height="15" fill="rgb(225,95,51)"/><text x="547.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="596" width="3" height="15" fill="rgb(245,71,49)"/><text x="547.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="612" width="3" height="15" fill="rgb(238,97,3)"/><text x="547.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="628" width="3" height="15" fill="rgb(214,123,41)"/><text x="547.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="644" width="3" height="15" fill="rgb(236,210,36)"/><text x="547.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="660" width="3" height="15" fill="rgb(241,46,16)"/><text x="547.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.21%)</title><rect x="544" y="676" width="3" height="15" fill="rgb(247,24,9)"/><text x="547.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="692" width="3" height="15" fill="rgb(214,227,22)"/><text x="547.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="708" width="3" height="15" fill="rgb(230,56,13)"/><text x="547.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="724" width="3" height="15" fill="rgb(243,170,47)"/><text x="547.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="740" width="3" height="15" fill="rgb(250,187,21)"/><text x="547.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="756" width="3" height="15" fill="rgb(239,150,30)"/><text x="547.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.21%)</title><rect x="544" y="772" width="3" height="15" fill="rgb(239,59,38)"/><text x="547.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="788" width="3" height="15" fill="rgb(244,210,41)"/><text x="547.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="804" width="3" height="15" fill="rgb(240,69,2)"/><text x="547.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="820" width="3" height="15" fill="rgb(222,164,42)"/><text x="547.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="836" width="3" height="15" fill="rgb(233,44,7)"/><text x="547.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="852" width="3" height="15" fill="rgb(242,129,28)"/><text x="547.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (1 samples, 0.21%)</title><rect x="544" y="868" width="3" height="15" fill="rgb(215,91,14)"/><text x="547.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="884" width="3" height="15" fill="rgb(221,51,54)"/><text x="547.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="900" width="3" height="15" fill="rgb(245,3,7)"/><text x="547.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="916" width="3" height="15" fill="rgb(244,181,21)"/><text x="547.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="932" width="3" height="15" fill="rgb(219,135,32)"/><text x="547.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="948" width="3" height="15" fill="rgb(209,45,40)"/><text x="547.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (1 samples, 0.21%)</title><rect x="544" y="964" width="3" height="15" fill="rgb(241,212,29)"/><text x="547.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="544" y="980" width="3" height="15" fill="rgb(219,127,35)"/><text x="547.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="996" width="3" height="15" fill="rgb(217,47,43)"/><text x="547.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="1012" width="3" height="15" fill="rgb(209,162,51)"/><text x="547.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="1028" width="3" height="15" fill="rgb(218,76,29)"/><text x="547.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="1044" width="3" height="15" fill="rgb(213,184,34)"/><text x="547.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="1060" width="3" height="15" fill="rgb(250,41,25)"/><text x="547.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="1076" width="3" height="15" fill="rgb(218,197,19)"/><text x="547.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (1 samples, 0.21%)</title><rect x="544" y="1092" width="3" height="15" fill="rgb(233,114,8)"/><text x="547.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="544" y="1108" width="3" height="15" fill="rgb(224,98,38)"/><text x="547.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="1124" width="3" height="15" fill="rgb(209,228,6)"/><text x="547.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="1140" width="3" height="15" fill="rgb(236,140,43)"/><text x="547.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="1156" width="3" height="15" fill="rgb(209,89,33)"/><text x="547.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="1172" width="3" height="15" fill="rgb(226,43,50)"/><text x="547.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="544" y="1188" width="3" height="15" fill="rgb(239,32,21)"/><text x="547.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="1204" width="3" height="15" fill="rgb(250,179,21)"/><text x="547.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:212) (1 samples, 0.21%)</title><rect x="544" y="1220" width="3" height="15" fill="rgb(220,60,0)"/><text x="547.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="1236" width="3" height="15" fill="rgb(248,201,34)"/><text x="547.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="1252" width="3" height="15" fill="rgb(243,84,51)"/><text x="547.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="544" y="1268" width="3" height="15" fill="rgb(209,183,48)"/><text x="547.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.21%)</title><rect x="544" y="1284" width="3" height="15" fill="rgb(222,217,40)"/><text x="547.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="1300" width="3" height="15" fill="rgb(253,132,32)"/><text x="547.00" y="1310.50"></text></g><g><title>0x7f26bc10454b (?) (1 samples, 0.21%)</title><rect x="544" y="1316" width="3" height="15" fill="rgb(222,185,45)"/><text x="547.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="544" y="1332" width="3" height="15" fill="rgb(231,100,39)"/><text x="547.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="544" y="1348" width="3" height="15" fill="rgb(242,179,28)"/><text x="547.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.21%)</title><rect x="544" y="1364" width="3" height="15" fill="rgb(234,203,31)"/><text x="547.00" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.21%)</title><rect x="544" y="1380" width="3" height="15" fill="rgb(215,41,52)"/><text x="547.00" y="1390.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.21%)</title><rect x="544" y="1396" width="3" height="15" fill="rgb(211,19,29)"/><text x="547.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="544" y="1412" width="3" height="15" fill="rgb(211,74,10)"/><text x="547.00" y="1422.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.21%)</title><rect x="544" y="1428" width="3" height="15" fill="rgb(221,129,3)"/><text x="547.00" y="1438.50"></text></g><g><title>0x7f26db962a2a (libdl-2.29.so) (1 samples, 0.21%)</title><rect x="544" y="1444" width="3" height="15" fill="rgb(224,52,44)"/><text x="547.00" y="1454.50"></text></g><g><title>__GI___pthread_getspecific (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="544" y="1460" width="3" height="15" fill="rgb(248,42,41)"/><text x="547.00" y="1470.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.21%)</title><rect x="547" y="1492" width="2" height="15" fill="rgb(225,162,17)"/><text x="550.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="547" y="1508" width="2" height="15" fill="rgb(250,172,10)"/><text x="550.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="547" y="1524" width="2" height="15" fill="rgb(252,224,7)"/><text x="550.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="547" y="1540" width="2" height="15" fill="rgb(227,114,54)"/><text x="550.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="547" y="1556" width="2" height="15" fill="rgb(228,4,13)"/><text x="550.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="547" y="1572" width="2" height="15" fill="rgb(225,169,50)"/><text x="550.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.21%)</title><rect x="547" y="1588" width="2" height="15" fill="rgb(252,72,20)"/><text x="550.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="547" y="1604" width="2" height="15" fill="rgb(228,222,2)"/><text x="550.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="547" y="1620" width="2" height="15" fill="rgb(245,183,19)"/><text x="550.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="547" y="1636" width="2" height="15" fill="rgb(243,120,4)"/><text x="550.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="547" y="1652" width="2" height="15" fill="rgb(220,143,8)"/><text x="550.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="547" y="1668" width="2" height="15" fill="rgb(227,112,41)"/><text x="550.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.21%)</title><rect x="547" y="1684" width="2" height="15" fill="rgb(220,21,41)"/><text x="550.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="547" y="1700" width="2" height="15" fill="rgb(210,138,38)"/><text x="550.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="547" y="1716" width="2" height="15" fill="rgb(237,93,33)"/><text x="550.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="547" y="1732" width="2" height="15" fill="rgb(250,30,22)"/><text x="550.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="547" y="1748" width="2" height="15" fill="rgb(254,142,3)"/><text x="550.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="547" y="1764" width="2" height="15" fill="rgb(242,85,10)"/><text x="550.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.21%)</title><rect x="547" y="1780" width="2" height="15" fill="rgb(242,133,5)"/><text x="550.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="547" y="1796" width="2" height="15" fill="rgb(221,66,36)"/><text x="550.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="547" y="1812" width="2" height="15" fill="rgb(253,199,1)"/><text x="550.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="547" y="1828" width="2" height="15" fill="rgb(237,135,28)"/><text x="550.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="547" y="1844" width="2" height="15" fill="rgb(242,90,18)"/><text x="550.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="547" y="1860" width="2" height="15" fill="rgb(230,159,13)"/><text x="550.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.21%)</title><rect x="547" y="1876" width="2" height="15" fill="rgb(231,134,4)"/><text x="550.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.21%)</title><rect x="547" y="1892" width="2" height="15" fill="rgb(236,221,26)"/><text x="550.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.21%)</title><rect x="547" y="1908" width="2" height="15" fill="rgb(219,53,1)"/><text x="550.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.21%)</title><rect x="547" y="1924" width="2" height="15" fill="rgb(216,138,19)"/><text x="550.00" y="1934.50"></text></g><g><title>search (re.py:183) (1 samples, 0.21%)</title><rect x="547" y="1940" width="2" height="15" fill="rgb(236,129,12)"/><text x="550.00" y="1950.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.21%)</title><rect x="547" y="1956" width="2" height="15" fill="rgb(229,137,11)"/><text x="550.00" y="1966.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.21%)</title><rect x="547" y="1972" width="2" height="15" fill="rgb(224,53,7)"/><text x="550.00" y="1982.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.21%)</title><rect x="547" y="1988" width="2" height="15" fill="rgb(249,133,29)"/><text x="550.00" y="1998.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.21%)</title><rect x="547" y="2004" width="2" height="15" fill="rgb(205,13,52)"/><text x="550.00" y="2014.50"></text></g><g><title>_parse (sre_parse.py:506) (1 samples, 0.21%)</title><rect x="547" y="2020" width="2" height="15" fill="rgb(220,148,54)"/><text x="550.00" y="2030.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.21%)</title><rect x="547" y="2036" width="2" height="15" fill="rgb(243,12,47)"/><text x="550.00" y="2046.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.42%)</title><rect x="547" y="436" width="5" height="15" fill="rgb(240,205,25)"/><text x="550.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="452" width="5" height="15" fill="rgb(248,80,5)"/><text x="550.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="468" width="5" height="15" fill="rgb(215,142,3)"/><text x="550.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="484" width="5" height="15" fill="rgb(219,119,30)"/><text x="550.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="500" width="5" height="15" fill="rgb(230,57,15)"/><text x="550.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="516" width="5" height="15" fill="rgb(225,159,31)"/><text x="550.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.42%)</title><rect x="547" y="532" width="5" height="15" fill="rgb(251,115,6)"/><text x="550.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="548" width="5" height="15" fill="rgb(216,99,46)"/><text x="550.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="564" width="5" height="15" fill="rgb(241,7,0)"/><text x="550.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="580" width="5" height="15" fill="rgb(206,172,20)"/><text x="550.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="596" width="5" height="15" fill="rgb(232,209,43)"/><text x="550.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="612" width="5" height="15" fill="rgb(205,114,43)"/><text x="550.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.42%)</title><rect x="547" y="628" width="5" height="15" fill="rgb(223,46,39)"/><text x="550.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="644" width="5" height="15" fill="rgb(249,223,49)"/><text x="550.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="660" width="5" height="15" fill="rgb(243,56,19)"/><text x="550.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="676" width="5" height="15" fill="rgb(207,197,44)"/><text x="550.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="692" width="5" height="15" fill="rgb(223,211,39)"/><text x="550.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="708" width="5" height="15" fill="rgb(249,203,44)"/><text x="550.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.42%)</title><rect x="547" y="724" width="5" height="15" fill="rgb(233,163,25)"/><text x="550.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="740" width="5" height="15" fill="rgb(240,95,40)"/><text x="550.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="756" width="5" height="15" fill="rgb(248,226,25)"/><text x="550.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="772" width="5" height="15" fill="rgb(237,166,25)"/><text x="550.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="788" width="5" height="15" fill="rgb(254,45,47)"/><text x="550.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="804" width="5" height="15" fill="rgb(253,190,24)"/><text x="550.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.42%)</title><rect x="547" y="820" width="5" height="15" fill="rgb(230,94,45)"/><text x="550.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="836" width="5" height="15" fill="rgb(205,113,49)"/><text x="550.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="852" width="5" height="15" fill="rgb(231,137,0)"/><text x="550.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="868" width="5" height="15" fill="rgb(231,53,13)"/><text x="550.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="884" width="5" height="15" fill="rgb(251,169,38)"/><text x="550.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="900" width="5" height="15" fill="rgb(244,67,0)"/><text x="550.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.42%)</title><rect x="547" y="916" width="5" height="15" fill="rgb(217,68,48)"/><text x="550.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="932" width="5" height="15" fill="rgb(238,11,3)"/><text x="550.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="948" width="5" height="15" fill="rgb(222,129,28)"/><text x="550.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="964" width="5" height="15" fill="rgb(253,220,16)"/><text x="550.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="980" width="5" height="15" fill="rgb(212,167,28)"/><text x="550.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="996" width="5" height="15" fill="rgb(230,155,27)"/><text x="550.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.42%)</title><rect x="547" y="1012" width="5" height="15" fill="rgb(216,105,32)"/><text x="550.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="1028" width="5" height="15" fill="rgb(248,39,45)"/><text x="550.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="1044" width="5" height="15" fill="rgb(237,168,13)"/><text x="550.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="1060" width="5" height="15" fill="rgb(254,45,1)"/><text x="550.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="1076" width="5" height="15" fill="rgb(244,138,43)"/><text x="550.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="1092" width="5" height="15" fill="rgb(208,145,9)"/><text x="550.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.42%)</title><rect x="547" y="1108" width="5" height="15" fill="rgb(246,29,5)"/><text x="550.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="1124" width="5" height="15" fill="rgb(223,104,8)"/><text x="550.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="1140" width="5" height="15" fill="rgb(222,70,35)"/><text x="550.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="1156" width="5" height="15" fill="rgb(236,119,42)"/><text x="550.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="1172" width="5" height="15" fill="rgb(243,211,47)"/><text x="550.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="1188" width="5" height="15" fill="rgb(232,176,38)"/><text x="550.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.42%)</title><rect x="547" y="1204" width="5" height="15" fill="rgb(233,203,1)"/><text x="550.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="1220" width="5" height="15" fill="rgb(239,67,53)"/><text x="550.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="1236" width="5" height="15" fill="rgb(240,78,10)"/><text x="550.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="1252" width="5" height="15" fill="rgb(243,1,15)"/><text x="550.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="1268" width="5" height="15" fill="rgb(210,54,20)"/><text x="550.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="1284" width="5" height="15" fill="rgb(232,177,51)"/><text x="550.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.42%)</title><rect x="547" y="1300" width="5" height="15" fill="rgb(242,154,6)"/><text x="550.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="1316" width="5" height="15" fill="rgb(222,18,1)"/><text x="550.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="1332" width="5" height="15" fill="rgb(227,152,48)"/><text x="550.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="1348" width="5" height="15" fill="rgb(252,87,34)"/><text x="550.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="1364" width="5" height="15" fill="rgb(246,220,13)"/><text x="550.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="1380" width="5" height="15" fill="rgb(214,194,11)"/><text x="550.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.42%)</title><rect x="547" y="1396" width="5" height="15" fill="rgb(248,90,39)"/><text x="550.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="547" y="1412" width="5" height="15" fill="rgb(232,192,32)"/><text x="550.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="547" y="1428" width="5" height="15" fill="rgb(205,131,5)"/><text x="550.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="547" y="1444" width="5" height="15" fill="rgb(223,191,14)"/><text x="550.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="547" y="1460" width="5" height="15" fill="rgb(251,171,22)"/><text x="550.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="547" y="1476" width="5" height="15" fill="rgb(236,148,34)"/><text x="550.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.21%)</title><rect x="549" y="1492" width="3" height="15" fill="rgb(206,3,5)"/><text x="552.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="549" y="1508" width="3" height="15" fill="rgb(242,68,2)"/><text x="552.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="549" y="1524" width="3" height="15" fill="rgb(237,47,29)"/><text x="552.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="549" y="1540" width="3" height="15" fill="rgb(241,102,18)"/><text x="552.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="549" y="1556" width="3" height="15" fill="rgb(226,3,38)"/><text x="552.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="549" y="1572" width="3" height="15" fill="rgb(223,1,6)"/><text x="552.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.21%)</title><rect x="549" y="1588" width="3" height="15" fill="rgb(210,156,40)"/><text x="552.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.21%)</title><rect x="549" y="1604" width="3" height="15" fill="rgb(211,70,12)"/><text x="552.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.21%)</title><rect x="549" y="1620" width="3" height="15" fill="rgb(228,137,28)"/><text x="552.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1264) (1 samples, 0.21%)</title><rect x="549" y="1636" width="3" height="15" fill="rgb(215,43,26)"/><text x="552.00" y="1646.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.21%)</title><rect x="549" y="1652" width="3" height="15" fill="rgb(253,203,28)"/><text x="552.00" y="1662.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.21%)</title><rect x="549" y="1668" width="3" height="15" fill="rgb(239,67,0)"/><text x="552.00" y="1678.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.21%)</title><rect x="549" y="1684" width="3" height="15" fill="rgb(219,46,25)"/><text x="552.00" y="1694.50"></text></g><g><title>parse (sre_parse.py:940) (1 samples, 0.21%)</title><rect x="549" y="1700" width="3" height="15" fill="rgb(206,60,53)"/><text x="552.00" y="1710.50"></text></g><g><title>fix_flags (sre_parse.py:909) (1 samples, 0.21%)</title><rect x="549" y="1716" width="3" height="15" fill="rgb(243,82,21)"/><text x="552.00" y="1726.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:4) (6 samples, 1.25%)</title><rect x="539" y="52" width="15" height="15" fill="rgb(216,82,6)"/><text x="542.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.25%)</title><rect x="539" y="68" width="15" height="15" fill="rgb(215,57,16)"/><text x="542.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.25%)</title><rect x="539" y="84" width="15" height="15" fill="rgb(213,43,31)"/><text x="542.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.25%)</title><rect x="539" y="100" width="15" height="15" fill="rgb(228,48,2)"/><text x="542.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.25%)</title><rect x="539" y="116" width="15" height="15" fill="rgb(252,214,25)"/><text x="542.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.25%)</title><rect x="539" y="132" width="15" height="15" fill="rgb(250,24,46)"/><text x="542.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPClassifier/bench_MLPClassifier_default_b_cl.py:7) (3 samples, 0.62%)</title><rect x="547" y="148" width="7" height="15" fill="rgb(245,215,0)"/><text x="550.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.62%)</title><rect x="547" y="164" width="7" height="15" fill="rgb(245,182,53)"/><text x="550.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.62%)</title><rect x="547" y="180" width="7" height="15" fill="rgb(236,136,15)"/><text x="550.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.62%)</title><rect x="547" y="196" width="7" height="15" fill="rgb(235,172,16)"/><text x="550.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.62%)</title><rect x="547" y="212" width="7" height="15" fill="rgb(222,131,11)"/><text x="550.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.62%)</title><rect x="547" y="228" width="7" height="15" fill="rgb(254,213,20)"/><text x="550.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.62%)</title><rect x="547" y="244" width="7" height="15" fill="rgb(225,51,45)"/><text x="550.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.62%)</title><rect x="547" y="260" width="7" height="15" fill="rgb(251,26,11)"/><text x="550.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.62%)</title><rect x="547" y="276" width="7" height="15" fill="rgb(241,57,52)"/><text x="550.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.62%)</title><rect x="547" y="292" width="7" height="15" fill="rgb(232,56,43)"/><text x="550.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.62%)</title><rect x="547" y="308" width="7" height="15" fill="rgb(234,36,8)"/><text x="550.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.62%)</title><rect x="547" y="324" width="7" height="15" fill="rgb(238,23,22)"/><text x="550.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.62%)</title><rect x="547" y="340" width="7" height="15" fill="rgb(241,13,32)"/><text x="550.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.62%)</title><rect x="547" y="356" width="7" height="15" fill="rgb(242,216,31)"/><text x="550.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.62%)</title><rect x="547" y="372" width="7" height="15" fill="rgb(226,17,12)"/><text x="550.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.62%)</title><rect x="547" y="388" width="7" height="15" fill="rgb(218,13,26)"/><text x="550.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.62%)</title><rect x="547" y="404" width="7" height="15" fill="rgb(249,107,52)"/><text x="550.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.62%)</title><rect x="547" y="420" width="7" height="15" fill="rgb(208,46,11)"/><text x="550.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.21%)</title><rect x="552" y="436" width="2" height="15" fill="rgb(238,14,3)"/><text x="555.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="452" width="2" height="15" fill="rgb(234,178,44)"/><text x="555.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="552" y="468" width="2" height="15" fill="rgb(236,126,39)"/><text x="555.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="484" width="2" height="15" fill="rgb(211,80,32)"/><text x="555.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="500" width="2" height="15" fill="rgb(245,51,45)"/><text x="555.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="516" width="2" height="15" fill="rgb(246,149,22)"/><text x="555.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="532" width="2" height="15" fill="rgb(219,11,36)"/><text x="555.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="548" width="2" height="15" fill="rgb(238,72,20)"/><text x="555.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="564" width="2" height="15" fill="rgb(217,178,21)"/><text x="555.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.21%)</title><rect x="552" y="580" width="2" height="15" fill="rgb(236,65,37)"/><text x="555.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="596" width="2" height="15" fill="rgb(249,194,36)"/><text x="555.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="612" width="2" height="15" fill="rgb(228,110,14)"/><text x="555.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="628" width="2" height="15" fill="rgb(233,21,42)"/><text x="555.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="644" width="2" height="15" fill="rgb(248,129,20)"/><text x="555.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="660" width="2" height="15" fill="rgb(218,203,7)"/><text x="555.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.21%)</title><rect x="552" y="676" width="2" height="15" fill="rgb(228,219,13)"/><text x="555.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="692" width="2" height="15" fill="rgb(249,111,38)"/><text x="555.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="708" width="2" height="15" fill="rgb(210,60,40)"/><text x="555.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="724" width="2" height="15" fill="rgb(217,139,15)"/><text x="555.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="740" width="2" height="15" fill="rgb(218,172,51)"/><text x="555.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="756" width="2" height="15" fill="rgb(207,123,6)"/><text x="555.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.21%)</title><rect x="552" y="772" width="2" height="15" fill="rgb(247,17,17)"/><text x="555.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="788" width="2" height="15" fill="rgb(237,220,50)"/><text x="555.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="804" width="2" height="15" fill="rgb(232,124,52)"/><text x="555.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="820" width="2" height="15" fill="rgb(235,0,12)"/><text x="555.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="836" width="2" height="15" fill="rgb(254,91,41)"/><text x="555.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="852" width="2" height="15" fill="rgb(220,33,43)"/><text x="555.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.21%)</title><rect x="552" y="868" width="2" height="15" fill="rgb(227,177,28)"/><text x="555.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="884" width="2" height="15" fill="rgb(213,173,40)"/><text x="555.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="552" y="900" width="2" height="15" fill="rgb(215,9,44)"/><text x="555.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="916" width="2" height="15" fill="rgb(222,216,43)"/><text x="555.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="932" width="2" height="15" fill="rgb(222,41,54)"/><text x="555.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="948" width="2" height="15" fill="rgb(219,101,44)"/><text x="555.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="964" width="2" height="15" fill="rgb(244,147,48)"/><text x="555.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="980" width="2" height="15" fill="rgb(224,207,45)"/><text x="555.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="996" width="2" height="15" fill="rgb(235,43,8)"/><text x="555.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.21%)</title><rect x="552" y="1012" width="2" height="15" fill="rgb(218,208,37)"/><text x="555.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1028" width="2" height="15" fill="rgb(233,173,34)"/><text x="555.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="1044" width="2" height="15" fill="rgb(245,73,22)"/><text x="555.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="1060" width="2" height="15" fill="rgb(214,63,25)"/><text x="555.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="1076" width="2" height="15" fill="rgb(214,175,5)"/><text x="555.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1092" width="2" height="15" fill="rgb(227,50,13)"/><text x="555.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.21%)</title><rect x="552" y="1108" width="2" height="15" fill="rgb(251,122,41)"/><text x="555.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1124" width="2" height="15" fill="rgb(248,223,23)"/><text x="555.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="1140" width="2" height="15" fill="rgb(238,85,9)"/><text x="555.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="1156" width="2" height="15" fill="rgb(227,38,45)"/><text x="555.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="1172" width="2" height="15" fill="rgb(206,154,8)"/><text x="555.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1188" width="2" height="15" fill="rgb(232,79,27)"/><text x="555.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.21%)</title><rect x="552" y="1204" width="2" height="15" fill="rgb(253,39,29)"/><text x="555.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1220" width="2" height="15" fill="rgb(211,199,34)"/><text x="555.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="1236" width="2" height="15" fill="rgb(251,160,5)"/><text x="555.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="1252" width="2" height="15" fill="rgb(240,158,3)"/><text x="555.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="1268" width="2" height="15" fill="rgb(218,229,44)"/><text x="555.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1284" width="2" height="15" fill="rgb(234,82,10)"/><text x="555.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.21%)</title><rect x="552" y="1300" width="2" height="15" fill="rgb(215,113,3)"/><text x="555.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1316" width="2" height="15" fill="rgb(237,17,52)"/><text x="555.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="1332" width="2" height="15" fill="rgb(241,157,26)"/><text x="555.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="1348" width="2" height="15" fill="rgb(211,176,11)"/><text x="555.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="1364" width="2" height="15" fill="rgb(234,94,13)"/><text x="555.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1380" width="2" height="15" fill="rgb(242,222,23)"/><text x="555.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.21%)</title><rect x="552" y="1396" width="2" height="15" fill="rgb(206,11,35)"/><text x="555.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1412" width="2" height="15" fill="rgb(205,79,15)"/><text x="555.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="1428" width="2" height="15" fill="rgb(244,109,3)"/><text x="555.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="1444" width="2" height="15" fill="rgb(251,57,23)"/><text x="555.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="1460" width="2" height="15" fill="rgb(209,48,37)"/><text x="555.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1476" width="2" height="15" fill="rgb(239,132,47)"/><text x="555.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.21%)</title><rect x="552" y="1492" width="2" height="15" fill="rgb(216,75,38)"/><text x="555.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="552" y="1508" width="2" height="15" fill="rgb(216,50,38)"/><text x="555.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1524" width="2" height="15" fill="rgb(242,71,15)"/><text x="555.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1540" width="2" height="15" fill="rgb(246,158,3)"/><text x="555.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="552" y="1556" width="2" height="15" fill="rgb(211,104,4)"/><text x="555.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="552" y="1572" width="2" height="15" fill="rgb(206,118,7)"/><text x="555.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="552" y="1588" width="2" height="15" fill="rgb(214,5,29)"/><text x="555.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="552" y="1604" width="2" height="15" fill="rgb(208,4,29)"/><text x="555.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:14) (1 samples, 0.21%)</title><rect x="552" y="1620" width="2" height="15" fill="rgb(225,20,33)"/><text x="555.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="552" y="1636" width="2" height="15" fill="rgb(253,151,37)"/><text x="555.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.21%)</title><rect x="552" y="1652" width="2" height="15" fill="rgb(229,169,25)"/><text x="555.00" y="1662.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.21%)</title><rect x="552" y="1668" width="2" height="15" fill="rgb(242,111,21)"/><text x="555.00" y="1678.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.21%)</title><rect x="552" y="1684" width="2" height="15" fill="rgb(230,215,11)"/><text x="555.00" y="1694.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.21%)</title><rect x="552" y="1700" width="2" height="15" fill="rgb(235,215,6)"/><text x="555.00" y="1710.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.21%)</title><rect x="552" y="1716" width="2" height="15" fill="rgb(250,9,5)"/><text x="555.00" y="1726.50"></text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:28) (1 samples, 0.21%)</title><rect x="554" y="84" width="3" height="15" fill="rgb(223,50,15)"/><text x="557.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.21%)</title><rect x="554" y="100" width="3" height="15" fill="rgb(237,112,49)"/><text x="557.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.21%)</title><rect x="554" y="116" width="3" height="15" fill="rgb(231,60,20)"/><text x="557.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.21%)</title><rect x="554" y="132" width="3" height="15" fill="rgb(239,103,4)"/><text x="557.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.21%)</title><rect x="554" y="148" width="3" height="15" fill="rgb(221,170,7)"/><text x="557.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.21%)</title><rect x="554" y="164" width="3" height="15" fill="rgb(222,209,35)"/><text x="557.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.21%)</title><rect x="554" y="180" width="3" height="15" fill="rgb(211,216,9)"/><text x="557.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.21%)</title><rect x="554" y="196" width="3" height="15" fill="rgb(217,9,20)"/><text x="557.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="554" y="212" width="3" height="15" fill="rgb(249,163,14)"/><text x="557.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="554" y="228" width="3" height="15" fill="rgb(219,95,44)"/><text x="557.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="554" y="244" width="3" height="15" fill="rgb(210,208,9)"/><text x="557.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="554" y="260" width="3" height="15" fill="rgb(211,21,7)"/><text x="557.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="554" y="276" width="3" height="15" fill="rgb(241,121,51)"/><text x="557.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.21%)</title><rect x="554" y="292" width="3" height="15" fill="rgb(241,119,31)"/><text x="557.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="554" y="308" width="3" height="15" fill="rgb(232,0,13)"/><text x="557.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="554" y="324" width="3" height="15" fill="rgb(226,162,33)"/><text x="557.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="554" y="340" width="3" height="15" fill="rgb(220,145,30)"/><text x="557.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="554" y="356" width="3" height="15" fill="rgb(233,80,34)"/><text x="557.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="554" y="372" width="3" height="15" fill="rgb(215,212,23)"/><text x="557.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.21%)</title><rect x="554" y="388" width="3" height="15" fill="rgb(215,145,27)"/><text x="557.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="554" y="404" width="3" height="15" fill="rgb(214,63,36)"/><text x="557.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="554" y="420" width="3" height="15" fill="rgb(233,82,0)"/><text x="557.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="554" y="436" width="3" height="15" fill="rgb(252,124,20)"/><text x="557.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="554" y="452" width="3" height="15" fill="rgb(224,52,36)"/><text x="557.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="554" y="468" width="3" height="15" fill="rgb(223,1,8)"/><text x="557.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.21%)</title><rect x="554" y="484" width="3" height="15" fill="rgb(254,200,3)"/><text x="557.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.21%)</title><rect x="554" y="500" width="3" height="15" fill="rgb(244,140,22)"/><text x="557.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.21%)</title><rect x="554" y="516" width="3" height="15" fill="rgb(210,39,37)"/><text x="557.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.21%)</title><rect x="554" y="532" width="3" height="15" fill="rgb(241,119,7)"/><text x="557.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.21%)</title><rect x="554" y="548" width="3" height="15" fill="rgb(252,32,47)"/><text x="557.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.21%)</title><rect x="554" y="564" width="3" height="15" fill="rgb(205,74,34)"/><text x="557.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.21%)</title><rect x="554" y="580" width="3" height="15" fill="rgb(212,35,22)"/><text x="557.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.21%)</title><rect x="554" y="596" width="3" height="15" fill="rgb(216,113,47)"/><text x="557.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:744) (1 samples, 0.21%)</title><rect x="554" y="612" width="3" height="15" fill="rgb(229,125,42)"/><text x="557.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.21%)</title><rect x="554" y="628" width="3" height="15" fill="rgb(224,32,52)"/><text x="557.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.21%)</title><rect x="554" y="644" width="3" height="15" fill="rgb(233,84,12)"/><text x="557.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.21%)</title><rect x="554" y="660" width="3" height="15" fill="rgb(226,106,11)"/><text x="557.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.21%)</title><rect x="554" y="676" width="3" height="15" fill="rgb(249,163,40)"/><text x="557.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.21%)</title><rect x="554" y="692" width="3" height="15" fill="rgb(206,52,48)"/><text x="557.00" y="702.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.21%)</title><rect x="554" y="708" width="3" height="15" fill="rgb(206,177,46)"/><text x="557.00" y="718.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.21%)</title><rect x="554" y="724" width="3" height="15" fill="rgb(220,92,10)"/><text x="557.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.21%)</title><rect x="554" y="740" width="3" height="15" fill="rgb(242,167,17)"/><text x="557.00" y="750.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.21%)</title><rect x="554" y="756" width="3" height="15" fill="rgb(208,140,1)"/><text x="557.00" y="766.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.21%)</title><rect x="554" y="772" width="3" height="15" fill="rgb(253,85,37)"/><text x="557.00" y="782.50"></text></g><g><title>iter_fields (jinja2/nodes.py:156) (1 samples, 0.21%)</title><rect x="554" y="788" width="3" height="15" fill="rgb(221,145,1)"/><text x="557.00" y="798.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.21%)</title><rect x="559" y="116" width="2" height="15" fill="rgb(230,0,17)"/><text x="562.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.21%)</title><rect x="559" y="132" width="2" height="15" fill="rgb(219,147,40)"/><text x="562.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.21%)</title><rect x="559" y="148" width="2" height="15" fill="rgb(222,58,36)"/><text x="562.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.21%)</title><rect x="591" y="180" width="2" height="15" fill="rgb(251,42,33)"/><text x="594.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (25 samples, 5.20%)</title><rect x="593" y="180" width="62" height="15" fill="rgb(226,126,10)"/><text x="596.00" y="190.50">run (m..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (6 samples, 1.25%)</title><rect x="640" y="196" width="15" height="15" fill="rgb(208,106,42)"/><text x="643.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (2 samples, 0.42%)</title><rect x="687" y="212" width="4" height="15" fill="rgb(239,100,1)"/><text x="690.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.21%)</title><rect x="691" y="212" width="3" height="15" fill="rgb(248,111,11)"/><text x="694.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:523) (1 samples, 0.21%)</title><rect x="691" y="228" width="3" height="15" fill="rgb(246,86,1)"/><text x="694.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.21%)</title><rect x="694" y="244" width="2" height="15" fill="rgb(210,29,2)"/><text x="697.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.21%)</title><rect x="694" y="260" width="2" height="15" fill="rgb(213,119,49)"/><text x="697.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.21%)</title><rect x="694" y="276" width="2" height="15" fill="rgb(230,207,28)"/><text x="697.00" y="286.50"></text></g><g><title>prepare_index (mapping.c:492) (1 samples, 0.21%)</title><rect x="696" y="244" width="3" height="15" fill="rgb(208,60,9)"/><text x="699.00" y="254.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.21%)</title><rect x="696" y="260" width="3" height="15" fill="rgb(232,216,17)"/><text x="699.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 0.62%)</title><rect x="694" y="228" width="7" height="15" fill="rgb(219,118,7)"/><text x="697.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.21%)</title><rect x="699" y="244" width="2" height="15" fill="rgb(220,219,22)"/><text x="702.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.21%)</title><rect x="699" y="260" width="2" height="15" fill="rgb(232,50,28)"/><text x="702.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.21%)</title><rect x="699" y="276" width="2" height="15" fill="rgb(246,87,2)"/><text x="702.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.21%)</title><rect x="699" y="292" width="2" height="15" fill="rgb(252,193,34)"/><text x="702.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.21%)</title><rect x="701" y="244" width="3" height="15" fill="rgb(248,134,3)"/><text x="704.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="701" y="260" width="3" height="15" fill="rgb(230,81,25)"/><text x="704.00" y="270.50"></text></g><g><title>0x7f26db6dc1a3 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="701" y="276" width="3" height="15" fill="rgb(248,17,6)"/><text x="704.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.21%)</title><rect x="704" y="276" width="2" height="15" fill="rgb(207,124,4)"/><text x="707.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.21%)</title><rect x="704" y="292" width="2" height="15" fill="rgb(223,157,14)"/><text x="707.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (2 samples, 0.42%)</title><rect x="704" y="244" width="5" height="15" fill="rgb(227,153,35)"/><text x="707.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.42%)</title><rect x="704" y="260" width="5" height="15" fill="rgb(223,97,41)"/><text x="707.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.21%)</title><rect x="706" y="276" width="3" height="15" fill="rgb(232,155,38)"/><text x="709.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.21%)</title><rect x="706" y="292" width="3" height="15" fill="rgb(223,166,39)"/><text x="709.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (4 samples, 0.83%)</title><rect x="701" y="228" width="10" height="15" fill="rgb(240,165,41)"/><text x="704.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2839) (1 samples, 0.21%)</title><rect x="709" y="244" width="2" height="15" fill="rgb(233,106,4)"/><text x="712.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.21%)</title><rect x="709" y="260" width="2" height="15" fill="rgb(209,170,51)"/><text x="712.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1672) (1 samples, 0.21%)</title><rect x="711" y="228" width="3" height="15" fill="rgb(218,181,12)"/><text x="714.00" y="238.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:264) (1 samples, 0.21%)</title><rect x="711" y="244" width="3" height="15" fill="rgb(208,99,35)"/><text x="714.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (9 samples, 1.87%)</title><rect x="694" y="212" width="22" height="15" fill="rgb(220,43,50)"/><text x="697.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.21%)</title><rect x="714" y="228" width="2" height="15" fill="rgb(242,38,11)"/><text x="717.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1781) (1 samples, 0.21%)</title><rect x="714" y="244" width="2" height="15" fill="rgb(240,46,53)"/><text x="717.00" y="254.50"></text></g><g><title>0x7f26da8fcb20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="714" y="260" width="2" height="15" fill="rgb(208,136,25)"/><text x="717.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.21%)</title><rect x="716" y="212" width="2" height="15" fill="rgb(220,36,44)"/><text x="719.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:46) (1 samples, 0.21%)</title><rect x="718" y="212" width="3" height="15" fill="rgb(251,37,21)"/><text x="721.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.21%)</title><rect x="728" y="260" width="3" height="15" fill="rgb(222,12,18)"/><text x="731.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (3 samples, 0.62%)</title><rect x="726" y="244" width="7" height="15" fill="rgb(216,122,7)"/><text x="729.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.21%)</title><rect x="731" y="260" width="2" height="15" fill="rgb(238,202,41)"/><text x="734.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.21%)</title><rect x="731" y="276" width="2" height="15" fill="rgb(234,13,28)"/><text x="734.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.21%)</title><rect x="731" y="292" width="2" height="15" fill="rgb(213,35,49)"/><text x="734.00" y="302.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.21%)</title><rect x="733" y="244" width="3" height="15" fill="rgb(230,8,19)"/><text x="736.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.21%)</title><rect x="733" y="260" width="3" height="15" fill="rgb(207,94,34)"/><text x="736.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.21%)</title><rect x="733" y="276" width="3" height="15" fill="rgb(232,123,9)"/><text x="736.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.21%)</title><rect x="733" y="292" width="3" height="15" fill="rgb(207,215,54)"/><text x="736.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.21%)</title><rect x="733" y="308" width="3" height="15" fill="rgb(254,22,4)"/><text x="736.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4131) (1 samples, 0.21%)</title><rect x="733" y="324" width="3" height="15" fill="rgb(220,148,3)"/><text x="736.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.21%)</title><rect x="736" y="260" width="2" height="15" fill="rgb(207,93,48)"/><text x="739.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.21%)</title><rect x="736" y="276" width="2" height="15" fill="rgb(223,135,48)"/><text x="739.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.21%)</title><rect x="736" y="292" width="2" height="15" fill="rgb(230,206,1)"/><text x="739.00" y="302.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.21%)</title><rect x="736" y="308" width="2" height="15" fill="rgb(254,119,53)"/><text x="739.00" y="318.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:668) (1 samples, 0.21%)</title><rect x="736" y="324" width="2" height="15" fill="rgb(238,187,6)"/><text x="739.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (8 samples, 1.66%)</title><rect x="721" y="212" width="20" height="15" fill="rgb(207,161,9)"/><text x="724.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (6 samples, 1.25%)</title><rect x="726" y="228" width="15" height="15" fill="rgb(207,209,10)"/><text x="729.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.42%)</title><rect x="736" y="244" width="5" height="15" fill="rgb(206,77,23)"/><text x="739.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.21%)</title><rect x="738" y="260" width="3" height="15" fill="rgb(247,8,21)"/><text x="741.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.21%)</title><rect x="738" y="276" width="3" height="15" fill="rgb(223,24,36)"/><text x="741.00" y="286.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.21%)</title><rect x="738" y="292" width="3" height="15" fill="rgb(222,68,53)"/><text x="741.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.21%)</title><rect x="741" y="228" width="2" height="15" fill="rgb(248,185,46)"/><text x="744.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.21%)</title><rect x="741" y="244" width="2" height="15" fill="rgb(221,138,31)"/><text x="744.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.21%)</title><rect x="741" y="260" width="2" height="15" fill="rgb(206,56,46)"/><text x="744.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.21%)</title><rect x="741" y="276" width="2" height="15" fill="rgb(219,123,20)"/><text x="744.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:642) (1 samples, 0.21%)</title><rect x="741" y="292" width="2" height="15" fill="rgb(245,3,40)"/><text x="744.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.42%)</title><rect x="741" y="212" width="4" height="15" fill="rgb(209,219,0)"/><text x="744.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.21%)</title><rect x="743" y="228" width="2" height="15" fill="rgb(215,211,30)"/><text x="746.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.21%)</title><rect x="743" y="244" width="2" height="15" fill="rgb(236,84,14)"/><text x="746.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.21%)</title><rect x="743" y="260" width="2" height="15" fill="rgb(209,135,31)"/><text x="746.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.21%)</title><rect x="743" y="276" width="2" height="15" fill="rgb(235,189,6)"/><text x="746.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:165) (1 samples, 0.21%)</title><rect x="745" y="212" width="3" height="15" fill="rgb(240,190,52)"/><text x="748.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (2 samples, 0.42%)</title><rect x="750" y="228" width="5" height="15" fill="rgb(234,114,21)"/><text x="753.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (33 samples, 6.86%)</title><rect x="679" y="196" width="81" height="15" fill="rgb(223,100,39)"/><text x="682.00" y="206.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (5 samples, 1.04%)</title><rect x="748" y="212" width="12" height="15" fill="rgb(223,64,15)"/><text x="751.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (2 samples, 0.42%)</title><rect x="755" y="228" width="5" height="15" fill="rgb(205,221,1)"/><text x="758.00" y="238.50"></text></g><g><title>0x7f26db7b8134 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="770" y="324" width="2" height="15" fill="rgb(230,71,53)"/><text x="773.00" y="334.50"></text></g><g><title>array_argmax (methods.c:292) (1 samples, 0.21%)</title><rect x="772" y="340" width="3" height="15" fill="rgb(213,39,4)"/><text x="775.00" y="350.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (5 samples, 1.04%)</title><rect x="765" y="260" width="12" height="15" fill="rgb(229,51,42)"/><text x="768.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 0.83%)</title><rect x="768" y="276" width="9" height="15" fill="rgb(219,63,19)"/><text x="771.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.62%)</title><rect x="770" y="292" width="7" height="15" fill="rgb(251,205,40)"/><text x="773.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.62%)</title><rect x="770" y="308" width="7" height="15" fill="rgb(214,76,41)"/><text x="773.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.42%)</title><rect x="772" y="324" width="5" height="15" fill="rgb(236,217,10)"/><text x="775.00" y="334.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.21%)</title><rect x="775" y="340" width="2" height="15" fill="rgb(221,39,2)"/><text x="778.00" y="350.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:14) (1 samples, 0.21%)</title><rect x="777" y="260" width="3" height="15" fill="rgb(229,32,5)"/><text x="780.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.21%)</title><rect x="777" y="276" width="3" height="15" fill="rgb(213,215,51)"/><text x="780.00" y="286.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (2 samples, 0.42%)</title><rect x="780" y="308" width="5" height="15" fill="rgb(217,63,53)"/><text x="783.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (2 samples, 0.42%)</title><rect x="780" y="324" width="5" height="15" fill="rgb(252,72,9)"/><text x="783.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1630) (1 samples, 0.21%)</title><rect x="782" y="340" width="3" height="15" fill="rgb(252,24,8)"/><text x="785.00" y="350.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (4 samples, 0.83%)</title><rect x="780" y="260" width="10" height="15" fill="rgb(225,71,54)"/><text x="783.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (4 samples, 0.83%)</title><rect x="780" y="276" width="10" height="15" fill="rgb(238,166,18)"/><text x="783.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.83%)</title><rect x="780" y="292" width="10" height="15" fill="rgb(251,116,40)"/><text x="783.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (2 samples, 0.42%)</title><rect x="785" y="308" width="5" height="15" fill="rgb(223,152,16)"/><text x="788.00" y="318.50"></text></g><g><title>0x7f26db6fb1ef (libc-2.29.so) (1 samples, 0.21%)</title><rect x="787" y="324" width="3" height="15" fill="rgb(243,149,41)"/><text x="790.00" y="334.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.21%)</title><rect x="795" y="276" width="2" height="15" fill="rgb(254,58,36)"/><text x="798.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.21%)</title><rect x="795" y="292" width="2" height="15" fill="rgb(224,49,17)"/><text x="798.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.21%)</title><rect x="795" y="308" width="2" height="15" fill="rgb(209,30,48)"/><text x="798.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.21%)</title><rect x="795" y="324" width="2" height="15" fill="rgb(233,203,4)"/><text x="798.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1043) (1 samples, 0.21%)</title><rect x="795" y="340" width="2" height="15" fill="rgb(211,194,53)"/><text x="798.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.21%)</title><rect x="795" y="356" width="2" height="15" fill="rgb(217,180,6)"/><text x="798.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.21%)</title><rect x="795" y="372" width="2" height="15" fill="rgb(236,177,1)"/><text x="798.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="795" y="388" width="2" height="15" fill="rgb(229,186,1)"/><text x="798.00" y="398.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (4 samples, 0.83%)</title><rect x="790" y="260" width="9" height="15" fill="rgb(251,73,48)"/><text x="793.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.21%)</title><rect x="797" y="276" width="2" height="15" fill="rgb(245,68,5)"/><text x="800.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.21%)</title><rect x="797" y="292" width="2" height="15" fill="rgb(244,223,50)"/><text x="800.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.21%)</title><rect x="797" y="308" width="2" height="15" fill="rgb(231,173,16)"/><text x="800.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4010) (1 samples, 0.21%)</title><rect x="797" y="324" width="2" height="15" fill="rgb(212,165,37)"/><text x="800.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (17 samples, 3.53%)</title><rect x="760" y="196" width="42" height="15" fill="rgb(244,103,18)"/><text x="763.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (17 samples, 3.53%)</title><rect x="760" y="212" width="42" height="15" fill="rgb(250,90,40)"/><text x="763.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (16 samples, 3.33%)</title><rect x="763" y="228" width="39" height="15" fill="rgb(220,29,26)"/><text x="766.00" y="238.50">_ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (16 samples, 3.33%)</title><rect x="763" y="244" width="39" height="15" fill="rgb(249,216,30)"/><text x="766.00" y="254.50">_ru..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.21%)</title><rect x="799" y="260" width="3" height="15" fill="rgb(238,92,52)"/><text x="802.00" y="270.50"></text></g><g><title>0x7f26da8fd9c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="799" y="276" width="3" height="15" fill="rgb(208,54,11)"/><text x="802.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:313) (1 samples, 0.21%)</title><rect x="802" y="196" width="2" height="15" fill="rgb(237,196,39)"/><text x="805.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:18) (1 samples, 0.21%)</title><rect x="807" y="228" width="2" height="15" fill="rgb(247,8,44)"/><text x="810.00" y="238.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.21%)</title><rect x="809" y="324" width="3" height="15" fill="rgb(239,1,45)"/><text x="812.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.21%)</title><rect x="809" y="340" width="3" height="15" fill="rgb(208,128,17)"/><text x="812.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.42%)</title><rect x="809" y="276" width="5" height="15" fill="rgb(210,214,1)"/><text x="812.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (2 samples, 0.42%)</title><rect x="809" y="292" width="5" height="15" fill="rgb(249,209,49)"/><text x="812.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (2 samples, 0.42%)</title><rect x="809" y="308" width="5" height="15" fill="rgb(236,134,40)"/><text x="812.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.21%)</title><rect x="812" y="324" width="2" height="15" fill="rgb(224,183,45)"/><text x="815.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.62%)</title><rect x="809" y="260" width="8" height="15" fill="rgb(205,183,14)"/><text x="812.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.21%)</title><rect x="814" y="276" width="3" height="15" fill="rgb(224,87,10)"/><text x="817.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.21%)</title><rect x="814" y="292" width="3" height="15" fill="rgb(215,55,4)"/><text x="817.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.21%)</title><rect x="814" y="308" width="3" height="15" fill="rgb(245,206,21)"/><text x="817.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.21%)</title><rect x="817" y="260" width="2" height="15" fill="rgb(223,174,11)"/><text x="820.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.21%)</title><rect x="817" y="276" width="2" height="15" fill="rgb(224,190,31)"/><text x="820.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.21%)</title><rect x="819" y="276" width="3" height="15" fill="rgb(241,227,28)"/><text x="822.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.21%)</title><rect x="819" y="292" width="3" height="15" fill="rgb(237,128,44)"/><text x="822.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.21%)</title><rect x="819" y="308" width="3" height="15" fill="rgb(205,30,44)"/><text x="822.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.21%)</title><rect x="819" y="324" width="3" height="15" fill="rgb(245,27,40)"/><text x="822.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (6 samples, 1.25%)</title><rect x="809" y="228" width="15" height="15" fill="rgb(217,156,33)"/><text x="812.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.25%)</title><rect x="809" y="244" width="15" height="15" fill="rgb(237,19,33)"/><text x="812.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.42%)</title><rect x="819" y="260" width="5" height="15" fill="rgb(209,132,9)"/><text x="822.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.21%)</title><rect x="822" y="276" width="2" height="15" fill="rgb(239,2,39)"/><text x="825.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.21%)</title><rect x="822" y="292" width="2" height="15" fill="rgb(238,169,23)"/><text x="825.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (1 samples, 0.21%)</title><rect x="822" y="308" width="2" height="15" fill="rgb(233,168,31)"/><text x="825.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.62%)</title><rect x="829" y="292" width="7" height="15" fill="rgb(220,68,14)"/><text x="832.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.62%)</title><rect x="829" y="308" width="7" height="15" fill="rgb(242,174,41)"/><text x="832.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.62%)</title><rect x="829" y="324" width="7" height="15" fill="rgb(225,125,18)"/><text x="832.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.62%)</title><rect x="829" y="340" width="7" height="15" fill="rgb(236,187,19)"/><text x="832.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.62%)</title><rect x="829" y="356" width="7" height="15" fill="rgb(244,159,52)"/><text x="832.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.62%)</title><rect x="829" y="372" width="7" height="15" fill="rgb(244,50,11)"/><text x="832.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.21%)</title><rect x="836" y="356" width="3" height="15" fill="rgb(254,130,45)"/><text x="839.00" y="366.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.21%)</title><rect x="836" y="372" width="3" height="15" fill="rgb(210,193,39)"/><text x="839.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.42%)</title><rect x="836" y="340" width="5" height="15" fill="rgb(219,47,48)"/><text x="839.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.21%)</title><rect x="839" y="356" width="2" height="15" fill="rgb(208,109,23)"/><text x="842.00" y="366.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1629) (1 samples, 0.21%)</title><rect x="839" y="372" width="2" height="15" fill="rgb(227,206,25)"/><text x="842.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.21%)</title><rect x="841" y="340" width="3" height="15" fill="rgb(210,196,21)"/><text x="844.00" y="350.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.21%)</title><rect x="841" y="356" width="3" height="15" fill="rgb(244,39,39)"/><text x="844.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:568) (1 samples, 0.21%)</title><rect x="844" y="340" width="2" height="15" fill="rgb(213,219,27)"/><text x="847.00" y="350.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.21%)</title><rect x="844" y="356" width="2" height="15" fill="rgb(230,213,49)"/><text x="847.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.21%)</title><rect x="846" y="340" width="3" height="15" fill="rgb(212,28,44)"/><text x="849.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3477) (1 samples, 0.21%)</title><rect x="846" y="356" width="3" height="15" fill="rgb(231,180,17)"/><text x="849.00" y="366.50"></text></g><g><title>array_max (methods.c:323) (11 samples, 2.29%)</title><rect x="826" y="244" width="27" height="15" fill="rgb(218,107,54)"/><text x="829.00" y="254.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 2.29%)</title><rect x="826" y="260" width="27" height="15" fill="rgb(240,150,48)"/><text x="829.00" y="270.50">f..</text></g><g><title>_amax (numpy/core/_methods.py:30) (11 samples, 2.29%)</title><rect x="826" y="276" width="27" height="15" fill="rgb(222,43,17)"/><text x="829.00" y="286.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 1.46%)</title><rect x="836" y="292" width="17" height="15" fill="rgb(223,21,26)"/><text x="839.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 1.46%)</title><rect x="836" y="308" width="17" height="15" fill="rgb(205,48,50)"/><text x="839.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 1.46%)</title><rect x="836" y="324" width="17" height="15" fill="rgb(223,76,0)"/><text x="839.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.42%)</title><rect x="849" y="340" width="4" height="15" fill="rgb(227,182,5)"/><text x="852.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.42%)</title><rect x="849" y="356" width="4" height="15" fill="rgb(222,132,52)"/><text x="852.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.42%)</title><rect x="849" y="372" width="4" height="15" fill="rgb(245,187,47)"/><text x="852.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.21%)</title><rect x="853" y="260" width="3" height="15" fill="rgb(228,56,40)"/><text x="856.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.21%)</title><rect x="853" y="276" width="3" height="15" fill="rgb(232,142,43)"/><text x="856.00" y="286.50"></text></g><g><title>0x7f26db6fb120 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="853" y="292" width="3" height="15" fill="rgb(245,37,54)"/><text x="856.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:237) (1 samples, 0.21%)</title><rect x="856" y="308" width="2" height="15" fill="rgb(232,207,23)"/><text x="859.00" y="318.50"></text></g><g><title>0x7f26db6fb14a (libc-2.29.so) (1 samples, 0.21%)</title><rect x="856" y="324" width="2" height="15" fill="rgb(228,14,30)"/><text x="859.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.42%)</title><rect x="856" y="292" width="5" height="15" fill="rgb(207,168,10)"/><text x="859.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.21%)</title><rect x="858" y="308" width="3" height="15" fill="rgb(213,149,1)"/><text x="861.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.21%)</title><rect x="858" y="324" width="3" height="15" fill="rgb(246,140,51)"/><text x="861.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.21%)</title><rect x="858" y="340" width="3" height="15" fill="rgb(245,17,34)"/><text x="861.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.83%)</title><rect x="853" y="244" width="10" height="15" fill="rgb(240,101,44)"/><text x="856.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.62%)</title><rect x="856" y="260" width="7" height="15" fill="rgb(252,71,0)"/><text x="859.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.62%)</title><rect x="856" y="276" width="7" height="15" fill="rgb(234,65,22)"/><text x="859.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.21%)</title><rect x="861" y="292" width="2" height="15" fill="rgb(222,21,53)"/><text x="864.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.21%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(229,161,6)"/><text x="864.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.21%)</title><rect x="861" y="324" width="2" height="15" fill="rgb(252,34,51)"/><text x="864.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:22) (17 samples, 3.53%)</title><rect x="824" y="228" width="42" height="15" fill="rgb(228,127,49)"/><text x="827.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.21%)</title><rect x="863" y="244" width="3" height="15" fill="rgb(210,104,2)"/><text x="866.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.21%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(212,146,30)"/><text x="866.00" y="270.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:226) (1 samples, 0.21%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(218,110,3)"/><text x="866.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.21%)</title><rect x="866" y="244" width="2" height="15" fill="rgb(207,226,28)"/><text x="869.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.21%)</title><rect x="866" y="260" width="2" height="15" fill="rgb(228,229,12)"/><text x="869.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.21%)</title><rect x="866" y="276" width="2" height="15" fill="rgb(237,87,50)"/><text x="869.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.21%)</title><rect x="866" y="292" width="2" height="15" fill="rgb(240,39,31)"/><text x="869.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.21%)</title><rect x="866" y="308" width="2" height="15" fill="rgb(235,34,30)"/><text x="869.00" y="318.50"></text></g><g><title>0x7f26db7b8134 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="866" y="324" width="2" height="15" fill="rgb(252,222,42)"/><text x="869.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.21%)</title><rect x="868" y="244" width="3" height="15" fill="rgb(207,204,25)"/><text x="871.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.21%)</title><rect x="868" y="260" width="3" height="15" fill="rgb(215,170,42)"/><text x="871.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.21%)</title><rect x="868" y="276" width="3" height="15" fill="rgb(230,46,10)"/><text x="871.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.21%)</title><rect x="868" y="292" width="3" height="15" fill="rgb(227,154,19)"/><text x="871.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.21%)</title><rect x="868" y="308" width="3" height="15" fill="rgb(218,14,1)"/><text x="871.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:23) (3 samples, 0.62%)</title><rect x="866" y="228" width="7" height="15" fill="rgb(215,35,35)"/><text x="869.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4766) (1 samples, 0.21%)</title><rect x="871" y="244" width="2" height="15" fill="rgb(232,124,29)"/><text x="874.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.21%)</title><rect x="883" y="244" width="2" height="15" fill="rgb(242,87,16)"/><text x="886.00" y="254.50"></text></g><g><title>prepare_index (mapping.c:793) (1 samples, 0.21%)</title><rect x="883" y="260" width="2" height="15" fill="rgb(224,72,54)"/><text x="886.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.21%)</title><rect x="885" y="244" width="3" height="15" fill="rgb(236,84,14)"/><text x="888.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.42%)</title><rect x="888" y="372" width="5" height="15" fill="rgb(229,62,3)"/><text x="891.00" y="382.50"></text></g><g><title>0x7f26db7b8fa0 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="890" y="388" width="3" height="15" fill="rgb(236,4,15)"/><text x="893.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 0.83%)</title><rect x="888" y="292" width="10" height="15" fill="rgb(242,2,17)"/><text x="891.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.83%)</title><rect x="888" y="308" width="10" height="15" fill="rgb(205,99,13)"/><text x="891.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 0.83%)</title><rect x="888" y="324" width="10" height="15" fill="rgb(215,191,40)"/><text x="891.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 0.83%)</title><rect x="888" y="340" width="10" height="15" fill="rgb(236,214,33)"/><text x="891.00" y="350.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 0.83%)</title><rect x="888" y="356" width="10" height="15" fill="rgb(219,96,15)"/><text x="891.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.42%)</title><rect x="893" y="372" width="5" height="15" fill="rgb(221,83,3)"/><text x="896.00" y="382.50"></text></g><g><title>0x7f26db6f0e7a (libc-2.29.so) (1 samples, 0.21%)</title><rect x="895" y="388" width="3" height="15" fill="rgb(221,189,40)"/><text x="898.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.21%)</title><rect x="898" y="308" width="2" height="15" fill="rgb(217,16,29)"/><text x="901.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.21%)</title><rect x="898" y="324" width="2" height="15" fill="rgb(215,98,0)"/><text x="901.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3635) (1 samples, 0.21%)</title><rect x="900" y="324" width="2" height="15" fill="rgb(212,153,45)"/><text x="903.00" y="334.50"></text></g><g><title>_get_identity (ufunc_object.c:2464) (1 samples, 0.21%)</title><rect x="900" y="340" width="2" height="15" fill="rgb(240,141,31)"/><text x="903.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (2 samples, 0.42%)</title><rect x="902" y="356" width="5" height="15" fill="rgb(220,76,0)"/><text x="905.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.62%)</title><rect x="902" y="340" width="8" height="15" fill="rgb(216,80,22)"/><text x="905.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.21%)</title><rect x="907" y="356" width="3" height="15" fill="rgb(212,65,47)"/><text x="910.00" y="366.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.21%)</title><rect x="907" y="372" width="3" height="15" fill="rgb(215,3,33)"/><text x="910.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.21%)</title><rect x="907" y="388" width="3" height="15" fill="rgb(233,170,44)"/><text x="910.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 2.08%)</title><rect x="888" y="244" width="24" height="15" fill="rgb(227,197,10)"/><text x="891.00" y="254.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 2.08%)</title><rect x="888" y="260" width="24" height="15" fill="rgb(231,35,29)"/><text x="891.00" y="270.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 2.08%)</title><rect x="888" y="276" width="24" height="15" fill="rgb(243,140,44)"/><text x="891.00" y="286.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 1.25%)</title><rect x="898" y="292" width="14" height="15" fill="rgb(245,175,52)"/><text x="901.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.04%)</title><rect x="900" y="308" width="12" height="15" fill="rgb(214,111,19)"/><text x="903.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 0.83%)</title><rect x="902" y="324" width="10" height="15" fill="rgb(237,103,25)"/><text x="905.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.21%)</title><rect x="910" y="340" width="2" height="15" fill="rgb(223,187,46)"/><text x="913.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.21%)</title><rect x="910" y="356" width="2" height="15" fill="rgb(239,67,25)"/><text x="913.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.21%)</title><rect x="910" y="372" width="2" height="15" fill="rgb(231,168,6)"/><text x="913.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.21%)</title><rect x="910" y="388" width="2" height="15" fill="rgb(229,81,39)"/><text x="913.00" y="398.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.21%)</title><rect x="912" y="276" width="3" height="15" fill="rgb(237,18,37)"/><text x="915.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.42%)</title><rect x="912" y="260" width="5" height="15" fill="rgb(210,101,10)"/><text x="915.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.21%)</title><rect x="915" y="276" width="2" height="15" fill="rgb(246,46,54)"/><text x="918.00" y="286.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.21%)</title><rect x="915" y="292" width="2" height="15" fill="rgb(253,90,10)"/><text x="918.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.21%)</title><rect x="917" y="260" width="3" height="15" fill="rgb(228,172,10)"/><text x="920.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.21%)</title><rect x="917" y="276" width="3" height="15" fill="rgb(210,197,44)"/><text x="920.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (48 samples, 9.98%)</title><rect x="804" y="196" width="118" height="15" fill="rgb(242,50,21)"/><text x="807.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 9.77%)</title><rect x="807" y="212" width="115" height="15" fill="rgb(243,196,3)"/><text x="810.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_softmax.py:24) (20 samples, 4.16%)</title><rect x="873" y="228" width="49" height="15" fill="rgb(217,51,12)"/><text x="876.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.83%)</title><rect x="912" y="244" width="10" height="15" fill="rgb(246,85,4)"/><text x="915.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.21%)</title><rect x="920" y="260" width="2" height="15" fill="rgb(215,130,15)"/><text x="923.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.21%)</title><rect x="920" y="276" width="2" height="15" fill="rgb(214,111,15)"/><text x="923.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1515) (1 samples, 0.21%)</title><rect x="920" y="292" width="2" height="15" fill="rgb(224,113,2)"/><text x="923.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.42%)</title><rect x="922" y="196" width="5" height="15" fill="rgb(239,161,50)"/><text x="925.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.21%)</title><rect x="932" y="228" width="2" height="15" fill="rgb(229,14,8)"/><text x="935.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (3 samples, 0.62%)</title><rect x="929" y="212" width="8" height="15" fill="rgb(215,105,7)"/><text x="932.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.21%)</title><rect x="934" y="228" width="3" height="15" fill="rgb(231,113,48)"/><text x="937.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.21%)</title><rect x="939" y="228" width="3" height="15" fill="rgb(215,92,8)"/><text x="942.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:520) (1 samples, 0.21%)</title><rect x="942" y="228" width="2" height="15" fill="rgb(245,100,32)"/><text x="945.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.21%)</title><rect x="944" y="260" width="3" height="15" fill="rgb(235,85,30)"/><text x="947.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.21%)</title><rect x="944" y="276" width="3" height="15" fill="rgb(215,204,36)"/><text x="947.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.21%)</title><rect x="947" y="276" width="2" height="15" fill="rgb(226,205,42)"/><text x="950.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.21%)</title><rect x="949" y="292" width="3" height="15" fill="rgb(252,193,0)"/><text x="952.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.42%)</title><rect x="949" y="276" width="5" height="15" fill="rgb(254,106,20)"/><text x="952.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.21%)</title><rect x="952" y="292" width="2" height="15" fill="rgb(218,57,23)"/><text x="955.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.21%)</title><rect x="952" y="308" width="2" height="15" fill="rgb(245,164,13)"/><text x="955.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:522) (1 samples, 0.21%)</title><rect x="954" y="276" width="2" height="15" fill="rgb(243,26,42)"/><text x="957.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (5 samples, 1.04%)</title><rect x="947" y="260" width="12" height="15" fill="rgb(234,197,38)"/><text x="950.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.21%)</title><rect x="956" y="276" width="3" height="15" fill="rgb(213,165,40)"/><text x="959.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.21%)</title><rect x="956" y="292" width="3" height="15" fill="rgb(247,115,6)"/><text x="959.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (2 samples, 0.42%)</title><rect x="959" y="260" width="5" height="15" fill="rgb(221,167,43)"/><text x="962.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (2 samples, 0.42%)</title><rect x="959" y="276" width="5" height="15" fill="rgb(210,24,13)"/><text x="962.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.21%)</title><rect x="964" y="260" width="2" height="15" fill="rgb(207,178,14)"/><text x="967.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.21%)</title><rect x="964" y="276" width="2" height="15" fill="rgb(246,107,16)"/><text x="967.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.21%)</title><rect x="966" y="260" width="3" height="15" fill="rgb(223,200,8)"/><text x="969.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.21%)</title><rect x="966" y="276" width="3" height="15" fill="rgb(220,159,3)"/><text x="969.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.21%)</title><rect x="966" y="292" width="3" height="15" fill="rgb(250,43,54)"/><text x="969.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.21%)</title><rect x="969" y="308" width="2" height="15" fill="rgb(249,133,0)"/><text x="972.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.21%)</title><rect x="969" y="324" width="2" height="15" fill="rgb(217,15,37)"/><text x="972.00" y="334.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.21%)</title><rect x="971" y="324" width="3" height="15" fill="rgb(254,150,30)"/><text x="974.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="971" y="340" width="3" height="15" fill="rgb(235,29,28)"/><text x="974.00" y="350.50"></text></g><g><title>solve_diophantine (mem_overlap.c:547) (1 samples, 0.21%)</title><rect x="974" y="324" width="2" height="15" fill="rgb(205,167,17)"/><text x="977.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="974" y="340" width="2" height="15" fill="rgb(205,28,9)"/><text x="977.00" y="350.50"></text></g><g><title>solve_diophantine (mem_overlap.c:560) (1 samples, 0.21%)</title><rect x="976" y="324" width="3" height="15" fill="rgb(212,21,52)"/><text x="979.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="976" y="340" width="3" height="15" fill="rgb(221,160,28)"/><text x="979.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (15 samples, 3.12%)</title><rect x="944" y="228" width="37" height="15" fill="rgb(250,71,25)"/><text x="947.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 3.12%)</title><rect x="944" y="244" width="37" height="15" fill="rgb(227,95,40)"/><text x="947.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.04%)</title><rect x="969" y="260" width="12" height="15" fill="rgb(220,220,2)"/><text x="972.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (5 samples, 1.04%)</title><rect x="969" y="276" width="12" height="15" fill="rgb(210,120,22)"/><text x="972.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (5 samples, 1.04%)</title><rect x="969" y="292" width="12" height="15" fill="rgb(244,10,15)"/><text x="972.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (4 samples, 0.83%)</title><rect x="971" y="308" width="10" height="15" fill="rgb(209,29,15)"/><text x="974.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:561) (1 samples, 0.21%)</title><rect x="979" y="324" width="2" height="15" fill="rgb(229,224,3)"/><text x="982.00" y="334.50"></text></g><g><title>0x7f26db6da91c (libc-2.29.so) (1 samples, 0.21%)</title><rect x="979" y="340" width="2" height="15" fill="rgb(238,152,31)"/><text x="982.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.21%)</title><rect x="981" y="228" width="2" height="15" fill="rgb(232,71,1)"/><text x="984.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.21%)</title><rect x="983" y="244" width="3" height="15" fill="rgb(231,224,42)"/><text x="986.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (7 samples, 1.46%)</title><rect x="986" y="244" width="17" height="15" fill="rgb(212,223,45)"/><text x="989.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.21%)</title><rect x="1001" y="260" width="2" height="15" fill="rgb(205,182,45)"/><text x="1004.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (4 samples, 0.83%)</title><rect x="1003" y="244" width="10" height="15" fill="rgb(223,184,47)"/><text x="1006.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 0.62%)</title><rect x="1006" y="260" width="7" height="15" fill="rgb(248,148,6)"/><text x="1009.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.62%)</title><rect x="1006" y="276" width="7" height="15" fill="rgb(235,199,28)"/><text x="1009.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (3 samples, 0.62%)</title><rect x="1006" y="292" width="7" height="15" fill="rgb(253,184,30)"/><text x="1009.00" y="302.50"></text></g><g><title>0x7f26db6f0730 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1010" y="308" width="3" height="15" fill="rgb(207,211,8)"/><text x="1013.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.21%)</title><rect x="1013" y="260" width="2" height="15" fill="rgb(232,50,10)"/><text x="1016.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.21%)</title><rect x="1013" y="276" width="2" height="15" fill="rgb(242,46,34)"/><text x="1016.00" y="286.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.21%)</title><rect x="1015" y="276" width="3" height="15" fill="rgb(229,2,18)"/><text x="1018.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.21%)</title><rect x="1015" y="292" width="3" height="15" fill="rgb(250,198,29)"/><text x="1018.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1126) (1 samples, 0.21%)</title><rect x="1015" y="308" width="3" height="15" fill="rgb(215,81,37)"/><text x="1018.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (3 samples, 0.62%)</title><rect x="1013" y="244" width="7" height="15" fill="rgb(247,13,12)"/><text x="1016.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.42%)</title><rect x="1015" y="260" width="5" height="15" fill="rgb(212,146,22)"/><text x="1018.00" y="270.50"></text></g><g><title>get_view_from_index (ndarraytypes.h:1528) (1 samples, 0.21%)</title><rect x="1018" y="276" width="2" height="15" fill="rgb(218,84,15)"/><text x="1021.00" y="286.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (2 samples, 0.42%)</title><rect x="1025" y="260" width="5" height="15" fill="rgb(252,225,44)"/><text x="1028.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.21%)</title><rect x="1030" y="308" width="2" height="15" fill="rgb(242,57,39)"/><text x="1033.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.21%)</title><rect x="1030" y="324" width="2" height="15" fill="rgb(232,170,41)"/><text x="1033.00" y="334.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:233) (1 samples, 0.21%)</title><rect x="1032" y="324" width="3" height="15" fill="rgb(205,114,9)"/><text x="1035.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c:193) (1 samples, 0.21%)</title><rect x="1032" y="340" width="3" height="15" fill="rgb(231,194,16)"/><text x="1035.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (45 samples, 9.36%)</title><rect x="927" y="196" width="110" height="15" fill="rgb(225,7,51)"/><text x="930.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (41 samples, 8.52%)</title><rect x="937" y="212" width="100" height="15" fill="rgb(219,77,12)"/><text x="940.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (22 samples, 4.57%)</title><rect x="983" y="228" width="54" height="15" fill="rgb(253,99,33)"/><text x="986.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 1.46%)</title><rect x="1020" y="244" width="17" height="15" fill="rgb(250,4,46)"/><text x="1023.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 0.62%)</title><rect x="1030" y="260" width="7" height="15" fill="rgb(250,129,42)"/><text x="1033.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.62%)</title><rect x="1030" y="276" width="7" height="15" fill="rgb(234,149,16)"/><text x="1033.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.62%)</title><rect x="1030" y="292" width="7" height="15" fill="rgb(209,120,2)"/><text x="1033.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.42%)</title><rect x="1032" y="308" width="5" height="15" fill="rgb(251,126,18)"/><text x="1035.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.21%)</title><rect x="1035" y="324" width="2" height="15" fill="rgb(250,150,1)"/><text x="1038.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="1035" y="340" width="2" height="15" fill="rgb(254,129,10)"/><text x="1038.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (158 samples, 32.85%)</title><rect x="655" y="180" width="387" height="15" fill="rgb(244,53,51)"/><text x="658.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (2 samples, 0.42%)</title><rect x="1037" y="196" width="5" height="15" fill="rgb(221,175,7)"/><text x="1040.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.62%)</title><rect x="1042" y="180" width="8" height="15" fill="rgb(228,24,33)"/><text x="1045.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.42%)</title><rect x="1050" y="180" width="5" height="15" fill="rgb(210,222,15)"/><text x="1053.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (3 samples, 0.62%)</title><rect x="1055" y="180" width="7" height="15" fill="rgb(221,203,33)"/><text x="1058.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.62%)</title><rect x="1062" y="180" width="7" height="15" fill="rgb(246,82,34)"/><text x="1065.00" y="190.50"></text></g><g><title>0x7f26db6fb144 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1067" y="196" width="2" height="15" fill="rgb(243,160,53)"/><text x="1070.00" y="206.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (209 samples, 43.45%)</title><rect x="566" y="164" width="513" height="15" fill="rgb(249,178,31)"/><text x="569.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (4 samples, 0.83%)</title><rect x="1069" y="180" width="10" height="15" fill="rgb(233,69,1)"/><text x="1072.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (5 samples, 1.04%)</title><rect x="1079" y="164" width="12" height="15" fill="rgb(221,17,25)"/><text x="1082.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 0.83%)</title><rect x="1082" y="180" width="9" height="15" fill="rgb(245,25,17)"/><text x="1085.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.21%)</title><rect x="1089" y="196" width="2" height="15" fill="rgb(233,134,15)"/><text x="1092.00" y="206.50"></text></g><g><title>0x7f26db7b8151 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1089" y="212" width="2" height="15" fill="rgb(233,63,37)"/><text x="1092.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:45) (220 samples, 45.74%)</title><rect x="554" y="52" width="540" height="15" fill="rgb(239,22,52)"/><text x="557.00" y="62.50">&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:44) (220 samples, 45.74%)</title><rect x="554" y="68" width="540" height="15" fill="rgb(234,222,4)"/><text x="557.00" y="78.50">profile_pyrt (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:44)</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:29) (219 samples, 45.53%)</title><rect x="557" y="84" width="537" height="15" fill="rgb(238,172,0)"/><text x="560.00" y="94.50">setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:23) (219 samples, 45.53%)</title><rect x="557" y="100" width="537" height="15" fill="rgb(233,202,17)"/><text x="560.00" y="110.50">profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (217 samples, 45.11%)</title><rect x="561" y="116" width="533" height="15" fill="rgb(221,130,50)"/><text x="564.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (216 samples, 44.91%)</title><rect x="564" y="132" width="530" height="15" fill="rgb(247,77,12)"/><text x="567.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (216 samples, 44.91%)</title><rect x="564" y="148" width="530" height="15" fill="rgb(247,69,38)"/><text x="567.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_free (arrayobject.c:1776) (1 samples, 0.21%)</title><rect x="1091" y="164" width="3" height="15" fill="rgb(226,165,15)"/><text x="1094.00" y="174.50"></text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:18) (1 samples, 0.21%)</title><rect x="1094" y="100" width="2" height="15" fill="rgb(236,61,14)"/><text x="1097.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.21%)</title><rect x="1094" y="116" width="2" height="15" fill="rgb(251,35,34)"/><text x="1097.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.21%)</title><rect x="1094" y="132" width="2" height="15" fill="rgb(225,98,15)"/><text x="1097.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.21%)</title><rect x="1094" y="148" width="2" height="15" fill="rgb(242,44,7)"/><text x="1097.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.21%)</title><rect x="1094" y="164" width="2" height="15" fill="rgb(210,56,0)"/><text x="1097.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.21%)</title><rect x="1094" y="180" width="2" height="15" fill="rgb(254,118,34)"/><text x="1097.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.21%)</title><rect x="1094" y="196" width="2" height="15" fill="rgb(250,198,12)"/><text x="1097.00" y="206.50"></text></g><g><title>0x7f269971dff9 (?) (1 samples, 0.21%)</title><rect x="1094" y="212" width="2" height="15" fill="rgb(249,19,16)"/><text x="1097.00" y="222.50"></text></g><g><title>0x7f2699718ef6 (?) (1 samples, 0.21%)</title><rect x="1094" y="228" width="2" height="15" fill="rgb(210,53,31)"/><text x="1097.00" y="238.50"></text></g><g><title>0x7f269970d962 (?) (1 samples, 0.21%)</title><rect x="1094" y="244" width="2" height="15" fill="rgb(251,118,53)"/><text x="1097.00" y="254.50"></text></g><g><title>0x7f26997417a7 (?) (1 samples, 0.21%)</title><rect x="1094" y="260" width="2" height="15" fill="rgb(224,156,32)"/><text x="1097.00" y="270.50"></text></g><g><title>0x7f2699741379 (?) (1 samples, 0.21%)</title><rect x="1094" y="276" width="2" height="15" fill="rgb(217,11,52)"/><text x="1097.00" y="286.50"></text></g><g><title>0x7f2699b9f8b8 (?) (1 samples, 0.21%)</title><rect x="1094" y="292" width="2" height="15" fill="rgb(244,133,42)"/><text x="1097.00" y="302.50"></text></g><g><title>0x7f2699b9dc7f (?) (1 samples, 0.21%)</title><rect x="1094" y="308" width="2" height="15" fill="rgb(213,92,10)"/><text x="1097.00" y="318.50"></text></g><g><title>0x7f2699bb099c (?) (1 samples, 0.21%)</title><rect x="1094" y="324" width="2" height="15" fill="rgb(250,114,31)"/><text x="1097.00" y="334.50"></text></g><g><title>0x7f269999dec8 (?) (1 samples, 0.21%)</title><rect x="1094" y="340" width="2" height="15" fill="rgb(242,32,39)"/><text x="1097.00" y="350.50"></text></g><g><title>0x7f2699b6c5e6 (?) (1 samples, 0.21%)</title><rect x="1094" y="356" width="2" height="15" fill="rgb(227,107,48)"/><text x="1097.00" y="366.50"></text></g><g><title>0x7f2699b6c486 (?) (1 samples, 0.21%)</title><rect x="1094" y="372" width="2" height="15" fill="rgb(224,215,10)"/><text x="1097.00" y="382.50"></text></g><g><title>0x7f2699b56c8d (?) (1 samples, 0.21%)</title><rect x="1094" y="388" width="2" height="15" fill="rgb(236,192,37)"/><text x="1097.00" y="398.50"></text></g><g><title>0x7f2699b56202 (?) (1 samples, 0.21%)</title><rect x="1094" y="404" width="2" height="15" fill="rgb(232,173,26)"/><text x="1097.00" y="414.50"></text></g><g><title>0x7f2699b55913 (?) (1 samples, 0.21%)</title><rect x="1094" y="420" width="2" height="15" fill="rgb(212,36,0)"/><text x="1097.00" y="430.50"></text></g><g><title>0x7f2699b547e1 (?) (1 samples, 0.21%)</title><rect x="1094" y="436" width="2" height="15" fill="rgb(227,27,13)"/><text x="1097.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="1094" y="452" width="2" height="15" fill="rgb(209,84,21)"/><text x="1097.00" y="462.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.21%)</title><rect x="1096" y="116" width="3" height="15" fill="rgb(230,16,12)"/><text x="1099.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.21%)</title><rect x="1096" y="132" width="3" height="15" fill="rgb(218,199,51)"/><text x="1099.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.21%)</title><rect x="1096" y="148" width="3" height="15" fill="rgb(228,69,47)"/><text x="1099.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.21%)</title><rect x="1118" y="196" width="3" height="15" fill="rgb(208,141,28)"/><text x="1121.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.21%)</title><rect x="1121" y="196" width="2" height="15" fill="rgb(240,76,54)"/><text x="1124.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.21%)</title><rect x="1123" y="196" width="3" height="15" fill="rgb(207,78,12)"/><text x="1126.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.21%)</title><rect x="1123" y="212" width="3" height="15" fill="rgb(209,145,4)"/><text x="1126.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1123" y="228" width="3" height="15" fill="rgb(221,44,14)"/><text x="1126.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1123" y="244" width="3" height="15" fill="rgb(218,219,37)"/><text x="1126.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1123" y="260" width="3" height="15" fill="rgb(234,76,4)"/><text x="1126.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1123" y="276" width="3" height="15" fill="rgb(225,114,16)"/><text x="1126.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1123" y="292" width="3" height="15" fill="rgb(237,15,26)"/><text x="1126.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1131" y="260" width="2" height="15" fill="rgb(219,225,9)"/><text x="1134.00" y="270.50"></text></g><g><title>onnxruntime::Model::MainGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1131" y="276" width="2" height="15" fill="rgb(223,185,42)"/><text x="1134.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1136" y="292" width="2" height="15" fill="rgb(220,153,49)"/><text x="1139.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1138" y="292" width="2" height="15" fill="rgb(246,184,40)"/><text x="1141.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="1145" y="372" width="3" height="15" fill="rgb(252,185,21)"/><text x="1148.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.83%)</title><rect x="1140" y="340" width="10" height="15" fill="rgb(220,159,25)"/><text x="1143.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.83%)</title><rect x="1140" y="356" width="10" height="15" fill="rgb(237,194,27)"/><text x="1143.00" y="366.50"></text></g><g><title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; [clone .isra.594] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1148" y="372" width="2" height="15" fill="rgb(237,37,3)"/><text x="1151.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="340" width="3" height="15" fill="rgb(221,125,46)"/><text x="1153.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="356" width="3" height="15" fill="rgb(251,152,14)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="372" width="3" height="15" fill="rgb(224,87,4)"/><text x="1153.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="388" width="3" height="15" fill="rgb(207,128,5)"/><text x="1153.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="404" width="3" height="15" fill="rgb(246,66,5)"/><text x="1153.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="420" width="3" height="15" fill="rgb(240,105,24)"/><text x="1153.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="436" width="3" height="15" fill="rgb(232,97,46)"/><text x="1153.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="452" width="3" height="15" fill="rgb(243,121,0)"/><text x="1153.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1150" y="468" width="3" height="15" fill="rgb(237,20,4)"/><text x="1153.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1153" y="356" width="2" height="15" fill="rgb(215,133,53)"/><text x="1156.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.62%)</title><rect x="1153" y="340" width="7" height="15" fill="rgb(211,134,20)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1155" y="356" width="5" height="15" fill="rgb(239,195,9)"/><text x="1158.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1155" y="372" width="5" height="15" fill="rgb(223,228,39)"/><text x="1158.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1158" y="388" width="2" height="15" fill="rgb(216,36,51)"/><text x="1161.00" y="398.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1160" y="340" width="3" height="15" fill="rgb(231,229,36)"/><text x="1163.00" y="350.50"></text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1160" y="356" width="3" height="15" fill="rgb(223,223,10)"/><text x="1163.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.21%)</title><rect x="1160" y="372" width="3" height="15" fill="rgb(211,111,13)"/><text x="1163.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.21%)</title><rect x="1160" y="388" width="3" height="15" fill="rgb(234,188,30)"/><text x="1163.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.21%)</title><rect x="1160" y="404" width="3" height="15" fill="rgb(229,163,51)"/><text x="1163.00" y="414.50"></text></g><g><title>mkl_serv_cbwr_get (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.21%)</title><rect x="1160" y="420" width="3" height="15" fill="rgb(239,136,22)"/><text x="1163.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1163" y="340" width="4" height="15" fill="rgb(222,73,52)"/><text x="1166.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1163" y="356" width="4" height="15" fill="rgb(244,103,7)"/><text x="1166.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1163" y="372" width="4" height="15" fill="rgb(248,129,4)"/><text x="1166.00" y="382.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1165" y="388" width="2" height="15" fill="rgb(245,192,3)"/><text x="1168.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1167" y="340" width="3" height="15" fill="rgb(210,89,21)"/><text x="1170.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1167" y="356" width="3" height="15" fill="rgb(226,111,27)"/><text x="1170.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1170" y="340" width="2" height="15" fill="rgb(247,33,20)"/><text x="1173.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1170" y="356" width="2" height="15" fill="rgb(224,38,30)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::Softmax&lt;float, false&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="340" width="3" height="15" fill="rgb(234,107,53)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::ComputeSoftMax&lt;Eigen::ThreadPoolDevice, float&gt; [clone .constprop.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="356" width="3" height="15" fill="rgb(214,24,42)"/><text x="1175.00" y="366.50"></text></g><g><title>_ZN5Eigen8internal30GetTensorExecutorTilingContextINS_15TensorEvaluatorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEEKNS_18TensorCwiseUnaryOpINS0_13scalar_exp_opIfEEKNS_19TensorCwiseBinaryOpINS0_20scalar_difference_opIKfSE_EEKNS4_INS5_ISE_Li2ELi1ElEELi16ES7_EEKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNSK_IiJSM_EEEKNS_18TensorForcedEvalOpIKNS_17TensorReductionOpINS0_10MaxReducerIfEEKNSK_ISM_JEEESI_S7_EEEEEEEEEEEEEENS_16ThreadPoolDeviceEEENS0_17TensorBlockMapperIflLi2ELi1EEELb1EEENS0_27TensorExecutorTilingContextIT0_EERKS1C_RKT_ (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="372" width="3" height="15" fill="rgb(218,75,33)"/><text x="1175.00" y="382.50"></text></g><g><title>_ZNK5Eigen15TensorEvaluatorIKNS_20TensorBroadcastingOpIKNS_9IndexListINS_10type2indexILl1EEEJiEEEKNS_17TensorReshapingOpIKNS2_IiJS4_EEEKNS_18TensorForcedEvalOpIKNS_18TensorCwiseUnaryOpINS_8internal17scalar_inverse_opIfEEKNS_17TensorReductionOpINSC_10SumReducerIfEEKNS2_IS4_JEEEKNS_9TensorMapINS_6TensorIfLi2ELi1ElEELi16ENS_11MakePointerEEESN_EEEEEEEEEENS_16ThreadPoolDeviceEE23getResourceRequirementsEPSt6vectorINSC_28TensorOpResourceRequirementsESaIS13_EE.isra.502.constprop.657 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="388" width="3" height="15" fill="rgb(252,176,3)"/><text x="1175.00" y="398.50"></text></g><g><title>Eigen::internal::manage_caching_sizes [clone .constprop.660] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="404" width="3" height="15" fill="rgb(215,34,44)"/><text x="1175.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 3.53%)</title><rect x="1136" y="276" width="41" height="15" fill="rgb(211,204,24)"/><text x="1139.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.12%)</title><rect x="1140" y="292" width="37" height="15" fill="rgb(206,147,47)"/><text x="1143.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.12%)</title><rect x="1140" y="308" width="37" height="15" fill="rgb(247,57,7)"/><text x="1143.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.12%)</title><rect x="1140" y="324" width="37" height="15" fill="rgb(252,90,18)"/><text x="1143.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="340" width="2" height="15" fill="rgb(231,52,28)"/><text x="1178.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="356" width="2" height="15" fill="rgb(250,178,1)"/><text x="1178.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="1133" y="260" width="47" height="15" fill="rgb(208,156,24)"/><text x="1136.00" y="270.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(240,176,47)"/><text x="1180.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1182" y="276" width="3" height="15" fill="rgb(240,127,13)"/><text x="1185.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (32 samples, 6.65%)</title><rect x="1109" y="164" width="78" height="15" fill="rgb(246,53,17)"/><text x="1112.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (31 samples, 6.44%)</title><rect x="1111" y="180" width="76" height="15" fill="rgb(239,131,17)"/><text x="1114.00" y="190.50">run (mlp..</text></g><g><title>run (onnxruntime/capi/session.py:136) (25 samples, 5.20%)</title><rect x="1126" y="196" width="61" height="15" fill="rgb(238,45,39)"/><text x="1129.00" y="206.50">run (o..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.20%)</title><rect x="1126" y="212" width="61" height="15" fill="rgb(224,163,1)"/><text x="1129.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.20%)</title><rect x="1126" y="228" width="61" height="15" fill="rgb(253,74,42)"/><text x="1129.00" y="238.50">void p..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.20%)</title><rect x="1126" y="244" width="61" height="15" fill="rgb(220,198,54)"/><text x="1129.00" y="254.50">onnxru..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.62%)</title><rect x="1180" y="260" width="7" height="15" fill="rgb(208,181,54)"/><text x="1183.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.21%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(249,1,44)"/><text x="1188.00" y="286.50"></text></g><g><title>0x7f26db7b8e65 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1185" y="292" width="2" height="15" fill="rgb(215,96,42)"/><text x="1188.00" y="302.50"></text></g><g><title>all (481 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,40,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:52) (39 samples, 8.11%)</title><rect x="1094" y="52" width="96" height="15" fill="rgb(236,12,19)"/><text x="1097.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>profile_ort (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:51) (39 samples, 8.11%)</title><rect x="1094" y="68" width="96" height="15" fill="rgb(243,127,4)"/><text x="1097.00" y="78.50">profile_ort..</text></g><g><title>setup_profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:29) (39 samples, 8.11%)</title><rect x="1094" y="84" width="96" height="15" fill="rgb(234,8,6)"/><text x="1097.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_MLPClassifier_default_b_cl_1_4_12_float_.py:23) (38 samples, 7.90%)</title><rect x="1096" y="100" width="94" height="15" fill="rgb(241,114,42)"/><text x="1099.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (37 samples, 7.69%)</title><rect x="1099" y="116" width="91" height="15" fill="rgb(253,55,24)"/><text x="1102.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (35 samples, 7.28%)</title><rect x="1104" y="132" width="86" height="15" fill="rgb(254,167,16)"/><text x="1107.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (33 samples, 6.86%)</title><rect x="1109" y="148" width="81" height="15" fill="rgb(221,200,1)"/><text x="1112.00" y="158.50">run (mlpr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.21%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(236,156,34)"/><text x="1190.00" y="174.50"></text></g></g></svg>