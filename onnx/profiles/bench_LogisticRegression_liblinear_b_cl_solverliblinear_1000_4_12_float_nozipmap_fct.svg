<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2774" onload="init(evt)" viewBox="0 0 1200 2774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2774" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2757.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2757.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(246,29,8)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(217,157,41)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(231,199,34)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(209,2,11)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(239,119,36)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(241,225,0)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(254,56,36)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(250,133,53)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(206,140,43)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(242,109,54)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(236,182,28)"/><text x="13.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(242,109,53)"/><text x="13.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.27%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(251,63,25)"/><text x="13.00" y="1070.50"></text></g><g><title>0x7f28cc7dc541 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(207,13,42)"/><text x="13.00" y="1086.50"></text></g><g><title>0x7f28cc7573ef (libc-2.29.so) (1 samples, 0.27%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(205,205,11)"/><text x="13.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(225,224,8)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(252,41,48)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(241,4,36)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(227,146,43)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(238,191,32)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(207,219,44)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.53%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(208,229,9)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(228,105,21)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(233,75,44)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(226,146,42)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(244,8,9)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(231,146,13)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.53%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(246,132,26)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(236,40,20)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(243,174,52)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(246,31,32)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(223,125,29)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(248,197,26)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.53%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(247,53,49)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(218,108,46)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(215,63,5)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(254,150,23)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(249,150,45)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(246,45,46)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.53%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(232,78,41)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(210,55,10)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(242,217,4)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(218,125,46)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(230,183,13)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(248,72,41)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(219,5,5)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(254,216,53)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(227,175,3)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.53%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(253,101,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(230,162,34)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(213,161,16)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(241,172,51)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(246,112,25)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(209,146,54)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(241,124,53)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(226,136,49)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(206,151,7)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(241,41,31)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(211,193,32)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(211,187,36)"/><text x="16.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.27%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(241,201,2)"/><text x="16.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.27%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(230,171,38)"/><text x="16.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.27%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(252,86,12)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.27%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(247,32,52)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(214,217,28)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(230,177,8)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(235,182,48)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(227,117,30)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1284" width="3" height="15" fill="rgb(214,88,1)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="1300" width="3" height="15" fill="rgb(218,35,46)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1316" width="3" height="15" fill="rgb(245,124,11)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1332" width="3" height="15" fill="rgb(236,19,28)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1348" width="3" height="15" fill="rgb(240,206,2)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1364" width="3" height="15" fill="rgb(229,43,24)"/><text x="19.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1380" width="3" height="15" fill="rgb(224,85,3)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.27%)</title><rect x="16" y="1396" width="3" height="15" fill="rgb(253,14,30)"/><text x="19.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1412" width="3" height="15" fill="rgb(236,150,21)"/><text x="19.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1428" width="3" height="15" fill="rgb(238,167,51)"/><text x="19.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1444" width="3" height="15" fill="rgb(221,18,37)"/><text x="19.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1460" width="3" height="15" fill="rgb(240,174,28)"/><text x="19.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1476" width="3" height="15" fill="rgb(225,23,29)"/><text x="19.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.27%)</title><rect x="16" y="1492" width="3" height="15" fill="rgb(233,94,30)"/><text x="19.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1508" width="3" height="15" fill="rgb(217,146,29)"/><text x="19.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1524" width="3" height="15" fill="rgb(240,86,11)"/><text x="19.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1540" width="3" height="15" fill="rgb(234,15,24)"/><text x="19.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1556" width="3" height="15" fill="rgb(222,9,13)"/><text x="19.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1572" width="3" height="15" fill="rgb(216,119,52)"/><text x="19.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1588" width="3" height="15" fill="rgb(229,16,20)"/><text x="19.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1604" width="3" height="15" fill="rgb(223,83,31)"/><text x="19.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="1620" width="3" height="15" fill="rgb(235,97,5)"/><text x="19.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1636" width="3" height="15" fill="rgb(225,78,13)"/><text x="19.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1652" width="3" height="15" fill="rgb(249,103,3)"/><text x="19.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1668" width="3" height="15" fill="rgb(253,93,9)"/><text x="19.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1684" width="3" height="15" fill="rgb(247,202,29)"/><text x="19.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1700" width="3" height="15" fill="rgb(239,196,52)"/><text x="19.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py) (1 samples, 0.27%)</title><rect x="16" y="1716" width="3" height="15" fill="rgb(220,84,36)"/><text x="19.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1732" width="3" height="15" fill="rgb(219,85,25)"/><text x="19.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1748" width="3" height="15" fill="rgb(222,151,12)"/><text x="19.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1764" width="3" height="15" fill="rgb(221,229,46)"/><text x="19.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1780" width="3" height="15" fill="rgb(226,46,25)"/><text x="19.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1796" width="3" height="15" fill="rgb(224,29,37)"/><text x="19.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="1812" width="3" height="15" fill="rgb(223,164,11)"/><text x="19.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1828" width="3" height="15" fill="rgb(224,162,12)"/><text x="19.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1844" width="3" height="15" fill="rgb(241,169,52)"/><text x="19.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1860" width="3" height="15" fill="rgb(208,186,49)"/><text x="19.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1876" width="3" height="15" fill="rgb(208,23,23)"/><text x="19.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1892" width="3" height="15" fill="rgb(220,146,21)"/><text x="19.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py) (1 samples, 0.27%)</title><rect x="16" y="1908" width="3" height="15" fill="rgb(220,139,25)"/><text x="19.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1924" width="3" height="15" fill="rgb(246,63,17)"/><text x="19.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1940" width="3" height="15" fill="rgb(225,212,50)"/><text x="19.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1956" width="3" height="15" fill="rgb(211,55,10)"/><text x="19.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1972" width="3" height="15" fill="rgb(241,3,33)"/><text x="19.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1988" width="3" height="15" fill="rgb(209,86,36)"/><text x="19.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2004" width="3" height="15" fill="rgb(247,40,42)"/><text x="19.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2020" width="3" height="15" fill="rgb(243,108,15)"/><text x="19.00" y="2030.50"></text></g><g><title>0x7f289abb4d1a (?) (1 samples, 0.27%)</title><rect x="16" y="2036" width="3" height="15" fill="rgb(214,139,51)"/><text x="19.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2052" width="3" height="15" fill="rgb(210,129,34)"/><text x="19.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2068" width="3" height="15" fill="rgb(230,4,2)"/><text x="19.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2084" width="3" height="15" fill="rgb(248,72,40)"/><text x="19.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2100" width="3" height="15" fill="rgb(208,53,17)"/><text x="19.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2116" width="3" height="15" fill="rgb(218,222,8)"/><text x="19.00" y="2126.50"></text></g><g><title>0x7f289a977195 (?) (1 samples, 0.27%)</title><rect x="16" y="2132" width="3" height="15" fill="rgb(223,107,52)"/><text x="19.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2148" width="3" height="15" fill="rgb(211,57,42)"/><text x="19.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2164" width="3" height="15" fill="rgb(226,174,49)"/><text x="19.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2180" width="3" height="15" fill="rgb(235,189,3)"/><text x="19.00" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2196" width="3" height="15" fill="rgb(209,45,40)"/><text x="19.00" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2212" width="3" height="15" fill="rgb(241,51,45)"/><text x="19.00" y="2222.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2228" width="3" height="15" fill="rgb(208,150,26)"/><text x="19.00" y="2238.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2244" width="3" height="15" fill="rgb(216,210,44)"/><text x="19.00" y="2254.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2260" width="3" height="15" fill="rgb(225,126,51)"/><text x="19.00" y="2270.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="2276" width="3" height="15" fill="rgb(237,121,47)"/><text x="19.00" y="2286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2292" width="3" height="15" fill="rgb(231,1,20)"/><text x="19.00" y="2302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2308" width="3" height="15" fill="rgb(235,70,51)"/><text x="19.00" y="2318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2324" width="3" height="15" fill="rgb(205,45,29)"/><text x="19.00" y="2334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2340" width="3" height="15" fill="rgb(216,229,7)"/><text x="19.00" y="2350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2356" width="3" height="15" fill="rgb(247,199,41)"/><text x="19.00" y="2366.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.27%)</title><rect x="16" y="2372" width="3" height="15" fill="rgb(218,58,14)"/><text x="19.00" y="2382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2388" width="3" height="15" fill="rgb(211,198,18)"/><text x="19.00" y="2398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2404" width="3" height="15" fill="rgb(207,136,41)"/><text x="19.00" y="2414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2420" width="3" height="15" fill="rgb(237,72,44)"/><text x="19.00" y="2430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2436" width="3" height="15" fill="rgb(221,6,23)"/><text x="19.00" y="2446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2452" width="3" height="15" fill="rgb(211,30,31)"/><text x="19.00" y="2462.50"></text></g><g><title>0x7f289a73f373 (?) (1 samples, 0.27%)</title><rect x="16" y="2468" width="3" height="15" fill="rgb(211,122,53)"/><text x="19.00" y="2478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2484" width="3" height="15" fill="rgb(233,196,24)"/><text x="19.00" y="2494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2500" width="3" height="15" fill="rgb(213,194,7)"/><text x="19.00" y="2510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2516" width="3" height="15" fill="rgb(243,191,15)"/><text x="19.00" y="2526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2532" width="3" height="15" fill="rgb(249,184,54)"/><text x="19.00" y="2542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2548" width="3" height="15" fill="rgb(220,75,6)"/><text x="19.00" y="2558.50"></text></g><g><title>0x7f289a502eea (?) (1 samples, 0.27%)</title><rect x="16" y="2564" width="3" height="15" fill="rgb(232,96,36)"/><text x="19.00" y="2574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2580" width="3" height="15" fill="rgb(248,7,9)"/><text x="19.00" y="2590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2596" width="3" height="15" fill="rgb(218,163,42)"/><text x="19.00" y="2606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2612" width="3" height="15" fill="rgb(246,146,48)"/><text x="19.00" y="2622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="2628" width="3" height="15" fill="rgb(251,124,33)"/><text x="19.00" y="2638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="2644" width="3" height="15" fill="rgb(249,216,16)"/><text x="19.00" y="2654.50"></text></g><g><title>0x7f289a29b559 (?) (1 samples, 0.27%)</title><rect x="16" y="2660" width="3" height="15" fill="rgb(251,124,10)"/><text x="19.00" y="2670.50"></text></g><g><title>0x7f289a2989b2 (?) (1 samples, 0.27%)</title><rect x="16" y="2676" width="3" height="15" fill="rgb(215,184,36)"/><text x="19.00" y="2686.50"></text></g><g><title>0x7f28cc7a6016 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="2692" width="3" height="15" fill="rgb(248,163,0)"/><text x="19.00" y="2702.50"></text></g><g><title>0x7f28cc792b01 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="2708" width="3" height="15" fill="rgb(224,28,13)"/><text x="19.00" y="2718.50"></text></g><g><title>0x7f28cc7c4950 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="2724" width="3" height="15" fill="rgb(246,64,1)"/><text x="19.00" y="2734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="16" y="1124" width="6" height="15" fill="rgb(219,185,51)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="16" y="1140" width="6" height="15" fill="rgb(221,160,20)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="16" y="1156" width="6" height="15" fill="rgb(246,79,50)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="16" y="1172" width="6" height="15" fill="rgb(236,201,5)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="16" y="1188" width="6" height="15" fill="rgb(209,190,47)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="19" y="1204" width="3" height="15" fill="rgb(242,8,44)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1220" width="3" height="15" fill="rgb(224,133,36)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(232,61,10)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(216,166,38)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1268" width="3" height="15" fill="rgb(243,222,9)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1284" width="3" height="15" fill="rgb(227,33,1)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="19" y="1300" width="3" height="15" fill="rgb(238,5,35)"/><text x="22.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="19" y="1316" width="3" height="15" fill="rgb(233,2,13)"/><text x="22.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.27%)</title><rect x="19" y="1332" width="3" height="15" fill="rgb(239,198,34)"/><text x="22.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.27%)</title><rect x="19" y="1348" width="3" height="15" fill="rgb(247,43,47)"/><text x="22.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.27%)</title><rect x="19" y="1364" width="3" height="15" fill="rgb(233,174,13)"/><text x="22.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.27%)</title><rect x="19" y="1380" width="3" height="15" fill="rgb(223,227,13)"/><text x="22.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.27%)</title><rect x="19" y="1396" width="3" height="15" fill="rgb(206,161,28)"/><text x="22.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.27%)</title><rect x="19" y="1412" width="3" height="15" fill="rgb(211,81,34)"/><text x="22.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.27%)</title><rect x="19" y="1428" width="3" height="15" fill="rgb(222,44,39)"/><text x="22.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1476" width="3" height="15" fill="rgb(239,170,52)"/><text x="25.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1492" width="3" height="15" fill="rgb(205,200,7)"/><text x="25.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1508" width="3" height="15" fill="rgb(223,84,7)"/><text x="25.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1524" width="3" height="15" fill="rgb(239,120,0)"/><text x="25.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(245,3,3)"/><text x="25.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(231,98,25)"/><text x="25.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="22" y="1572" width="3" height="15" fill="rgb(236,94,2)"/><text x="25.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="22" y="1588" width="3" height="15" fill="rgb(225,61,46)"/><text x="25.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="22" y="1604" width="3" height="15" fill="rgb(253,60,9)"/><text x="25.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="22" y="1620" width="3" height="15" fill="rgb(253,106,33)"/><text x="25.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="22" y="1636" width="3" height="15" fill="rgb(209,176,45)"/><text x="25.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.27%)</title><rect x="22" y="1652" width="3" height="15" fill="rgb(207,121,2)"/><text x="25.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1668" width="3" height="15" fill="rgb(213,97,37)"/><text x="25.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.27%)</title><rect x="22" y="1684" width="3" height="15" fill="rgb(220,212,31)"/><text x="25.00" y="1694.50"></text></g><g><title>pull_dependencies (jinja2/compiler.py) (1 samples, 0.27%)</title><rect x="22" y="1700" width="3" height="15" fill="rgb(253,4,47)"/><text x="25.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1716" width="3" height="15" fill="rgb(229,41,20)"/><text x="25.00" y="1726.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1732" width="3" height="15" fill="rgb(210,104,6)"/><text x="25.00" y="1742.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1748" width="3" height="15" fill="rgb(210,34,12)"/><text x="25.00" y="1758.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1764" width="3" height="15" fill="rgb(246,157,47)"/><text x="25.00" y="1774.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1780" width="3" height="15" fill="rgb(253,85,0)"/><text x="25.00" y="1790.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1796" width="3" height="15" fill="rgb(212,193,24)"/><text x="25.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1812" width="3" height="15" fill="rgb(244,135,31)"/><text x="25.00" y="1822.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.27%)</title><rect x="22" y="1828" width="3" height="15" fill="rgb(243,27,0)"/><text x="25.00" y="1838.50"></text></g><g><title>new_context (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="25" y="1556" width="3" height="15" fill="rgb(247,69,31)"/><text x="28.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py) (1 samples, 0.27%)</title><rect x="25" y="1572" width="3" height="15" fill="rgb(244,186,24)"/><text x="28.00" y="1582.50"></text></g><g><title>__init__ (jinja2/runtime.py) (1 samples, 0.27%)</title><rect x="25" y="1588" width="3" height="15" fill="rgb(216,66,51)"/><text x="28.00" y="1598.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.27%)</title><rect x="32" y="1588" width="3" height="15" fill="rgb(220,195,38)"/><text x="35.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 1.87%)</title><rect x="16" y="772" width="22" height="15" fill="rgb(205,80,7)"/><text x="19.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="788" width="22" height="15" fill="rgb(218,212,28)"/><text x="19.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="804" width="22" height="15" fill="rgb(231,64,10)"/><text x="19.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="820" width="22" height="15" fill="rgb(238,209,1)"/><text x="19.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.87%)</title><rect x="16" y="836" width="22" height="15" fill="rgb(240,228,49)"/><text x="19.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="852" width="22" height="15" fill="rgb(211,52,7)"/><text x="19.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 1.87%)</title><rect x="16" y="868" width="22" height="15" fill="rgb(238,199,15)"/><text x="19.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="884" width="22" height="15" fill="rgb(250,168,49)"/><text x="19.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="900" width="22" height="15" fill="rgb(242,116,46)"/><text x="19.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="916" width="22" height="15" fill="rgb(216,57,4)"/><text x="19.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="932" width="22" height="15" fill="rgb(249,50,22)"/><text x="19.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="948" width="22" height="15" fill="rgb(223,182,45)"/><text x="19.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="964" width="22" height="15" fill="rgb(214,204,44)"/><text x="19.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.87%)</title><rect x="16" y="980" width="22" height="15" fill="rgb(228,147,9)"/><text x="19.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="996" width="22" height="15" fill="rgb(249,69,23)"/><text x="19.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 1.87%)</title><rect x="16" y="1012" width="22" height="15" fill="rgb(239,28,50)"/><text x="19.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="1028" width="22" height="15" fill="rgb(233,95,31)"/><text x="19.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="1044" width="22" height="15" fill="rgb(210,214,47)"/><text x="19.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="1060" width="22" height="15" fill="rgb(219,85,34)"/><text x="19.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.87%)</title><rect x="16" y="1076" width="22" height="15" fill="rgb(205,136,53)"/><text x="19.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.87%)</title><rect x="16" y="1092" width="22" height="15" fill="rgb(221,222,54)"/><text x="19.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 1.87%)</title><rect x="16" y="1108" width="22" height="15" fill="rgb(233,111,53)"/><text x="19.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1124" width="16" height="15" fill="rgb(244,65,2)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1140" width="16" height="15" fill="rgb(214,72,2)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1156" width="16" height="15" fill="rgb(211,44,18)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1172" width="16" height="15" fill="rgb(248,56,32)"/><text x="25.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1188" width="16" height="15" fill="rgb(253,36,49)"/><text x="25.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.33%)</title><rect x="22" y="1204" width="16" height="15" fill="rgb(205,109,4)"/><text x="25.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1220" width="16" height="15" fill="rgb(238,77,16)"/><text x="25.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.33%)</title><rect x="22" y="1236" width="16" height="15" fill="rgb(250,106,46)"/><text x="25.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1252" width="16" height="15" fill="rgb(209,12,47)"/><text x="25.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1268" width="16" height="15" fill="rgb(230,147,49)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1284" width="16" height="15" fill="rgb(249,41,43)"/><text x="25.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1300" width="16" height="15" fill="rgb(220,79,4)"/><text x="25.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1316" width="16" height="15" fill="rgb(226,109,17)"/><text x="25.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.33%)</title><rect x="22" y="1332" width="16" height="15" fill="rgb(223,117,25)"/><text x="25.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1348" width="16" height="15" fill="rgb(219,181,5)"/><text x="25.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 1.33%)</title><rect x="22" y="1364" width="16" height="15" fill="rgb(212,189,22)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1380" width="16" height="15" fill="rgb(215,74,10)"/><text x="25.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1396" width="16" height="15" fill="rgb(249,154,21)"/><text x="25.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1412" width="16" height="15" fill="rgb(238,89,30)"/><text x="25.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.33%)</title><rect x="22" y="1428" width="16" height="15" fill="rgb(219,47,22)"/><text x="25.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="22" y="1444" width="16" height="15" fill="rgb(254,190,18)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.33%)</title><rect x="22" y="1460" width="16" height="15" fill="rgb(209,66,52)"/><text x="25.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.07%)</title><rect x="25" y="1476" width="13" height="15" fill="rgb(205,122,13)"/><text x="28.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.07%)</title><rect x="25" y="1492" width="13" height="15" fill="rgb(235,160,49)"/><text x="28.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (4 samples, 1.07%)</title><rect x="25" y="1508" width="13" height="15" fill="rgb(253,201,34)"/><text x="28.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (4 samples, 1.07%)</title><rect x="25" y="1524" width="13" height="15" fill="rgb(226,182,25)"/><text x="28.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (4 samples, 1.07%)</title><rect x="25" y="1540" width="13" height="15" fill="rgb(210,0,52)"/><text x="28.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.80%)</title><rect x="28" y="1556" width="10" height="15" fill="rgb(230,213,26)"/><text x="31.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.80%)</title><rect x="28" y="1572" width="10" height="15" fill="rgb(239,88,40)"/><text x="31.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="35" y="1588" width="3" height="15" fill="rgb(243,67,0)"/><text x="38.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="35" y="1604" width="3" height="15" fill="rgb(242,15,28)"/><text x="38.00" y="1614.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.27%)</title><rect x="35" y="1620" width="3" height="15" fill="rgb(253,163,35)"/><text x="38.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="484" width="25" height="15" fill="rgb(213,222,27)"/><text x="19.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="500" width="25" height="15" fill="rgb(232,210,5)"/><text x="19.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="516" width="25" height="15" fill="rgb(207,97,42)"/><text x="19.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="532" width="25" height="15" fill="rgb(239,127,6)"/><text x="19.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.13%)</title><rect x="16" y="548" width="25" height="15" fill="rgb(232,176,5)"/><text x="19.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="564" width="25" height="15" fill="rgb(227,147,5)"/><text x="19.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (8 samples, 2.13%)</title><rect x="16" y="580" width="25" height="15" fill="rgb(226,151,0)"/><text x="19.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="596" width="25" height="15" fill="rgb(231,112,2)"/><text x="19.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="612" width="25" height="15" fill="rgb(219,179,29)"/><text x="19.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="628" width="25" height="15" fill="rgb(242,86,0)"/><text x="19.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.13%)</title><rect x="16" y="644" width="25" height="15" fill="rgb(228,70,28)"/><text x="19.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="660" width="25" height="15" fill="rgb(214,179,36)"/><text x="19.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (8 samples, 2.13%)</title><rect x="16" y="676" width="25" height="15" fill="rgb(228,67,52)"/><text x="19.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="692" width="25" height="15" fill="rgb(231,17,8)"/><text x="19.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="708" width="25" height="15" fill="rgb(223,41,5)"/><text x="19.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="724" width="25" height="15" fill="rgb(221,166,48)"/><text x="19.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.13%)</title><rect x="16" y="740" width="25" height="15" fill="rgb(239,168,15)"/><text x="19.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.13%)</title><rect x="16" y="756" width="25" height="15" fill="rgb(237,92,35)"/><text x="19.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.27%)</title><rect x="38" y="772" width="3" height="15" fill="rgb(238,161,51)"/><text x="41.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="788" width="3" height="15" fill="rgb(220,145,7)"/><text x="41.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="804" width="3" height="15" fill="rgb(232,199,53)"/><text x="41.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="820" width="3" height="15" fill="rgb(213,0,19)"/><text x="41.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="836" width="3" height="15" fill="rgb(232,83,5)"/><text x="41.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="852" width="3" height="15" fill="rgb(218,20,32)"/><text x="41.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/multioutput.py) (1 samples, 0.27%)</title><rect x="38" y="868" width="3" height="15" fill="rgb(225,52,4)"/><text x="41.00" y="878.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.27%)</title><rect x="38" y="884" width="3" height="15" fill="rgb(250,19,42)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="772" width="3" height="15" fill="rgb(254,145,20)"/><text x="44.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="788" width="3" height="15" fill="rgb(232,2,46)"/><text x="44.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="804" width="3" height="15" fill="rgb(216,10,53)"/><text x="44.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="820" width="3" height="15" fill="rgb(228,194,44)"/><text x="44.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="41" y="836" width="3" height="15" fill="rgb(207,39,27)"/><text x="44.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="852" width="3" height="15" fill="rgb(225,160,35)"/><text x="44.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.27%)</title><rect x="41" y="868" width="3" height="15" fill="rgb(243,219,36)"/><text x="44.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="884" width="3" height="15" fill="rgb(219,175,26)"/><text x="44.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="900" width="3" height="15" fill="rgb(240,111,14)"/><text x="44.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(224,198,10)"/><text x="44.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="41" y="932" width="3" height="15" fill="rgb(248,225,49)"/><text x="44.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="948" width="3" height="15" fill="rgb(212,13,28)"/><text x="44.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.27%)</title><rect x="41" y="964" width="3" height="15" fill="rgb(207,130,31)"/><text x="44.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="980" width="3" height="15" fill="rgb(248,73,26)"/><text x="44.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="996" width="3" height="15" fill="rgb(219,112,32)"/><text x="44.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="1012" width="3" height="15" fill="rgb(222,161,21)"/><text x="44.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="41" y="1028" width="3" height="15" fill="rgb(238,119,29)"/><text x="44.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="1044" width="3" height="15" fill="rgb(205,135,0)"/><text x="44.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.27%)</title><rect x="41" y="1060" width="3" height="15" fill="rgb(246,136,35)"/><text x="44.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="1076" width="3" height="15" fill="rgb(207,112,22)"/><text x="44.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="1092" width="3" height="15" fill="rgb(222,172,52)"/><text x="44.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="1108" width="3" height="15" fill="rgb(247,203,15)"/><text x="44.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(231,145,21)"/><text x="44.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="41" y="1140" width="3" height="15" fill="rgb(217,132,29)"/><text x="44.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="41" y="1156" width="3" height="15" fill="rgb(209,16,15)"/><text x="44.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1652" width="3" height="15" fill="rgb(253,94,37)"/><text x="47.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1668" width="3" height="15" fill="rgb(217,104,34)"/><text x="47.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1684" width="3" height="15" fill="rgb(209,67,37)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1700" width="3" height="15" fill="rgb(235,145,29)"/><text x="47.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1716" width="3" height="15" fill="rgb(239,225,7)"/><text x="47.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="44" y="1732" width="3" height="15" fill="rgb(222,211,37)"/><text x="47.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1748" width="3" height="15" fill="rgb(206,175,5)"/><text x="47.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.27%)</title><rect x="44" y="1764" width="3" height="15" fill="rgb(253,196,46)"/><text x="47.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1780" width="3" height="15" fill="rgb(239,106,44)"/><text x="47.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1796" width="3" height="15" fill="rgb(250,215,51)"/><text x="47.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1812" width="3" height="15" fill="rgb(225,211,10)"/><text x="47.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="44" y="1828" width="3" height="15" fill="rgb(217,148,49)"/><text x="47.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1844" width="3" height="15" fill="rgb(217,155,25)"/><text x="47.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.27%)</title><rect x="44" y="1860" width="3" height="15" fill="rgb(211,51,2)"/><text x="47.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1876" width="3" height="15" fill="rgb(205,57,53)"/><text x="47.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1892" width="3" height="15" fill="rgb(252,75,17)"/><text x="47.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1908" width="3" height="15" fill="rgb(234,30,18)"/><text x="47.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="44" y="1924" width="3" height="15" fill="rgb(209,184,32)"/><text x="47.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1940" width="3" height="15" fill="rgb(210,149,51)"/><text x="47.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="1956" width="3" height="15" fill="rgb(205,218,15)"/><text x="47.00" y="1966.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="1972" width="3" height="15" fill="rgb(211,87,39)"/><text x="47.00" y="1982.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="1988" width="3" height="15" fill="rgb(208,222,43)"/><text x="47.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2004" width="3" height="15" fill="rgb(252,82,45)"/><text x="47.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2020" width="3" height="15" fill="rgb(214,13,2)"/><text x="47.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2036" width="3" height="15" fill="rgb(240,156,44)"/><text x="47.00" y="2046.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2052" width="3" height="15" fill="rgb(207,72,18)"/><text x="47.00" y="2062.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2068" width="3" height="15" fill="rgb(207,38,41)"/><text x="47.00" y="2078.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2084" width="3" height="15" fill="rgb(208,153,4)"/><text x="47.00" y="2094.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.27%)</title><rect x="44" y="2100" width="3" height="15" fill="rgb(232,156,12)"/><text x="47.00" y="2110.50"></text></g><g><title>copy (copy.py) (1 samples, 0.27%)</title><rect x="44" y="2116" width="3" height="15" fill="rgb(240,203,4)"/><text x="47.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1540" width="6" height="15" fill="rgb(241,195,28)"/><text x="47.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1556" width="6" height="15" fill="rgb(246,167,49)"/><text x="47.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1572" width="6" height="15" fill="rgb(216,194,24)"/><text x="47.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1588" width="6" height="15" fill="rgb(232,111,53)"/><text x="47.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="44" y="1604" width="6" height="15" fill="rgb(217,22,43)"/><text x="47.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1620" width="6" height="15" fill="rgb(211,107,5)"/><text x="47.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (2 samples, 0.53%)</title><rect x="44" y="1636" width="6" height="15" fill="rgb(251,101,12)"/><text x="47.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="47" y="1652" width="3" height="15" fill="rgb(210,112,33)"/><text x="50.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="47" y="1668" width="3" height="15" fill="rgb(224,127,33)"/><text x="50.00" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="47" y="1684" width="3" height="15" fill="rgb(227,104,41)"/><text x="50.00" y="1694.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.27%)</title><rect x="47" y="1700" width="3" height="15" fill="rgb(241,8,21)"/><text x="50.00" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="47" y="1716" width="3" height="15" fill="rgb(207,84,5)"/><text x="50.00" y="1726.50"></text></g><g><title>validate_whiskers (matplotlib/rcsetup.py) (1 samples, 0.27%)</title><rect x="47" y="1732" width="3" height="15" fill="rgb(217,98,5)"/><text x="50.00" y="1742.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.07%)</title><rect x="41" y="724" width="13" height="15" fill="rgb(254,44,47)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.07%)</title><rect x="41" y="740" width="13" height="15" fill="rgb(246,198,45)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.07%)</title><rect x="41" y="756" width="13" height="15" fill="rgb(216,165,52)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="772" width="10" height="15" fill="rgb(219,40,41)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="788" width="10" height="15" fill="rgb(252,87,1)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="804" width="10" height="15" fill="rgb(242,36,38)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.80%)</title><rect x="44" y="820" width="10" height="15" fill="rgb(218,217,38)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="836" width="10" height="15" fill="rgb(240,159,51)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="852" width="10" height="15" fill="rgb(206,18,35)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="868" width="10" height="15" fill="rgb(244,224,7)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="884" width="10" height="15" fill="rgb(212,219,2)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="900" width="10" height="15" fill="rgb(236,10,26)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.80%)</title><rect x="44" y="916" width="10" height="15" fill="rgb(216,151,5)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="932" width="10" height="15" fill="rgb(214,21,0)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="948" width="10" height="15" fill="rgb(209,227,6)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="964" width="10" height="15" fill="rgb(249,196,43)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="980" width="10" height="15" fill="rgb(205,215,41)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="996" width="10" height="15" fill="rgb(211,85,33)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.80%)</title><rect x="44" y="1012" width="10" height="15" fill="rgb(246,228,6)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1028" width="10" height="15" fill="rgb(216,91,35)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1044" width="10" height="15" fill="rgb(209,13,49)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1060" width="10" height="15" fill="rgb(206,218,20)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="1076" width="10" height="15" fill="rgb(234,182,36)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1092" width="10" height="15" fill="rgb(241,108,49)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.80%)</title><rect x="44" y="1108" width="10" height="15" fill="rgb(209,87,49)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1124" width="10" height="15" fill="rgb(238,103,52)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1140" width="10" height="15" fill="rgb(242,149,18)"/><text x="47.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1156" width="10" height="15" fill="rgb(209,3,52)"/><text x="47.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="1172" width="10" height="15" fill="rgb(231,62,17)"/><text x="47.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1188" width="10" height="15" fill="rgb(229,79,5)"/><text x="47.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.80%)</title><rect x="44" y="1204" width="10" height="15" fill="rgb(218,29,29)"/><text x="47.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1220" width="10" height="15" fill="rgb(217,1,37)"/><text x="47.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1236" width="10" height="15" fill="rgb(238,16,10)"/><text x="47.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1252" width="10" height="15" fill="rgb(237,217,30)"/><text x="47.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="1268" width="10" height="15" fill="rgb(206,106,52)"/><text x="47.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1284" width="10" height="15" fill="rgb(218,18,50)"/><text x="47.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.80%)</title><rect x="44" y="1300" width="10" height="15" fill="rgb(247,152,13)"/><text x="47.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1316" width="10" height="15" fill="rgb(223,121,15)"/><text x="47.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1332" width="10" height="15" fill="rgb(239,211,39)"/><text x="47.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1348" width="10" height="15" fill="rgb(218,83,37)"/><text x="47.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="1364" width="10" height="15" fill="rgb(224,99,22)"/><text x="47.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1380" width="10" height="15" fill="rgb(243,213,5)"/><text x="47.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.80%)</title><rect x="44" y="1396" width="10" height="15" fill="rgb(254,146,27)"/><text x="47.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1412" width="10" height="15" fill="rgb(206,182,30)"/><text x="47.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1428" width="10" height="15" fill="rgb(221,165,42)"/><text x="47.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1444" width="10" height="15" fill="rgb(252,209,9)"/><text x="47.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.80%)</title><rect x="44" y="1460" width="10" height="15" fill="rgb(230,22,49)"/><text x="47.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1476" width="10" height="15" fill="rgb(242,56,54)"/><text x="47.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.80%)</title><rect x="44" y="1492" width="10" height="15" fill="rgb(252,86,18)"/><text x="47.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1508" width="10" height="15" fill="rgb(209,144,25)"/><text x="47.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.80%)</title><rect x="44" y="1524" width="10" height="15" fill="rgb(239,29,36)"/><text x="47.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="50" y="1540" width="4" height="15" fill="rgb(239,96,12)"/><text x="53.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="50" y="1556" width="4" height="15" fill="rgb(205,132,29)"/><text x="53.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="50" y="1572" width="4" height="15" fill="rgb(246,10,33)"/><text x="53.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="50" y="1588" width="4" height="15" fill="rgb(230,56,18)"/><text x="53.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="50" y="1604" width="4" height="15" fill="rgb(237,39,1)"/><text x="53.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="50" y="1620" width="4" height="15" fill="rgb(217,90,2)"/><text x="53.00" y="1630.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="50" y="1636" width="4" height="15" fill="rgb(245,127,19)"/><text x="53.00" y="1646.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.27%)</title><rect x="50" y="1652" width="4" height="15" fill="rgb(241,206,22)"/><text x="53.00" y="1662.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.27%)</title><rect x="50" y="1668" width="4" height="15" fill="rgb(243,224,46)"/><text x="53.00" y="1678.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.27%)</title><rect x="50" y="1684" width="4" height="15" fill="rgb(213,81,34)"/><text x="53.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="41" y="644" width="16" height="15" fill="rgb(233,140,18)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="41" y="660" width="16" height="15" fill="rgb(241,0,24)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="41" y="676" width="16" height="15" fill="rgb(207,88,39)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.33%)</title><rect x="41" y="692" width="16" height="15" fill="rgb(227,147,46)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.33%)</title><rect x="41" y="708" width="16" height="15" fill="rgb(221,7,46)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.27%)</title><rect x="54" y="724" width="3" height="15" fill="rgb(240,78,9)"/><text x="57.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="740" width="3" height="15" fill="rgb(216,86,43)"/><text x="57.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="756" width="3" height="15" fill="rgb(228,72,53)"/><text x="57.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="772" width="3" height="15" fill="rgb(247,64,12)"/><text x="57.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="788" width="3" height="15" fill="rgb(222,33,19)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="804" width="3" height="15" fill="rgb(241,29,45)"/><text x="57.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py) (1 samples, 0.27%)</title><rect x="54" y="820" width="3" height="15" fill="rgb(232,85,27)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="836" width="3" height="15" fill="rgb(248,151,28)"/><text x="57.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="852" width="3" height="15" fill="rgb(225,90,8)"/><text x="57.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="868" width="3" height="15" fill="rgb(210,146,24)"/><text x="57.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="884" width="3" height="15" fill="rgb(218,213,16)"/><text x="57.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="900" width="3" height="15" fill="rgb(222,7,38)"/><text x="57.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/pytables.py) (1 samples, 0.27%)</title><rect x="54" y="916" width="3" height="15" fill="rgb(234,175,10)"/><text x="57.00" y="926.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="932" width="3" height="15" fill="rgb(252,167,27)"/><text x="57.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="948" width="3" height="15" fill="rgb(207,185,10)"/><text x="57.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="964" width="3" height="15" fill="rgb(236,17,39)"/><text x="57.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="980" width="3" height="15" fill="rgb(233,168,32)"/><text x="57.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="996" width="3" height="15" fill="rgb(241,145,32)"/><text x="57.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="1012" width="3" height="15" fill="rgb(207,156,13)"/><text x="57.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="1028" width="3" height="15" fill="rgb(234,90,50)"/><text x="57.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/expr.py) (1 samples, 0.27%)</title><rect x="54" y="1044" width="3" height="15" fill="rgb(221,186,38)"/><text x="57.00" y="1054.50"></text></g><g><title>PythonExprVisitor (pandas/core/computation/expr.py) (1 samples, 0.27%)</title><rect x="54" y="1060" width="3" height="15" fill="rgb(209,89,24)"/><text x="57.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (14 samples, 3.73%)</title><rect x="16" y="244" width="44" height="15" fill="rgb(211,16,29)"/><text x="19.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="260" width="44" height="15" fill="rgb(237,45,3)"/><text x="19.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="276" width="44" height="15" fill="rgb(227,190,22)"/><text x="19.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="292" width="44" height="15" fill="rgb(236,14,1)"/><text x="19.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 3.73%)</title><rect x="16" y="308" width="44" height="15" fill="rgb(219,196,14)"/><text x="19.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="324" width="44" height="15" fill="rgb(226,105,30)"/><text x="19.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (14 samples, 3.73%)</title><rect x="16" y="340" width="44" height="15" fill="rgb(220,15,6)"/><text x="19.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="356" width="44" height="15" fill="rgb(235,96,35)"/><text x="19.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="372" width="44" height="15" fill="rgb(220,34,54)"/><text x="19.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="388" width="44" height="15" fill="rgb(252,5,3)"/><text x="19.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 3.73%)</title><rect x="16" y="404" width="44" height="15" fill="rgb(243,90,26)"/><text x="19.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="420" width="44" height="15" fill="rgb(232,57,18)"/><text x="19.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (14 samples, 3.73%)</title><rect x="16" y="436" width="44" height="15" fill="rgb(233,41,51)"/><text x="19.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="452" width="44" height="15" fill="rgb(228,45,34)"/><text x="19.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 3.73%)</title><rect x="16" y="468" width="44" height="15" fill="rgb(225,16,41)"/><text x="19.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.60%)</title><rect x="41" y="484" width="19" height="15" fill="rgb(245,159,21)"/><text x="44.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.60%)</title><rect x="41" y="500" width="19" height="15" fill="rgb(247,204,11)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.60%)</title><rect x="41" y="516" width="19" height="15" fill="rgb(246,5,26)"/><text x="44.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 1.60%)</title><rect x="41" y="532" width="19" height="15" fill="rgb(232,80,40)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.60%)</title><rect x="41" y="548" width="19" height="15" fill="rgb(232,226,41)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.60%)</title><rect x="41" y="564" width="19" height="15" fill="rgb(210,171,25)"/><text x="44.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.60%)</title><rect x="41" y="580" width="19" height="15" fill="rgb(207,22,5)"/><text x="44.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.60%)</title><rect x="41" y="596" width="19" height="15" fill="rgb(208,52,38)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.60%)</title><rect x="41" y="612" width="19" height="15" fill="rgb(218,18,43)"/><text x="44.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 1.60%)</title><rect x="41" y="628" width="19" height="15" fill="rgb(254,123,17)"/><text x="44.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="644" width="3" height="15" fill="rgb(245,86,23)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="660" width="3" height="15" fill="rgb(245,43,20)"/><text x="60.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="676" width="3" height="15" fill="rgb(212,206,18)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="692" width="3" height="15" fill="rgb(246,7,28)"/><text x="60.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="708" width="3" height="15" fill="rgb(230,57,17)"/><text x="60.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="57" y="724" width="3" height="15" fill="rgb(254,76,32)"/><text x="60.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="740" width="3" height="15" fill="rgb(213,19,35)"/><text x="60.00" y="750.50"></text></g><g><title>0x7f28a0ec82ff (?) (1 samples, 0.27%)</title><rect x="57" y="756" width="3" height="15" fill="rgb(252,91,17)"/><text x="60.00" y="766.50"></text></g><g><title>0x7f28a0ece52a (?) (1 samples, 0.27%)</title><rect x="57" y="772" width="3" height="15" fill="rgb(242,180,2)"/><text x="60.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="788" width="3" height="15" fill="rgb(219,94,51)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="804" width="3" height="15" fill="rgb(206,167,8)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="820" width="3" height="15" fill="rgb(221,157,4)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="57" y="836" width="3" height="15" fill="rgb(254,141,54)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="57" y="852" width="3" height="15" fill="rgb(219,95,20)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (fractions.py) (1 samples, 0.27%)</title><rect x="57" y="868" width="3" height="15" fill="rgb(222,75,8)"/><text x="60.00" y="878.50"></text></g><g><title>compile (re.py) (1 samples, 0.27%)</title><rect x="57" y="884" width="3" height="15" fill="rgb(239,98,23)"/><text x="60.00" y="894.50"></text></g><g><title>_compile (re.py) (1 samples, 0.27%)</title><rect x="57" y="900" width="3" height="15" fill="rgb(224,13,10)"/><text x="60.00" y="910.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.27%)</title><rect x="57" y="916" width="3" height="15" fill="rgb(236,73,39)"/><text x="60.00" y="926.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.27%)</title><rect x="57" y="932" width="3" height="15" fill="rgb(227,37,44)"/><text x="60.00" y="942.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.27%)</title><rect x="57" y="948" width="3" height="15" fill="rgb(251,217,40)"/><text x="60.00" y="958.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.27%)</title><rect x="57" y="964" width="3" height="15" fill="rgb(218,64,42)"/><text x="60.00" y="974.50"></text></g><g><title>match (sre_parse.py) (1 samples, 0.27%)</title><rect x="57" y="980" width="3" height="15" fill="rgb(250,180,31)"/><text x="60.00" y="990.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.27%)</title><rect x="57" y="996" width="3" height="15" fill="rgb(206,78,38)"/><text x="60.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.53%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(235,215,35)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.53%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(236,135,41)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.53%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(245,27,31)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 4.53%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(254,113,8)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.53%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(220,165,19)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (17 samples, 4.53%)</title><rect x="10" y="148" width="53" height="15" fill="rgb(236,55,48)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.53%)</title><rect x="10" y="164" width="53" height="15" fill="rgb(232,32,16)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 4.53%)</title><rect x="10" y="180" width="53" height="15" fill="rgb(220,98,5)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.00%)</title><rect x="16" y="196" width="47" height="15" fill="rgb(240,130,9)"/><text x="19.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.00%)</title><rect x="16" y="212" width="47" height="15" fill="rgb(243,196,52)"/><text x="19.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.00%)</title><rect x="16" y="228" width="47" height="15" fill="rgb(207,34,17)"/><text x="19.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.27%)</title><rect x="60" y="244" width="3" height="15" fill="rgb(252,77,24)"/><text x="63.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="260" width="3" height="15" fill="rgb(236,156,52)"/><text x="63.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="276" width="3" height="15" fill="rgb(239,82,32)"/><text x="63.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="292" width="3" height="15" fill="rgb(253,171,5)"/><text x="63.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="308" width="3" height="15" fill="rgb(233,195,43)"/><text x="63.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="324" width="3" height="15" fill="rgb(252,40,16)"/><text x="63.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="340" width="3" height="15" fill="rgb(242,93,17)"/><text x="63.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="356" width="3" height="15" fill="rgb(248,203,44)"/><text x="63.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.27%)</title><rect x="60" y="372" width="3" height="15" fill="rgb(227,201,36)"/><text x="63.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="388" width="3" height="15" fill="rgb(243,117,40)"/><text x="63.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="404" width="3" height="15" fill="rgb(241,107,46)"/><text x="63.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="420" width="3" height="15" fill="rgb(251,72,54)"/><text x="63.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="436" width="3" height="15" fill="rgb(224,207,6)"/><text x="63.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="452" width="3" height="15" fill="rgb(239,211,29)"/><text x="63.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="468" width="3" height="15" fill="rgb(224,194,25)"/><text x="63.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="484" width="3" height="15" fill="rgb(236,73,5)"/><text x="63.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.27%)</title><rect x="60" y="500" width="3" height="15" fill="rgb(208,50,28)"/><text x="63.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="516" width="3" height="15" fill="rgb(237,149,44)"/><text x="63.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="532" width="3" height="15" fill="rgb(234,144,8)"/><text x="63.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="548" width="3" height="15" fill="rgb(251,26,52)"/><text x="63.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="564" width="3" height="15" fill="rgb(242,129,46)"/><text x="63.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="580" width="3" height="15" fill="rgb(252,220,40)"/><text x="63.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="596" width="3" height="15" fill="rgb(245,16,12)"/><text x="63.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="612" width="3" height="15" fill="rgb(225,130,27)"/><text x="63.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.27%)</title><rect x="60" y="628" width="3" height="15" fill="rgb(222,0,49)"/><text x="63.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="644" width="3" height="15" fill="rgb(243,158,49)"/><text x="63.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="660" width="3" height="15" fill="rgb(230,46,9)"/><text x="63.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="676" width="3" height="15" fill="rgb(206,46,23)"/><text x="63.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="692" width="3" height="15" fill="rgb(230,71,10)"/><text x="63.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="708" width="3" height="15" fill="rgb(238,71,51)"/><text x="63.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="724" width="3" height="15" fill="rgb(219,59,47)"/><text x="63.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="740" width="3" height="15" fill="rgb(253,162,44)"/><text x="63.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="756" width="3" height="15" fill="rgb(239,16,25)"/><text x="63.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.27%)</title><rect x="60" y="772" width="3" height="15" fill="rgb(208,55,44)"/><text x="63.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="788" width="3" height="15" fill="rgb(235,62,10)"/><text x="63.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="804" width="3" height="15" fill="rgb(243,182,23)"/><text x="63.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="820" width="3" height="15" fill="rgb(223,227,19)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="836" width="3" height="15" fill="rgb(246,153,37)"/><text x="63.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="852" width="3" height="15" fill="rgb(236,148,36)"/><text x="63.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="868" width="3" height="15" fill="rgb(208,45,19)"/><text x="63.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="884" width="3" height="15" fill="rgb(223,143,39)"/><text x="63.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.27%)</title><rect x="60" y="900" width="3" height="15" fill="rgb(218,160,24)"/><text x="63.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="916" width="3" height="15" fill="rgb(233,184,48)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="932" width="3" height="15" fill="rgb(222,6,6)"/><text x="63.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="948" width="3" height="15" fill="rgb(220,58,42)"/><text x="63.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="964" width="3" height="15" fill="rgb(206,90,48)"/><text x="63.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="980" width="3" height="15" fill="rgb(241,25,51)"/><text x="63.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py) (1 samples, 0.27%)</title><rect x="60" y="996" width="3" height="15" fill="rgb(205,92,49)"/><text x="63.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="1012" width="3" height="15" fill="rgb(213,159,29)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="1028" width="3" height="15" fill="rgb(223,112,11)"/><text x="63.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="60" y="1044" width="3" height="15" fill="rgb(246,117,47)"/><text x="63.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="1060" width="3" height="15" fill="rgb(237,61,0)"/><text x="63.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="60" y="1076" width="3" height="15" fill="rgb(251,177,18)"/><text x="63.00" y="1086.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="66" y="116" width="3" height="15" fill="rgb(212,44,30)"/><text x="69.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="66" y="132" width="3" height="15" fill="rgb(230,188,38)"/><text x="69.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="66" y="148" width="3" height="15" fill="rgb(230,101,1)"/><text x="69.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.27%)</title><rect x="66" y="164" width="3" height="15" fill="rgb(252,206,36)"/><text x="69.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.27%)</title><rect x="66" y="180" width="3" height="15" fill="rgb(235,214,39)"/><text x="69.00" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="85" y="180" width="3" height="15" fill="rgb(248,135,10)"/><text x="88.00" y="190.50"></text></g><g><title>0x7f288c81eff9 (?) (1 samples, 0.27%)</title><rect x="98" y="212" width="3" height="15" fill="rgb(222,189,43)"/><text x="101.00" y="222.50"></text></g><g><title>0x7f288c819ef6 (?) (1 samples, 0.27%)</title><rect x="98" y="228" width="3" height="15" fill="rgb(249,0,1)"/><text x="101.00" y="238.50"></text></g><g><title>0x7f288c80e962 (?) (1 samples, 0.27%)</title><rect x="98" y="244" width="3" height="15" fill="rgb(230,72,39)"/><text x="101.00" y="254.50"></text></g><g><title>0x7f288c8427a7 (?) (1 samples, 0.27%)</title><rect x="98" y="260" width="3" height="15" fill="rgb(215,1,10)"/><text x="101.00" y="270.50"></text></g><g><title>0x7f288c842379 (?) (1 samples, 0.27%)</title><rect x="98" y="276" width="3" height="15" fill="rgb(230,43,7)"/><text x="101.00" y="286.50"></text></g><g><title>0x7f288cca08b8 (?) (1 samples, 0.27%)</title><rect x="98" y="292" width="3" height="15" fill="rgb(246,200,38)"/><text x="101.00" y="302.50"></text></g><g><title>0x7f288cc9ec7f (?) (1 samples, 0.27%)</title><rect x="98" y="308" width="3" height="15" fill="rgb(238,126,41)"/><text x="101.00" y="318.50"></text></g><g><title>0x7f288ccb199c (?) (1 samples, 0.27%)</title><rect x="98" y="324" width="3" height="15" fill="rgb(253,191,53)"/><text x="101.00" y="334.50"></text></g><g><title>0x7f288c9a0c5b (?) (1 samples, 0.27%)</title><rect x="98" y="340" width="3" height="15" fill="rgb(250,17,53)"/><text x="101.00" y="350.50"></text></g><g><title>0x7f288c99cebe (?) (1 samples, 0.27%)</title><rect x="98" y="356" width="3" height="15" fill="rgb(213,25,37)"/><text x="101.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.80%)</title><rect x="101" y="212" width="9" height="15" fill="rgb(205,105,16)"/><text x="104.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.53%)</title><rect x="104" y="228" width="6" height="15" fill="rgb(217,94,14)"/><text x="107.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="107" y="244" width="3" height="15" fill="rgb(254,6,23)"/><text x="110.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="107" y="260" width="3" height="15" fill="rgb(220,89,4)"/><text x="110.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="107" y="276" width="3" height="15" fill="rgb(241,89,50)"/><text x="110.00" y="286.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="107" y="292" width="3" height="15" fill="rgb(205,184,7)"/><text x="110.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="110" y="292" width="3" height="15" fill="rgb(214,180,15)"/><text x="113.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="110" y="308" width="3" height="15" fill="rgb(212,34,37)"/><text x="113.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="110" y="324" width="3" height="15" fill="rgb(221,70,49)"/><text x="113.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(221,86,14)"/><text x="123.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(254,202,46)"/><text x="123.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.53%)</title><rect x="120" y="340" width="6" height="15" fill="rgb(250,169,50)"/><text x="123.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="123" y="356" width="3" height="15" fill="rgb(225,75,35)"/><text x="126.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="123" y="372" width="3" height="15" fill="rgb(232,88,54)"/><text x="126.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="123" y="388" width="3" height="15" fill="rgb(234,104,38)"/><text x="126.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="126" y="340" width="3" height="15" fill="rgb(219,120,5)"/><text x="129.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="126" y="356" width="3" height="15" fill="rgb(253,189,20)"/><text x="129.00" y="366.50"></text></g><g><title>0x7f28cc7ae97c (libc-2.29.so) (1 samples, 0.27%)</title><rect x="233" y="356" width="3" height="15" fill="rgb(207,219,10)"/><text x="236.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="236" y="356" width="3" height="15" fill="rgb(210,40,4)"/><text x="239.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="236" y="372" width="3" height="15" fill="rgb(206,56,41)"/><text x="239.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="236" y="388" width="3" height="15" fill="rgb(218,97,51)"/><text x="239.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="236" y="404" width="3" height="15" fill="rgb(247,177,0)"/><text x="239.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="236" y="420" width="3" height="15" fill="rgb(214,126,25)"/><text x="239.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="236" y="436" width="3" height="15" fill="rgb(224,30,35)"/><text x="239.00" y="446.50"></text></g><g><title>0x7f28cc7ced50 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="283" y="372" width="3" height="15" fill="rgb(219,118,6)"/><text x="286.00" y="382.50"></text></g><g><title>0x7f28cc7cedb3 (libc-2.29.so) (3 samples, 0.80%)</title><rect x="286" y="372" width="10" height="15" fill="rgb(238,46,54)"/><text x="289.00" y="382.50"></text></g><g><title>0x7f28cc92de00 (libm-2.29.so) (3 samples, 0.80%)</title><rect x="296" y="372" width="9" height="15" fill="rgb(240,13,18)"/><text x="299.00" y="382.50"></text></g><g><title>0x7f28cc92de4a (libm-2.29.so) (1 samples, 0.27%)</title><rect x="305" y="372" width="3" height="15" fill="rgb(232,212,41)"/><text x="308.00" y="382.50"></text></g><g><title>0x7f28cc92de4e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="308" y="372" width="4" height="15" fill="rgb(211,1,18)"/><text x="311.00" y="382.50"></text></g><g><title>0x7f28cc92de71 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="312" y="372" width="3" height="15" fill="rgb(235,171,52)"/><text x="315.00" y="382.50"></text></g><g><title>0x7f28cc92de96 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="315" y="372" width="3" height="15" fill="rgb(209,217,32)"/><text x="318.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (61 samples, 16.27%)</title><rect x="129" y="340" width="192" height="15" fill="rgb(241,127,45)"/><text x="132.00" y="350.50">onnxruntime::ml::LinearCl..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 6.93%)</title><rect x="239" y="356" width="82" height="15" fill="rgb(227,119,5)"/><text x="242.00" y="366.50">onnxrunti..</text></g><g><title>0x7f28cc92dea2 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="318" y="372" width="3" height="15" fill="rgb(207,143,24)"/><text x="321.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (89 samples, 23.73%)</title><rect x="110" y="260" width="280" height="15" fill="rgb(206,227,7)"/><text x="113.00" y="270.50">onnxruntime::InferenceSession::Run (o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (89 samples, 23.73%)</title><rect x="110" y="276" width="280" height="15" fill="rgb(248,211,21)"/><text x="113.00" y="286.50">onnxruntime::InferenceSession::Run (o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (88 samples, 23.47%)</title><rect x="113" y="292" width="277" height="15" fill="rgb(229,47,31)"/><text x="116.00" y="302.50">onnxruntime::utils::ExecuteGraph (onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (88 samples, 23.47%)</title><rect x="113" y="308" width="277" height="15" fill="rgb(209,73,14)"/><text x="116.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl ..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 23.20%)</title><rect x="116" y="324" width="274" height="15" fill="rgb(206,200,40)"/><text x="119.00" y="334.50">onnxruntime::SequentialExecutor::Exe..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.87%)</title><rect x="321" y="340" width="69" height="15" fill="rgb(224,34,3)"/><text x="324.00" y="350.50">onnxrun..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.87%)</title><rect x="321" y="356" width="69" height="15" fill="rgb(234,200,26)"/><text x="324.00" y="366.50">onnxrun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 24.00%)</title><rect x="110" y="244" width="283" height="15" fill="rgb(232,76,39)"/><text x="113.00" y="254.50">onnxruntime::python::addObjectMethods..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="390" y="260" width="3" height="15" fill="rgb(216,64,20)"/><text x="393.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="390" y="276" width="3" height="15" fill="rgb(233,7,29)"/><text x="393.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="390" y="292" width="3" height="15" fill="rgb(211,0,22)"/><text x="393.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="390" y="308" width="3" height="15" fill="rgb(235,79,43)"/><text x="393.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(227,4,54)"/><text x="396.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (107 samples, 28.53%)</title><rect x="63" y="68" width="337" height="15" fill="rgb(237,81,52)"/><text x="66.00" y="78.50">profile_ort (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (107 samples, 28.53%)</title><rect x="63" y="84" width="337" height="15" fill="rgb(227,47,42)"/><text x="66.00" y="94.50">setup_profile (bench_LogisticRegression_libli..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (107 samples, 28.53%)</title><rect x="63" y="100" width="337" height="15" fill="rgb(213,228,27)"/><text x="66.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 28.00%)</title><rect x="69" y="116" width="331" height="15" fill="rgb(249,58,27)"/><text x="72.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 28.00%)</title><rect x="69" y="132" width="331" height="15" fill="rgb(253,161,11)"/><text x="72.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (105 samples, 28.00%)</title><rect x="69" y="148" width="331" height="15" fill="rgb(230,155,51)"/><text x="72.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (103 samples, 27.47%)</title><rect x="76" y="164" width="324" height="15" fill="rgb(208,154,19)"/><text x="79.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (99 samples, 26.40%)</title><rect x="88" y="180" width="312" height="15" fill="rgb(218,69,44)"/><text x="91.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (99 samples, 26.40%)</title><rect x="88" y="196" width="312" height="15" fill="rgb(237,156,5)"/><text x="91.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 24.53%)</title><rect x="110" y="212" width="290" height="15" fill="rgb(207,34,42)"/><text x="113.00" y="222.50">pybind11::cpp_function::dispatcher (on..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 24.53%)</title><rect x="110" y="228" width="290" height="15" fill="rgb(223,187,31)"/><text x="113.00" y="238.50">void pybind11::cpp_function::initializ..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="397" y="244" width="3" height="15" fill="rgb(246,162,17)"/><text x="400.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.53%)</title><rect x="412" y="180" width="7" height="15" fill="rgb(224,93,50)"/><text x="415.00" y="190.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.27%)</title><rect x="456" y="260" width="3" height="15" fill="rgb(253,143,24)"/><text x="459.00" y="270.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (2 samples, 0.53%)</title><rect x="469" y="340" width="6" height="15" fill="rgb(210,69,50)"/><text x="472.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 1.87%)</title><rect x="456" y="244" width="22" height="15" fill="rgb(241,64,49)"/><text x="459.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.60%)</title><rect x="459" y="260" width="19" height="15" fill="rgb(242,222,38)"/><text x="462.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 1.60%)</title><rect x="459" y="276" width="19" height="15" fill="rgb(215,92,27)"/><text x="462.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.60%)</title><rect x="459" y="292" width="19" height="15" fill="rgb(225,156,38)"/><text x="462.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (6 samples, 1.60%)</title><rect x="459" y="308" width="19" height="15" fill="rgb(239,185,28)"/><text x="462.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (6 samples, 1.60%)</title><rect x="459" y="324" width="19" height="15" fill="rgb(209,27,3)"/><text x="462.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="475" y="340" width="3" height="15" fill="rgb(219,135,33)"/><text x="478.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="475" y="356" width="3" height="15" fill="rgb(251,86,44)"/><text x="478.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="475" y="372" width="3" height="15" fill="rgb(218,197,32)"/><text x="478.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="475" y="388" width="3" height="15" fill="rgb(246,172,5)"/><text x="478.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.27%)</title><rect x="475" y="404" width="3" height="15" fill="rgb(212,166,51)"/><text x="478.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="475" y="420" width="3" height="15" fill="rgb(219,54,54)"/><text x="478.00" y="430.50"></text></g><g><title>0x7f28cc7afdf0 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="475" y="436" width="3" height="15" fill="rgb(218,148,30)"/><text x="478.00" y="446.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.27%)</title><rect x="488" y="340" width="3" height="15" fill="rgb(226,207,0)"/><text x="491.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="488" y="356" width="3" height="15" fill="rgb(232,115,39)"/><text x="491.00" y="366.50"></text></g><g><title>gemm (cblasfuncs.c) (4 samples, 1.07%)</title><rect x="491" y="340" width="13" height="15" fill="rgb(218,196,35)"/><text x="494.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.80%)</title><rect x="494" y="356" width="10" height="15" fill="rgb(235,184,52)"/><text x="497.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.80%)</title><rect x="494" y="372" width="10" height="15" fill="rgb(242,133,5)"/><text x="497.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.53%)</title><rect x="497" y="388" width="7" height="15" fill="rgb(226,205,50)"/><text x="500.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="504" y="388" width="3" height="15" fill="rgb(237,175,3)"/><text x="507.00" y="398.50"></text></g><g><title>0x7f28cc7afd67 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="507" y="452" width="3" height="15" fill="rgb(220,81,53)"/><text x="510.00" y="462.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.13%)</title><rect x="488" y="276" width="25" height="15" fill="rgb(220,162,28)"/><text x="491.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 2.13%)</title><rect x="488" y="292" width="25" height="15" fill="rgb(253,55,29)"/><text x="491.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 2.13%)</title><rect x="488" y="308" width="25" height="15" fill="rgb(233,116,0)"/><text x="491.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 2.13%)</title><rect x="488" y="324" width="25" height="15" fill="rgb(237,200,13)"/><text x="491.00" y="334.50">c..</text></g><g><title>new_array_for_sum (common.c) (3 samples, 0.80%)</title><rect x="504" y="340" width="9" height="15" fill="rgb(248,4,13)"/><text x="507.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.80%)</title><rect x="504" y="356" width="9" height="15" fill="rgb(230,101,22)"/><text x="507.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.80%)</title><rect x="504" y="372" width="9" height="15" fill="rgb(229,153,33)"/><text x="507.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.53%)</title><rect x="507" y="388" width="6" height="15" fill="rgb(217,61,9)"/><text x="510.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.53%)</title><rect x="507" y="404" width="6" height="15" fill="rgb(209,88,12)"/><text x="510.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.53%)</title><rect x="507" y="420" width="6" height="15" fill="rgb(216,126,2)"/><text x="510.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.53%)</title><rect x="507" y="436" width="6" height="15" fill="rgb(205,192,44)"/><text x="510.00" y="446.50"></text></g><g><title>0x7f28cc7afdb0 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="510" y="452" width="3" height="15" fill="rgb(231,4,39)"/><text x="513.00" y="462.50"></text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.27%)</title><rect x="513" y="276" width="3" height="15" fill="rgb(229,186,39)"/><text x="516.00" y="286.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.80%)</title><rect x="516" y="276" width="10" height="15" fill="rgb(215,2,54)"/><text x="519.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (23 samples, 6.13%)</title><rect x="478" y="244" width="73" height="15" fill="rgb(233,73,42)"/><text x="481.00" y="254.50">numpy_do..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (21 samples, 5.60%)</title><rect x="485" y="260" width="66" height="15" fill="rgb(208,45,40)"/><text x="488.00" y="270.50">dot (&lt;_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 2.13%)</title><rect x="526" y="276" width="25" height="15" fill="rgb(237,139,41)"/><text x="529.00" y="286.50">s..</text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="554" y="276" width="3" height="15" fill="rgb(214,24,30)"/><text x="557.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.27%)</title><rect x="557" y="324" width="3" height="15" fill="rgb(254,5,19)"/><text x="560.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.27%)</title><rect x="557" y="340" width="3" height="15" fill="rgb(233,144,31)"/><text x="560.00" y="350.50"></text></g><g><title>0x7f28cc766762 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="557" y="356" width="3" height="15" fill="rgb(220,212,17)"/><text x="560.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.53%)</title><rect x="557" y="292" width="6" height="15" fill="rgb(236,167,0)"/><text x="560.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.53%)</title><rect x="557" y="308" width="6" height="15" fill="rgb(250,226,26)"/><text x="560.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.27%)</title><rect x="560" y="324" width="3" height="15" fill="rgb(251,37,21)"/><text x="563.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.27%)</title><rect x="560" y="340" width="3" height="15" fill="rgb(233,226,38)"/><text x="563.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.27%)</title><rect x="560" y="356" width="3" height="15" fill="rgb(245,144,33)"/><text x="563.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.27%)</title><rect x="560" y="372" width="3" height="15" fill="rgb(205,167,8)"/><text x="563.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.27%)</title><rect x="563" y="308" width="3" height="15" fill="rgb(212,219,4)"/><text x="566.00" y="318.50"></text></g><g><title>0x7f28cc7ae902 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="563" y="324" width="3" height="15" fill="rgb(209,144,27)"/><text x="566.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.27%)</title><rect x="566" y="324" width="4" height="15" fill="rgb(212,190,34)"/><text x="569.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="566" y="340" width="4" height="15" fill="rgb(233,104,12)"/><text x="569.00" y="350.50"></text></g><g><title>0x7f28cc7afb68 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="566" y="356" width="4" height="15" fill="rgb(253,15,50)"/><text x="569.00" y="366.50"></text></g><g><title>0x7f28cc7ced97 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="579" y="356" width="3" height="15" fill="rgb(225,20,0)"/><text x="582.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 2.13%)</title><rect x="563" y="292" width="25" height="15" fill="rgb(214,216,51)"/><text x="566.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.87%)</title><rect x="566" y="308" width="22" height="15" fill="rgb(219,187,49)"/><text x="569.00" y="318.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.60%)</title><rect x="570" y="324" width="18" height="15" fill="rgb(246,208,11)"/><text x="573.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.60%)</title><rect x="570" y="340" width="18" height="15" fill="rgb(226,63,50)"/><text x="573.00" y="350.50"></text></g><g><title>0x7f28cc7cedbb (libc-2.29.so) (2 samples, 0.53%)</title><rect x="582" y="356" width="6" height="15" fill="rgb(209,80,32)"/><text x="585.00" y="366.50"></text></g><g><title>0x7f28b7ab8204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="588" y="324" width="7" height="15" fill="rgb(243,185,16)"/><text x="591.00" y="334.50"></text></g><g><title>0x7f28b7bc1c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="595" y="340" width="3" height="15" fill="rgb(211,49,11)"/><text x="598.00" y="350.50"></text></g><g><title>0x7f28cc8fa1a0 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="620" y="356" width="3" height="15" fill="rgb(219,145,48)"/><text x="623.00" y="366.50"></text></g><g><title>0x7f28cc92de00 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="623" y="356" width="3" height="15" fill="rgb(251,50,28)"/><text x="626.00" y="366.50"></text></g><g><title>0x7f28cc92de0e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="626" y="356" width="3" height="15" fill="rgb(235,13,51)"/><text x="629.00" y="366.50"></text></g><g><title>0x7f28cc92de17 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="629" y="356" width="4" height="15" fill="rgb(211,224,22)"/><text x="632.00" y="366.50"></text></g><g><title>0x7f28cc92de4e (libm-2.29.so) (3 samples, 0.80%)</title><rect x="633" y="356" width="9" height="15" fill="rgb(248,25,8)"/><text x="636.00" y="366.50"></text></g><g><title>0x7f28cc92de62 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="642" y="356" width="3" height="15" fill="rgb(208,60,29)"/><text x="645.00" y="366.50"></text></g><g><title>0x7f28cc92de7e (libm-2.29.so) (3 samples, 0.80%)</title><rect x="645" y="356" width="10" height="15" fill="rgb(252,14,30)"/><text x="648.00" y="366.50"></text></g><g><title>0x7f28cc92de96 (libm-2.29.so) (2 samples, 0.53%)</title><rect x="655" y="356" width="6" height="15" fill="rgb(254,20,42)"/><text x="658.00" y="366.50"></text></g><g><title>0x7f28b7ab8214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 6.13%)</title><rect x="595" y="324" width="72" height="15" fill="rgb(215,17,30)"/><text x="598.00" y="334.50">0x7f28b7..</text></g><g><title>expf (libm-2.29.so) (22 samples, 5.87%)</title><rect x="598" y="340" width="69" height="15" fill="rgb(237,0,44)"/><text x="601.00" y="350.50">expf (l..</text></g><g><title>0x7f28cc92dea6 (libm-2.29.so) (2 samples, 0.53%)</title><rect x="661" y="356" width="6" height="15" fill="rgb(208,185,33)"/><text x="664.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (39 samples, 10.40%)</title><rect x="554" y="260" width="123" height="15" fill="rgb(233,98,32)"/><text x="557.00" y="270.50">PyUFunc_Generic..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (38 samples, 10.13%)</title><rect x="557" y="276" width="120" height="15" fill="rgb(232,91,47)"/><text x="560.00" y="286.50">execute_legacy..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (28 samples, 7.47%)</title><rect x="588" y="292" width="89" height="15" fill="rgb(210,107,9)"/><text x="591.00" y="302.50">trivial_tw..</text></g><g><title>0x7f28b7a9633d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 7.47%)</title><rect x="588" y="308" width="89" height="15" fill="rgb(214,71,23)"/><text x="591.00" y="318.50">0x7f28b7a9..</text></g><g><title>0x7f28b7ab8228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.80%)</title><rect x="667" y="324" width="10" height="15" fill="rgb(246,79,22)"/><text x="670.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (74 samples, 19.73%)</title><rect x="447" y="228" width="233" height="15" fill="rgb(231,220,33)"/><text x="450.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 10.93%)</title><rect x="551" y="244" width="129" height="15" fill="rgb(232,203,23)"/><text x="554.00" y="254.50">ufunc_generic_ca..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.27%)</title><rect x="677" y="260" width="3" height="15" fill="rgb(219,205,11)"/><text x="680.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.53%)</title><rect x="683" y="260" width="6" height="15" fill="rgb(240,83,40)"/><text x="686.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.53%)</title><rect x="683" y="276" width="6" height="15" fill="rgb(245,213,44)"/><text x="686.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.53%)</title><rect x="683" y="292" width="6" height="15" fill="rgb(221,95,42)"/><text x="686.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.53%)</title><rect x="683" y="308" width="6" height="15" fill="rgb(223,222,24)"/><text x="686.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="686" y="324" width="3" height="15" fill="rgb(241,88,39)"/><text x="689.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="686" y="340" width="3" height="15" fill="rgb(251,95,52)"/><text x="689.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.53%)</title><rect x="692" y="324" width="7" height="15" fill="rgb(242,97,37)"/><text x="695.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.53%)</title><rect x="692" y="340" width="7" height="15" fill="rgb(238,2,7)"/><text x="695.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.53%)</title><rect x="692" y="356" width="7" height="15" fill="rgb(221,0,41)"/><text x="695.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.53%)</title><rect x="692" y="372" width="7" height="15" fill="rgb(225,216,44)"/><text x="695.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.53%)</title><rect x="692" y="388" width="7" height="15" fill="rgb(221,226,47)"/><text x="695.00" y="398.50"></text></g><g><title>0x7f28cc7c4757 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="699" y="340" width="3" height="15" fill="rgb(237,106,49)"/><text x="702.00" y="350.50"></text></g><g><title>0x7f28cb9cfc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="702" y="388" width="3" height="15" fill="rgb(220,101,49)"/><text x="705.00" y="398.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.27%)</title><rect x="705" y="388" width="3" height="15" fill="rgb(219,206,10)"/><text x="708.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="705" y="404" width="3" height="15" fill="rgb(220,113,53)"/><text x="708.00" y="414.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="705" y="420" width="3" height="15" fill="rgb(227,208,7)"/><text x="708.00" y="430.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="705" y="436" width="3" height="15" fill="rgb(225,13,44)"/><text x="708.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.07%)</title><rect x="702" y="372" width="12" height="15" fill="rgb(240,19,17)"/><text x="705.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.53%)</title><rect x="708" y="388" width="6" height="15" fill="rgb(240,215,6)"/><text x="711.00" y="398.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.27%)</title><rect x="714" y="372" width="4" height="15" fill="rgb(249,118,18)"/><text x="717.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.27%)</title><rect x="718" y="372" width="3" height="15" fill="rgb(254,182,34)"/><text x="721.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.27%)</title><rect x="718" y="388" width="3" height="15" fill="rgb(238,23,23)"/><text x="721.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="718" y="404" width="3" height="15" fill="rgb(239,162,13)"/><text x="721.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="718" y="420" width="3" height="15" fill="rgb(212,161,28)"/><text x="721.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="718" y="436" width="3" height="15" fill="rgb(253,88,28)"/><text x="721.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.27%)</title><rect x="718" y="452" width="3" height="15" fill="rgb(205,123,31)"/><text x="721.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.27%)</title><rect x="718" y="468" width="3" height="15" fill="rgb(231,90,50)"/><text x="721.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="718" y="484" width="3" height="15" fill="rgb(228,110,32)"/><text x="721.00" y="494.50"></text></g><g><title>0x7f28cc7b0238 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="718" y="500" width="3" height="15" fill="rgb(228,91,47)"/><text x="721.00" y="510.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="721" y="404" width="3" height="15" fill="rgb(249,74,3)"/><text x="724.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="721" y="420" width="3" height="15" fill="rgb(229,128,21)"/><text x="724.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="721" y="436" width="3" height="15" fill="rgb(252,224,31)"/><text x="724.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.53%)</title><rect x="721" y="372" width="6" height="15" fill="rgb(247,188,26)"/><text x="724.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.53%)</title><rect x="721" y="388" width="6" height="15" fill="rgb(239,141,13)"/><text x="724.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="724" y="404" width="3" height="15" fill="rgb(252,52,26)"/><text x="727.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src) (9 samples, 2.40%)</title><rect x="743" y="388" width="28" height="15" fill="rgb(234,51,26)"/><text x="746.00" y="398.50">F..</text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (5 samples, 1.33%)</title><rect x="755" y="404" width="16" height="15" fill="rgb(253,196,20)"/><text x="758.00" y="414.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="771" y="388" width="3" height="15" fill="rgb(241,18,43)"/><text x="774.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (25 samples, 6.67%)</title><rect x="702" y="356" width="78" height="15" fill="rgb(248,133,23)"/><text x="705.00" y="366.50">PyUFunc_R..</text></g><g><title>reduce_loop (ufunc_object.c) (17 samples, 4.53%)</title><rect x="727" y="372" width="53" height="15" fill="rgb(238,178,14)"/><text x="730.00" y="382.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.53%)</title><rect x="774" y="388" width="6" height="15" fill="rgb(221,92,11)"/><text x="777.00" y="398.50"></text></g><g><title>array_sum (methods.c) (30 samples, 8.00%)</title><rect x="689" y="260" width="95" height="15" fill="rgb(229,16,40)"/><text x="692.00" y="270.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c) (30 samples, 8.00%)</title><rect x="689" y="276" width="95" height="15" fill="rgb(216,190,20)"/><text x="692.00" y="286.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py) (30 samples, 8.00%)</title><rect x="689" y="292" width="95" height="15" fill="rgb(217,73,10)"/><text x="692.00" y="302.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c) (29 samples, 7.73%)</title><rect x="692" y="308" width="92" height="15" fill="rgb(224,149,4)"/><text x="695.00" y="318.50">ufunc_redu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (27 samples, 7.20%)</title><rect x="699" y="324" width="85" height="15" fill="rgb(236,103,14)"/><text x="702.00" y="334.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 6.93%)</title><rect x="702" y="340" width="82" height="15" fill="rgb(240,45,14)"/><text x="705.00" y="350.50">PyUFunc_R..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.27%)</title><rect x="780" y="356" width="4" height="15" fill="rgb(245,228,42)"/><text x="783.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="780" y="372" width="4" height="15" fill="rgb(206,215,6)"/><text x="783.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="780" y="388" width="4" height="15" fill="rgb(229,213,49)"/><text x="783.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.27%)</title><rect x="780" y="404" width="4" height="15" fill="rgb(231,127,21)"/><text x="783.00" y="414.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.27%)</title><rect x="780" y="420" width="4" height="15" fill="rgb(243,155,23)"/><text x="783.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="784" y="276" width="3" height="15" fill="rgb(209,93,3)"/><text x="787.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="784" y="292" width="3" height="15" fill="rgb(229,93,4)"/><text x="787.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.27%)</title><rect x="784" y="308" width="3" height="15" fill="rgb(216,128,46)"/><text x="787.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="784" y="324" width="3" height="15" fill="rgb(217,220,10)"/><text x="787.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.27%)</title><rect x="787" y="292" width="3" height="15" fill="rgb(252,197,4)"/><text x="790.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.27%)</title><rect x="790" y="324" width="3" height="15" fill="rgb(251,154,45)"/><text x="793.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.27%)</title><rect x="790" y="340" width="3" height="15" fill="rgb(252,40,21)"/><text x="793.00" y="350.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (127 samples, 33.87%)</title><rect x="400" y="68" width="399" height="15" fill="rgb(249,28,12)"/><text x="403.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (127 samples, 33.87%)</title><rect x="400" y="84" width="399" height="15" fill="rgb(246,101,17)"/><text x="403.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (127 samples, 33.87%)</title><rect x="400" y="100" width="399" height="15" fill="rgb(218,43,20)"/><text x="403.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 33.60%)</title><rect x="403" y="116" width="396" height="15" fill="rgb(247,166,38)"/><text x="406.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 33.60%)</title><rect x="403" y="132" width="396" height="15" fill="rgb(242,6,1)"/><text x="406.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (125 samples, 33.33%)</title><rect x="406" y="148" width="393" height="15" fill="rgb(241,187,51)"/><text x="409.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (125 samples, 33.33%)</title><rect x="406" y="164" width="393" height="15" fill="rgb(211,83,30)"/><text x="409.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (121 samples, 32.27%)</title><rect x="419" y="180" width="380" height="15" fill="rgb(219,151,36)"/><text x="422.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (115 samples, 30.67%)</title><rect x="437" y="196" width="362" height="15" fill="rgb(247,11,49)"/><text x="440.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (113 samples, 30.13%)</title><rect x="444" y="212" width="355" height="15" fill="rgb(205,28,20)"/><text x="447.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (38 samples, 10.13%)</title><rect x="680" y="228" width="119" height="15" fill="rgb(246,188,53)"/><text x="683.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (37 samples, 9.87%)</title><rect x="683" y="244" width="116" height="15" fill="rgb(253,78,1)"/><text x="686.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.33%)</title><rect x="784" y="260" width="15" height="15" fill="rgb(210,100,43)"/><text x="787.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.07%)</title><rect x="787" y="276" width="12" height="15" fill="rgb(229,44,40)"/><text x="790.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.80%)</title><rect x="790" y="292" width="9" height="15" fill="rgb(224,191,7)"/><text x="793.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.80%)</title><rect x="790" y="308" width="9" height="15" fill="rgb(238,5,14)"/><text x="793.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.53%)</title><rect x="793" y="324" width="6" height="15" fill="rgb(228,131,21)"/><text x="796.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.53%)</title><rect x="793" y="340" width="6" height="15" fill="rgb(211,7,30)"/><text x="796.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.53%)</title><rect x="793" y="356" width="6" height="15" fill="rgb(254,49,17)"/><text x="796.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="796" y="372" width="3" height="15" fill="rgb(243,83,13)"/><text x="799.00" y="382.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.27%)</title><rect x="812" y="180" width="3" height="15" fill="rgb(235,144,51)"/><text x="815.00" y="190.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.27%)</title><rect x="818" y="260" width="3" height="15" fill="rgb(226,35,5)"/><text x="821.00" y="270.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.27%)</title><rect x="828" y="292" width="3" height="15" fill="rgb(231,168,43)"/><text x="831.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="828" y="308" width="3" height="15" fill="rgb(208,85,45)"/><text x="831.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="828" y="324" width="3" height="15" fill="rgb(237,208,49)"/><text x="831.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="828" y="340" width="3" height="15" fill="rgb(225,7,19)"/><text x="831.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 1.33%)</title><rect x="837" y="308" width="16" height="15" fill="rgb(230,206,54)"/><text x="840.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.80%)</title><rect x="843" y="324" width="10" height="15" fill="rgb(254,63,10)"/><text x="846.00" y="334.50"></text></g><g><title>array_sum (methods.c) (15 samples, 4.00%)</title><rect x="815" y="180" width="47" height="15" fill="rgb(219,100,6)"/><text x="818.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 4.00%)</title><rect x="815" y="196" width="47" height="15" fill="rgb(254,147,30)"/><text x="818.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 4.00%)</title><rect x="815" y="212" width="47" height="15" fill="rgb(224,227,31)"/><text x="818.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 3.73%)</title><rect x="818" y="228" width="44" height="15" fill="rgb(225,50,29)"/><text x="821.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (14 samples, 3.73%)</title><rect x="818" y="244" width="44" height="15" fill="rgb(214,137,1)"/><text x="821.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 3.47%)</title><rect x="821" y="260" width="41" height="15" fill="rgb(221,213,12)"/><text x="824.00" y="270.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (12 samples, 3.20%)</title><rect x="824" y="276" width="38" height="15" fill="rgb(239,203,27)"/><text x="827.00" y="286.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c) (10 samples, 2.67%)</title><rect x="831" y="292" width="31" height="15" fill="rgb(252,213,27)"/><text x="834.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.80%)</title><rect x="853" y="308" width="9" height="15" fill="rgb(212,223,13)"/><text x="856.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.27%)</title><rect x="862" y="196" width="3" height="15" fill="rgb(253,196,33)"/><text x="865.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.27%)</title><rect x="865" y="212" width="4" height="15" fill="rgb(232,10,40)"/><text x="868.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="869" y="228" width="3" height="15" fill="rgb(219,39,43)"/><text x="872.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="869" y="244" width="3" height="15" fill="rgb(216,227,30)"/><text x="872.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.27%)</title><rect x="869" y="260" width="3" height="15" fill="rgb(251,51,18)"/><text x="872.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.27%)</title><rect x="878" y="292" width="3" height="15" fill="rgb(220,187,10)"/><text x="881.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.27%)</title><rect x="878" y="308" width="3" height="15" fill="rgb(243,109,39)"/><text x="881.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.53%)</title><rect x="878" y="276" width="6" height="15" fill="rgb(226,12,6)"/><text x="881.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.27%)</title><rect x="881" y="292" width="3" height="15" fill="rgb(252,39,1)"/><text x="884.00" y="302.50"></text></g><g><title>array_add (number.c) (9 samples, 2.40%)</title><rect x="865" y="196" width="29" height="15" fill="rgb(230,194,33)"/><text x="868.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.13%)</title><rect x="869" y="212" width="25" height="15" fill="rgb(235,122,5)"/><text x="872.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.87%)</title><rect x="872" y="228" width="22" height="15" fill="rgb(224,127,8)"/><text x="875.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.60%)</title><rect x="875" y="244" width="19" height="15" fill="rgb(250,186,34)"/><text x="878.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.60%)</title><rect x="875" y="260" width="19" height="15" fill="rgb(238,164,13)"/><text x="878.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.80%)</title><rect x="884" y="276" width="10" height="15" fill="rgb(250,176,7)"/><text x="887.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.80%)</title><rect x="884" y="292" width="10" height="15" fill="rgb(237,149,13)"/><text x="887.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.80%)</title><rect x="884" y="308" width="10" height="15" fill="rgb(231,52,24)"/><text x="887.00" y="318.50"></text></g><g><title>0x7f28cc7ced50 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="891" y="324" width="3" height="15" fill="rgb(254,161,47)"/><text x="894.00" y="334.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.53%)</title><rect x="909" y="212" width="7" height="15" fill="rgb(245,86,37)"/><text x="912.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.27%)</title><rect x="916" y="212" width="3" height="15" fill="rgb(235,79,19)"/><text x="919.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="919" y="212" width="3" height="15" fill="rgb(207,94,6)"/><text x="922.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="919" y="228" width="3" height="15" fill="rgb(218,77,34)"/><text x="922.00" y="238.50"></text></g><g><title>0x7f28cc7bf6fa (libc-2.29.so) (1 samples, 0.27%)</title><rect x="919" y="244" width="3" height="15" fill="rgb(238,115,4)"/><text x="922.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="922" y="212" width="3" height="15" fill="rgb(241,98,19)"/><text x="925.00" y="222.50"></text></g><g><title>0x7f28cc7c4b89 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="928" y="228" width="3" height="15" fill="rgb(223,88,6)"/><text x="931.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.33%)</title><rect x="925" y="212" width="16" height="15" fill="rgb(208,228,22)"/><text x="928.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.80%)</title><rect x="931" y="228" width="10" height="15" fill="rgb(217,43,45)"/><text x="934.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.53%)</title><rect x="935" y="244" width="6" height="15" fill="rgb(213,12,38)"/><text x="938.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.27%)</title><rect x="941" y="212" width="3" height="15" fill="rgb(246,93,43)"/><text x="944.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.27%)</title><rect x="944" y="212" width="3" height="15" fill="rgb(252,182,0)"/><text x="947.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.27%)</title><rect x="944" y="228" width="3" height="15" fill="rgb(241,155,11)"/><text x="947.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (23 samples, 6.13%)</title><rect x="894" y="196" width="72" height="15" fill="rgb(238,162,53)"/><text x="897.00" y="206.50">check_ar..</text></g><g><title>simplefilter (warnings.py) (6 samples, 1.60%)</title><rect x="947" y="212" width="19" height="15" fill="rgb(212,175,2)"/><text x="950.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.53%)</title><rect x="960" y="228" width="6" height="15" fill="rgb(239,154,14)"/><text x="963.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.80%)</title><rect x="966" y="196" width="10" height="15" fill="rgb(241,168,21)"/><text x="969.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.53%)</title><rect x="969" y="212" width="7" height="15" fill="rgb(233,226,48)"/><text x="972.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.53%)</title><rect x="969" y="228" width="7" height="15" fill="rgb(224,115,8)"/><text x="972.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="985" y="212" width="3" height="15" fill="rgb(223,178,32)"/><text x="988.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.87%)</title><rect x="988" y="212" width="22" height="15" fill="rgb(230,185,47)"/><text x="991.00" y="222.50">d..</text></g><g><title>DOUBLE_matmul (matmul.c.src) (4 samples, 1.07%)</title><rect x="1013" y="260" width="13" height="15" fill="rgb(226,188,11)"/><text x="1016.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.07%)</title><rect x="1013" y="276" width="13" height="15" fill="rgb(231,126,11)"/><text x="1016.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.07%)</title><rect x="1013" y="292" width="13" height="15" fill="rgb(232,157,35)"/><text x="1016.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.80%)</title><rect x="1016" y="308" width="10" height="15" fill="rgb(239,160,43)"/><text x="1019.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="1026" y="324" width="3" height="15" fill="rgb(231,218,14)"/><text x="1029.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.07%)</title><rect x="1026" y="260" width="12" height="15" fill="rgb(237,141,30)"/><text x="1029.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.07%)</title><rect x="1026" y="276" width="12" height="15" fill="rgb(222,213,27)"/><text x="1029.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.07%)</title><rect x="1026" y="292" width="12" height="15" fill="rgb(248,182,31)"/><text x="1029.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 1.07%)</title><rect x="1026" y="308" width="12" height="15" fill="rgb(225,56,34)"/><text x="1029.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.80%)</title><rect x="1029" y="324" width="9" height="15" fill="rgb(208,12,51)"/><text x="1032.00" y="334.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (57 samples, 15.20%)</title><rect x="862" y="180" width="180" height="15" fill="rgb(208,157,9)"/><text x="865.00" y="190.50">decision_function (skle..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (21 samples, 5.60%)</title><rect x="976" y="196" width="66" height="15" fill="rgb(215,157,26)"/><text x="979.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.67%)</title><rect x="1010" y="212" width="32" height="15" fill="rgb(223,90,19)"/><text x="1013.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.67%)</title><rect x="1010" y="228" width="32" height="15" fill="rgb(229,25,4)"/><text x="1013.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (9 samples, 2.40%)</title><rect x="1013" y="244" width="29" height="15" fill="rgb(232,50,37)"/><text x="1016.00" y="254.50">Py..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1038" y="260" width="4" height="15" fill="rgb(245,225,25)"/><text x="1041.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="1038" y="276" width="4" height="15" fill="rgb(213,151,28)"/><text x="1041.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="1038" y="292" width="4" height="15" fill="rgb(244,208,38)"/><text x="1041.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.27%)</title><rect x="1038" y="308" width="4" height="15" fill="rgb(219,143,37)"/><text x="1041.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.27%)</title><rect x="1042" y="212" width="3" height="15" fill="rgb(238,120,13)"/><text x="1045.00" y="222.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (2 samples, 0.53%)</title><rect x="1045" y="292" width="6" height="15" fill="rgb(237,92,48)"/><text x="1048.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (11 samples, 2.93%)</title><rect x="1045" y="244" width="34" height="15" fill="rgb(212,86,5)"/><text x="1048.00" y="254.50">DO..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (11 samples, 2.93%)</title><rect x="1045" y="260" width="34" height="15" fill="rgb(228,105,52)"/><text x="1048.00" y="270.50">ru..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (11 samples, 2.93%)</title><rect x="1045" y="276" width="34" height="15" fill="rgb(234,164,50)"/><text x="1048.00" y="286.50">ss..</text></g><g><title>_mm_store_pd (emmintrin.h) (9 samples, 2.40%)</title><rect x="1051" y="292" width="28" height="15" fill="rgb(234,110,1)"/><text x="1054.00" y="302.50">_..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1079" y="244" width="4" height="15" fill="rgb(253,167,44)"/><text x="1082.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1079" y="260" width="4" height="15" fill="rgb(233,224,4)"/><text x="1082.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (15 samples, 4.00%)</title><rect x="1045" y="228" width="47" height="15" fill="rgb(223,78,40)"/><text x="1048.00" y="238.50">iter..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.80%)</title><rect x="1083" y="244" width="9" height="15" fill="rgb(228,153,2)"/><text x="1086.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.80%)</title><rect x="1083" y="260" width="9" height="15" fill="rgb(251,51,41)"/><text x="1086.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.80%)</title><rect x="1083" y="276" width="9" height="15" fill="rgb(221,40,37)"/><text x="1086.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="1089" y="292" width="3" height="15" fill="rgb(216,33,18)"/><text x="1092.00" y="302.50"></text></g><g><title>0x7f28b7a75fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1092" y="276" width="3" height="15" fill="rgb(223,87,23)"/><text x="1095.00" y="286.50"></text></g><g><title>0x7f28b7bc19f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1095" y="276" width="3" height="15" fill="rgb(206,27,31)"/><text x="1098.00" y="286.50"></text></g><g><title>0x7f28cc980bb4 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1108" y="292" width="3" height="15" fill="rgb(206,133,35)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f28cc980c2e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1111" y="292" width="3" height="15" fill="rgb(217,195,50)"/><text x="1114.00" y="302.50"></text></g><g><title>0x7f28cc980c56 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1114" y="292" width="3" height="15" fill="rgb(239,212,38)"/><text x="1117.00" y="302.50"></text></g><g><title>0x7f28cc980c6a (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1117" y="292" width="3" height="15" fill="rgb(228,82,19)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f28b7ab8265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.67%)</title><rect x="1092" y="260" width="31" height="15" fill="rgb(210,15,2)"/><text x="1095.00" y="270.50">0x..</text></g><g><title>exp (libm-2.29.so) (8 samples, 2.13%)</title><rect x="1098" y="276" width="25" height="15" fill="rgb(242,167,3)"/><text x="1101.00" y="286.50">e..</text></g><g><title>0x7f28cc980c7b (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(227,57,22)"/><text x="1123.00" y="302.50"></text></g><g><title>0x7f28b7ab8275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="1123" y="260" width="7" height="15" fill="rgb(248,27,43)"/><text x="1126.00" y="270.50"></text></g><g><title>0x7f28b7a979dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 6.40%)</title><rect x="1092" y="244" width="75" height="15" fill="rgb(232,23,26)"/><text x="1095.00" y="254.50">0x7f28b7..</text></g><g><title>0x7f28b7ab8279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.20%)</title><rect x="1130" y="260" width="37" height="15" fill="rgb(209,123,23)"/><text x="1133.00" y="270.50">0x7..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (40 samples, 10.67%)</title><rect x="1045" y="212" width="126" height="15" fill="rgb(240,88,40)"/><text x="1048.00" y="222.50">execute_legacy_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (25 samples, 6.67%)</title><rect x="1092" y="228" width="79" height="15" fill="rgb(224,55,47)"/><text x="1095.00" y="238.50">trivial_t..</text></g><g><title>0x7f28b7a979e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1167" y="244" width="4" height="15" fill="rgb(221,68,6)"/><text x="1170.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.27%)</title><rect x="1171" y="212" width="3" height="15" fill="rgb(208,195,14)"/><text x="1174.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.27%)</title><rect x="1171" y="228" width="3" height="15" fill="rgb(243,16,3)"/><text x="1174.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (118 samples, 31.47%)</title><rect x="809" y="164" width="371" height="15" fill="rgb(211,89,11)"/><text x="812.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (44 samples, 11.73%)</title><rect x="1042" y="180" width="138" height="15" fill="rgb(225,170,15)"/><text x="1045.00" y="190.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (44 samples, 11.73%)</title><rect x="1042" y="196" width="138" height="15" fill="rgb(247,0,14)"/><text x="1045.00" y="206.50">PyUFunc_GenericFu..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.53%)</title><rect x="1174" y="212" width="6" height="15" fill="rgb(212,217,2)"/><text x="1177.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.53%)</title><rect x="1174" y="228" width="6" height="15" fill="rgb(249,71,10)"/><text x="1177.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="1177" y="244" width="3" height="15" fill="rgb(251,109,42)"/><text x="1180.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="1177" y="260" width="3" height="15" fill="rgb(244,104,0)"/><text x="1180.00" y="270.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.27%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(208,53,30)"/><text x="1180.00" y="286.50"></text></g><g><title>all (375 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,163,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (375 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(208,229,24)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (124 samples, 33.07%)</title><rect x="799" y="68" width="391" height="15" fill="rgb(217,164,16)"/><text x="802.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (124 samples, 33.07%)</title><rect x="799" y="84" width="391" height="15" fill="rgb(233,22,38)"/><text x="802.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py) (124 samples, 33.07%)</title><rect x="799" y="100" width="391" height="15" fill="rgb(224,140,33)"/><text x="802.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solv..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 32.53%)</title><rect x="806" y="116" width="384" height="15" fill="rgb(207,188,24)"/><text x="809.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 32.53%)</title><rect x="806" y="132" width="384" height="15" fill="rgb(224,116,18)"/><text x="809.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (122 samples, 32.53%)</title><rect x="806" y="148" width="384" height="15" fill="rgb(219,1,22)"/><text x="809.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.80%)</title><rect x="1180" y="164" width="10" height="15" fill="rgb(239,114,54)"/><text x="1183.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(233,153,49)"/><text x="1189.00" y="190.50"></text></g></g></svg>