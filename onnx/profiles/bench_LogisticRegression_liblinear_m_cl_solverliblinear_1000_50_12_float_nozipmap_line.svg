<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1590" onload="init(evt)" viewBox="0 0 1200 1590" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1590" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1573.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1573.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:18) (1 samples, 0.21%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(232,6,24)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.21%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(242,79,23)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.21%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(250,189,15)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.21%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(233,42,53)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.21%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(214,8,49)"/><text x="13.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.21%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(216,104,34)"/><text x="13.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.21%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(247,45,39)"/><text x="13.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.21%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(250,142,26)"/><text x="13.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.21%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(221,194,24)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f92625669dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(247,53,9)"/><text x="13.00" y="254.50"></text></g><g><title>0x7f9262587279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(242,85,43)"/><text x="13.00" y="270.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:179) (1 samples, 0.21%)</title><rect x="14" y="116" width="3" height="15" fill="rgb(239,50,49)"/><text x="17.00" y="126.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.21%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(244,164,42)"/><text x="20.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.21%)</title><rect x="19" y="164" width="3" height="15" fill="rgb(216,53,49)"/><text x="22.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.21%)</title><rect x="22" y="164" width="2" height="15" fill="rgb(239,21,49)"/><text x="25.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.21%)</title><rect x="24" y="180" width="3" height="15" fill="rgb(227,196,15)"/><text x="27.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.21%)</title><rect x="29" y="196" width="3" height="15" fill="rgb(220,192,43)"/><text x="32.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.62%)</title><rect x="27" y="180" width="7" height="15" fill="rgb(206,166,0)"/><text x="30.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.21%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(211,145,30)"/><text x="35.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (8 samples, 1.67%)</title><rect x="17" y="148" width="20" height="15" fill="rgb(233,203,3)"/><text x="20.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.04%)</title><rect x="24" y="164" width="13" height="15" fill="rgb(205,76,44)"/><text x="27.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.21%)</title><rect x="34" y="180" width="3" height="15" fill="rgb(253,159,8)"/><text x="37.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.21%)</title><rect x="37" y="148" width="2" height="15" fill="rgb(208,92,44)"/><text x="40.00" y="158.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.21%)</title><rect x="37" y="164" width="2" height="15" fill="rgb(229,76,10)"/><text x="40.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (1 samples, 0.21%)</title><rect x="44" y="180" width="2" height="15" fill="rgb(242,58,51)"/><text x="47.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.21%)</title><rect x="44" y="196" width="2" height="15" fill="rgb(226,95,2)"/><text x="47.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.21%)</title><rect x="44" y="212" width="2" height="15" fill="rgb(221,165,24)"/><text x="47.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.21%)</title><rect x="46" y="196" width="3" height="15" fill="rgb(236,57,32)"/><text x="49.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.21%)</title><rect x="49" y="196" width="2" height="15" fill="rgb(205,83,9)"/><text x="52.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.21%)</title><rect x="49" y="212" width="2" height="15" fill="rgb(247,53,23)"/><text x="52.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.21%)</title><rect x="51" y="212" width="3" height="15" fill="rgb(245,10,28)"/><text x="54.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.42%)</title><rect x="51" y="196" width="5" height="15" fill="rgb(228,78,9)"/><text x="54.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.21%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(252,46,2)"/><text x="57.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.21%)</title><rect x="54" y="228" width="2" height="15" fill="rgb(253,96,18)"/><text x="57.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.42%)</title><rect x="56" y="196" width="5" height="15" fill="rgb(233,158,49)"/><text x="59.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.42%)</title><rect x="56" y="212" width="5" height="15" fill="rgb(233,14,44)"/><text x="59.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.42%)</title><rect x="61" y="196" width="5" height="15" fill="rgb(205,195,32)"/><text x="64.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.21%)</title><rect x="64" y="212" width="2" height="15" fill="rgb(214,167,53)"/><text x="67.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.42%)</title><rect x="66" y="196" width="5" height="15" fill="rgb(244,118,40)"/><text x="69.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.42%)</title><rect x="66" y="212" width="5" height="15" fill="rgb(238,126,41)"/><text x="69.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.42%)</title><rect x="71" y="196" width="5" height="15" fill="rgb(246,145,54)"/><text x="74.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.21%)</title><rect x="73" y="212" width="3" height="15" fill="rgb(251,131,36)"/><text x="76.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.21%)</title><rect x="73" y="228" width="3" height="15" fill="rgb(238,186,13)"/><text x="76.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.21%)</title><rect x="76" y="196" width="2" height="15" fill="rgb(211,191,26)"/><text x="79.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.21%)</title><rect x="76" y="212" width="2" height="15" fill="rgb(208,110,33)"/><text x="79.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.21%)</title><rect x="76" y="228" width="2" height="15" fill="rgb(216,54,17)"/><text x="79.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.21%)</title><rect x="78" y="212" width="3" height="15" fill="rgb(229,132,38)"/><text x="81.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.21%)</title><rect x="81" y="212" width="2" height="15" fill="rgb(207,103,20)"/><text x="84.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (16 samples, 3.33%)</title><rect x="46" y="180" width="40" height="15" fill="rgb(222,119,50)"/><text x="49.00" y="190.50">dec..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.62%)</title><rect x="78" y="196" width="8" height="15" fill="rgb(238,109,16)"/><text x="81.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.21%)</title><rect x="83" y="212" width="3" height="15" fill="rgb(216,54,44)"/><text x="86.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.21%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(250,121,4)"/><text x="86.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.21%)</title><rect x="86" y="228" width="2" height="15" fill="rgb(229,152,51)"/><text x="89.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.21%)</title><rect x="86" y="244" width="2" height="15" fill="rgb(207,206,20)"/><text x="89.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.21%)</title><rect x="88" y="244" width="3" height="15" fill="rgb(218,151,31)"/><text x="91.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.21%)</title><rect x="88" y="260" width="3" height="15" fill="rgb(221,42,12)"/><text x="91.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.21%)</title><rect x="91" y="292" width="2" height="15" fill="rgb(230,86,15)"/><text x="94.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.42%)</title><rect x="91" y="276" width="5" height="15" fill="rgb(245,3,8)"/><text x="94.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1612) (1 samples, 0.21%)</title><rect x="93" y="292" width="3" height="15" fill="rgb(229,5,22)"/><text x="96.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.21%)</title><rect x="96" y="276" width="2" height="15" fill="rgb(227,167,50)"/><text x="99.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.21%)</title><rect x="96" y="292" width="2" height="15" fill="rgb(222,198,51)"/><text x="99.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.21%)</title><rect x="96" y="308" width="2" height="15" fill="rgb(237,150,27)"/><text x="99.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.21%)</title><rect x="96" y="324" width="2" height="15" fill="rgb(252,100,39)"/><text x="99.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.21%)</title><rect x="96" y="340" width="2" height="15" fill="rgb(217,13,21)"/><text x="99.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.83%)</title><rect x="91" y="260" width="9" height="15" fill="rgb(237,41,30)"/><text x="94.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.21%)</title><rect x="98" y="276" width="2" height="15" fill="rgb(251,101,45)"/><text x="101.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.21%)</title><rect x="98" y="292" width="2" height="15" fill="rgb(229,132,10)"/><text x="101.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.21%)</title><rect x="98" y="308" width="2" height="15" fill="rgb(217,72,24)"/><text x="101.00" y="318.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.21%)</title><rect x="98" y="324" width="2" height="15" fill="rgb(234,225,22)"/><text x="101.00" y="334.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.21%)</title><rect x="98" y="340" width="2" height="15" fill="rgb(228,188,4)"/><text x="101.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.21%)</title><rect x="100" y="276" width="3" height="15" fill="rgb(217,75,18)"/><text x="103.00" y="286.50"></text></g><g><title>0x7f927729dd6a (libc-2.29.so) (2 samples, 0.42%)</title><rect x="103" y="324" width="5" height="15" fill="rgb(205,128,31)"/><text x="106.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.83%)</title><rect x="100" y="260" width="10" height="15" fill="rgb(227,108,29)"/><text x="103.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.62%)</title><rect x="103" y="276" width="7" height="15" fill="rgb(250,64,44)"/><text x="106.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.62%)</title><rect x="103" y="292" width="7" height="15" fill="rgb(242,15,27)"/><text x="106.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.62%)</title><rect x="103" y="308" width="7" height="15" fill="rgb(228,205,25)"/><text x="106.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.21%)</title><rect x="108" y="324" width="2" height="15" fill="rgb(239,99,16)"/><text x="111.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.21%)</title><rect x="110" y="260" width="3" height="15" fill="rgb(217,129,13)"/><text x="113.00" y="270.50"></text></g><g><title>array_add (number.c:330) (12 samples, 2.50%)</title><rect x="86" y="196" width="29" height="15" fill="rgb(238,83,44)"/><text x="89.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.50%)</title><rect x="86" y="212" width="29" height="15" fill="rgb(212,7,27)"/><text x="89.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 2.29%)</title><rect x="88" y="228" width="27" height="15" fill="rgb(228,11,47)"/><text x="91.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 2.08%)</title><rect x="91" y="244" width="24" height="15" fill="rgb(254,8,49)"/><text x="94.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.21%)</title><rect x="113" y="260" width="2" height="15" fill="rgb(245,6,9)"/><text x="116.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.21%)</title><rect x="113" y="276" width="2" height="15" fill="rgb(220,170,46)"/><text x="116.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.83%)</title><rect x="115" y="212" width="10" height="15" fill="rgb(241,5,26)"/><text x="118.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 4.17%)</title><rect x="125" y="212" width="49" height="15" fill="rgb(207,60,37)"/><text x="128.00" y="222.50">dgem..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.21%)</title><rect x="174" y="260" width="3" height="15" fill="rgb(227,110,45)"/><text x="177.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:734) (1 samples, 0.21%)</title><rect x="174" y="276" width="3" height="15" fill="rgb(206,226,4)"/><text x="177.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.21%)</title><rect x="177" y="292" width="2" height="15" fill="rgb(224,51,11)"/><text x="180.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.21%)</title><rect x="177" y="308" width="2" height="15" fill="rgb(210,116,24)"/><text x="180.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.21%)</title><rect x="177" y="324" width="2" height="15" fill="rgb(233,159,32)"/><text x="180.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.21%)</title><rect x="177" y="340" width="2" height="15" fill="rgb(222,89,49)"/><text x="180.00" y="350.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:676) (1 samples, 0.21%)</title><rect x="177" y="356" width="2" height="15" fill="rgb(250,85,48)"/><text x="180.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (21 samples, 4.38%)</title><rect x="179" y="308" width="52" height="15" fill="rgb(209,173,15)"/><text x="182.00" y="318.50">raw_a..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (21 samples, 4.38%)</title><rect x="179" y="324" width="52" height="15" fill="rgb(222,110,9)"/><text x="182.00" y="334.50">_alig..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (24 samples, 5.00%)</title><rect x="174" y="244" width="59" height="15" fill="rgb(210,180,2)"/><text x="177.00" y="254.50">PyUFun..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (23 samples, 4.79%)</title><rect x="177" y="260" width="56" height="15" fill="rgb(246,77,41)"/><text x="180.00" y="270.50">NpyIt..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (23 samples, 4.79%)</title><rect x="177" y="276" width="56" height="15" fill="rgb(222,74,24)"/><text x="180.00" y="286.50">npyit..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (22 samples, 4.58%)</title><rect x="179" y="292" width="54" height="15" fill="rgb(216,123,18)"/><text x="182.00" y="302.50">PyArr..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.21%)</title><rect x="231" y="308" width="2" height="15" fill="rgb(251,186,27)"/><text x="234.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.21%)</title><rect x="231" y="324" width="2" height="15" fill="rgb(211,9,48)"/><text x="234.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2879) (1 samples, 0.21%)</title><rect x="233" y="244" width="3" height="15" fill="rgb(247,203,53)"/><text x="236.00" y="254.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c:1094) (1 samples, 0.21%)</title><rect x="233" y="260" width="3" height="15" fill="rgb(248,166,43)"/><text x="236.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.21%)</title><rect x="236" y="244" width="2" height="15" fill="rgb(214,155,14)"/><text x="239.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:169) (1 samples, 0.21%)</title><rect x="236" y="260" width="2" height="15" fill="rgb(205,189,29)"/><text x="239.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:274) (1 samples, 0.21%)</title><rect x="236" y="276" width="2" height="15" fill="rgb(233,228,23)"/><text x="239.00" y="286.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src:114) (1 samples, 0.21%)</title><rect x="238" y="276" width="3" height="15" fill="rgb(252,174,14)"/><text x="241.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (62 samples, 12.92%)</title><rect x="115" y="196" width="153" height="15" fill="rgb(217,80,25)"/><text x="118.00" y="206.50">safe_sparse_dot (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (38 samples, 7.92%)</title><rect x="174" y="212" width="94" height="15" fill="rgb(208,106,45)"/><text x="177.00" y="222.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (38 samples, 7.92%)</title><rect x="174" y="228" width="94" height="15" fill="rgb(207,215,3)"/><text x="177.00" y="238.50">PyUFunc_Gen..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (12 samples, 2.50%)</title><rect x="238" y="244" width="30" height="15" fill="rgb(215,163,20)"/><text x="241.00" y="254.50">Py..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (12 samples, 2.50%)</title><rect x="238" y="260" width="30" height="15" fill="rgb(231,9,12)"/><text x="241.00" y="270.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.29%)</title><rect x="241" y="276" width="27" height="15" fill="rgb(239,41,12)"/><text x="244.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 2.29%)</title><rect x="241" y="292" width="27" height="15" fill="rgb(208,222,30)"/><text x="244.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 2.08%)</title><rect x="243" y="308" width="25" height="15" fill="rgb(252,202,23)"/><text x="246.00" y="318.50">d..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (75 samples, 15.62%)</title><rect x="86" y="180" width="184" height="15" fill="rgb(248,88,38)"/><text x="89.00" y="190.50">decision_function (skle..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.21%)</title><rect x="268" y="196" width="2" height="15" fill="rgb(211,70,45)"/><text x="271.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (94 samples, 19.58%)</title><rect x="41" y="164" width="232" height="15" fill="rgb(251,200,41)"/><text x="44.00" y="174.50">_predict_proba_lr (sklearn/lin..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.21%)</title><rect x="270" y="180" width="3" height="15" fill="rgb(241,184,11)"/><text x="273.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.21%)</title><rect x="273" y="196" width="2" height="15" fill="rgb(206,27,38)"/><text x="276.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.21%)</title><rect x="273" y="212" width="2" height="15" fill="rgb(240,124,19)"/><text x="276.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.21%)</title><rect x="273" y="228" width="2" height="15" fill="rgb(232,216,34)"/><text x="276.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.42%)</title><rect x="275" y="196" width="5" height="15" fill="rgb(254,205,4)"/><text x="278.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (2 samples, 0.42%)</title><rect x="275" y="212" width="5" height="15" fill="rgb(223,56,18)"/><text x="278.00" y="222.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (2 samples, 0.42%)</title><rect x="275" y="228" width="5" height="15" fill="rgb(219,72,16)"/><text x="278.00" y="238.50"></text></g><g><title>0x7f92773c91b0 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="287" y="292" width="3" height="15" fill="rgb(248,46,38)"/><text x="290.00" y="302.50"></text></g><g><title>0x7f927744fbf9 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="290" y="292" width="2" height="15" fill="rgb(242,163,16)"/><text x="293.00" y="302.50"></text></g><g><title>0x7f927744fc07 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="292" y="292" width="3" height="15" fill="rgb(245,47,38)"/><text x="295.00" y="302.50"></text></g><g><title>0x7f927744fc2e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="295" y="292" width="2" height="15" fill="rgb(226,154,31)"/><text x="298.00" y="302.50"></text></g><g><title>0x7f9262587265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.67%)</title><rect x="280" y="260" width="20" height="15" fill="rgb(245,121,45)"/><text x="283.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.67%)</title><rect x="280" y="276" width="20" height="15" fill="rgb(228,144,4)"/><text x="283.00" y="286.50"></text></g><g><title>0x7f927744fc6a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="297" y="292" width="3" height="15" fill="rgb(209,20,33)"/><text x="300.00" y="302.50"></text></g><g><title>0x7f9262587275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.42%)</title><rect x="300" y="260" width="5" height="15" fill="rgb(225,155,53)"/><text x="303.00" y="270.50"></text></g><g><title>0x7f92625669dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 3.75%)</title><rect x="280" y="244" width="44" height="15" fill="rgb(246,57,39)"/><text x="283.00" y="254.50">0x7f..</text></g><g><title>0x7f9262587279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.67%)</title><rect x="305" y="260" width="19" height="15" fill="rgb(227,54,35)"/><text x="308.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (22 samples, 4.58%)</title><rect x="273" y="164" width="54" height="15" fill="rgb(212,9,53)"/><text x="276.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 4.58%)</title><rect x="273" y="180" width="54" height="15" fill="rgb(226,218,47)"/><text x="276.00" y="190.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (19 samples, 3.96%)</title><rect x="280" y="196" width="47" height="15" fill="rgb(220,80,42)"/><text x="283.00" y="206.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (19 samples, 3.96%)</title><rect x="280" y="212" width="47" height="15" fill="rgb(213,108,49)"/><text x="283.00" y="222.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (19 samples, 3.96%)</title><rect x="280" y="228" width="47" height="15" fill="rgb(224,19,13)"/><text x="283.00" y="238.50">triv..</text></g><g><title>0x7f92625669e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="324" y="244" width="3" height="15" fill="rgb(243,197,25)"/><text x="327.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (2 samples, 0.42%)</title><rect x="332" y="212" width="4" height="15" fill="rgb(254,6,42)"/><text x="335.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.62%)</title><rect x="332" y="180" width="7" height="15" fill="rgb(207,67,20)"/><text x="335.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 0.62%)</title><rect x="332" y="196" width="7" height="15" fill="rgb(205,52,20)"/><text x="335.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.21%)</title><rect x="336" y="212" width="3" height="15" fill="rgb(206,144,12)"/><text x="339.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.21%)</title><rect x="336" y="228" width="3" height="15" fill="rgb(254,73,39)"/><text x="339.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.21%)</title><rect x="336" y="244" width="3" height="15" fill="rgb(220,80,24)"/><text x="339.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.21%)</title><rect x="339" y="180" width="2" height="15" fill="rgb(235,50,22)"/><text x="342.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.21%)</title><rect x="339" y="196" width="2" height="15" fill="rgb(236,111,18)"/><text x="342.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.21%)</title><rect x="339" y="212" width="2" height="15" fill="rgb(216,150,13)"/><text x="342.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c:504) (1 samples, 0.21%)</title><rect x="339" y="228" width="2" height="15" fill="rgb(214,166,13)"/><text x="342.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.42%)</title><rect x="341" y="228" width="5" height="15" fill="rgb(225,8,53)"/><text x="344.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.42%)</title><rect x="341" y="244" width="5" height="15" fill="rgb(232,36,14)"/><text x="344.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.42%)</title><rect x="341" y="260" width="5" height="15" fill="rgb(221,29,44)"/><text x="344.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.42%)</title><rect x="341" y="276" width="5" height="15" fill="rgb(221,188,45)"/><text x="344.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.42%)</title><rect x="341" y="292" width="5" height="15" fill="rgb(211,105,53)"/><text x="344.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.42%)</title><rect x="341" y="308" width="5" height="15" fill="rgb(208,175,5)"/><text x="344.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.21%)</title><rect x="346" y="308" width="3" height="15" fill="rgb(209,214,38)"/><text x="349.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.21%)</title><rect x="346" y="324" width="3" height="15" fill="rgb(253,62,22)"/><text x="349.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3494) (1 samples, 0.21%)</title><rect x="346" y="340" width="3" height="15" fill="rgb(222,60,28)"/><text x="349.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.42%)</title><rect x="346" y="276" width="5" height="15" fill="rgb(236,90,46)"/><text x="349.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.42%)</title><rect x="346" y="292" width="5" height="15" fill="rgb(231,213,42)"/><text x="349.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.21%)</title><rect x="349" y="308" width="2" height="15" fill="rgb(213,8,9)"/><text x="352.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.21%)</title><rect x="349" y="324" width="2" height="15" fill="rgb(209,11,18)"/><text x="352.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.21%)</title><rect x="351" y="276" width="3" height="15" fill="rgb(243,123,15)"/><text x="354.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:235) (1 samples, 0.21%)</title><rect x="351" y="292" width="3" height="15" fill="rgb(254,63,27)"/><text x="354.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.21%)</title><rect x="354" y="276" width="2" height="15" fill="rgb(209,26,49)"/><text x="357.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.21%)</title><rect x="354" y="292" width="2" height="15" fill="rgb(217,169,5)"/><text x="357.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.21%)</title><rect x="354" y="308" width="2" height="15" fill="rgb(230,206,33)"/><text x="357.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.21%)</title><rect x="354" y="324" width="2" height="15" fill="rgb(212,110,29)"/><text x="357.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.21%)</title><rect x="356" y="292" width="3" height="15" fill="rgb(216,183,6)"/><text x="359.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.21%)</title><rect x="359" y="292" width="2" height="15" fill="rgb(215,57,15)"/><text x="362.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.21%)</title><rect x="361" y="292" width="3" height="15" fill="rgb(207,46,30)"/><text x="364.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.21%)</title><rect x="364" y="308" width="2" height="15" fill="rgb(234,100,14)"/><text x="367.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.21%)</title><rect x="366" y="308" width="2" height="15" fill="rgb(215,91,33)"/><text x="369.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 2.71%)</title><rect x="341" y="180" width="32" height="15" fill="rgb(226,197,54)"/><text x="344.00" y="190.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.71%)</title><rect x="341" y="196" width="32" height="15" fill="rgb(224,14,15)"/><text x="344.00" y="206.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 2.71%)</title><rect x="341" y="212" width="32" height="15" fill="rgb(239,139,15)"/><text x="344.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.29%)</title><rect x="346" y="228" width="27" height="15" fill="rgb(218,60,13)"/><text x="349.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 2.29%)</title><rect x="346" y="244" width="27" height="15" fill="rgb(207,39,43)"/><text x="349.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 2.29%)</title><rect x="346" y="260" width="27" height="15" fill="rgb(224,36,21)"/><text x="349.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 1.46%)</title><rect x="356" y="276" width="17" height="15" fill="rgb(230,5,48)"/><text x="359.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.83%)</title><rect x="364" y="292" width="9" height="15" fill="rgb(210,147,36)"/><text x="367.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.42%)</title><rect x="368" y="308" width="5" height="15" fill="rgb(226,75,25)"/><text x="371.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.42%)</title><rect x="368" y="324" width="5" height="15" fill="rgb(249,159,32)"/><text x="371.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.21%)</title><rect x="373" y="196" width="3" height="15" fill="rgb(215,188,43)"/><text x="376.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.21%)</title><rect x="373" y="212" width="3" height="15" fill="rgb(219,125,4)"/><text x="376.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.21%)</title><rect x="376" y="196" width="2" height="15" fill="rgb(216,146,26)"/><text x="379.00" y="206.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.21%)</title><rect x="376" y="212" width="2" height="15" fill="rgb(221,68,27)"/><text x="379.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.21%)</title><rect x="378" y="228" width="3" height="15" fill="rgb(218,22,37)"/><text x="381.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.21%)</title><rect x="378" y="244" width="3" height="15" fill="rgb(246,102,27)"/><text x="381.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.21%)</title><rect x="378" y="260" width="3" height="15" fill="rgb(236,55,40)"/><text x="381.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.21%)</title><rect x="378" y="276" width="3" height="15" fill="rgb(217,136,42)"/><text x="381.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.21%)</title><rect x="378" y="292" width="3" height="15" fill="rgb(243,67,34)"/><text x="381.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2457) (1 samples, 0.21%)</title><rect x="381" y="260" width="2" height="15" fill="rgb(224,156,0)"/><text x="384.00" y="270.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.21%)</title><rect x="383" y="292" width="3" height="15" fill="rgb(224,105,19)"/><text x="386.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.62%)</title><rect x="381" y="228" width="7" height="15" fill="rgb(209,6,10)"/><text x="384.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.62%)</title><rect x="381" y="244" width="7" height="15" fill="rgb(247,147,3)"/><text x="384.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.42%)</title><rect x="383" y="260" width="5" height="15" fill="rgb(241,109,14)"/><text x="386.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.42%)</title><rect x="383" y="276" width="5" height="15" fill="rgb(211,138,29)"/><text x="386.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.21%)</title><rect x="386" y="292" width="2" height="15" fill="rgb(216,184,35)"/><text x="389.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:38) (158 samples, 32.92%)</title><rect x="10" y="52" width="388" height="15" fill="rgb(226,198,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:37) (158 samples, 32.92%)</title><rect x="10" y="68" width="388" height="15" fill="rgb(214,211,47)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:29) (158 samples, 32.92%)</title><rect x="10" y="84" width="388" height="15" fill="rgb(225,191,53)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:23) (157 samples, 32.71%)</title><rect x="12" y="100" width="386" height="15" fill="rgb(245,219,30)"/><text x="15.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_sol..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (155 samples, 32.29%)</title><rect x="17" y="116" width="381" height="15" fill="rgb(233,51,37)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (155 samples, 32.29%)</title><rect x="17" y="132" width="381" height="15" fill="rgb(206,19,35)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (146 samples, 30.42%)</title><rect x="39" y="148" width="359" height="15" fill="rgb(237,164,6)"/><text x="42.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (29 samples, 6.04%)</title><rect x="327" y="164" width="71" height="15" fill="rgb(231,7,0)"/><text x="330.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 2.08%)</title><rect x="373" y="180" width="25" height="15" fill="rgb(216,165,40)"/><text x="376.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.67%)</title><rect x="378" y="196" width="20" height="15" fill="rgb(245,221,39)"/><text x="381.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.67%)</title><rect x="378" y="212" width="20" height="15" fill="rgb(224,177,50)"/><text x="381.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.83%)</title><rect x="388" y="228" width="10" height="15" fill="rgb(245,119,38)"/><text x="391.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.83%)</title><rect x="388" y="244" width="10" height="15" fill="rgb(235,7,23)"/><text x="391.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.83%)</title><rect x="388" y="260" width="10" height="15" fill="rgb(251,41,41)"/><text x="391.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.83%)</title><rect x="388" y="276" width="10" height="15" fill="rgb(243,47,23)"/><text x="391.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.83%)</title><rect x="388" y="292" width="10" height="15" fill="rgb(243,25,15)"/><text x="391.00" y="302.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.21%)</title><rect x="398" y="244" width="2" height="15" fill="rgb(241,190,0)"/><text x="401.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="398" y="260" width="2" height="15" fill="rgb(215,55,26)"/><text x="401.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="398" y="276" width="2" height="15" fill="rgb(230,115,54)"/><text x="401.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="398" y="292" width="2" height="15" fill="rgb(226,94,4)"/><text x="401.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="398" y="308" width="2" height="15" fill="rgb(252,181,49)"/><text x="401.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="398" y="324" width="2" height="15" fill="rgb(225,8,45)"/><text x="401.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="398" y="340" width="2" height="15" fill="rgb(225,61,52)"/><text x="401.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="398" y="356" width="2" height="15" fill="rgb(218,222,16)"/><text x="401.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:19) (1 samples, 0.21%)</title><rect x="398" y="372" width="2" height="15" fill="rgb(210,107,32)"/><text x="401.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="398" y="388" width="2" height="15" fill="rgb(224,10,37)"/><text x="401.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="398" y="404" width="2" height="15" fill="rgb(239,146,3)"/><text x="401.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="398" y="420" width="2" height="15" fill="rgb(225,149,49)"/><text x="401.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="398" y="436" width="2" height="15" fill="rgb(235,105,8)"/><text x="401.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.21%)</title><rect x="398" y="452" width="2" height="15" fill="rgb(205,30,33)"/><text x="401.00" y="462.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.21%)</title><rect x="398" y="468" width="2" height="15" fill="rgb(240,58,44)"/><text x="401.00" y="478.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.21%)</title><rect x="398" y="484" width="2" height="15" fill="rgb(218,163,35)"/><text x="401.00" y="494.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.21%)</title><rect x="398" y="500" width="2" height="15" fill="rgb(237,83,31)"/><text x="401.00" y="510.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.21%)</title><rect x="398" y="516" width="2" height="15" fill="rgb(227,144,8)"/><text x="401.00" y="526.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.21%)</title><rect x="398" y="532" width="2" height="15" fill="rgb(230,169,51)"/><text x="401.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:1) (2 samples, 0.42%)</title><rect x="398" y="148" width="5" height="15" fill="rgb(224,192,5)"/><text x="401.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="398" y="164" width="5" height="15" fill="rgb(247,152,4)"/><text x="401.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="398" y="180" width="5" height="15" fill="rgb(222,152,25)"/><text x="401.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="398" y="196" width="5" height="15" fill="rgb(244,5,53)"/><text x="401.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="398" y="212" width="5" height="15" fill="rgb(213,171,20)"/><text x="401.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="398" y="228" width="5" height="15" fill="rgb(220,77,48)"/><text x="401.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (1 samples, 0.21%)</title><rect x="400" y="244" width="3" height="15" fill="rgb(211,207,7)"/><text x="403.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="400" y="260" width="3" height="15" fill="rgb(221,9,50)"/><text x="403.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="400" y="276" width="3" height="15" fill="rgb(205,213,23)"/><text x="403.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="400" y="292" width="3" height="15" fill="rgb(219,212,52)"/><text x="403.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="400" y="308" width="3" height="15" fill="rgb(238,171,37)"/><text x="403.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="400" y="324" width="3" height="15" fill="rgb(205,3,35)"/><text x="403.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="400" y="340" width="3" height="15" fill="rgb(230,86,31)"/><text x="403.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="400" y="356" width="3" height="15" fill="rgb(212,117,51)"/><text x="403.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py:44) (1 samples, 0.21%)</title><rect x="400" y="372" width="3" height="15" fill="rgb(220,86,24)"/><text x="403.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="400" y="388" width="3" height="15" fill="rgb(215,220,14)"/><text x="403.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="400" y="404" width="3" height="15" fill="rgb(236,43,29)"/><text x="403.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="400" y="420" width="3" height="15" fill="rgb(217,152,8)"/><text x="403.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="400" y="436" width="3" height="15" fill="rgb(254,50,15)"/><text x="403.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="400" y="452" width="3" height="15" fill="rgb(215,84,34)"/><text x="403.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="400" y="468" width="3" height="15" fill="rgb(226,177,24)"/><text x="403.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.21%)</title><rect x="400" y="484" width="3" height="15" fill="rgb(226,83,36)"/><text x="403.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.21%)</title><rect x="400" y="500" width="3" height="15" fill="rgb(241,186,9)"/><text x="403.00" y="510.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.21%)</title><rect x="403" y="916" width="2" height="15" fill="rgb(238,163,38)"/><text x="406.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.21%)</title><rect x="403" y="932" width="2" height="15" fill="rgb(214,18,29)"/><text x="406.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.21%)</title><rect x="403" y="948" width="2" height="15" fill="rgb(233,217,36)"/><text x="406.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.21%)</title><rect x="403" y="964" width="2" height="15" fill="rgb(220,19,30)"/><text x="406.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:135) (1 samples, 0.21%)</title><rect x="403" y="980" width="2" height="15" fill="rgb(218,118,43)"/><text x="406.00" y="990.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.21%)</title><rect x="403" y="996" width="2" height="15" fill="rgb(245,121,31)"/><text x="406.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.42%)</title><rect x="403" y="852" width="5" height="15" fill="rgb(220,133,2)"/><text x="406.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.42%)</title><rect x="403" y="868" width="5" height="15" fill="rgb(208,185,34)"/><text x="406.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.42%)</title><rect x="403" y="884" width="5" height="15" fill="rgb(215,139,5)"/><text x="406.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.42%)</title><rect x="403" y="900" width="5" height="15" fill="rgb(223,181,45)"/><text x="406.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2064) (1 samples, 0.21%)</title><rect x="405" y="916" width="3" height="15" fill="rgb(232,40,13)"/><text x="408.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2133) (1 samples, 0.21%)</title><rect x="408" y="900" width="2" height="15" fill="rgb(236,23,1)"/><text x="411.00" y="910.50"></text></g><g><title>basename (posixpath.py:148) (1 samples, 0.21%)</title><rect x="408" y="916" width="2" height="15" fill="rgb(205,68,12)"/><text x="411.00" y="926.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.21%)</title><rect x="408" y="932" width="2" height="15" fill="rgb(247,181,11)"/><text x="411.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.83%)</title><rect x="403" y="820" width="10" height="15" fill="rgb(220,38,49)"/><text x="406.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.83%)</title><rect x="403" y="836" width="10" height="15" fill="rgb(249,58,7)"/><text x="406.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.42%)</title><rect x="408" y="852" width="5" height="15" fill="rgb(222,49,20)"/><text x="411.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.42%)</title><rect x="408" y="868" width="5" height="15" fill="rgb(238,33,35)"/><text x="411.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.42%)</title><rect x="408" y="884" width="5" height="15" fill="rgb(226,70,44)"/><text x="411.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.21%)</title><rect x="410" y="900" width="3" height="15" fill="rgb(247,171,44)"/><text x="413.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.21%)</title><rect x="410" y="916" width="3" height="15" fill="rgb(241,141,3)"/><text x="413.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.21%)</title><rect x="410" y="932" width="3" height="15" fill="rgb(207,135,50)"/><text x="413.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.21%)</title><rect x="410" y="948" width="3" height="15" fill="rgb(227,151,31)"/><text x="413.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:210) (1 samples, 0.21%)</title><rect x="410" y="964" width="3" height="15" fill="rgb(218,115,33)"/><text x="413.00" y="974.50"></text></g><g><title>_parse_letter_version (pkg_resources/_vendor/packaging/version.py:326) (1 samples, 0.21%)</title><rect x="410" y="980" width="3" height="15" fill="rgb(253,120,49)"/><text x="413.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (5 samples, 1.04%)</title><rect x="403" y="148" width="12" height="15" fill="rgb(227,74,41)"/><text x="406.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="164" width="12" height="15" fill="rgb(224,189,42)"/><text x="406.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.04%)</title><rect x="403" y="180" width="12" height="15" fill="rgb(206,106,9)"/><text x="406.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="196" width="12" height="15" fill="rgb(209,110,44)"/><text x="406.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="212" width="12" height="15" fill="rgb(229,105,35)"/><text x="406.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="403" y="228" width="12" height="15" fill="rgb(239,130,44)"/><text x="406.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="403" y="244" width="12" height="15" fill="rgb(217,217,18)"/><text x="406.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="403" y="260" width="12" height="15" fill="rgb(212,215,49)"/><text x="406.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="276" width="12" height="15" fill="rgb(223,176,25)"/><text x="406.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.04%)</title><rect x="403" y="292" width="12" height="15" fill="rgb(215,49,19)"/><text x="406.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="308" width="12" height="15" fill="rgb(243,85,48)"/><text x="406.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="403" y="324" width="12" height="15" fill="rgb(233,21,36)"/><text x="406.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="403" y="340" width="12" height="15" fill="rgb(237,205,36)"/><text x="406.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="403" y="356" width="12" height="15" fill="rgb(243,206,44)"/><text x="406.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="372" width="12" height="15" fill="rgb(209,217,15)"/><text x="406.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.04%)</title><rect x="403" y="388" width="12" height="15" fill="rgb(205,75,53)"/><text x="406.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="404" width="12" height="15" fill="rgb(218,66,37)"/><text x="406.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="403" y="420" width="12" height="15" fill="rgb(234,123,36)"/><text x="406.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="403" y="436" width="12" height="15" fill="rgb(242,223,4)"/><text x="406.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="403" y="452" width="12" height="15" fill="rgb(252,161,43)"/><text x="406.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="468" width="12" height="15" fill="rgb(229,91,9)"/><text x="406.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.04%)</title><rect x="403" y="484" width="12" height="15" fill="rgb(206,192,38)"/><text x="406.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="500" width="12" height="15" fill="rgb(216,195,28)"/><text x="406.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="403" y="516" width="12" height="15" fill="rgb(237,73,38)"/><text x="406.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="403" y="532" width="12" height="15" fill="rgb(224,145,3)"/><text x="406.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="403" y="548" width="12" height="15" fill="rgb(214,194,50)"/><text x="406.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="564" width="12" height="15" fill="rgb(247,225,5)"/><text x="406.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.04%)</title><rect x="403" y="580" width="12" height="15" fill="rgb(243,92,12)"/><text x="406.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="596" width="12" height="15" fill="rgb(214,35,9)"/><text x="406.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.04%)</title><rect x="403" y="612" width="12" height="15" fill="rgb(206,48,29)"/><text x="406.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="628" width="12" height="15" fill="rgb(209,211,20)"/><text x="406.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="644" width="12" height="15" fill="rgb(209,215,26)"/><text x="406.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="403" y="660" width="12" height="15" fill="rgb(219,92,8)"/><text x="406.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="403" y="676" width="12" height="15" fill="rgb(253,178,24)"/><text x="406.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="403" y="692" width="12" height="15" fill="rgb(250,122,20)"/><text x="406.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="708" width="12" height="15" fill="rgb(254,185,32)"/><text x="406.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.04%)</title><rect x="403" y="724" width="12" height="15" fill="rgb(207,21,40)"/><text x="406.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="403" y="740" width="12" height="15" fill="rgb(230,173,4)"/><text x="406.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="403" y="756" width="12" height="15" fill="rgb(249,176,28)"/><text x="406.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="403" y="772" width="12" height="15" fill="rgb(226,70,30)"/><text x="406.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="403" y="788" width="12" height="15" fill="rgb(248,198,40)"/><text x="406.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="403" y="804" width="12" height="15" fill="rgb(235,174,14)"/><text x="406.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.21%)</title><rect x="413" y="820" width="2" height="15" fill="rgb(235,14,26)"/><text x="416.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="413" y="836" width="2" height="15" fill="rgb(253,176,44)"/><text x="416.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="413" y="852" width="2" height="15" fill="rgb(216,69,49)"/><text x="416.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="413" y="868" width="2" height="15" fill="rgb(232,164,10)"/><text x="416.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="413" y="884" width="2" height="15" fill="rgb(233,31,9)"/><text x="416.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="413" y="900" width="2" height="15" fill="rgb(251,87,28)"/><text x="416.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.21%)</title><rect x="413" y="916" width="2" height="15" fill="rgb(219,154,18)"/><text x="416.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.21%)</title><rect x="413" y="932" width="2" height="15" fill="rgb(209,222,13)"/><text x="416.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.21%)</title><rect x="413" y="948" width="2" height="15" fill="rgb(237,58,38)"/><text x="416.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.21%)</title><rect x="413" y="964" width="2" height="15" fill="rgb(237,101,53)"/><text x="416.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.21%)</title><rect x="413" y="980" width="2" height="15" fill="rgb(248,26,19)"/><text x="416.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.21%)</title><rect x="413" y="996" width="2" height="15" fill="rgb(245,229,11)"/><text x="416.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.21%)</title><rect x="413" y="1012" width="2" height="15" fill="rgb(246,4,36)"/><text x="416.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.21%)</title><rect x="413" y="1028" width="2" height="15" fill="rgb(241,57,36)"/><text x="416.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.21%)</title><rect x="413" y="1044" width="2" height="15" fill="rgb(229,186,32)"/><text x="416.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.21%)</title><rect x="413" y="1060" width="2" height="15" fill="rgb(245,33,37)"/><text x="416.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.21%)</title><rect x="413" y="1076" width="2" height="15" fill="rgb(220,173,6)"/><text x="416.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:501) (1 samples, 0.21%)</title><rect x="413" y="1092" width="2" height="15" fill="rgb(238,18,21)"/><text x="416.00" y="1102.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.21%)</title><rect x="413" y="1108" width="2" height="15" fill="rgb(206,217,16)"/><text x="416.00" y="1118.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.21%)</title><rect x="413" y="1124" width="2" height="15" fill="rgb(239,61,54)"/><text x="416.00" y="1134.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.21%)</title><rect x="413" y="1140" width="2" height="15" fill="rgb(240,143,54)"/><text x="416.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.21%)</title><rect x="415" y="676" width="3" height="15" fill="rgb(208,73,19)"/><text x="418.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="415" y="692" width="3" height="15" fill="rgb(212,147,27)"/><text x="418.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="415" y="708" width="3" height="15" fill="rgb(241,78,48)"/><text x="418.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="415" y="724" width="3" height="15" fill="rgb(214,103,10)"/><text x="418.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="415" y="740" width="3" height="15" fill="rgb(223,83,36)"/><text x="418.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="415" y="756" width="3" height="15" fill="rgb(217,49,5)"/><text x="418.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.21%)</title><rect x="415" y="772" width="3" height="15" fill="rgb(208,74,46)"/><text x="418.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="415" y="788" width="3" height="15" fill="rgb(216,182,53)"/><text x="418.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="415" y="804" width="3" height="15" fill="rgb(252,155,54)"/><text x="418.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="415" y="820" width="3" height="15" fill="rgb(236,150,43)"/><text x="418.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="415" y="836" width="3" height="15" fill="rgb(242,154,10)"/><text x="418.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="415" y="852" width="3" height="15" fill="rgb(226,133,34)"/><text x="418.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="415" y="868" width="3" height="15" fill="rgb(209,163,12)"/><text x="418.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="415" y="884" width="3" height="15" fill="rgb(239,54,30)"/><text x="418.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.21%)</title><rect x="415" y="900" width="3" height="15" fill="rgb(234,127,23)"/><text x="418.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="415" y="916" width="3" height="15" fill="rgb(239,171,11)"/><text x="418.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="415" y="932" width="3" height="15" fill="rgb(218,218,8)"/><text x="418.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="415" y="948" width="3" height="15" fill="rgb(209,113,1)"/><text x="418.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="415" y="964" width="3" height="15" fill="rgb(214,150,2)"/><text x="418.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="415" y="980" width="3" height="15" fill="rgb(250,110,23)"/><text x="418.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="415" y="996" width="3" height="15" fill="rgb(206,17,49)"/><text x="418.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="415" y="1012" width="3" height="15" fill="rgb(254,81,16)"/><text x="418.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1790) (1 samples, 0.21%)</title><rect x="415" y="1028" width="3" height="15" fill="rgb(243,139,54)"/><text x="418.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.21%)</title><rect x="415" y="1044" width="3" height="15" fill="rgb(251,54,36)"/><text x="418.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.21%)</title><rect x="415" y="1060" width="3" height="15" fill="rgb(219,170,39)"/><text x="418.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:65) (1 samples, 0.21%)</title><rect x="415" y="1076" width="3" height="15" fill="rgb(248,16,11)"/><text x="418.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (2 samples, 0.42%)</title><rect x="415" y="148" width="5" height="15" fill="rgb(206,210,43)"/><text x="418.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="415" y="164" width="5" height="15" fill="rgb(209,168,23)"/><text x="418.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="415" y="180" width="5" height="15" fill="rgb(249,156,45)"/><text x="418.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="415" y="196" width="5" height="15" fill="rgb(214,162,43)"/><text x="418.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="415" y="212" width="5" height="15" fill="rgb(249,167,50)"/><text x="418.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="415" y="228" width="5" height="15" fill="rgb(224,153,9)"/><text x="418.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="415" y="244" width="5" height="15" fill="rgb(238,217,37)"/><text x="418.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="415" y="260" width="5" height="15" fill="rgb(248,146,54)"/><text x="418.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="415" y="276" width="5" height="15" fill="rgb(228,22,38)"/><text x="418.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.42%)</title><rect x="415" y="292" width="5" height="15" fill="rgb(233,36,33)"/><text x="418.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="415" y="308" width="5" height="15" fill="rgb(223,171,22)"/><text x="418.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="415" y="324" width="5" height="15" fill="rgb(211,68,1)"/><text x="418.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="415" y="340" width="5" height="15" fill="rgb(250,16,15)"/><text x="418.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="415" y="356" width="5" height="15" fill="rgb(220,25,31)"/><text x="418.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="415" y="372" width="5" height="15" fill="rgb(228,84,27)"/><text x="418.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.42%)</title><rect x="415" y="388" width="5" height="15" fill="rgb(223,147,11)"/><text x="418.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="415" y="404" width="5" height="15" fill="rgb(209,133,5)"/><text x="418.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="415" y="420" width="5" height="15" fill="rgb(225,188,2)"/><text x="418.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="415" y="436" width="5" height="15" fill="rgb(224,11,51)"/><text x="418.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="415" y="452" width="5" height="15" fill="rgb(205,215,19)"/><text x="418.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="415" y="468" width="5" height="15" fill="rgb(220,187,0)"/><text x="418.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.42%)</title><rect x="415" y="484" width="5" height="15" fill="rgb(207,24,36)"/><text x="418.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="415" y="500" width="5" height="15" fill="rgb(208,49,3)"/><text x="418.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="415" y="516" width="5" height="15" fill="rgb(244,46,38)"/><text x="418.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="415" y="532" width="5" height="15" fill="rgb(216,15,0)"/><text x="418.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="415" y="548" width="5" height="15" fill="rgb(242,218,50)"/><text x="418.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="415" y="564" width="5" height="15" fill="rgb(226,202,22)"/><text x="418.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.42%)</title><rect x="415" y="580" width="5" height="15" fill="rgb(230,200,25)"/><text x="418.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="415" y="596" width="5" height="15" fill="rgb(233,82,41)"/><text x="418.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="415" y="612" width="5" height="15" fill="rgb(230,33,10)"/><text x="418.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="415" y="628" width="5" height="15" fill="rgb(209,17,46)"/><text x="418.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="415" y="644" width="5" height="15" fill="rgb(223,181,45)"/><text x="418.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="415" y="660" width="5" height="15" fill="rgb(210,93,22)"/><text x="418.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:381) (1 samples, 0.21%)</title><rect x="418" y="676" width="2" height="15" fill="rgb(226,206,45)"/><text x="421.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="418" y="692" width="2" height="15" fill="rgb(245,95,22)"/><text x="421.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="418" y="708" width="2" height="15" fill="rgb(225,107,44)"/><text x="421.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="418" y="724" width="2" height="15" fill="rgb(244,110,45)"/><text x="421.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="418" y="740" width="2" height="15" fill="rgb(225,99,28)"/><text x="421.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="418" y="756" width="2" height="15" fill="rgb(249,194,42)"/><text x="421.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/morestats.py:36) (1 samples, 0.21%)</title><rect x="418" y="772" width="2" height="15" fill="rgb(225,188,1)"/><text x="421.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.21%)</title><rect x="418" y="788" width="2" height="15" fill="rgb(228,153,34)"/><text x="421.00" y="798.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.42%)</title><rect x="420" y="484" width="5" height="15" fill="rgb(240,116,12)"/><text x="423.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="500" width="5" height="15" fill="rgb(223,86,42)"/><text x="423.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="516" width="5" height="15" fill="rgb(208,56,21)"/><text x="423.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="532" width="5" height="15" fill="rgb(206,61,27)"/><text x="423.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="548" width="5" height="15" fill="rgb(223,202,12)"/><text x="423.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="564" width="5" height="15" fill="rgb(223,65,34)"/><text x="423.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.42%)</title><rect x="420" y="580" width="5" height="15" fill="rgb(234,43,45)"/><text x="423.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="596" width="5" height="15" fill="rgb(224,146,52)"/><text x="423.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="612" width="5" height="15" fill="rgb(247,156,38)"/><text x="423.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="628" width="5" height="15" fill="rgb(243,183,31)"/><text x="423.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="644" width="5" height="15" fill="rgb(208,229,29)"/><text x="423.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="660" width="5" height="15" fill="rgb(221,112,27)"/><text x="423.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.42%)</title><rect x="420" y="676" width="5" height="15" fill="rgb(211,229,36)"/><text x="423.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="692" width="5" height="15" fill="rgb(228,134,36)"/><text x="423.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="708" width="5" height="15" fill="rgb(214,50,31)"/><text x="423.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="724" width="5" height="15" fill="rgb(254,109,41)"/><text x="423.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="740" width="5" height="15" fill="rgb(227,86,11)"/><text x="423.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="756" width="5" height="15" fill="rgb(233,35,28)"/><text x="423.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 0.42%)</title><rect x="420" y="772" width="5" height="15" fill="rgb(205,117,29)"/><text x="423.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.42%)</title><rect x="420" y="788" width="5" height="15" fill="rgb(219,125,18)"/><text x="423.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="804" width="5" height="15" fill="rgb(239,48,39)"/><text x="423.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="820" width="5" height="15" fill="rgb(245,34,43)"/><text x="423.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="836" width="5" height="15" fill="rgb(233,208,9)"/><text x="423.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="852" width="5" height="15" fill="rgb(245,125,52)"/><text x="423.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="868" width="5" height="15" fill="rgb(220,64,8)"/><text x="423.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="884" width="5" height="15" fill="rgb(211,147,17)"/><text x="423.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (2 samples, 0.42%)</title><rect x="420" y="900" width="5" height="15" fill="rgb(247,51,12)"/><text x="423.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="916" width="5" height="15" fill="rgb(250,80,29)"/><text x="423.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="420" y="932" width="5" height="15" fill="rgb(207,134,40)"/><text x="423.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="948" width="5" height="15" fill="rgb(239,115,11)"/><text x="423.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="964" width="5" height="15" fill="rgb(213,201,25)"/><text x="423.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="980" width="5" height="15" fill="rgb(236,125,27)"/><text x="423.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="996" width="5" height="15" fill="rgb(229,218,48)"/><text x="423.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="1012" width="5" height="15" fill="rgb(211,181,20)"/><text x="423.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="1028" width="5" height="15" fill="rgb(245,23,41)"/><text x="423.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (2 samples, 0.42%)</title><rect x="420" y="1044" width="5" height="15" fill="rgb(212,45,11)"/><text x="423.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.42%)</title><rect x="420" y="1060" width="5" height="15" fill="rgb(242,121,3)"/><text x="423.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="1076" width="5" height="15" fill="rgb(223,179,2)"/><text x="423.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="1092" width="5" height="15" fill="rgb(219,80,36)"/><text x="423.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="1108" width="5" height="15" fill="rgb(212,211,26)"/><text x="423.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="1124" width="5" height="15" fill="rgb(213,155,8)"/><text x="423.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="1140" width="5" height="15" fill="rgb(239,166,4)"/><text x="423.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="1156" width="5" height="15" fill="rgb(239,145,26)"/><text x="423.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:15) (2 samples, 0.42%)</title><rect x="420" y="1172" width="5" height="15" fill="rgb(206,22,33)"/><text x="423.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="1188" width="5" height="15" fill="rgb(239,11,33)"/><text x="423.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="1204" width="5" height="15" fill="rgb(247,195,54)"/><text x="423.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="1220" width="5" height="15" fill="rgb(241,56,37)"/><text x="423.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="1236" width="5" height="15" fill="rgb(226,229,41)"/><text x="423.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="1252" width="5" height="15" fill="rgb(248,221,21)"/><text x="423.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py:6) (2 samples, 0.42%)</title><rect x="420" y="1268" width="5" height="15" fill="rgb(229,195,16)"/><text x="423.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="420" y="1284" width="5" height="15" fill="rgb(240,222,22)"/><text x="423.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="420" y="1300" width="5" height="15" fill="rgb(211,80,35)"/><text x="423.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="420" y="1316" width="5" height="15" fill="rgb(253,61,8)"/><text x="423.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="420" y="1332" width="5" height="15" fill="rgb(237,118,44)"/><text x="423.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="420" y="1348" width="5" height="15" fill="rgb(233,143,37)"/><text x="423.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py:195) (2 samples, 0.42%)</title><rect x="420" y="1364" width="5" height="15" fill="rgb(243,138,24)"/><text x="423.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py:139) (2 samples, 0.42%)</title><rect x="420" y="1380" width="5" height="15" fill="rgb(254,209,43)"/><text x="423.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py:126) (2 samples, 0.42%)</title><rect x="420" y="1396" width="5" height="15" fill="rgb(225,58,9)"/><text x="423.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py:92) (2 samples, 0.42%)</title><rect x="420" y="1412" width="5" height="15" fill="rgb(247,64,17)"/><text x="423.00" y="1422.50"></text></g><g><title>0x7f9242855ebd (?) (1 samples, 0.21%)</title><rect x="423" y="1428" width="2" height="15" fill="rgb(238,25,36)"/><text x="426.00" y="1438.50"></text></g><g><title>0x7f9242855c48 (?) (1 samples, 0.21%)</title><rect x="423" y="1444" width="2" height="15" fill="rgb(241,25,43)"/><text x="426.00" y="1454.50"></text></g><g><title>0x7f9242855129 (?) (1 samples, 0.21%)</title><rect x="423" y="1460" width="2" height="15" fill="rgb(224,115,7)"/><text x="426.00" y="1470.50"></text></g><g><title>0x7f9242850def (?) (1 samples, 0.21%)</title><rect x="423" y="1476" width="2" height="15" fill="rgb(238,32,9)"/><text x="426.00" y="1486.50"></text></g><g><title>0x7f92428512e7 (?) (1 samples, 0.21%)</title><rect x="423" y="1492" width="2" height="15" fill="rgb(224,138,2)"/><text x="426.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.21%)</title><rect x="425" y="580" width="2" height="15" fill="rgb(211,9,9)"/><text x="428.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="425" y="596" width="2" height="15" fill="rgb(238,210,0)"/><text x="428.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="425" y="612" width="2" height="15" fill="rgb(234,19,44)"/><text x="428.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="425" y="628" width="2" height="15" fill="rgb(216,14,16)"/><text x="428.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="425" y="644" width="2" height="15" fill="rgb(209,139,40)"/><text x="428.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="425" y="660" width="2" height="15" fill="rgb(221,116,24)"/><text x="428.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:80) (1 samples, 0.21%)</title><rect x="425" y="676" width="2" height="15" fill="rgb(236,34,32)"/><text x="428.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.21%)</title><rect x="425" y="692" width="2" height="15" fill="rgb(228,77,21)"/><text x="428.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 0.83%)</title><rect x="420" y="244" width="10" height="15" fill="rgb(238,143,24)"/><text x="423.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.83%)</title><rect x="420" y="260" width="10" height="15" fill="rgb(216,102,47)"/><text x="423.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.83%)</title><rect x="420" y="276" width="10" height="15" fill="rgb(217,97,23)"/><text x="423.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.83%)</title><rect x="420" y="292" width="10" height="15" fill="rgb(228,90,4)"/><text x="423.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.83%)</title><rect x="420" y="308" width="10" height="15" fill="rgb(213,183,0)"/><text x="423.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.83%)</title><rect x="420" y="324" width="10" height="15" fill="rgb(218,49,7)"/><text x="423.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 0.83%)</title><rect x="420" y="340" width="10" height="15" fill="rgb(247,195,34)"/><text x="423.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.83%)</title><rect x="420" y="356" width="10" height="15" fill="rgb(247,205,17)"/><text x="423.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.83%)</title><rect x="420" y="372" width="10" height="15" fill="rgb(212,100,45)"/><text x="423.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.83%)</title><rect x="420" y="388" width="10" height="15" fill="rgb(207,147,42)"/><text x="423.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.83%)</title><rect x="420" y="404" width="10" height="15" fill="rgb(233,16,18)"/><text x="423.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.83%)</title><rect x="420" y="420" width="10" height="15" fill="rgb(239,21,34)"/><text x="423.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.83%)</title><rect x="420" y="436" width="10" height="15" fill="rgb(249,94,6)"/><text x="423.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.83%)</title><rect x="420" y="452" width="10" height="15" fill="rgb(231,132,40)"/><text x="423.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.83%)</title><rect x="420" y="468" width="10" height="15" fill="rgb(210,89,25)"/><text x="423.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.42%)</title><rect x="425" y="484" width="5" height="15" fill="rgb(234,26,21)"/><text x="428.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="425" y="500" width="5" height="15" fill="rgb(223,166,9)"/><text x="428.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="425" y="516" width="5" height="15" fill="rgb(234,211,20)"/><text x="428.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="425" y="532" width="5" height="15" fill="rgb(233,209,27)"/><text x="428.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="425" y="548" width="5" height="15" fill="rgb(225,140,6)"/><text x="428.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="425" y="564" width="5" height="15" fill="rgb(228,31,26)"/><text x="428.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.21%)</title><rect x="427" y="580" width="3" height="15" fill="rgb(210,76,4)"/><text x="430.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="596" width="3" height="15" fill="rgb(242,57,47)"/><text x="430.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="427" y="612" width="3" height="15" fill="rgb(251,164,46)"/><text x="430.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="427" y="628" width="3" height="15" fill="rgb(205,179,17)"/><text x="430.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="644" width="3" height="15" fill="rgb(221,223,22)"/><text x="430.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="427" y="660" width="3" height="15" fill="rgb(215,107,47)"/><text x="430.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="427" y="676" width="3" height="15" fill="rgb(208,90,0)"/><text x="430.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="427" y="692" width="3" height="15" fill="rgb(206,180,36)"/><text x="430.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="427" y="708" width="3" height="15" fill="rgb(252,137,34)"/><text x="430.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.21%)</title><rect x="427" y="724" width="3" height="15" fill="rgb(215,4,36)"/><text x="430.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="740" width="3" height="15" fill="rgb(217,89,24)"/><text x="430.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="427" y="756" width="3" height="15" fill="rgb(217,133,0)"/><text x="430.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="427" y="772" width="3" height="15" fill="rgb(245,9,51)"/><text x="430.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="427" y="788" width="3" height="15" fill="rgb(239,117,48)"/><text x="430.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="427" y="804" width="3" height="15" fill="rgb(248,13,19)"/><text x="430.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.21%)</title><rect x="427" y="820" width="3" height="15" fill="rgb(251,0,14)"/><text x="430.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="836" width="3" height="15" fill="rgb(238,223,42)"/><text x="430.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="427" y="852" width="3" height="15" fill="rgb(236,114,5)"/><text x="430.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="427" y="868" width="3" height="15" fill="rgb(226,153,46)"/><text x="430.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="427" y="884" width="3" height="15" fill="rgb(242,91,4)"/><text x="430.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="427" y="900" width="3" height="15" fill="rgb(207,4,37)"/><text x="430.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.21%)</title><rect x="427" y="916" width="3" height="15" fill="rgb(226,202,28)"/><text x="430.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="932" width="3" height="15" fill="rgb(218,196,29)"/><text x="430.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="427" y="948" width="3" height="15" fill="rgb(205,33,38)"/><text x="430.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="427" y="964" width="3" height="15" fill="rgb(222,38,7)"/><text x="430.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="980" width="3" height="15" fill="rgb(233,135,7)"/><text x="430.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="427" y="996" width="3" height="15" fill="rgb(231,199,18)"/><text x="430.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="427" y="1012" width="3" height="15" fill="rgb(210,99,17)"/><text x="430.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="427" y="1028" width="3" height="15" fill="rgb(219,210,38)"/><text x="430.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="427" y="1044" width="3" height="15" fill="rgb(230,129,51)"/><text x="430.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.21%)</title><rect x="427" y="1060" width="3" height="15" fill="rgb(219,18,41)"/><text x="430.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="427" y="1076" width="3" height="15" fill="rgb(212,41,4)"/><text x="430.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="427" y="1092" width="3" height="15" fill="rgb(208,39,22)"/><text x="430.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="427" y="1108" width="3" height="15" fill="rgb(232,169,13)"/><text x="430.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="427" y="1124" width="3" height="15" fill="rgb(244,169,44)"/><text x="430.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.21%)</title><rect x="427" y="1140" width="3" height="15" fill="rgb(221,56,31)"/><text x="430.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.21%)</title><rect x="427" y="1156" width="3" height="15" fill="rgb(233,179,5)"/><text x="430.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:127) (1 samples, 0.21%)</title><rect x="430" y="628" width="2" height="15" fill="rgb(243,53,48)"/><text x="433.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="430" y="644" width="2" height="15" fill="rgb(251,52,54)"/><text x="433.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="430" y="660" width="2" height="15" fill="rgb(217,6,46)"/><text x="433.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="430" y="676" width="2" height="15" fill="rgb(230,52,51)"/><text x="433.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="430" y="692" width="2" height="15" fill="rgb(211,74,38)"/><text x="433.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="430" y="708" width="2" height="15" fill="rgb(249,219,29)"/><text x="433.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/api.py:3) (1 samples, 0.21%)</title><rect x="430" y="724" width="2" height="15" fill="rgb(228,218,33)"/><text x="433.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="430" y="740" width="2" height="15" fill="rgb(235,14,5)"/><text x="433.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="430" y="756" width="2" height="15" fill="rgb(242,87,10)"/><text x="433.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="430" y="772" width="2" height="15" fill="rgb(247,222,42)"/><text x="433.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="430" y="788" width="2" height="15" fill="rgb(227,9,16)"/><text x="433.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="430" y="804" width="2" height="15" fill="rgb(219,217,38)"/><text x="433.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/eval.py:12) (1 samples, 0.21%)</title><rect x="430" y="820" width="2" height="15" fill="rgb(231,97,48)"/><text x="433.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="430" y="836" width="2" height="15" fill="rgb(220,208,46)"/><text x="433.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="430" y="852" width="2" height="15" fill="rgb(249,0,7)"/><text x="433.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="430" y="868" width="2" height="15" fill="rgb(205,113,38)"/><text x="433.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="430" y="884" width="2" height="15" fill="rgb(219,151,39)"/><text x="433.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="430" y="900" width="2" height="15" fill="rgb(246,10,5)"/><text x="433.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/engines.py:7) (1 samples, 0.21%)</title><rect x="430" y="916" width="2" height="15" fill="rgb(215,108,35)"/><text x="433.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="430" y="932" width="2" height="15" fill="rgb(247,154,19)"/><text x="433.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="430" y="948" width="2" height="15" fill="rgb(212,15,35)"/><text x="433.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="430" y="964" width="2" height="15" fill="rgb(248,172,28)"/><text x="433.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="430" y="980" width="2" height="15" fill="rgb(210,106,2)"/><text x="433.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="430" y="996" width="2" height="15" fill="rgb(209,37,25)"/><text x="433.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/computation/align.py:13) (1 samples, 0.21%)</title><rect x="430" y="1012" width="2" height="15" fill="rgb(231,79,9)"/><text x="433.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="430" y="1028" width="2" height="15" fill="rgb(241,76,44)"/><text x="433.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.21%)</title><rect x="430" y="1044" width="2" height="15" fill="rgb(252,107,34)"/><text x="433.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.21%)</title><rect x="430" y="1060" width="2" height="15" fill="rgb(221,73,10)"/><text x="433.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.21%)</title><rect x="430" y="1076" width="2" height="15" fill="rgb(228,42,19)"/><text x="433.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.42%)</title><rect x="430" y="532" width="5" height="15" fill="rgb(226,111,28)"/><text x="433.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="430" y="548" width="5" height="15" fill="rgb(211,52,47)"/><text x="433.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="430" y="564" width="5" height="15" fill="rgb(248,32,22)"/><text x="433.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="430" y="580" width="5" height="15" fill="rgb(233,152,53)"/><text x="433.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="430" y="596" width="5" height="15" fill="rgb(238,14,20)"/><text x="433.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="430" y="612" width="5" height="15" fill="rgb(224,62,29)"/><text x="433.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.21%)</title><rect x="432" y="628" width="3" height="15" fill="rgb(237,202,9)"/><text x="435.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="432" y="644" width="3" height="15" fill="rgb(240,174,36)"/><text x="435.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="432" y="660" width="3" height="15" fill="rgb(208,26,9)"/><text x="435.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="432" y="676" width="3" height="15" fill="rgb(236,190,2)"/><text x="435.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="432" y="692" width="3" height="15" fill="rgb(210,189,31)"/><text x="435.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="708" width="3" height="15" fill="rgb(217,31,43)"/><text x="435.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.21%)</title><rect x="432" y="724" width="3" height="15" fill="rgb(217,32,3)"/><text x="435.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="432" y="740" width="3" height="15" fill="rgb(248,228,27)"/><text x="435.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="432" y="756" width="3" height="15" fill="rgb(231,84,50)"/><text x="435.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="432" y="772" width="3" height="15" fill="rgb(238,121,19)"/><text x="435.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="432" y="788" width="3" height="15" fill="rgb(239,11,29)"/><text x="435.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="804" width="3" height="15" fill="rgb(218,15,31)"/><text x="435.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:5) (1 samples, 0.21%)</title><rect x="432" y="820" width="3" height="15" fill="rgb(235,121,44)"/><text x="435.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.21%)</title><rect x="432" y="836" width="3" height="15" fill="rgb(218,63,15)"/><text x="435.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.62%)</title><rect x="430" y="436" width="7" height="15" fill="rgb(246,59,26)"/><text x="433.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.62%)</title><rect x="430" y="452" width="7" height="15" fill="rgb(251,38,7)"/><text x="433.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.62%)</title><rect x="430" y="468" width="7" height="15" fill="rgb(246,186,48)"/><text x="433.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.62%)</title><rect x="430" y="484" width="7" height="15" fill="rgb(250,132,49)"/><text x="433.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.62%)</title><rect x="430" y="500" width="7" height="15" fill="rgb(217,205,36)"/><text x="433.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.62%)</title><rect x="430" y="516" width="7" height="15" fill="rgb(227,159,54)"/><text x="433.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.21%)</title><rect x="435" y="532" width="2" height="15" fill="rgb(231,222,3)"/><text x="438.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="435" y="548" width="2" height="15" fill="rgb(233,177,42)"/><text x="438.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="435" y="564" width="2" height="15" fill="rgb(205,201,29)"/><text x="438.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="435" y="580" width="2" height="15" fill="rgb(248,203,54)"/><text x="438.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="435" y="596" width="2" height="15" fill="rgb(243,210,9)"/><text x="438.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="435" y="612" width="2" height="15" fill="rgb(252,105,32)"/><text x="438.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.21%)</title><rect x="435" y="628" width="2" height="15" fill="rgb(241,100,36)"/><text x="438.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="435" y="644" width="2" height="15" fill="rgb(252,1,35)"/><text x="438.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="435" y="660" width="2" height="15" fill="rgb(211,107,27)"/><text x="438.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="435" y="676" width="2" height="15" fill="rgb(254,25,8)"/><text x="438.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="435" y="692" width="2" height="15" fill="rgb(251,153,29)"/><text x="438.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="435" y="708" width="2" height="15" fill="rgb(245,163,25)"/><text x="438.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="435" y="724" width="2" height="15" fill="rgb(231,205,28)"/><text x="438.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="435" y="740" width="2" height="15" fill="rgb(209,157,49)"/><text x="438.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.21%)</title><rect x="435" y="756" width="2" height="15" fill="rgb(254,205,46)"/><text x="438.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.21%)</title><rect x="435" y="772" width="2" height="15" fill="rgb(252,121,38)"/><text x="438.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.21%)</title><rect x="435" y="788" width="2" height="15" fill="rgb(222,126,43)"/><text x="438.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.21%)</title><rect x="435" y="804" width="2" height="15" fill="rgb(224,11,35)"/><text x="438.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.21%)</title><rect x="435" y="820" width="2" height="15" fill="rgb(232,47,11)"/><text x="438.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.21%)</title><rect x="435" y="836" width="2" height="15" fill="rgb(209,136,52)"/><text x="438.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.21%)</title><rect x="435" y="852" width="2" height="15" fill="rgb(238,154,31)"/><text x="438.00" y="862.50"></text></g><g><title>0x7f926b8fe372 (?) (1 samples, 0.21%)</title><rect x="435" y="868" width="2" height="15" fill="rgb(206,95,2)"/><text x="438.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.21%)</title><rect x="435" y="884" width="2" height="15" fill="rgb(229,217,19)"/><text x="438.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="437" y="644" width="3" height="15" fill="rgb(214,3,20)"/><text x="440.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.21%)</title><rect x="437" y="660" width="3" height="15" fill="rgb(234,37,44)"/><text x="440.00" y="670.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.21%)</title><rect x="437" y="676" width="3" height="15" fill="rgb(214,180,30)"/><text x="440.00" y="686.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="437" y="692" width="3" height="15" fill="rgb(241,27,18)"/><text x="440.00" y="702.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:4) (18 samples, 3.75%)</title><rect x="398" y="52" width="44" height="15" fill="rgb(225,80,30)"/><text x="401.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 3.75%)</title><rect x="398" y="68" width="44" height="15" fill="rgb(218,168,30)"/><text x="401.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 3.75%)</title><rect x="398" y="84" width="44" height="15" fill="rgb(225,8,26)"/><text x="401.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 3.75%)</title><rect x="398" y="100" width="44" height="15" fill="rgb(220,185,39)"/><text x="401.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 3.75%)</title><rect x="398" y="116" width="44" height="15" fill="rgb(246,65,20)"/><text x="401.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 3.75%)</title><rect x="398" y="132" width="44" height="15" fill="rgb(241,87,7)"/><text x="401.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (9 samples, 1.88%)</title><rect x="420" y="148" width="22" height="15" fill="rgb(248,204,0)"/><text x="423.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.88%)</title><rect x="420" y="164" width="22" height="15" fill="rgb(248,208,37)"/><text x="423.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.88%)</title><rect x="420" y="180" width="22" height="15" fill="rgb(225,148,34)"/><text x="423.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.88%)</title><rect x="420" y="196" width="22" height="15" fill="rgb(220,105,17)"/><text x="423.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.88%)</title><rect x="420" y="212" width="22" height="15" fill="rgb(213,90,48)"/><text x="423.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.88%)</title><rect x="420" y="228" width="22" height="15" fill="rgb(246,86,38)"/><text x="423.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.04%)</title><rect x="430" y="244" width="12" height="15" fill="rgb(246,72,4)"/><text x="433.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="430" y="260" width="12" height="15" fill="rgb(242,96,14)"/><text x="433.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="430" y="276" width="12" height="15" fill="rgb(247,223,35)"/><text x="433.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="430" y="292" width="12" height="15" fill="rgb(210,58,21)"/><text x="433.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="430" y="308" width="12" height="15" fill="rgb(231,147,17)"/><text x="433.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="430" y="324" width="12" height="15" fill="rgb(253,54,51)"/><text x="433.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.04%)</title><rect x="430" y="340" width="12" height="15" fill="rgb(207,65,38)"/><text x="433.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.04%)</title><rect x="430" y="356" width="12" height="15" fill="rgb(252,134,13)"/><text x="433.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.04%)</title><rect x="430" y="372" width="12" height="15" fill="rgb(221,194,20)"/><text x="433.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.04%)</title><rect x="430" y="388" width="12" height="15" fill="rgb(218,49,20)"/><text x="433.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.04%)</title><rect x="430" y="404" width="12" height="15" fill="rgb(223,31,9)"/><text x="433.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.04%)</title><rect x="430" y="420" width="12" height="15" fill="rgb(225,191,40)"/><text x="433.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.42%)</title><rect x="437" y="436" width="5" height="15" fill="rgb(222,86,19)"/><text x="440.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="437" y="452" width="5" height="15" fill="rgb(235,148,16)"/><text x="440.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="437" y="468" width="5" height="15" fill="rgb(206,79,38)"/><text x="440.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="437" y="484" width="5" height="15" fill="rgb(243,137,32)"/><text x="440.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="437" y="500" width="5" height="15" fill="rgb(231,156,9)"/><text x="440.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="437" y="516" width="5" height="15" fill="rgb(206,151,14)"/><text x="440.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="437" y="532" width="5" height="15" fill="rgb(214,54,37)"/><text x="440.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="437" y="548" width="5" height="15" fill="rgb(249,104,54)"/><text x="440.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="437" y="564" width="5" height="15" fill="rgb(221,182,34)"/><text x="440.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.42%)</title><rect x="437" y="580" width="5" height="15" fill="rgb(207,85,36)"/><text x="440.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="437" y="596" width="5" height="15" fill="rgb(253,194,10)"/><text x="440.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="437" y="612" width="5" height="15" fill="rgb(252,137,41)"/><text x="440.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="437" y="628" width="5" height="15" fill="rgb(249,1,21)"/><text x="440.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="644" width="2" height="15" fill="rgb(228,173,34)"/><text x="443.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="660" width="2" height="15" fill="rgb(232,87,10)"/><text x="443.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.21%)</title><rect x="440" y="676" width="2" height="15" fill="rgb(238,112,15)"/><text x="443.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="692" width="2" height="15" fill="rgb(248,86,34)"/><text x="443.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="708" width="2" height="15" fill="rgb(211,45,45)"/><text x="443.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="724" width="2" height="15" fill="rgb(244,143,3)"/><text x="443.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="740" width="2" height="15" fill="rgb(246,11,38)"/><text x="443.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="756" width="2" height="15" fill="rgb(220,78,33)"/><text x="443.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.21%)</title><rect x="440" y="772" width="2" height="15" fill="rgb(247,102,42)"/><text x="443.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="788" width="2" height="15" fill="rgb(246,183,51)"/><text x="443.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="804" width="2" height="15" fill="rgb(205,228,31)"/><text x="443.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="820" width="2" height="15" fill="rgb(228,130,5)"/><text x="443.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="836" width="2" height="15" fill="rgb(244,32,0)"/><text x="443.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="852" width="2" height="15" fill="rgb(219,28,49)"/><text x="443.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.21%)</title><rect x="440" y="868" width="2" height="15" fill="rgb(229,43,14)"/><text x="443.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="884" width="2" height="15" fill="rgb(216,170,25)"/><text x="443.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="440" y="900" width="2" height="15" fill="rgb(234,30,28)"/><text x="443.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="916" width="2" height="15" fill="rgb(229,186,49)"/><text x="443.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="932" width="2" height="15" fill="rgb(236,208,6)"/><text x="443.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="948" width="2" height="15" fill="rgb(254,43,35)"/><text x="443.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="964" width="2" height="15" fill="rgb(253,26,30)"/><text x="443.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="980" width="2" height="15" fill="rgb(227,46,47)"/><text x="443.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="996" width="2" height="15" fill="rgb(231,177,8)"/><text x="443.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.21%)</title><rect x="440" y="1012" width="2" height="15" fill="rgb(237,154,49)"/><text x="443.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="1028" width="2" height="15" fill="rgb(228,109,25)"/><text x="443.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="1044" width="2" height="15" fill="rgb(253,190,23)"/><text x="443.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="1060" width="2" height="15" fill="rgb(225,146,49)"/><text x="443.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="1076" width="2" height="15" fill="rgb(221,11,15)"/><text x="443.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="1092" width="2" height="15" fill="rgb(227,71,51)"/><text x="443.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.21%)</title><rect x="440" y="1108" width="2" height="15" fill="rgb(217,223,35)"/><text x="443.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="440" y="1124" width="2" height="15" fill="rgb(251,116,37)"/><text x="443.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="1140" width="2" height="15" fill="rgb(252,115,12)"/><text x="443.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="1156" width="2" height="15" fill="rgb(253,145,10)"/><text x="443.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="1172" width="2" height="15" fill="rgb(228,208,13)"/><text x="443.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="1188" width="2" height="15" fill="rgb(244,70,19)"/><text x="443.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="1204" width="2" height="15" fill="rgb(211,28,40)"/><text x="443.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="1220" width="2" height="15" fill="rgb(214,24,49)"/><text x="443.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.21%)</title><rect x="440" y="1236" width="2" height="15" fill="rgb(233,69,19)"/><text x="443.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="440" y="1252" width="2" height="15" fill="rgb(233,152,28)"/><text x="443.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="1268" width="2" height="15" fill="rgb(232,112,24)"/><text x="443.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="1284" width="2" height="15" fill="rgb(241,222,19)"/><text x="443.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="1300" width="2" height="15" fill="rgb(249,145,34)"/><text x="443.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="1316" width="2" height="15" fill="rgb(238,141,49)"/><text x="443.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="1332" width="2" height="15" fill="rgb(229,49,18)"/><text x="443.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="1348" width="2" height="15" fill="rgb(231,213,3)"/><text x="443.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.21%)</title><rect x="440" y="1364" width="2" height="15" fill="rgb(250,109,23)"/><text x="443.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="440" y="1380" width="2" height="15" fill="rgb(242,55,24)"/><text x="443.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="440" y="1396" width="2" height="15" fill="rgb(252,28,38)"/><text x="443.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="440" y="1412" width="2" height="15" fill="rgb(215,143,52)"/><text x="443.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="440" y="1428" width="2" height="15" fill="rgb(246,25,43)"/><text x="443.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="440" y="1444" width="2" height="15" fill="rgb(247,82,47)"/><text x="443.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.21%)</title><rect x="440" y="1460" width="2" height="15" fill="rgb(219,70,8)"/><text x="443.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.21%)</title><rect x="440" y="1476" width="2" height="15" fill="rgb(240,75,18)"/><text x="443.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.21%)</title><rect x="440" y="1492" width="2" height="15" fill="rgb(245,29,51)"/><text x="443.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="440" y="1508" width="2" height="15" fill="rgb(241,98,6)"/><text x="443.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="440" y="1524" width="2" height="15" fill="rgb(227,121,15)"/><text x="443.00" y="1534.50"></text></g><g><title>onnx::OpSchema::~OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="440" y="1540" width="2" height="15" fill="rgb(235,210,6)"/><text x="443.00" y="1550.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (1 samples, 0.21%)</title><rect x="442" y="388" width="3" height="15" fill="rgb(220,9,43)"/><text x="445.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="404" width="3" height="15" fill="rgb(216,85,54)"/><text x="445.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="420" width="3" height="15" fill="rgb(230,30,30)"/><text x="445.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="436" width="3" height="15" fill="rgb(224,68,51)"/><text x="445.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="442" y="452" width="3" height="15" fill="rgb(234,189,17)"/><text x="445.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="468" width="3" height="15" fill="rgb(252,178,50)"/><text x="445.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (1 samples, 0.21%)</title><rect x="442" y="484" width="3" height="15" fill="rgb(215,142,33)"/><text x="445.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (1 samples, 0.21%)</title><rect x="442" y="500" width="3" height="15" fill="rgb(233,190,0)"/><text x="445.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="516" width="3" height="15" fill="rgb(253,165,12)"/><text x="445.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="532" width="3" height="15" fill="rgb(242,108,13)"/><text x="445.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="548" width="3" height="15" fill="rgb(238,185,22)"/><text x="445.00" y="558.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="564" width="3" height="15" fill="rgb(206,117,39)"/><text x="445.00" y="574.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="580" width="3" height="15" fill="rgb(238,21,21)"/><text x="445.00" y="590.50"></text></g><g><title>onnx::AttributeProto::AttributeProto (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="596" width="3" height="15" fill="rgb(251,31,50)"/><text x="445.00" y="606.50"></text></g><g><title>onnx::AttributeProto::SharedCtor (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="442" y="612" width="3" height="15" fill="rgb(249,62,43)"/><text x="445.00" y="622.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:28) (2 samples, 0.42%)</title><rect x="442" y="84" width="5" height="15" fill="rgb(253,120,16)"/><text x="445.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.42%)</title><rect x="442" y="100" width="5" height="15" fill="rgb(243,11,9)"/><text x="445.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.42%)</title><rect x="442" y="116" width="5" height="15" fill="rgb(225,169,46)"/><text x="445.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.42%)</title><rect x="442" y="132" width="5" height="15" fill="rgb(222,218,35)"/><text x="445.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.42%)</title><rect x="442" y="148" width="5" height="15" fill="rgb(241,178,44)"/><text x="445.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.42%)</title><rect x="442" y="164" width="5" height="15" fill="rgb(254,82,28)"/><text x="445.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.42%)</title><rect x="442" y="180" width="5" height="15" fill="rgb(229,137,1)"/><text x="445.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.42%)</title><rect x="442" y="196" width="5" height="15" fill="rgb(211,2,10)"/><text x="445.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="442" y="212" width="5" height="15" fill="rgb(226,85,54)"/><text x="445.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="442" y="228" width="5" height="15" fill="rgb(247,75,2)"/><text x="445.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="442" y="244" width="5" height="15" fill="rgb(223,131,40)"/><text x="445.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="442" y="260" width="5" height="15" fill="rgb(229,103,3)"/><text x="445.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="442" y="276" width="5" height="15" fill="rgb(243,130,41)"/><text x="445.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.42%)</title><rect x="442" y="292" width="5" height="15" fill="rgb(216,72,16)"/><text x="445.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="442" y="308" width="5" height="15" fill="rgb(245,202,6)"/><text x="445.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="442" y="324" width="5" height="15" fill="rgb(214,84,34)"/><text x="445.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="442" y="340" width="5" height="15" fill="rgb(214,22,5)"/><text x="445.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="442" y="356" width="5" height="15" fill="rgb(224,147,44)"/><text x="445.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="442" y="372" width="5" height="15" fill="rgb(233,156,0)"/><text x="445.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.21%)</title><rect x="445" y="388" width="2" height="15" fill="rgb(233,134,45)"/><text x="448.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="445" y="404" width="2" height="15" fill="rgb(228,195,16)"/><text x="448.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="445" y="420" width="2" height="15" fill="rgb(235,59,8)"/><text x="448.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="445" y="436" width="2" height="15" fill="rgb(213,158,21)"/><text x="448.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="445" y="452" width="2" height="15" fill="rgb(250,229,16)"/><text x="448.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="445" y="468" width="2" height="15" fill="rgb(214,156,34)"/><text x="448.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.21%)</title><rect x="445" y="484" width="2" height="15" fill="rgb(214,218,34)"/><text x="448.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.21%)</title><rect x="445" y="500" width="2" height="15" fill="rgb(205,2,17)"/><text x="448.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.21%)</title><rect x="445" y="516" width="2" height="15" fill="rgb(228,121,40)"/><text x="448.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.21%)</title><rect x="445" y="532" width="2" height="15" fill="rgb(238,24,8)"/><text x="448.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.21%)</title><rect x="445" y="548" width="2" height="15" fill="rgb(241,165,12)"/><text x="448.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.21%)</title><rect x="445" y="564" width="2" height="15" fill="rgb(210,151,48)"/><text x="448.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.21%)</title><rect x="445" y="580" width="2" height="15" fill="rgb(216,74,48)"/><text x="448.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.21%)</title><rect x="445" y="596" width="2" height="15" fill="rgb(251,202,15)"/><text x="448.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.21%)</title><rect x="445" y="612" width="2" height="15" fill="rgb(244,76,9)"/><text x="448.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.21%)</title><rect x="445" y="628" width="2" height="15" fill="rgb(247,216,20)"/><text x="448.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.21%)</title><rect x="445" y="644" width="2" height="15" fill="rgb(253,203,7)"/><text x="448.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.21%)</title><rect x="445" y="660" width="2" height="15" fill="rgb(233,86,20)"/><text x="448.00" y="670.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.21%)</title><rect x="445" y="676" width="2" height="15" fill="rgb(205,88,49)"/><text x="448.00" y="686.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.21%)</title><rect x="445" y="692" width="2" height="15" fill="rgb(217,210,41)"/><text x="448.00" y="702.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.21%)</title><rect x="445" y="708" width="2" height="15" fill="rgb(215,140,25)"/><text x="448.00" y="718.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.21%)</title><rect x="445" y="724" width="2" height="15" fill="rgb(231,84,41)"/><text x="448.00" y="734.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.21%)</title><rect x="445" y="740" width="2" height="15" fill="rgb(206,126,39)"/><text x="448.00" y="750.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.21%)</title><rect x="445" y="756" width="2" height="15" fill="rgb(226,141,41)"/><text x="448.00" y="766.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.21%)</title><rect x="445" y="772" width="2" height="15" fill="rgb(236,75,49)"/><text x="448.00" y="782.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.21%)</title><rect x="445" y="788" width="2" height="15" fill="rgb(241,201,9)"/><text x="448.00" y="798.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.21%)</title><rect x="445" y="804" width="2" height="15" fill="rgb(244,105,24)"/><text x="448.00" y="814.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.21%)</title><rect x="445" y="820" width="2" height="15" fill="rgb(243,52,40)"/><text x="448.00" y="830.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.21%)</title><rect x="445" y="836" width="2" height="15" fill="rgb(206,137,45)"/><text x="448.00" y="846.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.21%)</title><rect x="445" y="852" width="2" height="15" fill="rgb(214,21,33)"/><text x="448.00" y="862.50"></text></g><g><title>parse_postfix (jinja2/parser.py:676) (1 samples, 0.21%)</title><rect x="445" y="868" width="2" height="15" fill="rgb(244,90,27)"/><text x="448.00" y="878.50"></text></g><g><title>parse_call (jinja2/parser.py:793) (1 samples, 0.21%)</title><rect x="445" y="884" width="2" height="15" fill="rgb(216,102,18)"/><text x="448.00" y="894.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.21%)</title><rect x="445" y="900" width="2" height="15" fill="rgb(226,15,39)"/><text x="448.00" y="910.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.21%)</title><rect x="445" y="916" width="2" height="15" fill="rgb(247,208,29)"/><text x="448.00" y="926.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.21%)</title><rect x="445" y="932" width="2" height="15" fill="rgb(243,116,5)"/><text x="448.00" y="942.50"></text></g><g><title>tokeniter (jinja2/lexer.py:693) (1 samples, 0.21%)</title><rect x="445" y="948" width="2" height="15" fill="rgb(248,29,37)"/><text x="448.00" y="958.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.21%)</title><rect x="447" y="196" width="3" height="15" fill="rgb(231,110,32)"/><text x="450.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.21%)</title><rect x="447" y="212" width="3" height="15" fill="rgb(230,93,45)"/><text x="450.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.21%)</title><rect x="447" y="228" width="3" height="15" fill="rgb(233,112,42)"/><text x="450.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.21%)</title><rect x="447" y="244" width="3" height="15" fill="rgb(238,122,52)"/><text x="450.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.21%)</title><rect x="447" y="260" width="3" height="15" fill="rgb(238,23,6)"/><text x="450.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:18) (2 samples, 0.42%)</title><rect x="447" y="100" width="5" height="15" fill="rgb(218,138,46)"/><text x="450.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.42%)</title><rect x="447" y="116" width="5" height="15" fill="rgb(219,93,0)"/><text x="450.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.42%)</title><rect x="447" y="132" width="5" height="15" fill="rgb(207,100,48)"/><text x="450.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.42%)</title><rect x="447" y="148" width="5" height="15" fill="rgb(237,9,7)"/><text x="450.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.42%)</title><rect x="447" y="164" width="5" height="15" fill="rgb(249,144,44)"/><text x="450.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.42%)</title><rect x="447" y="180" width="5" height="15" fill="rgb(215,89,30)"/><text x="450.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.21%)</title><rect x="450" y="196" width="2" height="15" fill="rgb(243,195,17)"/><text x="453.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.21%)</title><rect x="450" y="212" width="2" height="15" fill="rgb(217,72,49)"/><text x="453.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.21%)</title><rect x="459" y="180" width="3" height="15" fill="rgb(218,154,17)"/><text x="462.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.21%)</title><rect x="459" y="196" width="3" height="15" fill="rgb(221,88,9)"/><text x="462.00" y="206.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.21%)</title><rect x="472" y="260" width="2" height="15" fill="rgb(214,55,11)"/><text x="475.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.21%)</title><rect x="474" y="388" width="3" height="15" fill="rgb(244,39,5)"/><text x="477.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.42%)</title><rect x="474" y="308" width="5" height="15" fill="rgb(249,81,29)"/><text x="477.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.42%)</title><rect x="474" y="324" width="5" height="15" fill="rgb(212,212,21)"/><text x="477.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.42%)</title><rect x="474" y="340" width="5" height="15" fill="rgb(250,125,22)"/><text x="477.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.42%)</title><rect x="474" y="356" width="5" height="15" fill="rgb(228,166,32)"/><text x="477.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.42%)</title><rect x="474" y="372" width="5" height="15" fill="rgb(214,23,5)"/><text x="477.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.21%)</title><rect x="477" y="388" width="2" height="15" fill="rgb(237,66,28)"/><text x="480.00" y="398.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.21%)</title><rect x="482" y="340" width="2" height="15" fill="rgb(239,43,3)"/><text x="485.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (3 samples, 0.62%)</title><rect x="479" y="324" width="7" height="15" fill="rgb(228,226,52)"/><text x="482.00" y="334.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.21%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(253,86,20)"/><text x="487.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.21%)</title><rect x="486" y="356" width="3" height="15" fill="rgb(249,46,19)"/><text x="489.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.21%)</title><rect x="486" y="372" width="3" height="15" fill="rgb(212,118,49)"/><text x="489.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.21%)</title><rect x="486" y="388" width="3" height="15" fill="rgb(208,178,52)"/><text x="489.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.21%)</title><rect x="486" y="404" width="3" height="15" fill="rgb(217,186,10)"/><text x="489.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="486" y="420" width="3" height="15" fill="rgb(223,198,35)"/><text x="489.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.21%)</title><rect x="489" y="356" width="2" height="15" fill="rgb(207,153,46)"/><text x="492.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.21%)</title><rect x="489" y="372" width="2" height="15" fill="rgb(251,180,0)"/><text x="492.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.21%)</title><rect x="489" y="388" width="2" height="15" fill="rgb(219,199,0)"/><text x="492.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.21%)</title><rect x="489" y="404" width="2" height="15" fill="rgb(214,4,31)"/><text x="492.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.21%)</title><rect x="489" y="420" width="2" height="15" fill="rgb(211,165,40)"/><text x="492.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.21%)</title><rect x="491" y="372" width="3" height="15" fill="rgb(236,14,35)"/><text x="494.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.21%)</title><rect x="494" y="388" width="2" height="15" fill="rgb(233,74,20)"/><text x="497.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.42%)</title><rect x="496" y="388" width="5" height="15" fill="rgb(228,183,38)"/><text x="499.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (2 samples, 0.42%)</title><rect x="504" y="404" width="5" height="15" fill="rgb(253,48,35)"/><text x="507.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (4 samples, 0.83%)</title><rect x="501" y="388" width="10" height="15" fill="rgb(239,47,47)"/><text x="504.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.21%)</title><rect x="509" y="404" width="2" height="15" fill="rgb(245,200,43)"/><text x="512.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.21%)</title><rect x="511" y="388" width="2" height="15" fill="rgb(219,78,40)"/><text x="514.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 2.08%)</title><rect x="491" y="356" width="25" height="15" fill="rgb(250,174,0)"/><text x="494.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 1.88%)</title><rect x="494" y="372" width="22" height="15" fill="rgb(251,202,10)"/><text x="497.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.21%)</title><rect x="513" y="388" width="3" height="15" fill="rgb(239,100,23)"/><text x="516.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.21%)</title><rect x="516" y="356" width="2" height="15" fill="rgb(231,199,35)"/><text x="519.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.21%)</title><rect x="518" y="356" width="3" height="15" fill="rgb(216,147,35)"/><text x="521.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:680) (1 samples, 0.21%)</title><rect x="518" y="372" width="3" height="15" fill="rgb(221,62,22)"/><text x="521.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (20 samples, 4.17%)</title><rect x="474" y="260" width="49" height="15" fill="rgb(247,37,23)"/><text x="477.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 4.17%)</title><rect x="474" y="276" width="49" height="15" fill="rgb(224,198,4)"/><text x="477.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (20 samples, 4.17%)</title><rect x="474" y="292" width="49" height="15" fill="rgb(217,95,2)"/><text x="477.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (18 samples, 3.75%)</title><rect x="479" y="308" width="44" height="15" fill="rgb(216,163,49)"/><text x="482.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (15 samples, 3.12%)</title><rect x="486" y="324" width="37" height="15" fill="rgb(247,152,34)"/><text x="489.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 3.12%)</title><rect x="486" y="340" width="37" height="15" fill="rgb(246,208,18)"/><text x="489.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.21%)</title><rect x="521" y="356" width="2" height="15" fill="rgb(241,60,50)"/><text x="524.00" y="366.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c:1059) (1 samples, 0.21%)</title><rect x="521" y="372" width="2" height="15" fill="rgb(235,78,24)"/><text x="524.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.21%)</title><rect x="523" y="276" width="3" height="15" fill="rgb(228,35,26)"/><text x="526.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.21%)</title><rect x="526" y="292" width="2" height="15" fill="rgb(230,169,46)"/><text x="529.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.21%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(249,216,4)"/><text x="529.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.21%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(238,2,0)"/><text x="529.00" y="334.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (26 samples, 5.42%)</title><rect x="467" y="244" width="64" height="15" fill="rgb(212,85,34)"/><text x="470.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.62%)</title><rect x="523" y="260" width="8" height="15" fill="rgb(215,136,31)"/><text x="526.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.42%)</title><rect x="526" y="276" width="5" height="15" fill="rgb(248,161,53)"/><text x="529.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.21%)</title><rect x="528" y="292" width="3" height="15" fill="rgb(252,82,12)"/><text x="531.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.21%)</title><rect x="528" y="308" width="3" height="15" fill="rgb(212,226,24)"/><text x="531.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.21%)</title><rect x="528" y="324" width="3" height="15" fill="rgb(221,108,3)"/><text x="531.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.21%)</title><rect x="528" y="340" width="3" height="15" fill="rgb(220,41,15)"/><text x="531.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.21%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(239,4,52)"/><text x="531.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.21%)</title><rect x="528" y="372" width="3" height="15" fill="rgb(233,144,10)"/><text x="531.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.21%)</title><rect x="533" y="260" width="3" height="15" fill="rgb(209,104,51)"/><text x="536.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:460) (1 samples, 0.21%)</title><rect x="533" y="276" width="3" height="15" fill="rgb(220,114,4)"/><text x="536.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.21%)</title><rect x="536" y="276" width="2" height="15" fill="rgb(230,187,35)"/><text x="539.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.21%)</title><rect x="536" y="292" width="2" height="15" fill="rgb(208,67,7)"/><text x="539.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.21%)</title><rect x="536" y="308" width="2" height="15" fill="rgb(211,119,48)"/><text x="539.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.21%)</title><rect x="536" y="324" width="2" height="15" fill="rgb(216,158,52)"/><text x="539.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.21%)</title><rect x="538" y="324" width="3" height="15" fill="rgb(218,85,13)"/><text x="541.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.21%)</title><rect x="538" y="340" width="3" height="15" fill="rgb(224,9,4)"/><text x="541.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.42%)</title><rect x="538" y="308" width="5" height="15" fill="rgb(224,92,26)"/><text x="541.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.21%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(249,122,35)"/><text x="544.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.21%)</title><rect x="541" y="340" width="2" height="15" fill="rgb(253,158,45)"/><text x="544.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.21%)</title><rect x="543" y="308" width="2" height="15" fill="rgb(237,83,52)"/><text x="546.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.21%)</title><rect x="543" y="324" width="2" height="15" fill="rgb(211,111,27)"/><text x="546.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.21%)</title><rect x="543" y="340" width="2" height="15" fill="rgb(208,212,35)"/><text x="546.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.21%)</title><rect x="543" y="356" width="2" height="15" fill="rgb(212,227,28)"/><text x="546.00" y="366.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 1.46%)</title><rect x="531" y="244" width="17" height="15" fill="rgb(220,125,38)"/><text x="534.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.04%)</title><rect x="536" y="260" width="12" height="15" fill="rgb(227,186,11)"/><text x="539.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.83%)</title><rect x="538" y="276" width="10" height="15" fill="rgb(244,158,37)"/><text x="541.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.83%)</title><rect x="538" y="292" width="10" height="15" fill="rgb(216,131,49)"/><text x="541.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.21%)</title><rect x="545" y="308" width="3" height="15" fill="rgb(213,214,5)"/><text x="548.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.21%)</title><rect x="545" y="324" width="3" height="15" fill="rgb(232,146,45)"/><text x="548.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (1 samples, 0.21%)</title><rect x="545" y="340" width="3" height="15" fill="rgb(232,155,39)"/><text x="548.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (1 samples, 0.21%)</title><rect x="545" y="356" width="3" height="15" fill="rgb(221,2,27)"/><text x="548.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.21%)</title><rect x="545" y="372" width="3" height="15" fill="rgb(207,134,49)"/><text x="548.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (35 samples, 7.29%)</title><rect x="464" y="196" width="86" height="15" fill="rgb(222,134,54)"/><text x="467.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 7.29%)</title><rect x="464" y="212" width="86" height="15" fill="rgb(229,118,28)"/><text x="467.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (35 samples, 7.29%)</title><rect x="464" y="228" width="86" height="15" fill="rgb(206,5,18)"/><text x="467.00" y="238.50">_run (mlpr..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:44) (1 samples, 0.21%)</title><rect x="548" y="244" width="2" height="15" fill="rgb(249,190,15)"/><text x="551.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.21%)</title><rect x="550" y="196" width="3" height="15" fill="rgb(249,28,46)"/><text x="553.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.21%)</title><rect x="555" y="244" width="3" height="15" fill="rgb(230,123,19)"/><text x="558.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:635) (1 samples, 0.21%)</title><rect x="558" y="324" width="2" height="15" fill="rgb(251,48,50)"/><text x="561.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.21%)</title><rect x="558" y="340" width="2" height="15" fill="rgb(251,120,35)"/><text x="561.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="558" y="356" width="2" height="15" fill="rgb(248,92,5)"/><text x="561.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (19 samples, 3.96%)</title><rect x="558" y="276" width="46" height="15" fill="rgb(230,159,25)"/><text x="561.00" y="286.50">arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (19 samples, 3.96%)</title><rect x="558" y="292" width="46" height="15" fill="rgb(215,199,17)"/><text x="561.00" y="302.50">arra..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (19 samples, 3.96%)</title><rect x="558" y="308" width="46" height="15" fill="rgb(216,70,27)"/><text x="561.00" y="318.50">PyAr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (18 samples, 3.75%)</title><rect x="560" y="324" width="44" height="15" fill="rgb(245,197,33)"/><text x="563.00" y="334.50">cbla..</text></g><g><title>gemm (cblasfuncs.c:40) (18 samples, 3.75%)</title><rect x="560" y="340" width="44" height="15" fill="rgb(241,76,6)"/><text x="563.00" y="350.50">gemm..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.75%)</title><rect x="560" y="356" width="44" height="15" fill="rgb(239,16,47)"/><text x="563.00" y="366.50">cbla..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.75%)</title><rect x="560" y="372" width="44" height="15" fill="rgb(240,31,28)"/><text x="563.00" y="382.50">sgem..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.75%)</title><rect x="560" y="388" width="44" height="15" fill="rgb(243,135,40)"/><text x="563.00" y="398.50">sgem..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="604" y="276" width="3" height="15" fill="rgb(253,223,51)"/><text x="607.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (47 samples, 9.79%)</title><rect x="555" y="228" width="116" height="15" fill="rgb(251,104,38)"/><text x="558.00" y="238.50">_run (mlprodic..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (46 samples, 9.58%)</title><rect x="558" y="244" width="113" height="15" fill="rgb(242,26,41)"/><text x="561.00" y="254.50">numpy_dot_inp..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (46 samples, 9.58%)</title><rect x="558" y="260" width="113" height="15" fill="rgb(235,1,35)"/><text x="561.00" y="270.50">dot (&lt;__array..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 5.42%)</title><rect x="607" y="276" width="64" height="15" fill="rgb(218,179,28)"/><text x="610.00" y="286.50">sgemm_k..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.21%)</title><rect x="671" y="260" width="2" height="15" fill="rgb(218,18,4)"/><text x="674.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.21%)</title><rect x="671" y="276" width="2" height="15" fill="rgb(220,173,32)"/><text x="674.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.21%)</title><rect x="671" y="292" width="2" height="15" fill="rgb(211,11,6)"/><text x="674.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.21%)</title><rect x="673" y="292" width="3" height="15" fill="rgb(214,205,45)"/><text x="676.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.21%)</title><rect x="673" y="308" width="3" height="15" fill="rgb(222,176,31)"/><text x="676.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.21%)</title><rect x="673" y="324" width="3" height="15" fill="rgb(239,175,18)"/><text x="676.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.21%)</title><rect x="676" y="292" width="2" height="15" fill="rgb(247,107,26)"/><text x="679.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.21%)</title><rect x="676" y="308" width="2" height="15" fill="rgb(210,41,4)"/><text x="679.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.21%)</title><rect x="676" y="324" width="2" height="15" fill="rgb(240,223,36)"/><text x="679.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.21%)</title><rect x="676" y="340" width="2" height="15" fill="rgb(242,133,52)"/><text x="679.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.21%)</title><rect x="678" y="292" width="3" height="15" fill="rgb(205,224,11)"/><text x="681.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.21%)</title><rect x="678" y="308" width="3" height="15" fill="rgb(208,39,12)"/><text x="681.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:249) (1 samples, 0.21%)</title><rect x="678" y="324" width="3" height="15" fill="rgb(232,52,14)"/><text x="681.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.21%)</title><rect x="678" y="340" width="3" height="15" fill="rgb(245,58,52)"/><text x="681.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.04%)</title><rect x="671" y="244" width="12" height="15" fill="rgb(226,220,29)"/><text x="674.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.83%)</title><rect x="673" y="260" width="10" height="15" fill="rgb(243,44,35)"/><text x="676.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.83%)</title><rect x="673" y="276" width="10" height="15" fill="rgb(230,216,27)"/><text x="676.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.21%)</title><rect x="681" y="292" width="2" height="15" fill="rgb(207,153,19)"/><text x="684.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.21%)</title><rect x="681" y="308" width="2" height="15" fill="rgb(252,139,18)"/><text x="684.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 1.25%)</title><rect x="671" y="228" width="15" height="15" fill="rgb(222,133,5)"/><text x="674.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.21%)</title><rect x="683" y="244" width="3" height="15" fill="rgb(239,69,8)"/><text x="686.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.21%)</title><rect x="683" y="260" width="3" height="15" fill="rgb(242,107,3)"/><text x="686.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.21%)</title><rect x="688" y="276" width="2" height="15" fill="rgb(230,15,8)"/><text x="691.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.42%)</title><rect x="688" y="260" width="5" height="15" fill="rgb(243,14,34)"/><text x="691.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.21%)</title><rect x="690" y="276" width="3" height="15" fill="rgb(213,140,10)"/><text x="693.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.21%)</title><rect x="690" y="292" width="3" height="15" fill="rgb(243,154,54)"/><text x="693.00" y="302.50"></text></g><g><title>0x7f926256533a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="693" y="308" width="2" height="15" fill="rgb(247,34,30)"/><text x="696.00" y="318.50"></text></g><g><title>0x7f9262587204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.62%)</title><rect x="695" y="324" width="8" height="15" fill="rgb(244,111,25)"/><text x="698.00" y="334.50"></text></g><g><title>0x7f9262690c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="703" y="340" width="2" height="15" fill="rgb(230,154,51)"/><text x="706.00" y="350.50"></text></g><g><title>0x7f92773fce00 (libm-2.29.so) (2 samples, 0.42%)</title><rect x="718" y="356" width="4" height="15" fill="rgb(224,59,8)"/><text x="721.00" y="366.50"></text></g><g><title>0x7f92773fce17 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="722" y="356" width="3" height="15" fill="rgb(207,106,6)"/><text x="725.00" y="366.50"></text></g><g><title>0x7f92773fce37 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="725" y="356" width="2" height="15" fill="rgb(224,155,48)"/><text x="728.00" y="366.50"></text></g><g><title>0x7f92773fce7e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="727" y="356" width="3" height="15" fill="rgb(209,175,17)"/><text x="730.00" y="366.50"></text></g><g><title>0x7f9262587214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.92%)</title><rect x="703" y="324" width="34" height="15" fill="rgb(242,98,13)"/><text x="706.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (13 samples, 2.71%)</title><rect x="705" y="340" width="32" height="15" fill="rgb(213,0,15)"/><text x="708.00" y="350.50">ex..</text></g><g><title>0x7f92773fcea6 (libm-2.29.so) (3 samples, 0.62%)</title><rect x="730" y="356" width="7" height="15" fill="rgb(211,96,51)"/><text x="733.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (23 samples, 4.79%)</title><rect x="693" y="260" width="56" height="15" fill="rgb(210,87,40)"/><text x="696.00" y="270.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (23 samples, 4.79%)</title><rect x="693" y="276" width="56" height="15" fill="rgb(206,21,24)"/><text x="696.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (23 samples, 4.79%)</title><rect x="693" y="292" width="56" height="15" fill="rgb(223,194,17)"/><text x="696.00" y="302.50">trivi..</text></g><g><title>0x7f926256533d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 4.58%)</title><rect x="695" y="308" width="54" height="15" fill="rgb(227,29,10)"/><text x="698.00" y="318.50">0x7f9..</text></g><g><title>0x7f9262587228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.04%)</title><rect x="737" y="324" width="12" height="15" fill="rgb(225,141,7)"/><text x="740.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (26 samples, 5.42%)</title><rect x="688" y="244" width="64" height="15" fill="rgb(222,114,27)"/><text x="691.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.21%)</title><rect x="749" y="260" width="3" height="15" fill="rgb(230,189,44)"/><text x="752.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (28 samples, 5.83%)</title><rect x="686" y="228" width="68" height="15" fill="rgb(248,213,32)"/><text x="689.00" y="238.50">_run (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.21%)</title><rect x="752" y="244" width="2" height="15" fill="rgb(238,17,53)"/><text x="755.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.21%)</title><rect x="754" y="228" width="3" height="15" fill="rgb(232,105,50)"/><text x="757.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.42%)</title><rect x="759" y="308" width="5" height="15" fill="rgb(240,212,36)"/><text x="762.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.42%)</title><rect x="764" y="324" width="5" height="15" fill="rgb(231,145,4)"/><text x="767.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3131) (1 samples, 0.21%)</title><rect x="767" y="340" width="2" height="15" fill="rgb(251,127,43)"/><text x="770.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (89 samples, 18.54%)</title><rect x="553" y="196" width="219" height="15" fill="rgb(221,216,21)"/><text x="556.00" y="206.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (89 samples, 18.54%)</title><rect x="553" y="212" width="219" height="15" fill="rgb(215,61,41)"/><text x="556.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 1.25%)</title><rect x="757" y="228" width="15" height="15" fill="rgb(228,188,24)"/><text x="760.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 1.04%)</title><rect x="759" y="244" width="13" height="15" fill="rgb(236,108,41)"/><text x="762.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.04%)</title><rect x="759" y="260" width="13" height="15" fill="rgb(229,30,42)"/><text x="762.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (5 samples, 1.04%)</title><rect x="759" y="276" width="13" height="15" fill="rgb(250,15,46)"/><text x="762.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 1.04%)</title><rect x="759" y="292" width="13" height="15" fill="rgb(248,220,23)"/><text x="762.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (3 samples, 0.62%)</title><rect x="764" y="308" width="8" height="15" fill="rgb(215,144,20)"/><text x="767.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.21%)</title><rect x="769" y="324" width="3" height="15" fill="rgb(241,35,29)"/><text x="772.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (127 samples, 26.46%)</title><rect x="462" y="180" width="312" height="15" fill="rgb(222,217,13)"/><text x="465.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.21%)</title><rect x="772" y="196" width="2" height="15" fill="rgb(213,1,28)"/><text x="775.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 0.83%)</title><rect x="774" y="180" width="10" height="15" fill="rgb(206,227,50)"/><text x="777.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:45) (141 samples, 29.38%)</title><rect x="442" y="52" width="347" height="15" fill="rgb(208,193,41)"/><text x="445.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:44) (141 samples, 29.38%)</title><rect x="442" y="68" width="347" height="15" fill="rgb(213,64,5)"/><text x="445.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:29) (139 samples, 28.96%)</title><rect x="447" y="84" width="342" height="15" fill="rgb(209,14,28)"/><text x="450.00" y="94.50">setup_profile (bench_LogisticRegression_liblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:23) (137 samples, 28.54%)</title><rect x="452" y="100" width="337" height="15" fill="rgb(208,145,9)"/><text x="455.00" y="110.50">profile (bench_LogisticRegression_liblinear_m..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (135 samples, 28.12%)</title><rect x="457" y="116" width="332" height="15" fill="rgb(207,134,42)"/><text x="460.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (135 samples, 28.12%)</title><rect x="457" y="132" width="332" height="15" fill="rgb(240,104,14)"/><text x="460.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (134 samples, 27.92%)</title><rect x="459" y="148" width="330" height="15" fill="rgb(231,217,5)"/><text x="462.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (134 samples, 27.92%)</title><rect x="459" y="164" width="330" height="15" fill="rgb(222,11,27)"/><text x="462.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.42%)</title><rect x="784" y="180" width="5" height="15" fill="rgb(211,130,42)"/><text x="787.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:18) (1 samples, 0.21%)</title><rect x="789" y="100" width="2" height="15" fill="rgb(210,127,48)"/><text x="792.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.21%)</title><rect x="789" y="116" width="2" height="15" fill="rgb(205,190,43)"/><text x="792.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.21%)</title><rect x="789" y="132" width="2" height="15" fill="rgb(247,50,49)"/><text x="792.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.21%)</title><rect x="789" y="148" width="2" height="15" fill="rgb(235,88,34)"/><text x="792.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.21%)</title><rect x="789" y="164" width="2" height="15" fill="rgb(217,47,13)"/><text x="792.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.21%)</title><rect x="789" y="180" width="2" height="15" fill="rgb(226,21,28)"/><text x="792.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.21%)</title><rect x="789" y="196" width="2" height="15" fill="rgb(225,135,15)"/><text x="792.00" y="206.50"></text></g><g><title>0x7f92372edff9 (?) (1 samples, 0.21%)</title><rect x="789" y="212" width="2" height="15" fill="rgb(250,203,45)"/><text x="792.00" y="222.50"></text></g><g><title>0x7f92372e8ef6 (?) (1 samples, 0.21%)</title><rect x="789" y="228" width="2" height="15" fill="rgb(209,103,52)"/><text x="792.00" y="238.50"></text></g><g><title>0x7f92372dd962 (?) (1 samples, 0.21%)</title><rect x="789" y="244" width="2" height="15" fill="rgb(246,53,13)"/><text x="792.00" y="254.50"></text></g><g><title>0x7f92373117a7 (?) (1 samples, 0.21%)</title><rect x="789" y="260" width="2" height="15" fill="rgb(221,157,36)"/><text x="792.00" y="270.50"></text></g><g><title>0x7f9237311379 (?) (1 samples, 0.21%)</title><rect x="789" y="276" width="2" height="15" fill="rgb(228,65,12)"/><text x="792.00" y="286.50"></text></g><g><title>0x7f923776f8b8 (?) (1 samples, 0.21%)</title><rect x="789" y="292" width="2" height="15" fill="rgb(234,150,40)"/><text x="792.00" y="302.50"></text></g><g><title>0x7f923776dc7f (?) (1 samples, 0.21%)</title><rect x="789" y="308" width="2" height="15" fill="rgb(237,7,53)"/><text x="792.00" y="318.50"></text></g><g><title>0x7f923778099c (?) (1 samples, 0.21%)</title><rect x="789" y="324" width="2" height="15" fill="rgb(205,30,31)"/><text x="792.00" y="334.50"></text></g><g><title>0x7f9237465d39 (?) (1 samples, 0.21%)</title><rect x="789" y="340" width="2" height="15" fill="rgb(205,121,31)"/><text x="792.00" y="350.50"></text></g><g><title>0x7f923746040d (?) (1 samples, 0.21%)</title><rect x="789" y="356" width="2" height="15" fill="rgb(233,137,50)"/><text x="792.00" y="366.50"></text></g><g><title>0x7f92773fce37 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="789" y="372" width="2" height="15" fill="rgb(220,97,17)"/><text x="792.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.21%)</title><rect x="791" y="148" width="3" height="15" fill="rgb(235,163,35)"/><text x="794.00" y="158.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="801" y="292" width="3" height="15" fill="rgb(248,229,4)"/><text x="804.00" y="302.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="356" width="3" height="15" fill="rgb(252,10,2)"/><text x="1052.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="372" width="3" height="15" fill="rgb(227,200,45)"/><text x="1052.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="388" width="3" height="15" fill="rgb(205,20,39)"/><text x="1052.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="404" width="3" height="15" fill="rgb(254,30,38)"/><text x="1052.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="420" width="3" height="15" fill="rgb(236,204,15)"/><text x="1052.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="436" width="3" height="15" fill="rgb(241,59,0)"/><text x="1052.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="452" width="3" height="15" fill="rgb(208,3,52)"/><text x="1052.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="468" width="3" height="15" fill="rgb(227,225,6)"/><text x="1052.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="484" width="3" height="15" fill="rgb(247,225,7)"/><text x="1052.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1049" y="500" width="3" height="15" fill="rgb(205,108,37)"/><text x="1052.00" y="510.50"></text></g><g><title>0x7f927729ddb3 (libc-2.29.so) (3 samples, 0.62%)</title><rect x="1099" y="372" width="7" height="15" fill="rgb(222,26,25)"/><text x="1102.00" y="382.50"></text></g><g><title>0x7f92773fce0e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1106" y="372" width="2" height="15" fill="rgb(232,30,2)"/><text x="1109.00" y="382.50"></text></g><g><title>0x7f92773fce17 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1108" y="372" width="3" height="15" fill="rgb(227,64,39)"/><text x="1111.00" y="382.50"></text></g><g><title>0x7f92773fce2f (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1111" y="372" width="2" height="15" fill="rgb(231,150,2)"/><text x="1114.00" y="382.50"></text></g><g><title>0x7f92773fce37 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1113" y="372" width="3" height="15" fill="rgb(218,89,36)"/><text x="1116.00" y="382.50"></text></g><g><title>0x7f92773fce71 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1116" y="372" width="2" height="15" fill="rgb(252,140,38)"/><text x="1119.00" y="382.50"></text></g><g><title>0x7f92773fce7a (libm-2.29.so) (2 samples, 0.42%)</title><rect x="1118" y="372" width="5" height="15" fill="rgb(215,84,11)"/><text x="1121.00" y="382.50"></text></g><g><title>0x7f92773fce7e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1123" y="372" width="3" height="15" fill="rgb(210,118,20)"/><text x="1126.00" y="382.50"></text></g><g><title>0x7f92773fce86 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1126" y="372" width="2" height="15" fill="rgb(253,133,5)"/><text x="1129.00" y="382.50"></text></g><g><title>0x7f92773fce92 (libm-2.29.so) (2 samples, 0.42%)</title><rect x="1128" y="372" width="5" height="15" fill="rgb(224,163,25)"/><text x="1131.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 28.54%)</title><rect x="804" y="340" width="336" height="15" fill="rgb(235,173,31)"/><text x="807.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Com..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (36 samples, 7.50%)</title><rect x="1052" y="356" width="88" height="15" fill="rgb(242,168,27)"/><text x="1055.00" y="366.50">onnxruntim..</text></g><g><title>0x7f92773fce96 (libm-2.29.so) (3 samples, 0.62%)</title><rect x="1133" y="372" width="7" height="15" fill="rgb(249,113,2)"/><text x="1136.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (148 samples, 30.83%)</title><rect x="801" y="260" width="364" height="15" fill="rgb(214,199,29)"/><text x="804.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (148 samples, 30.83%)</title><rect x="801" y="276" width="364" height="15" fill="rgb(225,64,0)"/><text x="804.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (147 samples, 30.62%)</title><rect x="804" y="292" width="361" height="15" fill="rgb(223,96,7)"/><text x="807.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (147 samples, 30.62%)</title><rect x="804" y="308" width="361" height="15" fill="rgb(249,85,18)"/><text x="807.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (147 samples, 30.62%)</title><rect x="804" y="324" width="361" height="15" fill="rgb(211,78,12)"/><text x="807.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxru..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.08%)</title><rect x="1140" y="340" width="25" height="15" fill="rgb(221,67,9)"/><text x="1143.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.08%)</title><rect x="1140" y="356" width="25" height="15" fill="rgb(207,145,24)"/><text x="1143.00" y="366.50">o..</text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.21%)</title><rect x="1165" y="292" width="2" height="15" fill="rgb(239,218,6)"/><text x="1168.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.21%)</title><rect x="1165" y="308" width="2" height="15" fill="rgb(211,146,6)"/><text x="1168.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.21%)</title><rect x="1165" y="324" width="2" height="15" fill="rgb(205,115,14)"/><text x="1168.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.21%)</title><rect x="1165" y="340" width="2" height="15" fill="rgb(211,162,5)"/><text x="1168.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1165" y="356" width="2" height="15" fill="rgb(205,165,38)"/><text x="1168.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1165" y="260" width="5" height="15" fill="rgb(209,32,51)"/><text x="1168.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.42%)</title><rect x="1165" y="276" width="5" height="15" fill="rgb(238,158,44)"/><text x="1168.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.21%)</title><rect x="1167" y="292" width="3" height="15" fill="rgb(214,192,1)"/><text x="1170.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.21%)</title><rect x="1167" y="308" width="3" height="15" fill="rgb(252,119,26)"/><text x="1170.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.21%)</title><rect x="1167" y="324" width="3" height="15" fill="rgb(225,14,13)"/><text x="1170.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.21%)</title><rect x="1167" y="340" width="3" height="15" fill="rgb(251,133,17)"/><text x="1170.00" y="350.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(254,109,29)"/><text x="1173.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (153 samples, 31.88%)</title><rect x="799" y="244" width="376" height="15" fill="rgb(227,77,22)"/><text x="802.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="260" width="3" height="15" fill="rgb(244,145,1)"/><text x="1175.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="276" width="3" height="15" fill="rgb(245,154,0)"/><text x="1175.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="292" width="3" height="15" fill="rgb(248,141,22)"/><text x="1175.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (156 samples, 32.50%)</title><rect x="794" y="164" width="383" height="15" fill="rgb(231,167,12)"/><text x="797.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (156 samples, 32.50%)</title><rect x="794" y="180" width="383" height="15" fill="rgb(231,180,3)"/><text x="797.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (155 samples, 32.29%)</title><rect x="796" y="196" width="381" height="15" fill="rgb(206,84,51)"/><text x="799.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (155 samples, 32.29%)</title><rect x="796" y="212" width="381" height="15" fill="rgb(253,118,46)"/><text x="799.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (155 samples, 32.29%)</title><rect x="796" y="228" width="381" height="15" fill="rgb(205,10,0)"/><text x="799.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="244" width="2" height="15" fill="rgb(240,186,53)"/><text x="1178.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(213,169,35)"/><text x="1178.00" y="270.50"></text></g><g><title>all (480 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(215,221,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:52) (163 samples, 33.96%)</title><rect x="789" y="52" width="401" height="15" fill="rgb(234,75,50)"/><text x="792.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:51) (163 samples, 33.96%)</title><rect x="789" y="68" width="401" height="15" fill="rgb(234,104,48)"/><text x="792.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:29) (163 samples, 33.96%)</title><rect x="789" y="84" width="401" height="15" fill="rgb(253,78,17)"/><text x="792.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_nozipmap.py:23) (162 samples, 33.75%)</title><rect x="791" y="100" width="399" height="15" fill="rgb(206,49,10)"/><text x="794.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (162 samples, 33.75%)</title><rect x="791" y="116" width="399" height="15" fill="rgb(248,197,44)"/><text x="794.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (162 samples, 33.75%)</title><rect x="791" y="132" width="399" height="15" fill="rgb(215,94,43)"/><text x="794.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (161 samples, 33.54%)</title><rect x="794" y="148" width="396" height="15" fill="rgb(252,59,1)"/><text x="797.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (5 samples, 1.04%)</title><rect x="1177" y="164" width="13" height="15" fill="rgb(212,108,17)"/><text x="1180.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.42%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(246,34,10)"/><text x="1188.00" y="190.50"></text></g></g></svg>