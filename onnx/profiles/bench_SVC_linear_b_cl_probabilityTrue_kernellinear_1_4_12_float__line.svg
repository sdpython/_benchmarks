<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:28) (1 samples, 0.36%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(247,137,32)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.36%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(207,61,39)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.36%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(226,44,9)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:92) (1 samples, 0.36%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(222,122,29)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(224,181,0)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.36%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(225,46,53)"/><text x="13.00" y="174.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.36%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(208,39,34)"/><text x="13.00" y="190.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.36%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(243,132,43)"/><text x="13.00" y="206.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.36%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(216,36,16)"/><text x="13.00" y="222.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1221) (1 samples, 0.36%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(209,168,11)"/><text x="13.00" y="238.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;:1197) (1 samples, 0.36%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(246,49,18)"/><text x="13.00" y="254.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.36%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(235,53,17)"/><text x="13.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="22" y="116" width="5" height="15" fill="rgb(221,36,42)"/><text x="25.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="22" y="132" width="5" height="15" fill="rgb(232,97,0)"/><text x="25.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.36%)</title><rect x="22" y="148" width="5" height="15" fill="rgb(245,172,18)"/><text x="25.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.73%)</title><rect x="52" y="180" width="9" height="15" fill="rgb(215,46,9)"/><text x="55.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.36%)</title><rect x="57" y="196" width="4" height="15" fill="rgb(232,35,30)"/><text x="60.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (3 samples, 1.09%)</title><rect x="74" y="196" width="13" height="15" fill="rgb(240,71,42)"/><text x="77.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.45%)</title><rect x="100" y="212" width="17" height="15" fill="rgb(253,152,21)"/><text x="103.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.91%)</title><rect x="87" y="196" width="34" height="15" fill="rgb(236,58,15)"/><text x="90.00" y="206.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.36%)</title><rect x="117" y="212" width="4" height="15" fill="rgb(234,213,45)"/><text x="120.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (20 samples, 7.27%)</title><rect x="61" y="180" width="86" height="15" fill="rgb(207,207,21)"/><text x="64.00" y="190.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (6 samples, 2.18%)</title><rect x="121" y="196" width="26" height="15" fill="rgb(226,83,51)"/><text x="124.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.45%)</title><rect x="130" y="212" width="17" height="15" fill="rgb(205,111,3)"/><text x="133.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (23 samples, 8.36%)</title><rect x="52" y="164" width="99" height="15" fill="rgb(234,163,36)"/><text x="55.00" y="174.50">_validate_f..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.36%)</title><rect x="147" y="180" width="4" height="15" fill="rgb(213,140,12)"/><text x="150.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.36%)</title><rect x="160" y="180" width="4" height="15" fill="rgb(228,75,17)"/><text x="163.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.73%)</title><rect x="164" y="180" width="9" height="15" fill="rgb(212,129,49)"/><text x="167.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 0.73%)</title><rect x="185" y="196" width="9" height="15" fill="rgb(236,208,14)"/><text x="188.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 2.91%)</title><rect x="173" y="180" width="34" height="15" fill="rgb(235,215,45)"/><text x="176.00" y="190.50">ch..</text></g><g><title>__enter__ (warnings.py:479) (3 samples, 1.09%)</title><rect x="194" y="196" width="13" height="15" fill="rgb(231,44,30)"/><text x="197.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.09%)</title><rect x="207" y="212" width="13" height="15" fill="rgb(227,115,0)"/><text x="210.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.45%)</title><rect x="207" y="180" width="17" height="15" fill="rgb(232,123,41)"/><text x="210.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.45%)</title><rect x="207" y="196" width="17" height="15" fill="rgb(237,30,0)"/><text x="210.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.36%)</title><rect x="220" y="212" width="4" height="15" fill="rgb(253,139,50)"/><text x="223.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.36%)</title><rect x="233" y="196" width="4" height="15" fill="rgb(233,91,38)"/><text x="236.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.36%)</title><rect x="237" y="196" width="4" height="15" fill="rgb(229,83,5)"/><text x="240.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (5 samples, 1.82%)</title><rect x="224" y="180" width="22" height="15" fill="rgb(206,145,47)"/><text x="227.00" y="190.50">c..</text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.36%)</title><rect x="241" y="196" width="5" height="15" fill="rgb(223,104,44)"/><text x="244.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.36%)</title><rect x="241" y="212" width="5" height="15" fill="rgb(234,64,40)"/><text x="244.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.36%)</title><rect x="241" y="228" width="5" height="15" fill="rgb(237,116,37)"/><text x="244.00" y="238.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.36%)</title><rect x="241" y="244" width="5" height="15" fill="rgb(236,106,52)"/><text x="244.00" y="254.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4557) (1 samples, 0.36%)</title><rect x="241" y="260" width="5" height="15" fill="rgb(222,52,21)"/><text x="244.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.36%)</title><rect x="254" y="260" width="4" height="15" fill="rgb(236,55,8)"/><text x="257.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.36%)</title><rect x="254" y="276" width="4" height="15" fill="rgb(244,68,37)"/><text x="257.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.36%)</title><rect x="254" y="292" width="4" height="15" fill="rgb(208,66,14)"/><text x="257.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.36%)</title><rect x="254" y="308" width="4" height="15" fill="rgb(240,222,11)"/><text x="257.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="254" y="324" width="4" height="15" fill="rgb(224,218,29)"/><text x="257.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.36%)</title><rect x="254" y="340" width="4" height="15" fill="rgb(215,141,4)"/><text x="257.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.36%)</title><rect x="258" y="276" width="5" height="15" fill="rgb(247,144,33)"/><text x="261.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.36%)</title><rect x="258" y="292" width="5" height="15" fill="rgb(248,103,25)"/><text x="261.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.36%)</title><rect x="263" y="276" width="4" height="15" fill="rgb(225,97,2)"/><text x="266.00" y="286.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.36%)</title><rect x="263" y="292" width="4" height="15" fill="rgb(216,12,35)"/><text x="266.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.36%)</title><rect x="263" y="308" width="4" height="15" fill="rgb(245,51,36)"/><text x="266.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.36%)</title><rect x="267" y="292" width="4" height="15" fill="rgb(252,153,24)"/><text x="270.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="267" y="308" width="4" height="15" fill="rgb(243,114,20)"/><text x="270.00" y="318.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.36%)</title><rect x="271" y="324" width="5" height="15" fill="rgb(236,226,39)"/><text x="274.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (8 samples, 2.91%)</title><rect x="246" y="180" width="34" height="15" fill="rgb(207,207,30)"/><text x="249.00" y="190.50">ch..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (7 samples, 2.55%)</title><rect x="250" y="196" width="30" height="15" fill="rgb(217,65,32)"/><text x="253.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (6 samples, 2.18%)</title><rect x="254" y="212" width="26" height="15" fill="rgb(228,160,52)"/><text x="257.00" y="222.50">_..</text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (6 samples, 2.18%)</title><rect x="254" y="228" width="26" height="15" fill="rgb(234,173,20)"/><text x="257.00" y="238.50">P..</text></g><g><title>PyArray_FromAny (ctors.c:1966) (6 samples, 2.18%)</title><rect x="254" y="244" width="26" height="15" fill="rgb(211,18,34)"/><text x="257.00" y="254.50">P..</text></g><g><title>PyArray_FromArray (ctors.c:2172) (5 samples, 1.82%)</title><rect x="258" y="260" width="22" height="15" fill="rgb(228,34,7)"/><text x="261.00" y="270.50">P..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 1.09%)</title><rect x="267" y="276" width="13" height="15" fill="rgb(234,175,51)"/><text x="270.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.73%)</title><rect x="271" y="292" width="9" height="15" fill="rgb(241,175,5)"/><text x="274.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (2 samples, 0.73%)</title><rect x="271" y="308" width="9" height="15" fill="rgb(244,149,47)"/><text x="274.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.36%)</title><rect x="276" y="324" width="4" height="15" fill="rgb(253,22,20)"/><text x="279.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.36%)</title><rect x="276" y="340" width="4" height="15" fill="rgb(249,111,31)"/><text x="279.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 1.09%)</title><rect x="280" y="180" width="13" height="15" fill="rgb(235,62,4)"/><text x="283.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.36%)</title><rect x="288" y="196" width="5" height="15" fill="rgb(239,76,33)"/><text x="291.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.36%)</title><rect x="293" y="180" width="4" height="15" fill="rgb(218,178,48)"/><text x="296.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.73%)</title><rect x="297" y="180" width="9" height="15" fill="rgb(225,223,37)"/><text x="300.00" y="190.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.36%)</title><rect x="301" y="196" width="5" height="15" fill="rgb(249,74,53)"/><text x="304.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.45%)</title><rect x="340" y="212" width="17" height="15" fill="rgb(237,92,50)"/><text x="343.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (13 samples, 4.73%)</title><rect x="310" y="196" width="56" height="15" fill="rgb(233,77,34)"/><text x="313.00" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (2 samples, 0.73%)</title><rect x="357" y="212" width="9" height="15" fill="rgb(239,199,27)"/><text x="360.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (16 samples, 5.82%)</title><rect x="306" y="180" width="68" height="15" fill="rgb(223,209,39)"/><text x="309.00" y="190.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.73%)</title><rect x="366" y="196" width="8" height="15" fill="rgb(220,193,1)"/><text x="369.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.36%)</title><rect x="370" y="212" width="4" height="15" fill="rgb(230,27,7)"/><text x="373.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.36%)</title><rect x="374" y="180" width="5" height="15" fill="rgb(224,71,1)"/><text x="377.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.09%)</title><rect x="379" y="196" width="12" height="15" fill="rgb(209,6,34)"/><text x="382.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.36%)</title><rect x="391" y="196" width="5" height="15" fill="rgb(228,36,30)"/><text x="394.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (62 samples, 22.55%)</title><rect x="151" y="164" width="266" height="15" fill="rgb(248,36,34)"/><text x="154.00" y="174.50">_validate_for_predict (sklearn/svm/..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 3.27%)</title><rect x="379" y="180" width="38" height="15" fill="rgb(207,23,18)"/><text x="382.00" y="190.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.82%)</title><rect x="396" y="196" width="21" height="15" fill="rgb(253,75,34)"/><text x="399.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.09%)</title><rect x="404" y="212" width="13" height="15" fill="rgb(212,228,46)"/><text x="407.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.73%)</title><rect x="409" y="228" width="8" height="15" fill="rgb(254,55,7)"/><text x="412.00" y="238.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (2 samples, 0.73%)</title><rect x="417" y="164" width="9" height="15" fill="rgb(253,154,15)"/><text x="420.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.36%)</title><rect x="421" y="180" width="5" height="15" fill="rgb(227,87,42)"/><text x="424.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (88 samples, 32.00%)</title><rect x="52" y="148" width="378" height="15" fill="rgb(222,35,19)"/><text x="55.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:459) (1 samples, 0.36%)</title><rect x="426" y="164" width="4" height="15" fill="rgb(212,209,33)"/><text x="429.00" y="174.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:682) (1 samples, 0.36%)</title><rect x="430" y="164" width="4" height="15" fill="rgb(220,210,27)"/><text x="433.00" y="174.50"></text></g><g><title>_compute_kernel (sklearn/svm/_base.py:373) (1 samples, 0.36%)</title><rect x="430" y="180" width="4" height="15" fill="rgb(225,225,16)"/><text x="433.00" y="190.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:685) (1 samples, 0.36%)</title><rect x="434" y="164" width="5" height="15" fill="rgb(253,224,37)"/><text x="437.00" y="174.50"></text></g><g><title>0x7f55863192ee (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="447" y="180" width="4" height="15" fill="rgb(227,129,38)"/><text x="450.00" y="190.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.36%)</title><rect x="451" y="244" width="5" height="15" fill="rgb(254,182,19)"/><text x="454.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.36%)</title><rect x="451" y="260" width="5" height="15" fill="rgb(220,38,20)"/><text x="454.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:350) (1 samples, 0.36%)</title><rect x="451" y="276" width="5" height="15" fill="rgb(220,21,18)"/><text x="454.00" y="286.50"></text></g><g><title>0x7f5586316d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="451" y="196" width="9" height="15" fill="rgb(253,24,21)"/><text x="454.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="451" y="212" width="9" height="15" fill="rgb(207,76,13)"/><text x="454.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.73%)</title><rect x="451" y="228" width="9" height="15" fill="rgb(247,44,53)"/><text x="454.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.36%)</title><rect x="456" y="244" width="4" height="15" fill="rgb(226,43,37)"/><text x="459.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.36%)</title><rect x="460" y="244" width="4" height="15" fill="rgb(242,187,49)"/><text x="463.00" y="254.50"></text></g><g><title>0x7f55863005ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="460" y="212" width="9" height="15" fill="rgb(219,159,7)"/><text x="463.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.73%)</title><rect x="460" y="228" width="9" height="15" fill="rgb(231,228,31)"/><text x="463.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.36%)</title><rect x="464" y="244" width="5" height="15" fill="rgb(206,204,12)"/><text x="467.00" y="254.50"></text></g><g><title>0x7f5586316d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.09%)</title><rect x="460" y="196" width="13" height="15" fill="rgb(244,4,29)"/><text x="463.00" y="206.50"></text></g><g><title>0x7f558630067f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="469" y="212" width="4" height="15" fill="rgb(210,69,53)"/><text x="472.00" y="222.50"></text></g><g><title>0x7f558630033c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="469" y="228" width="4" height="15" fill="rgb(223,30,9)"/><text x="472.00" y="238.50"></text></g><g><title>0x7f55862ffae2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="469" y="244" width="4" height="15" fill="rgb(208,19,54)"/><text x="472.00" y="254.50"></text></g><g><title>0x7f5586316e20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="473" y="196" width="4" height="15" fill="rgb(217,11,24)"/><text x="476.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="473" y="212" width="4" height="15" fill="rgb(227,25,34)"/><text x="476.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.36%)</title><rect x="473" y="228" width="4" height="15" fill="rgb(226,121,12)"/><text x="476.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:666) (1 samples, 0.36%)</title><rect x="473" y="244" width="4" height="15" fill="rgb(244,20,5)"/><text x="476.00" y="254.50"></text></g><g><title>0x7f5586316eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="477" y="196" width="5" height="15" fill="rgb(209,51,17)"/><text x="480.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="477" y="212" width="5" height="15" fill="rgb(234,141,20)"/><text x="480.00" y="222.50"></text></g><g><title>0x7f5586316f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="482" y="196" width="4" height="15" fill="rgb(251,53,34)"/><text x="485.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="482" y="212" width="4" height="15" fill="rgb(240,75,27)"/><text x="485.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.36%)</title><rect x="482" y="228" width="4" height="15" fill="rgb(254,139,21)"/><text x="485.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.36%)</title><rect x="482" y="244" width="4" height="15" fill="rgb(244,109,37)"/><text x="485.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.36%)</title><rect x="482" y="260" width="4" height="15" fill="rgb(225,176,54)"/><text x="485.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.36%)</title><rect x="482" y="276" width="4" height="15" fill="rgb(248,58,20)"/><text x="485.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:202) (1 samples, 0.36%)</title><rect x="482" y="292" width="4" height="15" fill="rgb(207,103,19)"/><text x="485.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.36%)</title><rect x="486" y="244" width="4" height="15" fill="rgb(219,74,13)"/><text x="489.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.36%)</title><rect x="486" y="260" width="4" height="15" fill="rgb(239,219,11)"/><text x="489.00" y="270.50"></text></g><g><title>0x7f55ab8376c2 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="486" y="276" width="4" height="15" fill="rgb(248,142,2)"/><text x="489.00" y="286.50"></text></g><g><title>0x7f5586316f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="486" y="196" width="8" height="15" fill="rgb(225,222,40)"/><text x="489.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="486" y="212" width="8" height="15" fill="rgb(217,131,27)"/><text x="489.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.73%)</title><rect x="486" y="228" width="8" height="15" fill="rgb(229,27,9)"/><text x="489.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.36%)</title><rect x="490" y="244" width="4" height="15" fill="rgb(225,124,42)"/><text x="493.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.36%)</title><rect x="490" y="260" width="4" height="15" fill="rgb(210,84,1)"/><text x="493.00" y="270.50"></text></g><g><title>0x7f55ab828998 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="490" y="276" width="4" height="15" fill="rgb(223,79,14)"/><text x="493.00" y="286.50"></text></g><g><title>0x7f5586316f9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="494" y="196" width="5" height="15" fill="rgb(221,60,40)"/><text x="497.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="494" y="212" width="5" height="15" fill="rgb(220,107,16)"/><text x="497.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.36%)</title><rect x="494" y="228" width="5" height="15" fill="rgb(230,163,0)"/><text x="497.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.36%)</title><rect x="494" y="244" width="5" height="15" fill="rgb(206,214,53)"/><text x="497.00" y="254.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.36%)</title><rect x="512" y="228" width="4" height="15" fill="rgb(218,169,10)"/><text x="515.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.36%)</title><rect x="512" y="244" width="4" height="15" fill="rgb(253,68,15)"/><text x="515.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.36%)</title><rect x="512" y="260" width="4" height="15" fill="rgb(211,62,6)"/><text x="515.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.36%)</title><rect x="512" y="276" width="4" height="15" fill="rgb(232,181,49)"/><text x="515.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.36%)</title><rect x="512" y="292" width="4" height="15" fill="rgb(249,26,48)"/><text x="515.00" y="302.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (5 samples, 1.82%)</title><rect x="499" y="212" width="21" height="15" fill="rgb(210,166,38)"/><text x="502.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.36%)</title><rect x="516" y="228" width="4" height="15" fill="rgb(233,112,48)"/><text x="519.00" y="238.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.36%)</title><rect x="520" y="228" width="4" height="15" fill="rgb(235,101,5)"/><text x="523.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3276) (1 samples, 0.36%)</title><rect x="520" y="244" width="4" height="15" fill="rgb(221,174,7)"/><text x="523.00" y="254.50"></text></g><g><title>0x7f558631712f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.55%)</title><rect x="499" y="196" width="30" height="15" fill="rgb(233,6,46)"/><text x="502.00" y="206.50">0x..</text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.73%)</title><rect x="520" y="212" width="9" height="15" fill="rgb(243,219,27)"/><text x="523.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3432) (1 samples, 0.36%)</title><rect x="524" y="228" width="5" height="15" fill="rgb(207,112,47)"/><text x="527.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="524" y="244" width="5" height="15" fill="rgb(249,18,6)"/><text x="527.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.36%)</title><rect x="524" y="260" width="5" height="15" fill="rgb(213,164,30)"/><text x="527.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.36%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(237,88,43)"/><text x="532.00" y="254.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (3 samples, 1.09%)</title><rect x="529" y="212" width="13" height="15" fill="rgb(237,125,47)"/><text x="532.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (3 samples, 1.09%)</title><rect x="529" y="228" width="13" height="15" fill="rgb(206,189,15)"/><text x="532.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (2 samples, 0.73%)</title><rect x="533" y="244" width="9" height="15" fill="rgb(208,192,38)"/><text x="536.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.73%)</title><rect x="533" y="260" width="9" height="15" fill="rgb(254,16,28)"/><text x="536.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (2 samples, 0.73%)</title><rect x="533" y="276" width="9" height="15" fill="rgb(223,207,23)"/><text x="536.00" y="286.50"></text></g><g><title>0x7f558631746c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.45%)</title><rect x="529" y="196" width="17" height="15" fill="rgb(211,159,21)"/><text x="532.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.36%)</title><rect x="542" y="212" width="4" height="15" fill="rgb(207,99,14)"/><text x="545.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.36%)</title><rect x="542" y="228" width="4" height="15" fill="rgb(225,147,32)"/><text x="545.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.36%)</title><rect x="542" y="244" width="4" height="15" fill="rgb(241,8,53)"/><text x="545.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.36%)</title><rect x="542" y="260" width="4" height="15" fill="rgb(237,196,39)"/><text x="545.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.36%)</title><rect x="542" y="276" width="4" height="15" fill="rgb(249,170,46)"/><text x="545.00" y="286.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:168) (1 samples, 0.36%)</title><rect x="542" y="292" width="4" height="15" fill="rgb(244,119,52)"/><text x="545.00" y="302.50"></text></g><g><title>0x7f5586317505 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="546" y="196" width="4" height="15" fill="rgb(219,136,48)"/><text x="549.00" y="206.50"></text></g><g><title>array_getbuffer (buffer.c:753) (1 samples, 0.36%)</title><rect x="550" y="228" width="4" height="15" fill="rgb(205,93,8)"/><text x="553.00" y="238.50"></text></g><g><title>0x7f5586317528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="550" y="196" width="9" height="15" fill="rgb(229,148,50)"/><text x="553.00" y="206.50"></text></g><g><title>0x7f5586300e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="550" y="212" width="9" height="15" fill="rgb(234,70,20)"/><text x="553.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.36%)</title><rect x="554" y="228" width="5" height="15" fill="rgb(228,161,34)"/><text x="557.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.36%)</title><rect x="554" y="244" width="5" height="15" fill="rgb(207,203,27)"/><text x="557.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.36%)</title><rect x="554" y="260" width="5" height="15" fill="rgb(253,184,10)"/><text x="557.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="554" y="276" width="5" height="15" fill="rgb(222,70,35)"/><text x="557.00" y="286.50"></text></g><g><title>0x7f55ab82898c (libc-2.29.so) (1 samples, 0.36%)</title><rect x="563" y="244" width="4" height="15" fill="rgb(219,115,10)"/><text x="566.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.36%)</title><rect x="567" y="244" width="5" height="15" fill="rgb(210,109,35)"/><text x="570.00" y="254.50"></text></g><g><title>0x7f55ab9faba0 (libm-2.29.so) (1 samples, 0.36%)</title><rect x="567" y="260" width="5" height="15" fill="rgb(238,201,30)"/><text x="570.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.36%)</title><rect x="572" y="244" width="4" height="15" fill="rgb(220,22,53)"/><text x="575.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="576" y="244" width="4" height="15" fill="rgb(214,169,7)"/><text x="579.00" y="254.50"></text></g><g><title>0x7f55ab82a6db (libc-2.29.so) (1 samples, 0.36%)</title><rect x="576" y="260" width="4" height="15" fill="rgb(224,51,6)"/><text x="579.00" y="270.50"></text></g><g><title>0x7f5586317553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.18%)</title><rect x="559" y="196" width="25" height="15" fill="rgb(250,60,51)"/><text x="562.00" y="206.50">0..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.18%)</title><rect x="559" y="212" width="25" height="15" fill="rgb(228,143,30)"/><text x="562.00" y="222.50">c..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.18%)</title><rect x="559" y="228" width="25" height="15" fill="rgb(243,90,53)"/><text x="562.00" y="238.50">s..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="580" y="244" width="4" height="15" fill="rgb(217,6,33)"/><text x="583.00" y="254.50"></text></g><g><title>0x7f55863177b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="584" y="196" width="5" height="15" fill="rgb(216,150,11)"/><text x="587.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="584" y="212" width="5" height="15" fill="rgb(234,168,14)"/><text x="587.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="584" y="228" width="5" height="15" fill="rgb(243,71,5)"/><text x="587.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.36%)</title><rect x="584" y="244" width="5" height="15" fill="rgb(245,88,53)"/><text x="587.00" y="254.50"></text></g><g><title>0x7f5586317d7c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="589" y="196" width="4" height="15" fill="rgb(253,56,8)"/><text x="592.00" y="206.50"></text></g><g><title>0x7f55863188f6 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="593" y="196" width="4" height="15" fill="rgb(209,122,25)"/><text x="596.00" y="206.50"></text></g><g><title>0x7f55862fab05 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="593" y="212" width="4" height="15" fill="rgb(221,78,5)"/><text x="596.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.36%)</title><rect x="597" y="228" width="5" height="15" fill="rgb(228,25,29)"/><text x="600.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.36%)</title><rect x="597" y="244" width="5" height="15" fill="rgb(209,125,36)"/><text x="600.00" y="254.50"></text></g><g><title>0x7f55aaa4c0d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="597" y="260" width="5" height="15" fill="rgb(218,31,18)"/><text x="600.00" y="270.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (41 samples, 14.91%)</title><rect x="430" y="148" width="176" height="15" fill="rgb(214,71,10)"/><text x="433.00" y="158.50">_predict_proba (sklear..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (39 samples, 14.18%)</title><rect x="439" y="164" width="167" height="15" fill="rgb(248,25,35)"/><text x="442.00" y="174.50">_dense_predict_proba ..</text></g><g><title>0x7f55863193fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (36 samples, 13.09%)</title><rect x="451" y="180" width="155" height="15" fill="rgb(218,171,14)"/><text x="454.00" y="190.50">0x7f55863193fd (skl..</text></g><g><title>0x7f5586318d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="597" y="196" width="9" height="15" fill="rgb(212,150,33)"/><text x="600.00" y="206.50"></text></g><g><title>0x7f55863005ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="597" y="212" width="9" height="15" fill="rgb(233,218,32)"/><text x="600.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.36%)</title><rect x="602" y="228" width="4" height="15" fill="rgb(235,175,20)"/><text x="605.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.36%)</title><rect x="602" y="244" width="4" height="15" fill="rgb(251,191,12)"/><text x="605.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (132 samples, 48.00%)</title><rect x="44" y="132" width="566" height="15" fill="rgb(245,70,48)"/><text x="47.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (1 samples, 0.36%)</title><rect x="606" y="148" width="4" height="15" fill="rgb(209,221,22)"/><text x="609.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py:605) (1 samples, 0.36%)</title><rect x="606" y="164" width="4" height="15" fill="rgb(235,65,41)"/><text x="609.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:38) (141 samples, 51.27%)</title><rect x="10" y="52" width="605" height="15" fill="rgb(253,56,12)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:37) (141 samples, 51.27%)</title><rect x="10" y="68" width="605" height="15" fill="rgb(227,211,22)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:29) (140 samples, 50.91%)</title><rect x="14" y="84" width="601" height="15" fill="rgb(209,145,26)"/><text x="17.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23) (140 samples, 50.91%)</title><rect x="14" y="100" width="601" height="15" fill="rgb(219,87,13)"/><text x="17.00" y="110.50">profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (137 samples, 49.82%)</title><rect x="27" y="116" width="588" height="15" fill="rgb(236,97,43)"/><text x="30.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.36%)</title><rect x="610" y="132" width="5" height="15" fill="rgb(233,127,28)"/><text x="613.00" y="142.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.36%)</title><rect x="615" y="964" width="4" height="15" fill="rgb(222,54,27)"/><text x="618.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.36%)</title><rect x="615" y="980" width="4" height="15" fill="rgb(233,115,3)"/><text x="618.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.36%)</title><rect x="615" y="996" width="4" height="15" fill="rgb(246,108,32)"/><text x="618.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.36%)</title><rect x="615" y="1012" width="4" height="15" fill="rgb(206,77,1)"/><text x="618.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.36%)</title><rect x="615" y="1028" width="4" height="15" fill="rgb(210,149,24)"/><text x="618.00" y="1038.50"></text></g><g><title>0x7f55ab83ee60 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="615" y="1044" width="4" height="15" fill="rgb(215,191,46)"/><text x="618.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.73%)</title><rect x="615" y="580" width="8" height="15" fill="rgb(246,209,11)"/><text x="618.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="615" y="596" width="8" height="15" fill="rgb(234,207,10)"/><text x="618.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.73%)</title><rect x="615" y="612" width="8" height="15" fill="rgb(240,201,8)"/><text x="618.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="615" y="628" width="8" height="15" fill="rgb(208,42,41)"/><text x="618.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="615" y="644" width="8" height="15" fill="rgb(241,59,1)"/><text x="618.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="615" y="660" width="8" height="15" fill="rgb(224,78,3)"/><text x="618.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="615" y="676" width="8" height="15" fill="rgb(241,78,54)"/><text x="618.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="615" y="692" width="8" height="15" fill="rgb(217,166,10)"/><text x="618.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="615" y="708" width="8" height="15" fill="rgb(215,55,48)"/><text x="618.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.73%)</title><rect x="615" y="724" width="8" height="15" fill="rgb(240,182,21)"/><text x="618.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="615" y="740" width="8" height="15" fill="rgb(249,79,20)"/><text x="618.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="615" y="756" width="8" height="15" fill="rgb(208,206,33)"/><text x="618.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="615" y="772" width="8" height="15" fill="rgb(252,129,28)"/><text x="618.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="615" y="788" width="8" height="15" fill="rgb(220,80,1)"/><text x="618.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="615" y="804" width="8" height="15" fill="rgb(228,12,54)"/><text x="618.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.73%)</title><rect x="615" y="820" width="8" height="15" fill="rgb(211,193,48)"/><text x="618.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.73%)</title><rect x="615" y="836" width="8" height="15" fill="rgb(205,36,4)"/><text x="618.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.73%)</title><rect x="615" y="852" width="8" height="15" fill="rgb(254,116,25)"/><text x="618.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.73%)</title><rect x="615" y="868" width="8" height="15" fill="rgb(216,11,32)"/><text x="618.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.73%)</title><rect x="615" y="884" width="8" height="15" fill="rgb(219,186,21)"/><text x="618.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.73%)</title><rect x="615" y="900" width="8" height="15" fill="rgb(234,154,47)"/><text x="618.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.73%)</title><rect x="615" y="916" width="8" height="15" fill="rgb(247,83,28)"/><text x="618.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.73%)</title><rect x="615" y="932" width="8" height="15" fill="rgb(253,4,40)"/><text x="618.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.73%)</title><rect x="615" y="948" width="8" height="15" fill="rgb(221,227,17)"/><text x="618.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1390) (1 samples, 0.36%)</title><rect x="619" y="964" width="4" height="15" fill="rgb(243,4,5)"/><text x="622.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py:2) (3 samples, 1.09%)</title><rect x="615" y="148" width="12" height="15" fill="rgb(226,157,4)"/><text x="618.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="615" y="164" width="12" height="15" fill="rgb(242,229,9)"/><text x="618.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.09%)</title><rect x="615" y="180" width="12" height="15" fill="rgb(253,112,34)"/><text x="618.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="615" y="196" width="12" height="15" fill="rgb(246,132,53)"/><text x="618.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="615" y="212" width="12" height="15" fill="rgb(249,148,41)"/><text x="618.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="615" y="228" width="12" height="15" fill="rgb(254,221,48)"/><text x="618.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="615" y="244" width="12" height="15" fill="rgb(212,120,46)"/><text x="618.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="615" y="260" width="12" height="15" fill="rgb(242,124,45)"/><text x="618.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="615" y="276" width="12" height="15" fill="rgb(245,166,29)"/><text x="618.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.09%)</title><rect x="615" y="292" width="12" height="15" fill="rgb(232,156,41)"/><text x="618.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="615" y="308" width="12" height="15" fill="rgb(218,192,17)"/><text x="618.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="615" y="324" width="12" height="15" fill="rgb(237,123,17)"/><text x="618.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="615" y="340" width="12" height="15" fill="rgb(213,40,38)"/><text x="618.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="615" y="356" width="12" height="15" fill="rgb(230,74,50)"/><text x="618.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="615" y="372" width="12" height="15" fill="rgb(224,15,29)"/><text x="618.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.09%)</title><rect x="615" y="388" width="12" height="15" fill="rgb(216,152,53)"/><text x="618.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="615" y="404" width="12" height="15" fill="rgb(206,111,14)"/><text x="618.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="615" y="420" width="12" height="15" fill="rgb(248,203,32)"/><text x="618.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="615" y="436" width="12" height="15" fill="rgb(213,87,50)"/><text x="618.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="615" y="452" width="12" height="15" fill="rgb(233,215,45)"/><text x="618.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="615" y="468" width="12" height="15" fill="rgb(215,157,37)"/><text x="618.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.09%)</title><rect x="615" y="484" width="12" height="15" fill="rgb(239,107,48)"/><text x="618.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="615" y="500" width="12" height="15" fill="rgb(222,15,6)"/><text x="618.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="615" y="516" width="12" height="15" fill="rgb(212,33,5)"/><text x="618.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="615" y="532" width="12" height="15" fill="rgb(219,28,21)"/><text x="618.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="615" y="548" width="12" height="15" fill="rgb(236,60,46)"/><text x="618.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="615" y="564" width="12" height="15" fill="rgb(227,48,1)"/><text x="618.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:7) (1 samples, 0.36%)</title><rect x="623" y="580" width="4" height="15" fill="rgb(222,201,45)"/><text x="626.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="623" y="596" width="4" height="15" fill="rgb(235,3,15)"/><text x="626.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="623" y="612" width="4" height="15" fill="rgb(237,206,12)"/><text x="626.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="623" y="628" width="4" height="15" fill="rgb(205,79,13)"/><text x="626.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="623" y="644" width="4" height="15" fill="rgb(246,208,20)"/><text x="626.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="623" y="660" width="4" height="15" fill="rgb(230,14,23)"/><text x="626.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="623" y="676" width="4" height="15" fill="rgb(215,121,6)"/><text x="626.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="623" y="692" width="4" height="15" fill="rgb(217,143,22)"/><text x="626.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py:47) (1 samples, 0.36%)</title><rect x="623" y="708" width="4" height="15" fill="rgb(215,142,45)"/><text x="626.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="623" y="724" width="4" height="15" fill="rgb(216,153,39)"/><text x="626.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="623" y="740" width="4" height="15" fill="rgb(236,169,13)"/><text x="626.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="623" y="756" width="4" height="15" fill="rgb(237,2,4)"/><text x="626.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.36%)</title><rect x="627" y="340" width="5" height="15" fill="rgb(252,75,9)"/><text x="630.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="627" y="356" width="5" height="15" fill="rgb(245,79,16)"/><text x="630.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="627" y="372" width="5" height="15" fill="rgb(237,101,43)"/><text x="630.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="627" y="388" width="5" height="15" fill="rgb(253,110,37)"/><text x="630.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="627" y="404" width="5" height="15" fill="rgb(241,156,10)"/><text x="630.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="627" y="420" width="5" height="15" fill="rgb(224,4,52)"/><text x="630.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (1 samples, 0.36%)</title><rect x="627" y="436" width="5" height="15" fill="rgb(245,130,33)"/><text x="630.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="627" y="452" width="5" height="15" fill="rgb(245,212,41)"/><text x="630.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="627" y="468" width="5" height="15" fill="rgb(208,99,46)"/><text x="630.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="627" y="484" width="5" height="15" fill="rgb(214,121,39)"/><text x="630.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="627" y="500" width="5" height="15" fill="rgb(244,118,17)"/><text x="630.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="627" y="516" width="5" height="15" fill="rgb(244,20,24)"/><text x="630.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py:18) (1 samples, 0.36%)</title><rect x="627" y="532" width="5" height="15" fill="rgb(227,19,17)"/><text x="630.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="627" y="548" width="5" height="15" fill="rgb(244,5,54)"/><text x="630.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="627" y="564" width="5" height="15" fill="rgb(238,136,29)"/><text x="630.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="627" y="580" width="5" height="15" fill="rgb(254,80,47)"/><text x="630.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="627" y="596" width="5" height="15" fill="rgb(239,3,45)"/><text x="630.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="627" y="612" width="5" height="15" fill="rgb(236,194,47)"/><text x="630.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="627" y="628" width="5" height="15" fill="rgb(254,122,11)"/><text x="630.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="627" y="644" width="5" height="15" fill="rgb(234,99,43)"/><text x="630.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:223) (1 samples, 0.36%)</title><rect x="627" y="660" width="5" height="15" fill="rgb(248,68,4)"/><text x="630.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py:204) (1 samples, 0.36%)</title><rect x="627" y="676" width="5" height="15" fill="rgb(214,224,3)"/><text x="630.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.36%)</title><rect x="627" y="692" width="5" height="15" fill="rgb(231,194,16)"/><text x="630.00" y="702.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.36%)</title><rect x="627" y="708" width="5" height="15" fill="rgb(220,212,32)"/><text x="630.00" y="718.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.36%)</title><rect x="627" y="724" width="5" height="15" fill="rgb(205,225,42)"/><text x="630.00" y="734.50"></text></g><g><title>parse (sre_parse.py:938) (1 samples, 0.36%)</title><rect x="627" y="740" width="5" height="15" fill="rgb(231,72,22)"/><text x="630.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="627" y="756" width="5" height="15" fill="rgb(221,213,15)"/><text x="630.00" y="766.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="627" y="772" width="5" height="15" fill="rgb(219,59,25)"/><text x="630.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="627" y="788" width="5" height="15" fill="rgb(217,207,25)"/><text x="630.00" y="798.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="627" y="804" width="5" height="15" fill="rgb(236,192,3)"/><text x="630.00" y="814.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="627" y="820" width="5" height="15" fill="rgb(244,81,51)"/><text x="630.00" y="830.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.36%)</title><rect x="627" y="836" width="5" height="15" fill="rgb(220,98,24)"/><text x="630.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.36%)</title><rect x="627" y="852" width="5" height="15" fill="rgb(236,186,10)"/><text x="630.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.36%)</title><rect x="627" y="868" width="5" height="15" fill="rgb(207,191,38)"/><text x="630.00" y="878.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.36%)</title><rect x="627" y="884" width="5" height="15" fill="rgb(248,180,38)"/><text x="630.00" y="894.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:143) (1 samples, 0.36%)</title><rect x="632" y="916" width="4" height="15" fill="rgb(237,69,0)"/><text x="635.00" y="926.50"></text></g><g><title>fill (textwrap.py:391) (1 samples, 0.36%)</title><rect x="632" y="932" width="4" height="15" fill="rgb(211,158,27)"/><text x="635.00" y="942.50"></text></g><g><title>fill (textwrap.py:363) (1 samples, 0.36%)</title><rect x="632" y="948" width="4" height="15" fill="rgb(239,82,26)"/><text x="635.00" y="958.50"></text></g><g><title>wrap (textwrap.py:354) (1 samples, 0.36%)</title><rect x="632" y="964" width="4" height="15" fill="rgb(228,58,33)"/><text x="635.00" y="974.50"></text></g><g><title>_wrap_chunks (textwrap.py:259) (1 samples, 0.36%)</title><rect x="632" y="980" width="4" height="15" fill="rgb(249,214,42)"/><text x="635.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (2 samples, 0.73%)</title><rect x="632" y="628" width="8" height="15" fill="rgb(249,181,24)"/><text x="635.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="632" y="644" width="8" height="15" fill="rgb(239,214,3)"/><text x="635.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="632" y="660" width="8" height="15" fill="rgb(240,131,28)"/><text x="635.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="632" y="676" width="8" height="15" fill="rgb(227,193,5)"/><text x="635.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="632" y="692" width="8" height="15" fill="rgb(240,104,53)"/><text x="635.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="632" y="708" width="8" height="15" fill="rgb(213,22,53)"/><text x="635.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (2 samples, 0.73%)</title><rect x="632" y="724" width="8" height="15" fill="rgb(224,110,35)"/><text x="635.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="632" y="740" width="8" height="15" fill="rgb(214,209,5)"/><text x="635.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="632" y="756" width="8" height="15" fill="rgb(254,175,17)"/><text x="635.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="632" y="772" width="8" height="15" fill="rgb(249,51,31)"/><text x="635.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="632" y="788" width="8" height="15" fill="rgb(228,151,33)"/><text x="635.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="632" y="804" width="8" height="15" fill="rgb(237,208,32)"/><text x="635.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (2 samples, 0.73%)</title><rect x="632" y="820" width="8" height="15" fill="rgb(253,86,53)"/><text x="635.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="632" y="836" width="8" height="15" fill="rgb(233,139,8)"/><text x="635.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="632" y="852" width="8" height="15" fill="rgb(240,176,49)"/><text x="635.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="632" y="868" width="8" height="15" fill="rgb(224,228,35)"/><text x="635.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="632" y="884" width="8" height="15" fill="rgb(227,50,25)"/><text x="635.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="632" y="900" width="8" height="15" fill="rgb(228,129,8)"/><text x="635.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.36%)</title><rect x="636" y="916" width="4" height="15" fill="rgb(231,104,0)"/><text x="639.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="636" y="932" width="4" height="15" fill="rgb(212,210,20)"/><text x="639.00" y="942.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;:183) (1 samples, 0.36%)</title><rect x="636" y="948" width="4" height="15" fill="rgb(224,12,15)"/><text x="639.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.36%)</title><rect x="640" y="628" width="5" height="15" fill="rgb(220,162,24)"/><text x="643.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="644" width="5" height="15" fill="rgb(245,19,2)"/><text x="643.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="660" width="5" height="15" fill="rgb(213,93,24)"/><text x="643.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="676" width="5" height="15" fill="rgb(215,196,4)"/><text x="643.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="640" y="692" width="5" height="15" fill="rgb(206,161,44)"/><text x="643.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="708" width="5" height="15" fill="rgb(236,229,37)"/><text x="643.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.36%)</title><rect x="640" y="724" width="5" height="15" fill="rgb(231,111,51)"/><text x="643.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="740" width="5" height="15" fill="rgb(209,193,30)"/><text x="643.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="756" width="5" height="15" fill="rgb(239,12,43)"/><text x="643.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="772" width="5" height="15" fill="rgb(207,146,40)"/><text x="643.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="640" y="788" width="5" height="15" fill="rgb(244,109,51)"/><text x="643.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="804" width="5" height="15" fill="rgb(216,218,37)"/><text x="643.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.36%)</title><rect x="640" y="820" width="5" height="15" fill="rgb(242,2,51)"/><text x="643.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="836" width="5" height="15" fill="rgb(253,172,17)"/><text x="643.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="852" width="5" height="15" fill="rgb(250,121,0)"/><text x="643.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="868" width="5" height="15" fill="rgb(250,44,54)"/><text x="643.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="884" width="5" height="15" fill="rgb(228,77,44)"/><text x="643.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="900" width="5" height="15" fill="rgb(243,15,14)"/><text x="643.00" y="910.50"></text></g><g><title>0x7f55829af40e (?) (1 samples, 0.36%)</title><rect x="640" y="916" width="5" height="15" fill="rgb(221,150,6)"/><text x="643.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="932" width="5" height="15" fill="rgb(213,43,50)"/><text x="643.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="948" width="5" height="15" fill="rgb(248,22,8)"/><text x="643.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="964" width="5" height="15" fill="rgb(237,34,40)"/><text x="643.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="980" width="5" height="15" fill="rgb(222,28,45)"/><text x="643.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="996" width="5" height="15" fill="rgb(219,58,33)"/><text x="643.00" y="1006.50"></text></g><g><title>0x7f5582768cd2 (?) (1 samples, 0.36%)</title><rect x="640" y="1012" width="5" height="15" fill="rgb(218,91,25)"/><text x="643.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="1028" width="5" height="15" fill="rgb(210,125,49)"/><text x="643.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="1044" width="5" height="15" fill="rgb(222,2,47)"/><text x="643.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="1060" width="5" height="15" fill="rgb(217,54,51)"/><text x="643.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="1076" width="5" height="15" fill="rgb(222,140,14)"/><text x="643.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="1092" width="5" height="15" fill="rgb(254,86,23)"/><text x="643.00" y="1102.50"></text></g><g><title>0x7f5581e5e0e5 (?) (1 samples, 0.36%)</title><rect x="640" y="1108" width="5" height="15" fill="rgb(251,139,52)"/><text x="643.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="1124" width="5" height="15" fill="rgb(229,142,34)"/><text x="643.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="1140" width="5" height="15" fill="rgb(253,99,25)"/><text x="643.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="1156" width="5" height="15" fill="rgb(215,77,18)"/><text x="643.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="1172" width="5" height="15" fill="rgb(208,192,0)"/><text x="643.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="1188" width="5" height="15" fill="rgb(224,148,13)"/><text x="643.00" y="1198.50"></text></g><g><title>0x7f5581be2e68 (?) (1 samples, 0.36%)</title><rect x="640" y="1204" width="5" height="15" fill="rgb(214,44,41)"/><text x="643.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="1220" width="5" height="15" fill="rgb(239,141,12)"/><text x="643.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="1236" width="5" height="15" fill="rgb(223,17,3)"/><text x="643.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="1252" width="5" height="15" fill="rgb(214,58,4)"/><text x="643.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="1268" width="5" height="15" fill="rgb(228,164,50)"/><text x="643.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="1284" width="5" height="15" fill="rgb(228,163,12)"/><text x="643.00" y="1294.50"></text></g><g><title>0x7f55819732fb (?) (1 samples, 0.36%)</title><rect x="640" y="1300" width="5" height="15" fill="rgb(231,196,38)"/><text x="643.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="1316" width="5" height="15" fill="rgb(239,56,54)"/><text x="643.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="1332" width="5" height="15" fill="rgb(223,220,51)"/><text x="643.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="1348" width="5" height="15" fill="rgb(224,160,35)"/><text x="643.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="1364" width="5" height="15" fill="rgb(235,195,46)"/><text x="643.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="1380" width="5" height="15" fill="rgb(223,8,38)"/><text x="643.00" y="1390.50"></text></g><g><title>0x7f5581757153 (?) (1 samples, 0.36%)</title><rect x="640" y="1396" width="5" height="15" fill="rgb(211,205,13)"/><text x="643.00" y="1406.50"></text></g><g><title>0x7f5581755c13 (?) (1 samples, 0.36%)</title><rect x="640" y="1412" width="5" height="15" fill="rgb(214,97,3)"/><text x="643.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="640" y="1428" width="5" height="15" fill="rgb(208,155,17)"/><text x="643.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="640" y="1444" width="5" height="15" fill="rgb(231,104,46)"/><text x="643.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="640" y="1460" width="5" height="15" fill="rgb(245,87,14)"/><text x="643.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="640" y="1476" width="5" height="15" fill="rgb(247,134,49)"/><text x="643.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="640" y="1492" width="5" height="15" fill="rgb(210,176,37)"/><text x="643.00" y="1502.50"></text></g><g><title>0x7f55814b2181 (?) (1 samples, 0.36%)</title><rect x="640" y="1508" width="5" height="15" fill="rgb(249,31,49)"/><text x="643.00" y="1518.50"></text></g><g><title>0x7f55814b51c9 (?) (1 samples, 0.36%)</title><rect x="640" y="1524" width="5" height="15" fill="rgb(246,156,33)"/><text x="643.00" y="1534.50"></text></g><g><title>0x7f55814e1167 (?) (1 samples, 0.36%)</title><rect x="640" y="1540" width="5" height="15" fill="rgb(205,159,24)"/><text x="643.00" y="1550.50"></text></g><g><title>0x7f55814dcb64 (?) (1 samples, 0.36%)</title><rect x="640" y="1556" width="5" height="15" fill="rgb(208,1,17)"/><text x="643.00" y="1566.50"></text></g><g><title>0x7f55814c007b (?) (1 samples, 0.36%)</title><rect x="640" y="1572" width="5" height="15" fill="rgb(239,9,34)"/><text x="643.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.36%)</title><rect x="640" y="1588" width="5" height="15" fill="rgb(210,53,19)"/><text x="643.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.36%)</title><rect x="640" y="1604" width="5" height="15" fill="rgb(230,150,34)"/><text x="643.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.36%)</title><rect x="640" y="1620" width="5" height="15" fill="rgb(225,205,30)"/><text x="643.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:96) (1 samples, 0.36%)</title><rect x="640" y="1636" width="5" height="15" fill="rgb(244,136,38)"/><text x="643.00" y="1646.50"></text></g><g><title>join (posixpath.py:89) (1 samples, 0.36%)</title><rect x="640" y="1652" width="5" height="15" fill="rgb(248,205,35)"/><text x="643.00" y="1662.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.36%)</title><rect x="640" y="1668" width="5" height="15" fill="rgb(249,221,22)"/><text x="643.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.36%)</title><rect x="645" y="1012" width="4" height="15" fill="rgb(211,40,14)"/><text x="648.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="645" y="1028" width="4" height="15" fill="rgb(205,216,9)"/><text x="648.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="645" y="1044" width="4" height="15" fill="rgb(236,157,33)"/><text x="648.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="645" y="1060" width="4" height="15" fill="rgb(225,75,9)"/><text x="648.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="645" y="1076" width="4" height="15" fill="rgb(224,221,6)"/><text x="648.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="645" y="1092" width="4" height="15" fill="rgb(232,78,50)"/><text x="648.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="645" y="1108" width="4" height="15" fill="rgb(243,123,53)"/><text x="648.00" y="1118.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.36%)</title><rect x="649" y="1012" width="4" height="15" fill="rgb(242,106,12)"/><text x="652.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1028" width="4" height="15" fill="rgb(241,24,17)"/><text x="652.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1044" width="4" height="15" fill="rgb(249,69,9)"/><text x="652.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1060" width="4" height="15" fill="rgb(207,89,15)"/><text x="652.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1076" width="4" height="15" fill="rgb(227,74,45)"/><text x="652.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1092" width="4" height="15" fill="rgb(218,65,44)"/><text x="652.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.36%)</title><rect x="649" y="1108" width="4" height="15" fill="rgb(232,182,43)"/><text x="652.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1124" width="4" height="15" fill="rgb(230,6,32)"/><text x="652.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1140" width="4" height="15" fill="rgb(205,40,32)"/><text x="652.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1156" width="4" height="15" fill="rgb(227,177,49)"/><text x="652.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1172" width="4" height="15" fill="rgb(247,168,4)"/><text x="652.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1188" width="4" height="15" fill="rgb(254,113,50)"/><text x="652.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.36%)</title><rect x="649" y="1204" width="4" height="15" fill="rgb(232,102,20)"/><text x="652.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1220" width="4" height="15" fill="rgb(234,160,20)"/><text x="652.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1236" width="4" height="15" fill="rgb(231,131,33)"/><text x="652.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1252" width="4" height="15" fill="rgb(235,60,36)"/><text x="652.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1268" width="4" height="15" fill="rgb(213,156,3)"/><text x="652.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1284" width="4" height="15" fill="rgb(227,59,6)"/><text x="652.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.36%)</title><rect x="649" y="1300" width="4" height="15" fill="rgb(245,193,35)"/><text x="652.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1316" width="4" height="15" fill="rgb(227,31,41)"/><text x="652.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1332" width="4" height="15" fill="rgb(230,116,26)"/><text x="652.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1348" width="4" height="15" fill="rgb(243,2,44)"/><text x="652.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1364" width="4" height="15" fill="rgb(243,16,43)"/><text x="652.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1380" width="4" height="15" fill="rgb(222,90,11)"/><text x="652.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.36%)</title><rect x="649" y="1396" width="4" height="15" fill="rgb(221,191,30)"/><text x="652.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1412" width="4" height="15" fill="rgb(217,216,41)"/><text x="652.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1428" width="4" height="15" fill="rgb(224,147,35)"/><text x="652.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1444" width="4" height="15" fill="rgb(205,183,37)"/><text x="652.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1460" width="4" height="15" fill="rgb(254,154,41)"/><text x="652.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1476" width="4" height="15" fill="rgb(222,11,17)"/><text x="652.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.36%)</title><rect x="649" y="1492" width="4" height="15" fill="rgb(221,217,18)"/><text x="652.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1508" width="4" height="15" fill="rgb(228,228,31)"/><text x="652.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1524" width="4" height="15" fill="rgb(239,185,7)"/><text x="652.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1540" width="4" height="15" fill="rgb(206,180,53)"/><text x="652.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1556" width="4" height="15" fill="rgb(231,78,27)"/><text x="652.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1572" width="4" height="15" fill="rgb(235,205,47)"/><text x="652.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.36%)</title><rect x="649" y="1588" width="4" height="15" fill="rgb(240,31,12)"/><text x="652.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1604" width="4" height="15" fill="rgb(243,228,51)"/><text x="652.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1620" width="4" height="15" fill="rgb(205,208,20)"/><text x="652.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1636" width="4" height="15" fill="rgb(233,130,14)"/><text x="652.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1652" width="4" height="15" fill="rgb(247,145,28)"/><text x="652.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1668" width="4" height="15" fill="rgb(234,20,35)"/><text x="652.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.36%)</title><rect x="649" y="1684" width="4" height="15" fill="rgb(224,143,23)"/><text x="652.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1700" width="4" height="15" fill="rgb(206,154,50)"/><text x="652.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1716" width="4" height="15" fill="rgb(249,45,25)"/><text x="652.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1732" width="4" height="15" fill="rgb(235,217,31)"/><text x="652.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1748" width="4" height="15" fill="rgb(232,166,41)"/><text x="652.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1764" width="4" height="15" fill="rgb(207,62,27)"/><text x="652.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.36%)</title><rect x="649" y="1780" width="4" height="15" fill="rgb(254,204,34)"/><text x="652.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="649" y="1796" width="4" height="15" fill="rgb(215,222,8)"/><text x="652.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="649" y="1812" width="4" height="15" fill="rgb(240,224,11)"/><text x="652.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="649" y="1828" width="4" height="15" fill="rgb(232,142,36)"/><text x="652.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="649" y="1844" width="4" height="15" fill="rgb(236,25,14)"/><text x="652.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="649" y="1860" width="4" height="15" fill="rgb(244,13,47)"/><text x="652.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1249) (1 samples, 0.36%)</title><rect x="649" y="1876" width="4" height="15" fill="rgb(209,197,48)"/><text x="652.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.36%)</title><rect x="649" y="1892" width="4" height="15" fill="rgb(214,168,48)"/><text x="652.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.36%)</title><rect x="649" y="1908" width="4" height="15" fill="rgb(243,50,18)"/><text x="652.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.36%)</title><rect x="649" y="1924" width="4" height="15" fill="rgb(233,31,10)"/><text x="652.00" y="1934.50"></text></g><g><title>search (re.py:183) (1 samples, 0.36%)</title><rect x="649" y="1940" width="4" height="15" fill="rgb(237,36,42)"/><text x="652.00" y="1950.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.36%)</title><rect x="649" y="1956" width="4" height="15" fill="rgb(215,15,38)"/><text x="652.00" y="1966.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.36%)</title><rect x="649" y="1972" width="4" height="15" fill="rgb(247,35,30)"/><text x="652.00" y="1982.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.36%)</title><rect x="649" y="1988" width="4" height="15" fill="rgb(227,125,38)"/><text x="652.00" y="1998.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.36%)</title><rect x="649" y="2004" width="4" height="15" fill="rgb(210,90,25)"/><text x="652.00" y="2014.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.36%)</title><rect x="649" y="2020" width="4" height="15" fill="rgb(236,26,10)"/><text x="652.00" y="2030.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (6 samples, 2.18%)</title><rect x="632" y="436" width="25" height="15" fill="rgb(243,148,51)"/><text x="635.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.18%)</title><rect x="632" y="452" width="25" height="15" fill="rgb(221,89,8)"/><text x="635.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.18%)</title><rect x="632" y="468" width="25" height="15" fill="rgb(248,17,31)"/><text x="635.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.18%)</title><rect x="632" y="484" width="25" height="15" fill="rgb(244,92,31)"/><text x="635.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.18%)</title><rect x="632" y="500" width="25" height="15" fill="rgb(234,120,33)"/><text x="635.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.18%)</title><rect x="632" y="516" width="25" height="15" fill="rgb(233,169,12)"/><text x="635.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (6 samples, 2.18%)</title><rect x="632" y="532" width="25" height="15" fill="rgb(238,11,13)"/><text x="635.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.18%)</title><rect x="632" y="548" width="25" height="15" fill="rgb(227,228,36)"/><text x="635.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.18%)</title><rect x="632" y="564" width="25" height="15" fill="rgb(217,141,47)"/><text x="635.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.18%)</title><rect x="632" y="580" width="25" height="15" fill="rgb(228,10,17)"/><text x="635.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.18%)</title><rect x="632" y="596" width="25" height="15" fill="rgb(228,51,42)"/><text x="635.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.18%)</title><rect x="632" y="612" width="25" height="15" fill="rgb(225,23,52)"/><text x="635.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 1.09%)</title><rect x="645" y="628" width="12" height="15" fill="rgb(219,110,53)"/><text x="648.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="645" y="644" width="12" height="15" fill="rgb(234,192,43)"/><text x="648.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="645" y="660" width="12" height="15" fill="rgb(226,194,40)"/><text x="648.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="645" y="676" width="12" height="15" fill="rgb(224,82,39)"/><text x="648.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="645" y="692" width="12" height="15" fill="rgb(226,82,4)"/><text x="648.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="645" y="708" width="12" height="15" fill="rgb(213,119,27)"/><text x="648.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.09%)</title><rect x="645" y="724" width="12" height="15" fill="rgb(234,123,36)"/><text x="648.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="645" y="740" width="12" height="15" fill="rgb(231,28,50)"/><text x="648.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="645" y="756" width="12" height="15" fill="rgb(222,59,49)"/><text x="648.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="645" y="772" width="12" height="15" fill="rgb(212,100,43)"/><text x="648.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="645" y="788" width="12" height="15" fill="rgb(234,203,15)"/><text x="648.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="645" y="804" width="12" height="15" fill="rgb(214,71,19)"/><text x="648.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.09%)</title><rect x="645" y="820" width="12" height="15" fill="rgb(237,118,1)"/><text x="648.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="645" y="836" width="12" height="15" fill="rgb(240,68,11)"/><text x="648.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="645" y="852" width="12" height="15" fill="rgb(223,94,44)"/><text x="648.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="645" y="868" width="12" height="15" fill="rgb(232,153,21)"/><text x="648.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="645" y="884" width="12" height="15" fill="rgb(219,156,19)"/><text x="648.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="645" y="900" width="12" height="15" fill="rgb(210,76,20)"/><text x="648.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 1.09%)</title><rect x="645" y="916" width="12" height="15" fill="rgb(211,7,26)"/><text x="648.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.09%)</title><rect x="645" y="932" width="12" height="15" fill="rgb(218,78,35)"/><text x="648.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.09%)</title><rect x="645" y="948" width="12" height="15" fill="rgb(250,129,49)"/><text x="648.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.09%)</title><rect x="645" y="964" width="12" height="15" fill="rgb(230,64,29)"/><text x="648.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.09%)</title><rect x="645" y="980" width="12" height="15" fill="rgb(245,183,50)"/><text x="648.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.09%)</title><rect x="645" y="996" width="12" height="15" fill="rgb(232,177,3)"/><text x="648.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.36%)</title><rect x="653" y="1012" width="4" height="15" fill="rgb(249,131,38)"/><text x="656.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="653" y="1028" width="4" height="15" fill="rgb(247,174,28)"/><text x="656.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="653" y="1044" width="4" height="15" fill="rgb(215,90,8)"/><text x="656.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="653" y="1060" width="4" height="15" fill="rgb(244,2,2)"/><text x="656.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="653" y="1076" width="4" height="15" fill="rgb(207,179,37)"/><text x="656.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="653" y="1092" width="4" height="15" fill="rgb(223,69,44)"/><text x="656.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:66) (1 samples, 0.36%)</title><rect x="653" y="1108" width="4" height="15" fill="rgb(209,52,15)"/><text x="656.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="653" y="1124" width="4" height="15" fill="rgb(213,38,53)"/><text x="656.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="653" y="1140" width="4" height="15" fill="rgb(233,207,0)"/><text x="656.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="653" y="1156" width="4" height="15" fill="rgb(244,186,32)"/><text x="656.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="653" y="1172" width="4" height="15" fill="rgb(242,48,9)"/><text x="656.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="653" y="1188" width="4" height="15" fill="rgb(228,183,22)"/><text x="656.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="653" y="1204" width="4" height="15" fill="rgb(223,152,16)"/><text x="656.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.36%)</title><rect x="657" y="1108" width="5" height="15" fill="rgb(223,63,22)"/><text x="660.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="657" y="1124" width="5" height="15" fill="rgb(211,63,22)"/><text x="660.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="657" y="1140" width="5" height="15" fill="rgb(215,189,31)"/><text x="660.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="657" y="1156" width="5" height="15" fill="rgb(251,177,15)"/><text x="660.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="657" y="1172" width="5" height="15" fill="rgb(247,129,49)"/><text x="660.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="657" y="1188" width="5" height="15" fill="rgb(205,72,16)"/><text x="660.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.36%)</title><rect x="657" y="1204" width="5" height="15" fill="rgb(224,87,44)"/><text x="660.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="657" y="1220" width="5" height="15" fill="rgb(246,188,37)"/><text x="660.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="657" y="1236" width="5" height="15" fill="rgb(244,159,4)"/><text x="660.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="657" y="1252" width="5" height="15" fill="rgb(252,96,19)"/><text x="660.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="657" y="1268" width="5" height="15" fill="rgb(218,87,9)"/><text x="660.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="657" y="1284" width="5" height="15" fill="rgb(221,119,27)"/><text x="660.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="657" y="1300" width="5" height="15" fill="rgb(254,196,28)"/><text x="660.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="657" y="1316" width="5" height="15" fill="rgb(235,123,16)"/><text x="660.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="657" y="1332" width="5" height="15" fill="rgb(213,126,46)"/><text x="660.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:19) (1 samples, 0.36%)</title><rect x="657" y="1348" width="5" height="15" fill="rgb(217,97,37)"/><text x="660.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="657" y="1364" width="5" height="15" fill="rgb(218,181,35)"/><text x="660.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="657" y="1380" width="5" height="15" fill="rgb(233,45,7)"/><text x="660.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="657" y="1396" width="5" height="15" fill="rgb(216,60,3)"/><text x="660.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="657" y="1412" width="5" height="15" fill="rgb(218,40,31)"/><text x="660.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="657" y="1428" width="5" height="15" fill="rgb(207,159,16)"/><text x="660.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="657" y="1444" width="5" height="15" fill="rgb(232,89,1)"/><text x="660.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.36%)</title><rect x="662" y="1108" width="4" height="15" fill="rgb(224,6,46)"/><text x="665.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="662" y="1124" width="4" height="15" fill="rgb(214,96,51)"/><text x="665.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="662" y="1140" width="4" height="15" fill="rgb(212,159,47)"/><text x="665.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="662" y="1156" width="4" height="15" fill="rgb(251,217,1)"/><text x="665.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="662" y="1172" width="4" height="15" fill="rgb(251,113,22)"/><text x="665.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="662" y="1188" width="4" height="15" fill="rgb(226,200,11)"/><text x="665.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.36%)</title><rect x="662" y="1204" width="4" height="15" fill="rgb(239,59,53)"/><text x="665.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="662" y="1220" width="4" height="15" fill="rgb(223,51,40)"/><text x="665.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="662" y="1236" width="4" height="15" fill="rgb(234,74,4)"/><text x="665.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="662" y="1252" width="4" height="15" fill="rgb(231,146,20)"/><text x="665.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="662" y="1268" width="4" height="15" fill="rgb(209,115,27)"/><text x="665.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="662" y="1284" width="4" height="15" fill="rgb(218,200,11)"/><text x="665.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:9) (1 samples, 0.36%)</title><rect x="662" y="1300" width="4" height="15" fill="rgb(238,133,8)"/><text x="665.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="662" y="1316" width="4" height="15" fill="rgb(233,191,45)"/><text x="665.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="662" y="1332" width="4" height="15" fill="rgb(241,116,39)"/><text x="665.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="662" y="1348" width="4" height="15" fill="rgb(211,102,34)"/><text x="665.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="662" y="1364" width="4" height="15" fill="rgb(248,134,18)"/><text x="665.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="662" y="1380" width="4" height="15" fill="rgb(230,63,52)"/><text x="665.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py:7) (1 samples, 0.36%)</title><rect x="662" y="1396" width="4" height="15" fill="rgb(216,32,53)"/><text x="665.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="662" y="1412" width="4" height="15" fill="rgb(251,77,28)"/><text x="665.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="662" y="1428" width="4" height="15" fill="rgb(225,135,42)"/><text x="665.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="662" y="1444" width="4" height="15" fill="rgb(232,129,0)"/><text x="665.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="662" y="1460" width="4" height="15" fill="rgb(210,178,13)"/><text x="665.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="662" y="1476" width="4" height="15" fill="rgb(230,147,49)"/><text x="665.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="662" y="1492" width="4" height="15" fill="rgb(236,204,35)"/><text x="665.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.36%)</title><rect x="666" y="1460" width="4" height="15" fill="rgb(243,228,29)"/><text x="669.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.36%)</title><rect x="666" y="1476" width="4" height="15" fill="rgb(206,58,37)"/><text x="669.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.36%)</title><rect x="666" y="1492" width="4" height="15" fill="rgb(217,58,3)"/><text x="669.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.36%)</title><rect x="666" y="1508" width="4" height="15" fill="rgb(221,33,22)"/><text x="669.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.36%)</title><rect x="666" y="1524" width="4" height="15" fill="rgb(208,13,27)"/><text x="669.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.36%)</title><rect x="666" y="1540" width="4" height="15" fill="rgb(251,221,36)"/><text x="669.00" y="1550.50"></text></g><g><title>new_context (jinja2/environment.py:1063) (1 samples, 0.36%)</title><rect x="666" y="1556" width="4" height="15" fill="rgb(226,43,4)"/><text x="669.00" y="1566.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:4) (14 samples, 5.09%)</title><rect x="615" y="52" width="60" height="15" fill="rgb(205,50,8)"/><text x="618.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 5.09%)</title><rect x="615" y="68" width="60" height="15" fill="rgb(228,1,38)"/><text x="618.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 5.09%)</title><rect x="615" y="84" width="60" height="15" fill="rgb(205,112,3)"/><text x="618.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 5.09%)</title><rect x="615" y="100" width="60" height="15" fill="rgb(209,18,42)"/><text x="618.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 5.09%)</title><rect x="615" y="116" width="60" height="15" fill="rgb(209,169,14)"/><text x="618.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 5.09%)</title><rect x="615" y="132" width="60" height="15" fill="rgb(235,94,11)"/><text x="618.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py:7) (11 samples, 4.00%)</title><rect x="627" y="148" width="48" height="15" fill="rgb(234,92,54)"/><text x="630.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 4.00%)</title><rect x="627" y="164" width="48" height="15" fill="rgb(226,185,42)"/><text x="630.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 4.00%)</title><rect x="627" y="180" width="48" height="15" fill="rgb(237,13,18)"/><text x="630.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 4.00%)</title><rect x="627" y="196" width="48" height="15" fill="rgb(237,189,26)"/><text x="630.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 4.00%)</title><rect x="627" y="212" width="48" height="15" fill="rgb(238,182,37)"/><text x="630.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 4.00%)</title><rect x="627" y="228" width="48" height="15" fill="rgb(233,97,53)"/><text x="630.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (11 samples, 4.00%)</title><rect x="627" y="244" width="48" height="15" fill="rgb(231,107,17)"/><text x="630.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 4.00%)</title><rect x="627" y="260" width="48" height="15" fill="rgb(230,87,41)"/><text x="630.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 4.00%)</title><rect x="627" y="276" width="48" height="15" fill="rgb(235,201,3)"/><text x="630.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 4.00%)</title><rect x="627" y="292" width="48" height="15" fill="rgb(224,160,18)"/><text x="630.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 4.00%)</title><rect x="627" y="308" width="48" height="15" fill="rgb(214,143,23)"/><text x="630.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 4.00%)</title><rect x="627" y="324" width="48" height="15" fill="rgb(242,124,33)"/><text x="630.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (10 samples, 3.64%)</title><rect x="632" y="340" width="43" height="15" fill="rgb(227,194,40)"/><text x="635.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.64%)</title><rect x="632" y="356" width="43" height="15" fill="rgb(237,62,33)"/><text x="635.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.64%)</title><rect x="632" y="372" width="43" height="15" fill="rgb(247,165,29)"/><text x="635.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.64%)</title><rect x="632" y="388" width="43" height="15" fill="rgb(240,85,42)"/><text x="635.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.64%)</title><rect x="632" y="404" width="43" height="15" fill="rgb(241,137,40)"/><text x="635.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.64%)</title><rect x="632" y="420" width="43" height="15" fill="rgb(252,156,32)"/><text x="635.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.45%)</title><rect x="657" y="436" width="18" height="15" fill="rgb(227,33,22)"/><text x="660.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="452" width="18" height="15" fill="rgb(215,219,9)"/><text x="660.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.45%)</title><rect x="657" y="468" width="18" height="15" fill="rgb(241,99,34)"/><text x="660.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="484" width="18" height="15" fill="rgb(231,196,46)"/><text x="660.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="500" width="18" height="15" fill="rgb(253,22,27)"/><text x="660.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.45%)</title><rect x="657" y="516" width="18" height="15" fill="rgb(247,49,50)"/><text x="660.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.45%)</title><rect x="657" y="532" width="18" height="15" fill="rgb(211,54,49)"/><text x="660.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.45%)</title><rect x="657" y="548" width="18" height="15" fill="rgb(216,177,20)"/><text x="660.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="564" width="18" height="15" fill="rgb(241,111,14)"/><text x="660.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.45%)</title><rect x="657" y="580" width="18" height="15" fill="rgb(224,51,29)"/><text x="660.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="596" width="18" height="15" fill="rgb(247,201,26)"/><text x="660.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.45%)</title><rect x="657" y="612" width="18" height="15" fill="rgb(213,176,20)"/><text x="660.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.45%)</title><rect x="657" y="628" width="18" height="15" fill="rgb(208,174,37)"/><text x="660.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.45%)</title><rect x="657" y="644" width="18" height="15" fill="rgb(221,176,8)"/><text x="660.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="660" width="18" height="15" fill="rgb(244,62,35)"/><text x="660.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.45%)</title><rect x="657" y="676" width="18" height="15" fill="rgb(216,12,31)"/><text x="660.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="692" width="18" height="15" fill="rgb(234,73,23)"/><text x="660.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.45%)</title><rect x="657" y="708" width="18" height="15" fill="rgb(216,97,30)"/><text x="660.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.45%)</title><rect x="657" y="724" width="18" height="15" fill="rgb(247,97,43)"/><text x="660.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.45%)</title><rect x="657" y="740" width="18" height="15" fill="rgb(226,23,41)"/><text x="660.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="756" width="18" height="15" fill="rgb(208,27,38)"/><text x="660.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.45%)</title><rect x="657" y="772" width="18" height="15" fill="rgb(235,79,48)"/><text x="660.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="788" width="18" height="15" fill="rgb(211,62,39)"/><text x="660.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.45%)</title><rect x="657" y="804" width="18" height="15" fill="rgb(237,90,9)"/><text x="660.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.45%)</title><rect x="657" y="820" width="18" height="15" fill="rgb(213,141,26)"/><text x="660.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.45%)</title><rect x="657" y="836" width="18" height="15" fill="rgb(227,170,1)"/><text x="660.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="852" width="18" height="15" fill="rgb(232,195,25)"/><text x="660.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.45%)</title><rect x="657" y="868" width="18" height="15" fill="rgb(207,187,19)"/><text x="660.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="884" width="18" height="15" fill="rgb(252,199,22)"/><text x="660.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.45%)</title><rect x="657" y="900" width="18" height="15" fill="rgb(225,185,42)"/><text x="660.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="916" width="18" height="15" fill="rgb(229,174,20)"/><text x="660.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="932" width="18" height="15" fill="rgb(245,158,41)"/><text x="660.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.45%)</title><rect x="657" y="948" width="18" height="15" fill="rgb(214,148,1)"/><text x="660.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.45%)</title><rect x="657" y="964" width="18" height="15" fill="rgb(208,105,21)"/><text x="660.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.45%)</title><rect x="657" y="980" width="18" height="15" fill="rgb(232,67,41)"/><text x="660.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="996" width="18" height="15" fill="rgb(235,161,15)"/><text x="660.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.45%)</title><rect x="657" y="1012" width="18" height="15" fill="rgb(216,106,44)"/><text x="660.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.45%)</title><rect x="657" y="1028" width="18" height="15" fill="rgb(231,86,51)"/><text x="660.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.45%)</title><rect x="657" y="1044" width="18" height="15" fill="rgb(218,171,10)"/><text x="660.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.45%)</title><rect x="657" y="1060" width="18" height="15" fill="rgb(238,168,15)"/><text x="660.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.45%)</title><rect x="657" y="1076" width="18" height="15" fill="rgb(243,119,7)"/><text x="660.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.45%)</title><rect x="657" y="1092" width="18" height="15" fill="rgb(240,10,26)"/><text x="660.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.73%)</title><rect x="666" y="1108" width="9" height="15" fill="rgb(252,195,11)"/><text x="669.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="666" y="1124" width="9" height="15" fill="rgb(247,62,32)"/><text x="669.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="666" y="1140" width="9" height="15" fill="rgb(212,186,37)"/><text x="669.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="666" y="1156" width="9" height="15" fill="rgb(207,152,20)"/><text x="669.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="666" y="1172" width="9" height="15" fill="rgb(233,49,7)"/><text x="669.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="666" y="1188" width="9" height="15" fill="rgb(207,200,46)"/><text x="669.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="666" y="1204" width="9" height="15" fill="rgb(211,35,25)"/><text x="669.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="666" y="1220" width="9" height="15" fill="rgb(245,226,46)"/><text x="669.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.73%)</title><rect x="666" y="1236" width="9" height="15" fill="rgb(246,219,38)"/><text x="669.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="666" y="1252" width="9" height="15" fill="rgb(226,42,2)"/><text x="669.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="666" y="1268" width="9" height="15" fill="rgb(254,162,38)"/><text x="669.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="666" y="1284" width="9" height="15" fill="rgb(220,194,25)"/><text x="669.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="666" y="1300" width="9" height="15" fill="rgb(223,20,0)"/><text x="669.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="666" y="1316" width="9" height="15" fill="rgb(235,67,20)"/><text x="669.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="666" y="1332" width="9" height="15" fill="rgb(251,173,12)"/><text x="669.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="666" y="1348" width="9" height="15" fill="rgb(225,9,2)"/><text x="669.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.73%)</title><rect x="666" y="1364" width="9" height="15" fill="rgb(241,89,33)"/><text x="669.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="666" y="1380" width="9" height="15" fill="rgb(243,155,10)"/><text x="669.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="666" y="1396" width="9" height="15" fill="rgb(239,134,50)"/><text x="669.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="666" y="1412" width="9" height="15" fill="rgb(226,72,39)"/><text x="669.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="666" y="1428" width="9" height="15" fill="rgb(216,129,6)"/><text x="669.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="666" y="1444" width="9" height="15" fill="rgb(224,223,0)"/><text x="669.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.36%)</title><rect x="670" y="1460" width="5" height="15" fill="rgb(215,125,12)"/><text x="673.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="670" y="1476" width="5" height="15" fill="rgb(242,56,31)"/><text x="673.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="670" y="1492" width="5" height="15" fill="rgb(237,162,51)"/><text x="673.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="670" y="1508" width="5" height="15" fill="rgb(242,149,16)"/><text x="673.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="670" y="1524" width="5" height="15" fill="rgb(252,16,18)"/><text x="673.00" y="1534.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="670" y="1540" width="5" height="15" fill="rgb(236,157,46)"/><text x="673.00" y="1550.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="670" y="1556" width="5" height="15" fill="rgb(237,42,5)"/><text x="673.00" y="1566.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.36%)</title><rect x="683" y="116" width="4" height="15" fill="rgb(242,34,51)"/><text x="686.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="687" y="116" width="5" height="15" fill="rgb(211,115,27)"/><text x="690.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="687" y="132" width="5" height="15" fill="rgb(217,92,22)"/><text x="690.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.36%)</title><rect x="687" y="148" width="5" height="15" fill="rgb(220,14,22)"/><text x="690.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.36%)</title><rect x="700" y="148" width="5" height="15" fill="rgb(217,0,25)"/><text x="703.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.36%)</title><rect x="705" y="148" width="4" height="15" fill="rgb(254,5,25)"/><text x="708.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.36%)</title><rect x="722" y="164" width="4" height="15" fill="rgb(245,170,19)"/><text x="725.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.36%)</title><rect x="726" y="164" width="4" height="15" fill="rgb(224,223,19)"/><text x="729.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.36%)</title><rect x="735" y="180" width="4" height="15" fill="rgb(224,207,54)"/><text x="738.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.73%)</title><rect x="739" y="180" width="9" height="15" fill="rgb(247,191,39)"/><text x="742.00" y="190.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.36%)</title><rect x="778" y="324" width="4" height="15" fill="rgb(237,173,2)"/><text x="781.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.36%)</title><rect x="778" y="340" width="4" height="15" fill="rgb(227,80,6)"/><text x="781.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.36%)</title><rect x="778" y="356" width="4" height="15" fill="rgb(250,206,24)"/><text x="781.00" y="366.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.73%)</title><rect x="778" y="244" width="8" height="15" fill="rgb(218,167,5)"/><text x="781.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.73%)</title><rect x="778" y="260" width="8" height="15" fill="rgb(242,123,37)"/><text x="781.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.73%)</title><rect x="778" y="276" width="8" height="15" fill="rgb(220,128,9)"/><text x="781.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.73%)</title><rect x="778" y="292" width="8" height="15" fill="rgb(237,70,40)"/><text x="781.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (2 samples, 0.73%)</title><rect x="778" y="308" width="8" height="15" fill="rgb(240,214,16)"/><text x="781.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.36%)</title><rect x="782" y="324" width="4" height="15" fill="rgb(217,84,0)"/><text x="785.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.36%)</title><rect x="782" y="340" width="4" height="15" fill="rgb(208,45,30)"/><text x="785.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.36%)</title><rect x="782" y="356" width="4" height="15" fill="rgb(249,191,39)"/><text x="785.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (6 samples, 2.18%)</title><rect x="765" y="212" width="25" height="15" fill="rgb(254,63,19)"/><text x="768.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (5 samples, 1.82%)</title><rect x="769" y="228" width="21" height="15" fill="rgb(216,69,49)"/><text x="772.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.36%)</title><rect x="786" y="244" width="4" height="15" fill="rgb(244,165,39)"/><text x="789.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.36%)</title><rect x="786" y="260" width="4" height="15" fill="rgb(254,82,52)"/><text x="789.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.36%)</title><rect x="786" y="276" width="4" height="15" fill="rgb(210,76,1)"/><text x="789.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.36%)</title><rect x="786" y="292" width="4" height="15" fill="rgb(253,161,15)"/><text x="789.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (10 samples, 3.64%)</title><rect x="756" y="196" width="43" height="15" fill="rgb(239,59,9)"/><text x="759.00" y="206.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.73%)</title><rect x="790" y="212" width="9" height="15" fill="rgb(242,94,2)"/><text x="793.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.36%)</title><rect x="795" y="228" width="4" height="15" fill="rgb(244,134,17)"/><text x="798.00" y="238.50"></text></g><g><title>0x7f556c997c29 (?) (1 samples, 0.36%)</title><rect x="803" y="244" width="5" height="15" fill="rgb(240,180,7)"/><text x="806.00" y="254.50"></text></g><g><title>0x7f556c99ed9e (?) (1 samples, 0.36%)</title><rect x="803" y="260" width="5" height="15" fill="rgb(244,2,5)"/><text x="806.00" y="270.50"></text></g><g><title>0x7f556c99ec56 (?) (1 samples, 0.36%)</title><rect x="803" y="276" width="5" height="15" fill="rgb(231,35,25)"/><text x="806.00" y="286.50"></text></g><g><title>0x7f556c9a4ac7 (?) (1 samples, 0.36%)</title><rect x="803" y="292" width="5" height="15" fill="rgb(234,87,9)"/><text x="806.00" y="302.50"></text></g><g><title>0x7f556c9a3ef4 (?) (1 samples, 0.36%)</title><rect x="803" y="308" width="5" height="15" fill="rgb(240,194,33)"/><text x="806.00" y="318.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:496) (1 samples, 0.36%)</title><rect x="808" y="244" width="4" height="15" fill="rgb(243,189,28)"/><text x="811.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h:287) (1 samples, 0.36%)</title><rect x="808" y="260" width="4" height="15" fill="rgb(243,84,1)"/><text x="811.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::reserve (vector.tcc:76) (1 samples, 0.36%)</title><rect x="808" y="276" width="4" height="15" fill="rgb(251,227,5)"/><text x="811.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="808" y="292" width="4" height="15" fill="rgb(237,87,51)"/><text x="811.00" y="302.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.36%)</title><rect x="812" y="276" width="4" height="15" fill="rgb(236,129,14)"/><text x="815.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.36%)</title><rect x="812" y="292" width="4" height="15" fill="rgb(228,146,7)"/><text x="815.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.36%)</title><rect x="812" y="308" width="4" height="15" fill="rgb(238,194,34)"/><text x="815.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.36%)</title><rect x="812" y="324" width="4" height="15" fill="rgb(245,187,24)"/><text x="815.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.36%)</title><rect x="812" y="340" width="4" height="15" fill="rgb(252,226,2)"/><text x="815.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.36%)</title><rect x="812" y="356" width="4" height="15" fill="rgb(223,197,38)"/><text x="815.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.36%)</title><rect x="812" y="372" width="4" height="15" fill="rgb(213,14,42)"/><text x="815.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.36%)</title><rect x="812" y="388" width="4" height="15" fill="rgb(219,123,44)"/><text x="815.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.36%)</title><rect x="812" y="404" width="4" height="15" fill="rgb(241,213,7)"/><text x="815.00" y="414.50"></text></g><g><title>0x7f559b2f57a0 (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="812" y="420" width="4" height="15" fill="rgb(254,132,48)"/><text x="815.00" y="430.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.36%)</title><rect x="816" y="276" width="4" height="15" fill="rgb(236,194,25)"/><text x="819.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.36%)</title><rect x="816" y="292" width="4" height="15" fill="rgb(206,209,21)"/><text x="819.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.36%)</title><rect x="816" y="308" width="4" height="15" fill="rgb(237,176,41)"/><text x="819.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.36%)</title><rect x="816" y="324" width="4" height="15" fill="rgb(214,104,36)"/><text x="819.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.36%)</title><rect x="816" y="340" width="4" height="15" fill="rgb(240,123,2)"/><text x="819.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.36%)</title><rect x="816" y="356" width="4" height="15" fill="rgb(209,69,1)"/><text x="819.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.36%)</title><rect x="816" y="372" width="4" height="15" fill="rgb(214,160,48)"/><text x="819.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.36%)</title><rect x="816" y="388" width="4" height="15" fill="rgb(211,50,54)"/><text x="819.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.36%)</title><rect x="816" y="404" width="4" height="15" fill="rgb(226,71,42)"/><text x="819.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="816" y="420" width="4" height="15" fill="rgb(231,23,1)"/><text x="819.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="816" y="436" width="4" height="15" fill="rgb(227,103,5)"/><text x="819.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.36%)</title><rect x="816" y="452" width="4" height="15" fill="rgb(212,145,3)"/><text x="819.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (1 samples, 0.36%)</title><rect x="820" y="452" width="5" height="15" fill="rgb(232,227,7)"/><text x="823.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.36%)</title><rect x="820" y="468" width="5" height="15" fill="rgb(210,177,22)"/><text x="823.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.36%)</title><rect x="820" y="484" width="5" height="15" fill="rgb(251,64,14)"/><text x="823.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.36%)</title><rect x="820" y="500" width="5" height="15" fill="rgb(245,10,49)"/><text x="823.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.36%)</title><rect x="820" y="516" width="5" height="15" fill="rgb(249,124,50)"/><text x="823.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="820" y="532" width="5" height="15" fill="rgb(245,204,9)"/><text x="823.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="820" y="548" width="5" height="15" fill="rgb(226,36,27)"/><text x="823.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:297) (1 samples, 0.36%)</title><rect x="825" y="468" width="4" height="15" fill="rgb(228,101,23)"/><text x="828.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (2 samples, 0.73%)</title><rect x="825" y="452" width="8" height="15" fill="rgb(207,198,16)"/><text x="828.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (1 samples, 0.36%)</title><rect x="829" y="468" width="4" height="15" fill="rgb(220,216,39)"/><text x="832.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (1 samples, 0.36%)</title><rect x="829" y="484" width="4" height="15" fill="rgb(206,157,49)"/><text x="832.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (1 samples, 0.36%)</title><rect x="833" y="452" width="5" height="15" fill="rgb(253,110,10)"/><text x="836.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:920) (1 samples, 0.36%)</title><rect x="833" y="468" width="5" height="15" fill="rgb(223,170,30)"/><text x="836.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (5 samples, 1.82%)</title><rect x="820" y="420" width="22" height="15" fill="rgb(249,16,47)"/><text x="823.00" y="430.50">R..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (5 samples, 1.82%)</title><rect x="820" y="436" width="22" height="15" fill="rgb(253,189,34)"/><text x="823.00" y="446.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.36%)</title><rect x="838" y="452" width="4" height="15" fill="rgb(207,103,21)"/><text x="841.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.36%)</title><rect x="838" y="468" width="4" height="15" fill="rgb(232,36,14)"/><text x="841.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (1 samples, 0.36%)</title><rect x="838" y="484" width="4" height="15" fill="rgb(240,197,11)"/><text x="841.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (12 samples, 4.36%)</title><rect x="799" y="228" width="52" height="15" fill="rgb(227,117,54)"/><text x="802.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (9 samples, 3.27%)</title><rect x="812" y="244" width="39" height="15" fill="rgb(249,77,2)"/><text x="815.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (9 samples, 3.27%)</title><rect x="812" y="260" width="39" height="15" fill="rgb(206,125,28)"/><text x="815.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (7 samples, 2.55%)</title><rect x="820" y="276" width="31" height="15" fill="rgb(227,49,49)"/><text x="823.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (7 samples, 2.55%)</title><rect x="820" y="292" width="31" height="15" fill="rgb(246,100,41)"/><text x="823.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (7 samples, 2.55%)</title><rect x="820" y="308" width="31" height="15" fill="rgb(247,83,29)"/><text x="823.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (7 samples, 2.55%)</title><rect x="820" y="324" width="31" height="15" fill="rgb(252,103,37)"/><text x="823.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (7 samples, 2.55%)</title><rect x="820" y="340" width="31" height="15" fill="rgb(250,227,7)"/><text x="823.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (7 samples, 2.55%)</title><rect x="820" y="356" width="31" height="15" fill="rgb(250,43,12)"/><text x="823.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (7 samples, 2.55%)</title><rect x="820" y="372" width="31" height="15" fill="rgb(212,212,49)"/><text x="823.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (7 samples, 2.55%)</title><rect x="820" y="388" width="31" height="15" fill="rgb(227,178,40)"/><text x="823.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (7 samples, 2.55%)</title><rect x="820" y="404" width="31" height="15" fill="rgb(209,19,52)"/><text x="823.00" y="414.50">py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:261) (2 samples, 0.73%)</title><rect x="842" y="420" width="9" height="15" fill="rgb(217,128,31)"/><text x="845.00" y="430.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="846" y="436" width="5" height="15" fill="rgb(242,60,10)"/><text x="849.00" y="446.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:60) (1 samples, 0.36%)</title><rect x="851" y="228" width="4" height="15" fill="rgb(244,120,54)"/><text x="854.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.36%)</title><rect x="863" y="244" width="5" height="15" fill="rgb(247,8,45)"/><text x="866.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.36%)</title><rect x="863" y="260" width="5" height="15" fill="rgb(250,39,43)"/><text x="866.00" y="270.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.36%)</title><rect x="868" y="244" width="4" height="15" fill="rgb(220,207,48)"/><text x="871.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.36%)</title><rect x="868" y="260" width="4" height="15" fill="rgb(236,200,41)"/><text x="871.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.36%)</title><rect x="868" y="276" width="4" height="15" fill="rgb(231,188,7)"/><text x="871.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.36%)</title><rect x="868" y="292" width="4" height="15" fill="rgb(246,122,9)"/><text x="871.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.36%)</title><rect x="868" y="308" width="4" height="15" fill="rgb(227,54,33)"/><text x="871.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 6.55%)</title><rect x="799" y="196" width="77" height="15" fill="rgb(235,207,46)"/><text x="802.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 6.55%)</title><rect x="799" y="212" width="77" height="15" fill="rgb(205,42,19)"/><text x="802.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (5 samples, 1.82%)</title><rect x="855" y="228" width="21" height="15" fill="rgb(212,44,20)"/><text x="858.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.36%)</title><rect x="872" y="244" width="4" height="15" fill="rgb(207,208,43)"/><text x="875.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.36%)</title><rect x="872" y="260" width="4" height="15" fill="rgb(250,162,33)"/><text x="875.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.36%)</title><rect x="872" y="276" width="4" height="15" fill="rgb(230,186,40)"/><text x="875.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.36%)</title><rect x="872" y="292" width="4" height="15" fill="rgb(248,224,33)"/><text x="875.00" y="302.50"></text></g><g><title>_array_fill_strides (ctors.c:4131) (1 samples, 0.36%)</title><rect x="872" y="308" width="4" height="15" fill="rgb(233,27,39)"/><text x="875.00" y="318.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.36%)</title><rect x="876" y="212" width="5" height="15" fill="rgb(244,32,6)"/><text x="879.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (32 samples, 11.64%)</title><rect x="748" y="180" width="137" height="15" fill="rgb(214,53,50)"/><text x="751.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.73%)</title><rect x="876" y="196" width="9" height="15" fill="rgb(243,98,48)"/><text x="879.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.36%)</title><rect x="881" y="212" width="4" height="15" fill="rgb(235,75,19)"/><text x="884.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1495) (1 samples, 0.36%)</title><rect x="881" y="228" width="4" height="15" fill="rgb(241,58,36)"/><text x="884.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (5 samples, 1.82%)</title><rect x="885" y="180" width="21" height="15" fill="rgb(228,107,30)"/><text x="888.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.73%)</title><rect x="906" y="180" width="9" height="15" fill="rgb(209,110,53)"/><text x="909.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 1.82%)</title><rect x="915" y="180" width="21" height="15" fill="rgb(242,186,45)"/><text x="918.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (51 samples, 18.55%)</title><rect x="730" y="164" width="219" height="15" fill="rgb(207,110,53)"/><text x="733.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (3 samples, 1.09%)</title><rect x="936" y="180" width="13" height="15" fill="rgb(225,214,34)"/><text x="939.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (65 samples, 23.64%)</title><rect x="692" y="132" width="279" height="15" fill="rgb(220,77,17)"/><text x="695.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (61 samples, 22.18%)</title><rect x="709" y="148" width="262" height="15" fill="rgb(212,160,51)"/><text x="712.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (5 samples, 1.82%)</title><rect x="949" y="164" width="22" height="15" fill="rgb(243,176,39)"/><text x="952.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 1.09%)</title><rect x="958" y="180" width="13" height="15" fill="rgb(226,165,43)"/><text x="961.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:45) (70 samples, 25.45%)</title><rect x="675" y="52" width="300" height="15" fill="rgb(216,218,13)"/><text x="678.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probabil..</text></g><g><title>profile_pyrt (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:44) (70 samples, 25.45%)</title><rect x="675" y="68" width="300" height="15" fill="rgb(213,83,6)"/><text x="678.00" y="78.50">profile_pyrt (bench_SVC_linear_b_cl_prob..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:29) (70 samples, 25.45%)</title><rect x="675" y="84" width="300" height="15" fill="rgb(227,27,22)"/><text x="678.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_pro..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23) (70 samples, 25.45%)</title><rect x="675" y="100" width="300" height="15" fill="rgb(251,53,12)"/><text x="678.00" y="110.50">profile (bench_SVC_linear_b_cl_probabili..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (66 samples, 24.00%)</title><rect x="692" y="116" width="283" height="15" fill="rgb(211,24,52)"/><text x="695.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.36%)</title><rect x="971" y="132" width="4" height="15" fill="rgb(238,73,54)"/><text x="974.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.36%)</title><rect x="979" y="116" width="5" height="15" fill="rgb(226,85,8)"/><text x="982.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.36%)</title><rect x="979" y="132" width="5" height="15" fill="rgb(214,157,28)"/><text x="982.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.36%)</title><rect x="979" y="148" width="5" height="15" fill="rgb(205,102,43)"/><text x="982.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (5 samples, 1.82%)</title><rect x="984" y="148" width="21" height="15" fill="rgb(212,117,36)"/><text x="987.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.36%)</title><rect x="1005" y="148" width="4" height="15" fill="rgb(222,49,26)"/><text x="1008.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.36%)</title><rect x="1009" y="196" width="5" height="15" fill="rgb(230,71,25)"/><text x="1012.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.36%)</title><rect x="1014" y="196" width="4" height="15" fill="rgb(235,119,34)"/><text x="1017.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.36%)</title><rect x="1018" y="196" width="4" height="15" fill="rgb(237,113,23)"/><text x="1021.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.36%)</title><rect x="1018" y="212" width="4" height="15" fill="rgb(254,14,54)"/><text x="1021.00" y="222.50"></text></g><g><title>0x7f556b898ff9 (?) (1 samples, 0.36%)</title><rect x="1039" y="212" width="5" height="15" fill="rgb(210,216,37)"/><text x="1042.00" y="222.50"></text></g><g><title>0x7f556b893ef6 (?) (1 samples, 0.36%)</title><rect x="1039" y="228" width="5" height="15" fill="rgb(206,45,8)"/><text x="1042.00" y="238.50"></text></g><g><title>0x7f556b888962 (?) (1 samples, 0.36%)</title><rect x="1039" y="244" width="5" height="15" fill="rgb(226,14,53)"/><text x="1042.00" y="254.50"></text></g><g><title>0x7f556b8bc7a7 (?) (1 samples, 0.36%)</title><rect x="1039" y="260" width="5" height="15" fill="rgb(228,156,35)"/><text x="1042.00" y="270.50"></text></g><g><title>0x7f556b8bbf8a (?) (1 samples, 0.36%)</title><rect x="1039" y="276" width="5" height="15" fill="rgb(220,177,42)"/><text x="1042.00" y="286.50"></text></g><g><title>0x7f556b8b4f11 (?) (1 samples, 0.36%)</title><rect x="1039" y="292" width="5" height="15" fill="rgb(235,60,12)"/><text x="1042.00" y="302.50"></text></g><g><title>0x7f556bcd60ad (?) (1 samples, 0.36%)</title><rect x="1039" y="308" width="5" height="15" fill="rgb(248,23,46)"/><text x="1042.00" y="318.50"></text></g><g><title>0x7f556bcd5b56 (?) (1 samples, 0.36%)</title><rect x="1039" y="324" width="5" height="15" fill="rgb(243,141,46)"/><text x="1042.00" y="334.50"></text></g><g><title>0x7ffe29fc5a01 ([vdso]) (1 samples, 0.36%)</title><rect x="1044" y="212" width="4" height="15" fill="rgb(227,204,53)"/><text x="1047.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1048" y="212" width="4" height="15" fill="rgb(247,60,26)"/><text x="1051.00" y="222.50"></text></g><g><title>0x7ffe29fc5b28 ([vdso]) (1 samples, 0.36%)</title><rect x="1048" y="228" width="4" height="15" fill="rgb(208,0,17)"/><text x="1051.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1052" y="228" width="4" height="15" fill="rgb(220,134,0)"/><text x="1055.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1052" y="244" width="4" height="15" fill="rgb(240,16,14)"/><text x="1055.00" y="254.50"></text></g><g><title>0x7f559b2f57a0 (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1065" y="292" width="4" height="15" fill="rgb(251,0,34)"/><text x="1068.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1069" y="308" width="9" height="15" fill="rgb(231,212,51)"/><text x="1072.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1069" y="324" width="9" height="15" fill="rgb(237,219,44)"/><text x="1072.00" y="334.50"></text></g><g><title>0x7f55ab906d21 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1074" y="340" width="4" height="15" fill="rgb(249,41,21)"/><text x="1077.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.09%)</title><rect x="1069" y="292" width="13" height="15" fill="rgb(250,91,27)"/><text x="1072.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1078" y="308" width="4" height="15" fill="rgb(229,215,8)"/><text x="1081.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1078" y="324" width="4" height="15" fill="rgb(223,47,12)"/><text x="1081.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1082" y="292" width="5" height="15" fill="rgb(217,37,8)"/><text x="1085.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1082" y="308" width="5" height="15" fill="rgb(244,132,13)"/><text x="1085.00" y="318.50"></text></g><g><title>0x7f55ab828d07 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1082" y="324" width="5" height="15" fill="rgb(231,175,49)"/><text x="1085.00" y="334.50"></text></g><g><title>0x7f55ab829c48 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1087" y="340" width="4" height="15" fill="rgb(233,14,50)"/><text x="1090.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1087" y="292" width="8" height="15" fill="rgb(214,223,24)"/><text x="1090.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.73%)</title><rect x="1087" y="308" width="8" height="15" fill="rgb(238,27,23)"/><text x="1090.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.73%)</title><rect x="1087" y="324" width="8" height="15" fill="rgb(226,174,5)"/><text x="1090.00" y="334.50"></text></g><g><title>0x7f55ab82a00a (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1091" y="340" width="4" height="15" fill="rgb(206,194,51)"/><text x="1094.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1095" y="292" width="4" height="15" fill="rgb(237,75,35)"/><text x="1098.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1099" y="292" width="5" height="15" fill="rgb(250,76,3)"/><text x="1102.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1104" y="292" width="4" height="15" fill="rgb(244,35,13)"/><text x="1107.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="340" width="4" height="15" fill="rgb(214,175,20)"/><text x="1111.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="356" width="4" height="15" fill="rgb(242,170,47)"/><text x="1111.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="372" width="4" height="15" fill="rgb(248,18,14)"/><text x="1111.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="388" width="4" height="15" fill="rgb(246,226,18)"/><text x="1111.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="404" width="4" height="15" fill="rgb(222,139,10)"/><text x="1111.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="420" width="4" height="15" fill="rgb(211,183,51)"/><text x="1111.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="436" width="4" height="15" fill="rgb(249,61,11)"/><text x="1111.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="452" width="4" height="15" fill="rgb(252,154,46)"/><text x="1111.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1108" y="468" width="4" height="15" fill="rgb(209,142,49)"/><text x="1111.00" y="478.50"></text></g><g><title>0x7f55ab9a7e2f (libm-2.29.so) (1 samples, 0.36%)</title><rect x="1129" y="356" width="5" height="15" fill="rgb(242,189,50)"/><text x="1132.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 6.55%)</title><rect x="1061" y="276" width="77" height="15" fill="rgb(234,56,36)"/><text x="1064.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.55%)</title><rect x="1108" y="292" width="30" height="15" fill="rgb(215,145,42)"/><text x="1111.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.55%)</title><rect x="1108" y="308" width="30" height="15" fill="rgb(221,119,29)"/><text x="1111.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.55%)</title><rect x="1108" y="324" width="30" height="15" fill="rgb(217,213,44)"/><text x="1111.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.18%)</title><rect x="1112" y="340" width="26" height="15" fill="rgb(240,116,20)"/><text x="1115.00" y="350.50">o..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1134" y="356" width="4" height="15" fill="rgb(241,145,44)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1134" y="372" width="4" height="15" fill="rgb(238,91,31)"/><text x="1137.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1134" y="388" width="4" height="15" fill="rgb(226,5,23)"/><text x="1137.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1134" y="404" width="4" height="15" fill="rgb(248,124,43)"/><text x="1137.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.91%)</title><rect x="1061" y="260" width="81" height="15" fill="rgb(229,121,29)"/><text x="1064.00" y="270.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1138" y="276" width="4" height="15" fill="rgb(241,43,2)"/><text x="1141.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.73%)</title><rect x="1142" y="260" width="9" height="15" fill="rgb(222,195,29)"/><text x="1145.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1147" y="276" width="4" height="15" fill="rgb(251,144,24)"/><text x="1150.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1151" y="260" width="4" height="15" fill="rgb(217,177,32)"/><text x="1154.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.36%)</title><rect x="1151" y="276" width="4" height="15" fill="rgb(216,164,18)"/><text x="1154.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="1151" y="292" width="4" height="15" fill="rgb(219,11,7)"/><text x="1154.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.36%)</title><rect x="1151" y="308" width="4" height="15" fill="rgb(222,174,37)"/><text x="1154.00" y="318.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1155" y="260" width="4" height="15" fill="rgb(230,174,19)"/><text x="1158.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1159" y="260" width="5" height="15" fill="rgb(239,166,53)"/><text x="1162.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 9.45%)</title><rect x="1056" y="244" width="112" height="15" fill="rgb(239,220,3)"/><text x="1059.00" y="254.50">onnxruntime::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1164" y="260" width="4" height="15" fill="rgb(242,218,5)"/><text x="1167.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1164" y="276" width="4" height="15" fill="rgb(224,72,23)"/><text x="1167.00" y="286.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(251,229,35)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(247,14,31)"/><text x="1171.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1168" y="276" width="4" height="15" fill="rgb(228,44,29)"/><text x="1171.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (39 samples, 14.18%)</title><rect x="1009" y="164" width="168" height="15" fill="rgb(211,44,45)"/><text x="1012.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (39 samples, 14.18%)</title><rect x="1009" y="180" width="168" height="15" fill="rgb(240,61,44)"/><text x="1012.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py:136) (36 samples, 13.09%)</title><rect x="1022" y="196" width="155" height="15" fill="rgb(227,16,19)"/><text x="1025.00" y="206.50">run (onnxruntime/ca..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 10.55%)</title><rect x="1052" y="212" width="125" height="15" fill="rgb(218,76,30)"/><text x="1055.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 10.18%)</title><rect x="1056" y="228" width="121" height="15" fill="rgb(207,65,52)"/><text x="1059.00" y="238.50">void pybind11::..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1172" y="244" width="5" height="15" fill="rgb(208,44,22)"/><text x="1175.00" y="254.50"></text></g><g><title>all (275 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(228,31,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:52) (50 samples, 18.18%)</title><rect x="975" y="52" width="215" height="15" fill="rgb(229,154,48)"/><text x="978.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b..</text></g><g><title>profile_ort (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:51) (50 samples, 18.18%)</title><rect x="975" y="68" width="215" height="15" fill="rgb(246,69,25)"/><text x="978.00" y="78.50">profile_ort (bench_SVC_linea..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:29) (50 samples, 18.18%)</title><rect x="975" y="84" width="215" height="15" fill="rgb(228,72,15)"/><text x="978.00" y="94.50">setup_profile (bench_SVC_lin..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1_4_12_float_.py:23) (50 samples, 18.18%)</title><rect x="975" y="100" width="215" height="15" fill="rgb(232,32,18)"/><text x="978.00" y="110.50">profile (bench_SVC_linear_b_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (48 samples, 17.45%)</title><rect x="984" y="116" width="206" height="15" fill="rgb(217,105,43)"/><text x="987.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (48 samples, 17.45%)</title><rect x="984" y="132" width="206" height="15" fill="rgb(249,93,33)"/><text x="987.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (42 samples, 15.27%)</title><rect x="1009" y="148" width="181" height="15" fill="rgb(211,191,45)"/><text x="1012.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.09%)</title><rect x="1177" y="164" width="13" height="15" fill="rgb(241,213,27)"/><text x="1180.00" y="174.50"></text></g></g></svg>