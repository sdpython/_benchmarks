<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:505) (1 samples, 0.29%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(207,124,9)"/><text x="13.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (1 samples, 0.29%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(238,169,16)"/><text x="13.00" y="190.50"></text></g><g><title>clone (sklearn/base.py:73) (1 samples, 0.29%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(206,45,51)"/><text x="13.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.29%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(241,203,37)"/><text x="13.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.29%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(242,184,0)"/><text x="13.00" y="238.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.29%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(209,138,7)"/><text x="13.00" y="254.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.29%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(252,172,53)"/><text x="13.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.29%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(253,145,16)"/><text x="13.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.29%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(206,221,44)"/><text x="13.00" y="302.50"></text></g><g><title>__init__ (inspect.py:2799) (1 samples, 0.29%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(206,150,32)"/><text x="13.00" y="318.50"></text></g><g><title>fit (sklearn/tree/_classes.py:174) (1 samples, 0.29%)</title><rect x="13" y="196" width="3" height="15" fill="rgb(221,226,53)"/><text x="16.00" y="206.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:6) (1 samples, 0.29%)</title><rect x="13" y="212" width="3" height="15" fill="rgb(226,31,50)"/><text x="16.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.29%)</title><rect x="13" y="228" width="3" height="15" fill="rgb(244,79,50)"/><text x="16.00" y="238.50"></text></g><g><title>copy (numpy/lib/function_base.py:790) (1 samples, 0.29%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(220,104,45)"/><text x="16.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (1 samples, 0.29%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(243,60,2)"/><text x="16.00" y="270.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (1 samples, 0.29%)</title><rect x="13" y="276" width="3" height="15" fill="rgb(241,126,51)"/><text x="16.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.29%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(208,176,44)"/><text x="16.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.29%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(205,88,7)"/><text x="16.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4010) (1 samples, 0.29%)</title><rect x="13" y="324" width="3" height="15" fill="rgb(226,168,7)"/><text x="16.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:31) (3 samples, 0.86%)</title><rect x="10" y="52" width="10" height="15" fill="rgb(245,217,15)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:11) (3 samples, 0.86%)</title><rect x="10" y="68" width="10" height="15" fill="rgb(224,24,20)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:39) (3 samples, 0.86%)</title><rect x="10" y="84" width="10" height="15" fill="rgb(245,180,18)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.86%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(208,175,18)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 0.86%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(233,143,50)"/><text x="13.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 0.86%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(241,91,14)"/><text x="13.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 0.86%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(220,221,41)"/><text x="13.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (2 samples, 0.58%)</title><rect x="13" y="164" width="7" height="15" fill="rgb(209,32,48)"/><text x="16.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.58%)</title><rect x="13" y="180" width="7" height="15" fill="rgb(245,124,19)"/><text x="16.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:182) (1 samples, 0.29%)</title><rect x="16" y="196" width="4" height="15" fill="rgb(253,42,24)"/><text x="19.00" y="206.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.29%)</title><rect x="16" y="212" width="4" height="15" fill="rgb(209,113,31)"/><text x="19.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="16" y="228" width="4" height="15" fill="rgb(241,191,10)"/><text x="19.00" y="238.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.29%)</title><rect x="16" y="244" width="4" height="15" fill="rgb(208,91,19)"/><text x="19.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.29%)</title><rect x="16" y="260" width="4" height="15" fill="rgb(214,20,5)"/><text x="19.00" y="270.50"></text></g><g><title>_array_fill_strides (ctors.c:4128) (1 samples, 0.29%)</title><rect x="16" y="276" width="4" height="15" fill="rgb(217,76,15)"/><text x="19.00" y="286.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:28) (1 samples, 0.29%)</title><rect x="20" y="84" width="3" height="15" fill="rgb(226,73,25)"/><text x="23.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.29%)</title><rect x="20" y="100" width="3" height="15" fill="rgb(227,221,7)"/><text x="23.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.29%)</title><rect x="20" y="116" width="3" height="15" fill="rgb(206,17,24)"/><text x="23.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (1 samples, 0.29%)</title><rect x="20" y="132" width="3" height="15" fill="rgb(223,196,4)"/><text x="23.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.29%)</title><rect x="20" y="148" width="3" height="15" fill="rgb(236,207,0)"/><text x="23.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.29%)</title><rect x="20" y="164" width="3" height="15" fill="rgb(237,30,22)"/><text x="23.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.29%)</title><rect x="20" y="180" width="3" height="15" fill="rgb(241,37,1)"/><text x="23.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.29%)</title><rect x="20" y="196" width="3" height="15" fill="rgb(242,34,44)"/><text x="23.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:89) (1 samples, 0.29%)</title><rect x="20" y="212" width="3" height="15" fill="rgb(233,132,39)"/><text x="23.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.29%)</title><rect x="20" y="228" width="3" height="15" fill="rgb(217,168,49)"/><text x="23.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:55) (1 samples, 0.29%)</title><rect x="20" y="244" width="3" height="15" fill="rgb(224,94,12)"/><text x="23.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.29%)</title><rect x="20" y="260" width="3" height="15" fill="rgb(227,91,16)"/><text x="23.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.29%)</title><rect x="20" y="276" width="3" height="15" fill="rgb(208,44,22)"/><text x="23.00" y="286.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.29%)</title><rect x="20" y="292" width="3" height="15" fill="rgb(232,195,52)"/><text x="23.00" y="302.50"></text></g><g><title>extract (traceback.py:349) (1 samples, 0.29%)</title><rect x="20" y="308" width="3" height="15" fill="rgb(217,173,46)"/><text x="23.00" y="318.50"></text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:688) (1 samples, 0.29%)</title><rect x="23" y="164" width="4" height="15" fill="rgb(219,177,51)"/><text x="26.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="23" y="180" width="4" height="15" fill="rgb(214,29,7)"/><text x="26.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:934) (1 samples, 0.29%)</title><rect x="30" y="228" width="3" height="15" fill="rgb(232,105,29)"/><text x="33.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.15%)</title><rect x="33" y="244" width="14" height="15" fill="rgb(233,35,4)"/><text x="36.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.29%)</title><rect x="44" y="260" width="3" height="15" fill="rgb(224,210,8)"/><text x="47.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (6 samples, 1.73%)</title><rect x="30" y="212" width="20" height="15" fill="rgb(228,199,15)"/><text x="33.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.44%)</title><rect x="33" y="228" width="17" height="15" fill="rgb(249,48,43)"/><text x="36.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.29%)</title><rect x="47" y="244" width="3" height="15" fill="rgb(206,52,14)"/><text x="50.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:455) (1 samples, 0.29%)</title><rect x="50" y="244" width="4" height="15" fill="rgb(240,119,21)"/><text x="53.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.29%)</title><rect x="57" y="260" width="4" height="15" fill="rgb(248,147,39)"/><text x="60.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.86%)</title><rect x="54" y="244" width="10" height="15" fill="rgb(207,1,47)"/><text x="57.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.29%)</title><rect x="61" y="260" width="3" height="15" fill="rgb(206,140,31)"/><text x="64.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.29%)</title><rect x="64" y="244" width="3" height="15" fill="rgb(251,107,14)"/><text x="67.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.29%)</title><rect x="67" y="324" width="4" height="15" fill="rgb(248,93,12)"/><text x="70.00" y="334.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.29%)</title><rect x="67" y="340" width="4" height="15" fill="rgb(219,147,31)"/><text x="70.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.29%)</title><rect x="67" y="356" width="4" height="15" fill="rgb(212,125,11)"/><text x="70.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.29%)</title><rect x="67" y="372" width="4" height="15" fill="rgb(217,18,45)"/><text x="70.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.29%)</title><rect x="67" y="388" width="4" height="15" fill="rgb(225,55,26)"/><text x="70.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.29%)</title><rect x="67" y="404" width="4" height="15" fill="rgb(212,202,39)"/><text x="70.00" y="414.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (15 samples, 4.32%)</title><rect x="67" y="244" width="51" height="15" fill="rgb(231,118,22)"/><text x="70.00" y="254.50">check..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (15 samples, 4.32%)</title><rect x="67" y="260" width="51" height="15" fill="rgb(242,229,30)"/><text x="70.00" y="270.50">asarr..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (15 samples, 4.32%)</title><rect x="67" y="276" width="51" height="15" fill="rgb(230,16,7)"/><text x="70.00" y="286.50">_arra..</text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (15 samples, 4.32%)</title><rect x="67" y="292" width="51" height="15" fill="rgb(242,121,48)"/><text x="70.00" y="302.50">PyArr..</text></g><g><title>PyArray_FromAny (ctors.c:1966) (15 samples, 4.32%)</title><rect x="67" y="308" width="51" height="15" fill="rgb(242,175,22)"/><text x="70.00" y="318.50">PyArr..</text></g><g><title>PyArray_FromArray (ctors.c:2172) (14 samples, 4.03%)</title><rect x="71" y="324" width="47" height="15" fill="rgb(235,159,8)"/><text x="74.00" y="334.50">PyAr..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (14 samples, 4.03%)</title><rect x="71" y="340" width="47" height="15" fill="rgb(230,115,47)"/><text x="74.00" y="350.50">PyAr..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (14 samples, 4.03%)</title><rect x="71" y="356" width="47" height="15" fill="rgb(240,48,22)"/><text x="74.00" y="366.50">raw_..</text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (14 samples, 4.03%)</title><rect x="71" y="372" width="47" height="15" fill="rgb(254,45,12)"/><text x="74.00" y="382.50">_ali..</text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.29%)</title><rect x="118" y="244" width="4" height="15" fill="rgb(210,33,41)"/><text x="121.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.29%)</title><rect x="118" y="260" width="4" height="15" fill="rgb(222,41,22)"/><text x="121.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.58%)</title><rect x="132" y="276" width="7" height="15" fill="rgb(214,64,49)"/><text x="135.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.44%)</title><rect x="125" y="260" width="17" height="15" fill="rgb(245,38,29)"/><text x="128.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="139" y="276" width="3" height="15" fill="rgb(234,75,42)"/><text x="142.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 2.31%)</title><rect x="122" y="244" width="27" height="15" fill="rgb(230,150,33)"/><text x="125.00" y="254.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.58%)</title><rect x="142" y="260" width="7" height="15" fill="rgb(211,199,35)"/><text x="145.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.29%)</title><rect x="146" y="276" width="3" height="15" fill="rgb(249,211,31)"/><text x="149.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.58%)</title><rect x="149" y="260" width="7" height="15" fill="rgb(226,173,37)"/><text x="152.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.29%)</title><rect x="156" y="260" width="3" height="15" fill="rgb(250,213,26)"/><text x="159.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (35 samples, 10.09%)</title><rect x="50" y="212" width="119" height="15" fill="rgb(237,107,49)"/><text x="53.00" y="222.50">predict_proba ..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (35 samples, 10.09%)</title><rect x="50" y="228" width="119" height="15" fill="rgb(250,32,15)"/><text x="53.00" y="238.50">_validate_X_pr..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (6 samples, 1.73%)</title><rect x="149" y="244" width="20" height="15" fill="rgb(221,31,10)"/><text x="152.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 0.86%)</title><rect x="159" y="260" width="10" height="15" fill="rgb(207,163,4)"/><text x="162.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.58%)</title><rect x="163" y="276" width="6" height="15" fill="rgb(229,190,51)"/><text x="166.00" y="286.50"></text></g><g><title>0x7f9a0e9c5f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="173" y="244" width="3" height="15" fill="rgb(208,119,30)"/><text x="176.00" y="254.50"></text></g><g><title>0x7f9a0e9b5d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="173" y="260" width="3" height="15" fill="rgb(232,124,28)"/><text x="176.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.29%)</title><rect x="173" y="276" width="3" height="15" fill="rgb(252,3,0)"/><text x="176.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.29%)</title><rect x="173" y="292" width="3" height="15" fill="rgb(215,10,13)"/><text x="176.00" y="302.50"></text></g><g><title>0x7f9a0e9d4225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="176" y="276" width="4" height="15" fill="rgb(221,155,47)"/><text x="179.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.29%)</title><rect x="176" y="292" width="4" height="15" fill="rgb(218,82,7)"/><text x="179.00" y="302.50"></text></g><g><title>0x7f9a0e9d42df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="180" y="276" width="3" height="15" fill="rgb(249,154,6)"/><text x="183.00" y="286.50"></text></g><g><title>0x7f9a0e9b8d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="180" y="292" width="3" height="15" fill="rgb(233,23,29)"/><text x="183.00" y="302.50"></text></g><g><title>0x7f9a0e9b8666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="180" y="308" width="3" height="15" fill="rgb(251,66,23)"/><text x="183.00" y="318.50"></text></g><g><title>0x7f9a0e9ae2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="180" y="324" width="3" height="15" fill="rgb(250,204,13)"/><text x="183.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.29%)</title><rect x="180" y="340" width="3" height="15" fill="rgb(236,156,28)"/><text x="183.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.29%)</title><rect x="180" y="356" width="3" height="15" fill="rgb(220,25,52)"/><text x="183.00" y="366.50"></text></g><g><title>0x7f9a0e9d4592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="183" y="276" width="3" height="15" fill="rgb(241,182,26)"/><text x="186.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.29%)</title><rect x="183" y="292" width="3" height="15" fill="rgb(249,28,48)"/><text x="186.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="183" y="308" width="3" height="15" fill="rgb(209,172,54)"/><text x="186.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.29%)</title><rect x="183" y="324" width="3" height="15" fill="rgb(206,84,43)"/><text x="186.00" y="334.50"></text></g><g><title>0x7f9a0e9d4644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="186" y="276" width="4" height="15" fill="rgb(207,107,19)"/><text x="189.00" y="286.50"></text></g><g><title>0x7f9a0e9d46b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="190" y="276" width="3" height="15" fill="rgb(234,37,4)"/><text x="193.00" y="286.50"></text></g><g><title>0x7f9a0e9d46e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="193" y="276" width="4" height="15" fill="rgb(233,12,24)"/><text x="196.00" y="286.50"></text></g><g><title>0x7f9a0e9d4bfc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="197" y="276" width="3" height="15" fill="rgb(207,171,1)"/><text x="200.00" y="286.50"></text></g><g><title>0x7f9a0e9a2bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="197" y="292" width="3" height="15" fill="rgb(233,112,24)"/><text x="200.00" y="302.50"></text></g><g><title>0x7f9a0e9a9d65 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="197" y="308" width="3" height="15" fill="rgb(226,77,22)"/><text x="200.00" y="318.50"></text></g><g><title>0x7f9a0e9c5fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.31%)</title><rect x="176" y="244" width="27" height="15" fill="rgb(243,141,27)"/><text x="179.00" y="254.50">0..</text></g><g><title>0x7f9a0e9d5405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.31%)</title><rect x="176" y="260" width="27" height="15" fill="rgb(236,119,41)"/><text x="179.00" y="270.50">0..</text></g><g><title>0x7f9a0e9d4c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="200" y="276" width="3" height="15" fill="rgb(219,96,16)"/><text x="203.00" y="286.50"></text></g><g><title>0x7f9a0e9ac529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="200" y="292" width="3" height="15" fill="rgb(221,220,38)"/><text x="203.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:741) (1 samples, 0.29%)</title><rect x="200" y="308" width="3" height="15" fill="rgb(233,188,52)"/><text x="203.00" y="318.50"></text></g><g><title>0x7f9a0e9c5fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="203" y="244" width="4" height="15" fill="rgb(242,70,11)"/><text x="206.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.29%)</title><rect x="207" y="260" width="3" height="15" fill="rgb(239,202,13)"/><text x="210.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.29%)</title><rect x="210" y="276" width="4" height="15" fill="rgb(240,49,2)"/><text x="213.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.29%)</title><rect x="210" y="292" width="4" height="15" fill="rgb(246,210,9)"/><text x="213.00" y="302.50"></text></g><g><title>0x7f9a0e9c605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.86%)</title><rect x="207" y="244" width="10" height="15" fill="rgb(208,215,2)"/><text x="210.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.58%)</title><rect x="210" y="260" width="7" height="15" fill="rgb(253,157,30)"/><text x="213.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.29%)</title><rect x="214" y="276" width="3" height="15" fill="rgb(250,170,42)"/><text x="217.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="214" y="292" width="3" height="15" fill="rgb(251,177,32)"/><text x="217.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.29%)</title><rect x="214" y="308" width="3" height="15" fill="rgb(246,81,2)"/><text x="217.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.29%)</title><rect x="214" y="324" width="3" height="15" fill="rgb(229,171,18)"/><text x="217.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.29%)</title><rect x="214" y="340" width="3" height="15" fill="rgb(236,227,4)"/><text x="217.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.29%)</title><rect x="214" y="356" width="3" height="15" fill="rgb(205,99,19)"/><text x="217.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="214" y="372" width="3" height="15" fill="rgb(245,154,30)"/><text x="217.00" y="382.50"></text></g><g><title>0x7f9a34f83d03 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="214" y="388" width="3" height="15" fill="rgb(211,145,15)"/><text x="217.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (15 samples, 4.32%)</title><rect x="169" y="212" width="51" height="15" fill="rgb(239,23,48)"/><text x="172.00" y="222.50">predi..</text></g><g><title>0x7f9a0e9c6d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.03%)</title><rect x="173" y="228" width="47" height="15" fill="rgb(216,1,23)"/><text x="176.00" y="238.50">0x7f..</text></g><g><title>0x7f9a0e9c68d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="217" y="244" width="3" height="15" fill="rgb(237,3,28)"/><text x="220.00" y="254.50"></text></g><g><title>0x7f9a0e9a2bec (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="217" y="260" width="3" height="15" fill="rgb(227,13,53)"/><text x="220.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.29%)</title><rect x="220" y="212" width="4" height="15" fill="rgb(225,165,50)"/><text x="223.00" y="222.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.29%)</title><rect x="227" y="308" width="4" height="15" fill="rgb(224,23,10)"/><text x="230.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.29%)</title><rect x="227" y="324" width="4" height="15" fill="rgb(225,3,27)"/><text x="230.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.29%)</title><rect x="227" y="340" width="4" height="15" fill="rgb(239,188,26)"/><text x="230.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.29%)</title><rect x="227" y="356" width="4" height="15" fill="rgb(249,184,39)"/><text x="230.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.29%)</title><rect x="231" y="372" width="3" height="15" fill="rgb(244,119,48)"/><text x="234.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="231" y="388" width="3" height="15" fill="rgb(225,136,27)"/><text x="234.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.58%)</title><rect x="231" y="324" width="6" height="15" fill="rgb(245,165,42)"/><text x="234.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.58%)</title><rect x="231" y="340" width="6" height="15" fill="rgb(233,124,6)"/><text x="234.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.58%)</title><rect x="231" y="356" width="6" height="15" fill="rgb(225,101,23)"/><text x="234.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.29%)</title><rect x="234" y="372" width="3" height="15" fill="rgb(236,9,44)"/><text x="237.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.29%)</title><rect x="234" y="388" width="3" height="15" fill="rgb(217,155,10)"/><text x="237.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.29%)</title><rect x="237" y="340" width="4" height="15" fill="rgb(229,117,27)"/><text x="240.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.29%)</title><rect x="244" y="356" width="4" height="15" fill="rgb(247,16,29)"/><text x="247.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 1.15%)</title><rect x="248" y="356" width="13" height="15" fill="rgb(254,29,9)"/><text x="251.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.58%)</title><rect x="254" y="372" width="7" height="15" fill="rgb(251,7,7)"/><text x="257.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.29%)</title><rect x="261" y="356" width="4" height="15" fill="rgb(210,94,40)"/><text x="264.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.29%)</title><rect x="265" y="356" width="3" height="15" fill="rgb(243,55,19)"/><text x="268.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.29%)</title><rect x="268" y="356" width="3" height="15" fill="rgb(218,159,25)"/><text x="271.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (15 samples, 4.32%)</title><rect x="224" y="212" width="51" height="15" fill="rgb(209,160,21)"/><text x="227.00" y="222.50">predi..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 4.03%)</title><rect x="227" y="228" width="48" height="15" fill="rgb(222,20,52)"/><text x="230.00" y="238.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 4.03%)</title><rect x="227" y="244" width="48" height="15" fill="rgb(248,1,45)"/><text x="230.00" y="254.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.03%)</title><rect x="227" y="260" width="48" height="15" fill="rgb(226,53,6)"/><text x="230.00" y="270.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 4.03%)</title><rect x="227" y="276" width="48" height="15" fill="rgb(240,139,35)"/><text x="230.00" y="286.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 4.03%)</title><rect x="227" y="292" width="48" height="15" fill="rgb(239,125,40)"/><text x="230.00" y="302.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 3.75%)</title><rect x="231" y="308" width="44" height="15" fill="rgb(205,207,26)"/><text x="234.00" y="318.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 3.17%)</title><rect x="237" y="324" width="38" height="15" fill="rgb(209,108,51)"/><text x="240.00" y="334.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 2.88%)</title><rect x="241" y="340" width="34" height="15" fill="rgb(220,101,27)"/><text x="244.00" y="350.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.29%)</title><rect x="271" y="356" width="4" height="15" fill="rgb(240,213,50)"/><text x="274.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.29%)</title><rect x="275" y="228" width="3" height="15" fill="rgb(254,60,47)"/><text x="278.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.29%)</title><rect x="275" y="244" width="3" height="15" fill="rgb(215,7,47)"/><text x="278.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.29%)</title><rect x="275" y="260" width="3" height="15" fill="rgb(222,111,29)"/><text x="278.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3868) (1 samples, 0.29%)</title><rect x="275" y="276" width="3" height="15" fill="rgb(239,216,48)"/><text x="278.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (2 samples, 0.58%)</title><rect x="275" y="212" width="7" height="15" fill="rgb(237,179,11)"/><text x="278.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.29%)</title><rect x="278" y="228" width="4" height="15" fill="rgb(242,19,6)"/><text x="281.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="278" y="244" width="4" height="15" fill="rgb(248,66,43)"/><text x="281.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="278" y="260" width="4" height="15" fill="rgb(228,56,7)"/><text x="281.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.29%)</title><rect x="278" y="276" width="4" height="15" fill="rgb(252,137,21)"/><text x="281.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="282" y="276" width="3" height="15" fill="rgb(205,20,30)"/><text x="285.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="282" y="292" width="3" height="15" fill="rgb(235,141,48)"/><text x="285.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1200) (1 samples, 0.29%)</title><rect x="282" y="308" width="3" height="15" fill="rgb(218,78,15)"/><text x="285.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.29%)</title><rect x="285" y="324" width="3" height="15" fill="rgb(234,107,26)"/><text x="288.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.58%)</title><rect x="285" y="276" width="7" height="15" fill="rgb(239,183,7)"/><text x="288.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.58%)</title><rect x="285" y="292" width="7" height="15" fill="rgb(211,148,7)"/><text x="288.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.58%)</title><rect x="285" y="308" width="7" height="15" fill="rgb(232,143,44)"/><text x="288.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.29%)</title><rect x="288" y="324" width="4" height="15" fill="rgb(219,185,30)"/><text x="291.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.29%)</title><rect x="288" y="340" width="4" height="15" fill="rgb(247,52,40)"/><text x="291.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (79 samples, 22.77%)</title><rect x="30" y="196" width="269" height="15" fill="rgb(228,139,44)"/><text x="33.00" y="206.50">_samme_proba (sklearn/ensemble/_wei..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (5 samples, 1.44%)</title><rect x="282" y="212" width="17" height="15" fill="rgb(223,84,8)"/><text x="285.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.44%)</title><rect x="282" y="228" width="17" height="15" fill="rgb(227,176,47)"/><text x="285.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.44%)</title><rect x="282" y="244" width="17" height="15" fill="rgb(238,195,43)"/><text x="285.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.44%)</title><rect x="282" y="260" width="17" height="15" fill="rgb(209,183,37)"/><text x="285.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.58%)</title><rect x="292" y="276" width="7" height="15" fill="rgb(254,50,0)"/><text x="295.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.58%)</title><rect x="292" y="292" width="7" height="15" fill="rgb(247,26,53)"/><text x="295.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.58%)</title><rect x="292" y="308" width="7" height="15" fill="rgb(217,70,20)"/><text x="295.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.58%)</title><rect x="292" y="324" width="7" height="15" fill="rgb(216,103,3)"/><text x="295.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.58%)</title><rect x="292" y="340" width="7" height="15" fill="rgb(207,129,25)"/><text x="295.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.29%)</title><rect x="302" y="212" width="3" height="15" fill="rgb(239,67,31)"/><text x="305.00" y="222.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.29%)</title><rect x="305" y="212" width="4" height="15" fill="rgb(221,197,0)"/><text x="308.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.29%)</title><rect x="309" y="228" width="3" height="15" fill="rgb(244,145,51)"/><text x="312.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.29%)</title><rect x="309" y="244" width="3" height="15" fill="rgb(206,123,7)"/><text x="312.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.29%)</title><rect x="309" y="260" width="3" height="15" fill="rgb(221,216,18)"/><text x="312.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="309" y="276" width="3" height="15" fill="rgb(221,26,19)"/><text x="312.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.29%)</title><rect x="309" y="292" width="3" height="15" fill="rgb(251,138,49)"/><text x="312.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.58%)</title><rect x="312" y="260" width="7" height="15" fill="rgb(249,150,41)"/><text x="315.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.29%)</title><rect x="319" y="308" width="3" height="15" fill="rgb(250,173,41)"/><text x="322.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.29%)</title><rect x="319" y="324" width="3" height="15" fill="rgb(206,97,19)"/><text x="322.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c:2062) (1 samples, 0.29%)</title><rect x="319" y="340" width="3" height="15" fill="rgb(241,184,48)"/><text x="322.00" y="350.50"></text></g><g><title>_arraydescr_isnative (descriptor.c:2025) (1 samples, 0.29%)</title><rect x="319" y="356" width="3" height="15" fill="rgb(232,173,41)"/><text x="322.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.29%)</title><rect x="326" y="324" width="3" height="15" fill="rgb(253,93,3)"/><text x="329.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.29%)</title><rect x="326" y="340" width="3" height="15" fill="rgb(241,224,23)"/><text x="329.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.29%)</title><rect x="329" y="324" width="4" height="15" fill="rgb(243,197,46)"/><text x="332.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.29%)</title><rect x="329" y="340" width="4" height="15" fill="rgb(237,11,3)"/><text x="332.00" y="350.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (4 samples, 1.15%)</title><rect x="322" y="308" width="14" height="15" fill="rgb(254,113,19)"/><text x="325.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.29%)</title><rect x="333" y="324" width="3" height="15" fill="rgb(211,87,3)"/><text x="336.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="333" y="340" width="3" height="15" fill="rgb(209,215,20)"/><text x="336.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.29%)</title><rect x="333" y="356" width="3" height="15" fill="rgb(236,129,50)"/><text x="336.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.29%)</title><rect x="333" y="372" width="3" height="15" fill="rgb(244,227,17)"/><text x="336.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (2 samples, 0.58%)</title><rect x="336" y="308" width="7" height="15" fill="rgb(250,94,31)"/><text x="339.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.58%)</title><rect x="336" y="324" width="7" height="15" fill="rgb(206,134,26)"/><text x="339.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.29%)</title><rect x="339" y="340" width="4" height="15" fill="rgb(220,125,28)"/><text x="342.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.29%)</title><rect x="339" y="356" width="4" height="15" fill="rgb(216,210,30)"/><text x="342.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.29%)</title><rect x="339" y="372" width="4" height="15" fill="rgb(236,66,53)"/><text x="342.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.29%)</title><rect x="339" y="388" width="4" height="15" fill="rgb(244,43,15)"/><text x="342.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.29%)</title><rect x="339" y="404" width="4" height="15" fill="rgb(236,14,29)"/><text x="342.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="343" y="340" width="3" height="15" fill="rgb(230,112,25)"/><text x="346.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="343" y="356" width="3" height="15" fill="rgb(209,103,52)"/><text x="346.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="343" y="372" width="3" height="15" fill="rgb(246,21,25)"/><text x="346.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.29%)</title><rect x="343" y="388" width="3" height="15" fill="rgb(247,213,17)"/><text x="346.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="343" y="404" width="3" height="15" fill="rgb(219,149,16)"/><text x="346.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.29%)</title><rect x="343" y="420" width="3" height="15" fill="rgb(240,4,20)"/><text x="346.00" y="430.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.58%)</title><rect x="346" y="404" width="7" height="15" fill="rgb(210,222,36)"/><text x="349.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 0.58%)</title><rect x="346" y="420" width="7" height="15" fill="rgb(221,59,39)"/><text x="349.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.58%)</title><rect x="346" y="436" width="7" height="15" fill="rgb(232,96,28)"/><text x="349.00" y="446.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="350" y="452" width="3" height="15" fill="rgb(237,36,16)"/><text x="353.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.86%)</title><rect x="346" y="372" width="10" height="15" fill="rgb(220,190,25)"/><text x="349.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.86%)</title><rect x="346" y="388" width="10" height="15" fill="rgb(210,42,23)"/><text x="349.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.29%)</title><rect x="353" y="404" width="3" height="15" fill="rgb(209,174,13)"/><text x="356.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:546) (1 samples, 0.29%)</title><rect x="353" y="420" width="3" height="15" fill="rgb(244,212,26)"/><text x="356.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="353" y="436" width="3" height="15" fill="rgb(250,69,11)"/><text x="356.00" y="446.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.29%)</title><rect x="356" y="388" width="4" height="15" fill="rgb(231,178,46)"/><text x="359.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (20 samples, 5.76%)</title><rect x="299" y="196" width="68" height="15" fill="rgb(211,77,50)"/><text x="302.00" y="206.50">_samme_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (17 samples, 4.90%)</title><rect x="309" y="212" width="58" height="15" fill="rgb(248,71,14)"/><text x="312.00" y="222.50">clip (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 4.61%)</title><rect x="312" y="228" width="55" height="15" fill="rgb(233,186,22)"/><text x="315.00" y="238.50">array..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (16 samples, 4.61%)</title><rect x="312" y="244" width="55" height="15" fill="rgb(209,45,38)"/><text x="315.00" y="254.50">clip ..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 4.03%)</title><rect x="319" y="260" width="48" height="15" fill="rgb(214,44,46)"/><text x="322.00" y="270.50">_wra..</text></g><g><title>array_clip (methods.c:2381) (14 samples, 4.03%)</title><rect x="319" y="276" width="48" height="15" fill="rgb(230,0,37)"/><text x="322.00" y="286.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (14 samples, 4.03%)</title><rect x="319" y="292" width="48" height="15" fill="rgb(223,153,49)"/><text x="322.00" y="302.50">forw..</text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 2.02%)</title><rect x="343" y="308" width="24" height="15" fill="rgb(205,117,12)"/><text x="346.00" y="318.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 2.02%)</title><rect x="343" y="324" width="24" height="15" fill="rgb(240,37,50)"/><text x="346.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.73%)</title><rect x="346" y="340" width="21" height="15" fill="rgb(212,224,5)"/><text x="349.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.73%)</title><rect x="346" y="356" width="21" height="15" fill="rgb(248,88,11)"/><text x="349.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.86%)</title><rect x="356" y="372" width="11" height="15" fill="rgb(234,14,48)"/><text x="359.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.58%)</title><rect x="360" y="388" width="7" height="15" fill="rgb(240,93,1)"/><text x="363.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.58%)</title><rect x="360" y="404" width="7" height="15" fill="rgb(239,73,25)"/><text x="363.00" y="414.50"></text></g><g><title>0x7f9a35154dd0 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="370" y="292" width="3" height="15" fill="rgb(241,136,16)"/><text x="373.00" y="302.50"></text></g><g><title>0x7f9a35154e01 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="373" y="292" width="4" height="15" fill="rgb(251,147,35)"/><text x="376.00" y="302.50"></text></g><g><title>0x7f9a35154e6e (libm-2.29.so) (2 samples, 0.58%)</title><rect x="377" y="292" width="7" height="15" fill="rgb(218,160,7)"/><text x="380.00" y="302.50"></text></g><g><title>0x7f9a35154e8d (libm-2.29.so) (1 samples, 0.29%)</title><rect x="384" y="292" width="3" height="15" fill="rgb(208,205,37)"/><text x="387.00" y="302.50"></text></g><g><title>0x7f9a35154ea2 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="387" y="292" width="3" height="15" fill="rgb(221,22,17)"/><text x="390.00" y="302.50"></text></g><g><title>0x7f9a35154ed2 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="390" y="292" width="4" height="15" fill="rgb(234,48,37)"/><text x="393.00" y="302.50"></text></g><g><title>0x7f9a35154ee6 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="394" y="292" width="3" height="15" fill="rgb(222,190,54)"/><text x="397.00" y="302.50"></text></g><g><title>0x7f9a35154ef6 (libm-2.29.so) (4 samples, 1.15%)</title><rect x="397" y="292" width="14" height="15" fill="rgb(251,141,27)"/><text x="400.00" y="302.50"></text></g><g><title>0x7f9a35154fab (libm-2.29.so) (1 samples, 0.29%)</title><rect x="411" y="292" width="3" height="15" fill="rgb(251,217,6)"/><text x="414.00" y="302.50"></text></g><g><title>0x7f9a35155017 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="414" y="292" width="4" height="15" fill="rgb(213,44,29)"/><text x="417.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (16 samples, 4.61%)</title><rect x="367" y="196" width="54" height="15" fill="rgb(218,85,25)"/><text x="370.00" y="206.50">_samm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 4.61%)</title><rect x="367" y="212" width="54" height="15" fill="rgb(247,139,26)"/><text x="370.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 4.61%)</title><rect x="367" y="228" width="54" height="15" fill="rgb(205,70,20)"/><text x="370.00" y="238.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (16 samples, 4.61%)</title><rect x="367" y="244" width="54" height="15" fill="rgb(230,81,43)"/><text x="370.00" y="254.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (16 samples, 4.61%)</title><rect x="367" y="260" width="54" height="15" fill="rgb(213,89,14)"/><text x="370.00" y="270.50">trivi..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (16 samples, 4.61%)</title><rect x="367" y="276" width="54" height="15" fill="rgb(230,48,38)"/><text x="370.00" y="286.50">PyUFu..</text></g><g><title>log (libm-2.29.so) (1 samples, 0.29%)</title><rect x="418" y="292" width="3" height="15" fill="rgb(210,225,27)"/><text x="421.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:281) (2 samples, 0.58%)</title><rect x="421" y="196" width="7" height="15" fill="rgb(243,150,1)"/><text x="424.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="435" y="212" width="3" height="15" fill="rgb(237,65,38)"/><text x="438.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="435" y="228" width="3" height="15" fill="rgb(214,110,39)"/><text x="438.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.29%)</title><rect x="435" y="244" width="3" height="15" fill="rgb(210,102,1)"/><text x="438.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.29%)</title><rect x="438" y="212" width="3" height="15" fill="rgb(232,220,50)"/><text x="441.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.29%)</title><rect x="438" y="228" width="3" height="15" fill="rgb(243,4,19)"/><text x="441.00" y="238.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.29%)</title><rect x="438" y="244" width="3" height="15" fill="rgb(221,89,1)"/><text x="441.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.29%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(251,17,42)"/><text x="441.00" y="270.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.29%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(249,227,1)"/><text x="441.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(238,196,36)"/><text x="441.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="445" y="292" width="3" height="15" fill="rgb(251,64,15)"/><text x="448.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.29%)</title><rect x="445" y="308" width="3" height="15" fill="rgb(243,131,37)"/><text x="448.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1024) (1 samples, 0.29%)</title><rect x="448" y="292" width="4" height="15" fill="rgb(218,101,13)"/><text x="451.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.86%)</title><rect x="445" y="244" width="10" height="15" fill="rgb(230,60,16)"/><text x="448.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (3 samples, 0.86%)</title><rect x="445" y="260" width="10" height="15" fill="rgb(229,163,40)"/><text x="448.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (3 samples, 0.86%)</title><rect x="445" y="276" width="10" height="15" fill="rgb(223,16,22)"/><text x="448.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.29%)</title><rect x="452" y="292" width="3" height="15" fill="rgb(212,7,40)"/><text x="455.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.29%)</title><rect x="452" y="308" width="3" height="15" fill="rgb(241,191,45)"/><text x="455.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.29%)</title><rect x="452" y="324" width="3" height="15" fill="rgb(231,129,52)"/><text x="455.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:698) (1 samples, 0.29%)</title><rect x="455" y="292" width="3" height="15" fill="rgb(228,186,23)"/><text x="458.00" y="302.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (1 samples, 0.29%)</title><rect x="455" y="308" width="3" height="15" fill="rgb(254,220,11)"/><text x="458.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (6 samples, 1.73%)</title><rect x="441" y="212" width="21" height="15" fill="rgb(223,213,24)"/><text x="444.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.44%)</title><rect x="445" y="228" width="17" height="15" fill="rgb(209,202,23)"/><text x="448.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.58%)</title><rect x="455" y="244" width="7" height="15" fill="rgb(214,167,16)"/><text x="458.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.58%)</title><rect x="455" y="260" width="7" height="15" fill="rgb(222,71,8)"/><text x="458.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.58%)</title><rect x="455" y="276" width="7" height="15" fill="rgb(205,161,26)"/><text x="458.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:713) (1 samples, 0.29%)</title><rect x="458" y="292" width="4" height="15" fill="rgb(230,69,43)"/><text x="461.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.29%)</title><rect x="462" y="324" width="3" height="15" fill="rgb(207,57,15)"/><text x="465.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.58%)</title><rect x="462" y="212" width="7" height="15" fill="rgb(210,206,49)"/><text x="465.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.58%)</title><rect x="462" y="228" width="7" height="15" fill="rgb(240,105,21)"/><text x="465.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.58%)</title><rect x="462" y="244" width="7" height="15" fill="rgb(245,72,46)"/><text x="465.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.58%)</title><rect x="462" y="260" width="7" height="15" fill="rgb(214,38,23)"/><text x="465.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.58%)</title><rect x="462" y="276" width="7" height="15" fill="rgb(211,137,51)"/><text x="465.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.58%)</title><rect x="462" y="292" width="7" height="15" fill="rgb(235,17,49)"/><text x="465.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.58%)</title><rect x="462" y="308" width="7" height="15" fill="rgb(251,18,53)"/><text x="465.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.29%)</title><rect x="465" y="324" width="4" height="15" fill="rgb(251,54,4)"/><text x="468.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="469" y="308" width="3" height="15" fill="rgb(230,107,1)"/><text x="472.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.29%)</title><rect x="469" y="324" width="3" height="15" fill="rgb(231,187,51)"/><text x="472.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="472" y="324" width="3" height="15" fill="rgb(250,155,39)"/><text x="475.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1461) (1 samples, 0.29%)</title><rect x="472" y="340" width="3" height="15" fill="rgb(221,82,20)"/><text x="475.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.58%)</title><rect x="472" y="308" width="7" height="15" fill="rgb(245,6,30)"/><text x="475.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.29%)</title><rect x="475" y="324" width="4" height="15" fill="rgb(223,32,12)"/><text x="478.00" y="334.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2277) (1 samples, 0.29%)</title><rect x="475" y="340" width="4" height="15" fill="rgb(211,144,43)"/><text x="478.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.29%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(209,187,36)"/><text x="482.00" y="318.50"></text></g><g><title>0x7f9a341a3f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(245,74,2)"/><text x="482.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.29%)</title><rect x="482" y="324" width="4" height="15" fill="rgb(223,135,33)"/><text x="485.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.29%)</title><rect x="486" y="340" width="3" height="15" fill="rgb(209,216,36)"/><text x="489.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.86%)</title><rect x="489" y="340" width="10" height="15" fill="rgb(239,70,14)"/><text x="492.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.29%)</title><rect x="496" y="356" width="3" height="15" fill="rgb(248,196,54)"/><text x="499.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.29%)</title><rect x="499" y="340" width="4" height="15" fill="rgb(222,137,34)"/><text x="502.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 2.02%)</title><rect x="482" y="308" width="24" height="15" fill="rgb(220,151,8)"/><text x="485.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.73%)</title><rect x="486" y="324" width="20" height="15" fill="rgb(215,181,3)"/><text x="489.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.29%)</title><rect x="503" y="340" width="3" height="15" fill="rgb(233,37,30)"/><text x="506.00" y="350.50"></text></g><g><title>0x7f9a34f82d28 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="506" y="340" width="3" height="15" fill="rgb(235,225,5)"/><text x="509.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (143 samples, 41.21%)</title><rect x="27" y="180" width="486" height="15" fill="rgb(244,41,3)"/><text x="30.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (25 samples, 7.20%)</title><rect x="428" y="196" width="85" height="15" fill="rgb(223,215,4)"/><text x="431.00" y="206.50">_samme_pro..</text></g><g><title>array_sum (methods.c:2215) (13 samples, 3.75%)</title><rect x="469" y="212" width="44" height="15" fill="rgb(225,152,45)"/><text x="472.00" y="222.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 3.75%)</title><rect x="469" y="228" width="44" height="15" fill="rgb(223,138,14)"/><text x="472.00" y="238.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 3.75%)</title><rect x="469" y="244" width="44" height="15" fill="rgb(241,65,4)"/><text x="472.00" y="254.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 3.75%)</title><rect x="469" y="260" width="44" height="15" fill="rgb(240,227,7)"/><text x="472.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 3.75%)</title><rect x="469" y="276" width="44" height="15" fill="rgb(214,189,4)"/><text x="472.00" y="286.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 3.75%)</title><rect x="469" y="292" width="44" height="15" fill="rgb(239,180,49)"/><text x="472.00" y="302.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (2 samples, 0.58%)</title><rect x="506" y="308" width="7" height="15" fill="rgb(220,206,36)"/><text x="509.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.58%)</title><rect x="506" y="324" width="7" height="15" fill="rgb(214,171,45)"/><text x="509.00" y="334.50"></text></g><g><title>0x7f9a34f82dfb (libc-2.29.so) (1 samples, 0.29%)</title><rect x="509" y="340" width="4" height="15" fill="rgb(219,225,20)"/><text x="512.00" y="350.50"></text></g><g><title>0x7f9a34f81aa4 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="509" y="356" width="4" height="15" fill="rgb(241,44,14)"/><text x="512.00" y="366.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.29%)</title><rect x="513" y="180" width="3" height="15" fill="rgb(211,96,27)"/><text x="516.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="513" y="196" width="3" height="15" fill="rgb(246,175,8)"/><text x="516.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="513" y="212" width="3" height="15" fill="rgb(209,193,28)"/><text x="516.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.29%)</title><rect x="513" y="228" width="3" height="15" fill="rgb(222,133,48)"/><text x="516.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.29%)</title><rect x="513" y="244" width="3" height="15" fill="rgb(217,64,23)"/><text x="516.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.29%)</title><rect x="513" y="260" width="3" height="15" fill="rgb(231,220,45)"/><text x="516.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.29%)</title><rect x="513" y="276" width="3" height="15" fill="rgb(223,204,27)"/><text x="516.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.29%)</title><rect x="513" y="292" width="3" height="15" fill="rgb(207,66,20)"/><text x="516.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.29%)</title><rect x="513" y="308" width="3" height="15" fill="rgb(231,73,37)"/><text x="516.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:18) (146 samples, 42.07%)</title><rect x="23" y="100" width="497" height="15" fill="rgb(218,18,25)"/><text x="26.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (146 samples, 42.07%)</title><rect x="23" y="116" width="497" height="15" fill="rgb(250,146,4)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (146 samples, 42.07%)</title><rect x="23" y="132" width="497" height="15" fill="rgb(228,24,35)"/><text x="26.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (146 samples, 42.07%)</title><rect x="23" y="148" width="497" height="15" fill="rgb(235,202,40)"/><text x="26.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (145 samples, 41.79%)</title><rect x="27" y="164" width="493" height="15" fill="rgb(235,209,47)"/><text x="30.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.29%)</title><rect x="516" y="180" width="4" height="15" fill="rgb(216,155,16)"/><text x="519.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.29%)</title><rect x="516" y="196" width="4" height="15" fill="rgb(237,52,8)"/><text x="519.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.29%)</title><rect x="516" y="212" width="4" height="15" fill="rgb(218,155,34)"/><text x="519.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.29%)</title><rect x="516" y="228" width="4" height="15" fill="rgb(229,195,25)"/><text x="519.00" y="238.50"></text></g><g><title>0x7f9a34f82a71 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="516" y="244" width="4" height="15" fill="rgb(215,83,33)"/><text x="519.00" y="254.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.29%)</title><rect x="520" y="148" width="3" height="15" fill="rgb(214,60,21)"/><text x="523.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.29%)</title><rect x="520" y="164" width="3" height="15" fill="rgb(232,225,43)"/><text x="523.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.29%)</title><rect x="520" y="180" width="3" height="15" fill="rgb(215,38,39)"/><text x="523.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.29%)</title><rect x="520" y="196" width="3" height="15" fill="rgb(205,177,41)"/><text x="523.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.29%)</title><rect x="520" y="212" width="3" height="15" fill="rgb(214,148,12)"/><text x="523.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.29%)</title><rect x="530" y="212" width="3" height="15" fill="rgb(208,72,52)"/><text x="533.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.29%)</title><rect x="530" y="228" width="3" height="15" fill="rgb(226,56,15)"/><text x="533.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.29%)</title><rect x="530" y="244" width="3" height="15" fill="rgb(224,25,20)"/><text x="533.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="533" y="244" width="4" height="15" fill="rgb(233,83,34)"/><text x="536.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.86%)</title><rect x="537" y="244" width="10" height="15" fill="rgb(212,120,40)"/><text x="540.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="543" y="260" width="4" height="15" fill="rgb(246,63,44)"/><text x="546.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.44%)</title><rect x="533" y="228" width="17" height="15" fill="rgb(240,104,8)"/><text x="536.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.29%)</title><rect x="547" y="244" width="3" height="15" fill="rgb(238,141,28)"/><text x="550.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (6 samples, 1.73%)</title><rect x="533" y="212" width="21" height="15" fill="rgb(242,74,14)"/><text x="536.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.29%)</title><rect x="550" y="228" width="4" height="15" fill="rgb(252,28,34)"/><text x="553.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.29%)</title><rect x="557" y="244" width="3" height="15" fill="rgb(216,184,4)"/><text x="560.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.29%)</title><rect x="560" y="244" width="4" height="15" fill="rgb(250,62,43)"/><text x="563.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.15%)</title><rect x="564" y="244" width="13" height="15" fill="rgb(243,229,32)"/><text x="567.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.58%)</title><rect x="571" y="260" width="6" height="15" fill="rgb(251,9,13)"/><text x="574.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:165) (1 samples, 0.29%)</title><rect x="577" y="260" width="4" height="15" fill="rgb(230,149,30)"/><text x="580.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.29%)</title><rect x="581" y="260" width="3" height="15" fill="rgb(240,219,34)"/><text x="584.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.15%)</title><rect x="577" y="244" width="14" height="15" fill="rgb(241,138,7)"/><text x="580.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.58%)</title><rect x="584" y="260" width="7" height="15" fill="rgb(240,214,47)"/><text x="587.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.29%)</title><rect x="588" y="276" width="3" height="15" fill="rgb(210,129,50)"/><text x="591.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.29%)</title><rect x="601" y="324" width="4" height="15" fill="rgb(205,216,33)"/><text x="604.00" y="334.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.29%)</title><rect x="601" y="340" width="4" height="15" fill="rgb(239,86,35)"/><text x="604.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.29%)</title><rect x="605" y="340" width="3" height="15" fill="rgb(225,70,49)"/><text x="608.00" y="350.50"></text></g><g><title>arrays_overlap (array_assign.c:158) (1 samples, 0.29%)</title><rect x="605" y="356" width="3" height="15" fill="rgb(248,163,21)"/><text x="608.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (13 samples, 3.75%)</title><rect x="608" y="356" width="44" height="15" fill="rgb(246,14,37)"/><text x="611.00" y="366.50">raw_..</text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src:855) (13 samples, 3.75%)</title><rect x="608" y="372" width="44" height="15" fill="rgb(234,92,14)"/><text x="611.00" y="382.50">_ali..</text></g><g><title>check_array (sklearn/utils/validation.py:515) (19 samples, 5.48%)</title><rect x="591" y="244" width="65" height="15" fill="rgb(227,165,16)"/><text x="594.00" y="254.50">check_a..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (18 samples, 5.19%)</title><rect x="594" y="260" width="62" height="15" fill="rgb(237,226,39)"/><text x="597.00" y="270.50">asarra..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (16 samples, 4.61%)</title><rect x="601" y="276" width="55" height="15" fill="rgb(251,126,19)"/><text x="604.00" y="286.50">_arra..</text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (16 samples, 4.61%)</title><rect x="601" y="292" width="55" height="15" fill="rgb(248,227,40)"/><text x="604.00" y="302.50">PyArr..</text></g><g><title>PyArray_FromAny (ctors.c:1966) (16 samples, 4.61%)</title><rect x="601" y="308" width="55" height="15" fill="rgb(235,2,24)"/><text x="604.00" y="318.50">PyArr..</text></g><g><title>PyArray_FromArray (ctors.c:2172) (15 samples, 4.32%)</title><rect x="605" y="324" width="51" height="15" fill="rgb(237,104,25)"/><text x="608.00" y="334.50">PyArr..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (14 samples, 4.03%)</title><rect x="608" y="340" width="48" height="15" fill="rgb(232,52,28)"/><text x="611.00" y="350.50">PyAr..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.29%)</title><rect x="652" y="356" width="4" height="15" fill="rgb(214,215,48)"/><text x="655.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.29%)</title><rect x="652" y="372" width="4" height="15" fill="rgb(246,16,42)"/><text x="655.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.29%)</title><rect x="652" y="388" width="4" height="15" fill="rgb(210,10,26)"/><text x="655.00" y="398.50"></text></g><g><title>0x7f9a34fa2d50 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="652" y="404" width="4" height="15" fill="rgb(223,191,44)"/><text x="655.00" y="414.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.29%)</title><rect x="656" y="260" width="3" height="15" fill="rgb(207,2,15)"/><text x="659.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.58%)</title><rect x="656" y="244" width="6" height="15" fill="rgb(250,189,27)"/><text x="659.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.29%)</title><rect x="659" y="260" width="3" height="15" fill="rgb(231,3,3)"/><text x="662.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 1.15%)</title><rect x="662" y="244" width="14" height="15" fill="rgb(235,3,11)"/><text x="665.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.15%)</title><rect x="662" y="260" width="14" height="15" fill="rgb(242,88,25)"/><text x="665.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.29%)</title><rect x="673" y="276" width="3" height="15" fill="rgb(248,10,44)"/><text x="676.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.29%)</title><rect x="676" y="260" width="3" height="15" fill="rgb(207,177,47)"/><text x="679.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (39 samples, 11.24%)</title><rect x="554" y="212" width="132" height="15" fill="rgb(232,52,12)"/><text x="557.00" y="222.50">predict_proba (s..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (39 samples, 11.24%)</title><rect x="554" y="228" width="132" height="15" fill="rgb(212,2,28)"/><text x="557.00" y="238.50">_validate_X_pred..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 0.86%)</title><rect x="676" y="244" width="10" height="15" fill="rgb(251,63,43)"/><text x="679.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.58%)</title><rect x="679" y="260" width="7" height="15" fill="rgb(251,68,13)"/><text x="682.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.29%)</title><rect x="683" y="276" width="3" height="15" fill="rgb(233,205,45)"/><text x="686.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c:300) (1 samples, 0.29%)</title><rect x="686" y="388" width="4" height="15" fill="rgb(214,199,14)"/><text x="689.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.58%)</title><rect x="686" y="356" width="7" height="15" fill="rgb(249,224,41)"/><text x="689.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 0.58%)</title><rect x="686" y="372" width="7" height="15" fill="rgb(231,74,30)"/><text x="689.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c:406) (1 samples, 0.29%)</title><rect x="690" y="388" width="3" height="15" fill="rgb(209,205,16)"/><text x="693.00" y="398.50"></text></g><g><title>0x7f9a0e9d42df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.86%)</title><rect x="686" y="276" width="10" height="15" fill="rgb(219,77,30)"/><text x="689.00" y="286.50"></text></g><g><title>0x7f9a0e9b8d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.86%)</title><rect x="686" y="292" width="10" height="15" fill="rgb(249,38,50)"/><text x="689.00" y="302.50"></text></g><g><title>0x7f9a0e9b8666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.86%)</title><rect x="686" y="308" width="10" height="15" fill="rgb(238,46,28)"/><text x="689.00" y="318.50"></text></g><g><title>0x7f9a0e9ae2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.86%)</title><rect x="686" y="324" width="10" height="15" fill="rgb(230,20,37)"/><text x="689.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.86%)</title><rect x="686" y="340" width="10" height="15" fill="rgb(249,209,41)"/><text x="689.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.29%)</title><rect x="693" y="356" width="3" height="15" fill="rgb(224,141,23)"/><text x="696.00" y="366.50"></text></g><g><title>0x7f9a0e9d4456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="696" y="276" width="4" height="15" fill="rgb(243,58,38)"/><text x="699.00" y="286.50"></text></g><g><title>0x7f9a0e9d4592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="700" y="276" width="3" height="15" fill="rgb(238,177,49)"/><text x="703.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.29%)</title><rect x="700" y="292" width="3" height="15" fill="rgb(217,139,20)"/><text x="703.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="700" y="308" width="3" height="15" fill="rgb(209,116,21)"/><text x="703.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.29%)</title><rect x="700" y="324" width="3" height="15" fill="rgb(220,14,22)"/><text x="703.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.29%)</title><rect x="700" y="340" width="3" height="15" fill="rgb(208,174,17)"/><text x="703.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.29%)</title><rect x="700" y="356" width="3" height="15" fill="rgb(239,137,35)"/><text x="703.00" y="366.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.29%)</title><rect x="700" y="372" width="3" height="15" fill="rgb(224,65,26)"/><text x="703.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="700" y="388" width="3" height="15" fill="rgb(210,17,14)"/><text x="703.00" y="398.50"></text></g><g><title>0x7f9a0e9d46aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="703" y="276" width="4" height="15" fill="rgb(220,181,2)"/><text x="706.00" y="286.50"></text></g><g><title>0x7f9a0e9d46ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="707" y="276" width="6" height="15" fill="rgb(232,190,38)"/><text x="710.00" y="286.50"></text></g><g><title>0x7f9a0e9d5405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.59%)</title><rect x="686" y="260" width="31" height="15" fill="rgb(236,179,47)"/><text x="689.00" y="270.50">0x..</text></g><g><title>0x7f9a0e9d4c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="713" y="276" width="4" height="15" fill="rgb(209,87,32)"/><text x="716.00" y="286.50"></text></g><g><title>0x7f9a0e9ac5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="713" y="292" width="4" height="15" fill="rgb(222,170,28)"/><text x="716.00" y="302.50"></text></g><g><title>0x7f9a0e9ac2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="713" y="308" width="4" height="15" fill="rgb(217,116,17)"/><text x="716.00" y="318.50"></text></g><g><title>0x7f9a0e9abda8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="713" y="324" width="4" height="15" fill="rgb(210,161,18)"/><text x="716.00" y="334.50"></text></g><g><title>0x7f9a0e9a94dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="717" y="292" width="3" height="15" fill="rgb(251,140,47)"/><text x="720.00" y="302.50"></text></g><g><title>0x7f9a0e9c5fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.17%)</title><rect x="686" y="244" width="38" height="15" fill="rgb(237,189,20)"/><text x="689.00" y="254.50">0x7..</text></g><g><title>0x7f9a0e9d5540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="717" y="260" width="7" height="15" fill="rgb(205,45,43)"/><text x="720.00" y="270.50"></text></g><g><title>0x7f9a0e9aa2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="717" y="276" width="7" height="15" fill="rgb(241,78,42)"/><text x="720.00" y="286.50"></text></g><g><title>0x7f9a0e9a9530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="720" y="292" width="4" height="15" fill="rgb(211,208,44)"/><text x="723.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.29%)</title><rect x="720" y="308" width="4" height="15" fill="rgb(227,41,31)"/><text x="723.00" y="318.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:137) (1 samples, 0.29%)</title><rect x="724" y="276" width="3" height="15" fill="rgb(244,227,35)"/><text x="727.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.29%)</title><rect x="727" y="292" width="3" height="15" fill="rgb(218,104,33)"/><text x="730.00" y="302.50"></text></g><g><title>0x7f9a0e9c605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.86%)</title><rect x="724" y="244" width="10" height="15" fill="rgb(210,88,10)"/><text x="727.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.86%)</title><rect x="724" y="260" width="10" height="15" fill="rgb(225,131,7)"/><text x="727.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.58%)</title><rect x="727" y="276" width="7" height="15" fill="rgb(244,186,47)"/><text x="730.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.29%)</title><rect x="730" y="292" width="4" height="15" fill="rgb(227,42,0)"/><text x="733.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (15 samples, 4.32%)</title><rect x="686" y="212" width="51" height="15" fill="rgb(232,116,33)"/><text x="689.00" y="222.50">predi..</text></g><g><title>0x7f9a0e9c6d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.32%)</title><rect x="686" y="228" width="51" height="15" fill="rgb(244,31,35)"/><text x="689.00" y="238.50">0x7f9..</text></g><g><title>0x7f9a0e9c65f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="734" y="244" width="3" height="15" fill="rgb(227,91,28)"/><text x="737.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.29%)</title><rect x="741" y="228" width="3" height="15" fill="rgb(241,195,28)"/><text x="744.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:411) (1 samples, 0.29%)</title><rect x="741" y="244" width="3" height="15" fill="rgb(207,90,7)"/><text x="744.00" y="254.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (4 samples, 1.15%)</title><rect x="737" y="212" width="14" height="15" fill="rgb(244,47,52)"/><text x="740.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.58%)</title><rect x="744" y="228" width="7" height="15" fill="rgb(205,113,10)"/><text x="747.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.29%)</title><rect x="747" y="244" width="4" height="15" fill="rgb(215,136,5)"/><text x="750.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.29%)</title><rect x="751" y="260" width="3" height="15" fill="rgb(211,104,30)"/><text x="754.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.58%)</title><rect x="751" y="228" width="7" height="15" fill="rgb(225,208,14)"/><text x="754.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.58%)</title><rect x="751" y="244" width="7" height="15" fill="rgb(208,201,46)"/><text x="754.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.29%)</title><rect x="754" y="260" width="4" height="15" fill="rgb(206,69,31)"/><text x="757.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="754" y="276" width="4" height="15" fill="rgb(239,61,54)"/><text x="757.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.29%)</title><rect x="754" y="292" width="4" height="15" fill="rgb(225,183,13)"/><text x="757.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.29%)</title><rect x="761" y="308" width="3" height="15" fill="rgb(230,197,34)"/><text x="764.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (2 samples, 0.58%)</title><rect x="761" y="292" width="7" height="15" fill="rgb(218,21,52)"/><text x="764.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.29%)</title><rect x="764" y="308" width="4" height="15" fill="rgb(236,18,53)"/><text x="767.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2237) (1 samples, 0.29%)</title><rect x="764" y="324" width="4" height="15" fill="rgb(242,79,50)"/><text x="767.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.29%)</title><rect x="768" y="292" width="3" height="15" fill="rgb(231,105,33)"/><text x="771.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.29%)</title><rect x="768" y="308" width="3" height="15" fill="rgb(211,133,50)"/><text x="771.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.29%)</title><rect x="771" y="308" width="4" height="15" fill="rgb(243,162,10)"/><text x="774.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.29%)</title><rect x="771" y="324" width="4" height="15" fill="rgb(247,121,10)"/><text x="774.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.29%)</title><rect x="771" y="340" width="4" height="15" fill="rgb(226,69,27)"/><text x="774.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.29%)</title><rect x="771" y="356" width="4" height="15" fill="rgb(238,67,45)"/><text x="774.00" y="366.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.29%)</title><rect x="771" y="372" width="4" height="15" fill="rgb(227,125,0)"/><text x="774.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.29%)</title><rect x="771" y="388" width="4" height="15" fill="rgb(215,196,24)"/><text x="774.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.29%)</title><rect x="775" y="340" width="3" height="15" fill="rgb(230,68,34)"/><text x="778.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.58%)</title><rect x="775" y="324" width="6" height="15" fill="rgb(245,8,27)"/><text x="778.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="778" y="340" width="3" height="15" fill="rgb(239,83,16)"/><text x="781.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.29%)</title><rect x="778" y="356" width="3" height="15" fill="rgb(229,78,2)"/><text x="781.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3813) (1 samples, 0.29%)</title><rect x="778" y="372" width="3" height="15" fill="rgb(244,77,6)"/><text x="781.00" y="382.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.29%)</title><rect x="778" y="388" width="3" height="15" fill="rgb(223,80,8)"/><text x="781.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="781" y="340" width="4" height="15" fill="rgb(236,71,19)"/><text x="784.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.29%)</title><rect x="781" y="356" width="4" height="15" fill="rgb(205,33,1)"/><text x="784.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.29%)</title><rect x="781" y="372" width="4" height="15" fill="rgb(244,213,33)"/><text x="784.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.58%)</title><rect x="781" y="324" width="7" height="15" fill="rgb(229,150,40)"/><text x="784.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.29%)</title><rect x="785" y="340" width="3" height="15" fill="rgb(245,55,36)"/><text x="788.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2260) (1 samples, 0.29%)</title><rect x="785" y="356" width="3" height="15" fill="rgb(247,153,1)"/><text x="788.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3491) (1 samples, 0.29%)</title><rect x="788" y="340" width="4" height="15" fill="rgb(213,214,33)"/><text x="791.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="788" y="356" width="4" height="15" fill="rgb(243,77,36)"/><text x="791.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.29%)</title><rect x="792" y="340" width="3" height="15" fill="rgb(253,164,37)"/><text x="795.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.29%)</title><rect x="795" y="340" width="3" height="15" fill="rgb(247,191,42)"/><text x="798.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.29%)</title><rect x="798" y="340" width="4" height="15" fill="rgb(220,127,2)"/><text x="801.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.58%)</title><rect x="802" y="356" width="7" height="15" fill="rgb(239,144,36)"/><text x="805.00" y="366.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.58%)</title><rect x="802" y="372" width="7" height="15" fill="rgb(209,115,36)"/><text x="805.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (18 samples, 5.19%)</title><rect x="751" y="212" width="61" height="15" fill="rgb(251,134,43)"/><text x="754.00" y="222.50">predic..</text></g><g><title>array_sum (methods.c:2215) (16 samples, 4.61%)</title><rect x="758" y="228" width="54" height="15" fill="rgb(243,86,5)"/><text x="761.00" y="238.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 4.61%)</title><rect x="758" y="244" width="54" height="15" fill="rgb(237,6,2)"/><text x="761.00" y="254.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 4.32%)</title><rect x="761" y="260" width="51" height="15" fill="rgb(226,177,5)"/><text x="764.00" y="270.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 4.32%)</title><rect x="761" y="276" width="51" height="15" fill="rgb(219,46,39)"/><text x="764.00" y="286.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 3.46%)</title><rect x="771" y="292" width="41" height="15" fill="rgb(210,151,48)"/><text x="774.00" y="302.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 3.17%)</title><rect x="775" y="308" width="37" height="15" fill="rgb(247,36,21)"/><text x="778.00" y="318.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 2.02%)</title><rect x="788" y="324" width="24" height="15" fill="rgb(216,68,1)"/><text x="791.00" y="334.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.86%)</title><rect x="802" y="340" width="10" height="15" fill="rgb(215,164,48)"/><text x="805.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.29%)</title><rect x="809" y="356" width="3" height="15" fill="rgb(250,100,51)"/><text x="812.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.29%)</title><rect x="812" y="212" width="3" height="15" fill="rgb(251,188,12)"/><text x="815.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.29%)</title><rect x="812" y="228" width="3" height="15" fill="rgb(205,61,12)"/><text x="815.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="812" y="244" width="3" height="15" fill="rgb(219,138,24)"/><text x="815.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="812" y="260" width="3" height="15" fill="rgb(240,68,18)"/><text x="815.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.29%)</title><rect x="812" y="276" width="3" height="15" fill="rgb(241,26,29)"/><text x="815.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.29%)</title><rect x="812" y="292" width="3" height="15" fill="rgb(249,139,51)"/><text x="815.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1039) (1 samples, 0.29%)</title><rect x="812" y="308" width="3" height="15" fill="rgb(241,200,1)"/><text x="815.00" y="318.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.29%)</title><rect x="815" y="260" width="4" height="15" fill="rgb(219,107,44)"/><text x="818.00" y="270.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1165) (1 samples, 0.29%)</title><rect x="815" y="276" width="4" height="15" fill="rgb(218,173,19)"/><text x="818.00" y="286.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:293) (1 samples, 0.29%)</title><rect x="815" y="292" width="4" height="15" fill="rgb(239,53,32)"/><text x="818.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.58%)</title><rect x="815" y="244" width="7" height="15" fill="rgb(251,64,28)"/><text x="818.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.29%)</title><rect x="819" y="260" width="3" height="15" fill="rgb(224,117,30)"/><text x="822.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="822" y="276" width="4" height="15" fill="rgb(205,59,18)"/><text x="825.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.29%)</title><rect x="822" y="292" width="4" height="15" fill="rgb(218,67,19)"/><text x="825.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.29%)</title><rect x="822" y="308" width="4" height="15" fill="rgb(225,136,28)"/><text x="825.00" y="318.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:855) (1 samples, 0.29%)</title><rect x="822" y="324" width="4" height="15" fill="rgb(220,20,1)"/><text x="825.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.29%)</title><rect x="826" y="324" width="3" height="15" fill="rgb(246,203,28)"/><text x="829.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.29%)</title><rect x="829" y="324" width="3" height="15" fill="rgb(213,196,19)"/><text x="832.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.58%)</title><rect x="832" y="340" width="7" height="15" fill="rgb(209,42,54)"/><text x="835.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.86%)</title><rect x="832" y="324" width="11" height="15" fill="rgb(217,201,37)"/><text x="835.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.29%)</title><rect x="839" y="340" width="4" height="15" fill="rgb(251,166,46)"/><text x="842.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.73%)</title><rect x="826" y="276" width="20" height="15" fill="rgb(246,135,34)"/><text x="829.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.73%)</title><rect x="826" y="292" width="20" height="15" fill="rgb(244,121,19)"/><text x="829.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.73%)</title><rect x="826" y="308" width="20" height="15" fill="rgb(231,151,34)"/><text x="829.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.29%)</title><rect x="843" y="324" width="3" height="15" fill="rgb(244,191,25)"/><text x="846.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 4.03%)</title><rect x="815" y="228" width="48" height="15" fill="rgb(248,109,10)"/><text x="818.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 3.46%)</title><rect x="822" y="244" width="41" height="15" fill="rgb(225,128,0)"/><text x="825.00" y="254.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 3.46%)</title><rect x="822" y="260" width="41" height="15" fill="rgb(227,132,7)"/><text x="825.00" y="270.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 1.44%)</title><rect x="846" y="276" width="17" height="15" fill="rgb(249,208,41)"/><text x="849.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 1.44%)</title><rect x="846" y="292" width="17" height="15" fill="rgb(243,1,3)"/><text x="849.00" y="302.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 1.44%)</title><rect x="846" y="308" width="17" height="15" fill="rgb(217,157,39)"/><text x="849.00" y="318.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 1.44%)</title><rect x="846" y="324" width="17" height="15" fill="rgb(212,86,21)"/><text x="849.00" y="334.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 1.44%)</title><rect x="846" y="340" width="17" height="15" fill="rgb(238,55,19)"/><text x="849.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (101 samples, 29.11%)</title><rect x="523" y="196" width="343" height="15" fill="rgb(220,31,14)"/><text x="526.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boostin..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (15 samples, 4.32%)</title><rect x="815" y="212" width="51" height="15" fill="rgb(243,110,47)"/><text x="818.00" y="222.50">predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.29%)</title><rect x="863" y="228" width="3" height="15" fill="rgb(243,8,38)"/><text x="866.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.29%)</title><rect x="863" y="244" width="3" height="15" fill="rgb(236,75,43)"/><text x="866.00" y="254.50"></text></g><g><title>0x7f9a34fa31ef (libc-2.29.so) (1 samples, 0.29%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(236,219,49)"/><text x="866.00" y="270.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.29%)</title><rect x="870" y="212" width="3" height="15" fill="rgb(237,27,2)"/><text x="873.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.29%)</title><rect x="870" y="228" width="3" height="15" fill="rgb(233,64,54)"/><text x="873.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.29%)</title><rect x="873" y="228" width="4" height="15" fill="rgb(244,135,20)"/><text x="876.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.29%)</title><rect x="873" y="244" width="4" height="15" fill="rgb(253,71,43)"/><text x="876.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.29%)</title><rect x="873" y="260" width="4" height="15" fill="rgb(254,104,29)"/><text x="876.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="873" y="276" width="4" height="15" fill="rgb(254,199,41)"/><text x="876.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.29%)</title><rect x="873" y="292" width="4" height="15" fill="rgb(250,63,33)"/><text x="876.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="873" y="308" width="4" height="15" fill="rgb(243,104,17)"/><text x="876.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.58%)</title><rect x="883" y="324" width="7" height="15" fill="rgb(223,125,24)"/><text x="886.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.58%)</title><rect x="883" y="340" width="7" height="15" fill="rgb(233,11,23)"/><text x="886.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.29%)</title><rect x="890" y="356" width="4" height="15" fill="rgb(254,89,37)"/><text x="893.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.29%)</title><rect x="890" y="372" width="4" height="15" fill="rgb(205,145,19)"/><text x="893.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.29%)</title><rect x="890" y="388" width="4" height="15" fill="rgb(236,54,39)"/><text x="893.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="890" y="404" width="4" height="15" fill="rgb(212,119,44)"/><text x="893.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.29%)</title><rect x="890" y="420" width="4" height="15" fill="rgb(239,164,30)"/><text x="893.00" y="430.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.58%)</title><rect x="890" y="324" width="7" height="15" fill="rgb(211,0,16)"/><text x="893.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (2 samples, 0.58%)</title><rect x="890" y="340" width="7" height="15" fill="rgb(221,30,4)"/><text x="893.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.29%)</title><rect x="894" y="356" width="3" height="15" fill="rgb(222,6,43)"/><text x="897.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.29%)</title><rect x="900" y="388" width="4" height="15" fill="rgb(250,28,52)"/><text x="903.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.58%)</title><rect x="900" y="356" width="7" height="15" fill="rgb(252,154,20)"/><text x="903.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.58%)</title><rect x="900" y="372" width="7" height="15" fill="rgb(235,93,49)"/><text x="903.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.29%)</title><rect x="904" y="388" width="3" height="15" fill="rgb(218,17,20)"/><text x="907.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.29%)</title><rect x="904" y="404" width="3" height="15" fill="rgb(214,32,28)"/><text x="907.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:567) (1 samples, 0.29%)</title><rect x="904" y="420" width="3" height="15" fill="rgb(209,128,47)"/><text x="907.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="907" y="356" width="4" height="15" fill="rgb(242,109,9)"/><text x="910.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.29%)</title><rect x="907" y="372" width="4" height="15" fill="rgb(254,78,45)"/><text x="910.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.29%)</title><rect x="907" y="388" width="4" height="15" fill="rgb(208,40,43)"/><text x="910.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4428) (1 samples, 0.29%)</title><rect x="907" y="404" width="4" height="15" fill="rgb(205,138,6)"/><text x="910.00" y="414.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (9 samples, 2.59%)</title><rect x="883" y="308" width="31" height="15" fill="rgb(229,15,27)"/><text x="886.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 1.44%)</title><rect x="897" y="324" width="17" height="15" fill="rgb(243,86,43)"/><text x="900.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.15%)</title><rect x="900" y="340" width="14" height="15" fill="rgb(233,164,26)"/><text x="903.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.29%)</title><rect x="911" y="356" width="3" height="15" fill="rgb(227,228,38)"/><text x="914.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.29%)</title><rect x="911" y="372" width="3" height="15" fill="rgb(234,145,8)"/><text x="914.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (2 samples, 0.58%)</title><rect x="917" y="324" width="7" height="15" fill="rgb(212,171,9)"/><text x="920.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.58%)</title><rect x="917" y="340" width="7" height="15" fill="rgb(246,205,11)"/><text x="920.00" y="350.50"></text></g><g><title>0x7f9a34f98e7a (libc-2.29.so) (1 samples, 0.29%)</title><rect x="921" y="356" width="3" height="15" fill="rgb(216,132,32)"/><text x="924.00" y="366.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.29%)</title><rect x="924" y="324" width="4" height="15" fill="rgb(213,118,35)"/><text x="927.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.29%)</title><rect x="924" y="340" width="4" height="15" fill="rgb(244,79,5)"/><text x="927.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.29%)</title><rect x="924" y="356" width="4" height="15" fill="rgb(228,116,32)"/><text x="927.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (1 samples, 0.29%)</title><rect x="924" y="372" width="4" height="15" fill="rgb(227,193,49)"/><text x="927.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.29%)</title><rect x="924" y="388" width="4" height="15" fill="rgb(214,34,34)"/><text x="927.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.29%)</title><rect x="924" y="404" width="4" height="15" fill="rgb(208,120,53)"/><text x="927.00" y="414.50"></text></g><g><title>0x7f9a34f98763 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="924" y="420" width="4" height="15" fill="rgb(254,131,22)"/><text x="927.00" y="430.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (5 samples, 1.44%)</title><rect x="914" y="308" width="17" height="15" fill="rgb(243,96,3)"/><text x="917.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.29%)</title><rect x="928" y="324" width="3" height="15" fill="rgb(222,221,52)"/><text x="931.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1084) (1 samples, 0.29%)</title><rect x="931" y="372" width="3" height="15" fill="rgb(245,8,4)"/><text x="934.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.58%)</title><rect x="931" y="356" width="7" height="15" fill="rgb(209,144,26)"/><text x="934.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.29%)</title><rect x="934" y="372" width="4" height="15" fill="rgb(235,125,48)"/><text x="937.00" y="382.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.29%)</title><rect x="934" y="388" width="4" height="15" fill="rgb(216,149,1)"/><text x="937.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.29%)</title><rect x="934" y="404" width="4" height="15" fill="rgb(243,136,2)"/><text x="937.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.29%)</title><rect x="938" y="372" width="3" height="15" fill="rgb(240,23,12)"/><text x="941.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.29%)</title><rect x="938" y="388" width="3" height="15" fill="rgb(214,60,50)"/><text x="941.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.29%)</title><rect x="938" y="404" width="3" height="15" fill="rgb(228,179,7)"/><text x="941.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.29%)</title><rect x="938" y="420" width="3" height="15" fill="rgb(248,193,11)"/><text x="941.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:351) (1 samples, 0.29%)</title><rect x="938" y="436" width="3" height="15" fill="rgb(222,191,10)"/><text x="941.00" y="446.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1867) (1 samples, 0.29%)</title><rect x="941" y="404" width="4" height="15" fill="rgb(227,101,29)"/><text x="944.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1868) (1 samples, 0.29%)</title><rect x="945" y="404" width="3" height="15" fill="rgb(229,190,2)"/><text x="948.00" y="414.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (26 samples, 7.49%)</title><rect x="866" y="196" width="89" height="15" fill="rgb(239,74,42)"/><text x="869.00" y="206.50">_samme_pro..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (24 samples, 6.92%)</title><rect x="873" y="212" width="82" height="15" fill="rgb(217,156,25)"/><text x="876.00" y="222.50">clip (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 6.63%)</title><rect x="877" y="228" width="78" height="15" fill="rgb(229,75,29)"/><text x="880.00" y="238.50">array_imp..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (23 samples, 6.63%)</title><rect x="877" y="244" width="78" height="15" fill="rgb(248,215,11)"/><text x="880.00" y="254.50">clip (num..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (22 samples, 6.34%)</title><rect x="880" y="260" width="75" height="15" fill="rgb(217,108,37)"/><text x="883.00" y="270.50">_wrapfun..</text></g><g><title>array_clip (methods.c:2381) (22 samples, 6.34%)</title><rect x="880" y="276" width="75" height="15" fill="rgb(205,77,1)"/><text x="883.00" y="286.50">array_cl..</text></g><g><title>forward_ndarray_method (methods.c:108) (22 samples, 6.34%)</title><rect x="880" y="292" width="75" height="15" fill="rgb(240,200,20)"/><text x="883.00" y="302.50">forward_..</text></g><g><title>_clip (numpy/core/_methods.py:129) (7 samples, 2.02%)</title><rect x="931" y="308" width="24" height="15" fill="rgb(236,9,41)"/><text x="934.00" y="318.50">_..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (7 samples, 2.02%)</title><rect x="931" y="324" width="24" height="15" fill="rgb(254,225,41)"/><text x="934.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.02%)</title><rect x="931" y="340" width="24" height="15" fill="rgb(210,81,40)"/><text x="934.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.44%)</title><rect x="938" y="356" width="17" height="15" fill="rgb(229,22,10)"/><text x="941.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 1.15%)</title><rect x="941" y="372" width="14" height="15" fill="rgb(227,104,18)"/><text x="944.00" y="382.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 1.15%)</title><rect x="941" y="388" width="14" height="15" fill="rgb(233,227,15)"/><text x="944.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (2 samples, 0.58%)</title><rect x="948" y="404" width="7" height="15" fill="rgb(241,15,7)"/><text x="951.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.29%)</title><rect x="958" y="244" width="4" height="15" fill="rgb(230,112,30)"/><text x="961.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="958" y="260" width="4" height="15" fill="rgb(207,217,47)"/><text x="961.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.29%)</title><rect x="958" y="276" width="4" height="15" fill="rgb(245,228,0)"/><text x="961.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.29%)</title><rect x="958" y="292" width="4" height="15" fill="rgb(252,153,10)"/><text x="961.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.29%)</title><rect x="958" y="308" width="4" height="15" fill="rgb(243,162,29)"/><text x="961.00" y="318.50"></text></g><g><title>0x7f9a341a55b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="958" y="324" width="4" height="15" fill="rgb(220,41,52)"/><text x="961.00" y="334.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:186) (1 samples, 0.29%)</title><rect x="962" y="276" width="3" height="15" fill="rgb(238,67,38)"/><text x="965.00" y="286.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (2 samples, 0.58%)</title><rect x="965" y="276" width="7" height="15" fill="rgb(206,93,19)"/><text x="968.00" y="286.50"></text></g><g><title>0x7f9a341a60c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="972" y="292" width="3" height="15" fill="rgb(224,4,49)"/><text x="975.00" y="302.50"></text></g><g><title>0x7f9a35154dd0 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="975" y="292" width="4" height="15" fill="rgb(212,193,8)"/><text x="978.00" y="302.50"></text></g><g><title>0x7f9a35154e4d (libm-2.29.so) (1 samples, 0.29%)</title><rect x="979" y="292" width="3" height="15" fill="rgb(222,106,22)"/><text x="982.00" y="302.50"></text></g><g><title>0x7f9a35154e61 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="982" y="292" width="3" height="15" fill="rgb(227,94,52)"/><text x="985.00" y="302.50"></text></g><g><title>0x7f9a35154ed2 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="985" y="292" width="4" height="15" fill="rgb(207,111,41)"/><text x="988.00" y="302.50"></text></g><g><title>0x7f9a35154ef6 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="989" y="292" width="3" height="15" fill="rgb(228,54,23)"/><text x="992.00" y="302.50"></text></g><g><title>0x7f9a35154ff3 (libm-2.29.so) (1 samples, 0.29%)</title><rect x="992" y="292" width="4" height="15" fill="rgb(214,155,50)"/><text x="995.00" y="302.50"></text></g><g><title>0x7f9a3515500f (libm-2.29.so) (1 samples, 0.29%)</title><rect x="996" y="292" width="3" height="15" fill="rgb(210,229,22)"/><text x="999.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.29%)</title><rect x="999" y="292" width="3" height="15" fill="rgb(220,112,31)"/><text x="1002.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (16 samples, 4.61%)</title><rect x="955" y="196" width="54" height="15" fill="rgb(236,228,47)"/><text x="958.00" y="206.50">_samm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 4.32%)</title><rect x="958" y="212" width="51" height="15" fill="rgb(207,100,13)"/><text x="961.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (15 samples, 4.32%)</title><rect x="958" y="228" width="51" height="15" fill="rgb(217,227,15)"/><text x="961.00" y="238.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (14 samples, 4.03%)</title><rect x="962" y="244" width="47" height="15" fill="rgb(244,163,19)"/><text x="965.00" y="254.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (14 samples, 4.03%)</title><rect x="962" y="260" width="47" height="15" fill="rgb(218,66,31)"/><text x="965.00" y="270.50">triv..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (11 samples, 3.17%)</title><rect x="972" y="276" width="37" height="15" fill="rgb(214,214,48)"/><text x="975.00" y="286.50">PyU..</text></g><g><title>npy_log (npy_math_internal.h.src:469) (2 samples, 0.58%)</title><rect x="1002" y="292" width="7" height="15" fill="rgb(205,75,37)"/><text x="1005.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="1016" y="212" width="3" height="15" fill="rgb(254,29,54)"/><text x="1019.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="1016" y="228" width="3" height="15" fill="rgb(209,210,2)"/><text x="1019.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.29%)</title><rect x="1016" y="244" width="3" height="15" fill="rgb(212,87,29)"/><text x="1019.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="1023" y="244" width="3" height="15" fill="rgb(233,229,32)"/><text x="1026.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.29%)</title><rect x="1023" y="260" width="3" height="15" fill="rgb(237,196,18)"/><text x="1026.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.29%)</title><rect x="1023" y="276" width="3" height="15" fill="rgb(232,109,45)"/><text x="1026.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.29%)</title><rect x="1023" y="292" width="3" height="15" fill="rgb(234,104,35)"/><text x="1026.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.29%)</title><rect x="1023" y="308" width="3" height="15" fill="rgb(239,105,36)"/><text x="1026.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.29%)</title><rect x="1023" y="324" width="3" height="15" fill="rgb(220,88,16)"/><text x="1026.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.29%)</title><rect x="1026" y="244" width="4" height="15" fill="rgb(253,24,15)"/><text x="1029.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.29%)</title><rect x="1026" y="260" width="4" height="15" fill="rgb(215,226,51)"/><text x="1029.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.29%)</title><rect x="1026" y="276" width="4" height="15" fill="rgb(222,148,43)"/><text x="1029.00" y="286.50"></text></g><g><title>array_multiply (number.c:354) (4 samples, 1.15%)</title><rect x="1019" y="212" width="14" height="15" fill="rgb(211,99,46)"/><text x="1022.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.86%)</title><rect x="1023" y="228" width="10" height="15" fill="rgb(253,198,23)"/><text x="1026.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="1030" y="244" width="3" height="15" fill="rgb(232,149,10)"/><text x="1033.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.29%)</title><rect x="1030" y="260" width="3" height="15" fill="rgb(254,129,49)"/><text x="1033.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.29%)</title><rect x="1030" y="276" width="3" height="15" fill="rgb(222,116,39)"/><text x="1033.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src:699) (1 samples, 0.29%)</title><rect x="1030" y="292" width="3" height="15" fill="rgb(218,43,19)"/><text x="1033.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.29%)</title><rect x="1030" y="308" width="3" height="15" fill="rgb(229,163,47)"/><text x="1033.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.29%)</title><rect x="1033" y="212" width="3" height="15" fill="rgb(215,47,34)"/><text x="1036.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.29%)</title><rect x="1033" y="228" width="3" height="15" fill="rgb(230,37,32)"/><text x="1036.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.29%)</title><rect x="1036" y="244" width="4" height="15" fill="rgb(235,12,45)"/><text x="1039.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1061) (1 samples, 0.29%)</title><rect x="1036" y="260" width="4" height="15" fill="rgb(206,46,13)"/><text x="1039.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.29%)</title><rect x="1040" y="276" width="3" height="15" fill="rgb(231,68,8)"/><text x="1043.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(240,198,37)"/><text x="1046.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.29%)</title><rect x="1043" y="308" width="4" height="15" fill="rgb(248,217,7)"/><text x="1046.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.29%)</title><rect x="1047" y="308" width="3" height="15" fill="rgb(227,165,11)"/><text x="1050.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.29%)</title><rect x="1047" y="324" width="3" height="15" fill="rgb(216,62,23)"/><text x="1050.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="1047" y="340" width="3" height="15" fill="rgb(221,188,22)"/><text x="1050.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.29%)</title><rect x="1047" y="356" width="3" height="15" fill="rgb(249,1,38)"/><text x="1050.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.29%)</title><rect x="1047" y="372" width="3" height="15" fill="rgb(236,152,45)"/><text x="1050.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.29%)</title><rect x="1047" y="388" width="3" height="15" fill="rgb(245,8,34)"/><text x="1050.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.29%)</title><rect x="1047" y="404" width="3" height="15" fill="rgb(226,78,29)"/><text x="1050.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1047" y="420" width="3" height="15" fill="rgb(209,93,22)"/><text x="1050.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.86%)</title><rect x="1043" y="276" width="10" height="15" fill="rgb(243,99,40)"/><text x="1046.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.58%)</title><rect x="1047" y="292" width="6" height="15" fill="rgb(214,204,5)"/><text x="1050.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3102) (1 samples, 0.29%)</title><rect x="1050" y="308" width="3" height="15" fill="rgb(235,100,27)"/><text x="1053.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.29%)</title><rect x="1053" y="292" width="4" height="15" fill="rgb(230,148,38)"/><text x="1056.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.29%)</title><rect x="1053" y="308" width="4" height="15" fill="rgb(239,63,46)"/><text x="1056.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1053" y="324" width="4" height="15" fill="rgb(214,81,32)"/><text x="1056.00" y="334.50"></text></g><g><title>0x7f9a34f842f8 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1053" y="340" width="4" height="15" fill="rgb(214,187,25)"/><text x="1056.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.29%)</title><rect x="1057" y="324" width="3" height="15" fill="rgb(248,4,5)"/><text x="1060.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.29%)</title><rect x="1060" y="324" width="4" height="15" fill="rgb(208,146,52)"/><text x="1063.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.29%)</title><rect x="1064" y="324" width="3" height="15" fill="rgb(228,2,30)"/><text x="1067.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.73%)</title><rect x="1053" y="276" width="21" height="15" fill="rgb(233,168,18)"/><text x="1056.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 1.44%)</title><rect x="1057" y="292" width="17" height="15" fill="rgb(247,36,54)"/><text x="1060.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.44%)</title><rect x="1057" y="308" width="17" height="15" fill="rgb(229,98,25)"/><text x="1060.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.58%)</title><rect x="1067" y="324" width="7" height="15" fill="rgb(209,14,7)"/><text x="1070.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.29%)</title><rect x="1070" y="340" width="4" height="15" fill="rgb(235,213,12)"/><text x="1073.00" y="350.50"></text></g><g><title>array_subtract (number.c:342) (12 samples, 3.46%)</title><rect x="1036" y="212" width="41" height="15" fill="rgb(226,64,43)"/><text x="1039.00" y="222.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.46%)</title><rect x="1036" y="228" width="41" height="15" fill="rgb(209,149,11)"/><text x="1039.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 3.17%)</title><rect x="1040" y="244" width="37" height="15" fill="rgb(210,152,10)"/><text x="1043.00" y="254.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 3.17%)</title><rect x="1040" y="260" width="37" height="15" fill="rgb(205,156,43)"/><text x="1043.00" y="270.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.29%)</title><rect x="1074" y="276" width="3" height="15" fill="rgb(210,208,15)"/><text x="1077.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="1074" y="292" width="3" height="15" fill="rgb(242,41,21)"/><text x="1077.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.29%)</title><rect x="1081" y="260" width="3" height="15" fill="rgb(209,82,15)"/><text x="1084.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="1081" y="276" width="3" height="15" fill="rgb(247,33,5)"/><text x="1084.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="1081" y="292" width="3" height="15" fill="rgb(214,180,26)"/><text x="1084.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.29%)</title><rect x="1081" y="308" width="3" height="15" fill="rgb(244,137,44)"/><text x="1084.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.29%)</title><rect x="1081" y="324" width="3" height="15" fill="rgb(237,101,17)"/><text x="1084.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.29%)</title><rect x="1081" y="340" width="3" height="15" fill="rgb(214,7,25)"/><text x="1084.00" y="350.50"></text></g><g><title>0x7f9a35060143 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1081" y="356" width="3" height="15" fill="rgb(220,100,1)"/><text x="1084.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="1084" y="308" width="3" height="15" fill="rgb(212,7,3)"/><text x="1087.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="1084" y="324" width="3" height="15" fill="rgb(229,189,18)"/><text x="1087.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.29%)</title><rect x="1084" y="340" width="3" height="15" fill="rgb(230,32,5)"/><text x="1087.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.29%)</title><rect x="1084" y="356" width="3" height="15" fill="rgb(214,140,52)"/><text x="1087.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.29%)</title><rect x="1084" y="372" width="3" height="15" fill="rgb(232,89,33)"/><text x="1087.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.29%)</title><rect x="1087" y="324" width="4" height="15" fill="rgb(222,198,2)"/><text x="1090.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.29%)</title><rect x="1091" y="324" width="3" height="15" fill="rgb(234,197,11)"/><text x="1094.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (174 samples, 50.14%)</title><rect x="523" y="180" width="592" height="15" fill="rgb(242,135,4)"/><text x="526.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (31 samples, 8.93%)</title><rect x="1009" y="196" width="106" height="15" fill="rgb(217,111,18)"/><text x="1012.00" y="206.50">_samme_proba..</text></g><g><title>array_sum (methods.c:2215) (11 samples, 3.17%)</title><rect x="1077" y="212" width="38" height="15" fill="rgb(246,225,23)"/><text x="1080.00" y="222.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 3.17%)</title><rect x="1077" y="228" width="38" height="15" fill="rgb(210,71,49)"/><text x="1080.00" y="238.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 2.88%)</title><rect x="1081" y="244" width="34" height="15" fill="rgb(210,100,12)"/><text x="1084.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 2.59%)</title><rect x="1084" y="260" width="31" height="15" fill="rgb(236,32,18)"/><text x="1087.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 2.59%)</title><rect x="1084" y="276" width="31" height="15" fill="rgb(252,46,51)"/><text x="1087.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 2.59%)</title><rect x="1084" y="292" width="31" height="15" fill="rgb(237,195,38)"/><text x="1087.00" y="302.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 2.31%)</title><rect x="1087" y="308" width="28" height="15" fill="rgb(250,192,27)"/><text x="1090.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.73%)</title><rect x="1094" y="324" width="21" height="15" fill="rgb(247,28,28)"/><text x="1097.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.86%)</title><rect x="1104" y="340" width="11" height="15" fill="rgb(226,109,33)"/><text x="1107.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (3 samples, 0.86%)</title><rect x="1104" y="356" width="11" height="15" fill="rgb(240,173,46)"/><text x="1107.00" y="366.50"></text></g><g><title>0x7f9a34fa314e (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1115" y="196" width="3" height="15" fill="rgb(205,171,0)"/><text x="1118.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="1118" y="212" width="3" height="15" fill="rgb(241,103,43)"/><text x="1121.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.29%)</title><rect x="1118" y="228" width="3" height="15" fill="rgb(215,8,5)"/><text x="1121.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.29%)</title><rect x="1118" y="244" width="3" height="15" fill="rgb(238,211,3)"/><text x="1121.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1711) (1 samples, 0.29%)</title><rect x="1118" y="260" width="3" height="15" fill="rgb(236,197,29)"/><text x="1121.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.29%)</title><rect x="1121" y="228" width="4" height="15" fill="rgb(235,155,2)"/><text x="1124.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="1121" y="244" width="4" height="15" fill="rgb(233,167,10)"/><text x="1124.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.29%)</title><rect x="1121" y="260" width="4" height="15" fill="rgb(244,9,54)"/><text x="1124.00" y="270.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (178 samples, 51.30%)</title><rect x="523" y="148" width="605" height="15" fill="rgb(233,12,1)"/><text x="526.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (178 samples, 51.30%)</title><rect x="523" y="164" width="605" height="15" fill="rgb(215,205,53)"/><text x="526.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_add (number.c:330) (4 samples, 1.15%)</title><rect x="1115" y="180" width="13" height="15" fill="rgb(232,88,53)"/><text x="1118.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.86%)</title><rect x="1118" y="196" width="10" height="15" fill="rgb(241,226,29)"/><text x="1121.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.58%)</title><rect x="1121" y="212" width="7" height="15" fill="rgb(247,139,43)"/><text x="1124.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.29%)</title><rect x="1125" y="228" width="3" height="15" fill="rgb(250,140,45)"/><text x="1128.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.29%)</title><rect x="1125" y="244" width="3" height="15" fill="rgb(243,94,50)"/><text x="1128.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.29%)</title><rect x="1125" y="260" width="3" height="15" fill="rgb(208,156,12)"/><text x="1128.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.29%)</title><rect x="1125" y="276" width="3" height="15" fill="rgb(209,85,15)"/><text x="1128.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.29%)</title><rect x="1125" y="292" width="3" height="15" fill="rgb(222,86,49)"/><text x="1128.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.29%)</title><rect x="1125" y="308" width="3" height="15" fill="rgb(235,90,53)"/><text x="1128.00" y="318.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:778) (1 samples, 0.29%)</title><rect x="1128" y="164" width="4" height="15" fill="rgb(245,159,33)"/><text x="1131.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="1128" y="180" width="4" height="15" fill="rgb(212,102,44)"/><text x="1131.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="1128" y="196" width="4" height="15" fill="rgb(245,23,30)"/><text x="1131.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.29%)</title><rect x="1128" y="212" width="4" height="15" fill="rgb(234,130,24)"/><text x="1131.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.29%)</title><rect x="1128" y="228" width="4" height="15" fill="rgb(235,135,40)"/><text x="1131.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.29%)</title><rect x="1128" y="244" width="4" height="15" fill="rgb(244,213,18)"/><text x="1131.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.29%)</title><rect x="1128" y="260" width="4" height="15" fill="rgb(230,128,23)"/><text x="1131.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:376) (1 samples, 0.29%)</title><rect x="1128" y="276" width="4" height="15" fill="rgb(212,28,43)"/><text x="1131.00" y="286.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.29%)</title><rect x="1128" y="292" width="4" height="15" fill="rgb(205,57,50)"/><text x="1131.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.29%)</title><rect x="1128" y="308" width="4" height="15" fill="rgb(229,225,4)"/><text x="1131.00" y="318.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:613) (1 samples, 0.29%)</title><rect x="1132" y="180" width="3" height="15" fill="rgb(218,159,15)"/><text x="1135.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="1132" y="196" width="3" height="15" fill="rgb(237,30,5)"/><text x="1135.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="1132" y="212" width="3" height="15" fill="rgb(235,126,41)"/><text x="1135.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.29%)</title><rect x="1132" y="228" width="3" height="15" fill="rgb(239,222,21)"/><text x="1135.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.29%)</title><rect x="1132" y="244" width="3" height="15" fill="rgb(240,68,46)"/><text x="1135.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.29%)</title><rect x="1132" y="260" width="3" height="15" fill="rgb(253,228,26)"/><text x="1135.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1132" y="276" width="3" height="15" fill="rgb(227,134,0)"/><text x="1135.00" y="286.50"></text></g><g><title>0x7f9a35154c7b (libm-2.29.so) (1 samples, 0.29%)</title><rect x="1132" y="292" width="3" height="15" fill="rgb(210,119,44)"/><text x="1135.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.29%)</title><rect x="1135" y="324" width="3" height="15" fill="rgb(212,197,46)"/><text x="1138.00" y="334.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:614) (2 samples, 0.58%)</title><rect x="1135" y="180" width="7" height="15" fill="rgb(214,126,10)"/><text x="1138.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.58%)</title><rect x="1135" y="196" width="7" height="15" fill="rgb(243,172,9)"/><text x="1138.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.58%)</title><rect x="1135" y="212" width="7" height="15" fill="rgb(239,9,51)"/><text x="1138.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.58%)</title><rect x="1135" y="228" width="7" height="15" fill="rgb(254,176,9)"/><text x="1138.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.58%)</title><rect x="1135" y="244" width="7" height="15" fill="rgb(211,207,22)"/><text x="1138.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.58%)</title><rect x="1135" y="260" width="7" height="15" fill="rgb(240,73,24)"/><text x="1138.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.58%)</title><rect x="1135" y="276" width="7" height="15" fill="rgb(240,2,12)"/><text x="1138.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.58%)</title><rect x="1135" y="292" width="7" height="15" fill="rgb(216,32,4)"/><text x="1138.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (2 samples, 0.58%)</title><rect x="1135" y="308" width="7" height="15" fill="rgb(250,89,14)"/><text x="1138.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.29%)</title><rect x="1138" y="324" width="4" height="15" fill="rgb(224,16,19)"/><text x="1141.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.29%)</title><rect x="1138" y="340" width="4" height="15" fill="rgb(206,8,28)"/><text x="1141.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:38) (331 samples, 95.39%)</title><rect x="20" y="52" width="1125" height="15" fill="rgb(212,213,50)"/><text x="23.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:37) (331 samples, 95.39%)</title><rect x="20" y="68" width="1125" height="15" fill="rgb(232,20,25)"/><text x="23.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:29) (330 samples, 95.10%)</title><rect x="23" y="84" width="1122" height="15" fill="rgb(237,64,17)"/><text x="26.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:23) (184 samples, 53.03%)</title><rect x="520" y="100" width="625" height="15" fill="rgb(205,20,30)"/><text x="523.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (184 samples, 53.03%)</title><rect x="520" y="116" width="625" height="15" fill="rgb(229,101,38)"/><text x="523.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (184 samples, 53.03%)</title><rect x="520" y="132" width="625" height="15" fill="rgb(239,81,42)"/><text x="523.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (5 samples, 1.44%)</title><rect x="1128" y="148" width="17" height="15" fill="rgb(253,149,7)"/><text x="1131.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (4 samples, 1.15%)</title><rect x="1132" y="164" width="13" height="15" fill="rgb(240,188,43)"/><text x="1135.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:615) (1 samples, 0.29%)</title><rect x="1142" y="180" width="3" height="15" fill="rgb(252,220,31)"/><text x="1145.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="1142" y="196" width="3" height="15" fill="rgb(208,209,45)"/><text x="1145.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="1142" y="212" width="3" height="15" fill="rgb(245,136,54)"/><text x="1145.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.29%)</title><rect x="1142" y="228" width="3" height="15" fill="rgb(236,124,12)"/><text x="1145.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.29%)</title><rect x="1142" y="244" width="3" height="15" fill="rgb(213,170,5)"/><text x="1145.00" y="254.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.29%)</title><rect x="1142" y="260" width="3" height="15" fill="rgb(215,38,52)"/><text x="1145.00" y="270.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.29%)</title><rect x="1142" y="276" width="3" height="15" fill="rgb(212,153,14)"/><text x="1145.00" y="286.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.29%)</title><rect x="1142" y="292" width="3" height="15" fill="rgb(210,180,22)"/><text x="1145.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.29%)</title><rect x="1142" y="308" width="3" height="15" fill="rgb(207,208,48)"/><text x="1145.00" y="318.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:1) (1 samples, 0.29%)</title><rect x="1145" y="148" width="4" height="15" fill="rgb(246,187,20)"/><text x="1148.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="164" width="4" height="15" fill="rgb(241,129,30)"/><text x="1148.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="180" width="4" height="15" fill="rgb(249,81,1)"/><text x="1148.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="196" width="4" height="15" fill="rgb(237,13,28)"/><text x="1148.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1145" y="212" width="4" height="15" fill="rgb(219,117,6)"/><text x="1148.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="228" width="4" height="15" fill="rgb(242,58,33)"/><text x="1148.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.29%)</title><rect x="1145" y="244" width="4" height="15" fill="rgb(227,223,42)"/><text x="1148.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1145" y="260" width="4" height="15" fill="rgb(208,209,28)"/><text x="1148.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="276" width="4" height="15" fill="rgb(233,198,47)"/><text x="1148.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="292" width="4" height="15" fill="rgb(218,114,15)"/><text x="1148.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="308" width="4" height="15" fill="rgb(250,127,25)"/><text x="1148.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="324" width="4" height="15" fill="rgb(253,152,15)"/><text x="1148.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1145" y="340" width="4" height="15" fill="rgb(221,167,24)"/><text x="1148.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="356" width="4" height="15" fill="rgb(226,127,49)"/><text x="1148.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.29%)</title><rect x="1145" y="372" width="4" height="15" fill="rgb(222,110,48)"/><text x="1148.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="388" width="4" height="15" fill="rgb(225,216,14)"/><text x="1148.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="404" width="4" height="15" fill="rgb(227,30,39)"/><text x="1148.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="420" width="4" height="15" fill="rgb(226,70,19)"/><text x="1148.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1145" y="436" width="4" height="15" fill="rgb(221,47,26)"/><text x="1148.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="452" width="4" height="15" fill="rgb(251,66,9)"/><text x="1148.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:9) (1 samples, 0.29%)</title><rect x="1145" y="468" width="4" height="15" fill="rgb(228,116,51)"/><text x="1148.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="484" width="4" height="15" fill="rgb(225,169,49)"/><text x="1148.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="500" width="4" height="15" fill="rgb(237,229,51)"/><text x="1148.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="516" width="4" height="15" fill="rgb(228,206,15)"/><text x="1148.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1145" y="532" width="4" height="15" fill="rgb(223,45,41)"/><text x="1148.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="548" width="4" height="15" fill="rgb(213,161,50)"/><text x="1148.00" y="558.50"></text></g><g><title>&lt;module&gt; (weakref.py:343) (1 samples, 0.29%)</title><rect x="1145" y="564" width="4" height="15" fill="rgb(236,150,49)"/><text x="1148.00" y="574.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.29%)</title><rect x="1145" y="580" width="4" height="15" fill="rgb(207,71,4)"/><text x="1148.00" y="590.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.29%)</title><rect x="1149" y="948" width="3" height="15" fill="rgb(224,54,42)"/><text x="1152.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.29%)</title><rect x="1149" y="964" width="3" height="15" fill="rgb(220,106,36)"/><text x="1152.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:132) (1 samples, 0.29%)</title><rect x="1149" y="980" width="3" height="15" fill="rgb(228,170,9)"/><text x="1152.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.58%)</title><rect x="1149" y="916" width="6" height="15" fill="rgb(249,87,38)"/><text x="1152.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.58%)</title><rect x="1149" y="932" width="6" height="15" fill="rgb(222,51,16)"/><text x="1152.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="1152" y="948" width="3" height="15" fill="rgb(246,101,5)"/><text x="1155.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="1152" y="964" width="3" height="15" fill="rgb(238,173,13)"/><text x="1155.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.29%)</title><rect x="1152" y="980" width="3" height="15" fill="rgb(221,9,32)"/><text x="1155.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.29%)</title><rect x="1152" y="996" width="3" height="15" fill="rgb(226,27,28)"/><text x="1155.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:153) (1 samples, 0.29%)</title><rect x="1152" y="1012" width="3" height="15" fill="rgb(210,146,52)"/><text x="1155.00" y="1022.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.29%)</title><rect x="1155" y="932" width="4" height="15" fill="rgb(246,202,42)"/><text x="1158.00" y="942.50"></text></g><g><title>dirname (posixpath.py:157) (1 samples, 0.29%)</title><rect x="1155" y="948" width="4" height="15" fill="rgb(228,45,1)"/><text x="1158.00" y="958.50"></text></g><g><title>_get_sep (posixpath.py:45) (1 samples, 0.29%)</title><rect x="1155" y="964" width="4" height="15" fill="rgb(236,10,53)"/><text x="1158.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.29%)</title><rect x="1159" y="964" width="3" height="15" fill="rgb(241,4,34)"/><text x="1162.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.29%)</title><rect x="1159" y="980" width="3" height="15" fill="rgb(216,22,48)"/><text x="1162.00" y="990.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.29%)</title><rect x="1159" y="996" width="3" height="15" fill="rgb(232,148,37)"/><text x="1162.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.29%)</title><rect x="1159" y="1012" width="3" height="15" fill="rgb(231,71,45)"/><text x="1162.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="1159" y="1028" width="3" height="15" fill="rgb(232,29,1)"/><text x="1162.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="1159" y="1044" width="3" height="15" fill="rgb(226,73,16)"/><text x="1162.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (5 samples, 1.44%)</title><rect x="1149" y="852" width="17" height="15" fill="rgb(246,140,13)"/><text x="1152.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (5 samples, 1.44%)</title><rect x="1149" y="868" width="17" height="15" fill="rgb(239,124,53)"/><text x="1152.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (5 samples, 1.44%)</title><rect x="1149" y="884" width="17" height="15" fill="rgb(245,8,40)"/><text x="1152.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (5 samples, 1.44%)</title><rect x="1149" y="900" width="17" height="15" fill="rgb(233,9,17)"/><text x="1152.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.86%)</title><rect x="1155" y="916" width="11" height="15" fill="rgb(230,26,23)"/><text x="1158.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.58%)</title><rect x="1159" y="932" width="7" height="15" fill="rgb(246,94,37)"/><text x="1162.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.58%)</title><rect x="1159" y="948" width="7" height="15" fill="rgb(250,61,30)"/><text x="1162.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.29%)</title><rect x="1162" y="964" width="4" height="15" fill="rgb(239,55,23)"/><text x="1165.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.29%)</title><rect x="1162" y="980" width="4" height="15" fill="rgb(212,132,44)"/><text x="1165.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.29%)</title><rect x="1162" y="996" width="4" height="15" fill="rgb(247,152,10)"/><text x="1165.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="1166" y="852" width="3" height="15" fill="rgb(242,94,17)"/><text x="1169.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.29%)</title><rect x="1166" y="868" width="3" height="15" fill="rgb(237,82,51)"/><text x="1169.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.29%)</title><rect x="1166" y="884" width="3" height="15" fill="rgb(205,211,36)"/><text x="1169.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.29%)</title><rect x="1166" y="900" width="3" height="15" fill="rgb(233,201,15)"/><text x="1169.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.29%)</title><rect x="1166" y="916" width="3" height="15" fill="rgb(207,41,48)"/><text x="1169.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.29%)</title><rect x="1166" y="932" width="3" height="15" fill="rgb(228,206,38)"/><text x="1169.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.29%)</title><rect x="1166" y="948" width="3" height="15" fill="rgb(240,102,43)"/><text x="1169.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.29%)</title><rect x="1166" y="964" width="3" height="15" fill="rgb(232,20,31)"/><text x="1169.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.29%)</title><rect x="1166" y="980" width="3" height="15" fill="rgb(254,54,8)"/><text x="1169.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.29%)</title><rect x="1166" y="996" width="3" height="15" fill="rgb(232,217,28)"/><text x="1169.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.29%)</title><rect x="1166" y="1012" width="3" height="15" fill="rgb(206,149,48)"/><text x="1169.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.29%)</title><rect x="1166" y="1028" width="3" height="15" fill="rgb(205,197,15)"/><text x="1169.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1166" y="1044" width="3" height="15" fill="rgb(238,226,23)"/><text x="1169.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:2) (7 samples, 2.02%)</title><rect x="1149" y="148" width="23" height="15" fill="rgb(243,48,19)"/><text x="1152.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="164" width="23" height="15" fill="rgb(254,64,47)"/><text x="1152.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.02%)</title><rect x="1149" y="180" width="23" height="15" fill="rgb(241,101,44)"/><text x="1152.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="196" width="23" height="15" fill="rgb(208,131,11)"/><text x="1152.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="212" width="23" height="15" fill="rgb(215,2,34)"/><text x="1152.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="1149" y="228" width="23" height="15" fill="rgb(210,49,5)"/><text x="1152.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="1149" y="244" width="23" height="15" fill="rgb(221,187,27)"/><text x="1152.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="1149" y="260" width="23" height="15" fill="rgb(249,41,39)"/><text x="1152.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="276" width="23" height="15" fill="rgb(224,107,29)"/><text x="1152.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 2.02%)</title><rect x="1149" y="292" width="23" height="15" fill="rgb(232,112,42)"/><text x="1152.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="308" width="23" height="15" fill="rgb(237,229,1)"/><text x="1152.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="1149" y="324" width="23" height="15" fill="rgb(205,211,5)"/><text x="1152.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="1149" y="340" width="23" height="15" fill="rgb(207,84,15)"/><text x="1152.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="1149" y="356" width="23" height="15" fill="rgb(215,176,47)"/><text x="1152.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="372" width="23" height="15" fill="rgb(209,110,42)"/><text x="1152.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.02%)</title><rect x="1149" y="388" width="23" height="15" fill="rgb(218,75,2)"/><text x="1152.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="404" width="23" height="15" fill="rgb(205,144,10)"/><text x="1152.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="1149" y="420" width="23" height="15" fill="rgb(223,4,3)"/><text x="1152.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="1149" y="436" width="23" height="15" fill="rgb(252,205,7)"/><text x="1152.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="1149" y="452" width="23" height="15" fill="rgb(209,200,36)"/><text x="1152.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="468" width="23" height="15" fill="rgb(226,47,27)"/><text x="1152.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.02%)</title><rect x="1149" y="484" width="23" height="15" fill="rgb(222,118,15)"/><text x="1152.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="500" width="23" height="15" fill="rgb(236,101,37)"/><text x="1152.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="1149" y="516" width="23" height="15" fill="rgb(242,229,5)"/><text x="1152.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="1149" y="532" width="23" height="15" fill="rgb(214,56,30)"/><text x="1152.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="1149" y="548" width="23" height="15" fill="rgb(207,210,7)"/><text x="1152.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="564" width="23" height="15" fill="rgb(251,80,11)"/><text x="1152.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.02%)</title><rect x="1149" y="580" width="23" height="15" fill="rgb(227,169,30)"/><text x="1152.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="596" width="23" height="15" fill="rgb(220,187,10)"/><text x="1152.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.02%)</title><rect x="1149" y="612" width="23" height="15" fill="rgb(239,95,33)"/><text x="1152.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="628" width="23" height="15" fill="rgb(240,170,22)"/><text x="1152.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="644" width="23" height="15" fill="rgb(221,41,54)"/><text x="1152.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="1149" y="660" width="23" height="15" fill="rgb(207,216,35)"/><text x="1152.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="1149" y="676" width="23" height="15" fill="rgb(217,56,41)"/><text x="1152.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="1149" y="692" width="23" height="15" fill="rgb(218,6,24)"/><text x="1152.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="708" width="23" height="15" fill="rgb(223,131,36)"/><text x="1152.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.02%)</title><rect x="1149" y="724" width="23" height="15" fill="rgb(233,127,48)"/><text x="1152.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.02%)</title><rect x="1149" y="740" width="23" height="15" fill="rgb(211,121,50)"/><text x="1152.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.02%)</title><rect x="1149" y="756" width="23" height="15" fill="rgb(239,110,50)"/><text x="1152.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.02%)</title><rect x="1149" y="772" width="23" height="15" fill="rgb(208,200,54)"/><text x="1152.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.02%)</title><rect x="1149" y="788" width="23" height="15" fill="rgb(245,221,51)"/><text x="1152.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.02%)</title><rect x="1149" y="804" width="23" height="15" fill="rgb(237,113,10)"/><text x="1152.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 2.02%)</title><rect x="1149" y="820" width="23" height="15" fill="rgb(221,193,36)"/><text x="1152.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 2.02%)</title><rect x="1149" y="836" width="23" height="15" fill="rgb(210,43,2)"/><text x="1152.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.29%)</title><rect x="1169" y="852" width="3" height="15" fill="rgb(240,123,45)"/><text x="1172.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.29%)</title><rect x="1169" y="868" width="3" height="15" fill="rgb(205,104,18)"/><text x="1172.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.29%)</title><rect x="1169" y="884" width="3" height="15" fill="rgb(235,81,37)"/><text x="1172.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.29%)</title><rect x="1169" y="900" width="3" height="15" fill="rgb(224,55,48)"/><text x="1172.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="1169" y="916" width="3" height="15" fill="rgb(238,160,42)"/><text x="1172.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.29%)</title><rect x="1169" y="932" width="3" height="15" fill="rgb(236,43,39)"/><text x="1172.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.29%)</title><rect x="1169" y="948" width="3" height="15" fill="rgb(254,51,52)"/><text x="1172.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.29%)</title><rect x="1169" y="964" width="3" height="15" fill="rgb(253,103,10)"/><text x="1172.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.29%)</title><rect x="1172" y="532" width="4" height="15" fill="rgb(216,15,0)"/><text x="1175.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="548" width="4" height="15" fill="rgb(230,161,13)"/><text x="1175.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="564" width="4" height="15" fill="rgb(211,139,50)"/><text x="1175.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="580" width="4" height="15" fill="rgb(227,168,7)"/><text x="1175.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="596" width="4" height="15" fill="rgb(248,153,9)"/><text x="1175.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="612" width="4" height="15" fill="rgb(244,62,49)"/><text x="1175.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.29%)</title><rect x="1172" y="628" width="4" height="15" fill="rgb(228,172,31)"/><text x="1175.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="644" width="4" height="15" fill="rgb(242,19,39)"/><text x="1175.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="660" width="4" height="15" fill="rgb(219,132,9)"/><text x="1175.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="676" width="4" height="15" fill="rgb(247,176,24)"/><text x="1175.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="692" width="4" height="15" fill="rgb(232,23,27)"/><text x="1175.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="708" width="4" height="15" fill="rgb(211,59,37)"/><text x="1175.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.29%)</title><rect x="1172" y="724" width="4" height="15" fill="rgb(208,11,49)"/><text x="1175.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="740" width="4" height="15" fill="rgb(249,199,53)"/><text x="1175.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="756" width="4" height="15" fill="rgb(226,73,24)"/><text x="1175.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="772" width="4" height="15" fill="rgb(247,219,13)"/><text x="1175.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="788" width="4" height="15" fill="rgb(247,163,18)"/><text x="1175.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="804" width="4" height="15" fill="rgb(214,118,36)"/><text x="1175.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.29%)</title><rect x="1172" y="820" width="4" height="15" fill="rgb(235,124,30)"/><text x="1175.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="836" width="4" height="15" fill="rgb(210,207,48)"/><text x="1175.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="852" width="4" height="15" fill="rgb(226,172,54)"/><text x="1175.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="868" width="4" height="15" fill="rgb(242,194,22)"/><text x="1175.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="884" width="4" height="15" fill="rgb(213,11,25)"/><text x="1175.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="900" width="4" height="15" fill="rgb(239,187,1)"/><text x="1175.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.29%)</title><rect x="1172" y="916" width="4" height="15" fill="rgb(253,209,51)"/><text x="1175.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="932" width="4" height="15" fill="rgb(236,161,38)"/><text x="1175.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="948" width="4" height="15" fill="rgb(214,25,18)"/><text x="1175.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="964" width="4" height="15" fill="rgb(232,128,24)"/><text x="1175.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="980" width="4" height="15" fill="rgb(246,65,29)"/><text x="1175.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="996" width="4" height="15" fill="rgb(218,158,15)"/><text x="1175.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.29%)</title><rect x="1172" y="1012" width="4" height="15" fill="rgb(231,104,13)"/><text x="1175.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1028" width="4" height="15" fill="rgb(222,96,18)"/><text x="1175.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1044" width="4" height="15" fill="rgb(254,35,32)"/><text x="1175.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1060" width="4" height="15" fill="rgb(214,101,45)"/><text x="1175.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1076" width="4" height="15" fill="rgb(234,93,17)"/><text x="1175.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1092" width="4" height="15" fill="rgb(224,217,11)"/><text x="1175.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.29%)</title><rect x="1172" y="1108" width="4" height="15" fill="rgb(242,220,22)"/><text x="1175.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1124" width="4" height="15" fill="rgb(230,108,6)"/><text x="1175.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1140" width="4" height="15" fill="rgb(214,50,21)"/><text x="1175.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1156" width="4" height="15" fill="rgb(212,79,25)"/><text x="1175.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1172" width="4" height="15" fill="rgb(219,100,22)"/><text x="1175.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1188" width="4" height="15" fill="rgb(210,169,27)"/><text x="1175.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.29%)</title><rect x="1172" y="1204" width="4" height="15" fill="rgb(209,122,32)"/><text x="1175.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1220" width="4" height="15" fill="rgb(237,135,17)"/><text x="1175.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1236" width="4" height="15" fill="rgb(213,127,41)"/><text x="1175.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1252" width="4" height="15" fill="rgb(208,4,28)"/><text x="1175.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1268" width="4" height="15" fill="rgb(208,2,0)"/><text x="1175.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1284" width="4" height="15" fill="rgb(213,184,16)"/><text x="1175.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.29%)</title><rect x="1172" y="1300" width="4" height="15" fill="rgb(241,56,19)"/><text x="1175.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1316" width="4" height="15" fill="rgb(238,96,30)"/><text x="1175.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1332" width="4" height="15" fill="rgb(230,60,39)"/><text x="1175.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1348" width="4" height="15" fill="rgb(236,118,19)"/><text x="1175.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1364" width="4" height="15" fill="rgb(217,213,43)"/><text x="1175.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1380" width="4" height="15" fill="rgb(222,110,50)"/><text x="1175.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.29%)</title><rect x="1172" y="1396" width="4" height="15" fill="rgb(226,66,2)"/><text x="1175.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1412" width="4" height="15" fill="rgb(207,124,10)"/><text x="1175.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1428" width="4" height="15" fill="rgb(249,101,32)"/><text x="1175.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1444" width="4" height="15" fill="rgb(216,37,11)"/><text x="1175.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1460" width="4" height="15" fill="rgb(236,135,24)"/><text x="1175.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1476" width="4" height="15" fill="rgb(207,96,27)"/><text x="1175.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.29%)</title><rect x="1172" y="1492" width="4" height="15" fill="rgb(253,66,11)"/><text x="1175.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1508" width="4" height="15" fill="rgb(212,14,32)"/><text x="1175.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1524" width="4" height="15" fill="rgb(212,80,20)"/><text x="1175.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1540" width="4" height="15" fill="rgb(209,165,44)"/><text x="1175.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1556" width="4" height="15" fill="rgb(246,179,34)"/><text x="1175.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1572" width="4" height="15" fill="rgb(237,25,29)"/><text x="1175.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.29%)</title><rect x="1172" y="1588" width="4" height="15" fill="rgb(218,135,38)"/><text x="1175.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1604" width="4" height="15" fill="rgb(247,194,1)"/><text x="1175.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1620" width="4" height="15" fill="rgb(224,172,28)"/><text x="1175.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1636" width="4" height="15" fill="rgb(244,27,54)"/><text x="1175.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1652" width="4" height="15" fill="rgb(242,219,3)"/><text x="1175.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1668" width="4" height="15" fill="rgb(243,186,14)"/><text x="1175.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.29%)</title><rect x="1172" y="1684" width="4" height="15" fill="rgb(225,142,54)"/><text x="1175.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1700" width="4" height="15" fill="rgb(232,99,51)"/><text x="1175.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1716" width="4" height="15" fill="rgb(208,32,35)"/><text x="1175.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1732" width="4" height="15" fill="rgb(225,172,34)"/><text x="1175.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1748" width="4" height="15" fill="rgb(228,138,43)"/><text x="1175.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1764" width="4" height="15" fill="rgb(223,171,46)"/><text x="1175.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.29%)</title><rect x="1172" y="1780" width="4" height="15" fill="rgb(248,220,54)"/><text x="1175.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1796" width="4" height="15" fill="rgb(246,108,3)"/><text x="1175.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1812" width="4" height="15" fill="rgb(228,51,16)"/><text x="1175.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1828" width="4" height="15" fill="rgb(243,224,14)"/><text x="1175.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1844" width="4" height="15" fill="rgb(208,38,34)"/><text x="1175.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1860" width="4" height="15" fill="rgb(231,72,22)"/><text x="1175.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.29%)</title><rect x="1172" y="1876" width="4" height="15" fill="rgb(217,147,12)"/><text x="1175.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1172" y="1892" width="4" height="15" fill="rgb(247,85,13)"/><text x="1175.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1172" y="1908" width="4" height="15" fill="rgb(206,188,8)"/><text x="1175.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1172" y="1924" width="4" height="15" fill="rgb(235,218,52)"/><text x="1175.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1172" y="1940" width="4" height="15" fill="rgb(217,33,2)"/><text x="1175.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1172" y="1956" width="4" height="15" fill="rgb(210,132,33)"/><text x="1175.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:322) (1 samples, 0.29%)</title><rect x="1172" y="1972" width="4" height="15" fill="rgb(219,213,18)"/><text x="1175.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.58%)</title><rect x="1172" y="436" width="7" height="15" fill="rgb(226,156,7)"/><text x="1175.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1172" y="452" width="7" height="15" fill="rgb(230,153,5)"/><text x="1175.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1172" y="468" width="7" height="15" fill="rgb(251,51,34)"/><text x="1175.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1172" y="484" width="7" height="15" fill="rgb(238,53,26)"/><text x="1175.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1172" y="500" width="7" height="15" fill="rgb(235,73,16)"/><text x="1175.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1172" y="516" width="7" height="15" fill="rgb(237,156,22)"/><text x="1175.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.29%)</title><rect x="1176" y="532" width="3" height="15" fill="rgb(210,150,23)"/><text x="1179.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1176" y="548" width="3" height="15" fill="rgb(250,206,36)"/><text x="1179.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1176" y="564" width="3" height="15" fill="rgb(231,17,47)"/><text x="1179.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1176" y="580" width="3" height="15" fill="rgb(218,6,52)"/><text x="1179.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1176" y="596" width="3" height="15" fill="rgb(214,161,8)"/><text x="1179.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1176" y="612" width="3" height="15" fill="rgb(240,4,36)"/><text x="1179.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.29%)</title><rect x="1176" y="628" width="3" height="15" fill="rgb(234,67,28)"/><text x="1179.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1176" y="644" width="3" height="15" fill="rgb(250,102,29)"/><text x="1179.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1176" y="660" width="3" height="15" fill="rgb(226,113,9)"/><text x="1179.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1176" y="676" width="3" height="15" fill="rgb(230,220,23)"/><text x="1179.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1176" y="692" width="3" height="15" fill="rgb(224,147,7)"/><text x="1179.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1176" y="708" width="3" height="15" fill="rgb(217,176,33)"/><text x="1179.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1176" y="724" width="3" height="15" fill="rgb(250,67,7)"/><text x="1179.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1176" y="740" width="3" height="15" fill="rgb(214,32,15)"/><text x="1179.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.29%)</title><rect x="1176" y="756" width="3" height="15" fill="rgb(249,63,46)"/><text x="1179.00" y="766.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.29%)</title><rect x="1176" y="772" width="3" height="15" fill="rgb(216,14,5)"/><text x="1179.00" y="782.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.29%)</title><rect x="1176" y="788" width="3" height="15" fill="rgb(229,215,47)"/><text x="1179.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.29%)</title><rect x="1176" y="804" width="3" height="15" fill="rgb(233,4,6)"/><text x="1179.00" y="814.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.29%)</title><rect x="1176" y="820" width="3" height="15" fill="rgb(249,60,43)"/><text x="1179.00" y="830.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.29%)</title><rect x="1176" y="836" width="3" height="15" fill="rgb(217,196,18)"/><text x="1179.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.29%)</title><rect x="1176" y="852" width="3" height="15" fill="rgb(246,197,46)"/><text x="1179.00" y="862.50"></text></g><g><title>0x7f9a29603372 (?) (1 samples, 0.29%)</title><rect x="1176" y="868" width="3" height="15" fill="rgb(247,222,21)"/><text x="1179.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1176" y="884" width="3" height="15" fill="rgb(240,120,30)"/><text x="1179.00" y="894.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:4) (11 samples, 3.17%)</title><rect x="1145" y="52" width="38" height="15" fill="rgb(238,144,25)"/><text x="1148.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.17%)</title><rect x="1145" y="68" width="38" height="15" fill="rgb(253,172,3)"/><text x="1148.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.17%)</title><rect x="1145" y="84" width="38" height="15" fill="rgb(235,221,42)"/><text x="1148.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.17%)</title><rect x="1145" y="100" width="38" height="15" fill="rgb(224,201,23)"/><text x="1148.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.17%)</title><rect x="1145" y="116" width="38" height="15" fill="rgb(213,107,26)"/><text x="1148.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.17%)</title><rect x="1145" y="132" width="38" height="15" fill="rgb(249,99,46)"/><text x="1148.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:7) (3 samples, 0.86%)</title><rect x="1172" y="148" width="11" height="15" fill="rgb(228,212,25)"/><text x="1175.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="1172" y="164" width="11" height="15" fill="rgb(221,172,20)"/><text x="1175.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="1172" y="180" width="11" height="15" fill="rgb(253,6,51)"/><text x="1175.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="1172" y="196" width="11" height="15" fill="rgb(253,83,38)"/><text x="1175.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="1172" y="212" width="11" height="15" fill="rgb(223,212,4)"/><text x="1175.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="1172" y="228" width="11" height="15" fill="rgb(231,29,42)"/><text x="1175.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.86%)</title><rect x="1172" y="244" width="11" height="15" fill="rgb(223,128,34)"/><text x="1175.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="1172" y="260" width="11" height="15" fill="rgb(228,220,39)"/><text x="1175.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="1172" y="276" width="11" height="15" fill="rgb(250,173,7)"/><text x="1175.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="1172" y="292" width="11" height="15" fill="rgb(232,104,1)"/><text x="1175.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="1172" y="308" width="11" height="15" fill="rgb(219,70,5)"/><text x="1175.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="1172" y="324" width="11" height="15" fill="rgb(213,149,4)"/><text x="1175.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.86%)</title><rect x="1172" y="340" width="11" height="15" fill="rgb(206,109,27)"/><text x="1175.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.86%)</title><rect x="1172" y="356" width="11" height="15" fill="rgb(227,125,31)"/><text x="1175.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.86%)</title><rect x="1172" y="372" width="11" height="15" fill="rgb(244,131,7)"/><text x="1175.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.86%)</title><rect x="1172" y="388" width="11" height="15" fill="rgb(206,39,21)"/><text x="1175.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.86%)</title><rect x="1172" y="404" width="11" height="15" fill="rgb(232,26,22)"/><text x="1175.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.86%)</title><rect x="1172" y="420" width="11" height="15" fill="rgb(232,51,39)"/><text x="1175.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.29%)</title><rect x="1179" y="436" width="4" height="15" fill="rgb(228,135,13)"/><text x="1182.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="452" width="4" height="15" fill="rgb(208,56,20)"/><text x="1182.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="1179" y="468" width="4" height="15" fill="rgb(206,52,39)"/><text x="1182.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="484" width="4" height="15" fill="rgb(213,147,14)"/><text x="1182.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="500" width="4" height="15" fill="rgb(237,71,29)"/><text x="1182.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="516" width="4" height="15" fill="rgb(246,19,17)"/><text x="1182.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="532" width="4" height="15" fill="rgb(227,124,29)"/><text x="1182.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="548" width="4" height="15" fill="rgb(254,89,38)"/><text x="1182.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="564" width="4" height="15" fill="rgb(213,125,38)"/><text x="1182.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.29%)</title><rect x="1179" y="580" width="4" height="15" fill="rgb(242,198,14)"/><text x="1182.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="596" width="4" height="15" fill="rgb(223,61,1)"/><text x="1182.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="612" width="4" height="15" fill="rgb(233,167,19)"/><text x="1182.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="628" width="4" height="15" fill="rgb(216,93,3)"/><text x="1182.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="644" width="4" height="15" fill="rgb(249,10,35)"/><text x="1182.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="660" width="4" height="15" fill="rgb(221,229,39)"/><text x="1182.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.29%)</title><rect x="1179" y="676" width="4" height="15" fill="rgb(228,215,34)"/><text x="1182.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="692" width="4" height="15" fill="rgb(239,75,33)"/><text x="1182.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="708" width="4" height="15" fill="rgb(243,46,25)"/><text x="1182.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="724" width="4" height="15" fill="rgb(219,176,40)"/><text x="1182.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="740" width="4" height="15" fill="rgb(233,107,27)"/><text x="1182.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="756" width="4" height="15" fill="rgb(211,130,15)"/><text x="1182.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.29%)</title><rect x="1179" y="772" width="4" height="15" fill="rgb(245,99,1)"/><text x="1182.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="788" width="4" height="15" fill="rgb(230,118,30)"/><text x="1182.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="804" width="4" height="15" fill="rgb(224,2,10)"/><text x="1182.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="820" width="4" height="15" fill="rgb(234,117,13)"/><text x="1182.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="836" width="4" height="15" fill="rgb(210,229,22)"/><text x="1182.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="852" width="4" height="15" fill="rgb(218,45,26)"/><text x="1182.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.29%)</title><rect x="1179" y="868" width="4" height="15" fill="rgb(219,153,29)"/><text x="1182.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="884" width="4" height="15" fill="rgb(237,101,11)"/><text x="1182.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="1179" y="900" width="4" height="15" fill="rgb(249,123,46)"/><text x="1182.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="916" width="4" height="15" fill="rgb(219,12,18)"/><text x="1182.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="932" width="4" height="15" fill="rgb(234,119,49)"/><text x="1182.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="948" width="4" height="15" fill="rgb(207,95,34)"/><text x="1182.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="964" width="4" height="15" fill="rgb(225,131,31)"/><text x="1182.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="980" width="4" height="15" fill="rgb(207,35,47)"/><text x="1182.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="996" width="4" height="15" fill="rgb(205,93,43)"/><text x="1182.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.29%)</title><rect x="1179" y="1012" width="4" height="15" fill="rgb(242,77,33)"/><text x="1182.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1028" width="4" height="15" fill="rgb(234,195,39)"/><text x="1182.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1044" width="4" height="15" fill="rgb(212,0,7)"/><text x="1182.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1060" width="4" height="15" fill="rgb(243,203,53)"/><text x="1182.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="1076" width="4" height="15" fill="rgb(242,73,19)"/><text x="1182.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1092" width="4" height="15" fill="rgb(224,133,39)"/><text x="1182.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.29%)</title><rect x="1179" y="1108" width="4" height="15" fill="rgb(238,51,30)"/><text x="1182.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1124" width="4" height="15" fill="rgb(205,79,32)"/><text x="1182.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1140" width="4" height="15" fill="rgb(235,136,10)"/><text x="1182.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1156" width="4" height="15" fill="rgb(235,106,26)"/><text x="1182.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="1172" width="4" height="15" fill="rgb(223,183,49)"/><text x="1182.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1188" width="4" height="15" fill="rgb(211,157,29)"/><text x="1182.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.29%)</title><rect x="1179" y="1204" width="4" height="15" fill="rgb(208,171,29)"/><text x="1182.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1220" width="4" height="15" fill="rgb(236,177,46)"/><text x="1182.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1236" width="4" height="15" fill="rgb(222,112,36)"/><text x="1182.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1252" width="4" height="15" fill="rgb(242,163,42)"/><text x="1182.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="1268" width="4" height="15" fill="rgb(245,218,6)"/><text x="1182.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1284" width="4" height="15" fill="rgb(227,42,46)"/><text x="1182.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.29%)</title><rect x="1179" y="1300" width="4" height="15" fill="rgb(235,161,11)"/><text x="1182.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1316" width="4" height="15" fill="rgb(241,125,40)"/><text x="1182.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1332" width="4" height="15" fill="rgb(253,47,41)"/><text x="1182.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1348" width="4" height="15" fill="rgb(241,156,25)"/><text x="1182.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="1364" width="4" height="15" fill="rgb(218,90,13)"/><text x="1182.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1380" width="4" height="15" fill="rgb(253,119,1)"/><text x="1182.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.29%)</title><rect x="1179" y="1396" width="4" height="15" fill="rgb(221,208,53)"/><text x="1182.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1412" width="4" height="15" fill="rgb(225,18,26)"/><text x="1182.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1428" width="4" height="15" fill="rgb(211,168,10)"/><text x="1182.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1444" width="4" height="15" fill="rgb(230,24,20)"/><text x="1182.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="1460" width="4" height="15" fill="rgb(232,163,47)"/><text x="1182.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1476" width="4" height="15" fill="rgb(228,183,17)"/><text x="1182.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.29%)</title><rect x="1179" y="1492" width="4" height="15" fill="rgb(223,5,39)"/><text x="1182.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1179" y="1508" width="4" height="15" fill="rgb(245,125,47)"/><text x="1182.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1524" width="4" height="15" fill="rgb(231,171,32)"/><text x="1182.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1540" width="4" height="15" fill="rgb(209,47,47)"/><text x="1182.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1556" width="4" height="15" fill="rgb(230,42,6)"/><text x="1182.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1572" width="4" height="15" fill="rgb(239,52,17)"/><text x="1182.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1179" y="1588" width="4" height="15" fill="rgb(208,44,34)"/><text x="1182.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1179" y="1604" width="4" height="15" fill="rgb(231,139,8)"/><text x="1182.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:17) (1 samples, 0.29%)</title><rect x="1179" y="1620" width="4" height="15" fill="rgb(247,34,52)"/><text x="1182.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1179" y="1636" width="4" height="15" fill="rgb(239,74,13)"/><text x="1182.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1179" y="1652" width="4" height="15" fill="rgb(231,224,11)"/><text x="1182.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1179" y="1668" width="4" height="15" fill="rgb(217,169,22)"/><text x="1182.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="1179" y="1684" width="4" height="15" fill="rgb(249,94,0)"/><text x="1182.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.29%)</title><rect x="1179" y="1700" width="4" height="15" fill="rgb(254,177,49)"/><text x="1182.00" y="1710.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:297) (1 samples, 0.29%)</title><rect x="1179" y="1716" width="4" height="15" fill="rgb(215,174,8)"/><text x="1182.00" y="1726.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;:65) (1 samples, 0.29%)</title><rect x="1179" y="1732" width="4" height="15" fill="rgb(205,127,3)"/><text x="1182.00" y="1742.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.29%)</title><rect x="1183" y="116" width="3" height="15" fill="rgb(242,44,19)"/><text x="1186.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (1 samples, 0.29%)</title><rect x="1183" y="132" width="3" height="15" fill="rgb(235,117,50)"/><text x="1186.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.29%)</title><rect x="1183" y="148" width="3" height="15" fill="rgb(217,28,24)"/><text x="1186.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.29%)</title><rect x="1183" y="164" width="3" height="15" fill="rgb(233,170,12)"/><text x="1186.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.29%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(234,30,11)"/><text x="1186.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.29%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(237,107,52)"/><text x="1186.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:54) (1 samples, 0.29%)</title><rect x="1183" y="212" width="3" height="15" fill="rgb(246,70,30)"/><text x="1186.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py:321) (1 samples, 0.29%)</title><rect x="1183" y="228" width="3" height="15" fill="rgb(238,61,46)"/><text x="1186.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.29%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(216,28,11)"/><text x="1186.00" y="254.50"></text></g><g><title>all (347 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(227,211,6)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:45) (2 samples, 0.58%)</title><rect x="1183" y="52" width="7" height="15" fill="rgb(221,222,47)"/><text x="1186.00" y="62.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:44) (2 samples, 0.58%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(252,12,1)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1000_50_12_double_.py:28) (2 samples, 0.58%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(224,22,24)"/><text x="1186.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.58%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(225,210,44)"/><text x="1186.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.29%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(244,58,31)"/><text x="1189.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.29%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(227,103,45)"/><text x="1189.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.29%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(211,15,1)"/><text x="1189.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.29%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(205,86,51)"/><text x="1189.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.29%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(248,52,44)"/><text x="1189.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.29%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(237,5,2)"/><text x="1189.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:162) (1 samples, 0.29%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(250,7,26)"/><text x="1189.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.29%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(236,218,46)"/><text x="1189.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.29%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(233,1,27)"/><text x="1189.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.29%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(245,97,20)"/><text x="1189.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.29%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(219,121,14)"/><text x="1189.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.29%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(232,185,22)"/><text x="1189.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.29%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(232,220,6)"/><text x="1189.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:448) (1 samples, 0.29%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(236,182,33)"/><text x="1189.00" y="334.50"></text></g><g><title>0x7f9a232cc8ab (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(226,72,53)"/><text x="1189.00" y="350.50"></text></g></g></svg>