<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(250,54,21)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(222,65,3)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(245,173,46)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.21%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(228,183,16)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="11" y="1044" width="1" height="15" fill="rgb(205,155,26)"/><text x="14.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(208,52,33)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(222,39,24)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(250,44,43)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(217,77,35)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(241,174,16)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(212,176,16)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(225,35,3)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(236,204,20)"/><text x="15.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="12" y="996" width="1" height="15" fill="rgb(247,65,50)"/><text x="15.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.10%)</title><rect x="12" y="1012" width="1" height="15" fill="rgb(220,88,9)"/><text x="15.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="868" width="1" height="15" fill="rgb(236,49,53)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(236,122,26)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(221,105,43)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(208,96,10)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(217,215,21)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(225,1,20)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(206,4,6)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(217,73,32)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="13" y="996" width="1" height="15" fill="rgb(230,136,23)"/><text x="16.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(247,14,45)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(213,156,24)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(222,38,31)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(238,57,25)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(208,125,25)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(221,86,54)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 0.73%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(247,126,12)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(251,155,36)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(222,200,22)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(240,61,20)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(250,218,41)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(247,157,18)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 0.73%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(212,139,20)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(229,33,43)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(253,188,3)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(246,112,36)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(217,228,36)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(230,115,40)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 0.73%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(214,88,5)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(238,219,16)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(228,185,29)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(245,199,40)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(205,99,50)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(231,176,54)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 0.73%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(249,112,3)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(240,89,23)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(207,92,33)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(231,219,34)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(246,129,6)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(249,124,41)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(247,15,5)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(226,3,31)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(213,30,53)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 0.73%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(234,138,29)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(217,164,16)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(245,83,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(247,134,32)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(207,74,11)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(224,216,6)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 0.73%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(207,148,41)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 0.73%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(243,171,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 0.73%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(231,140,35)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(237,39,7)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.31%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(241,225,22)"/><text x="17.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(253,21,12)"/><text x="19.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(240,113,43)"/><text x="19.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.21%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(208,42,12)"/><text x="19.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.21%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(217,214,31)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.21%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(238,201,13)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="484" width="1" height="15" fill="rgb(250,45,14)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="500" width="1" height="15" fill="rgb(215,189,42)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="516" width="1" height="15" fill="rgb(239,38,10)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="532" width="1" height="15" fill="rgb(232,91,12)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="548" width="1" height="15" fill="rgb(228,76,11)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="564" width="1" height="15" fill="rgb(229,121,38)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.10%)</title><rect x="18" y="580" width="1" height="15" fill="rgb(254,65,27)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="596" width="1" height="15" fill="rgb(229,216,22)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="612" width="1" height="15" fill="rgb(219,15,21)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="628" width="1" height="15" fill="rgb(252,117,26)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="644" width="1" height="15" fill="rgb(221,60,23)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="660" width="1" height="15" fill="rgb(250,15,27)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.10%)</title><rect x="18" y="676" width="1" height="15" fill="rgb(225,198,34)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="692" width="1" height="15" fill="rgb(239,6,11)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="708" width="1" height="15" fill="rgb(245,107,16)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="724" width="1" height="15" fill="rgb(224,209,51)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="740" width="1" height="15" fill="rgb(237,110,11)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="756" width="1" height="15" fill="rgb(228,204,11)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.10%)</title><rect x="18" y="772" width="1" height="15" fill="rgb(208,163,35)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="788" width="1" height="15" fill="rgb(210,77,29)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="804" width="1" height="15" fill="rgb(220,189,47)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="820" width="1" height="15" fill="rgb(227,39,34)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="836" width="1" height="15" fill="rgb(245,177,31)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="852" width="1" height="15" fill="rgb(253,53,39)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.10%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(236,95,4)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(213,38,11)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(230,84,18)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(217,68,11)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(231,156,47)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(228,25,35)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(210,5,7)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(243,50,41)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(228,174,39)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.10%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(235,185,22)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(226,91,18)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(221,72,14)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1060" width="1" height="15" fill="rgb(252,129,4)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1076" width="1" height="15" fill="rgb(210,152,26)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1092" width="1" height="15" fill="rgb(239,225,4)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.10%)</title><rect x="18" y="1108" width="1" height="15" fill="rgb(241,157,54)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(227,145,50)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(236,19,2)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(223,95,8)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(240,220,20)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(238,0,14)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(251,77,32)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(209,48,0)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.10%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(212,143,49)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(239,203,23)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(242,148,29)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(211,11,46)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(247,39,18)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(205,63,29)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(207,21,15)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1348" width="1" height="15" fill="rgb(224,23,22)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.10%)</title><rect x="18" y="1364" width="1" height="15" fill="rgb(222,25,33)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(212,182,29)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1396" width="1" height="15" fill="rgb(210,180,35)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1412" width="1" height="15" fill="rgb(210,223,17)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1428" width="1" height="15" fill="rgb(239,125,14)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1444" width="1" height="15" fill="rgb(235,193,23)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="18" y="1460" width="1" height="15" fill="rgb(252,22,35)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="18" y="1476" width="1" height="15" fill="rgb(208,55,33)"/><text x="21.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="18" y="1492" width="1" height="15" fill="rgb(214,57,50)"/><text x="21.00" y="1502.50"></text></g><g><title>0x7fbb0d3850e9 (?) (1 samples, 0.10%)</title><rect x="18" y="1508" width="1" height="15" fill="rgb(248,26,34)"/><text x="21.00" y="1518.50"></text></g><g><title>0x7fbb0d38922e (?) (1 samples, 0.10%)</title><rect x="18" y="1524" width="1" height="15" fill="rgb(211,203,23)"/><text x="21.00" y="1534.50"></text></g><g><title>0x7fbb0d38917b (?) (1 samples, 0.10%)</title><rect x="18" y="1540" width="1" height="15" fill="rgb(250,142,44)"/><text x="21.00" y="1550.50"></text></g><g><title>0x7fbb0d3883bf (?) (1 samples, 0.10%)</title><rect x="18" y="1556" width="1" height="15" fill="rgb(227,108,8)"/><text x="21.00" y="1566.50"></text></g><g><title>0x7fbb0d387f78 (?) (1 samples, 0.10%)</title><rect x="18" y="1572" width="1" height="15" fill="rgb(254,170,20)"/><text x="21.00" y="1582.50"></text></g><g><title>0x7fbb0d38425c (?) (1 samples, 0.10%)</title><rect x="18" y="1588" width="1" height="15" fill="rgb(248,54,4)"/><text x="21.00" y="1598.50"></text></g><g><title>0x7fbb1d2c999b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="18" y="1604" width="1" height="15" fill="rgb(215,178,8)"/><text x="21.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.21%)</title><rect x="18" y="340" width="3" height="15" fill="rgb(252,128,48)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="18" y="356" width="3" height="15" fill="rgb(211,9,27)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="18" y="372" width="3" height="15" fill="rgb(205,229,37)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="18" y="388" width="3" height="15" fill="rgb(233,211,13)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.21%)</title><rect x="18" y="404" width="3" height="15" fill="rgb(248,82,25)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="18" y="420" width="3" height="15" fill="rgb(220,132,36)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.21%)</title><rect x="18" y="436" width="3" height="15" fill="rgb(234,193,53)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="18" y="452" width="3" height="15" fill="rgb(223,23,7)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.21%)</title><rect x="18" y="468" width="3" height="15" fill="rgb(237,224,4)"/><text x="21.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="484" width="2" height="15" fill="rgb(237,157,24)"/><text x="22.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="500" width="2" height="15" fill="rgb(212,202,20)"/><text x="22.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="516" width="2" height="15" fill="rgb(235,195,52)"/><text x="22.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="19" y="532" width="2" height="15" fill="rgb(251,84,54)"/><text x="22.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="548" width="2" height="15" fill="rgb(243,96,33)"/><text x="22.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="564" width="2" height="15" fill="rgb(208,170,18)"/><text x="22.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(237,208,13)"/><text x="22.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(242,32,5)"/><text x="22.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(227,177,22)"/><text x="22.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(232,68,14)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(253,48,33)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(245,1,33)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(226,64,50)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(252,47,33)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(226,175,43)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.10%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(219,160,51)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(234,158,16)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(245,153,10)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(249,74,52)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(248,127,2)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(223,39,22)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(240,115,24)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(222,96,6)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(239,10,3)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(225,192,41)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(206,208,41)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(238,101,36)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.10%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(233,46,53)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(234,115,52)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(226,42,24)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(243,210,2)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(209,156,14)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(207,181,32)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.10%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(247,199,13)"/><text x="22.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(253,90,39)"/><text x="22.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(246,167,31)"/><text x="22.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(249,100,11)"/><text x="22.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.10%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(233,179,7)"/><text x="22.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.10%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(239,65,23)"/><text x="22.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.10%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(224,35,7)"/><text x="22.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.10%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(229,160,26)"/><text x="22.00" y="1134.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(236,214,10)"/><text x="24.00" y="1374.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(241,130,40)"/><text x="24.00" y="1390.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.10%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(228,140,30)"/><text x="24.00" y="1406.50"></text></g><g><title>modf (libm-2.29.so) (1 samples, 0.10%)</title><rect x="22" y="1364" width="1" height="15" fill="rgb(247,221,42)"/><text x="25.00" y="1374.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.52%)</title><rect x="18" y="244" width="6" height="15" fill="rgb(212,207,54)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.52%)</title><rect x="18" y="260" width="6" height="15" fill="rgb(240,62,12)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.52%)</title><rect x="18" y="276" width="6" height="15" fill="rgb(239,155,28)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.52%)</title><rect x="18" y="292" width="6" height="15" fill="rgb(243,48,39)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.52%)</title><rect x="18" y="308" width="6" height="15" fill="rgb(231,176,9)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.52%)</title><rect x="18" y="324" width="6" height="15" fill="rgb(218,218,37)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.31%)</title><rect x="21" y="340" width="3" height="15" fill="rgb(226,147,6)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="356" width="3" height="15" fill="rgb(205,128,8)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="372" width="3" height="15" fill="rgb(236,59,47)"/><text x="24.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="388" width="3" height="15" fill="rgb(249,42,53)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="404" width="3" height="15" fill="rgb(248,48,8)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="420" width="3" height="15" fill="rgb(236,51,7)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="436" width="3" height="15" fill="rgb(229,184,18)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="452" width="3" height="15" fill="rgb(230,32,30)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="468" width="3" height="15" fill="rgb(224,194,34)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.31%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(253,48,27)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(253,37,49)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(213,34,34)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(207,200,33)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(241,147,52)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(249,17,29)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.31%)</title><rect x="21" y="580" width="3" height="15" fill="rgb(232,146,24)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="596" width="3" height="15" fill="rgb(230,61,7)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="612" width="3" height="15" fill="rgb(207,187,50)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(242,131,28)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(211,74,44)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(249,191,42)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.31%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(214,50,32)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(245,141,34)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(217,140,8)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(219,209,53)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(209,193,8)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(220,24,34)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.31%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(233,192,46)"/><text x="24.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(243,150,14)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(215,196,38)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(242,1,53)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(251,177,10)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(231,80,42)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(236,14,37)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(247,92,12)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (3 samples, 0.31%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(214,178,32)"/><text x="24.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(220,18,54)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(230,181,35)"/><text x="24.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(243,209,41)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(217,141,29)"/><text x="24.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(250,186,9)"/><text x="24.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(215,229,47)"/><text x="24.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(232,208,27)"/><text x="24.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(221,187,29)"/><text x="24.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (3 samples, 0.31%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(231,156,50)"/><text x="24.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(213,130,51)"/><text x="24.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(233,192,46)"/><text x="24.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(213,157,34)"/><text x="24.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1108" width="3" height="15" fill="rgb(237,70,6)"/><text x="24.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1124" width="3" height="15" fill="rgb(233,10,51)"/><text x="24.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="1140" width="3" height="15" fill="rgb(225,158,18)"/><text x="24.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1156" width="3" height="15" fill="rgb(243,19,26)"/><text x="24.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (3 samples, 0.31%)</title><rect x="21" y="1172" width="3" height="15" fill="rgb(239,210,39)"/><text x="24.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1188" width="3" height="15" fill="rgb(221,172,30)"/><text x="24.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1204" width="3" height="15" fill="rgb(216,95,53)"/><text x="24.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1220" width="3" height="15" fill="rgb(213,115,40)"/><text x="24.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="1236" width="3" height="15" fill="rgb(245,220,29)"/><text x="24.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1252" width="3" height="15" fill="rgb(251,99,49)"/><text x="24.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (3 samples, 0.31%)</title><rect x="21" y="1268" width="3" height="15" fill="rgb(212,133,51)"/><text x="24.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1284" width="3" height="15" fill="rgb(235,21,0)"/><text x="24.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1300" width="3" height="15" fill="rgb(224,93,19)"/><text x="24.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.31%)</title><rect x="21" y="1316" width="3" height="15" fill="rgb(218,212,25)"/><text x="24.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="1332" width="3" height="15" fill="rgb(242,181,22)"/><text x="24.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.31%)</title><rect x="21" y="1348" width="3" height="15" fill="rgb(230,82,16)"/><text x="24.00" y="1358.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(205,226,3)"/><text x="26.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(214,18,31)"/><text x="26.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.10%)</title><rect x="23" y="1396" width="1" height="15" fill="rgb(237,105,54)"/><text x="26.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="260" width="2" height="15" fill="rgb(232,195,36)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="276" width="2" height="15" fill="rgb(213,160,52)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="292" width="2" height="15" fill="rgb(245,167,54)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="308" width="2" height="15" fill="rgb(254,14,49)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="324" width="2" height="15" fill="rgb(235,168,41)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="340" width="2" height="15" fill="rgb(215,8,14)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="356" width="2" height="15" fill="rgb(216,169,21)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="372" width="2" height="15" fill="rgb(227,16,34)"/><text x="27.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="388" width="2" height="15" fill="rgb(236,48,10)"/><text x="27.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="404" width="2" height="15" fill="rgb(221,177,18)"/><text x="27.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="420" width="2" height="15" fill="rgb(222,122,49)"/><text x="27.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="436" width="2" height="15" fill="rgb(251,67,15)"/><text x="27.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="452" width="2" height="15" fill="rgb(210,202,36)"/><text x="27.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="468" width="2" height="15" fill="rgb(251,20,33)"/><text x="27.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="484" width="2" height="15" fill="rgb(223,122,30)"/><text x="27.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="500" width="2" height="15" fill="rgb(237,223,49)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="516" width="2" height="15" fill="rgb(207,46,23)"/><text x="27.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/loader.py) (1 samples, 0.10%)</title><rect x="24" y="532" width="2" height="15" fill="rgb(238,15,0)"/><text x="27.00" y="542.50"></text></g><g><title>compile (re.py) (1 samples, 0.10%)</title><rect x="24" y="548" width="2" height="15" fill="rgb(217,184,28)"/><text x="27.00" y="558.50"></text></g><g><title>_compile (re.py) (1 samples, 0.10%)</title><rect x="24" y="564" width="2" height="15" fill="rgb(252,225,50)"/><text x="27.00" y="574.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.10%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(206,63,43)"/><text x="27.00" y="590.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.10%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(253,7,41)"/><text x="27.00" y="606.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.10%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(241,150,7)"/><text x="27.00" y="622.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.10%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(235,134,52)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.46%)</title><rect x="10" y="68" width="17" height="15" fill="rgb(222,22,39)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.46%)</title><rect x="10" y="84" width="17" height="15" fill="rgb(221,165,48)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.46%)</title><rect x="10" y="100" width="17" height="15" fill="rgb(236,137,10)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.46%)</title><rect x="10" y="116" width="17" height="15" fill="rgb(252,138,42)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.46%)</title><rect x="10" y="132" width="17" height="15" fill="rgb(253,184,8)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid.py) (14 samples, 1.46%)</title><rect x="10" y="148" width="17" height="15" fill="rgb(224,188,38)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.46%)</title><rect x="10" y="164" width="17" height="15" fill="rgb(247,30,31)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.46%)</title><rect x="10" y="180" width="17" height="15" fill="rgb(240,54,23)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="18" y="196" width="9" height="15" fill="rgb(207,56,42)"/><text x="21.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.73%)</title><rect x="18" y="212" width="9" height="15" fill="rgb(244,127,14)"/><text x="21.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.73%)</title><rect x="18" y="228" width="9" height="15" fill="rgb(247,14,8)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.21%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(228,134,33)"/><text x="27.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="260" width="1" height="15" fill="rgb(232,166,42)"/><text x="29.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="276" width="1" height="15" fill="rgb(251,203,40)"/><text x="29.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="292" width="1" height="15" fill="rgb(219,53,46)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="308" width="1" height="15" fill="rgb(207,40,28)"/><text x="29.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="324" width="1" height="15" fill="rgb(212,206,5)"/><text x="29.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="340" width="1" height="15" fill="rgb(245,159,47)"/><text x="29.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="356" width="1" height="15" fill="rgb(213,215,43)"/><text x="29.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.10%)</title><rect x="26" y="372" width="1" height="15" fill="rgb(214,38,6)"/><text x="29.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="388" width="1" height="15" fill="rgb(233,125,30)"/><text x="29.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="404" width="1" height="15" fill="rgb(219,95,33)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="420" width="1" height="15" fill="rgb(252,156,1)"/><text x="29.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="436" width="1" height="15" fill="rgb(230,72,34)"/><text x="29.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="452" width="1" height="15" fill="rgb(227,217,34)"/><text x="29.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="468" width="1" height="15" fill="rgb(208,34,16)"/><text x="29.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="484" width="1" height="15" fill="rgb(217,85,31)"/><text x="29.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.10%)</title><rect x="26" y="500" width="1" height="15" fill="rgb(219,184,17)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="516" width="1" height="15" fill="rgb(207,126,34)"/><text x="29.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="532" width="1" height="15" fill="rgb(213,136,52)"/><text x="29.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="548" width="1" height="15" fill="rgb(239,144,21)"/><text x="29.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="564" width="1" height="15" fill="rgb(229,156,14)"/><text x="29.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(210,127,25)"/><text x="29.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.10%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(238,137,12)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(240,109,49)"/><text x="29.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="628" width="1" height="15" fill="rgb(244,106,53)"/><text x="29.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="644" width="1" height="15" fill="rgb(224,185,31)"/><text x="29.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="660" width="1" height="15" fill="rgb(222,127,32)"/><text x="29.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="676" width="1" height="15" fill="rgb(232,137,29)"/><text x="29.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.10%)</title><rect x="26" y="692" width="1" height="15" fill="rgb(248,196,52)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="708" width="1" height="15" fill="rgb(217,36,25)"/><text x="29.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="724" width="1" height="15" fill="rgb(246,121,17)"/><text x="29.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="740" width="1" height="15" fill="rgb(212,173,29)"/><text x="29.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="756" width="1" height="15" fill="rgb(226,132,51)"/><text x="29.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="772" width="1" height="15" fill="rgb(243,82,47)"/><text x="29.00" y="782.50"></text></g><g><title>&lt;module&gt; (signal.py) (1 samples, 0.10%)</title><rect x="26" y="788" width="1" height="15" fill="rgb(211,179,31)"/><text x="29.00" y="798.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.10%)</title><rect x="26" y="804" width="1" height="15" fill="rgb(249,99,42)"/><text x="29.00" y="814.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.10%)</title><rect x="26" y="820" width="1" height="15" fill="rgb(244,42,18)"/><text x="29.00" y="830.50"></text></g><g><title>_create_ (enum.py) (1 samples, 0.10%)</title><rect x="26" y="836" width="1" height="15" fill="rgb(251,191,6)"/><text x="29.00" y="846.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.10%)</title><rect x="26" y="852" width="1" height="15" fill="rgb(208,138,19)"/><text x="29.00" y="862.50"></text></g><g><title>0x7fbb1d2c9eb0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="29" y="116" width="1" height="15" fill="rgb(238,55,45)"/><text x="32.00" y="126.50"></text></g><g><title>0x7fbb1d2c8bc6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="29" y="132" width="1" height="15" fill="rgb(252,36,33)"/><text x="32.00" y="142.50"></text></g><g><title>0x7fbadd2f9ff9 (?) (1 samples, 0.10%)</title><rect x="30" y="212" width="2" height="15" fill="rgb(217,146,13)"/><text x="33.00" y="222.50"></text></g><g><title>0x7fbadd2f4ef6 (?) (1 samples, 0.10%)</title><rect x="30" y="228" width="2" height="15" fill="rgb(235,34,25)"/><text x="33.00" y="238.50"></text></g><g><title>0x7fbadd2e9962 (?) (1 samples, 0.10%)</title><rect x="30" y="244" width="2" height="15" fill="rgb(230,178,53)"/><text x="33.00" y="254.50"></text></g><g><title>0x7fbadd31d7a7 (?) (1 samples, 0.10%)</title><rect x="30" y="260" width="2" height="15" fill="rgb(240,54,44)"/><text x="33.00" y="270.50"></text></g><g><title>0x7fbadd31d379 (?) (1 samples, 0.10%)</title><rect x="30" y="276" width="2" height="15" fill="rgb(254,140,34)"/><text x="33.00" y="286.50"></text></g><g><title>0x7fbadd77b8b8 (?) (1 samples, 0.10%)</title><rect x="30" y="292" width="2" height="15" fill="rgb(210,34,10)"/><text x="33.00" y="302.50"></text></g><g><title>0x7fbadd779c7f (?) (1 samples, 0.10%)</title><rect x="30" y="308" width="2" height="15" fill="rgb(214,63,10)"/><text x="33.00" y="318.50"></text></g><g><title>0x7fbadd78c99c (?) (1 samples, 0.10%)</title><rect x="30" y="324" width="2" height="15" fill="rgb(239,212,0)"/><text x="33.00" y="334.50"></text></g><g><title>0x7fbadd4b7450 (?) (1 samples, 0.10%)</title><rect x="30" y="340" width="2" height="15" fill="rgb(250,165,41)"/><text x="33.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="30" y="356" width="2" height="15" fill="rgb(211,53,16)"/><text x="33.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="30" y="372" width="2" height="15" fill="rgb(214,109,40)"/><text x="33.00" y="382.50"></text></g><g><title>0x7fbb1d2c9971 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="112" y="356" width="1" height="15" fill="rgb(218,138,3)"/><text x="115.00" y="366.50"></text></g><g><title>0x7fbb1d2c9a38 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="113" y="356" width="1" height="15" fill="rgb(254,202,13)"/><text x="116.00" y="366.50"></text></g><g><title>0x7fbb1d2c9a53 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="114" y="356" width="3" height="15" fill="rgb(242,57,27)"/><text x="117.00" y="366.50"></text></g><g><title>0x7fbb1d2c9be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="117" y="356" width="1" height="15" fill="rgb(214,8,23)"/><text x="120.00" y="366.50"></text></g><g><title>0x7fbb1d448e96 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="118" y="356" width="1" height="15" fill="rgb(244,67,39)"/><text x="121.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="119" y="356" width="1" height="15" fill="rgb(234,178,13)"/><text x="122.00" y="366.50"></text></g><g><title>0x7fbb1d2c9bd4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="135" y="372" width="1" height="15" fill="rgb(252,170,41)"/><text x="138.00" y="382.50"></text></g><g><title>0x7fbb0cd967a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="138" y="388" width="1" height="15" fill="rgb(205,146,21)"/><text x="141.00" y="398.50"></text></g><g><title>0x7fbb1d2c990e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="139" y="388" width="1" height="15" fill="rgb(230,211,46)"/><text x="142.00" y="398.50"></text></g><g><title>0x7fbb1d2c996a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="140" y="388" width="1" height="15" fill="rgb(214,87,21)"/><text x="143.00" y="398.50"></text></g><g><title>0x7fbb1d2c9991 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="141" y="388" width="2" height="15" fill="rgb(242,88,0)"/><text x="144.00" y="398.50"></text></g><g><title>0x7fbb1d2c9998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="143" y="388" width="1" height="15" fill="rgb(241,17,15)"/><text x="146.00" y="398.50"></text></g><g><title>0x7fbb1d2c9be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="144" y="388" width="1" height="15" fill="rgb(209,20,39)"/><text x="147.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.30%)</title><rect x="120" y="356" width="27" height="15" fill="rgb(226,60,43)"/><text x="123.00" y="366.50">o..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 0.94%)</title><rect x="136" y="372" width="11" height="15" fill="rgb(207,95,45)"/><text x="139.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="145" y="388" width="2" height="15" fill="rgb(231,148,22)"/><text x="148.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="145" y="404" width="2" height="15" fill="rgb(254,80,53)"/><text x="148.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="147" y="356" width="2" height="15" fill="rgb(225,146,32)"/><text x="150.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="147" y="372" width="2" height="15" fill="rgb(208,176,45)"/><text x="150.00" y="382.50"></text></g><g><title>0x7fbb0cd967a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="151" y="372" width="1" height="15" fill="rgb(231,198,23)"/><text x="154.00" y="382.50"></text></g><g><title>0x7fbb1d2c992c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="152" y="372" width="2" height="15" fill="rgb(237,181,33)"/><text x="155.00" y="382.50"></text></g><g><title>0x7fbb1d2e9d97 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="154" y="372" width="1" height="15" fill="rgb(220,55,25)"/><text x="157.00" y="382.50"></text></g><g><title>0x7fbb1d2e9f46 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="155" y="372" width="1" height="15" fill="rgb(229,81,38)"/><text x="158.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="156" y="372" width="1" height="15" fill="rgb(235,164,16)"/><text x="159.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.84%)</title><rect x="149" y="356" width="10" height="15" fill="rgb(232,68,20)"/><text x="152.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="157" y="372" width="2" height="15" fill="rgb(219,184,13)"/><text x="160.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 27.97%)</title><rect x="33" y="340" width="330" height="15" fill="rgb(231,124,34)"/><text x="36.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compu..</text></g><g><title>tanhf32x (libm-2.29.so) (166 samples, 17.33%)</title><rect x="159" y="356" width="204" height="15" fill="rgb(223,195,22)"/><text x="162.00" y="366.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (124 samples, 12.94%)</title><rect x="210" y="372" width="153" height="15" fill="rgb(208,182,3)"/><text x="213.00" y="382.50">expm1f64 (libm-2.29..</text></g><g><title>0x7fbb1d2cafd2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="365" y="388" width="2" height="15" fill="rgb(241,157,10)"/><text x="368.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.42%)</title><rect x="363" y="356" width="5" height="15" fill="rgb(218,113,50)"/><text x="366.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.42%)</title><rect x="363" y="372" width="5" height="15" fill="rgb(226,220,27)"/><text x="366.00" y="382.50"></text></g><g><title>0x7fbb1d2cb033 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="367" y="388" width="1" height="15" fill="rgb(245,11,54)"/><text x="370.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (275 samples, 28.71%)</title><rect x="32" y="308" width="338" height="15" fill="rgb(206,159,46)"/><text x="35.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (274 samples, 28.60%)</title><rect x="33" y="324" width="337" height="15" fill="rgb(238,220,47)"/><text x="36.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.63%)</title><rect x="363" y="340" width="7" height="15" fill="rgb(218,130,14)"/><text x="366.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="368" y="356" width="2" height="15" fill="rgb(220,176,43)"/><text x="371.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (276 samples, 28.81%)</title><rect x="32" y="260" width="340" height="15" fill="rgb(221,227,29)"/><text x="35.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (276 samples, 28.81%)</title><rect x="32" y="276" width="340" height="15" fill="rgb(228,45,19)"/><text x="35.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (276 samples, 28.81%)</title><rect x="32" y="292" width="340" height="15" fill="rgb(222,22,12)"/><text x="35.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="370" y="308" width="2" height="15" fill="rgb(215,107,30)"/><text x="373.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="370" y="324" width="2" height="15" fill="rgb(210,63,11)"/><text x="373.00" y="334.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.04%)</title><rect x="372" y="260" width="12" height="15" fill="rgb(237,168,11)"/><text x="375.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="381" y="276" width="3" height="15" fill="rgb(206,39,11)"/><text x="384.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (288 samples, 30.06%)</title><rect x="30" y="132" width="355" height="15" fill="rgb(214,24,22)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (288 samples, 30.06%)</title><rect x="30" y="148" width="355" height="15" fill="rgb(224,150,44)"/><text x="33.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (288 samples, 30.06%)</title><rect x="30" y="164" width="355" height="15" fill="rgb(225,6,25)"/><text x="33.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (288 samples, 30.06%)</title><rect x="30" y="180" width="355" height="15" fill="rgb(248,221,29)"/><text x="33.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (288 samples, 30.06%)</title><rect x="30" y="196" width="355" height="15" fill="rgb(238,171,23)"/><text x="33.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (287 samples, 29.96%)</title><rect x="32" y="212" width="353" height="15" fill="rgb(232,54,0)"/><text x="35.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (287 samples, 29.96%)</title><rect x="32" y="228" width="353" height="15" fill="rgb(210,185,46)"/><text x="35.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrun..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (287 samples, 29.96%)</title><rect x="32" y="244" width="353" height="15" fill="rgb(251,224,1)"/><text x="35.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="384" y="260" width="1" height="15" fill="rgb(205,182,45)"/><text x="387.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="384" y="276" width="1" height="15" fill="rgb(216,70,8)"/><text x="387.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="384" y="292" width="1" height="15" fill="rgb(218,204,48)"/><text x="387.00" y="302.50"></text></g><g><title>profile_ort (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (292 samples, 30.48%)</title><rect x="27" y="68" width="359" height="15" fill="rgb(223,17,23)"/><text x="30.00" y="78.50">profile_ort (bench_SVC_sigmoid_b_cl_probabilityT..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (292 samples, 30.48%)</title><rect x="27" y="84" width="359" height="15" fill="rgb(253,67,31)"/><text x="30.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilit..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (292 samples, 30.48%)</title><rect x="27" y="100" width="359" height="15" fill="rgb(240,199,30)"/><text x="30.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabilityTrue_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (289 samples, 30.17%)</title><rect x="30" y="116" width="356" height="15" fill="rgb(225,77,2)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="385" y="132" width="1" height="15" fill="rgb(237,83,41)"/><text x="388.00" y="142.50"></text></g><g><title>0x7fbade438c29 (?) (1 samples, 0.10%)</title><rect x="390" y="244" width="1" height="15" fill="rgb(219,129,39)"/><text x="393.00" y="254.50"></text></g><g><title>0x7fbade43fd9e (?) (1 samples, 0.10%)</title><rect x="390" y="260" width="1" height="15" fill="rgb(234,69,0)"/><text x="393.00" y="270.50"></text></g><g><title>0x7fbade43fc56 (?) (1 samples, 0.10%)</title><rect x="390" y="276" width="1" height="15" fill="rgb(221,43,5)"/><text x="393.00" y="286.50"></text></g><g><title>0x7fbade445ac7 (?) (1 samples, 0.10%)</title><rect x="390" y="292" width="1" height="15" fill="rgb(221,73,15)"/><text x="393.00" y="302.50"></text></g><g><title>0x7fbade444c5c (?) (1 samples, 0.10%)</title><rect x="390" y="308" width="1" height="15" fill="rgb(218,41,1)"/><text x="393.00" y="318.50"></text></g><g><title>0x7fbade42e3ac (?) (1 samples, 0.10%)</title><rect x="390" y="324" width="1" height="15" fill="rgb(222,61,1)"/><text x="393.00" y="334.50"></text></g><g><title>0x7fbade427e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.52%)</title><rect x="441" y="484" width="6" height="15" fill="rgb(207,225,54)"/><text x="444.00" y="494.50"></text></g><g><title>tanhf32x (libm-2.29.so) (243 samples, 25.37%)</title><rect x="447" y="484" width="299" height="15" fill="rgb(248,101,0)"/><text x="450.00" y="494.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (198 samples, 20.67%)</title><rect x="502" y="500" width="244" height="15" fill="rgb(207,58,5)"/><text x="505.00" y="510.50">expm1f64 (libm-2.29.so)</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (35 samples, 3.65%)</title><rect x="746" y="484" width="43" height="15" fill="rgb(205,47,39)"/><text x="749.00" y="494.50">vect..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (305 samples, 31.84%)</title><rect x="415" y="468" width="375" height="15" fill="rgb(232,110,43)"/><text x="418.00" y="478.50">RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (1 samples, 0.10%)</title><rect x="789" y="484" width="1" height="15" fill="rgb(212,113,30)"/><text x="792.00" y="494.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.10%)</title><rect x="790" y="468" width="2" height="15" fill="rgb(208,89,37)"/><text x="793.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.10%)</title><rect x="790" y="484" width="2" height="15" fill="rgb(254,83,2)"/><text x="793.00" y="494.50"></text></g><g><title>0x7fbb1d448e0a (libm-2.29.so) (1 samples, 0.10%)</title><rect x="790" y="500" width="2" height="15" fill="rgb(211,74,45)"/><text x="793.00" y="510.50"></text></g><g><title>0x7fbb1d2c9982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="792" y="484" width="1" height="15" fill="rgb(228,194,51)"/><text x="795.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="793" y="484" width="1" height="15" fill="rgb(235,77,35)"/><text x="796.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.21%)</title><rect x="794" y="484" width="3" height="15" fill="rgb(219,217,41)"/><text x="797.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.21%)</title><rect x="794" y="500" width="3" height="15" fill="rgb(229,175,54)"/><text x="797.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.21%)</title><rect x="794" y="516" width="3" height="15" fill="rgb(215,134,46)"/><text x="797.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.21%)</title><rect x="794" y="532" width="3" height="15" fill="rgb(216,222,8)"/><text x="797.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="794" y="548" width="3" height="15" fill="rgb(229,69,9)"/><text x="797.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (5 samples, 0.52%)</title><rect x="792" y="468" width="6" height="15" fill="rgb(219,77,30)"/><text x="795.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h) (1 samples, 0.10%)</title><rect x="797" y="484" width="1" height="15" fill="rgb(206,158,45)"/><text x="800.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h) (1 samples, 0.10%)</title><rect x="797" y="500" width="1" height="15" fill="rgb(254,101,27)"/><text x="800.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h) (3 samples, 0.31%)</title><rect x="803" y="484" width="3" height="15" fill="rgb(209,83,7)"/><text x="806.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h) (3 samples, 0.31%)</title><rect x="803" y="500" width="3" height="15" fill="rgb(224,120,3)"/><text x="806.00" y="510.50"></text></g><g><title>0x7fbb1d2c997c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="806" y="516" width="2" height="15" fill="rgb(254,112,29)"/><text x="809.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="808" y="516" width="1" height="15" fill="rgb(209,166,49)"/><text x="811.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (10 samples, 1.04%)</title><rect x="798" y="468" width="12" height="15" fill="rgb(211,12,28)"/><text x="801.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (3 samples, 0.31%)</title><rect x="806" y="484" width="4" height="15" fill="rgb(236,46,41)"/><text x="809.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (3 samples, 0.31%)</title><rect x="806" y="500" width="4" height="15" fill="rgb(228,212,33)"/><text x="809.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.10%)</title><rect x="809" y="516" width="1" height="15" fill="rgb(208,198,12)"/><text x="812.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.10%)</title><rect x="809" y="532" width="1" height="15" fill="rgb(222,69,20)"/><text x="812.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.10%)</title><rect x="809" y="548" width="1" height="15" fill="rgb(212,129,13)"/><text x="812.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="809" y="564" width="1" height="15" fill="rgb(224,38,35)"/><text x="812.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="809" y="580" width="1" height="15" fill="rgb(231,3,18)"/><text x="812.00" y="590.50"></text></g><g><title>std::fabs (cmath) (1 samples, 0.10%)</title><rect x="826" y="500" width="1" height="15" fill="rgb(206,165,37)"/><text x="829.00" y="510.50"></text></g><g><title>0x7fbade4282a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="830" y="516" width="1" height="15" fill="rgb(218,113,23)"/><text x="833.00" y="526.50"></text></g><g><title>0x7fbb0cd967a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="831" y="516" width="1" height="15" fill="rgb(247,145,32)"/><text x="834.00" y="526.50"></text></g><g><title>0x7fbb1d2c9906 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="832" y="516" width="3" height="15" fill="rgb(226,105,35)"/><text x="835.00" y="526.50"></text></g><g><title>0x7fbb1d2c9965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="835" y="516" width="1" height="15" fill="rgb(216,197,47)"/><text x="838.00" y="526.50"></text></g><g><title>0x7fbb1d2c9982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="836" y="516" width="1" height="15" fill="rgb(230,115,35)"/><text x="839.00" y="526.50"></text></g><g><title>0x7fbb1d2c9be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="837" y="516" width="1" height="15" fill="rgb(220,72,46)"/><text x="840.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="838" y="516" width="2" height="15" fill="rgb(220,174,9)"/><text x="841.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (5 samples, 0.52%)</title><rect x="840" y="516" width="6" height="15" fill="rgb(220,27,3)"/><text x="843.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (5 samples, 0.52%)</title><rect x="840" y="532" width="6" height="15" fill="rgb(222,218,19)"/><text x="843.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (5 samples, 0.52%)</title><rect x="840" y="548" width="6" height="15" fill="rgb(230,82,32)"/><text x="843.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.42%)</title><rect x="841" y="564" width="5" height="15" fill="rgb(240,190,27)"/><text x="844.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.42%)</title><rect x="841" y="580" width="5" height="15" fill="rgb(248,81,31)"/><text x="844.00" y="590.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (29 samples, 3.03%)</title><rect x="811" y="484" width="36" height="15" fill="rgb(222,161,7)"/><text x="814.00" y="494.50">mul..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (16 samples, 1.67%)</title><rect x="827" y="500" width="20" height="15" fill="rgb(221,100,52)"/><text x="830.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h) (1 samples, 0.10%)</title><rect x="846" y="516" width="1" height="15" fill="rgb(246,201,28)"/><text x="849.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (31 samples, 3.24%)</title><rect x="810" y="468" width="38" height="15" fill="rgb(227,72,31)"/><text x="813.00" y="478.50">std..</text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.10%)</title><rect x="847" y="484" width="1" height="15" fill="rgb(237,204,39)"/><text x="850.00" y="494.50"></text></g><g><title>0x7fbb1d2ea16d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="848" y="516" width="2" height="15" fill="rgb(244,25,12)"/><text x="851.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (2 samples, 0.21%)</title><rect x="848" y="500" width="3" height="15" fill="rgb(206,35,35)"/><text x="851.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="850" y="516" width="1" height="15" fill="rgb(233,93,8)"/><text x="853.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="850" y="532" width="1" height="15" fill="rgb(240,146,38)"/><text x="853.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (3 samples, 0.31%)</title><rect x="848" y="468" width="4" height="15" fill="rgb(206,96,54)"/><text x="851.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (3 samples, 0.31%)</title><rect x="848" y="484" width="4" height="15" fill="rgb(254,206,0)"/><text x="851.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h) (1 samples, 0.10%)</title><rect x="851" y="500" width="1" height="15" fill="rgb(240,200,27)"/><text x="854.00" y="510.50"></text></g><g><title>0x7fbb1d2c9bd8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="852" y="484" width="1" height="15" fill="rgb(230,47,53)"/><text x="855.00" y="494.50"></text></g><g><title>profile_pyrt (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (380 samples, 39.67%)</title><rect x="386" y="68" width="468" height="15" fill="rgb(212,70,45)"/><text x="389.00" y="78.50">profile_pyrt (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmo..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (380 samples, 39.67%)</title><rect x="386" y="84" width="468" height="15" fill="rgb(244,38,35)"/><text x="389.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigm..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (380 samples, 39.67%)</title><rect x="386" y="100" width="468" height="15" fill="rgb(231,90,43)"/><text x="389.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (380 samples, 39.67%)</title><rect x="386" y="116" width="468" height="15" fill="rgb(247,145,13)"/><text x="389.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (379 samples, 39.56%)</title><rect x="388" y="132" width="466" height="15" fill="rgb(228,224,44)"/><text x="391.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (379 samples, 39.56%)</title><rect x="388" y="148" width="466" height="15" fill="rgb(253,155,34)"/><text x="391.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (378 samples, 39.46%)</title><rect x="389" y="164" width="465" height="15" fill="rgb(212,126,8)"/><text x="392.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (377 samples, 39.35%)</title><rect x="390" y="180" width="464" height="15" fill="rgb(243,106,23)"/><text x="393.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (377 samples, 39.35%)</title><rect x="390" y="196" width="464" height="15" fill="rgb(217,52,50)"/><text x="393.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (377 samples, 39.35%)</title><rect x="390" y="212" width="464" height="15" fill="rgb(252,42,18)"/><text x="393.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (377 samples, 39.35%)</title><rect x="390" y="228" width="464" height="15" fill="rgb(252,36,13)"/><text x="393.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (376 samples, 39.25%)</title><rect x="391" y="244" width="463" height="15" fill="rgb(223,112,10)"/><text x="394.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (376 samples, 39.25%)</title><rect x="391" y="260" width="463" height="15" fill="rgb(240,69,5)"/><text x="394.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_function:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (376 samples, 39.25%)</title><rect x="391" y="276" width="463" height="15" fill="rgb(246,41,14)"/><text x="394.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp_function:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (376 samples, 39.25%)</title><rect x="391" y="292" width="463" height="15" fill="rgb(234,185,36)"/><text x="394.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat con..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (376 samples, 39.25%)</title><rect x="391" y="308" width="463" height="15" fill="rgb(223,96,36)"/><text x="394.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat con..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (376 samples, 39.25%)</title><rect x="391" y="324" width="463" height="15" fill="rgb(242,84,0)"/><text x="394.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSV..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (376 samples, 39.25%)</title><rect x="391" y="340" width="463" height="15" fill="rgb(237,210,26)"/><text x="394.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (376 samples, 39.25%)</title><rect x="391" y="356" width="463" height="15" fill="rgb(215,50,34)"/><text x="394.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (376 samples, 39.25%)</title><rect x="391" y="372" width="463" height="15" fill="rgb(232,27,35)"/><text x="394.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (376 samples, 39.25%)</title><rect x="391" y="388" width="463" height="15" fill="rgb(214,158,14)"/><text x="394.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (376 samples, 39.25%)</title><rect x="391" y="404" width="463" height="15" fill="rgb(214,121,13)"/><text x="394.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (376 samples, 39.25%)</title><rect x="391" y="420" width="463" height="15" fill="rgb(228,74,44)"/><text x="394.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (376 samples, 39.25%)</title><rect x="391" y="436" width="463" height="15" fill="rgb(242,4,48)"/><text x="394.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (376 samples, 39.25%)</title><rect x="391" y="452" width="463" height="15" fill="rgb(224,157,23)"/><text x="394.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (2 samples, 0.21%)</title><rect x="852" y="468" width="2" height="15" fill="rgb(233,80,16)"/><text x="855.00" y="478.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="853" y="484" width="1" height="15" fill="rgb(210,221,47)"/><text x="856.00" y="494.50"></text></g><g><title>0x7fbaf7d9ae80 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="874" y="244" width="1" height="15" fill="rgb(234,223,36)"/><text x="877.00" y="254.50"></text></g><g><title>0x7fbb1d2c992c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="875" y="244" width="2" height="15" fill="rgb(231,219,51)"/><text x="878.00" y="254.50"></text></g><g><title>0x7fbb1d2c9945 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="877" y="244" width="1" height="15" fill="rgb(215,44,17)"/><text x="880.00" y="254.50"></text></g><g><title>0x7fbb1d2c994f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="878" y="244" width="1" height="15" fill="rgb(216,55,51)"/><text x="881.00" y="254.50"></text></g><g><title>0x7fbb1d2c9998 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="879" y="244" width="3" height="15" fill="rgb(248,209,36)"/><text x="882.00" y="254.50"></text></g><g><title>0x7fbb1d2c99a1 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="882" y="244" width="1" height="15" fill="rgb(229,64,13)"/><text x="885.00" y="254.50"></text></g><g><title>0x7fbb1d2c9a4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="883" y="244" width="1" height="15" fill="rgb(253,17,9)"/><text x="886.00" y="254.50"></text></g><g><title>0x7fbb1d2c9bd4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="884" y="244" width="1" height="15" fill="rgb(252,113,10)"/><text x="887.00" y="254.50"></text></g><g><title>0x7fbb1d2c9be4 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="885" y="244" width="1" height="15" fill="rgb(245,151,20)"/><text x="888.00" y="254.50"></text></g><g><title>0x7fbb1d2c9d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="886" y="244" width="2" height="15" fill="rgb(216,187,12)"/><text x="889.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.21%)</title><rect x="888" y="244" width="2" height="15" fill="rgb(223,70,39)"/><text x="891.00" y="254.50"></text></g><g><title>0x7fbb1d49bc7b (libm-2.29.so) (1 samples, 0.10%)</title><rect x="889" y="260" width="1" height="15" fill="rgb(235,183,40)"/><text x="892.00" y="270.50"></text></g><g><title>0x7fbb1d2cab24 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="894" y="260" width="1" height="15" fill="rgb(237,88,13)"/><text x="897.00" y="270.50"></text></g><g><title>0x7fbb1d2cac41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="895" y="260" width="1" height="15" fill="rgb(228,171,43)"/><text x="898.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.63%)</title><rect x="890" y="244" width="8" height="15" fill="rgb(251,111,6)"/><text x="893.00" y="254.50"></text></g><g><title>0x7fbb1d2cb00a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="896" y="260" width="2" height="15" fill="rgb(220,69,29)"/><text x="899.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="921" y="260" width="2" height="15" fill="rgb(248,140,37)"/><text x="924.00" y="270.50"></text></g><g><title>0x7fbaf7d9b6b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="938" y="276" width="1" height="15" fill="rgb(242,195,16)"/><text x="941.00" y="286.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (31 samples, 3.24%)</title><rect x="923" y="260" width="39" height="15" fill="rgb(211,191,26)"/><text x="926.00" y="270.50">svm..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (18 samples, 1.88%)</title><rect x="939" y="276" width="23" height="15" fill="rgb(244,42,0)"/><text x="942.00" y="286.50">s..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (269 samples, 28.08%)</title><rect x="854" y="164" width="332" height="15" fill="rgb(242,158,36)"/><text x="857.00" y="174.50">_dense_predict_proba (sklearn/svm/_base.py)</text></g><g><title>0x7fbaf7dba3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (269 samples, 28.08%)</title><rect x="854" y="180" width="332" height="15" fill="rgb(236,72,29)"/><text x="857.00" y="190.50">0x7fbaf7dba3fd (sklearn/svm/_libsvm.cpython-..</text></g><g><title>0x7fbaf7db8553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (269 samples, 28.08%)</title><rect x="854" y="196" width="332" height="15" fill="rgb(254,102,38)"/><text x="857.00" y="206.50">0x7fbaf7db8553 (sklearn/svm/_libsvm.cpython-..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (269 samples, 28.08%)</title><rect x="854" y="212" width="332" height="15" fill="rgb(254,62,43)"/><text x="857.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm.cpyt..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (269 samples, 28.08%)</title><rect x="854" y="228" width="332" height="15" fill="rgb(228,8,37)"/><text x="857.00" y="238.50">svm_predict_probability (sklearn/svm/_libsvm..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (234 samples, 24.43%)</title><rect x="898" y="244" width="288" height="15" fill="rgb(217,185,27)"/><text x="901.00" y="254.50">svm_predict_values (sklearn/svm/_libsv..</text></g><g><title>tanhf32x (libm-2.29.so) (182 samples, 19.00%)</title><rect x="962" y="260" width="224" height="15" fill="rgb(227,52,53)"/><text x="965.00" y="270.50">tanhf32x (libm-2.29.so)</text></g><g><title>expm1f64 (libm-2.29.so) (119 samples, 12.42%)</title><rect x="1039" y="276" width="147" height="15" fill="rgb(205,31,18)"/><text x="1042.00" y="286.50">expm1f64 (libm-2.2..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1187" y="212" width="1" height="15" fill="rgb(251,209,14)"/><text x="1190.00" y="222.50"></text></g><g><title>all (958 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(238,208,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (958 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(218,137,18)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (272 samples, 28.39%)</title><rect x="854" y="68" width="336" height="15" fill="rgb(210,0,36)"/><text x="857.00" y="78.50">profile_skl (bench_SVC_sigmoid_b_cl_probabili..</text></g><g><title>setup_profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (272 samples, 28.39%)</title><rect x="854" y="84" width="336" height="15" fill="rgb(226,52,12)"/><text x="857.00" y="94.50">setup_profile (bench_SVC_sigmoid_b_cl_probabi..</text></g><g><title>profile (bench_SVC_sigmoid_b_cl_probabilityTrue_kernelsigmoid_1000_4_12_float_.py) (272 samples, 28.39%)</title><rect x="854" y="100" width="336" height="15" fill="rgb(206,123,11)"/><text x="857.00" y="110.50">profile (bench_SVC_sigmoid_b_cl_probabilityTr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (272 samples, 28.39%)</title><rect x="854" y="116" width="336" height="15" fill="rgb(246,11,24)"/><text x="857.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (272 samples, 28.39%)</title><rect x="854" y="132" width="336" height="15" fill="rgb(243,229,31)"/><text x="857.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (272 samples, 28.39%)</title><rect x="854" y="148" width="336" height="15" fill="rgb(254,225,41)"/><text x="857.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (3 samples, 0.31%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(205,191,45)"/><text x="1189.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.31%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(225,142,49)"/><text x="1189.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.21%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(237,114,53)"/><text x="1190.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(240,145,12)"/><text x="1191.00" y="222.50"></text></g></g></svg>