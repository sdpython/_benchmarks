<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:18) (1 samples, 0.12%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(253,132,37)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.12%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(233,205,20)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.12%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(236,22,33)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.12%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(213,154,49)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.12%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(237,189,12)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(244,155,31)"/><text x="13.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.12%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(238,28,44)"/><text x="13.00" y="206.50"></text></g><g><title>0x7f116ec7f3de (?) (1 samples, 0.12%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(241,62,40)"/><text x="13.00" y="222.50"></text></g><g><title>0x7f116ec7e16e (?) (1 samples, 0.12%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(209,143,38)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f116eb30bd8 (?) (1 samples, 0.12%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(253,150,51)"/><text x="13.00" y="254.50"></text></g><g><title>0x7f116eb2e2d0 (?) (1 samples, 0.12%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(214,116,17)"/><text x="13.00" y="270.50"></text></g><g><title>0x7f116ea6570f (?) (1 samples, 0.12%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(226,166,37)"/><text x="13.00" y="286.50"></text></g><g><title>0x7f116ea649b3 (?) (1 samples, 0.12%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(250,226,45)"/><text x="13.00" y="302.50"></text></g><g><title>0x7f116eae6279 (?) (1 samples, 0.12%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(247,172,25)"/><text x="13.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="11" y="116" width="1" height="15" fill="rgb(240,221,26)"/><text x="14.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="11" y="132" width="1" height="15" fill="rgb(241,178,7)"/><text x="14.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.12%)</title><rect x="11" y="148" width="1" height="15" fill="rgb(218,213,44)"/><text x="14.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:934) (1 samples, 0.12%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(232,25,20)"/><text x="15.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="17" y="196" width="1" height="15" fill="rgb(240,124,22)"/><text x="20.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (7 samples, 0.84%)</title><rect x="12" y="148" width="10" height="15" fill="rgb(239,82,15)"/><text x="15.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.72%)</title><rect x="14" y="164" width="8" height="15" fill="rgb(207,54,27)"/><text x="17.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 0.60%)</title><rect x="15" y="180" width="7" height="15" fill="rgb(240,167,32)"/><text x="18.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.36%)</title><rect x="18" y="196" width="4" height="15" fill="rgb(207,172,50)"/><text x="21.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1648) (1 samples, 0.12%)</title><rect x="22" y="148" width="2" height="15" fill="rgb(232,66,40)"/><text x="25.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="26" y="212" width="2" height="15" fill="rgb(211,54,42)"/><text x="29.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.24%)</title><rect x="28" y="212" width="3" height="15" fill="rgb(248,50,49)"/><text x="31.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="29" y="228" width="2" height="15" fill="rgb(206,51,2)"/><text x="32.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (5 samples, 0.60%)</title><rect x="25" y="180" width="7" height="15" fill="rgb(253,122,29)"/><text x="28.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.60%)</title><rect x="25" y="196" width="7" height="15" fill="rgb(208,9,8)"/><text x="28.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.12%)</title><rect x="31" y="212" width="1" height="15" fill="rgb(241,90,44)"/><text x="34.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="31" y="228" width="1" height="15" fill="rgb(226,46,39)"/><text x="34.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.12%)</title><rect x="34" y="196" width="1" height="15" fill="rgb(240,24,23)"/><text x="37.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.36%)</title><rect x="35" y="196" width="4" height="15" fill="rgb(247,78,48)"/><text x="38.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (2 samples, 0.24%)</title><rect x="36" y="212" width="3" height="15" fill="rgb(249,30,21)"/><text x="39.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.12%)</title><rect x="41" y="212" width="1" height="15" fill="rgb(206,164,17)"/><text x="44.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 0.60%)</title><rect x="39" y="196" width="7" height="15" fill="rgb(231,101,33)"/><text x="42.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.36%)</title><rect x="42" y="212" width="4" height="15" fill="rgb(238,216,31)"/><text x="45.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.12%)</title><rect x="45" y="228" width="1" height="15" fill="rgb(239,214,2)"/><text x="48.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.12%)</title><rect x="46" y="196" width="2" height="15" fill="rgb(230,32,10)"/><text x="49.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.12%)</title><rect x="48" y="228" width="1" height="15" fill="rgb(211,155,40)"/><text x="51.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.24%)</title><rect x="48" y="196" width="3" height="15" fill="rgb(211,217,0)"/><text x="51.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.24%)</title><rect x="48" y="212" width="3" height="15" fill="rgb(247,173,49)"/><text x="51.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.12%)</title><rect x="49" y="228" width="2" height="15" fill="rgb(237,203,15)"/><text x="52.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.12%)</title><rect x="51" y="196" width="1" height="15" fill="rgb(254,108,4)"/><text x="54.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.12%)</title><rect x="52" y="196" width="1" height="15" fill="rgb(249,215,13)"/><text x="55.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.12%)</title><rect x="52" y="212" width="1" height="15" fill="rgb(228,1,52)"/><text x="55.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (16 samples, 1.92%)</title><rect x="32" y="180" width="23" height="15" fill="rgb(247,132,47)"/><text x="35.00" y="190.50">d..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.12%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(228,61,8)"/><text x="56.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.12%)</title><rect x="55" y="180" width="1" height="15" fill="rgb(210,208,35)"/><text x="58.00" y="190.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.12%)</title><rect x="56" y="196" width="2" height="15" fill="rgb(241,119,42)"/><text x="59.00" y="206.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.12%)</title><rect x="58" y="308" width="1" height="15" fill="rgb(220,52,35)"/><text x="61.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.24%)</title><rect x="58" y="260" width="2" height="15" fill="rgb(235,149,33)"/><text x="61.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.24%)</title><rect x="58" y="276" width="2" height="15" fill="rgb(239,168,25)"/><text x="61.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.24%)</title><rect x="58" y="292" width="2" height="15" fill="rgb(225,45,48)"/><text x="61.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="59" y="308" width="1" height="15" fill="rgb(249,189,6)"/><text x="62.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.12%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(218,206,39)"/><text x="63.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.12%)</title><rect x="60" y="276" width="2" height="15" fill="rgb(210,172,11)"/><text x="63.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.12%)</title><rect x="60" y="292" width="2" height="15" fill="rgb(229,71,43)"/><text x="63.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.12%)</title><rect x="60" y="308" width="2" height="15" fill="rgb(205,178,53)"/><text x="63.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.12%)</title><rect x="60" y="324" width="2" height="15" fill="rgb(231,130,39)"/><text x="63.00" y="334.50"></text></g><g><title>array_add (number.c:330) (4 samples, 0.48%)</title><rect x="58" y="196" width="5" height="15" fill="rgb(218,8,2)"/><text x="61.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.48%)</title><rect x="58" y="212" width="5" height="15" fill="rgb(221,105,39)"/><text x="61.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.48%)</title><rect x="58" y="228" width="5" height="15" fill="rgb(205,64,13)"/><text x="61.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.48%)</title><rect x="58" y="244" width="5" height="15" fill="rgb(211,170,37)"/><text x="61.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.12%)</title><rect x="62" y="260" width="1" height="15" fill="rgb(230,101,13)"/><text x="65.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.12%)</title><rect x="62" y="276" width="1" height="15" fill="rgb(237,212,49)"/><text x="65.00" y="286.50"></text></g><g><title>0x7f116f7f2a68 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="62" y="292" width="1" height="15" fill="rgb(214,72,9)"/><text x="65.00" y="302.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.36%)</title><rect x="63" y="212" width="5" height="15" fill="rgb(230,79,49)"/><text x="66.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 2.52%)</title><rect x="68" y="212" width="29" height="15" fill="rgb(210,124,23)"/><text x="71.00" y="222.50">dg..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.12%)</title><rect x="97" y="212" width="2" height="15" fill="rgb(212,94,21)"/><text x="100.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.12%)</title><rect x="99" y="244" width="1" height="15" fill="rgb(223,228,36)"/><text x="102.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2410) (1 samples, 0.12%)</title><rect x="99" y="260" width="1" height="15" fill="rgb(238,192,26)"/><text x="102.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.12%)</title><rect x="100" y="276" width="1" height="15" fill="rgb(230,87,27)"/><text x="103.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2477) (1 samples, 0.12%)</title><rect x="100" y="292" width="1" height="15" fill="rgb(208,190,52)"/><text x="103.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.12%)</title><rect x="101" y="276" width="2" height="15" fill="rgb(225,16,18)"/><text x="104.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.12%)</title><rect x="101" y="292" width="2" height="15" fill="rgb(207,143,26)"/><text x="104.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="101" y="308" width="2" height="15" fill="rgb(225,166,18)"/><text x="104.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.12%)</title><rect x="101" y="324" width="2" height="15" fill="rgb(221,218,51)"/><text x="104.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.12%)</title><rect x="101" y="340" width="2" height="15" fill="rgb(212,71,43)"/><text x="104.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.12%)</title><rect x="103" y="308" width="1" height="15" fill="rgb(236,89,32)"/><text x="106.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (24 samples, 2.88%)</title><rect x="104" y="308" width="34" height="15" fill="rgb(237,157,26)"/><text x="107.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (24 samples, 2.88%)</title><rect x="104" y="324" width="34" height="15" fill="rgb(229,72,14)"/><text x="107.00" y="334.50">_a..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (26 samples, 3.12%)</title><rect x="103" y="276" width="37" height="15" fill="rgb(225,227,34)"/><text x="106.00" y="286.50">npy..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (26 samples, 3.12%)</title><rect x="103" y="292" width="37" height="15" fill="rgb(225,137,20)"/><text x="106.00" y="302.50">PyA..</text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.12%)</title><rect x="138" y="308" width="2" height="15" fill="rgb(216,75,17)"/><text x="141.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:39) (1 samples, 0.12%)</title><rect x="138" y="324" width="2" height="15" fill="rgb(210,54,42)"/><text x="141.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (29 samples, 3.48%)</title><rect x="100" y="244" width="41" height="15" fill="rgb(236,163,12)"/><text x="103.00" y="254.50">PyU..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (29 samples, 3.48%)</title><rect x="100" y="260" width="41" height="15" fill="rgb(205,136,2)"/><text x="103.00" y="270.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.12%)</title><rect x="140" y="276" width="1" height="15" fill="rgb(231,24,19)"/><text x="143.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.12%)</title><rect x="140" y="292" width="1" height="15" fill="rgb(251,187,11)"/><text x="143.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.12%)</title><rect x="140" y="308" width="1" height="15" fill="rgb(214,58,36)"/><text x="143.00" y="318.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="141" y="308" width="1" height="15" fill="rgb(208,164,52)"/><text x="144.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (16 samples, 1.92%)</title><rect x="141" y="244" width="23" height="15" fill="rgb(252,86,27)"/><text x="144.00" y="254.50">P..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (16 samples, 1.92%)</title><rect x="141" y="260" width="23" height="15" fill="rgb(217,146,0)"/><text x="144.00" y="270.50">D..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 1.92%)</title><rect x="141" y="276" width="23" height="15" fill="rgb(216,107,29)"/><text x="144.00" y="286.50">c..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 1.92%)</title><rect x="141" y="292" width="23" height="15" fill="rgb(218,36,54)"/><text x="144.00" y="302.50">d..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 1.80%)</title><rect x="142" y="308" width="22" height="15" fill="rgb(211,195,22)"/><text x="145.00" y="318.50">d..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (77 samples, 9.23%)</title><rect x="56" y="180" width="109" height="15" fill="rgb(253,20,15)"/><text x="59.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (72 samples, 8.63%)</title><rect x="63" y="196" width="102" height="15" fill="rgb(245,90,25)"/><text x="66.00" y="206.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (47 samples, 5.64%)</title><rect x="99" y="212" width="66" height="15" fill="rgb(247,58,33)"/><text x="102.00" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (47 samples, 5.64%)</title><rect x="99" y="228" width="66" height="15" fill="rgb(209,91,27)"/><text x="102.00" y="238.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.12%)</title><rect x="164" y="244" width="1" height="15" fill="rgb(244,171,50)"/><text x="167.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.12%)</title><rect x="164" y="260" width="1" height="15" fill="rgb(224,212,23)"/><text x="167.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="164" y="276" width="1" height="15" fill="rgb(246,110,16)"/><text x="167.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="164" y="292" width="1" height="15" fill="rgb(220,134,24)"/><text x="167.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.12%)</title><rect x="164" y="308" width="1" height="15" fill="rgb(206,223,5)"/><text x="167.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (101 samples, 12.11%)</title><rect x="24" y="164" width="143" height="15" fill="rgb(221,146,24)"/><text x="27.00" y="174.50">_predict_proba_lr ..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.12%)</title><rect x="165" y="180" width="2" height="15" fill="rgb(238,14,30)"/><text x="168.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="167" y="196" width="1" height="15" fill="rgb(235,19,41)"/><text x="170.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.12%)</title><rect x="167" y="212" width="1" height="15" fill="rgb(227,34,1)"/><text x="170.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1706) (1 samples, 0.12%)</title><rect x="167" y="228" width="1" height="15" fill="rgb(208,143,45)"/><text x="170.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1985) (1 samples, 0.12%)</title><rect x="168" y="212" width="1" height="15" fill="rgb(236,124,8)"/><text x="171.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.24%)</title><rect x="168" y="196" width="3" height="15" fill="rgb(239,32,3)"/><text x="171.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1989) (1 samples, 0.12%)</title><rect x="169" y="212" width="2" height="15" fill="rgb(223,5,39)"/><text x="172.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.12%)</title><rect x="171" y="212" width="1" height="15" fill="rgb(228,78,0)"/><text x="174.00" y="222.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.12%)</title><rect x="171" y="228" width="1" height="15" fill="rgb(221,114,18)"/><text x="174.00" y="238.50"></text></g><g><title>0x7f115aab9fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="172" y="276" width="3" height="15" fill="rgb(240,197,34)"/><text x="175.00" y="286.50"></text></g><g><title>0x7f116f9c4ba0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="178" y="292" width="1" height="15" fill="rgb(237,67,21)"/><text x="181.00" y="302.50"></text></g><g><title>0x7f116f9c4c07 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="179" y="292" width="2" height="15" fill="rgb(240,110,1)"/><text x="182.00" y="302.50"></text></g><g><title>0x7f116f9c4c0c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="181" y="292" width="1" height="15" fill="rgb(223,148,25)"/><text x="184.00" y="302.50"></text></g><g><title>0x7f116f9c4c18 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="182" y="292" width="2" height="15" fill="rgb(236,103,38)"/><text x="185.00" y="302.50"></text></g><g><title>0x7f116f9c4c2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="184" y="292" width="1" height="15" fill="rgb(237,87,6)"/><text x="187.00" y="302.50"></text></g><g><title>0x7f115aafc265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.20%)</title><rect x="172" y="260" width="14" height="15" fill="rgb(218,97,33)"/><text x="175.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 0.96%)</title><rect x="175" y="276" width="11" height="15" fill="rgb(244,56,13)"/><text x="178.00" y="286.50"></text></g><g><title>0x7f116f9c4c7b (libm-2.29.so) (1 samples, 0.12%)</title><rect x="185" y="292" width="1" height="15" fill="rgb(216,112,25)"/><text x="188.00" y="302.50"></text></g><g><title>0x7f115aafc275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="186" y="260" width="2" height="15" fill="rgb(212,190,31)"/><text x="189.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (19 samples, 2.28%)</title><rect x="167" y="164" width="26" height="15" fill="rgb(212,146,26)"/><text x="170.00" y="174.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 2.28%)</title><rect x="167" y="180" width="26" height="15" fill="rgb(232,44,49)"/><text x="170.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 1.92%)</title><rect x="171" y="196" width="22" height="15" fill="rgb(240,36,15)"/><text x="174.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (15 samples, 1.80%)</title><rect x="172" y="212" width="21" height="15" fill="rgb(208,62,19)"/><text x="175.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (15 samples, 1.80%)</title><rect x="172" y="228" width="21" height="15" fill="rgb(240,45,35)"/><text x="175.00" y="238.50"></text></g><g><title>0x7f115aadb9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.80%)</title><rect x="172" y="244" width="21" height="15" fill="rgb(206,161,45)"/><text x="175.00" y="254.50"></text></g><g><title>0x7f115aafc279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.48%)</title><rect x="188" y="260" width="5" height="15" fill="rgb(248,118,54)"/><text x="191.00" y="270.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.12%)</title><rect x="193" y="180" width="2" height="15" fill="rgb(226,6,49)"/><text x="196.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.12%)</title><rect x="193" y="196" width="2" height="15" fill="rgb(250,175,5)"/><text x="196.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.12%)</title><rect x="193" y="212" width="2" height="15" fill="rgb(232,182,36)"/><text x="196.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.12%)</title><rect x="195" y="180" width="1" height="15" fill="rgb(241,51,1)"/><text x="198.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.12%)</title><rect x="195" y="196" width="1" height="15" fill="rgb(236,61,1)"/><text x="198.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.12%)</title><rect x="195" y="212" width="1" height="15" fill="rgb(218,42,16)"/><text x="198.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.12%)</title><rect x="195" y="228" width="1" height="15" fill="rgb(210,161,46)"/><text x="198.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4460) (1 samples, 0.12%)</title><rect x="198" y="244" width="1" height="15" fill="rgb(215,60,36)"/><text x="201.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="199" y="260" width="2" height="15" fill="rgb(239,59,39)"/><text x="202.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.12%)</title><rect x="199" y="276" width="2" height="15" fill="rgb(247,122,47)"/><text x="202.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:486) (1 samples, 0.12%)</title><rect x="199" y="292" width="2" height="15" fill="rgb(206,95,29)"/><text x="202.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.12%)</title><rect x="201" y="276" width="1" height="15" fill="rgb(254,39,52)"/><text x="204.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.12%)</title><rect x="201" y="292" width="1" height="15" fill="rgb(237,129,3)"/><text x="204.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.12%)</title><rect x="201" y="308" width="1" height="15" fill="rgb(213,24,14)"/><text x="204.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="201" y="324" width="1" height="15" fill="rgb(225,94,7)"/><text x="204.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="201" y="340" width="1" height="15" fill="rgb(224,17,26)"/><text x="204.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.12%)</title><rect x="201" y="356" width="1" height="15" fill="rgb(237,177,18)"/><text x="204.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.12%)</title><rect x="202" y="276" width="1" height="15" fill="rgb(236,204,19)"/><text x="205.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:126) (1 samples, 0.12%)</title><rect x="202" y="292" width="1" height="15" fill="rgb(214,113,35)"/><text x="205.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.12%)</title><rect x="203" y="292" width="2" height="15" fill="rgb(226,25,39)"/><text x="206.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (2 samples, 0.24%)</title><rect x="205" y="292" width="3" height="15" fill="rgb(249,128,9)"/><text x="208.00" y="302.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.24%)</title><rect x="210" y="324" width="3" height="15" fill="rgb(211,210,3)"/><text x="213.00" y="334.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.24%)</title><rect x="213" y="324" width="3" height="15" fill="rgb(232,119,11)"/><text x="216.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (7 samples, 0.84%)</title><rect x="208" y="308" width="9" height="15" fill="rgb(218,3,0)"/><text x="211.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.12%)</title><rect x="216" y="324" width="1" height="15" fill="rgb(210,71,24)"/><text x="219.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.12%)</title><rect x="217" y="308" width="2" height="15" fill="rgb(220,83,48)"/><text x="220.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1874) (1 samples, 0.12%)</title><rect x="217" y="324" width="2" height="15" fill="rgb(213,142,18)"/><text x="220.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (10 samples, 1.20%)</title><rect x="208" y="292" width="14" height="15" fill="rgb(231,5,13)"/><text x="211.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (2 samples, 0.24%)</title><rect x="219" y="308" width="3" height="15" fill="rgb(206,191,31)"/><text x="222.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (19 samples, 2.28%)</title><rect x="196" y="180" width="27" height="15" fill="rgb(244,149,31)"/><text x="199.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 2.28%)</title><rect x="196" y="196" width="27" height="15" fill="rgb(241,128,27)"/><text x="199.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (19 samples, 2.28%)</title><rect x="196" y="212" width="27" height="15" fill="rgb(238,58,27)"/><text x="199.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (18 samples, 2.16%)</title><rect x="198" y="228" width="25" height="15" fill="rgb(211,110,4)"/><text x="201.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (17 samples, 2.04%)</title><rect x="199" y="244" width="24" height="15" fill="rgb(240,42,42)"/><text x="202.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (16 samples, 1.92%)</title><rect x="201" y="260" width="22" height="15" fill="rgb(211,12,39)"/><text x="204.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 1.68%)</title><rect x="203" y="276" width="20" height="15" fill="rgb(244,67,35)"/><text x="206.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.12%)</title><rect x="222" y="292" width="1" height="15" fill="rgb(216,175,18)"/><text x="225.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="222" y="308" width="1" height="15" fill="rgb(254,114,46)"/><text x="225.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.12%)</title><rect x="223" y="196" width="2" height="15" fill="rgb(251,1,34)"/><text x="226.00" y="206.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.12%)</title><rect x="223" y="212" width="2" height="15" fill="rgb(245,182,37)"/><text x="226.00" y="222.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2230) (1 samples, 0.12%)</title><rect x="225" y="260" width="1" height="15" fill="rgb(235,136,7)"/><text x="228.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.12%)</title><rect x="226" y="276" width="1" height="15" fill="rgb(214,60,52)"/><text x="229.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.48%)</title><rect x="225" y="228" width="5" height="15" fill="rgb(242,81,41)"/><text x="228.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.48%)</title><rect x="225" y="244" width="5" height="15" fill="rgb(215,108,18)"/><text x="228.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.36%)</title><rect x="226" y="260" width="4" height="15" fill="rgb(248,154,32)"/><text x="229.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.24%)</title><rect x="227" y="276" width="3" height="15" fill="rgb(230,26,41)"/><text x="230.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.12%)</title><rect x="229" y="292" width="1" height="15" fill="rgb(240,90,30)"/><text x="232.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (158 samples, 18.94%)</title><rect x="12" y="132" width="224" height="15" fill="rgb(251,193,2)"/><text x="15.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (150 samples, 17.99%)</title><rect x="24" y="148" width="212" height="15" fill="rgb(206,86,31)"/><text x="27.00" y="158.50">predict_proba (sklearn/line..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (30 samples, 3.60%)</title><rect x="193" y="164" width="43" height="15" fill="rgb(230,39,46)"/><text x="196.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.08%)</title><rect x="223" y="180" width="13" height="15" fill="rgb(214,42,44)"/><text x="226.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 0.96%)</title><rect x="225" y="196" width="11" height="15" fill="rgb(246,59,42)"/><text x="228.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 0.96%)</title><rect x="225" y="212" width="11" height="15" fill="rgb(253,212,2)"/><text x="228.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.48%)</title><rect x="230" y="228" width="6" height="15" fill="rgb(207,40,47)"/><text x="233.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.48%)</title><rect x="230" y="244" width="6" height="15" fill="rgb(245,16,23)"/><text x="233.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.48%)</title><rect x="230" y="260" width="6" height="15" fill="rgb(225,156,44)"/><text x="233.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.48%)</title><rect x="230" y="276" width="6" height="15" fill="rgb(217,220,3)"/><text x="233.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.48%)</title><rect x="230" y="292" width="6" height="15" fill="rgb(242,3,2)"/><text x="233.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:38) (161 samples, 19.30%)</title><rect x="10" y="52" width="227" height="15" fill="rgb(213,135,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegres..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:37) (161 samples, 19.30%)</title><rect x="10" y="68" width="227" height="15" fill="rgb(218,89,23)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:29) (161 samples, 19.30%)</title><rect x="10" y="84" width="227" height="15" fill="rgb(213,198,37)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:23) (160 samples, 19.18%)</title><rect x="11" y="100" width="226" height="15" fill="rgb(221,52,2)"/><text x="14.00" y="110.50">profile (bench_LogisticRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (159 samples, 19.06%)</title><rect x="12" y="116" width="225" height="15" fill="rgb(207,36,7)"/><text x="15.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="236" y="132" width="1" height="15" fill="rgb(229,185,26)"/><text x="239.00" y="142.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.12%)</title><rect x="237" y="852" width="2" height="15" fill="rgb(214,29,7)"/><text x="240.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.12%)</title><rect x="237" y="868" width="2" height="15" fill="rgb(243,83,29)"/><text x="240.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.12%)</title><rect x="237" y="884" width="2" height="15" fill="rgb(252,51,0)"/><text x="240.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="237" y="900" width="2" height="15" fill="rgb(229,73,48)"/><text x="240.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="237" y="916" width="2" height="15" fill="rgb(246,66,40)"/><text x="240.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="237" y="932" width="2" height="15" fill="rgb(236,214,51)"/><text x="240.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="237" y="948" width="2" height="15" fill="rgb(212,19,51)"/><text x="240.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="237" y="964" width="2" height="15" fill="rgb(233,193,22)"/><text x="240.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.12%)</title><rect x="237" y="980" width="2" height="15" fill="rgb(230,95,34)"/><text x="240.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.12%)</title><rect x="237" y="996" width="2" height="15" fill="rgb(243,80,3)"/><text x="240.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="239" y="852" width="1" height="15" fill="rgb(220,112,39)"/><text x="242.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.12%)</title><rect x="239" y="868" width="1" height="15" fill="rgb(233,33,22)"/><text x="242.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.12%)</title><rect x="239" y="884" width="1" height="15" fill="rgb(252,130,48)"/><text x="242.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.12%)</title><rect x="239" y="900" width="1" height="15" fill="rgb(240,160,9)"/><text x="242.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.12%)</title><rect x="239" y="916" width="1" height="15" fill="rgb(225,169,46)"/><text x="242.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.12%)</title><rect x="239" y="932" width="1" height="15" fill="rgb(218,124,42)"/><text x="242.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.12%)</title><rect x="239" y="948" width="1" height="15" fill="rgb(254,21,2)"/><text x="242.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.12%)</title><rect x="239" y="964" width="1" height="15" fill="rgb(222,216,23)"/><text x="242.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.12%)</title><rect x="239" y="980" width="1" height="15" fill="rgb(238,154,39)"/><text x="242.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.12%)</title><rect x="239" y="996" width="1" height="15" fill="rgb(242,166,46)"/><text x="242.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.12%)</title><rect x="239" y="1012" width="1" height="15" fill="rgb(217,210,43)"/><text x="242.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="239" y="1028" width="1" height="15" fill="rgb(247,83,12)"/><text x="242.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.12%)</title><rect x="239" y="1044" width="1" height="15" fill="rgb(219,22,39)"/><text x="242.00" y="1054.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="240" y="868" width="2" height="15" fill="rgb(214,112,32)"/><text x="243.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="240" y="884" width="2" height="15" fill="rgb(232,20,48)"/><text x="243.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="240" y="900" width="2" height="15" fill="rgb(216,199,16)"/><text x="243.00" y="910.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.12%)</title><rect x="240" y="916" width="2" height="15" fill="rgb(249,113,34)"/><text x="243.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.12%)</title><rect x="240" y="932" width="2" height="15" fill="rgb(233,49,35)"/><text x="243.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.48%)</title><rect x="237" y="820" width="6" height="15" fill="rgb(215,178,30)"/><text x="240.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.48%)</title><rect x="237" y="836" width="6" height="15" fill="rgb(237,174,17)"/><text x="240.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.24%)</title><rect x="240" y="852" width="3" height="15" fill="rgb(235,48,43)"/><text x="243.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.12%)</title><rect x="242" y="868" width="1" height="15" fill="rgb(241,227,13)"/><text x="245.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:702) (1 samples, 0.12%)</title><rect x="242" y="884" width="1" height="15" fill="rgb(212,138,15)"/><text x="245.00" y="894.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (5 samples, 0.60%)</title><rect x="237" y="148" width="7" height="15" fill="rgb(241,123,32)"/><text x="240.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="164" width="7" height="15" fill="rgb(251,170,17)"/><text x="240.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.60%)</title><rect x="237" y="180" width="7" height="15" fill="rgb(223,48,0)"/><text x="240.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="196" width="7" height="15" fill="rgb(218,214,47)"/><text x="240.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="212" width="7" height="15" fill="rgb(215,182,9)"/><text x="240.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="237" y="228" width="7" height="15" fill="rgb(206,185,39)"/><text x="240.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="237" y="244" width="7" height="15" fill="rgb(245,87,38)"/><text x="240.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="237" y="260" width="7" height="15" fill="rgb(248,0,16)"/><text x="240.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="276" width="7" height="15" fill="rgb(219,87,9)"/><text x="240.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.60%)</title><rect x="237" y="292" width="7" height="15" fill="rgb(246,143,50)"/><text x="240.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="308" width="7" height="15" fill="rgb(244,51,39)"/><text x="240.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="237" y="324" width="7" height="15" fill="rgb(215,49,40)"/><text x="240.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="237" y="340" width="7" height="15" fill="rgb(244,42,15)"/><text x="240.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="237" y="356" width="7" height="15" fill="rgb(247,109,46)"/><text x="240.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="372" width="7" height="15" fill="rgb(205,92,29)"/><text x="240.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.60%)</title><rect x="237" y="388" width="7" height="15" fill="rgb(246,219,33)"/><text x="240.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="404" width="7" height="15" fill="rgb(215,11,34)"/><text x="240.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="237" y="420" width="7" height="15" fill="rgb(228,39,52)"/><text x="240.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="237" y="436" width="7" height="15" fill="rgb(238,167,33)"/><text x="240.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="237" y="452" width="7" height="15" fill="rgb(216,216,40)"/><text x="240.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="468" width="7" height="15" fill="rgb(225,151,23)"/><text x="240.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.60%)</title><rect x="237" y="484" width="7" height="15" fill="rgb(254,197,1)"/><text x="240.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="500" width="7" height="15" fill="rgb(245,41,39)"/><text x="240.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="237" y="516" width="7" height="15" fill="rgb(247,166,20)"/><text x="240.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="237" y="532" width="7" height="15" fill="rgb(208,150,39)"/><text x="240.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="237" y="548" width="7" height="15" fill="rgb(223,221,47)"/><text x="240.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="564" width="7" height="15" fill="rgb(234,78,37)"/><text x="240.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.60%)</title><rect x="237" y="580" width="7" height="15" fill="rgb(240,133,23)"/><text x="240.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="596" width="7" height="15" fill="rgb(223,187,45)"/><text x="240.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.60%)</title><rect x="237" y="612" width="7" height="15" fill="rgb(225,94,33)"/><text x="240.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="628" width="7" height="15" fill="rgb(251,192,10)"/><text x="240.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="644" width="7" height="15" fill="rgb(226,39,44)"/><text x="240.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="237" y="660" width="7" height="15" fill="rgb(208,109,38)"/><text x="240.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="237" y="676" width="7" height="15" fill="rgb(239,34,28)"/><text x="240.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="237" y="692" width="7" height="15" fill="rgb(205,67,10)"/><text x="240.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="708" width="7" height="15" fill="rgb(207,125,5)"/><text x="240.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.60%)</title><rect x="237" y="724" width="7" height="15" fill="rgb(253,225,51)"/><text x="240.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.60%)</title><rect x="237" y="740" width="7" height="15" fill="rgb(213,40,52)"/><text x="240.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.60%)</title><rect x="237" y="756" width="7" height="15" fill="rgb(205,77,13)"/><text x="240.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.60%)</title><rect x="237" y="772" width="7" height="15" fill="rgb(219,166,41)"/><text x="240.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.60%)</title><rect x="237" y="788" width="7" height="15" fill="rgb(215,203,26)"/><text x="240.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.60%)</title><rect x="237" y="804" width="7" height="15" fill="rgb(227,109,18)"/><text x="240.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.12%)</title><rect x="243" y="820" width="1" height="15" fill="rgb(215,31,0)"/><text x="246.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="243" y="836" width="1" height="15" fill="rgb(237,11,14)"/><text x="246.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="243" y="852" width="1" height="15" fill="rgb(219,186,19)"/><text x="246.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="243" y="868" width="1" height="15" fill="rgb(218,131,21)"/><text x="246.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="243" y="884" width="1" height="15" fill="rgb(254,118,39)"/><text x="246.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="243" y="900" width="1" height="15" fill="rgb(250,221,53)"/><text x="246.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.12%)</title><rect x="243" y="916" width="1" height="15" fill="rgb(246,190,23)"/><text x="246.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.12%)</title><rect x="243" y="932" width="1" height="15" fill="rgb(213,228,2)"/><text x="246.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="243" y="948" width="1" height="15" fill="rgb(206,127,1)"/><text x="246.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="243" y="964" width="1" height="15" fill="rgb(206,96,41)"/><text x="246.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="243" y="980" width="1" height="15" fill="rgb(253,27,40)"/><text x="246.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="243" y="996" width="1" height="15" fill="rgb(234,100,35)"/><text x="246.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="243" y="1012" width="1" height="15" fill="rgb(224,115,21)"/><text x="246.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="243" y="1028" width="1" height="15" fill="rgb(217,73,32)"/><text x="246.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="243" y="1044" width="1" height="15" fill="rgb(239,64,29)"/><text x="246.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="243" y="1060" width="1" height="15" fill="rgb(237,175,45)"/><text x="246.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="243" y="1076" width="1" height="15" fill="rgb(205,15,16)"/><text x="246.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:502) (1 samples, 0.12%)</title><rect x="243" y="1092" width="1" height="15" fill="rgb(233,138,49)"/><text x="246.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="244" y="180" width="2" height="15" fill="rgb(206,201,29)"/><text x="247.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="196" width="2" height="15" fill="rgb(252,47,43)"/><text x="247.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="212" width="2" height="15" fill="rgb(211,28,15)"/><text x="247.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="228" width="2" height="15" fill="rgb(213,125,35)"/><text x="247.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="244" width="2" height="15" fill="rgb(248,113,53)"/><text x="247.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="260" width="2" height="15" fill="rgb(243,83,52)"/><text x="247.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="276" width="2" height="15" fill="rgb(220,205,30)"/><text x="247.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.12%)</title><rect x="244" y="292" width="2" height="15" fill="rgb(227,94,37)"/><text x="247.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="308" width="2" height="15" fill="rgb(205,32,9)"/><text x="247.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="324" width="2" height="15" fill="rgb(232,152,6)"/><text x="247.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="340" width="2" height="15" fill="rgb(227,4,11)"/><text x="247.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="356" width="2" height="15" fill="rgb(250,88,24)"/><text x="247.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="372" width="2" height="15" fill="rgb(249,129,8)"/><text x="247.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.12%)</title><rect x="244" y="388" width="2" height="15" fill="rgb(247,113,0)"/><text x="247.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="404" width="2" height="15" fill="rgb(233,141,28)"/><text x="247.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="420" width="2" height="15" fill="rgb(216,86,17)"/><text x="247.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="436" width="2" height="15" fill="rgb(230,42,20)"/><text x="247.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="452" width="2" height="15" fill="rgb(212,40,15)"/><text x="247.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="468" width="2" height="15" fill="rgb(222,202,7)"/><text x="247.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.12%)</title><rect x="244" y="484" width="2" height="15" fill="rgb(205,98,24)"/><text x="247.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="500" width="2" height="15" fill="rgb(222,30,36)"/><text x="247.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="516" width="2" height="15" fill="rgb(246,219,25)"/><text x="247.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="532" width="2" height="15" fill="rgb(215,10,50)"/><text x="247.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="548" width="2" height="15" fill="rgb(222,220,9)"/><text x="247.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="564" width="2" height="15" fill="rgb(254,80,7)"/><text x="247.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.12%)</title><rect x="244" y="580" width="2" height="15" fill="rgb(229,55,5)"/><text x="247.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="596" width="2" height="15" fill="rgb(226,80,17)"/><text x="247.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="612" width="2" height="15" fill="rgb(207,160,11)"/><text x="247.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="628" width="2" height="15" fill="rgb(249,25,32)"/><text x="247.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="644" width="2" height="15" fill="rgb(217,70,42)"/><text x="247.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="660" width="2" height="15" fill="rgb(225,140,10)"/><text x="247.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.12%)</title><rect x="244" y="676" width="2" height="15" fill="rgb(224,19,12)"/><text x="247.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="692" width="2" height="15" fill="rgb(239,62,40)"/><text x="247.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="708" width="2" height="15" fill="rgb(235,41,29)"/><text x="247.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="724" width="2" height="15" fill="rgb(238,213,9)"/><text x="247.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="740" width="2" height="15" fill="rgb(244,102,8)"/><text x="247.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="756" width="2" height="15" fill="rgb(221,211,12)"/><text x="247.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.12%)</title><rect x="244" y="772" width="2" height="15" fill="rgb(253,214,26)"/><text x="247.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="244" y="788" width="2" height="15" fill="rgb(221,12,11)"/><text x="247.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="804" width="2" height="15" fill="rgb(245,71,0)"/><text x="247.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="820" width="2" height="15" fill="rgb(231,43,40)"/><text x="247.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="836" width="2" height="15" fill="rgb(212,222,35)"/><text x="247.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="852" width="2" height="15" fill="rgb(252,205,39)"/><text x="247.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="868" width="2" height="15" fill="rgb(214,122,27)"/><text x="247.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="884" width="2" height="15" fill="rgb(251,117,10)"/><text x="247.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.12%)</title><rect x="244" y="900" width="2" height="15" fill="rgb(209,199,25)"/><text x="247.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="244" y="916" width="2" height="15" fill="rgb(251,203,38)"/><text x="247.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="932" width="2" height="15" fill="rgb(242,125,13)"/><text x="247.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="244" y="948" width="2" height="15" fill="rgb(254,181,24)"/><text x="247.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="244" y="964" width="2" height="15" fill="rgb(248,125,40)"/><text x="247.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="244" y="980" width="2" height="15" fill="rgb(210,219,23)"/><text x="247.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="244" y="996" width="2" height="15" fill="rgb(230,166,13)"/><text x="247.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="244" y="1012" width="2" height="15" fill="rgb(210,46,16)"/><text x="247.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6787) (1 samples, 0.12%)</title><rect x="244" y="1028" width="2" height="15" fill="rgb(244,138,47)"/><text x="247.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.12%)</title><rect x="244" y="1044" width="2" height="15" fill="rgb(205,135,53)"/><text x="247.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.12%)</title><rect x="244" y="1060" width="2" height="15" fill="rgb(227,99,15)"/><text x="247.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.12%)</title><rect x="244" y="1076" width="2" height="15" fill="rgb(247,54,6)"/><text x="247.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.12%)</title><rect x="244" y="1092" width="2" height="15" fill="rgb(223,7,12)"/><text x="247.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (2 samples, 0.24%)</title><rect x="244" y="148" width="3" height="15" fill="rgb(240,229,32)"/><text x="247.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="244" y="164" width="3" height="15" fill="rgb(218,182,5)"/><text x="247.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="246" y="180" width="1" height="15" fill="rgb(242,204,40)"/><text x="249.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="246" y="196" width="1" height="15" fill="rgb(206,62,54)"/><text x="249.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="246" y="212" width="1" height="15" fill="rgb(233,81,39)"/><text x="249.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="246" y="228" width="1" height="15" fill="rgb(252,67,1)"/><text x="249.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:32) (1 samples, 0.12%)</title><rect x="246" y="244" width="1" height="15" fill="rgb(249,121,27)"/><text x="249.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="246" y="260" width="1" height="15" fill="rgb(252,31,13)"/><text x="249.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="246" y="276" width="1" height="15" fill="rgb(217,153,23)"/><text x="249.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="246" y="292" width="1" height="15" fill="rgb(212,212,38)"/><text x="249.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="246" y="308" width="1" height="15" fill="rgb(216,173,36)"/><text x="249.00" y="318.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="246" y="324" width="1" height="15" fill="rgb(244,143,39)"/><text x="249.00" y="334.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:527) (1 samples, 0.12%)</title><rect x="246" y="340" width="1" height="15" fill="rgb(211,62,36)"/><text x="249.00" y="350.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.12%)</title><rect x="247" y="772" width="2" height="15" fill="rgb(222,175,40)"/><text x="250.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="788" width="2" height="15" fill="rgb(239,21,49)"/><text x="250.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="247" y="804" width="2" height="15" fill="rgb(233,40,11)"/><text x="250.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="247" y="820" width="2" height="15" fill="rgb(253,98,29)"/><text x="250.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="247" y="836" width="2" height="15" fill="rgb(254,41,40)"/><text x="250.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="852" width="2" height="15" fill="rgb(212,76,49)"/><text x="250.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.12%)</title><rect x="247" y="868" width="2" height="15" fill="rgb(228,126,37)"/><text x="250.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="884" width="2" height="15" fill="rgb(246,36,49)"/><text x="250.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="247" y="900" width="2" height="15" fill="rgb(223,192,35)"/><text x="250.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="247" y="916" width="2" height="15" fill="rgb(223,174,44)"/><text x="250.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="247" y="932" width="2" height="15" fill="rgb(243,67,47)"/><text x="250.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="948" width="2" height="15" fill="rgb(238,88,16)"/><text x="250.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.12%)</title><rect x="247" y="964" width="2" height="15" fill="rgb(212,191,45)"/><text x="250.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="980" width="2" height="15" fill="rgb(205,188,36)"/><text x="250.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="247" y="996" width="2" height="15" fill="rgb(225,209,18)"/><text x="250.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="247" y="1012" width="2" height="15" fill="rgb(237,138,14)"/><text x="250.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="247" y="1028" width="2" height="15" fill="rgb(223,117,10)"/><text x="250.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="1044" width="2" height="15" fill="rgb(218,82,38)"/><text x="250.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.12%)</title><rect x="247" y="1060" width="2" height="15" fill="rgb(206,8,22)"/><text x="250.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="1076" width="2" height="15" fill="rgb(224,92,24)"/><text x="250.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="247" y="1092" width="2" height="15" fill="rgb(234,120,43)"/><text x="250.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="1108" width="2" height="15" fill="rgb(235,123,31)"/><text x="250.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="1124" width="2" height="15" fill="rgb(229,1,35)"/><text x="250.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="247" y="1140" width="2" height="15" fill="rgb(215,199,36)"/><text x="250.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="247" y="1156" width="2" height="15" fill="rgb(208,109,38)"/><text x="250.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="247" y="1172" width="2" height="15" fill="rgb(218,209,0)"/><text x="250.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="1188" width="2" height="15" fill="rgb(248,15,17)"/><text x="250.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.12%)</title><rect x="247" y="1204" width="2" height="15" fill="rgb(247,197,22)"/><text x="250.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="1220" width="2" height="15" fill="rgb(249,63,12)"/><text x="250.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="247" y="1236" width="2" height="15" fill="rgb(233,157,14)"/><text x="250.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="247" y="1252" width="2" height="15" fill="rgb(252,13,44)"/><text x="250.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="247" y="1268" width="2" height="15" fill="rgb(243,153,54)"/><text x="250.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="1284" width="2" height="15" fill="rgb(228,106,50)"/><text x="250.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.12%)</title><rect x="247" y="1300" width="2" height="15" fill="rgb(213,194,43)"/><text x="250.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="247" y="1316" width="2" height="15" fill="rgb(229,28,7)"/><text x="250.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="247" y="1332" width="2" height="15" fill="rgb(214,62,49)"/><text x="250.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="247" y="1348" width="2" height="15" fill="rgb(215,0,14)"/><text x="250.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="247" y="1364" width="2" height="15" fill="rgb(229,159,46)"/><text x="250.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="247" y="1380" width="2" height="15" fill="rgb(242,10,51)"/><text x="250.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:71) (1 samples, 0.12%)</title><rect x="247" y="1396" width="2" height="15" fill="rgb(213,47,46)"/><text x="250.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="247" y="1412" width="2" height="15" fill="rgb(217,202,26)"/><text x="250.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="247" y="1428" width="2" height="15" fill="rgb(245,33,30)"/><text x="250.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="247" y="1444" width="2" height="15" fill="rgb(241,105,11)"/><text x="250.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="247" y="1460" width="2" height="15" fill="rgb(210,19,2)"/><text x="250.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="247" y="1476" width="2" height="15" fill="rgb(212,188,11)"/><text x="250.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="247" y="1492" width="2" height="15" fill="rgb(249,109,8)"/><text x="250.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="247" y="1508" width="2" height="15" fill="rgb(220,95,38)"/><text x="250.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="247" y="1524" width="2" height="15" fill="rgb(247,213,11)"/><text x="250.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="247" y="1540" width="2" height="15" fill="rgb(231,227,16)"/><text x="250.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.12%)</title><rect x="247" y="1556" width="2" height="15" fill="rgb(221,172,33)"/><text x="250.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="247" y="1572" width="2" height="15" fill="rgb(238,216,14)"/><text x="250.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:550) (1 samples, 0.12%)</title><rect x="247" y="1588" width="2" height="15" fill="rgb(224,174,17)"/><text x="250.00" y="1598.50"></text></g><g><title>match (sre_parse.py:250) (1 samples, 0.12%)</title><rect x="247" y="1604" width="2" height="15" fill="rgb(208,88,45)"/><text x="250.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.24%)</title><rect x="247" y="484" width="3" height="15" fill="rgb(223,151,19)"/><text x="250.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="247" y="500" width="3" height="15" fill="rgb(214,117,18)"/><text x="250.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="247" y="516" width="3" height="15" fill="rgb(226,108,15)"/><text x="250.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="247" y="532" width="3" height="15" fill="rgb(224,70,19)"/><text x="250.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="247" y="548" width="3" height="15" fill="rgb(236,51,6)"/><text x="250.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="247" y="564" width="3" height="15" fill="rgb(209,111,18)"/><text x="250.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.24%)</title><rect x="247" y="580" width="3" height="15" fill="rgb(233,142,29)"/><text x="250.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="247" y="596" width="3" height="15" fill="rgb(249,92,30)"/><text x="250.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="247" y="612" width="3" height="15" fill="rgb(236,112,54)"/><text x="250.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="247" y="628" width="3" height="15" fill="rgb(207,33,18)"/><text x="250.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="247" y="644" width="3" height="15" fill="rgb(236,2,5)"/><text x="250.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="247" y="660" width="3" height="15" fill="rgb(227,20,35)"/><text x="250.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.24%)</title><rect x="247" y="676" width="3" height="15" fill="rgb(223,218,53)"/><text x="250.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="247" y="692" width="3" height="15" fill="rgb(217,165,20)"/><text x="250.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="247" y="708" width="3" height="15" fill="rgb(243,100,20)"/><text x="250.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="247" y="724" width="3" height="15" fill="rgb(240,121,10)"/><text x="250.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="247" y="740" width="3" height="15" fill="rgb(212,156,17)"/><text x="250.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="247" y="756" width="3" height="15" fill="rgb(214,118,14)"/><text x="250.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.12%)</title><rect x="249" y="772" width="1" height="15" fill="rgb(211,190,17)"/><text x="252.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="249" y="788" width="1" height="15" fill="rgb(243,71,28)"/><text x="252.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="249" y="804" width="1" height="15" fill="rgb(211,182,23)"/><text x="252.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="249" y="820" width="1" height="15" fill="rgb(206,87,10)"/><text x="252.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="249" y="836" width="1" height="15" fill="rgb(221,125,4)"/><text x="252.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="249" y="852" width="1" height="15" fill="rgb(248,209,6)"/><text x="252.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.12%)</title><rect x="249" y="868" width="1" height="15" fill="rgb(211,146,10)"/><text x="252.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="249" y="884" width="1" height="15" fill="rgb(227,116,17)"/><text x="252.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="249" y="900" width="1" height="15" fill="rgb(212,46,51)"/><text x="252.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="249" y="916" width="1" height="15" fill="rgb(212,60,15)"/><text x="252.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="249" y="932" width="1" height="15" fill="rgb(211,97,12)"/><text x="252.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="249" y="948" width="1" height="15" fill="rgb(205,42,0)"/><text x="252.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:45) (1 samples, 0.12%)</title><rect x="249" y="964" width="1" height="15" fill="rgb(206,66,54)"/><text x="252.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="249" y="980" width="1" height="15" fill="rgb(226,162,27)"/><text x="252.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="249" y="996" width="1" height="15" fill="rgb(240,228,39)"/><text x="252.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="249" y="1012" width="1" height="15" fill="rgb(245,43,31)"/><text x="252.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="249" y="1028" width="1" height="15" fill="rgb(247,46,31)"/><text x="252.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="249" y="1044" width="1" height="15" fill="rgb(215,150,41)"/><text x="252.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/escprober.py:31) (1 samples, 0.12%)</title><rect x="249" y="1060" width="1" height="15" fill="rgb(236,187,46)"/><text x="252.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="249" y="1076" width="1" height="15" fill="rgb(213,221,43)"/><text x="252.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="249" y="1092" width="1" height="15" fill="rgb(240,203,21)"/><text x="252.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="249" y="1108" width="1" height="15" fill="rgb(227,179,31)"/><text x="252.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="249" y="1124" width="1" height="15" fill="rgb(229,113,37)"/><text x="252.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="249" y="1140" width="1" height="15" fill="rgb(234,28,36)"/><text x="252.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="249" y="1156" width="1" height="15" fill="rgb(227,120,9)"/><text x="252.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.36%)</title><rect x="247" y="244" width="4" height="15" fill="rgb(234,80,33)"/><text x="250.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="247" y="260" width="4" height="15" fill="rgb(222,45,5)"/><text x="250.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="247" y="276" width="4" height="15" fill="rgb(250,162,16)"/><text x="250.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="247" y="292" width="4" height="15" fill="rgb(231,129,32)"/><text x="250.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="247" y="308" width="4" height="15" fill="rgb(226,214,40)"/><text x="250.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="247" y="324" width="4" height="15" fill="rgb(208,111,53)"/><text x="250.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.36%)</title><rect x="247" y="340" width="4" height="15" fill="rgb(217,17,25)"/><text x="250.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="247" y="356" width="4" height="15" fill="rgb(234,148,33)"/><text x="250.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.36%)</title><rect x="247" y="372" width="4" height="15" fill="rgb(223,69,43)"/><text x="250.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="247" y="388" width="4" height="15" fill="rgb(224,217,53)"/><text x="250.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.36%)</title><rect x="247" y="404" width="4" height="15" fill="rgb(233,100,15)"/><text x="250.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.36%)</title><rect x="247" y="420" width="4" height="15" fill="rgb(237,17,9)"/><text x="250.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.36%)</title><rect x="247" y="436" width="4" height="15" fill="rgb(218,111,8)"/><text x="250.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.36%)</title><rect x="247" y="452" width="4" height="15" fill="rgb(205,21,33)"/><text x="250.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.36%)</title><rect x="247" y="468" width="4" height="15" fill="rgb(207,90,3)"/><text x="250.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.12%)</title><rect x="250" y="484" width="1" height="15" fill="rgb(217,29,11)"/><text x="253.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="500" width="1" height="15" fill="rgb(249,138,10)"/><text x="253.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="516" width="1" height="15" fill="rgb(216,210,18)"/><text x="253.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="532" width="1" height="15" fill="rgb(214,122,43)"/><text x="253.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="548" width="1" height="15" fill="rgb(245,173,14)"/><text x="253.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="564" width="1" height="15" fill="rgb(213,126,13)"/><text x="253.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.12%)</title><rect x="250" y="580" width="1" height="15" fill="rgb(227,174,33)"/><text x="253.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="596" width="1" height="15" fill="rgb(228,106,11)"/><text x="253.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="250" y="612" width="1" height="15" fill="rgb(232,142,12)"/><text x="253.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="628" width="1" height="15" fill="rgb(232,87,28)"/><text x="253.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="644" width="1" height="15" fill="rgb(208,115,45)"/><text x="253.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="660" width="1" height="15" fill="rgb(245,152,39)"/><text x="253.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="676" width="1" height="15" fill="rgb(233,139,33)"/><text x="253.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="692" width="1" height="15" fill="rgb(252,221,8)"/><text x="253.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="708" width="1" height="15" fill="rgb(249,221,12)"/><text x="253.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.12%)</title><rect x="250" y="724" width="1" height="15" fill="rgb(243,77,52)"/><text x="253.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="740" width="1" height="15" fill="rgb(241,57,42)"/><text x="253.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="756" width="1" height="15" fill="rgb(235,14,25)"/><text x="253.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="772" width="1" height="15" fill="rgb(222,46,16)"/><text x="253.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="788" width="1" height="15" fill="rgb(226,111,18)"/><text x="253.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="804" width="1" height="15" fill="rgb(235,204,15)"/><text x="253.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.12%)</title><rect x="250" y="820" width="1" height="15" fill="rgb(241,123,46)"/><text x="253.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="836" width="1" height="15" fill="rgb(248,192,8)"/><text x="253.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="852" width="1" height="15" fill="rgb(233,85,53)"/><text x="253.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="868" width="1" height="15" fill="rgb(249,98,29)"/><text x="253.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="884" width="1" height="15" fill="rgb(221,210,31)"/><text x="253.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="900" width="1" height="15" fill="rgb(249,190,34)"/><text x="253.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.12%)</title><rect x="250" y="916" width="1" height="15" fill="rgb(215,124,38)"/><text x="253.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="932" width="1" height="15" fill="rgb(212,61,51)"/><text x="253.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="250" y="948" width="1" height="15" fill="rgb(207,222,48)"/><text x="253.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="964" width="1" height="15" fill="rgb(232,2,12)"/><text x="253.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="980" width="1" height="15" fill="rgb(242,187,9)"/><text x="253.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="996" width="1" height="15" fill="rgb(219,105,11)"/><text x="253.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="1012" width="1" height="15" fill="rgb(221,159,38)"/><text x="253.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="1028" width="1" height="15" fill="rgb(252,190,33)"/><text x="253.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="1044" width="1" height="15" fill="rgb(233,45,53)"/><text x="253.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.12%)</title><rect x="250" y="1060" width="1" height="15" fill="rgb(211,95,0)"/><text x="253.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="1076" width="1" height="15" fill="rgb(243,194,40)"/><text x="253.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="1092" width="1" height="15" fill="rgb(251,153,12)"/><text x="253.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="1108" width="1" height="15" fill="rgb(251,40,3)"/><text x="253.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="1124" width="1" height="15" fill="rgb(216,41,46)"/><text x="253.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="1140" width="1" height="15" fill="rgb(239,53,19)"/><text x="253.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (1 samples, 0.12%)</title><rect x="250" y="1156" width="1" height="15" fill="rgb(234,1,24)"/><text x="253.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="250" y="1172" width="1" height="15" fill="rgb(211,71,15)"/><text x="253.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="1188" width="1" height="15" fill="rgb(216,195,3)"/><text x="253.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="1204" width="1" height="15" fill="rgb(230,130,37)"/><text x="253.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="1220" width="1" height="15" fill="rgb(217,178,26)"/><text x="253.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="1236" width="1" height="15" fill="rgb(207,193,23)"/><text x="253.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="1252" width="1" height="15" fill="rgb(242,36,19)"/><text x="253.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="1268" width="1" height="15" fill="rgb(245,62,50)"/><text x="253.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:13) (1 samples, 0.12%)</title><rect x="250" y="1284" width="1" height="15" fill="rgb(209,101,51)"/><text x="253.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="1300" width="1" height="15" fill="rgb(239,111,47)"/><text x="253.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="250" y="1316" width="1" height="15" fill="rgb(229,187,31)"/><text x="253.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="1332" width="1" height="15" fill="rgb(247,45,10)"/><text x="253.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="1348" width="1" height="15" fill="rgb(211,62,16)"/><text x="253.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="250" y="1364" width="1" height="15" fill="rgb(206,188,37)"/><text x="253.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="250" y="1380" width="1" height="15" fill="rgb(245,65,22)"/><text x="253.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="250" y="1396" width="1" height="15" fill="rgb(234,119,0)"/><text x="253.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="250" y="1412" width="1" height="15" fill="rgb(211,102,41)"/><text x="253.00" y="1422.50"></text></g><g><title>&lt;module&gt; (xml/sax/__init__.py:22) (1 samples, 0.12%)</title><rect x="250" y="1428" width="1" height="15" fill="rgb(217,91,17)"/><text x="253.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="250" y="1444" width="1" height="15" fill="rgb(249,48,26)"/><text x="253.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="250" y="1460" width="1" height="15" fill="rgb(220,215,19)"/><text x="253.00" y="1470.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="250" y="1476" width="1" height="15" fill="rgb(251,169,33)"/><text x="253.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="250" y="1492" width="1" height="15" fill="rgb(224,31,43)"/><text x="253.00" y="1502.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="250" y="1508" width="1" height="15" fill="rgb(222,111,15)"/><text x="253.00" y="1518.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.12%)</title><rect x="250" y="1524" width="1" height="15" fill="rgb(207,90,30)"/><text x="253.00" y="1534.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.12%)</title><rect x="250" y="1540" width="1" height="15" fill="rgb(242,201,10)"/><text x="253.00" y="1550.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="250" y="1556" width="1" height="15" fill="rgb(214,131,43)"/><text x="253.00" y="1566.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.12%)</title><rect x="250" y="1572" width="1" height="15" fill="rgb(214,58,17)"/><text x="253.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:22) (1 samples, 0.12%)</title><rect x="251" y="436" width="2" height="15" fill="rgb(205,83,1)"/><text x="254.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="251" y="452" width="2" height="15" fill="rgb(222,74,26)"/><text x="254.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="251" y="468" width="2" height="15" fill="rgb(205,94,43)"/><text x="254.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="251" y="484" width="2" height="15" fill="rgb(205,67,38)"/><text x="254.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="251" y="500" width="2" height="15" fill="rgb(208,82,53)"/><text x="254.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="251" y="516" width="2" height="15" fill="rgb(227,17,3)"/><text x="254.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py:104) (1 samples, 0.12%)</title><rect x="251" y="532" width="2" height="15" fill="rgb(238,69,20)"/><text x="254.00" y="542.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="251" y="548" width="2" height="15" fill="rgb(238,140,53)"/><text x="254.00" y="558.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="251" y="564" width="2" height="15" fill="rgb(214,160,46)"/><text x="254.00" y="574.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="251" y="580" width="2" height="15" fill="rgb(218,28,17)"/><text x="254.00" y="590.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="251" y="596" width="2" height="15" fill="rgb(229,50,6)"/><text x="254.00" y="606.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="251" y="612" width="2" height="15" fill="rgb(230,134,11)"/><text x="254.00" y="622.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.12%)</title><rect x="251" y="628" width="2" height="15" fill="rgb(214,178,17)"/><text x="254.00" y="638.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.12%)</title><rect x="251" y="644" width="2" height="15" fill="rgb(242,143,40)"/><text x="254.00" y="654.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.12%)</title><rect x="251" y="660" width="2" height="15" fill="rgb(230,158,38)"/><text x="254.00" y="670.50"></text></g><g><title>getwidth (sre_parse.py:203) (1 samples, 0.12%)</title><rect x="251" y="676" width="2" height="15" fill="rgb(254,62,11)"/><text x="254.00" y="686.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (2 samples, 0.24%)</title><rect x="251" y="340" width="3" height="15" fill="rgb(212,42,51)"/><text x="254.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="251" y="356" width="3" height="15" fill="rgb(224,195,10)"/><text x="254.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="251" y="372" width="3" height="15" fill="rgb(209,13,52)"/><text x="254.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="251" y="388" width="3" height="15" fill="rgb(231,3,30)"/><text x="254.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="251" y="404" width="3" height="15" fill="rgb(232,37,52)"/><text x="254.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="251" y="420" width="3" height="15" fill="rgb(206,37,48)"/><text x="254.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.12%)</title><rect x="253" y="436" width="1" height="15" fill="rgb(221,96,3)"/><text x="256.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="253" y="452" width="1" height="15" fill="rgb(239,199,42)"/><text x="256.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="253" y="468" width="1" height="15" fill="rgb(225,23,50)"/><text x="256.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="253" y="484" width="1" height="15" fill="rgb(206,178,5)"/><text x="256.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="253" y="500" width="1" height="15" fill="rgb(253,211,2)"/><text x="256.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="253" y="516" width="1" height="15" fill="rgb(214,197,20)"/><text x="256.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (1 samples, 0.12%)</title><rect x="253" y="532" width="1" height="15" fill="rgb(245,206,13)"/><text x="256.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="253" y="548" width="1" height="15" fill="rgb(235,13,31)"/><text x="256.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="253" y="564" width="1" height="15" fill="rgb(222,60,0)"/><text x="256.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="253" y="580" width="1" height="15" fill="rgb(207,139,47)"/><text x="256.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="253" y="596" width="1" height="15" fill="rgb(225,161,13)"/><text x="256.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="253" y="612" width="1" height="15" fill="rgb(240,72,41)"/><text x="256.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="253" y="628" width="1" height="15" fill="rgb(213,58,44)"/><text x="256.00" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.12%)</title><rect x="254" y="724" width="2" height="15" fill="rgb(251,162,12)"/><text x="257.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="254" y="740" width="2" height="15" fill="rgb(241,194,34)"/><text x="257.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="254" y="756" width="2" height="15" fill="rgb(241,192,49)"/><text x="257.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="254" y="772" width="2" height="15" fill="rgb(247,8,17)"/><text x="257.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="254" y="788" width="2" height="15" fill="rgb(217,107,28)"/><text x="257.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="254" y="804" width="2" height="15" fill="rgb(220,167,54)"/><text x="257.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.12%)</title><rect x="254" y="820" width="2" height="15" fill="rgb(213,209,11)"/><text x="257.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="254" y="836" width="2" height="15" fill="rgb(218,92,1)"/><text x="257.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="254" y="852" width="2" height="15" fill="rgb(207,198,5)"/><text x="257.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="254" y="868" width="2" height="15" fill="rgb(242,189,42)"/><text x="257.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="254" y="884" width="2" height="15" fill="rgb(232,28,54)"/><text x="257.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="254" y="900" width="2" height="15" fill="rgb(228,106,30)"/><text x="257.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.12%)</title><rect x="254" y="916" width="2" height="15" fill="rgb(211,90,17)"/><text x="257.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="254" y="932" width="2" height="15" fill="rgb(211,3,47)"/><text x="257.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="254" y="948" width="2" height="15" fill="rgb(252,26,6)"/><text x="257.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="254" y="964" width="2" height="15" fill="rgb(246,134,6)"/><text x="257.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="254" y="980" width="2" height="15" fill="rgb(206,172,8)"/><text x="257.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="254" y="996" width="2" height="15" fill="rgb(213,38,42)"/><text x="257.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.12%)</title><rect x="254" y="1012" width="2" height="15" fill="rgb(235,71,13)"/><text x="257.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.12%)</title><rect x="254" y="1028" width="2" height="15" fill="rgb(245,36,44)"/><text x="257.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:745) (1 samples, 0.12%)</title><rect x="254" y="1044" width="2" height="15" fill="rgb(222,52,31)"/><text x="257.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.12%)</title><rect x="254" y="1060" width="2" height="15" fill="rgb(228,101,40)"/><text x="257.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.12%)</title><rect x="254" y="1076" width="2" height="15" fill="rgb(236,51,9)"/><text x="257.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.12%)</title><rect x="254" y="1092" width="2" height="15" fill="rgb(233,196,34)"/><text x="257.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.12%)</title><rect x="254" y="1108" width="2" height="15" fill="rgb(242,82,14)"/><text x="257.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="254" y="1124" width="2" height="15" fill="rgb(244,163,18)"/><text x="257.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.24%)</title><rect x="254" y="436" width="3" height="15" fill="rgb(244,100,16)"/><text x="257.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="254" y="452" width="3" height="15" fill="rgb(219,154,29)"/><text x="257.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="254" y="468" width="3" height="15" fill="rgb(206,91,39)"/><text x="257.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="254" y="484" width="3" height="15" fill="rgb(207,205,20)"/><text x="257.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="254" y="500" width="3" height="15" fill="rgb(206,109,34)"/><text x="257.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="254" y="516" width="3" height="15" fill="rgb(240,148,35)"/><text x="257.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.24%)</title><rect x="254" y="532" width="3" height="15" fill="rgb(208,47,34)"/><text x="257.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="254" y="548" width="3" height="15" fill="rgb(217,77,18)"/><text x="257.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="254" y="564" width="3" height="15" fill="rgb(209,138,11)"/><text x="257.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="254" y="580" width="3" height="15" fill="rgb(230,83,9)"/><text x="257.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="254" y="596" width="3" height="15" fill="rgb(232,49,50)"/><text x="257.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="254" y="612" width="3" height="15" fill="rgb(237,140,12)"/><text x="257.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.24%)</title><rect x="254" y="628" width="3" height="15" fill="rgb(250,87,36)"/><text x="257.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="254" y="644" width="3" height="15" fill="rgb(250,187,31)"/><text x="257.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="254" y="660" width="3" height="15" fill="rgb(211,191,8)"/><text x="257.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="254" y="676" width="3" height="15" fill="rgb(230,110,54)"/><text x="257.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="254" y="692" width="3" height="15" fill="rgb(235,112,15)"/><text x="257.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="254" y="708" width="3" height="15" fill="rgb(245,22,21)"/><text x="257.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.12%)</title><rect x="256" y="724" width="1" height="15" fill="rgb(212,162,33)"/><text x="259.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="740" width="1" height="15" fill="rgb(219,189,40)"/><text x="259.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="256" y="756" width="1" height="15" fill="rgb(227,67,2)"/><text x="259.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="772" width="1" height="15" fill="rgb(221,120,8)"/><text x="259.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="788" width="1" height="15" fill="rgb(232,17,17)"/><text x="259.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="256" y="804" width="1" height="15" fill="rgb(215,97,49)"/><text x="259.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="256" y="820" width="1" height="15" fill="rgb(218,27,14)"/><text x="259.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="256" y="836" width="1" height="15" fill="rgb(223,42,8)"/><text x="259.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="852" width="1" height="15" fill="rgb(252,89,41)"/><text x="259.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (1 samples, 0.12%)</title><rect x="256" y="868" width="1" height="15" fill="rgb(243,49,16)"/><text x="259.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="884" width="1" height="15" fill="rgb(248,213,30)"/><text x="259.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="256" y="900" width="1" height="15" fill="rgb(216,120,25)"/><text x="259.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="256" y="916" width="1" height="15" fill="rgb(231,33,34)"/><text x="259.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="256" y="932" width="1" height="15" fill="rgb(212,136,33)"/><text x="259.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="948" width="1" height="15" fill="rgb(220,52,2)"/><text x="259.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (1 samples, 0.12%)</title><rect x="256" y="964" width="1" height="15" fill="rgb(242,57,43)"/><text x="259.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="980" width="1" height="15" fill="rgb(235,192,1)"/><text x="259.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="256" y="996" width="1" height="15" fill="rgb(227,179,49)"/><text x="259.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="256" y="1012" width="1" height="15" fill="rgb(248,56,11)"/><text x="259.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="256" y="1028" width="1" height="15" fill="rgb(242,139,4)"/><text x="259.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="1044" width="1" height="15" fill="rgb(216,187,31)"/><text x="259.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py:36) (1 samples, 0.12%)</title><rect x="256" y="1060" width="1" height="15" fill="rgb(231,177,7)"/><text x="259.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="1076" width="1" height="15" fill="rgb(231,187,0)"/><text x="259.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="256" y="1092" width="1" height="15" fill="rgb(209,34,36)"/><text x="259.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="256" y="1108" width="1" height="15" fill="rgb(254,6,51)"/><text x="259.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="256" y="1124" width="1" height="15" fill="rgb(243,73,32)"/><text x="259.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="1140" width="1" height="15" fill="rgb(206,110,15)"/><text x="259.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/nanops.py:38) (1 samples, 0.12%)</title><rect x="256" y="1156" width="1" height="15" fill="rgb(247,100,15)"/><text x="259.00" y="1166.50"></text></g><g><title>import_optional_dependency (pandas/compat/_optional.py:90) (1 samples, 0.12%)</title><rect x="256" y="1172" width="1" height="15" fill="rgb(240,223,39)"/><text x="259.00" y="1182.50"></text></g><g><title>import_module (importlib/__init__.py:127) (1 samples, 0.12%)</title><rect x="256" y="1188" width="1" height="15" fill="rgb(230,56,44)"/><text x="259.00" y="1198.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.12%)</title><rect x="256" y="1204" width="1" height="15" fill="rgb(247,34,40)"/><text x="259.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="1220" width="1" height="15" fill="rgb(226,120,7)"/><text x="259.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="256" y="1236" width="1" height="15" fill="rgb(244,32,14)"/><text x="259.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="256" y="1252" width="1" height="15" fill="rgb(245,105,51)"/><text x="259.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="256" y="1268" width="1" height="15" fill="rgb(252,51,24)"/><text x="259.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="1284" width="1" height="15" fill="rgb(241,123,41)"/><text x="259.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bottleneck/__init__.py:32) (1 samples, 0.12%)</title><rect x="256" y="1300" width="1" height="15" fill="rgb(247,73,54)"/><text x="259.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="256" y="1316" width="1" height="15" fill="rgb(210,30,11)"/><text x="259.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="1332" width="1" height="15" fill="rgb(240,181,11)"/><text x="259.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="1348" width="1" height="15" fill="rgb(250,193,18)"/><text x="259.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="256" y="1364" width="1" height="15" fill="rgb(208,117,9)"/><text x="259.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="256" y="1380" width="1" height="15" fill="rgb(216,51,39)"/><text x="259.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="256" y="1396" width="1" height="15" fill="rgb(240,21,36)"/><text x="259.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="256" y="1412" width="1" height="15" fill="rgb(239,153,14)"/><text x="259.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bottleneck/slow/__init__.py:3) (1 samples, 0.12%)</title><rect x="256" y="1428" width="1" height="15" fill="rgb(220,145,47)"/><text x="259.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="256" y="1444" width="1" height="15" fill="rgb(219,44,51)"/><text x="259.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="256" y="1460" width="1" height="15" fill="rgb(206,178,29)"/><text x="259.00" y="1470.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="256" y="1476" width="1" height="15" fill="rgb(216,42,12)"/><text x="259.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="256" y="1492" width="1" height="15" fill="rgb(237,143,40)"/><text x="259.00" y="1502.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="256" y="1508" width="1" height="15" fill="rgb(210,5,18)"/><text x="259.00" y="1518.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1368) (1 samples, 0.12%)</title><rect x="256" y="1524" width="1" height="15" fill="rgb(219,39,23)"/><text x="259.00" y="1534.50"></text></g><g><title>_fill_cache (&lt;frozen importlib._bootstrap_external&gt;:1408) (1 samples, 0.12%)</title><rect x="256" y="1540" width="1" height="15" fill="rgb(223,16,48)"/><text x="259.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.12%)</title><rect x="257" y="1204" width="2" height="15" fill="rgb(224,39,13)"/><text x="260.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="257" y="1220" width="2" height="15" fill="rgb(252,219,46)"/><text x="260.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="257" y="1236" width="2" height="15" fill="rgb(227,79,46)"/><text x="260.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="257" y="1252" width="2" height="15" fill="rgb(218,90,27)"/><text x="260.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="257" y="1268" width="2" height="15" fill="rgb(252,115,17)"/><text x="260.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="257" y="1284" width="2" height="15" fill="rgb(230,5,43)"/><text x="260.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:13) (1 samples, 0.12%)</title><rect x="257" y="1300" width="2" height="15" fill="rgb(230,226,9)"/><text x="260.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="257" y="1316" width="2" height="15" fill="rgb(243,153,34)"/><text x="260.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="257" y="1332" width="2" height="15" fill="rgb(223,28,14)"/><text x="260.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="257" y="1348" width="2" height="15" fill="rgb(225,223,34)"/><text x="260.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="257" y="1364" width="2" height="15" fill="rgb(216,205,44)"/><text x="260.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="257" y="1380" width="2" height="15" fill="rgb(241,142,14)"/><text x="260.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_regression.py:25) (1 samples, 0.12%)</title><rect x="257" y="1396" width="2" height="15" fill="rgb(237,224,34)"/><text x="260.00" y="1406.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.12%)</title><rect x="257" y="1412" width="2" height="15" fill="rgb(211,120,28)"/><text x="260.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.24%)</title><rect x="257" y="1108" width="3" height="15" fill="rgb(252,102,26)"/><text x="260.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="257" y="1124" width="3" height="15" fill="rgb(228,224,0)"/><text x="260.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="257" y="1140" width="3" height="15" fill="rgb(229,158,13)"/><text x="260.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="257" y="1156" width="3" height="15" fill="rgb(241,42,48)"/><text x="260.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="257" y="1172" width="3" height="15" fill="rgb(229,170,45)"/><text x="260.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="257" y="1188" width="3" height="15" fill="rgb(230,0,16)"/><text x="260.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.12%)</title><rect x="259" y="1204" width="1" height="15" fill="rgb(229,191,17)"/><text x="262.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="1220" width="1" height="15" fill="rgb(219,59,7)"/><text x="262.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="1236" width="1" height="15" fill="rgb(212,62,40)"/><text x="262.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="1252" width="1" height="15" fill="rgb(230,194,46)"/><text x="262.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="1268" width="1" height="15" fill="rgb(236,148,26)"/><text x="262.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="1284" width="1" height="15" fill="rgb(245,129,25)"/><text x="262.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:42) (1 samples, 0.12%)</title><rect x="259" y="1300" width="1" height="15" fill="rgb(226,118,40)"/><text x="262.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="1316" width="1" height="15" fill="rgb(220,58,44)"/><text x="262.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="1332" width="1" height="15" fill="rgb(241,164,40)"/><text x="262.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="1348" width="1" height="15" fill="rgb(252,29,43)"/><text x="262.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="1364" width="1" height="15" fill="rgb(230,1,34)"/><text x="262.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="1380" width="1" height="15" fill="rgb(218,191,26)"/><text x="262.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/discriminant_analysis.py:20) (1 samples, 0.12%)</title><rect x="259" y="1396" width="1" height="15" fill="rgb(206,202,48)"/><text x="262.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="1412" width="1" height="15" fill="rgb(228,160,20)"/><text x="262.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="259" y="1428" width="1" height="15" fill="rgb(233,18,7)"/><text x="262.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="259" y="1444" width="1" height="15" fill="rgb(250,190,39)"/><text x="262.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="259" y="1460" width="1" height="15" fill="rgb(216,193,21)"/><text x="262.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="259" y="1476" width="1" height="15" fill="rgb(251,177,28)"/><text x="262.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/covariance/__init__.py:17) (1 samples, 0.12%)</title><rect x="259" y="1492" width="1" height="15" fill="rgb(235,154,30)"/><text x="262.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="259" y="1508" width="1" height="15" fill="rgb(214,82,3)"/><text x="262.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.12%)</title><rect x="259" y="1524" width="1" height="15" fill="rgb(206,97,3)"/><text x="262.00" y="1534.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.12%)</title><rect x="259" y="1540" width="1" height="15" fill="rgb(213,197,45)"/><text x="262.00" y="1550.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.12%)</title><rect x="259" y="1556" width="1" height="15" fill="rgb(249,20,22)"/><text x="262.00" y="1566.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.12%)</title><rect x="259" y="1572" width="1" height="15" fill="rgb(212,145,12)"/><text x="262.00" y="1582.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.12%)</title><rect x="259" y="1588" width="1" height="15" fill="rgb(214,63,36)"/><text x="262.00" y="1598.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="259" y="1604" width="1" height="15" fill="rgb(233,91,10)"/><text x="262.00" y="1614.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.12%)</title><rect x="260" y="1604" width="1" height="15" fill="rgb(236,225,32)"/><text x="263.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.12%)</title><rect x="260" y="1620" width="1" height="15" fill="rgb(223,119,44)"/><text x="263.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.12%)</title><rect x="260" y="1636" width="1" height="15" fill="rgb(211,142,51)"/><text x="263.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.12%)</title><rect x="260" y="1652" width="1" height="15" fill="rgb(244,222,45)"/><text x="263.00" y="1662.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:4) (18 samples, 2.16%)</title><rect x="237" y="52" width="26" height="15" fill="rgb(219,158,36)"/><text x="240.00" y="62.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 2.16%)</title><rect x="237" y="68" width="26" height="15" fill="rgb(236,160,23)"/><text x="240.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 2.16%)</title><rect x="237" y="84" width="26" height="15" fill="rgb(234,9,49)"/><text x="240.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 2.16%)</title><rect x="237" y="100" width="26" height="15" fill="rgb(216,134,9)"/><text x="240.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 2.16%)</title><rect x="237" y="116" width="26" height="15" fill="rgb(254,122,9)"/><text x="240.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 2.16%)</title><rect x="237" y="132" width="26" height="15" fill="rgb(231,4,48)"/><text x="240.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (11 samples, 1.32%)</title><rect x="247" y="148" width="16" height="15" fill="rgb(241,147,6)"/><text x="250.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.32%)</title><rect x="247" y="164" width="16" height="15" fill="rgb(217,146,33)"/><text x="250.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.32%)</title><rect x="247" y="180" width="16" height="15" fill="rgb(219,147,7)"/><text x="250.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.32%)</title><rect x="247" y="196" width="16" height="15" fill="rgb(237,10,51)"/><text x="250.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 1.32%)</title><rect x="247" y="212" width="16" height="15" fill="rgb(232,178,38)"/><text x="250.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.32%)</title><rect x="247" y="228" width="16" height="15" fill="rgb(238,20,36)"/><text x="250.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 0.96%)</title><rect x="251" y="244" width="12" height="15" fill="rgb(237,140,36)"/><text x="254.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.96%)</title><rect x="251" y="260" width="12" height="15" fill="rgb(236,17,36)"/><text x="254.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.96%)</title><rect x="251" y="276" width="12" height="15" fill="rgb(226,14,33)"/><text x="254.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.96%)</title><rect x="251" y="292" width="12" height="15" fill="rgb(245,152,3)"/><text x="254.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.96%)</title><rect x="251" y="308" width="12" height="15" fill="rgb(234,188,53)"/><text x="254.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.96%)</title><rect x="251" y="324" width="12" height="15" fill="rgb(223,190,25)"/><text x="254.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 0.72%)</title><rect x="254" y="340" width="9" height="15" fill="rgb(211,177,35)"/><text x="257.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.72%)</title><rect x="254" y="356" width="9" height="15" fill="rgb(207,174,7)"/><text x="257.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.72%)</title><rect x="254" y="372" width="9" height="15" fill="rgb(210,195,12)"/><text x="257.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.72%)</title><rect x="254" y="388" width="9" height="15" fill="rgb(216,26,31)"/><text x="257.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.72%)</title><rect x="254" y="404" width="9" height="15" fill="rgb(232,217,2)"/><text x="257.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.72%)</title><rect x="254" y="420" width="9" height="15" fill="rgb(224,89,25)"/><text x="257.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.48%)</title><rect x="257" y="436" width="6" height="15" fill="rgb(214,151,3)"/><text x="260.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="452" width="6" height="15" fill="rgb(233,94,1)"/><text x="260.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.48%)</title><rect x="257" y="468" width="6" height="15" fill="rgb(225,91,6)"/><text x="260.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="484" width="6" height="15" fill="rgb(253,220,53)"/><text x="260.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="500" width="6" height="15" fill="rgb(235,8,42)"/><text x="260.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.48%)</title><rect x="257" y="516" width="6" height="15" fill="rgb(232,227,21)"/><text x="260.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.48%)</title><rect x="257" y="532" width="6" height="15" fill="rgb(222,169,8)"/><text x="260.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.48%)</title><rect x="257" y="548" width="6" height="15" fill="rgb(213,85,53)"/><text x="260.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="564" width="6" height="15" fill="rgb(228,123,10)"/><text x="260.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.48%)</title><rect x="257" y="580" width="6" height="15" fill="rgb(238,189,12)"/><text x="260.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="596" width="6" height="15" fill="rgb(226,50,9)"/><text x="260.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.48%)</title><rect x="257" y="612" width="6" height="15" fill="rgb(232,213,52)"/><text x="260.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.48%)</title><rect x="257" y="628" width="6" height="15" fill="rgb(230,95,50)"/><text x="260.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.48%)</title><rect x="257" y="644" width="6" height="15" fill="rgb(227,210,4)"/><text x="260.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="660" width="6" height="15" fill="rgb(244,63,6)"/><text x="260.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.48%)</title><rect x="257" y="676" width="6" height="15" fill="rgb(212,17,45)"/><text x="260.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="692" width="6" height="15" fill="rgb(230,39,4)"/><text x="260.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.48%)</title><rect x="257" y="708" width="6" height="15" fill="rgb(250,218,42)"/><text x="260.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.48%)</title><rect x="257" y="724" width="6" height="15" fill="rgb(231,119,23)"/><text x="260.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.48%)</title><rect x="257" y="740" width="6" height="15" fill="rgb(221,58,52)"/><text x="260.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="756" width="6" height="15" fill="rgb(225,194,40)"/><text x="260.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.48%)</title><rect x="257" y="772" width="6" height="15" fill="rgb(228,6,47)"/><text x="260.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="788" width="6" height="15" fill="rgb(219,117,20)"/><text x="260.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.48%)</title><rect x="257" y="804" width="6" height="15" fill="rgb(246,94,4)"/><text x="260.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.48%)</title><rect x="257" y="820" width="6" height="15" fill="rgb(235,22,29)"/><text x="260.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.48%)</title><rect x="257" y="836" width="6" height="15" fill="rgb(238,5,3)"/><text x="260.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="852" width="6" height="15" fill="rgb(220,138,21)"/><text x="260.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.48%)</title><rect x="257" y="868" width="6" height="15" fill="rgb(248,63,52)"/><text x="260.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="884" width="6" height="15" fill="rgb(225,114,27)"/><text x="260.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.48%)</title><rect x="257" y="900" width="6" height="15" fill="rgb(205,67,4)"/><text x="260.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="916" width="6" height="15" fill="rgb(239,130,30)"/><text x="260.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="932" width="6" height="15" fill="rgb(232,5,40)"/><text x="260.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.48%)</title><rect x="257" y="948" width="6" height="15" fill="rgb(220,172,27)"/><text x="260.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.48%)</title><rect x="257" y="964" width="6" height="15" fill="rgb(242,33,35)"/><text x="260.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.48%)</title><rect x="257" y="980" width="6" height="15" fill="rgb(252,224,10)"/><text x="260.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="996" width="6" height="15" fill="rgb(213,200,9)"/><text x="260.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.48%)</title><rect x="257" y="1012" width="6" height="15" fill="rgb(222,156,28)"/><text x="260.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.48%)</title><rect x="257" y="1028" width="6" height="15" fill="rgb(208,1,2)"/><text x="260.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.48%)</title><rect x="257" y="1044" width="6" height="15" fill="rgb(246,110,49)"/><text x="260.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.48%)</title><rect x="257" y="1060" width="6" height="15" fill="rgb(233,77,7)"/><text x="260.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.48%)</title><rect x="257" y="1076" width="6" height="15" fill="rgb(224,167,2)"/><text x="260.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.48%)</title><rect x="257" y="1092" width="6" height="15" fill="rgb(236,220,42)"/><text x="260.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.24%)</title><rect x="260" y="1108" width="3" height="15" fill="rgb(241,46,5)"/><text x="263.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="260" y="1124" width="3" height="15" fill="rgb(206,43,40)"/><text x="263.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="260" y="1140" width="3" height="15" fill="rgb(208,162,35)"/><text x="263.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="260" y="1156" width="3" height="15" fill="rgb(208,26,48)"/><text x="263.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="260" y="1172" width="3" height="15" fill="rgb(230,142,37)"/><text x="263.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="260" y="1188" width="3" height="15" fill="rgb(229,121,7)"/><text x="263.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="260" y="1204" width="3" height="15" fill="rgb(220,224,25)"/><text x="263.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="260" y="1220" width="3" height="15" fill="rgb(210,196,24)"/><text x="263.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.24%)</title><rect x="260" y="1236" width="3" height="15" fill="rgb(234,134,51)"/><text x="263.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.24%)</title><rect x="260" y="1252" width="3" height="15" fill="rgb(221,155,36)"/><text x="263.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="260" y="1268" width="3" height="15" fill="rgb(235,89,15)"/><text x="263.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="260" y="1284" width="3" height="15" fill="rgb(239,164,11)"/><text x="263.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="260" y="1300" width="3" height="15" fill="rgb(216,23,10)"/><text x="263.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="260" y="1316" width="3" height="15" fill="rgb(251,21,9)"/><text x="263.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="260" y="1332" width="3" height="15" fill="rgb(233,137,51)"/><text x="263.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="260" y="1348" width="3" height="15" fill="rgb(209,110,6)"/><text x="263.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.24%)</title><rect x="260" y="1364" width="3" height="15" fill="rgb(216,110,23)"/><text x="263.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="260" y="1380" width="3" height="15" fill="rgb(238,169,54)"/><text x="263.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="260" y="1396" width="3" height="15" fill="rgb(248,87,22)"/><text x="263.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="260" y="1412" width="3" height="15" fill="rgb(242,203,16)"/><text x="263.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="260" y="1428" width="3" height="15" fill="rgb(241,132,30)"/><text x="263.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="260" y="1444" width="3" height="15" fill="rgb(237,7,19)"/><text x="263.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.24%)</title><rect x="260" y="1460" width="3" height="15" fill="rgb(248,28,9)"/><text x="263.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.24%)</title><rect x="260" y="1476" width="3" height="15" fill="rgb(209,41,8)"/><text x="263.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.24%)</title><rect x="260" y="1492" width="3" height="15" fill="rgb(220,81,14)"/><text x="263.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.24%)</title><rect x="260" y="1508" width="3" height="15" fill="rgb(241,104,31)"/><text x="263.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.24%)</title><rect x="260" y="1524" width="3" height="15" fill="rgb(227,226,29)"/><text x="263.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.24%)</title><rect x="260" y="1540" width="3" height="15" fill="rgb(249,60,40)"/><text x="263.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.24%)</title><rect x="260" y="1556" width="3" height="15" fill="rgb(233,128,18)"/><text x="263.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (2 samples, 0.24%)</title><rect x="260" y="1572" width="3" height="15" fill="rgb(214,142,8)"/><text x="263.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.24%)</title><rect x="260" y="1588" width="3" height="15" fill="rgb(206,17,51)"/><text x="263.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:214) (1 samples, 0.12%)</title><rect x="261" y="1604" width="2" height="15" fill="rgb(210,126,43)"/><text x="264.00" y="1614.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="261" y="1620" width="2" height="15" fill="rgb(250,143,10)"/><text x="264.00" y="1630.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="261" y="1636" width="2" height="15" fill="rgb(209,176,12)"/><text x="264.00" y="1646.50"></text></g><g><title>0x7f116f7f48a4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="261" y="1652" width="2" height="15" fill="rgb(226,160,33)"/><text x="264.00" y="1662.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.12%)</title><rect x="263" y="388" width="1" height="15" fill="rgb(223,82,45)"/><text x="266.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="263" y="404" width="1" height="15" fill="rgb(225,49,0)"/><text x="266.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="263" y="420" width="1" height="15" fill="rgb(250,57,4)"/><text x="266.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="263" y="436" width="1" height="15" fill="rgb(238,76,24)"/><text x="266.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="263" y="452" width="1" height="15" fill="rgb(232,180,52)"/><text x="266.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="263" y="468" width="1" height="15" fill="rgb(253,21,29)"/><text x="266.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.12%)</title><rect x="263" y="484" width="1" height="15" fill="rgb(252,24,25)"/><text x="266.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.12%)</title><rect x="263" y="500" width="1" height="15" fill="rgb(213,11,53)"/><text x="266.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.12%)</title><rect x="263" y="516" width="1" height="15" fill="rgb(233,136,45)"/><text x="266.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.12%)</title><rect x="263" y="532" width="1" height="15" fill="rgb(232,103,26)"/><text x="266.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.12%)</title><rect x="263" y="548" width="1" height="15" fill="rgb(221,176,53)"/><text x="266.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.12%)</title><rect x="263" y="564" width="1" height="15" fill="rgb(220,24,20)"/><text x="266.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.12%)</title><rect x="263" y="580" width="1" height="15" fill="rgb(232,142,26)"/><text x="266.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.12%)</title><rect x="263" y="596" width="1" height="15" fill="rgb(210,26,30)"/><text x="266.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:722) (1 samples, 0.12%)</title><rect x="263" y="612" width="1" height="15" fill="rgb(215,86,47)"/><text x="266.00" y="622.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.12%)</title><rect x="263" y="628" width="1" height="15" fill="rgb(205,11,42)"/><text x="266.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.12%)</title><rect x="263" y="644" width="1" height="15" fill="rgb(240,21,2)"/><text x="266.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.12%)</title><rect x="263" y="660" width="1" height="15" fill="rgb(224,5,12)"/><text x="266.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.12%)</title><rect x="263" y="676" width="1" height="15" fill="rgb(222,189,25)"/><text x="266.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.12%)</title><rect x="263" y="692" width="1" height="15" fill="rgb(234,73,20)"/><text x="266.00" y="702.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:174) (1 samples, 0.12%)</title><rect x="263" y="708" width="1" height="15" fill="rgb(220,137,39)"/><text x="266.00" y="718.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:28) (2 samples, 0.24%)</title><rect x="263" y="84" width="3" height="15" fill="rgb(252,152,15)"/><text x="266.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.24%)</title><rect x="263" y="100" width="3" height="15" fill="rgb(226,107,30)"/><text x="266.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.24%)</title><rect x="263" y="116" width="3" height="15" fill="rgb(210,187,8)"/><text x="266.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.24%)</title><rect x="263" y="132" width="3" height="15" fill="rgb(208,189,1)"/><text x="266.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.24%)</title><rect x="263" y="148" width="3" height="15" fill="rgb(211,211,36)"/><text x="266.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.24%)</title><rect x="263" y="164" width="3" height="15" fill="rgb(235,31,35)"/><text x="266.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.24%)</title><rect x="263" y="180" width="3" height="15" fill="rgb(206,202,36)"/><text x="266.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.24%)</title><rect x="263" y="196" width="3" height="15" fill="rgb(247,218,25)"/><text x="266.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="263" y="212" width="3" height="15" fill="rgb(221,137,8)"/><text x="266.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="263" y="228" width="3" height="15" fill="rgb(210,123,51)"/><text x="266.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="263" y="244" width="3" height="15" fill="rgb(237,58,9)"/><text x="266.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="263" y="260" width="3" height="15" fill="rgb(236,102,38)"/><text x="266.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="263" y="276" width="3" height="15" fill="rgb(213,186,52)"/><text x="266.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.24%)</title><rect x="263" y="292" width="3" height="15" fill="rgb(252,173,36)"/><text x="266.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.24%)</title><rect x="263" y="308" width="3" height="15" fill="rgb(214,189,54)"/><text x="266.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.24%)</title><rect x="263" y="324" width="3" height="15" fill="rgb(230,74,20)"/><text x="266.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.24%)</title><rect x="263" y="340" width="3" height="15" fill="rgb(243,22,27)"/><text x="266.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.24%)</title><rect x="263" y="356" width="3" height="15" fill="rgb(247,102,24)"/><text x="266.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.24%)</title><rect x="263" y="372" width="3" height="15" fill="rgb(222,200,49)"/><text x="266.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.12%)</title><rect x="264" y="388" width="2" height="15" fill="rgb(250,139,54)"/><text x="267.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.12%)</title><rect x="264" y="404" width="2" height="15" fill="rgb(205,227,11)"/><text x="267.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="264" y="420" width="2" height="15" fill="rgb(242,200,53)"/><text x="267.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="264" y="436" width="2" height="15" fill="rgb(211,181,12)"/><text x="267.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="264" y="452" width="2" height="15" fill="rgb(218,54,50)"/><text x="267.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:24) (1 samples, 0.12%)</title><rect x="264" y="468" width="2" height="15" fill="rgb(222,32,27)"/><text x="267.00" y="478.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.12%)</title><rect x="266" y="276" width="1" height="15" fill="rgb(219,39,20)"/><text x="269.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (1 samples, 0.12%)</title><rect x="266" y="292" width="1" height="15" fill="rgb(237,179,21)"/><text x="269.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.12%)</title><rect x="266" y="308" width="1" height="15" fill="rgb(215,216,18)"/><text x="269.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.12%)</title><rect x="266" y="324" width="1" height="15" fill="rgb(218,152,47)"/><text x="269.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.12%)</title><rect x="266" y="340" width="1" height="15" fill="rgb(230,121,49)"/><text x="269.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:18) (2 samples, 0.24%)</title><rect x="266" y="100" width="2" height="15" fill="rgb(242,135,5)"/><text x="269.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.24%)</title><rect x="266" y="116" width="2" height="15" fill="rgb(205,5,18)"/><text x="269.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.24%)</title><rect x="266" y="132" width="2" height="15" fill="rgb(249,55,22)"/><text x="269.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.24%)</title><rect x="266" y="148" width="2" height="15" fill="rgb(209,203,22)"/><text x="269.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.24%)</title><rect x="266" y="164" width="2" height="15" fill="rgb(207,133,25)"/><text x="269.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.24%)</title><rect x="266" y="180" width="2" height="15" fill="rgb(207,85,29)"/><text x="269.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (2 samples, 0.24%)</title><rect x="266" y="196" width="2" height="15" fill="rgb(250,162,14)"/><text x="269.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.24%)</title><rect x="266" y="212" width="2" height="15" fill="rgb(210,118,12)"/><text x="269.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (2 samples, 0.24%)</title><rect x="266" y="228" width="2" height="15" fill="rgb(216,185,30)"/><text x="269.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (2 samples, 0.24%)</title><rect x="266" y="244" width="2" height="15" fill="rgb(234,34,15)"/><text x="269.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (2 samples, 0.24%)</title><rect x="266" y="260" width="2" height="15" fill="rgb(207,108,36)"/><text x="269.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="267" y="276" width="1" height="15" fill="rgb(207,182,15)"/><text x="270.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (8 samples, 0.96%)</title><rect x="273" y="180" width="11" height="15" fill="rgb(232,3,35)"/><text x="276.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.36%)</title><rect x="280" y="196" width="4" height="15" fill="rgb(243,63,39)"/><text x="283.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.12%)</title><rect x="288" y="212" width="2" height="15" fill="rgb(254,74,43)"/><text x="291.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.12%)</title><rect x="288" y="228" width="2" height="15" fill="rgb(240,96,17)"/><text x="291.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.48%)</title><rect x="285" y="196" width="6" height="15" fill="rgb(241,105,9)"/><text x="288.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.12%)</title><rect x="290" y="212" width="1" height="15" fill="rgb(235,99,14)"/><text x="293.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.12%)</title><rect x="290" y="228" width="1" height="15" fill="rgb(215,15,25)"/><text x="293.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.12%)</title><rect x="295" y="260" width="2" height="15" fill="rgb(224,129,23)"/><text x="298.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.12%)</title><rect x="295" y="276" width="2" height="15" fill="rgb(243,220,52)"/><text x="298.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.12%)</title><rect x="297" y="356" width="1" height="15" fill="rgb(219,117,14)"/><text x="300.00" y="366.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.24%)</title><rect x="298" y="388" width="3" height="15" fill="rgb(236,136,50)"/><text x="301.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 0.48%)</title><rect x="297" y="308" width="5" height="15" fill="rgb(217,97,53)"/><text x="300.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.48%)</title><rect x="297" y="324" width="5" height="15" fill="rgb(205,129,47)"/><text x="300.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 0.48%)</title><rect x="297" y="340" width="5" height="15" fill="rgb(217,145,52)"/><text x="300.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.36%)</title><rect x="298" y="356" width="4" height="15" fill="rgb(212,211,52)"/><text x="301.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.36%)</title><rect x="298" y="372" width="4" height="15" fill="rgb(229,197,42)"/><text x="301.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.12%)</title><rect x="301" y="388" width="1" height="15" fill="rgb(241,82,28)"/><text x="304.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.12%)</title><rect x="302" y="340" width="2" height="15" fill="rgb(224,18,26)"/><text x="305.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.12%)</title><rect x="302" y="356" width="2" height="15" fill="rgb(249,146,47)"/><text x="305.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.12%)</title><rect x="302" y="372" width="2" height="15" fill="rgb(241,44,15)"/><text x="305.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.12%)</title><rect x="302" y="388" width="2" height="15" fill="rgb(244,73,25)"/><text x="305.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1700) (1 samples, 0.12%)</title><rect x="302" y="404" width="2" height="15" fill="rgb(210,29,39)"/><text x="305.00" y="414.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.12%)</title><rect x="304" y="388" width="1" height="15" fill="rgb(217,46,26)"/><text x="307.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c:777) (1 samples, 0.12%)</title><rect x="304" y="404" width="1" height="15" fill="rgb(206,7,52)"/><text x="307.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.24%)</title><rect x="304" y="356" width="3" height="15" fill="rgb(251,228,4)"/><text x="307.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.24%)</title><rect x="304" y="372" width="3" height="15" fill="rgb(217,229,27)"/><text x="307.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.12%)</title><rect x="305" y="388" width="2" height="15" fill="rgb(207,123,51)"/><text x="308.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.12%)</title><rect x="305" y="404" width="2" height="15" fill="rgb(249,22,20)"/><text x="308.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="305" y="420" width="2" height="15" fill="rgb(247,188,39)"/><text x="308.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.12%)</title><rect x="305" y="436" width="2" height="15" fill="rgb(234,15,40)"/><text x="308.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.12%)</title><rect x="307" y="356" width="1" height="15" fill="rgb(233,24,9)"/><text x="310.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.12%)</title><rect x="307" y="372" width="1" height="15" fill="rgb(206,9,7)"/><text x="310.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.12%)</title><rect x="307" y="388" width="1" height="15" fill="rgb(215,1,27)"/><text x="310.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.12%)</title><rect x="307" y="404" width="1" height="15" fill="rgb(249,17,3)"/><text x="310.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="307" y="420" width="1" height="15" fill="rgb(212,80,41)"/><text x="310.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="308" y="372" width="1" height="15" fill="rgb(207,174,39)"/><text x="311.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3036) (1 samples, 0.12%)</title><rect x="308" y="388" width="1" height="15" fill="rgb(224,119,15)"/><text x="311.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.24%)</title><rect x="308" y="356" width="3" height="15" fill="rgb(243,73,39)"/><text x="311.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.12%)</title><rect x="309" y="372" width="2" height="15" fill="rgb(248,38,3)"/><text x="312.00" y="382.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.12%)</title><rect x="309" y="388" width="2" height="15" fill="rgb(230,219,41)"/><text x="312.00" y="398.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.12%)</title><rect x="309" y="404" width="2" height="15" fill="rgb(218,201,17)"/><text x="312.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.12%)</title><rect x="311" y="372" width="1" height="15" fill="rgb(253,3,47)"/><text x="314.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (2 samples, 0.24%)</title><rect x="312" y="372" width="3" height="15" fill="rgb(229,52,32)"/><text x="315.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.12%)</title><rect x="315" y="372" width="2" height="15" fill="rgb(234,192,42)"/><text x="318.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.12%)</title><rect x="317" y="372" width="1" height="15" fill="rgb(236,6,24)"/><text x="320.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.24%)</title><rect x="318" y="388" width="3" height="15" fill="rgb(227,203,15)"/><text x="321.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (5 samples, 0.60%)</title><rect x="321" y="388" width="7" height="15" fill="rgb(253,31,45)"/><text x="324.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.12%)</title><rect x="326" y="404" width="2" height="15" fill="rgb(249,1,39)"/><text x="329.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.12%)</title><rect x="328" y="388" width="1" height="15" fill="rgb(246,185,22)"/><text x="331.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (24 samples, 2.88%)</title><rect x="297" y="260" width="34" height="15" fill="rgb(226,63,48)"/><text x="300.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 2.88%)</title><rect x="297" y="276" width="34" height="15" fill="rgb(245,212,1)"/><text x="300.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (24 samples, 2.88%)</title><rect x="297" y="292" width="34" height="15" fill="rgb(212,166,5)"/><text x="300.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (20 samples, 2.40%)</title><rect x="302" y="308" width="29" height="15" fill="rgb(211,66,18)"/><text x="305.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (20 samples, 2.40%)</title><rect x="302" y="324" width="29" height="15" fill="rgb(253,151,28)"/><text x="305.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (19 samples, 2.28%)</title><rect x="304" y="340" width="27" height="15" fill="rgb(230,221,7)"/><text x="307.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 1.68%)</title><rect x="311" y="356" width="20" height="15" fill="rgb(241,57,15)"/><text x="314.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 1.08%)</title><rect x="318" y="372" width="13" height="15" fill="rgb(214,153,13)"/><text x="321.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.12%)</title><rect x="329" y="388" width="2" height="15" fill="rgb(225,94,27)"/><text x="332.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.12%)</title><rect x="331" y="276" width="1" height="15" fill="rgb(237,51,47)"/><text x="334.00" y="286.50"></text></g><g><title>PyUFunc_AbsoluteTypeResolver (ufunc_type_resolution.c:587) (1 samples, 0.12%)</title><rect x="331" y="292" width="1" height="15" fill="rgb(221,146,0)"/><text x="334.00" y="302.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (30 samples, 3.60%)</title><rect x="292" y="244" width="43" height="15" fill="rgb(212,91,9)"/><text x="295.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.36%)</title><rect x="331" y="260" width="4" height="15" fill="rgb(253,108,41)"/><text x="334.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="332" y="276" width="3" height="15" fill="rgb(225,83,18)"/><text x="335.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (2 samples, 0.24%)</title><rect x="332" y="292" width="3" height="15" fill="rgb(205,66,17)"/><text x="335.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.24%)</title><rect x="332" y="308" width="3" height="15" fill="rgb(237,73,36)"/><text x="335.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.24%)</title><rect x="332" y="324" width="3" height="15" fill="rgb(235,142,10)"/><text x="335.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.24%)</title><rect x="332" y="340" width="3" height="15" fill="rgb(241,127,39)"/><text x="335.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.24%)</title><rect x="332" y="356" width="3" height="15" fill="rgb(240,133,33)"/><text x="335.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.24%)</title><rect x="332" y="372" width="3" height="15" fill="rgb(234,208,19)"/><text x="335.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="332" y="388" width="3" height="15" fill="rgb(239,31,44)"/><text x="335.00" y="398.50"></text></g><g><title>0x7f116f7f3d67 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="334" y="404" width="1" height="15" fill="rgb(207,59,51)"/><text x="337.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.12%)</title><rect x="335" y="356" width="1" height="15" fill="rgb(218,183,31)"/><text x="338.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (33 samples, 3.96%)</title><rect x="291" y="196" width="47" height="15" fill="rgb(247,107,53)"/><text x="294.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 3.84%)</title><rect x="292" y="212" width="46" height="15" fill="rgb(217,146,49)"/><text x="295.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (32 samples, 3.84%)</title><rect x="292" y="228" width="46" height="15" fill="rgb(228,186,7)"/><text x="295.00" y="238.50">_run..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (2 samples, 0.24%)</title><rect x="335" y="244" width="3" height="15" fill="rgb(212,172,5)"/><text x="338.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.24%)</title><rect x="335" y="260" width="3" height="15" fill="rgb(226,120,36)"/><text x="338.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.24%)</title><rect x="335" y="276" width="3" height="15" fill="rgb(216,24,19)"/><text x="338.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.24%)</title><rect x="335" y="292" width="3" height="15" fill="rgb(205,140,29)"/><text x="338.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.24%)</title><rect x="335" y="308" width="3" height="15" fill="rgb(219,4,31)"/><text x="338.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.24%)</title><rect x="335" y="324" width="3" height="15" fill="rgb(217,132,48)"/><text x="338.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.24%)</title><rect x="335" y="340" width="3" height="15" fill="rgb(239,80,44)"/><text x="338.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.12%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(251,10,28)"/><text x="339.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.12%)</title><rect x="336" y="372" width="2" height="15" fill="rgb(240,135,16)"/><text x="339.00" y="382.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.12%)</title><rect x="338" y="308" width="1" height="15" fill="rgb(237,150,45)"/><text x="341.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.12%)</title><rect x="338" y="324" width="1" height="15" fill="rgb(215,195,1)"/><text x="341.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2142) (1 samples, 0.12%)</title><rect x="338" y="340" width="1" height="15" fill="rgb(207,211,5)"/><text x="341.00" y="350.50"></text></g><g><title>blas_memory_free (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="339" y="372" width="2" height="15" fill="rgb(245,90,35)"/><text x="342.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 2.40%)</title><rect x="338" y="276" width="28" height="15" fill="rgb(253,114,2)"/><text x="341.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (20 samples, 2.40%)</title><rect x="338" y="292" width="28" height="15" fill="rgb(251,116,32)"/><text x="341.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (19 samples, 2.28%)</title><rect x="339" y="308" width="27" height="15" fill="rgb(217,46,29)"/><text x="342.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (19 samples, 2.28%)</title><rect x="339" y="324" width="27" height="15" fill="rgb(212,161,41)"/><text x="342.00" y="334.50">c..</text></g><g><title>gemm (cblasfuncs.c:40) (19 samples, 2.28%)</title><rect x="339" y="340" width="27" height="15" fill="rgb(215,54,35)"/><text x="342.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 2.28%)</title><rect x="339" y="356" width="27" height="15" fill="rgb(214,135,48)"/><text x="342.00" y="366.50">c..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 2.16%)</title><rect x="341" y="372" width="25" height="15" fill="rgb(216,151,30)"/><text x="344.00" y="382.50">s..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 2.16%)</title><rect x="341" y="388" width="25" height="15" fill="rgb(242,66,30)"/><text x="344.00" y="398.50">s..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.36%)</title><rect x="366" y="276" width="4" height="15" fill="rgb(254,214,16)"/><text x="369.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (55 samples, 6.59%)</title><rect x="338" y="228" width="78" height="15" fill="rgb(243,39,25)"/><text x="341.00" y="238.50">_run (mlp..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (55 samples, 6.59%)</title><rect x="338" y="244" width="78" height="15" fill="rgb(232,203,8)"/><text x="341.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (55 samples, 6.59%)</title><rect x="338" y="260" width="78" height="15" fill="rgb(254,177,7)"/><text x="341.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (32 samples, 3.84%)</title><rect x="370" y="276" width="46" height="15" fill="rgb(225,211,51)"/><text x="373.00" y="286.50">sgem..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.12%)</title><rect x="416" y="308" width="1" height="15" fill="rgb(241,86,30)"/><text x="419.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.12%)</title><rect x="416" y="324" width="1" height="15" fill="rgb(228,89,0)"/><text x="419.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.12%)</title><rect x="416" y="340" width="1" height="15" fill="rgb(254,209,47)"/><text x="419.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.12%)</title><rect x="416" y="356" width="1" height="15" fill="rgb(248,207,30)"/><text x="419.00" y="366.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.12%)</title><rect x="417" y="324" width="1" height="15" fill="rgb(226,176,51)"/><text x="420.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3614) (1 samples, 0.12%)</title><rect x="417" y="340" width="1" height="15" fill="rgb(224,197,17)"/><text x="420.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.36%)</title><rect x="416" y="292" width="4" height="15" fill="rgb(206,109,52)"/><text x="419.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.24%)</title><rect x="417" y="308" width="3" height="15" fill="rgb(217,166,44)"/><text x="420.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3181) (1 samples, 0.12%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(250,42,47)"/><text x="421.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.12%)</title><rect x="420" y="308" width="1" height="15" fill="rgb(210,61,11)"/><text x="423.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.12%)</title><rect x="420" y="324" width="1" height="15" fill="rgb(253,187,31)"/><text x="423.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="420" y="340" width="1" height="15" fill="rgb(229,6,44)"/><text x="423.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.12%)</title><rect x="421" y="340" width="2" height="15" fill="rgb(221,151,27)"/><text x="424.00" y="350.50"></text></g><g><title>0x7f116f812d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="423" y="356" width="1" height="15" fill="rgb(236,196,10)"/><text x="426.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.24%)</title><rect x="423" y="340" width="2" height="15" fill="rgb(241,20,27)"/><text x="426.00" y="350.50"></text></g><g><title>0x7f116f812dbb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="424" y="356" width="1" height="15" fill="rgb(223,9,48)"/><text x="427.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.60%)</title><rect x="420" y="292" width="7" height="15" fill="rgb(252,191,46)"/><text x="423.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.48%)</title><rect x="421" y="308" width="6" height="15" fill="rgb(237,195,24)"/><text x="424.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.48%)</title><rect x="421" y="324" width="6" height="15" fill="rgb(223,149,54)"/><text x="424.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.12%)</title><rect x="425" y="340" width="2" height="15" fill="rgb(226,59,39)"/><text x="428.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.12%)</title><rect x="427" y="292" width="1" height="15" fill="rgb(239,100,27)"/><text x="430.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.12%)</title><rect x="427" y="308" width="1" height="15" fill="rgb(225,136,30)"/><text x="430.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1843) (1 samples, 0.12%)</title><rect x="427" y="324" width="1" height="15" fill="rgb(206,155,37)"/><text x="430.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (10 samples, 1.20%)</title><rect x="416" y="228" width="14" height="15" fill="rgb(213,17,17)"/><text x="419.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.20%)</title><rect x="416" y="244" width="14" height="15" fill="rgb(244,120,33)"/><text x="419.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.20%)</title><rect x="416" y="260" width="14" height="15" fill="rgb(254,72,23)"/><text x="419.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.20%)</title><rect x="416" y="276" width="14" height="15" fill="rgb(223,105,39)"/><text x="419.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.12%)</title><rect x="428" y="292" width="2" height="15" fill="rgb(242,221,30)"/><text x="431.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.12%)</title><rect x="428" y="308" width="2" height="15" fill="rgb(227,143,33)"/><text x="431.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="428" y="324" width="2" height="15" fill="rgb(221,8,46)"/><text x="431.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.12%)</title><rect x="430" y="260" width="1" height="15" fill="rgb(211,2,2)"/><text x="433.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.12%)</title><rect x="430" y="276" width="1" height="15" fill="rgb(231,153,27)"/><text x="433.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.12%)</title><rect x="430" y="292" width="1" height="15" fill="rgb(248,41,46)"/><text x="433.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.12%)</title><rect x="431" y="308" width="2" height="15" fill="rgb(214,172,21)"/><text x="434.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.12%)</title><rect x="431" y="324" width="2" height="15" fill="rgb(211,95,20)"/><text x="434.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.12%)</title><rect x="431" y="340" width="2" height="15" fill="rgb(218,30,10)"/><text x="434.00" y="350.50"></text></g><g><title>0x7f116f7aa7a5 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="431" y="356" width="2" height="15" fill="rgb(249,111,19)"/><text x="434.00" y="366.50"></text></g><g><title>0x7f116f7aa9fb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="431" y="372" width="2" height="15" fill="rgb(248,44,45)"/><text x="434.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.24%)</title><rect x="431" y="276" width="3" height="15" fill="rgb(242,38,23)"/><text x="434.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.24%)</title><rect x="431" y="292" width="3" height="15" fill="rgb(212,80,46)"/><text x="434.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.12%)</title><rect x="433" y="308" width="1" height="15" fill="rgb(242,229,48)"/><text x="436.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.12%)</title><rect x="433" y="324" width="1" height="15" fill="rgb(225,103,20)"/><text x="436.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.12%)</title><rect x="433" y="340" width="1" height="15" fill="rgb(249,83,9)"/><text x="436.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.12%)</title><rect x="433" y="356" width="1" height="15" fill="rgb(223,101,44)"/><text x="436.00" y="366.50"></text></g><g><title>mul_64_64 (npy_extint128.h:114) (1 samples, 0.12%)</title><rect x="433" y="372" width="1" height="15" fill="rgb(221,205,22)"/><text x="436.00" y="382.50"></text></g><g><title>0x7f115aafc204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="434" y="324" width="1" height="15" fill="rgb(228,26,41)"/><text x="437.00" y="334.50"></text></g><g><title>0x7f115aaba890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="435" y="340" width="2" height="15" fill="rgb(234,70,53)"/><text x="438.00" y="350.50"></text></g><g><title>0x7f116f93e1a0 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="450" y="356" width="2" height="15" fill="rgb(225,227,25)"/><text x="453.00" y="366.50"></text></g><g><title>0x7f116f971e00 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="452" y="356" width="3" height="15" fill="rgb(215,55,53)"/><text x="455.00" y="366.50"></text></g><g><title>0x7f116f971e17 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(224,87,13)"/><text x="458.00" y="366.50"></text></g><g><title>0x7f116f971e37 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="457" y="356" width="2" height="15" fill="rgb(234,27,23)"/><text x="460.00" y="366.50"></text></g><g><title>0x7f116f971e71 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="459" y="356" width="2" height="15" fill="rgb(242,82,42)"/><text x="462.00" y="366.50"></text></g><g><title>0x7f115aafc214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.28%)</title><rect x="435" y="324" width="27" height="15" fill="rgb(243,205,22)"/><text x="438.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (18 samples, 2.16%)</title><rect x="437" y="340" width="25" height="15" fill="rgb(248,43,37)"/><text x="440.00" y="350.50">e..</text></g><g><title>0x7f116f971ea6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="461" y="356" width="1" height="15" fill="rgb(217,106,15)"/><text x="464.00" y="366.50"></text></g><g><title>0x7f115aafc224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="462" y="324" width="3" height="15" fill="rgb(222,64,29)"/><text x="465.00" y="334.50"></text></g><g><title>0x7f115aada33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (26 samples, 3.12%)</title><rect x="434" y="308" width="37" height="15" fill="rgb(242,24,9)"/><text x="437.00" y="318.50">0x7..</text></g><g><title>0x7f115aafc228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.48%)</title><rect x="465" y="324" width="6" height="15" fill="rgb(248,198,50)"/><text x="468.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (30 samples, 3.60%)</title><rect x="430" y="228" width="42" height="15" fill="rgb(244,109,35)"/><text x="433.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (30 samples, 3.60%)</title><rect x="430" y="244" width="42" height="15" fill="rgb(254,14,8)"/><text x="433.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (29 samples, 3.48%)</title><rect x="431" y="260" width="41" height="15" fill="rgb(231,96,36)"/><text x="434.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (27 samples, 3.24%)</title><rect x="434" y="276" width="38" height="15" fill="rgb(249,57,12)"/><text x="437.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (27 samples, 3.24%)</title><rect x="434" y="292" width="38" height="15" fill="rgb(212,93,11)"/><text x="437.00" y="302.50">tri..</text></g><g><title>0x7f115aada345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="471" y="308" width="1" height="15" fill="rgb(233,16,23)"/><text x="474.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.12%)</title><rect x="475" y="292" width="1" height="15" fill="rgb(213,194,3)"/><text x="478.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.12%)</title><rect x="476" y="324" width="2" height="15" fill="rgb(227,185,36)"/><text x="479.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3140) (1 samples, 0.12%)</title><rect x="476" y="340" width="2" height="15" fill="rgb(253,76,49)"/><text x="479.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (138 samples, 16.55%)</title><rect x="284" y="180" width="195" height="15" fill="rgb(238,15,50)"/><text x="287.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (100 samples, 11.99%)</title><rect x="338" y="196" width="141" height="15" fill="rgb(222,136,37)"/><text x="341.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (100 samples, 11.99%)</title><rect x="338" y="212" width="141" height="15" fill="rgb(235,87,28)"/><text x="341.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (5 samples, 0.60%)</title><rect x="472" y="228" width="7" height="15" fill="rgb(236,229,52)"/><text x="475.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.36%)</title><rect x="475" y="244" width="4" height="15" fill="rgb(238,13,48)"/><text x="478.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.36%)</title><rect x="475" y="260" width="4" height="15" fill="rgb(214,200,38)"/><text x="478.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.36%)</title><rect x="475" y="276" width="4" height="15" fill="rgb(247,179,6)"/><text x="478.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.24%)</title><rect x="476" y="292" width="3" height="15" fill="rgb(221,135,43)"/><text x="479.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.24%)</title><rect x="476" y="308" width="3" height="15" fill="rgb(226,192,36)"/><text x="479.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:51) (1 samples, 0.12%)</title><rect x="478" y="324" width="1" height="15" fill="rgb(211,154,4)"/><text x="481.00" y="334.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3002) (1 samples, 0.12%)</title><rect x="478" y="340" width="1" height="15" fill="rgb(241,191,9)"/><text x="481.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.12%)</title><rect x="479" y="180" width="2" height="15" fill="rgb(213,218,23)"/><text x="482.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.24%)</title><rect x="481" y="180" width="2" height="15" fill="rgb(207,35,6)"/><text x="484.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.12%)</title><rect x="483" y="180" width="2" height="15" fill="rgb(208,187,31)"/><text x="486.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.36%)</title><rect x="485" y="180" width="4" height="15" fill="rgb(243,109,47)"/><text x="488.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (154 samples, 18.47%)</title><rect x="273" y="164" width="218" height="15" fill="rgb(216,130,42)"/><text x="276.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.12%)</title><rect x="489" y="180" width="2" height="15" fill="rgb(240,196,11)"/><text x="492.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.24%)</title><rect x="491" y="164" width="2" height="15" fill="rgb(225,224,35)"/><text x="494.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.12%)</title><rect x="492" y="180" width="1" height="15" fill="rgb(215,202,34)"/><text x="495.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (159 samples, 19.06%)</title><rect x="270" y="132" width="225" height="15" fill="rgb(222,202,52)"/><text x="273.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (159 samples, 19.06%)</title><rect x="270" y="148" width="225" height="15" fill="rgb(249,180,29)"/><text x="273.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.12%)</title><rect x="493" y="164" width="2" height="15" fill="rgb(246,188,12)"/><text x="496.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:45) (165 samples, 19.78%)</title><rect x="263" y="52" width="233" height="15" fill="rgb(206,95,50)"/><text x="266.00" y="62.50">&lt;module&gt; (bench_LogisticRegres..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:44) (165 samples, 19.78%)</title><rect x="263" y="68" width="233" height="15" fill="rgb(211,87,37)"/><text x="266.00" y="78.50">profile_pyrt (bench_LogisticRe..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:29) (163 samples, 19.54%)</title><rect x="266" y="84" width="230" height="15" fill="rgb(208,9,31)"/><text x="269.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:23) (161 samples, 19.30%)</title><rect x="268" y="100" width="228" height="15" fill="rgb(233,111,10)"/><text x="271.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (160 samples, 19.18%)</title><rect x="270" y="116" width="226" height="15" fill="rgb(210,123,54)"/><text x="273.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="495" y="132" width="1" height="15" fill="rgb(247,60,51)"/><text x="498.00" y="142.50"></text></g><g><title>0x7f112f822ff9 (?) (1 samples, 0.12%)</title><rect x="498" y="212" width="1" height="15" fill="rgb(220,54,16)"/><text x="501.00" y="222.50"></text></g><g><title>0x7f112f81def6 (?) (1 samples, 0.12%)</title><rect x="498" y="228" width="1" height="15" fill="rgb(233,3,8)"/><text x="501.00" y="238.50"></text></g><g><title>0x7f112f812d49 (?) (1 samples, 0.12%)</title><rect x="498" y="244" width="1" height="15" fill="rgb(244,90,29)"/><text x="501.00" y="254.50"></text></g><g><title>0x7f112f820c1a (?) (1 samples, 0.12%)</title><rect x="498" y="260" width="1" height="15" fill="rgb(231,73,4)"/><text x="501.00" y="270.50"></text></g><g><title>0x7f112fc4966c (?) (1 samples, 0.12%)</title><rect x="498" y="276" width="1" height="15" fill="rgb(210,208,54)"/><text x="501.00" y="286.50"></text></g><g><title>0x7f112f800e08 (?) (1 samples, 0.12%)</title><rect x="498" y="292" width="1" height="15" fill="rgb(230,48,40)"/><text x="501.00" y="302.50"></text></g><g><title>0x7f116f7f2d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="498" y="308" width="1" height="15" fill="rgb(244,156,17)"/><text x="501.00" y="318.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="499" y="340" width="4" height="15" fill="rgb(246,64,25)"/><text x="502.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:18) (6 samples, 0.72%)</title><rect x="496" y="100" width="9" height="15" fill="rgb(242,30,37)"/><text x="499.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.60%)</title><rect x="498" y="116" width="7" height="15" fill="rgb(213,45,6)"/><text x="501.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (5 samples, 0.60%)</title><rect x="498" y="132" width="7" height="15" fill="rgb(236,78,52)"/><text x="501.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (5 samples, 0.60%)</title><rect x="498" y="148" width="7" height="15" fill="rgb(210,49,12)"/><text x="501.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (5 samples, 0.60%)</title><rect x="498" y="164" width="7" height="15" fill="rgb(221,145,45)"/><text x="501.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (5 samples, 0.60%)</title><rect x="498" y="180" width="7" height="15" fill="rgb(220,157,44)"/><text x="501.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (5 samples, 0.60%)</title><rect x="498" y="196" width="7" height="15" fill="rgb(206,19,54)"/><text x="501.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="212" width="6" height="15" fill="rgb(241,213,30)"/><text x="502.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="228" width="6" height="15" fill="rgb(220,169,11)"/><text x="502.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="244" width="6" height="15" fill="rgb(247,22,48)"/><text x="502.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="260" width="6" height="15" fill="rgb(237,0,40)"/><text x="502.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="276" width="6" height="15" fill="rgb(228,46,35)"/><text x="502.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="292" width="6" height="15" fill="rgb(228,18,20)"/><text x="502.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="308" width="6" height="15" fill="rgb(211,229,26)"/><text x="502.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.48%)</title><rect x="499" y="324" width="6" height="15" fill="rgb(218,105,37)"/><text x="502.00" y="334.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="503" y="340" width="2" height="15" fill="rgb(229,222,45)"/><text x="506.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="503" y="356" width="2" height="15" fill="rgb(209,216,37)"/><text x="506.00" y="366.50"></text></g><g><title>0x7f116f7f1bc6 (libc-2.29.so) (4 samples, 0.48%)</title><rect x="547" y="132" width="6" height="15" fill="rgb(213,58,53)"/><text x="550.00" y="142.50"></text></g><g><title>0x7f116f7f1bd1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="553" y="132" width="1" height="15" fill="rgb(211,221,39)"/><text x="556.00" y="142.50"></text></g><g><title>0x7f116f7f1bdf (libc-2.29.so) (2 samples, 0.24%)</title><rect x="554" y="132" width="3" height="15" fill="rgb(235,59,41)"/><text x="557.00" y="142.50"></text></g><g><title>0x7f116f7f1c2d (libc-2.29.so) (2 samples, 0.24%)</title><rect x="557" y="132" width="3" height="15" fill="rgb(228,143,47)"/><text x="560.00" y="142.50"></text></g><g><title>0x7f116f7f1c45 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="560" y="132" width="1" height="15" fill="rgb(205,132,34)"/><text x="563.00" y="142.50"></text></g><g><title>0x7f116f7f1c49 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="561" y="132" width="2" height="15" fill="rgb(250,186,5)"/><text x="564.00" y="142.50"></text></g><g><title>0x7f116f7f1c4d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="563" y="132" width="1" height="15" fill="rgb(249,147,21)"/><text x="566.00" y="142.50"></text></g><g><title>0x7f116f7f1c6a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="564" y="132" width="2" height="15" fill="rgb(236,108,35)"/><text x="567.00" y="142.50"></text></g><g><title>0x7f116f7f1aaf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="566" y="148" width="1" height="15" fill="rgb(241,62,39)"/><text x="569.00" y="158.50"></text></g><g><title>0x7f116f7f1c73 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="566" y="132" width="2" height="15" fill="rgb(243,170,49)"/><text x="569.00" y="142.50"></text></g><g><title>0x7f116f7f1ab9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="567" y="148" width="1" height="15" fill="rgb(230,168,7)"/><text x="570.00" y="158.50"></text></g><g><title>0x7f116f7f2eb0 (libc-2.29.so) (16 samples, 1.92%)</title><rect x="547" y="116" width="23" height="15" fill="rgb(216,62,7)"/><text x="550.00" y="126.50">0..</text></g><g><title>0x7f116f7f1ca7 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="568" y="132" width="2" height="15" fill="rgb(228,73,7)"/><text x="571.00" y="142.50"></text></g><g><title>0x7f116f7f1ab9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="568" y="148" width="2" height="15" fill="rgb(222,22,38)"/><text x="571.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.12%)</title><rect x="574" y="148" width="1" height="15" fill="rgb(237,150,23)"/><text x="577.00" y="158.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="580" y="260" width="1" height="15" fill="rgb(214,188,34)"/><text x="583.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.36%)</title><rect x="578" y="196" width="5" height="15" fill="rgb(215,118,41)"/><text x="581.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.36%)</title><rect x="578" y="212" width="5" height="15" fill="rgb(228,145,54)"/><text x="581.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="578" y="228" width="5" height="15" fill="rgb(251,166,33)"/><text x="581.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="580" y="244" width="3" height="15" fill="rgb(207,131,33)"/><text x="583.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="581" y="260" width="2" height="15" fill="rgb(210,84,48)"/><text x="584.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="581" y="276" width="2" height="15" fill="rgb(233,136,52)"/><text x="584.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="581" y="292" width="2" height="15" fill="rgb(206,75,20)"/><text x="584.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="588" y="308" width="2" height="15" fill="rgb(205,153,19)"/><text x="591.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="588" y="324" width="2" height="15" fill="rgb(245,206,16)"/><text x="591.00" y="334.50"></text></g><g><title>0x7f116f8d0e93 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="588" y="340" width="2" height="15" fill="rgb(210,0,13)"/><text x="591.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="588" y="292" width="3" height="15" fill="rgb(252,132,49)"/><text x="591.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="590" y="308" width="1" height="15" fill="rgb(249,128,23)"/><text x="593.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="590" y="324" width="1" height="15" fill="rgb(250,68,32)"/><text x="593.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="590" y="340" width="1" height="15" fill="rgb(208,82,0)"/><text x="593.00" y="350.50"></text></g><g><title>onnxruntime::CheckTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="591" y="308" width="1" height="15" fill="rgb(211,18,1)"/><text x="594.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="591" y="292" width="3" height="15" fill="rgb(211,93,32)"/><text x="594.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::AsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="592" y="308" width="2" height="15" fill="rgb(221,56,37)"/><text x="595.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="594" y="292" width="3" height="15" fill="rgb(224,147,31)"/><text x="597.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="597" y="340" width="3" height="15" fill="rgb(227,139,38)"/><text x="600.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="356" width="2" height="15" fill="rgb(228,64,7)"/><text x="601.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="372" width="2" height="15" fill="rgb(253,223,1)"/><text x="601.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="388" width="2" height="15" fill="rgb(215,124,17)"/><text x="601.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="404" width="2" height="15" fill="rgb(230,23,1)"/><text x="601.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="420" width="2" height="15" fill="rgb(220,28,2)"/><text x="601.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="436" width="2" height="15" fill="rgb(238,20,38)"/><text x="601.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="452" width="2" height="15" fill="rgb(242,23,40)"/><text x="601.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="468" width="2" height="15" fill="rgb(205,26,6)"/><text x="601.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="598" y="484" width="2" height="15" fill="rgb(217,53,5)"/><text x="601.00" y="494.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="598" y="500" width="2" height="15" fill="rgb(232,223,8)"/><text x="601.00" y="510.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(210,162,26)"/><text x="792.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="789" y="404" width="2" height="15" fill="rgb(207,186,15)"/><text x="792.00" y="414.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="789" y="356" width="3" height="15" fill="rgb(211,170,47)"/><text x="792.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="789" y="372" width="3" height="15" fill="rgb(216,174,45)"/><text x="792.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOutputArgIndex (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="791" y="388" width="1" height="15" fill="rgb(222,36,34)"/><text x="794.00" y="398.50"></text></g><g><title>0x7f116f812dae (libc-2.29.so) (1 samples, 0.12%)</title><rect x="812" y="372" width="1" height="15" fill="rgb(225,87,22)"/><text x="815.00" y="382.50"></text></g><g><title>0x7f116f812db3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="813" y="372" width="2" height="15" fill="rgb(240,189,36)"/><text x="816.00" y="382.50"></text></g><g><title>0x7f116f812dbb (libc-2.29.so) (1 samples, 0.12%)</title><rect x="815" y="372" width="1" height="15" fill="rgb(206,103,24)"/><text x="818.00" y="382.50"></text></g><g><title>0x7f116f971e0e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="816" y="372" width="1" height="15" fill="rgb(248,42,32)"/><text x="819.00" y="382.50"></text></g><g><title>0x7f116f971e37 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="817" y="372" width="2" height="15" fill="rgb(253,135,19)"/><text x="820.00" y="382.50"></text></g><g><title>0x7f116f971e4e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="819" y="372" width="1" height="15" fill="rgb(211,148,22)"/><text x="822.00" y="382.50"></text></g><g><title>0x7f116f971e71 (libm-2.29.so) (5 samples, 0.60%)</title><rect x="820" y="372" width="7" height="15" fill="rgb(242,94,6)"/><text x="823.00" y="382.50"></text></g><g><title>0x7f116f971e7a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="827" y="372" width="2" height="15" fill="rgb(205,158,50)"/><text x="830.00" y="382.50"></text></g><g><title>0x7f116f971e96 (libm-2.29.so) (4 samples, 0.48%)</title><rect x="829" y="372" width="5" height="15" fill="rgb(251,194,12)"/><text x="832.00" y="382.50"></text></g><g><title>0x7f116f971ea2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="834" y="372" width="2" height="15" fill="rgb(249,28,39)"/><text x="837.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (168 samples, 20.14%)</title><rect x="600" y="340" width="237" height="15" fill="rgb(242,187,17)"/><text x="603.00" y="350.50">onnxruntime::ml::LinearClassifi..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.84%)</title><rect x="792" y="356" width="45" height="15" fill="rgb(227,109,28)"/><text x="795.00" y="366.50">onnx..</text></g><g><title>0x7f116f971ea6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="836" y="372" width="1" height="15" fill="rgb(225,126,22)"/><text x="839.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.20%)</title><rect x="837" y="340" width="14" height="15" fill="rgb(227,78,2)"/><text x="840.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.20%)</title><rect x="837" y="356" width="14" height="15" fill="rgb(237,222,44)"/><text x="840.00" y="366.50"></text></g><g><title>0x7f116f7f3b12 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="921" y="388" width="1" height="15" fill="rgb(246,133,32)"/><text x="924.00" y="398.50"></text></g><g><title>0x7f116f7f3b1c (libc-2.29.so) (4 samples, 0.48%)</title><rect x="922" y="388" width="6" height="15" fill="rgb(214,190,11)"/><text x="925.00" y="398.50"></text></g><g><title>0x7f116f7f3b39 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="928" y="388" width="3" height="15" fill="rgb(226,60,31)"/><text x="931.00" y="398.50"></text></g><g><title>0x7f116f7f3b49 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="931" y="388" width="1" height="15" fill="rgb(237,139,39)"/><text x="934.00" y="398.50"></text></g><g><title>0x7f116f7f3b61 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="932" y="388" width="1" height="15" fill="rgb(207,165,25)"/><text x="935.00" y="398.50"></text></g><g><title>0x7f116f7f3d36 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="933" y="388" width="2" height="15" fill="rgb(235,73,6)"/><text x="936.00" y="398.50"></text></g><g><title>0x7f116f7f3d48 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="935" y="388" width="1" height="15" fill="rgb(249,36,32)"/><text x="938.00" y="398.50"></text></g><g><title>0x7f116f7f3d54 (libc-2.29.so) (3 samples, 0.36%)</title><rect x="936" y="388" width="4" height="15" fill="rgb(245,102,2)"/><text x="939.00" y="398.50"></text></g><g><title>0x7f116f7f3d8d (libc-2.29.so) (3 samples, 0.36%)</title><rect x="940" y="388" width="5" height="15" fill="rgb(240,23,31)"/><text x="943.00" y="398.50"></text></g><g><title>0x7f116f7f3d9f (libc-2.29.so) (2 samples, 0.24%)</title><rect x="945" y="388" width="3" height="15" fill="rgb(208,10,18)"/><text x="948.00" y="398.50"></text></g><g><title>0x7f116f7f3dd2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="948" y="388" width="1" height="15" fill="rgb(220,165,42)"/><text x="951.00" y="398.50"></text></g><g><title>0x7f116f7f3f2a (libc-2.29.so) (2 samples, 0.24%)</title><rect x="949" y="388" width="3" height="15" fill="rgb(246,152,12)"/><text x="952.00" y="398.50"></text></g><g><title>0x7f116f7f3fd2 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="952" y="388" width="3" height="15" fill="rgb(218,56,26)"/><text x="955.00" y="398.50"></text></g><g><title>0x7f116f7f3fde (libc-2.29.so) (3 samples, 0.36%)</title><rect x="955" y="388" width="4" height="15" fill="rgb(222,161,6)"/><text x="958.00" y="398.50"></text></g><g><title>0x7f116f7f4033 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="959" y="388" width="3" height="15" fill="rgb(230,7,19)"/><text x="962.00" y="398.50"></text></g><g><title>0x7f116f7f4050 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="962" y="388" width="1" height="15" fill="rgb(207,100,25)"/><text x="965.00" y="398.50"></text></g><g><title>0x7f116f7f408c (libc-2.29.so) (3 samples, 0.36%)</title><rect x="963" y="388" width="4" height="15" fill="rgb(228,223,33)"/><text x="966.00" y="398.50"></text></g><g><title>0x7f116f7f4097 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="967" y="388" width="2" height="15" fill="rgb(239,72,1)"/><text x="970.00" y="398.50"></text></g><g><title>0x7f116f7f4395 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="969" y="388" width="1" height="15" fill="rgb(216,0,30)"/><text x="972.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (76 samples, 9.11%)</title><rect x="865" y="356" width="108" height="15" fill="rgb(214,3,27)"/><text x="868.00" y="366.50">operator new ..</text></g><g><title>malloc (libc-2.29.so) (73 samples, 8.75%)</title><rect x="870" y="372" width="103" height="15" fill="rgb(247,45,24)"/><text x="873.00" y="382.50">malloc (libc..</text></g><g><title>0x7f116f7f43d1 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="970" y="388" width="3" height="15" fill="rgb(236,162,51)"/><text x="973.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.84%)</title><rect x="973" y="356" width="10" height="15" fill="rgb(247,54,44)"/><text x="976.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 0.60%)</title><rect x="983" y="356" width="7" height="15" fill="rgb(225,63,42)"/><text x="986.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (285 samples, 34.17%)</title><rect x="588" y="276" width="403" height="15" fill="rgb(223,112,4)"/><text x="591.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 33.45%)</title><rect x="597" y="292" width="394" height="15" fill="rgb(241,160,39)"/><text x="600.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 33.45%)</title><rect x="597" y="308" width="394" height="15" fill="rgb(237,99,19)"/><text x="600.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/cap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 33.45%)</title><rect x="597" y="324" width="394" height="15" fill="rgb(253,70,42)"/><text x="600.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 11.87%)</title><rect x="851" y="340" width="140" height="15" fill="rgb(208,59,1)"/><text x="854.00" y="350.50">onnxruntime::ml::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="990" y="356" width="1" height="15" fill="rgb(223,91,33)"/><text x="993.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (286 samples, 34.29%)</title><rect x="588" y="260" width="405" height="15" fill="rgb(214,203,16)"/><text x="591.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="991" y="276" width="2" height="15" fill="rgb(240,191,1)"/><text x="994.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="991" y="292" width="2" height="15" fill="rgb(219,6,18)"/><text x="994.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="993" y="260" width="1" height="15" fill="rgb(219,138,14)"/><text x="996.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="993" y="276" width="1" height="15" fill="rgb(236,103,49)"/><text x="996.00" y="286.50"></text></g><g><title>0x7f116f7f2902 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="993" y="292" width="1" height="15" fill="rgb(213,16,46)"/><text x="996.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.12%)</title><rect x="994" y="292" width="2" height="15" fill="rgb(252,59,31)"/><text x="997.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.12%)</title><rect x="994" y="308" width="2" height="15" fill="rgb(227,27,30)"/><text x="997.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.12%)</title><rect x="996" y="292" width="1" height="15" fill="rgb(215,20,5)"/><text x="999.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="994" y="260" width="4" height="15" fill="rgb(242,131,53)"/><text x="997.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.36%)</title><rect x="994" y="276" width="4" height="15" fill="rgb(208,121,50)"/><text x="997.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.12%)</title><rect x="997" y="292" width="1" height="15" fill="rgb(225,126,42)"/><text x="1000.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.12%)</title><rect x="997" y="308" width="1" height="15" fill="rgb(215,71,29)"/><text x="1000.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.12%)</title><rect x="997" y="324" width="1" height="15" fill="rgb(205,70,36)"/><text x="1000.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:230) (1 samples, 0.12%)</title><rect x="997" y="340" width="1" height="15" fill="rgb(245,188,31)"/><text x="1000.00" y="350.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 3.00%)</title><rect x="1088" y="276" width="35" height="15" fill="rgb(230,209,38)"/><text x="1091.00" y="286.50">py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (91 samples, 10.91%)</title><rect x="998" y="260" width="129" height="15" fill="rgb(254,198,17)"/><text x="1001.00" y="270.50">pybind11::detail..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.36%)</title><rect x="1123" y="276" width="4" height="15" fill="rgb(244,30,11)"/><text x="1126.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1127" y="260" width="2" height="15" fill="rgb(244,63,25)"/><text x="1130.00" y="270.50"></text></g><g><title>0x7f112f7ea0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1131" y="292" width="2" height="15" fill="rgb(232,209,27)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7f115f2bf7a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1133" y="292" width="1" height="15" fill="rgb(247,80,34)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7f116f7f2906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1134" y="292" width="2" height="15" fill="rgb(246,84,31)"/><text x="1137.00" y="302.50"></text></g><g><title>0x7f116f7f291e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1136" y="292" width="1" height="15" fill="rgb(222,195,51)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7f116f7f2945 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(254,111,3)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7f116f7f2971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1139" y="292" width="1" height="15" fill="rgb(243,60,1)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f116f7f2982 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1140" y="292" width="1" height="15" fill="rgb(253,176,29)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7f116f7f29d3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1141" y="292" width="2" height="15" fill="rgb(247,4,22)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7f116f7f29ed (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1143" y="292" width="1" height="15" fill="rgb(237,113,2)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7f116f7f2a51 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1144" y="292" width="2" height="15" fill="rgb(240,220,30)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7f116f7f2cf0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1146" y="292" width="1" height="15" fill="rgb(246,194,27)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7f116f7f2d07 (libc-2.29.so) (8 samples, 0.96%)</title><rect x="1147" y="292" width="11" height="15" fill="rgb(215,29,19)"/><text x="1150.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.60%)</title><rect x="1158" y="292" width="7" height="15" fill="rgb(215,229,22)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7f116f7f299b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1167" y="308" width="1" height="15" fill="rgb(224,208,40)"/><text x="1170.00" y="318.50"></text></g><g><title>0x7f116f7f2a4b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1168" y="308" width="2" height="15" fill="rgb(222,82,23)"/><text x="1171.00" y="318.50"></text></g><g><title>0x7f116f7f2d02 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1170" y="308" width="1" height="15" fill="rgb(218,77,42)"/><text x="1173.00" y="318.50"></text></g><g><title>0x7f116f7f2d07 (libc-2.29.so) (6 samples, 0.72%)</title><rect x="1171" y="308" width="9" height="15" fill="rgb(217,185,21)"/><text x="1174.00" y="318.50"></text></g><g><title>0x7f116f7f2d13 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1180" y="308" width="1" height="15" fill="rgb(241,220,30)"/><text x="1183.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (425 samples, 50.96%)</title><rect x="583" y="244" width="601" height="15" fill="rgb(244,8,47)"/><text x="586.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Inf..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 4.68%)</title><rect x="1129" y="260" width="55" height="15" fill="rgb(254,58,40)"/><text x="1132.00" y="270.50">std::..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (39 samples, 4.68%)</title><rect x="1129" y="276" width="55" height="15" fill="rgb(254,204,52)"/><text x="1132.00" y="286.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.56%)</title><rect x="1165" y="292" width="19" height="15" fill="rgb(209,54,25)"/><text x="1168.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.24%)</title><rect x="1181" y="308" width="3" height="15" fill="rgb(243,186,15)"/><text x="1184.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1184" y="244" width="1" height="15" fill="rgb(222,6,31)"/><text x="1187.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1184" y="260" width="1" height="15" fill="rgb(209,118,6)"/><text x="1187.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1184" y="276" width="1" height="15" fill="rgb(252,124,48)"/><text x="1187.00" y="286.50"></text></g><g><title>0x7f112f7ea360 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1184" y="292" width="1" height="15" fill="rgb(225,43,40)"/><text x="1187.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (431 samples, 51.68%)</title><rect x="577" y="164" width="610" height="15" fill="rgb(246,73,2)"/><text x="580.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (431 samples, 51.68%)</title><rect x="577" y="180" width="610" height="15" fill="rgb(230,56,15)"/><text x="580.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (427 samples, 51.20%)</title><rect x="583" y="196" width="604" height="15" fill="rgb(239,229,0)"/><text x="586.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (427 samples, 51.20%)</title><rect x="583" y="212" width="604" height="15" fill="rgb(239,64,26)"/><text x="586.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (427 samples, 51.20%)</title><rect x="583" y="228" width="604" height="15" fill="rgb(218,42,29)"/><text x="586.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybin..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(226,19,8)"/><text x="1188.00" y="254.50"></text></g><g><title>0x7f116f7f2d13 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(214,62,50)"/><text x="1188.00" y="270.50"></text></g><g><title>all (834 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,213,41)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:52) (490 samples, 58.75%)</title><rect x="496" y="52" width="694" height="15" fill="rgb(226,226,35)"/><text x="499.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:51) (490 samples, 58.75%)</title><rect x="496" y="68" width="694" height="15" fill="rgb(227,95,44)"/><text x="499.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:51)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:29) (490 samples, 58.75%)</title><rect x="496" y="84" width="694" height="15" fill="rgb(214,217,18)"/><text x="499.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:29)</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:23) (484 samples, 58.03%)</title><rect x="505" y="100" width="685" height="15" fill="rgb(241,120,43)"/><text x="508.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (438 samples, 52.52%)</title><rect x="570" y="116" width="620" height="15" fill="rgb(244,28,27)"/><text x="573.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (437 samples, 52.40%)</title><rect x="571" y="132" width="619" height="15" fill="rgb(235,152,1)"/><text x="574.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (434 samples, 52.04%)</title><rect x="575" y="148" width="615" height="15" fill="rgb(234,23,23)"/><text x="578.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.24%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(216,37,3)"/><text x="1190.00" y="174.50"></text></g></g></svg>