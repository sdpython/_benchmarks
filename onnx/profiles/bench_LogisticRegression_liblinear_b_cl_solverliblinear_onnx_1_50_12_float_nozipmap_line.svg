<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2086" onload="init(evt)" viewBox="0 0 1200 2086" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2086" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2069.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2069.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:18) (1 samples, 0.37%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(242,159,19)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.37%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(215,145,35)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.37%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(215,134,29)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.37%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(244,54,12)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.37%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(252,135,38)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.37%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(251,58,44)"/><text x="13.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.37%)</title><rect x="18" y="116" width="5" height="15" fill="rgb(249,228,9)"/><text x="21.00" y="126.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 1.48%)</title><rect x="40" y="164" width="18" height="15" fill="rgb(229,153,13)"/><text x="43.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.37%)</title><rect x="53" y="180" width="5" height="15" fill="rgb(215,73,27)"/><text x="56.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.11%)</title><rect x="97" y="196" width="13" height="15" fill="rgb(229,174,31)"/><text x="100.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (21 samples, 7.78%)</title><rect x="36" y="148" width="92" height="15" fill="rgb(230,61,2)"/><text x="39.00" y="158.50">predict_pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 5.93%)</title><rect x="58" y="164" width="70" height="15" fill="rgb(219,70,25)"/><text x="61.00" y="174.50">check_i..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (13 samples, 4.81%)</title><rect x="71" y="180" width="57" height="15" fill="rgb(225,180,4)"/><text x="74.00" y="190.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.48%)</title><rect x="110" y="196" width="18" height="15" fill="rgb(226,100,46)"/><text x="113.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (2 samples, 0.74%)</title><rect x="128" y="148" width="8" height="15" fill="rgb(215,104,0)"/><text x="131.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.37%)</title><rect x="145" y="196" width="4" height="15" fill="rgb(230,61,1)"/><text x="148.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.37%)</title><rect x="145" y="212" width="4" height="15" fill="rgb(210,144,24)"/><text x="148.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.85%)</title><rect x="154" y="212" width="22" height="15" fill="rgb(236,120,39)"/><text x="157.00" y="222.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.74%)</title><rect x="167" y="228" width="9" height="15" fill="rgb(234,169,14)"/><text x="170.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (10 samples, 3.70%)</title><rect x="141" y="180" width="43" height="15" fill="rgb(216,205,47)"/><text x="144.00" y="190.50">deci..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.96%)</title><rect x="149" y="196" width="35" height="15" fill="rgb(240,12,37)"/><text x="152.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.74%)</title><rect x="176" y="212" width="8" height="15" fill="rgb(225,42,12)"/><text x="179.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.37%)</title><rect x="184" y="196" width="5" height="15" fill="rgb(235,117,16)"/><text x="187.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.74%)</title><rect x="189" y="196" width="8" height="15" fill="rgb(226,159,9)"/><text x="192.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (2 samples, 0.74%)</title><rect x="202" y="212" width="9" height="15" fill="rgb(251,200,42)"/><text x="205.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:491) (1 samples, 0.37%)</title><rect x="211" y="212" width="4" height="15" fill="rgb(232,104,3)"/><text x="214.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 1.85%)</title><rect x="197" y="196" width="22" height="15" fill="rgb(233,21,5)"/><text x="200.00" y="206.50">c..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.37%)</title><rect x="215" y="212" width="4" height="15" fill="rgb(240,176,24)"/><text x="218.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.37%)</title><rect x="224" y="212" width="4" height="15" fill="rgb(245,160,4)"/><text x="227.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 2.96%)</title><rect x="219" y="196" width="35" height="15" fill="rgb(236,173,4)"/><text x="222.00" y="206.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (6 samples, 2.22%)</title><rect x="228" y="212" width="26" height="15" fill="rgb(222,190,39)"/><text x="231.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:186) (5 samples, 1.85%)</title><rect x="232" y="228" width="22" height="15" fill="rgb(250,221,33)"/><text x="235.00" y="238.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.11%)</title><rect x="254" y="196" width="13" height="15" fill="rgb(235,185,0)"/><text x="257.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 1.11%)</title><rect x="254" y="212" width="13" height="15" fill="rgb(219,46,26)"/><text x="257.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1646) (1 samples, 0.37%)</title><rect x="263" y="228" width="4" height="15" fill="rgb(250,3,13)"/><text x="266.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.37%)</title><rect x="267" y="196" width="5" height="15" fill="rgb(254,119,47)"/><text x="270.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.37%)</title><rect x="267" y="212" width="5" height="15" fill="rgb(217,190,16)"/><text x="270.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.74%)</title><rect x="272" y="196" width="8" height="15" fill="rgb(216,156,36)"/><text x="275.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.37%)</title><rect x="276" y="212" width="4" height="15" fill="rgb(232,127,51)"/><text x="279.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (5 samples, 1.85%)</title><rect x="289" y="212" width="22" height="15" fill="rgb(220,66,7)"/><text x="292.00" y="222.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.74%)</title><rect x="302" y="228" width="9" height="15" fill="rgb(244,228,14)"/><text x="305.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (8 samples, 2.96%)</title><rect x="280" y="196" width="35" height="15" fill="rgb(251,151,33)"/><text x="283.00" y="206.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.37%)</title><rect x="311" y="212" width="4" height="15" fill="rgb(218,24,38)"/><text x="314.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 2.22%)</title><rect x="315" y="196" width="27" height="15" fill="rgb(242,93,24)"/><text x="318.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.85%)</title><rect x="320" y="212" width="22" height="15" fill="rgb(242,71,4)"/><text x="323.00" y="222.50">_..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.37%)</title><rect x="337" y="228" width="5" height="15" fill="rgb(229,198,20)"/><text x="340.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 1.48%)</title><rect x="346" y="212" width="18" height="15" fill="rgb(227,205,4)"/><text x="349.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.74%)</title><rect x="364" y="212" width="8" height="15" fill="rgb(207,8,52)"/><text x="367.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.37%)</title><rect x="372" y="212" width="5" height="15" fill="rgb(245,15,3)"/><text x="375.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 3.70%)</title><rect x="342" y="196" width="43" height="15" fill="rgb(220,167,29)"/><text x="345.00" y="206.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.74%)</title><rect x="377" y="212" width="8" height="15" fill="rgb(218,21,44)"/><text x="380.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.37%)</title><rect x="381" y="228" width="4" height="15" fill="rgb(251,22,43)"/><text x="384.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (47 samples, 17.41%)</title><rect x="184" y="180" width="206" height="15" fill="rgb(240,67,33)"/><text x="187.00" y="190.50">decision_function (sklearn/..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.37%)</title><rect x="385" y="196" width="5" height="15" fill="rgb(226,131,33)"/><text x="388.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (2 samples, 0.74%)</title><rect x="390" y="180" width="8" height="15" fill="rgb(236,209,30)"/><text x="393.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.37%)</title><rect x="394" y="196" width="4" height="15" fill="rgb(220,199,18)"/><text x="397.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="403" y="228" width="4" height="15" fill="rgb(226,56,8)"/><text x="406.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.37%)</title><rect x="403" y="244" width="4" height="15" fill="rgb(244,117,30)"/><text x="406.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.37%)</title><rect x="403" y="260" width="4" height="15" fill="rgb(220,125,35)"/><text x="406.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.37%)</title><rect x="407" y="260" width="5" height="15" fill="rgb(205,22,52)"/><text x="410.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.37%)</title><rect x="407" y="276" width="5" height="15" fill="rgb(254,142,24)"/><text x="410.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.74%)</title><rect x="407" y="228" width="9" height="15" fill="rgb(234,208,36)"/><text x="410.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.74%)</title><rect x="407" y="244" width="9" height="15" fill="rgb(205,185,10)"/><text x="410.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.37%)</title><rect x="412" y="260" width="4" height="15" fill="rgb(235,39,44)"/><text x="415.00" y="270.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.37%)</title><rect x="412" y="276" width="4" height="15" fill="rgb(224,92,48)"/><text x="415.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.37%)</title><rect x="412" y="292" width="4" height="15" fill="rgb(233,138,37)"/><text x="415.00" y="302.50"></text></g><g><title>array_add (number.c:330) (4 samples, 1.48%)</title><rect x="403" y="196" width="17" height="15" fill="rgb(216,75,27)"/><text x="406.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.48%)</title><rect x="403" y="212" width="17" height="15" fill="rgb(233,116,50)"/><text x="406.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="416" y="228" width="4" height="15" fill="rgb(238,154,27)"/><text x="419.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.37%)</title><rect x="416" y="244" width="4" height="15" fill="rgb(245,149,31)"/><text x="419.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.37%)</title><rect x="416" y="260" width="4" height="15" fill="rgb(207,162,48)"/><text x="419.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.37%)</title><rect x="416" y="276" width="4" height="15" fill="rgb(235,77,14)"/><text x="419.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.37%)</title><rect x="416" y="292" width="4" height="15" fill="rgb(230,224,31)"/><text x="419.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.37%)</title><rect x="416" y="308" width="4" height="15" fill="rgb(219,228,53)"/><text x="419.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="416" y="324" width="4" height="15" fill="rgb(250,22,3)"/><text x="419.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.37%)</title><rect x="416" y="340" width="4" height="15" fill="rgb(209,81,16)"/><text x="419.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.37%)</title><rect x="416" y="356" width="4" height="15" fill="rgb(241,26,20)"/><text x="419.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.37%)</title><rect x="420" y="196" width="5" height="15" fill="rgb(221,135,12)"/><text x="423.00" y="206.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.37%)</title><rect x="425" y="196" width="4" height="15" fill="rgb(239,95,29)"/><text x="428.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (1 samples, 0.37%)</title><rect x="433" y="244" width="5" height="15" fill="rgb(239,23,33)"/><text x="436.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.37%)</title><rect x="433" y="260" width="5" height="15" fill="rgb(225,70,49)"/><text x="436.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="438" y="260" width="4" height="15" fill="rgb(241,173,30)"/><text x="441.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.37%)</title><rect x="438" y="276" width="4" height="15" fill="rgb(220,203,8)"/><text x="441.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.37%)</title><rect x="438" y="292" width="4" height="15" fill="rgb(234,129,54)"/><text x="441.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.37%)</title><rect x="442" y="260" width="5" height="15" fill="rgb(235,162,25)"/><text x="445.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1642) (1 samples, 0.37%)</title><rect x="442" y="276" width="5" height="15" fill="rgb(221,195,25)"/><text x="445.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.37%)</title><rect x="447" y="276" width="4" height="15" fill="rgb(231,149,51)"/><text x="450.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="451" y="324" width="4" height="15" fill="rgb(240,75,32)"/><text x="454.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (2 samples, 0.74%)</title><rect x="451" y="308" width="9" height="15" fill="rgb(213,186,4)"/><text x="454.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="455" y="324" width="5" height="15" fill="rgb(209,120,31)"/><text x="458.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.37%)</title><rect x="460" y="308" width="4" height="15" fill="rgb(224,183,26)"/><text x="463.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 2.59%)</title><rect x="438" y="244" width="30" height="15" fill="rgb(207,137,50)"/><text x="441.00" y="254.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (5 samples, 1.85%)</title><rect x="447" y="260" width="21" height="15" fill="rgb(206,90,24)"/><text x="450.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (4 samples, 1.48%)</title><rect x="451" y="276" width="17" height="15" fill="rgb(237,222,35)"/><text x="454.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 1.48%)</title><rect x="451" y="292" width="17" height="15" fill="rgb(239,106,38)"/><text x="454.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.37%)</title><rect x="464" y="308" width="4" height="15" fill="rgb(232,182,13)"/><text x="467.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.37%)</title><rect x="464" y="324" width="4" height="15" fill="rgb(207,31,41)"/><text x="467.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="464" y="340" width="4" height="15" fill="rgb(221,201,1)"/><text x="467.00" y="350.50"></text></g><g><title>0x7fe3b4094a19 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="464" y="356" width="4" height="15" fill="rgb(206,165,31)"/><text x="467.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.37%)</title><rect x="464" y="372" width="4" height="15" fill="rgb(246,100,28)"/><text x="467.00" y="382.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.37%)</title><rect x="468" y="244" width="5" height="15" fill="rgb(205,168,22)"/><text x="471.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:392) (1 samples, 0.37%)</title><rect x="468" y="260" width="5" height="15" fill="rgb(246,196,52)"/><text x="471.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.37%)</title><rect x="473" y="244" width="4" height="15" fill="rgb(230,112,5)"/><text x="476.00" y="254.50"></text></g><g><title>0x7fe3b40dc902 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="473" y="260" width="4" height="15" fill="rgb(216,64,22)"/><text x="476.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (12 samples, 4.44%)</title><rect x="429" y="196" width="53" height="15" fill="rgb(207,197,38)"/><text x="432.00" y="206.50">safe_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 4.07%)</title><rect x="433" y="212" width="49" height="15" fill="rgb(250,149,8)"/><text x="436.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (11 samples, 4.07%)</title><rect x="433" y="228" width="49" height="15" fill="rgb(205,60,1)"/><text x="436.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.37%)</title><rect x="477" y="244" width="5" height="15" fill="rgb(247,191,6)"/><text x="480.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.37%)</title><rect x="477" y="260" width="5" height="15" fill="rgb(227,180,6)"/><text x="480.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (79 samples, 29.26%)</title><rect x="141" y="164" width="345" height="15" fill="rgb(251,196,2)"/><text x="144.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base...</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (20 samples, 7.41%)</title><rect x="398" y="180" width="88" height="15" fill="rgb(254,209,14)"/><text x="401.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.37%)</title><rect x="482" y="196" width="4" height="15" fill="rgb(218,189,37)"/><text x="485.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="490" y="180" width="5" height="15" fill="rgb(226,63,10)"/><text x="493.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="490" y="196" width="5" height="15" fill="rgb(217,64,21)"/><text x="493.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.37%)</title><rect x="490" y="212" width="5" height="15" fill="rgb(249,146,8)"/><text x="493.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.37%)</title><rect x="490" y="228" width="5" height="15" fill="rgb(244,164,41)"/><text x="493.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.37%)</title><rect x="490" y="244" width="5" height="15" fill="rgb(230,57,25)"/><text x="493.00" y="254.50"></text></g><g><title>0x7fe3b41baff0 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="490" y="260" width="5" height="15" fill="rgb(217,186,45)"/><text x="493.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="495" y="196" width="4" height="15" fill="rgb(249,136,4)"/><text x="498.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.37%)</title><rect x="495" y="212" width="4" height="15" fill="rgb(243,107,52)"/><text x="498.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="499" y="196" width="4" height="15" fill="rgb(243,173,3)"/><text x="502.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.37%)</title><rect x="499" y="212" width="4" height="15" fill="rgb(212,143,9)"/><text x="502.00" y="222.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 0.74%)</title><rect x="503" y="260" width="9" height="15" fill="rgb(235,140,13)"/><text x="506.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.74%)</title><rect x="503" y="276" width="9" height="15" fill="rgb(250,183,21)"/><text x="506.00" y="286.50"></text></g><g><title>0x7fe3b40947c2 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="508" y="292" width="4" height="15" fill="rgb(236,193,15)"/><text x="511.00" y="302.50"></text></g><g><title>0x7fe3b40949e8 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="508" y="308" width="4" height="15" fill="rgb(247,185,26)"/><text x="511.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (7 samples, 2.59%)</title><rect x="486" y="164" width="30" height="15" fill="rgb(237,164,21)"/><text x="489.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.85%)</title><rect x="495" y="180" width="21" height="15" fill="rgb(250,117,19)"/><text x="498.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.11%)</title><rect x="503" y="196" width="13" height="15" fill="rgb(227,166,18)"/><text x="506.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 1.11%)</title><rect x="503" y="212" width="13" height="15" fill="rgb(252,144,48)"/><text x="506.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 1.11%)</title><rect x="503" y="228" width="13" height="15" fill="rgb(250,154,54)"/><text x="506.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (3 samples, 1.11%)</title><rect x="503" y="244" width="13" height="15" fill="rgb(245,150,41)"/><text x="506.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.37%)</title><rect x="512" y="260" width="4" height="15" fill="rgb(253,83,37)"/><text x="515.00" y="270.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.74%)</title><rect x="530" y="180" width="8" height="15" fill="rgb(251,124,42)"/><text x="533.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (2 samples, 0.74%)</title><rect x="530" y="196" width="8" height="15" fill="rgb(209,39,38)"/><text x="533.00" y="206.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.37%)</title><rect x="538" y="180" width="5" height="15" fill="rgb(218,94,25)"/><text x="541.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.37%)</title><rect x="547" y="244" width="4" height="15" fill="rgb(241,149,6)"/><text x="550.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 1.11%)</title><rect x="547" y="228" width="13" height="15" fill="rgb(252,201,14)"/><text x="550.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.74%)</title><rect x="551" y="244" width="9" height="15" fill="rgb(218,131,37)"/><text x="554.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.74%)</title><rect x="551" y="260" width="9" height="15" fill="rgb(226,166,15)"/><text x="554.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.74%)</title><rect x="551" y="276" width="9" height="15" fill="rgb(227,70,40)"/><text x="554.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.74%)</title><rect x="551" y="292" width="9" height="15" fill="rgb(229,159,19)"/><text x="554.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.74%)</title><rect x="551" y="308" width="9" height="15" fill="rgb(248,86,8)"/><text x="554.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.37%)</title><rect x="560" y="244" width="5" height="15" fill="rgb(237,74,3)"/><text x="563.00" y="254.50"></text></g><g><title>0x7fe3b32fe930 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="560" y="260" width="5" height="15" fill="rgb(224,172,40)"/><text x="563.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.37%)</title><rect x="565" y="260" width="4" height="15" fill="rgb(236,196,43)"/><text x="568.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.37%)</title><rect x="565" y="276" width="4" height="15" fill="rgb(220,27,7)"/><text x="568.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.37%)</title><rect x="565" y="292" width="4" height="15" fill="rgb(234,111,31)"/><text x="568.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.37%)</title><rect x="565" y="308" width="4" height="15" fill="rgb(254,20,50)"/><text x="568.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1693) (1 samples, 0.37%)</title><rect x="565" y="324" width="4" height="15" fill="rgb(216,116,13)"/><text x="568.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:390) (1 samples, 0.37%)</title><rect x="569" y="292" width="4" height="15" fill="rgb(210,193,4)"/><text x="572.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:195) (1 samples, 0.37%)</title><rect x="573" y="308" width="5" height="15" fill="rgb(215,13,4)"/><text x="576.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 1.11%)</title><rect x="569" y="276" width="13" height="15" fill="rgb(235,164,14)"/><text x="572.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.74%)</title><rect x="573" y="292" width="9" height="15" fill="rgb(206,175,21)"/><text x="576.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="578" y="308" width="4" height="15" fill="rgb(241,124,40)"/><text x="581.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.37%)</title><rect x="578" y="324" width="4" height="15" fill="rgb(246,229,11)"/><text x="581.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.37%)</title><rect x="578" y="340" width="4" height="15" fill="rgb(229,218,46)"/><text x="581.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 3.70%)</title><rect x="543" y="180" width="43" height="15" fill="rgb(237,137,54)"/><text x="546.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 3.70%)</title><rect x="543" y="196" width="43" height="15" fill="rgb(217,167,23)"/><text x="546.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.70%)</title><rect x="543" y="212" width="43" height="15" fill="rgb(220,154,22)"/><text x="546.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 2.22%)</title><rect x="560" y="228" width="26" height="15" fill="rgb(252,59,7)"/><text x="563.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.85%)</title><rect x="565" y="244" width="21" height="15" fill="rgb(241,135,28)"/><text x="568.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.48%)</title><rect x="569" y="260" width="17" height="15" fill="rgb(223,218,33)"/><text x="572.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="582" y="276" width="4" height="15" fill="rgb(206,82,38)"/><text x="585.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.37%)</title><rect x="582" y="292" width="4" height="15" fill="rgb(213,32,10)"/><text x="585.00" y="302.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.37%)</title><rect x="582" y="308" width="4" height="15" fill="rgb(234,34,23)"/><text x="585.00" y="318.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.37%)</title><rect x="582" y="324" width="4" height="15" fill="rgb(237,175,16)"/><text x="585.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="586" y="180" width="5" height="15" fill="rgb(229,20,12)"/><text x="589.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="586" y="196" width="5" height="15" fill="rgb(252,226,22)"/><text x="589.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.37%)</title><rect x="586" y="212" width="5" height="15" fill="rgb(227,151,32)"/><text x="589.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.37%)</title><rect x="586" y="228" width="5" height="15" fill="rgb(233,116,9)"/><text x="589.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.37%)</title><rect x="591" y="228" width="4" height="15" fill="rgb(224,139,50)"/><text x="594.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.37%)</title><rect x="591" y="244" width="4" height="15" fill="rgb(244,98,39)"/><text x="594.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.74%)</title><rect x="591" y="196" width="9" height="15" fill="rgb(216,95,17)"/><text x="594.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.74%)</title><rect x="591" y="212" width="9" height="15" fill="rgb(228,197,43)"/><text x="594.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.37%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(206,48,18)"/><text x="598.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.37%)</title><rect x="595" y="244" width="5" height="15" fill="rgb(232,63,20)"/><text x="598.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.11%)</title><rect x="591" y="180" width="13" height="15" fill="rgb(207,187,20)"/><text x="594.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.37%)</title><rect x="600" y="196" width="4" height="15" fill="rgb(223,96,25)"/><text x="603.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (133 samples, 49.26%)</title><rect x="27" y="132" width="581" height="15" fill="rgb(232,127,21)"/><text x="30.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (108 samples, 40.00%)</title><rect x="136" y="148" width="472" height="15" fill="rgb(215,211,18)"/><text x="139.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 7.78%)</title><rect x="516" y="164" width="92" height="15" fill="rgb(239,9,17)"/><text x="519.00" y="174.50">_predict_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.37%)</title><rect x="604" y="180" width="4" height="15" fill="rgb(207,3,20)"/><text x="607.00" y="190.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:446) (1 samples, 0.37%)</title><rect x="604" y="196" width="4" height="15" fill="rgb(209,187,37)"/><text x="607.00" y="206.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.37%)</title><rect x="608" y="132" width="5" height="15" fill="rgb(232,71,48)"/><text x="611.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:38) (139 samples, 51.48%)</title><rect x="10" y="52" width="607" height="15" fill="rgb(241,138,15)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_floa..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:37) (139 samples, 51.48%)</title><rect x="10" y="68" width="607" height="15" fill="rgb(229,178,4)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_f..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:29) (139 samples, 51.48%)</title><rect x="10" y="84" width="607" height="15" fill="rgb(249,8,25)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:23) (138 samples, 51.11%)</title><rect x="14" y="100" width="603" height="15" fill="rgb(216,139,33)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (136 samples, 50.37%)</title><rect x="23" y="116" width="594" height="15" fill="rgb(246,127,15)"/><text x="26.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="613" y="132" width="4" height="15" fill="rgb(211,163,41)"/><text x="616.00" y="142.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.37%)</title><rect x="621" y="964" width="5" height="15" fill="rgb(254,29,8)"/><text x="624.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.37%)</title><rect x="621" y="980" width="5" height="15" fill="rgb(247,172,34)"/><text x="624.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.37%)</title><rect x="621" y="996" width="5" height="15" fill="rgb(220,9,43)"/><text x="624.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.37%)</title><rect x="621" y="1012" width="5" height="15" fill="rgb(254,136,48)"/><text x="624.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:2) (3 samples, 1.11%)</title><rect x="617" y="148" width="13" height="15" fill="rgb(246,66,0)"/><text x="620.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="164" width="13" height="15" fill="rgb(219,52,39)"/><text x="620.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.11%)</title><rect x="617" y="180" width="13" height="15" fill="rgb(243,145,11)"/><text x="620.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="196" width="13" height="15" fill="rgb(219,66,8)"/><text x="620.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="212" width="13" height="15" fill="rgb(230,50,53)"/><text x="620.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="617" y="228" width="13" height="15" fill="rgb(235,98,8)"/><text x="620.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="617" y="244" width="13" height="15" fill="rgb(213,116,3)"/><text x="620.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="617" y="260" width="13" height="15" fill="rgb(238,113,16)"/><text x="620.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="276" width="13" height="15" fill="rgb(228,29,2)"/><text x="620.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.11%)</title><rect x="617" y="292" width="13" height="15" fill="rgb(239,29,10)"/><text x="620.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="308" width="13" height="15" fill="rgb(207,4,35)"/><text x="620.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="617" y="324" width="13" height="15" fill="rgb(210,73,37)"/><text x="620.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="617" y="340" width="13" height="15" fill="rgb(225,48,3)"/><text x="620.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="617" y="356" width="13" height="15" fill="rgb(232,64,27)"/><text x="620.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="372" width="13" height="15" fill="rgb(207,96,31)"/><text x="620.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.11%)</title><rect x="617" y="388" width="13" height="15" fill="rgb(232,2,50)"/><text x="620.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="404" width="13" height="15" fill="rgb(243,215,41)"/><text x="620.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="617" y="420" width="13" height="15" fill="rgb(249,143,36)"/><text x="620.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="617" y="436" width="13" height="15" fill="rgb(239,177,25)"/><text x="620.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="617" y="452" width="13" height="15" fill="rgb(217,180,39)"/><text x="620.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="468" width="13" height="15" fill="rgb(237,124,38)"/><text x="620.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.11%)</title><rect x="617" y="484" width="13" height="15" fill="rgb(206,50,49)"/><text x="620.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="500" width="13" height="15" fill="rgb(250,31,16)"/><text x="620.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="617" y="516" width="13" height="15" fill="rgb(226,210,41)"/><text x="620.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="617" y="532" width="13" height="15" fill="rgb(216,89,0)"/><text x="620.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="617" y="548" width="13" height="15" fill="rgb(213,8,44)"/><text x="620.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="564" width="13" height="15" fill="rgb(215,58,0)"/><text x="620.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.11%)</title><rect x="617" y="580" width="13" height="15" fill="rgb(247,193,49)"/><text x="620.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="596" width="13" height="15" fill="rgb(222,99,50)"/><text x="620.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.11%)</title><rect x="617" y="612" width="13" height="15" fill="rgb(249,200,36)"/><text x="620.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="628" width="13" height="15" fill="rgb(215,183,45)"/><text x="620.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="644" width="13" height="15" fill="rgb(234,167,29)"/><text x="620.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="617" y="660" width="13" height="15" fill="rgb(231,49,10)"/><text x="620.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="617" y="676" width="13" height="15" fill="rgb(221,146,22)"/><text x="620.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="617" y="692" width="13" height="15" fill="rgb(253,114,21)"/><text x="620.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="708" width="13" height="15" fill="rgb(222,209,17)"/><text x="620.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.11%)</title><rect x="617" y="724" width="13" height="15" fill="rgb(236,160,6)"/><text x="620.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="617" y="740" width="13" height="15" fill="rgb(249,93,16)"/><text x="620.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="617" y="756" width="13" height="15" fill="rgb(225,141,19)"/><text x="620.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="617" y="772" width="13" height="15" fill="rgb(234,204,13)"/><text x="620.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="617" y="788" width="13" height="15" fill="rgb(241,38,27)"/><text x="620.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="617" y="804" width="13" height="15" fill="rgb(210,52,23)"/><text x="620.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.11%)</title><rect x="617" y="820" width="13" height="15" fill="rgb(231,156,50)"/><text x="620.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.11%)</title><rect x="617" y="836" width="13" height="15" fill="rgb(205,219,34)"/><text x="620.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 1.11%)</title><rect x="617" y="852" width="13" height="15" fill="rgb(215,29,12)"/><text x="620.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 1.11%)</title><rect x="617" y="868" width="13" height="15" fill="rgb(241,198,0)"/><text x="620.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 1.11%)</title><rect x="617" y="884" width="13" height="15" fill="rgb(242,70,3)"/><text x="620.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 1.11%)</title><rect x="617" y="900" width="13" height="15" fill="rgb(241,11,5)"/><text x="620.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 1.11%)</title><rect x="617" y="916" width="13" height="15" fill="rgb(233,73,53)"/><text x="620.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.74%)</title><rect x="621" y="932" width="9" height="15" fill="rgb(246,227,36)"/><text x="624.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.74%)</title><rect x="621" y="948" width="9" height="15" fill="rgb(217,27,24)"/><text x="624.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.37%)</title><rect x="626" y="964" width="4" height="15" fill="rgb(213,129,2)"/><text x="629.00" y="974.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.37%)</title><rect x="630" y="868" width="4" height="15" fill="rgb(246,172,36)"/><text x="633.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="884" width="4" height="15" fill="rgb(227,38,52)"/><text x="633.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="900" width="4" height="15" fill="rgb(215,142,36)"/><text x="633.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="916" width="4" height="15" fill="rgb(218,7,45)"/><text x="633.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="932" width="4" height="15" fill="rgb(208,141,52)"/><text x="633.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="948" width="4" height="15" fill="rgb(218,175,7)"/><text x="633.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.37%)</title><rect x="630" y="964" width="4" height="15" fill="rgb(238,77,41)"/><text x="633.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="980" width="4" height="15" fill="rgb(242,188,6)"/><text x="633.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="996" width="4" height="15" fill="rgb(251,46,48)"/><text x="633.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1012" width="4" height="15" fill="rgb(251,20,2)"/><text x="633.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1028" width="4" height="15" fill="rgb(233,113,4)"/><text x="633.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1044" width="4" height="15" fill="rgb(213,186,43)"/><text x="633.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.37%)</title><rect x="630" y="1060" width="4" height="15" fill="rgb(210,54,37)"/><text x="633.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1076" width="4" height="15" fill="rgb(228,180,16)"/><text x="633.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1092" width="4" height="15" fill="rgb(221,10,43)"/><text x="633.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1108" width="4" height="15" fill="rgb(209,145,48)"/><text x="633.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1124" width="4" height="15" fill="rgb(241,112,29)"/><text x="633.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1140" width="4" height="15" fill="rgb(216,69,40)"/><text x="633.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.37%)</title><rect x="630" y="1156" width="4" height="15" fill="rgb(220,63,18)"/><text x="633.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1172" width="4" height="15" fill="rgb(247,14,53)"/><text x="633.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1188" width="4" height="15" fill="rgb(246,72,47)"/><text x="633.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1204" width="4" height="15" fill="rgb(224,144,9)"/><text x="633.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1220" width="4" height="15" fill="rgb(242,67,13)"/><text x="633.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1236" width="4" height="15" fill="rgb(213,208,16)"/><text x="633.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.37%)</title><rect x="630" y="1252" width="4" height="15" fill="rgb(239,25,13)"/><text x="633.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1268" width="4" height="15" fill="rgb(210,207,15)"/><text x="633.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1284" width="4" height="15" fill="rgb(230,135,8)"/><text x="633.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1300" width="4" height="15" fill="rgb(219,115,47)"/><text x="633.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1316" width="4" height="15" fill="rgb(254,17,17)"/><text x="633.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1332" width="4" height="15" fill="rgb(223,72,17)"/><text x="633.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.37%)</title><rect x="630" y="1348" width="4" height="15" fill="rgb(247,21,47)"/><text x="633.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1364" width="4" height="15" fill="rgb(247,72,53)"/><text x="633.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1380" width="4" height="15" fill="rgb(244,185,8)"/><text x="633.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1396" width="4" height="15" fill="rgb(248,11,13)"/><text x="633.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1412" width="4" height="15" fill="rgb(243,42,12)"/><text x="633.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1428" width="4" height="15" fill="rgb(246,53,5)"/><text x="633.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.37%)</title><rect x="630" y="1444" width="4" height="15" fill="rgb(231,153,3)"/><text x="633.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1460" width="4" height="15" fill="rgb(213,8,21)"/><text x="633.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1476" width="4" height="15" fill="rgb(246,222,35)"/><text x="633.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1492" width="4" height="15" fill="rgb(210,11,1)"/><text x="633.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1508" width="4" height="15" fill="rgb(221,107,2)"/><text x="633.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1524" width="4" height="15" fill="rgb(207,22,50)"/><text x="633.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.37%)</title><rect x="630" y="1540" width="4" height="15" fill="rgb(222,90,12)"/><text x="633.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1556" width="4" height="15" fill="rgb(208,120,16)"/><text x="633.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1572" width="4" height="15" fill="rgb(226,2,0)"/><text x="633.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1588" width="4" height="15" fill="rgb(216,150,9)"/><text x="633.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1604" width="4" height="15" fill="rgb(237,104,19)"/><text x="633.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1620" width="4" height="15" fill="rgb(231,215,0)"/><text x="633.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.37%)</title><rect x="630" y="1636" width="4" height="15" fill="rgb(235,208,28)"/><text x="633.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1652" width="4" height="15" fill="rgb(235,108,17)"/><text x="633.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1668" width="4" height="15" fill="rgb(246,126,8)"/><text x="633.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1684" width="4" height="15" fill="rgb(246,85,18)"/><text x="633.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1700" width="4" height="15" fill="rgb(244,181,16)"/><text x="633.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1716" width="4" height="15" fill="rgb(212,62,41)"/><text x="633.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.37%)</title><rect x="630" y="1732" width="4" height="15" fill="rgb(211,215,43)"/><text x="633.00" y="1742.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="630" y="1748" width="4" height="15" fill="rgb(208,16,29)"/><text x="633.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1764" width="4" height="15" fill="rgb(247,71,15)"/><text x="633.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="630" y="1780" width="4" height="15" fill="rgb(214,218,29)"/><text x="633.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="630" y="1796" width="4" height="15" fill="rgb(232,76,36)"/><text x="633.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="630" y="1812" width="4" height="15" fill="rgb(237,168,10)"/><text x="633.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="630" y="1828" width="4" height="15" fill="rgb(233,128,5)"/><text x="633.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="630" y="1844" width="4" height="15" fill="rgb(229,204,0)"/><text x="633.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.37%)</title><rect x="630" y="1860" width="4" height="15" fill="rgb(232,169,17)"/><text x="633.00" y="1870.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.37%)</title><rect x="630" y="1876" width="4" height="15" fill="rgb(210,170,49)"/><text x="633.00" y="1886.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.37%)</title><rect x="630" y="1892" width="4" height="15" fill="rgb(245,0,35)"/><text x="633.00" y="1902.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.37%)</title><rect x="630" y="1908" width="4" height="15" fill="rgb(227,173,8)"/><text x="633.00" y="1918.50"></text></g><g><title>search (re.py:183) (1 samples, 0.37%)</title><rect x="630" y="1924" width="4" height="15" fill="rgb(205,128,32)"/><text x="633.00" y="1934.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.37%)</title><rect x="630" y="1940" width="4" height="15" fill="rgb(251,193,45)"/><text x="633.00" y="1950.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.37%)</title><rect x="630" y="1956" width="4" height="15" fill="rgb(254,131,23)"/><text x="633.00" y="1966.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.37%)</title><rect x="630" y="1972" width="4" height="15" fill="rgb(206,220,1)"/><text x="633.00" y="1982.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="630" y="1988" width="4" height="15" fill="rgb(222,149,5)"/><text x="633.00" y="1998.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.37%)</title><rect x="630" y="2004" width="4" height="15" fill="rgb(218,104,29)"/><text x="633.00" y="2014.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.37%)</title><rect x="630" y="2020" width="4" height="15" fill="rgb(233,77,41)"/><text x="633.00" y="2030.50"></text></g><g><title>__next (sre_parse.py:248) (1 samples, 0.37%)</title><rect x="630" y="2036" width="4" height="15" fill="rgb(242,191,39)"/><text x="633.00" y="2046.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.74%)</title><rect x="630" y="292" width="9" height="15" fill="rgb(208,182,4)"/><text x="633.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="630" y="308" width="9" height="15" fill="rgb(212,165,34)"/><text x="633.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="630" y="324" width="9" height="15" fill="rgb(247,14,47)"/><text x="633.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="630" y="340" width="9" height="15" fill="rgb(218,195,54)"/><text x="633.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="630" y="356" width="9" height="15" fill="rgb(251,174,38)"/><text x="633.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="630" y="372" width="9" height="15" fill="rgb(246,51,39)"/><text x="633.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.74%)</title><rect x="630" y="388" width="9" height="15" fill="rgb(231,178,27)"/><text x="633.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="630" y="404" width="9" height="15" fill="rgb(229,108,33)"/><text x="633.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="630" y="420" width="9" height="15" fill="rgb(233,191,5)"/><text x="633.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="630" y="436" width="9" height="15" fill="rgb(249,1,17)"/><text x="633.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="630" y="452" width="9" height="15" fill="rgb(229,45,17)"/><text x="633.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="630" y="468" width="9" height="15" fill="rgb(254,117,51)"/><text x="633.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.74%)</title><rect x="630" y="484" width="9" height="15" fill="rgb(205,168,13)"/><text x="633.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="630" y="500" width="9" height="15" fill="rgb(242,14,1)"/><text x="633.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="630" y="516" width="9" height="15" fill="rgb(250,39,53)"/><text x="633.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="630" y="532" width="9" height="15" fill="rgb(215,224,30)"/><text x="633.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="630" y="548" width="9" height="15" fill="rgb(238,195,43)"/><text x="633.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="630" y="564" width="9" height="15" fill="rgb(223,104,25)"/><text x="633.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.74%)</title><rect x="630" y="580" width="9" height="15" fill="rgb(250,78,13)"/><text x="633.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="630" y="596" width="9" height="15" fill="rgb(230,20,46)"/><text x="633.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="630" y="612" width="9" height="15" fill="rgb(244,52,53)"/><text x="633.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="630" y="628" width="9" height="15" fill="rgb(248,96,50)"/><text x="633.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="630" y="644" width="9" height="15" fill="rgb(252,222,40)"/><text x="633.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="630" y="660" width="9" height="15" fill="rgb(210,64,11)"/><text x="633.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.74%)</title><rect x="630" y="676" width="9" height="15" fill="rgb(220,110,47)"/><text x="633.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="630" y="692" width="9" height="15" fill="rgb(221,154,43)"/><text x="633.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="630" y="708" width="9" height="15" fill="rgb(235,140,25)"/><text x="633.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="630" y="724" width="9" height="15" fill="rgb(208,60,22)"/><text x="633.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="630" y="740" width="9" height="15" fill="rgb(220,217,44)"/><text x="633.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="630" y="756" width="9" height="15" fill="rgb(252,141,22)"/><text x="633.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.74%)</title><rect x="630" y="772" width="9" height="15" fill="rgb(232,67,52)"/><text x="633.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.74%)</title><rect x="630" y="788" width="9" height="15" fill="rgb(245,17,5)"/><text x="633.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.74%)</title><rect x="630" y="804" width="9" height="15" fill="rgb(213,73,41)"/><text x="633.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.74%)</title><rect x="630" y="820" width="9" height="15" fill="rgb(240,113,17)"/><text x="633.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.74%)</title><rect x="630" y="836" width="9" height="15" fill="rgb(242,187,17)"/><text x="633.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.74%)</title><rect x="630" y="852" width="9" height="15" fill="rgb(224,184,27)"/><text x="633.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.37%)</title><rect x="634" y="868" width="5" height="15" fill="rgb(224,18,31)"/><text x="637.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="634" y="884" width="5" height="15" fill="rgb(228,219,43)"/><text x="637.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="634" y="900" width="5" height="15" fill="rgb(253,216,2)"/><text x="637.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="634" y="916" width="5" height="15" fill="rgb(205,22,14)"/><text x="637.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="634" y="932" width="5" height="15" fill="rgb(223,29,27)"/><text x="637.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.37%)</title><rect x="634" y="948" width="5" height="15" fill="rgb(244,145,28)"/><text x="637.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.37%)</title><rect x="634" y="964" width="5" height="15" fill="rgb(245,52,38)"/><text x="637.00" y="974.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.37%)</title><rect x="639" y="1044" width="4" height="15" fill="rgb(250,68,29)"/><text x="642.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="639" y="1060" width="4" height="15" fill="rgb(248,16,47)"/><text x="642.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="639" y="1076" width="4" height="15" fill="rgb(239,75,11)"/><text x="642.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="639" y="1092" width="4" height="15" fill="rgb(229,219,15)"/><text x="642.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="639" y="1108" width="4" height="15" fill="rgb(210,4,19)"/><text x="642.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="639" y="1124" width="4" height="15" fill="rgb(236,127,42)"/><text x="642.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:15) (1 samples, 0.37%)</title><rect x="639" y="1140" width="4" height="15" fill="rgb(228,64,42)"/><text x="642.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="639" y="1156" width="4" height="15" fill="rgb(206,174,23)"/><text x="642.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="639" y="1172" width="4" height="15" fill="rgb(205,141,9)"/><text x="642.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="639" y="1188" width="4" height="15" fill="rgb(207,14,51)"/><text x="642.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="639" y="1204" width="4" height="15" fill="rgb(209,21,49)"/><text x="642.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="639" y="1220" width="4" height="15" fill="rgb(233,113,21)"/><text x="642.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pydoc.py:1072) (1 samples, 0.37%)</title><rect x="639" y="1236" width="4" height="15" fill="rgb(220,84,47)"/><text x="642.00" y="1246.50"></text></g><g><title>TextDoc (pydoc.py:1084) (1 samples, 0.37%)</title><rect x="639" y="1252" width="4" height="15" fill="rgb(218,110,26)"/><text x="642.00" y="1262.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (4 samples, 1.48%)</title><rect x="639" y="820" width="17" height="15" fill="rgb(223,57,14)"/><text x="642.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.48%)</title><rect x="639" y="836" width="17" height="15" fill="rgb(205,200,47)"/><text x="642.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="639" y="852" width="17" height="15" fill="rgb(227,3,29)"/><text x="642.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="639" y="868" width="17" height="15" fill="rgb(221,192,47)"/><text x="642.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.48%)</title><rect x="639" y="884" width="17" height="15" fill="rgb(212,32,10)"/><text x="642.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.48%)</title><rect x="639" y="900" width="17" height="15" fill="rgb(230,205,28)"/><text x="642.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.48%)</title><rect x="639" y="916" width="17" height="15" fill="rgb(213,85,27)"/><text x="642.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="639" y="932" width="17" height="15" fill="rgb(247,11,47)"/><text x="642.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (4 samples, 1.48%)</title><rect x="639" y="948" width="17" height="15" fill="rgb(231,202,34)"/><text x="642.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="639" y="964" width="17" height="15" fill="rgb(217,84,18)"/><text x="642.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.48%)</title><rect x="639" y="980" width="17" height="15" fill="rgb(240,86,27)"/><text x="642.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.48%)</title><rect x="639" y="996" width="17" height="15" fill="rgb(243,68,20)"/><text x="642.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.48%)</title><rect x="639" y="1012" width="17" height="15" fill="rgb(226,104,40)"/><text x="642.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="639" y="1028" width="17" height="15" fill="rgb(239,73,36)"/><text x="642.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (3 samples, 1.11%)</title><rect x="643" y="1044" width="13" height="15" fill="rgb(214,199,44)"/><text x="646.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="643" y="1060" width="13" height="15" fill="rgb(236,23,50)"/><text x="646.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="643" y="1076" width="13" height="15" fill="rgb(254,54,45)"/><text x="646.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="643" y="1092" width="13" height="15" fill="rgb(247,176,53)"/><text x="646.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="643" y="1108" width="13" height="15" fill="rgb(238,178,17)"/><text x="646.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="643" y="1124" width="13" height="15" fill="rgb(228,138,11)"/><text x="646.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (3 samples, 1.11%)</title><rect x="643" y="1140" width="13" height="15" fill="rgb(215,87,40)"/><text x="646.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="643" y="1156" width="13" height="15" fill="rgb(230,211,16)"/><text x="646.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="643" y="1172" width="13" height="15" fill="rgb(222,119,36)"/><text x="646.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="643" y="1188" width="13" height="15" fill="rgb(218,17,10)"/><text x="646.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="643" y="1204" width="13" height="15" fill="rgb(253,123,45)"/><text x="646.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="643" y="1220" width="13" height="15" fill="rgb(224,98,11)"/><text x="646.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (3 samples, 1.11%)</title><rect x="643" y="1236" width="13" height="15" fill="rgb(214,152,53)"/><text x="646.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="643" y="1252" width="13" height="15" fill="rgb(252,190,34)"/><text x="646.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="643" y="1268" width="13" height="15" fill="rgb(208,211,27)"/><text x="646.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="643" y="1284" width="13" height="15" fill="rgb(231,85,5)"/><text x="646.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="643" y="1300" width="13" height="15" fill="rgb(220,3,3)"/><text x="646.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="643" y="1316" width="13" height="15" fill="rgb(216,151,35)"/><text x="646.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (3 samples, 1.11%)</title><rect x="643" y="1332" width="13" height="15" fill="rgb(237,13,6)"/><text x="646.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="643" y="1348" width="13" height="15" fill="rgb(234,122,3)"/><text x="646.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.11%)</title><rect x="643" y="1364" width="13" height="15" fill="rgb(215,198,20)"/><text x="646.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="643" y="1380" width="13" height="15" fill="rgb(210,225,27)"/><text x="646.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="643" y="1396" width="13" height="15" fill="rgb(214,126,13)"/><text x="646.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="643" y="1412" width="13" height="15" fill="rgb(220,111,18)"/><text x="646.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="643" y="1428" width="13" height="15" fill="rgb(207,98,13)"/><text x="646.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="643" y="1444" width="13" height="15" fill="rgb(232,143,46)"/><text x="646.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="643" y="1460" width="13" height="15" fill="rgb(224,113,1)"/><text x="646.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:6) (3 samples, 1.11%)</title><rect x="643" y="1476" width="13" height="15" fill="rgb(237,85,7)"/><text x="646.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="643" y="1492" width="13" height="15" fill="rgb(242,71,27)"/><text x="646.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="643" y="1508" width="13" height="15" fill="rgb(225,192,19)"/><text x="646.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="643" y="1524" width="13" height="15" fill="rgb(252,133,22)"/><text x="646.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (3 samples, 1.11%)</title><rect x="643" y="1540" width="13" height="15" fill="rgb(237,22,16)"/><text x="646.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (3 samples, 1.11%)</title><rect x="643" y="1556" width="13" height="15" fill="rgb(230,31,29)"/><text x="646.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (3 samples, 1.11%)</title><rect x="643" y="1572" width="13" height="15" fill="rgb(250,42,24)"/><text x="646.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (5 samples, 1.85%)</title><rect x="639" y="532" width="22" height="15" fill="rgb(215,61,53)"/><text x="642.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.85%)</title><rect x="639" y="548" width="22" height="15" fill="rgb(216,143,39)"/><text x="642.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.85%)</title><rect x="639" y="564" width="22" height="15" fill="rgb(233,4,23)"/><text x="642.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.85%)</title><rect x="639" y="580" width="22" height="15" fill="rgb(244,135,48)"/><text x="642.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.85%)</title><rect x="639" y="596" width="22" height="15" fill="rgb(207,195,3)"/><text x="642.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.85%)</title><rect x="639" y="612" width="22" height="15" fill="rgb(210,174,37)"/><text x="642.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 1.85%)</title><rect x="639" y="628" width="22" height="15" fill="rgb(235,6,23)"/><text x="642.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.85%)</title><rect x="639" y="644" width="22" height="15" fill="rgb(241,122,32)"/><text x="642.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.85%)</title><rect x="639" y="660" width="22" height="15" fill="rgb(211,31,36)"/><text x="642.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.85%)</title><rect x="639" y="676" width="22" height="15" fill="rgb(210,127,29)"/><text x="642.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.85%)</title><rect x="639" y="692" width="22" height="15" fill="rgb(237,66,23)"/><text x="642.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.85%)</title><rect x="639" y="708" width="22" height="15" fill="rgb(226,3,34)"/><text x="642.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 1.85%)</title><rect x="639" y="724" width="22" height="15" fill="rgb(207,179,31)"/><text x="642.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.85%)</title><rect x="639" y="740" width="22" height="15" fill="rgb(252,10,40)"/><text x="642.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.85%)</title><rect x="639" y="756" width="22" height="15" fill="rgb(253,57,54)"/><text x="642.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.85%)</title><rect x="639" y="772" width="22" height="15" fill="rgb(241,85,2)"/><text x="642.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.85%)</title><rect x="639" y="788" width="22" height="15" fill="rgb(254,109,30)"/><text x="642.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.85%)</title><rect x="639" y="804" width="22" height="15" fill="rgb(240,208,32)"/><text x="642.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.37%)</title><rect x="656" y="820" width="5" height="15" fill="rgb(239,108,35)"/><text x="659.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="656" y="836" width="5" height="15" fill="rgb(248,217,23)"/><text x="659.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="656" y="852" width="5" height="15" fill="rgb(227,29,49)"/><text x="659.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="656" y="868" width="5" height="15" fill="rgb(211,173,28)"/><text x="659.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="656" y="884" width="5" height="15" fill="rgb(252,164,48)"/><text x="659.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="900" width="5" height="15" fill="rgb(236,139,39)"/><text x="659.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.37%)</title><rect x="656" y="916" width="5" height="15" fill="rgb(237,32,31)"/><text x="659.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="656" y="932" width="5" height="15" fill="rgb(242,107,2)"/><text x="659.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="656" y="948" width="5" height="15" fill="rgb(247,147,9)"/><text x="659.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="656" y="964" width="5" height="15" fill="rgb(213,78,20)"/><text x="659.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="656" y="980" width="5" height="15" fill="rgb(251,115,32)"/><text x="659.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="996" width="5" height="15" fill="rgb(241,90,13)"/><text x="659.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.37%)</title><rect x="656" y="1012" width="5" height="15" fill="rgb(230,49,52)"/><text x="659.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="656" y="1028" width="5" height="15" fill="rgb(226,163,35)"/><text x="659.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="656" y="1044" width="5" height="15" fill="rgb(214,122,1)"/><text x="659.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="656" y="1060" width="5" height="15" fill="rgb(223,221,8)"/><text x="659.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="656" y="1076" width="5" height="15" fill="rgb(233,196,25)"/><text x="659.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="1092" width="5" height="15" fill="rgb(252,110,34)"/><text x="659.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.37%)</title><rect x="656" y="1108" width="5" height="15" fill="rgb(205,81,39)"/><text x="659.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="656" y="1124" width="5" height="15" fill="rgb(227,171,28)"/><text x="659.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="1140" width="5" height="15" fill="rgb(209,43,13)"/><text x="659.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="656" y="1156" width="5" height="15" fill="rgb(243,123,47)"/><text x="659.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="656" y="1172" width="5" height="15" fill="rgb(212,124,17)"/><text x="659.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="656" y="1188" width="5" height="15" fill="rgb(207,49,25)"/><text x="659.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="656" y="1204" width="5" height="15" fill="rgb(241,151,4)"/><text x="659.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="1220" width="5" height="15" fill="rgb(227,140,13)"/><text x="659.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.37%)</title><rect x="656" y="1236" width="5" height="15" fill="rgb(241,60,13)"/><text x="659.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="656" y="1252" width="5" height="15" fill="rgb(231,59,16)"/><text x="659.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="1268" width="5" height="15" fill="rgb(231,55,40)"/><text x="659.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="656" y="1284" width="5" height="15" fill="rgb(207,209,33)"/><text x="659.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="656" y="1300" width="5" height="15" fill="rgb(206,219,34)"/><text x="659.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="656" y="1316" width="5" height="15" fill="rgb(221,167,52)"/><text x="659.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="656" y="1332" width="5" height="15" fill="rgb(235,203,23)"/><text x="659.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="656" y="1348" width="5" height="15" fill="rgb(225,61,29)"/><text x="659.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3034) (1 samples, 0.37%)</title><rect x="656" y="1364" width="5" height="15" fill="rgb(235,149,21)"/><text x="659.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1556) (1 samples, 0.37%)</title><rect x="656" y="1380" width="5" height="15" fill="rgb(206,200,12)"/><text x="659.00" y="1390.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:591) (1 samples, 0.37%)</title><rect x="656" y="1396" width="5" height="15" fill="rgb(248,0,16)"/><text x="659.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:293) (1 samples, 0.37%)</title><rect x="656" y="1412" width="5" height="15" fill="rgb(221,226,22)"/><text x="659.00" y="1422.50"></text></g><g><title>0x7fe3b40fd120 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="656" y="1428" width="5" height="15" fill="rgb(216,100,26)"/><text x="659.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:13) (1 samples, 0.37%)</title><rect x="661" y="532" width="4" height="15" fill="rgb(226,11,12)"/><text x="664.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="661" y="548" width="4" height="15" fill="rgb(217,167,13)"/><text x="664.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="661" y="564" width="4" height="15" fill="rgb(223,170,52)"/><text x="664.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="661" y="580" width="4" height="15" fill="rgb(250,107,40)"/><text x="664.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="661" y="596" width="4" height="15" fill="rgb(240,161,5)"/><text x="664.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="661" y="612" width="4" height="15" fill="rgb(215,12,54)"/><text x="664.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py:26) (1 samples, 0.37%)</title><rect x="661" y="628" width="4" height="15" fill="rgb(236,177,40)"/><text x="664.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="661" y="644" width="4" height="15" fill="rgb(213,7,34)"/><text x="664.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="661" y="660" width="4" height="15" fill="rgb(212,77,3)"/><text x="664.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="661" y="676" width="4" height="15" fill="rgb(252,102,39)"/><text x="664.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="661" y="692" width="4" height="15" fill="rgb(215,128,31)"/><text x="664.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="661" y="708" width="4" height="15" fill="rgb(247,144,53)"/><text x="664.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_search.py:393) (1 samples, 0.37%)</title><rect x="661" y="724" width="4" height="15" fill="rgb(251,193,41)"/><text x="664.00" y="734.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.37%)</title><rect x="665" y="964" width="4" height="15" fill="rgb(216,204,22)"/><text x="668.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="665" y="980" width="4" height="15" fill="rgb(222,157,35)"/><text x="668.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="665" y="996" width="4" height="15" fill="rgb(227,42,20)"/><text x="668.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="665" y="1012" width="4" height="15" fill="rgb(219,67,3)"/><text x="668.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="665" y="1028" width="4" height="15" fill="rgb(249,10,0)"/><text x="668.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="665" y="1044" width="4" height="15" fill="rgb(244,51,31)"/><text x="668.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.37%)</title><rect x="665" y="1060" width="4" height="15" fill="rgb(214,49,9)"/><text x="668.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="665" y="1076" width="4" height="15" fill="rgb(235,1,48)"/><text x="668.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="665" y="1092" width="4" height="15" fill="rgb(212,196,6)"/><text x="668.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="665" y="1108" width="4" height="15" fill="rgb(249,146,31)"/><text x="668.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="665" y="1124" width="4" height="15" fill="rgb(218,20,3)"/><text x="668.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="665" y="1140" width="4" height="15" fill="rgb(239,58,15)"/><text x="668.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.37%)</title><rect x="665" y="1156" width="4" height="15" fill="rgb(226,89,34)"/><text x="668.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="665" y="1172" width="4" height="15" fill="rgb(210,156,30)"/><text x="668.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="665" y="1188" width="4" height="15" fill="rgb(238,29,32)"/><text x="668.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="665" y="1204" width="4" height="15" fill="rgb(237,21,43)"/><text x="668.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="665" y="1220" width="4" height="15" fill="rgb(220,222,17)"/><text x="668.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="665" y="1236" width="4" height="15" fill="rgb(241,215,21)"/><text x="668.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:24) (1 samples, 0.37%)</title><rect x="665" y="1252" width="4" height="15" fill="rgb(209,138,16)"/><text x="668.00" y="1262.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="665" y="1268" width="4" height="15" fill="rgb(247,120,26)"/><text x="668.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="665" y="1284" width="4" height="15" fill="rgb(239,205,44)"/><text x="668.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="665" y="1300" width="4" height="15" fill="rgb(247,6,9)"/><text x="668.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="665" y="1316" width="4" height="15" fill="rgb(235,175,31)"/><text x="668.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="665" y="1332" width="4" height="15" fill="rgb(225,89,49)"/><text x="668.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="665" y="1348" width="4" height="15" fill="rgb(245,21,5)"/><text x="668.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="665" y="1364" width="4" height="15" fill="rgb(222,179,1)"/><text x="668.00" y="1374.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/partial_dependence.py:196) (1 samples, 0.37%)</title><rect x="665" y="1380" width="4" height="15" fill="rgb(230,98,14)"/><text x="668.00" y="1390.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.37%)</title><rect x="669" y="1412" width="5" height="15" fill="rgb(250,180,9)"/><text x="672.00" y="1422.50"></text></g><g><title>new_context (jinja2/runtime.py:67) (1 samples, 0.37%)</title><rect x="669" y="1428" width="5" height="15" fill="rgb(207,20,37)"/><text x="672.00" y="1438.50"></text></g><g><title>root (&lt;template&gt;:47) (1 samples, 0.37%)</title><rect x="674" y="1428" width="4" height="15" fill="rgb(214,197,0)"/><text x="677.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:242) (1 samples, 0.37%)</title><rect x="674" y="1444" width="4" height="15" fill="rgb(232,179,44)"/><text x="677.00" y="1454.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:4) (12 samples, 4.44%)</title><rect x="630" y="148" width="53" height="15" fill="rgb(238,202,15)"/><text x="633.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.44%)</title><rect x="630" y="164" width="53" height="15" fill="rgb(253,142,50)"/><text x="633.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (12 samples, 4.44%)</title><rect x="630" y="180" width="53" height="15" fill="rgb(216,94,0)"/><text x="633.00" y="190.50">_find..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.44%)</title><rect x="630" y="196" width="53" height="15" fill="rgb(241,87,18)"/><text x="633.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.44%)</title><rect x="630" y="212" width="53" height="15" fill="rgb(222,165,37)"/><text x="633.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.44%)</title><rect x="630" y="228" width="53" height="15" fill="rgb(205,123,52)"/><text x="633.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.44%)</title><rect x="630" y="244" width="53" height="15" fill="rgb(228,24,32)"/><text x="633.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.44%)</title><rect x="630" y="260" width="53" height="15" fill="rgb(216,143,6)"/><text x="633.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.44%)</title><rect x="630" y="276" width="53" height="15" fill="rgb(243,152,24)"/><text x="633.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (10 samples, 3.70%)</title><rect x="639" y="292" width="44" height="15" fill="rgb(214,61,32)"/><text x="642.00" y="302.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.70%)</title><rect x="639" y="308" width="44" height="15" fill="rgb(231,4,50)"/><text x="642.00" y="318.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (10 samples, 3.70%)</title><rect x="639" y="324" width="44" height="15" fill="rgb(230,227,8)"/><text x="642.00" y="334.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.70%)</title><rect x="639" y="340" width="44" height="15" fill="rgb(250,141,48)"/><text x="642.00" y="350.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.70%)</title><rect x="639" y="356" width="44" height="15" fill="rgb(246,79,9)"/><text x="642.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.70%)</title><rect x="639" y="372" width="44" height="15" fill="rgb(250,8,7)"/><text x="642.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.70%)</title><rect x="639" y="388" width="44" height="15" fill="rgb(218,102,45)"/><text x="642.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.70%)</title><rect x="639" y="404" width="44" height="15" fill="rgb(253,94,45)"/><text x="642.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.70%)</title><rect x="639" y="420" width="44" height="15" fill="rgb(240,92,16)"/><text x="642.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (10 samples, 3.70%)</title><rect x="639" y="436" width="44" height="15" fill="rgb(251,94,11)"/><text x="642.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.70%)</title><rect x="639" y="452" width="44" height="15" fill="rgb(242,26,42)"/><text x="642.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.70%)</title><rect x="639" y="468" width="44" height="15" fill="rgb(237,198,27)"/><text x="642.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.70%)</title><rect x="639" y="484" width="44" height="15" fill="rgb(227,182,39)"/><text x="642.00" y="494.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.70%)</title><rect x="639" y="500" width="44" height="15" fill="rgb(208,200,52)"/><text x="642.00" y="510.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.70%)</title><rect x="639" y="516" width="44" height="15" fill="rgb(225,227,54)"/><text x="642.00" y="526.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.48%)</title><rect x="665" y="532" width="18" height="15" fill="rgb(233,136,8)"/><text x="668.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="665" y="548" width="18" height="15" fill="rgb(253,168,27)"/><text x="668.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.48%)</title><rect x="665" y="564" width="18" height="15" fill="rgb(209,183,12)"/><text x="668.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.48%)</title><rect x="665" y="580" width="18" height="15" fill="rgb(251,224,50)"/><text x="668.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.48%)</title><rect x="665" y="596" width="18" height="15" fill="rgb(230,58,7)"/><text x="668.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="665" y="612" width="18" height="15" fill="rgb(249,22,4)"/><text x="668.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.48%)</title><rect x="665" y="628" width="18" height="15" fill="rgb(211,135,4)"/><text x="668.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="665" y="644" width="18" height="15" fill="rgb(245,38,12)"/><text x="668.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.48%)</title><rect x="665" y="660" width="18" height="15" fill="rgb(250,199,14)"/><text x="668.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.48%)</title><rect x="665" y="676" width="18" height="15" fill="rgb(215,215,42)"/><text x="668.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.48%)</title><rect x="665" y="692" width="18" height="15" fill="rgb(254,188,32)"/><text x="668.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="665" y="708" width="18" height="15" fill="rgb(251,195,44)"/><text x="668.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.48%)</title><rect x="665" y="724" width="18" height="15" fill="rgb(232,88,31)"/><text x="668.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="665" y="740" width="18" height="15" fill="rgb(211,105,19)"/><text x="668.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.48%)</title><rect x="665" y="756" width="18" height="15" fill="rgb(224,46,28)"/><text x="668.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="665" y="772" width="18" height="15" fill="rgb(214,161,48)"/><text x="668.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="665" y="788" width="18" height="15" fill="rgb(205,134,10)"/><text x="668.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.48%)</title><rect x="665" y="804" width="18" height="15" fill="rgb(205,219,43)"/><text x="668.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.48%)</title><rect x="665" y="820" width="18" height="15" fill="rgb(239,39,22)"/><text x="668.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.48%)</title><rect x="665" y="836" width="18" height="15" fill="rgb(244,116,48)"/><text x="668.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="665" y="852" width="18" height="15" fill="rgb(212,135,51)"/><text x="668.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.48%)</title><rect x="665" y="868" width="18" height="15" fill="rgb(248,16,25)"/><text x="668.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.48%)</title><rect x="665" y="884" width="18" height="15" fill="rgb(244,216,32)"/><text x="668.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.48%)</title><rect x="665" y="900" width="18" height="15" fill="rgb(246,211,15)"/><text x="668.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.48%)</title><rect x="665" y="916" width="18" height="15" fill="rgb(254,0,45)"/><text x="668.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.48%)</title><rect x="665" y="932" width="18" height="15" fill="rgb(229,24,23)"/><text x="668.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.48%)</title><rect x="665" y="948" width="18" height="15" fill="rgb(210,155,33)"/><text x="668.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 1.11%)</title><rect x="669" y="964" width="14" height="15" fill="rgb(227,197,27)"/><text x="672.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.11%)</title><rect x="669" y="980" width="14" height="15" fill="rgb(218,41,39)"/><text x="672.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="669" y="996" width="14" height="15" fill="rgb(227,6,31)"/><text x="672.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="669" y="1012" width="14" height="15" fill="rgb(221,94,38)"/><text x="672.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="669" y="1028" width="14" height="15" fill="rgb(245,110,9)"/><text x="672.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="669" y="1044" width="14" height="15" fill="rgb(224,56,1)"/><text x="672.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="669" y="1060" width="14" height="15" fill="rgb(231,69,16)"/><text x="672.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="669" y="1076" width="14" height="15" fill="rgb(240,11,8)"/><text x="672.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 1.11%)</title><rect x="669" y="1092" width="14" height="15" fill="rgb(208,83,18)"/><text x="672.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.11%)</title><rect x="669" y="1108" width="14" height="15" fill="rgb(211,48,7)"/><text x="672.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="669" y="1124" width="14" height="15" fill="rgb(221,51,33)"/><text x="672.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="669" y="1140" width="14" height="15" fill="rgb(236,141,4)"/><text x="672.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="669" y="1156" width="14" height="15" fill="rgb(225,172,49)"/><text x="672.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="669" y="1172" width="14" height="15" fill="rgb(228,182,36)"/><text x="672.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="669" y="1188" width="14" height="15" fill="rgb(215,125,12)"/><text x="672.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="669" y="1204" width="14" height="15" fill="rgb(210,222,25)"/><text x="672.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 1.11%)</title><rect x="669" y="1220" width="14" height="15" fill="rgb(229,60,40)"/><text x="672.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.11%)</title><rect x="669" y="1236" width="14" height="15" fill="rgb(210,148,8)"/><text x="672.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.11%)</title><rect x="669" y="1252" width="14" height="15" fill="rgb(220,0,50)"/><text x="672.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.11%)</title><rect x="669" y="1268" width="14" height="15" fill="rgb(206,143,10)"/><text x="672.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.11%)</title><rect x="669" y="1284" width="14" height="15" fill="rgb(253,3,51)"/><text x="672.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.11%)</title><rect x="669" y="1300" width="14" height="15" fill="rgb(211,128,2)"/><text x="672.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 1.11%)</title><rect x="669" y="1316" width="14" height="15" fill="rgb(206,105,29)"/><text x="672.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 1.11%)</title><rect x="669" y="1332" width="14" height="15" fill="rgb(249,208,7)"/><text x="672.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 1.11%)</title><rect x="669" y="1348" width="14" height="15" fill="rgb(223,159,44)"/><text x="672.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 1.11%)</title><rect x="669" y="1364" width="14" height="15" fill="rgb(245,209,34)"/><text x="672.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 1.11%)</title><rect x="669" y="1380" width="14" height="15" fill="rgb(206,214,8)"/><text x="672.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 1.11%)</title><rect x="669" y="1396" width="14" height="15" fill="rgb(240,72,7)"/><text x="672.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.74%)</title><rect x="674" y="1412" width="9" height="15" fill="rgb(226,136,4)"/><text x="677.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.37%)</title><rect x="678" y="1428" width="5" height="15" fill="rgb(206,188,40)"/><text x="681.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.37%)</title><rect x="678" y="1444" width="5" height="15" fill="rgb(249,27,20)"/><text x="681.00" y="1454.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.37%)</title><rect x="678" y="1460" width="5" height="15" fill="rgb(212,119,6)"/><text x="681.00" y="1470.50"></text></g><g><title>0x7fe3a242f94d (?) (1 samples, 0.37%)</title><rect x="678" y="1476" width="5" height="15" fill="rgb(205,58,23)"/><text x="681.00" y="1486.50"></text></g><g><title>0x7fe3a24f0612 (?) (1 samples, 0.37%)</title><rect x="678" y="1492" width="5" height="15" fill="rgb(217,198,35)"/><text x="681.00" y="1502.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:4) (16 samples, 5.93%)</title><rect x="617" y="52" width="70" height="15" fill="rgb(226,52,20)"/><text x="620.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 5.93%)</title><rect x="617" y="68" width="70" height="15" fill="rgb(217,102,28)"/><text x="620.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 5.93%)</title><rect x="617" y="84" width="70" height="15" fill="rgb(234,113,15)"/><text x="620.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 5.93%)</title><rect x="617" y="100" width="70" height="15" fill="rgb(209,221,22)"/><text x="620.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 5.93%)</title><rect x="617" y="116" width="70" height="15" fill="rgb(241,50,31)"/><text x="620.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 5.93%)</title><rect x="617" y="132" width="70" height="15" fill="rgb(232,79,0)"/><text x="620.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py:8) (1 samples, 0.37%)</title><rect x="683" y="148" width="4" height="15" fill="rgb(247,97,32)"/><text x="686.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="164" width="4" height="15" fill="rgb(232,166,16)"/><text x="686.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="180" width="4" height="15" fill="rgb(234,224,52)"/><text x="686.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="196" width="4" height="15" fill="rgb(219,90,36)"/><text x="686.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="212" width="4" height="15" fill="rgb(243,224,7)"/><text x="686.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="228" width="4" height="15" fill="rgb(232,97,16)"/><text x="686.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.37%)</title><rect x="683" y="244" width="4" height="15" fill="rgb(222,192,42)"/><text x="686.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="260" width="4" height="15" fill="rgb(218,159,29)"/><text x="686.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="276" width="4" height="15" fill="rgb(230,200,5)"/><text x="686.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="292" width="4" height="15" fill="rgb(217,168,6)"/><text x="686.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="308" width="4" height="15" fill="rgb(233,1,7)"/><text x="686.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="324" width="4" height="15" fill="rgb(215,169,23)"/><text x="686.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.37%)</title><rect x="683" y="340" width="4" height="15" fill="rgb(225,202,42)"/><text x="686.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="356" width="4" height="15" fill="rgb(214,162,28)"/><text x="686.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="683" y="372" width="4" height="15" fill="rgb(241,201,10)"/><text x="686.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="388" width="4" height="15" fill="rgb(210,222,8)"/><text x="686.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="404" width="4" height="15" fill="rgb(232,160,42)"/><text x="686.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="420" width="4" height="15" fill="rgb(245,50,41)"/><text x="686.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="436" width="4" height="15" fill="rgb(238,223,3)"/><text x="686.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="452" width="4" height="15" fill="rgb(231,38,35)"/><text x="686.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="468" width="4" height="15" fill="rgb(233,67,25)"/><text x="686.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.37%)</title><rect x="683" y="484" width="4" height="15" fill="rgb(228,215,47)"/><text x="686.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="500" width="4" height="15" fill="rgb(233,114,38)"/><text x="686.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="516" width="4" height="15" fill="rgb(224,220,2)"/><text x="686.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="532" width="4" height="15" fill="rgb(253,135,42)"/><text x="686.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="548" width="4" height="15" fill="rgb(226,91,21)"/><text x="686.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="564" width="4" height="15" fill="rgb(206,34,50)"/><text x="686.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.37%)</title><rect x="683" y="580" width="4" height="15" fill="rgb(224,196,22)"/><text x="686.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="596" width="4" height="15" fill="rgb(254,191,23)"/><text x="686.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="612" width="4" height="15" fill="rgb(230,13,20)"/><text x="686.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="628" width="4" height="15" fill="rgb(243,27,28)"/><text x="686.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="644" width="4" height="15" fill="rgb(207,57,37)"/><text x="686.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="660" width="4" height="15" fill="rgb(253,228,0)"/><text x="686.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.37%)</title><rect x="683" y="676" width="4" height="15" fill="rgb(232,222,27)"/><text x="686.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="692" width="4" height="15" fill="rgb(212,169,31)"/><text x="686.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="708" width="4" height="15" fill="rgb(221,209,27)"/><text x="686.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="724" width="4" height="15" fill="rgb(229,20,37)"/><text x="686.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="740" width="4" height="15" fill="rgb(224,70,12)"/><text x="686.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="756" width="4" height="15" fill="rgb(222,203,16)"/><text x="686.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.37%)</title><rect x="683" y="772" width="4" height="15" fill="rgb(251,185,32)"/><text x="686.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="788" width="4" height="15" fill="rgb(227,5,27)"/><text x="686.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="804" width="4" height="15" fill="rgb(208,18,34)"/><text x="686.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="820" width="4" height="15" fill="rgb(217,205,47)"/><text x="686.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="836" width="4" height="15" fill="rgb(251,21,53)"/><text x="686.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="852" width="4" height="15" fill="rgb(227,2,39)"/><text x="686.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.37%)</title><rect x="683" y="868" width="4" height="15" fill="rgb(241,178,35)"/><text x="686.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="884" width="4" height="15" fill="rgb(219,77,2)"/><text x="686.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="900" width="4" height="15" fill="rgb(226,61,51)"/><text x="686.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="916" width="4" height="15" fill="rgb(247,186,7)"/><text x="686.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="932" width="4" height="15" fill="rgb(242,179,21)"/><text x="686.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="948" width="4" height="15" fill="rgb(206,1,51)"/><text x="686.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.37%)</title><rect x="683" y="964" width="4" height="15" fill="rgb(220,77,29)"/><text x="686.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="980" width="4" height="15" fill="rgb(226,149,29)"/><text x="686.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="996" width="4" height="15" fill="rgb(251,22,10)"/><text x="686.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="1012" width="4" height="15" fill="rgb(237,41,32)"/><text x="686.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="1028" width="4" height="15" fill="rgb(233,124,17)"/><text x="686.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="1044" width="4" height="15" fill="rgb(206,122,41)"/><text x="686.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.37%)</title><rect x="683" y="1060" width="4" height="15" fill="rgb(230,125,54)"/><text x="686.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="1076" width="4" height="15" fill="rgb(234,186,18)"/><text x="686.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="683" y="1092" width="4" height="15" fill="rgb(239,182,11)"/><text x="686.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="1108" width="4" height="15" fill="rgb(214,79,3)"/><text x="686.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="1124" width="4" height="15" fill="rgb(216,21,8)"/><text x="686.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="1140" width="4" height="15" fill="rgb(252,97,34)"/><text x="686.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="1156" width="4" height="15" fill="rgb(220,17,17)"/><text x="686.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="1172" width="4" height="15" fill="rgb(247,172,8)"/><text x="686.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="1188" width="4" height="15" fill="rgb(233,190,38)"/><text x="686.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.37%)</title><rect x="683" y="1204" width="4" height="15" fill="rgb(230,169,21)"/><text x="686.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="1220" width="4" height="15" fill="rgb(233,70,18)"/><text x="686.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="1236" width="4" height="15" fill="rgb(218,150,6)"/><text x="686.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="1252" width="4" height="15" fill="rgb(245,147,52)"/><text x="686.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="1268" width="4" height="15" fill="rgb(220,223,20)"/><text x="686.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="1284" width="4" height="15" fill="rgb(230,156,26)"/><text x="686.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.37%)</title><rect x="683" y="1300" width="4" height="15" fill="rgb(232,135,6)"/><text x="686.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="683" y="1316" width="4" height="15" fill="rgb(254,207,28)"/><text x="686.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="683" y="1332" width="4" height="15" fill="rgb(236,82,5)"/><text x="686.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="683" y="1348" width="4" height="15" fill="rgb(214,130,39)"/><text x="686.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="683" y="1364" width="4" height="15" fill="rgb(249,143,24)"/><text x="686.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="683" y="1380" width="4" height="15" fill="rgb(247,131,45)"/><text x="686.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:61) (1 samples, 0.37%)</title><rect x="683" y="1396" width="4" height="15" fill="rgb(239,191,48)"/><text x="686.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.37%)</title><rect x="683" y="1412" width="4" height="15" fill="rgb(213,85,18)"/><text x="686.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.37%)</title><rect x="683" y="1428" width="4" height="15" fill="rgb(218,176,0)"/><text x="686.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.37%)</title><rect x="683" y="1444" width="4" height="15" fill="rgb(211,202,1)"/><text x="686.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.37%)</title><rect x="683" y="1460" width="4" height="15" fill="rgb(205,176,13)"/><text x="686.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="683" y="1476" width="4" height="15" fill="rgb(253,189,20)"/><text x="686.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.37%)</title><rect x="683" y="1492" width="4" height="15" fill="rgb(210,134,34)"/><text x="686.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="683" y="1508" width="4" height="15" fill="rgb(236,180,10)"/><text x="686.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:621) (1 samples, 0.37%)</title><rect x="683" y="1524" width="4" height="15" fill="rgb(220,19,8)"/><text x="686.00" y="1534.50"></text></g><g><title>match (sre_parse.py:250) (1 samples, 0.37%)</title><rect x="683" y="1540" width="4" height="15" fill="rgb(208,117,14)"/><text x="686.00" y="1550.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (3 samples, 1.11%)</title><rect x="700" y="148" width="13" height="15" fill="rgb(207,9,20)"/><text x="703.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.37%)</title><rect x="722" y="164" width="4" height="15" fill="rgb(240,165,22)"/><text x="725.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 1.11%)</title><rect x="726" y="180" width="13" height="15" fill="rgb(209,46,26)"/><text x="729.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.37%)</title><rect x="761" y="292" width="5" height="15" fill="rgb(205,198,6)"/><text x="764.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.74%)</title><rect x="761" y="260" width="9" height="15" fill="rgb(240,204,52)"/><text x="764.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.74%)</title><rect x="761" y="276" width="9" height="15" fill="rgb(216,179,35)"/><text x="764.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="766" y="292" width="4" height="15" fill="rgb(241,123,20)"/><text x="769.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.37%)</title><rect x="770" y="260" width="4" height="15" fill="rgb(205,190,9)"/><text x="773.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.37%)</title><rect x="774" y="308" width="5" height="15" fill="rgb(228,197,18)"/><text x="777.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="774" y="324" width="5" height="15" fill="rgb(222,32,10)"/><text x="777.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.37%)</title><rect x="774" y="340" width="5" height="15" fill="rgb(222,187,46)"/><text x="777.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.37%)</title><rect x="774" y="356" width="5" height="15" fill="rgb(243,26,3)"/><text x="777.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.37%)</title><rect x="774" y="372" width="5" height="15" fill="rgb(207,42,19)"/><text x="777.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.37%)</title><rect x="774" y="388" width="5" height="15" fill="rgb(236,164,23)"/><text x="777.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (3 samples, 1.11%)</title><rect x="779" y="324" width="13" height="15" fill="rgb(249,99,30)"/><text x="782.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.37%)</title><rect x="792" y="388" width="4" height="15" fill="rgb(252,71,54)"/><text x="795.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.37%)</title><rect x="792" y="404" width="4" height="15" fill="rgb(215,166,21)"/><text x="795.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.74%)</title><rect x="792" y="340" width="9" height="15" fill="rgb(227,142,17)"/><text x="795.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.74%)</title><rect x="792" y="356" width="9" height="15" fill="rgb(212,114,51)"/><text x="795.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.74%)</title><rect x="792" y="372" width="9" height="15" fill="rgb(211,33,23)"/><text x="795.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2199) (1 samples, 0.37%)</title><rect x="796" y="388" width="5" height="15" fill="rgb(252,84,0)"/><text x="799.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.37%)</title><rect x="801" y="356" width="4" height="15" fill="rgb(235,182,6)"/><text x="804.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.37%)</title><rect x="801" y="372" width="4" height="15" fill="rgb(211,64,53)"/><text x="804.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="801" y="388" width="4" height="15" fill="rgb(246,125,51)"/><text x="804.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:77) (1 samples, 0.37%)</title><rect x="801" y="404" width="4" height="15" fill="rgb(254,0,14)"/><text x="804.00" y="414.50"></text></g><g><title>array_sum (methods.c:2215) (8 samples, 2.96%)</title><rect x="774" y="260" width="35" height="15" fill="rgb(208,34,7)"/><text x="777.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 2.96%)</title><rect x="774" y="276" width="35" height="15" fill="rgb(254,39,54)"/><text x="777.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 2.96%)</title><rect x="774" y="292" width="35" height="15" fill="rgb(206,12,43)"/><text x="777.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.59%)</title><rect x="779" y="308" width="30" height="15" fill="rgb(222,22,8)"/><text x="782.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.48%)</title><rect x="792" y="324" width="17" height="15" fill="rgb(224,95,29)"/><text x="795.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.74%)</title><rect x="801" y="340" width="8" height="15" fill="rgb(215,150,25)"/><text x="804.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.37%)</title><rect x="805" y="356" width="4" height="15" fill="rgb(230,106,13)"/><text x="808.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.37%)</title><rect x="805" y="372" width="4" height="15" fill="rgb(227,195,49)"/><text x="808.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3214) (1 samples, 0.37%)</title><rect x="809" y="276" width="5" height="15" fill="rgb(215,142,50)"/><text x="812.00" y="286.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (14 samples, 5.19%)</title><rect x="757" y="244" width="61" height="15" fill="rgb(240,229,28)"/><text x="760.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.74%)</title><rect x="809" y="260" width="9" height="15" fill="rgb(230,65,38)"/><text x="812.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="814" y="276" width="4" height="15" fill="rgb(225,114,10)"/><text x="817.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.37%)</title><rect x="814" y="292" width="4" height="15" fill="rgb(251,2,27)"/><text x="817.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.37%)</title><rect x="814" y="308" width="4" height="15" fill="rgb(224,171,42)"/><text x="817.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.37%)</title><rect x="814" y="324" width="4" height="15" fill="rgb(222,64,29)"/><text x="817.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.37%)</title><rect x="831" y="260" width="5" height="15" fill="rgb(221,202,45)"/><text x="834.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.37%)</title><rect x="831" y="276" width="5" height="15" fill="rgb(239,102,23)"/><text x="834.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.37%)</title><rect x="831" y="292" width="5" height="15" fill="rgb(219,132,12)"/><text x="834.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="836" y="260" width="4" height="15" fill="rgb(219,60,30)"/><text x="839.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="836" y="276" width="4" height="15" fill="rgb(237,120,26)"/><text x="839.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.37%)</title><rect x="836" y="292" width="4" height="15" fill="rgb(252,106,5)"/><text x="839.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.37%)</title><rect x="836" y="308" width="4" height="15" fill="rgb(211,183,10)"/><text x="839.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="836" y="324" width="4" height="15" fill="rgb(219,99,22)"/><text x="839.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="840" y="260" width="4" height="15" fill="rgb(207,152,37)"/><text x="843.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="840" y="276" width="4" height="15" fill="rgb(246,96,4)"/><text x="843.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.37%)</title><rect x="840" y="292" width="4" height="15" fill="rgb(247,83,24)"/><text x="843.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1720) (1 samples, 0.37%)</title><rect x="840" y="308" width="4" height="15" fill="rgb(254,186,1)"/><text x="843.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 8.15%)</title><rect x="752" y="196" width="97" height="15" fill="rgb(211,34,44)"/><text x="755.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (22 samples, 8.15%)</title><rect x="752" y="212" width="97" height="15" fill="rgb(239,115,22)"/><text x="755.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (22 samples, 8.15%)</title><rect x="752" y="228" width="97" height="15" fill="rgb(237,89,5)"/><text x="755.00" y="238.50">_run (mlpro..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (7 samples, 2.59%)</title><rect x="818" y="244" width="31" height="15" fill="rgb(248,115,36)"/><text x="821.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.37%)</title><rect x="844" y="260" width="5" height="15" fill="rgb(212,64,50)"/><text x="847.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.37%)</title><rect x="844" y="276" width="5" height="15" fill="rgb(247,148,31)"/><text x="847.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:353) (1 samples, 0.37%)</title><rect x="849" y="196" width="4" height="15" fill="rgb(214,38,22)"/><text x="852.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.37%)</title><rect x="853" y="244" width="4" height="15" fill="rgb(213,60,18)"/><text x="856.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (3 samples, 1.11%)</title><rect x="857" y="244" width="13" height="15" fill="rgb(206,59,31)"/><text x="860.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="870" y="340" width="5" height="15" fill="rgb(215,155,26)"/><text x="873.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (7 samples, 2.59%)</title><rect x="853" y="228" width="31" height="15" fill="rgb(252,164,49)"/><text x="856.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (3 samples, 1.11%)</title><rect x="870" y="244" width="14" height="15" fill="rgb(247,158,28)"/><text x="873.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 1.11%)</title><rect x="870" y="260" width="14" height="15" fill="rgb(223,93,32)"/><text x="873.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.11%)</title><rect x="870" y="276" width="14" height="15" fill="rgb(231,5,9)"/><text x="873.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 1.11%)</title><rect x="870" y="292" width="14" height="15" fill="rgb(223,62,24)"/><text x="873.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.11%)</title><rect x="870" y="308" width="14" height="15" fill="rgb(240,209,43)"/><text x="873.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (3 samples, 1.11%)</title><rect x="870" y="324" width="14" height="15" fill="rgb(210,83,30)"/><text x="873.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.74%)</title><rect x="875" y="340" width="9" height="15" fill="rgb(216,50,39)"/><text x="878.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.74%)</title><rect x="875" y="356" width="9" height="15" fill="rgb(239,186,9)"/><text x="878.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.74%)</title><rect x="875" y="372" width="9" height="15" fill="rgb(247,79,10)"/><text x="878.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.37%)</title><rect x="884" y="260" width="4" height="15" fill="rgb(217,161,39)"/><text x="887.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.37%)</title><rect x="884" y="276" width="4" height="15" fill="rgb(236,105,45)"/><text x="887.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.37%)</title><rect x="888" y="260" width="4" height="15" fill="rgb(218,12,36)"/><text x="891.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.37%)</title><rect x="888" y="276" width="4" height="15" fill="rgb(237,40,46)"/><text x="891.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.37%)</title><rect x="892" y="308" width="5" height="15" fill="rgb(205,199,7)"/><text x="895.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1672) (1 samples, 0.37%)</title><rect x="892" y="324" width="5" height="15" fill="rgb(214,183,51)"/><text x="895.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3045) (1 samples, 0.37%)</title><rect x="897" y="324" width="4" height="15" fill="rgb(211,89,2)"/><text x="900.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (5 samples, 1.85%)</title><rect x="884" y="228" width="21" height="15" fill="rgb(208,87,30)"/><text x="887.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.85%)</title><rect x="884" y="244" width="21" height="15" fill="rgb(238,189,5)"/><text x="887.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.11%)</title><rect x="892" y="260" width="13" height="15" fill="rgb(211,170,30)"/><text x="895.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.11%)</title><rect x="892" y="276" width="13" height="15" fill="rgb(225,98,51)"/><text x="895.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.11%)</title><rect x="892" y="292" width="13" height="15" fill="rgb(215,29,31)"/><text x="895.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.74%)</title><rect x="897" y="308" width="8" height="15" fill="rgb(218,137,3)"/><text x="900.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3103) (1 samples, 0.37%)</title><rect x="901" y="324" width="4" height="15" fill="rgb(220,20,46)"/><text x="904.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.37%)</title><rect x="905" y="228" width="5" height="15" fill="rgb(251,104,43)"/><text x="908.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (2 samples, 0.74%)</title><rect x="910" y="228" width="9" height="15" fill="rgb(231,212,49)"/><text x="913.00" y="238.50"></text></g><g><title>0x7fe3b41ba151 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="914" y="244" width="5" height="15" fill="rgb(251,90,45)"/><text x="917.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="923" y="244" width="4" height="15" fill="rgb(249,174,38)"/><text x="926.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="923" y="260" width="4" height="15" fill="rgb(205,14,22)"/><text x="926.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.37%)</title><rect x="923" y="276" width="4" height="15" fill="rgb(236,36,33)"/><text x="926.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.37%)</title><rect x="923" y="292" width="4" height="15" fill="rgb(220,123,12)"/><text x="926.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="923" y="308" width="4" height="15" fill="rgb(230,178,36)"/><text x="926.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.37%)</title><rect x="927" y="324" width="5" height="15" fill="rgb(237,192,0)"/><text x="930.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.74%)</title><rect x="927" y="308" width="9" height="15" fill="rgb(236,198,4)"/><text x="930.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.37%)</title><rect x="932" y="324" width="4" height="15" fill="rgb(241,144,37)"/><text x="935.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="932" y="340" width="4" height="15" fill="rgb(205,33,42)"/><text x="935.00" y="350.50"></text></g><g><title>0x7fe3b40947a5 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="932" y="356" width="4" height="15" fill="rgb(228,160,41)"/><text x="935.00" y="366.50"></text></g><g><title>0x7fe3b40fcd50 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="932" y="372" width="4" height="15" fill="rgb(213,100,46)"/><text x="935.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 1.11%)</title><rect x="927" y="276" width="13" height="15" fill="rgb(207,3,24)"/><text x="930.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 1.11%)</title><rect x="927" y="292" width="13" height="15" fill="rgb(209,32,13)"/><text x="930.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.37%)</title><rect x="936" y="308" width="4" height="15" fill="rgb(213,49,48)"/><text x="939.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.37%)</title><rect x="936" y="324" width="4" height="15" fill="rgb(205,211,30)"/><text x="939.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:356) (1 samples, 0.37%)</title><rect x="936" y="340" width="4" height="15" fill="rgb(245,187,10)"/><text x="939.00" y="350.50"></text></g><g><title>0x7fe396503204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="940" y="324" width="5" height="15" fill="rgb(241,176,0)"/><text x="943.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (7 samples, 2.59%)</title><rect x="919" y="228" width="30" height="15" fill="rgb(220,225,12)"/><text x="922.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.85%)</title><rect x="927" y="244" width="22" height="15" fill="rgb(227,72,11)"/><text x="930.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.85%)</title><rect x="927" y="260" width="22" height="15" fill="rgb(205,147,25)"/><text x="930.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.74%)</title><rect x="940" y="276" width="9" height="15" fill="rgb(212,170,50)"/><text x="943.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.74%)</title><rect x="940" y="292" width="9" height="15" fill="rgb(212,93,16)"/><text x="943.00" y="302.50"></text></g><g><title>0x7fe3964e133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.74%)</title><rect x="940" y="308" width="9" height="15" fill="rgb(223,29,13)"/><text x="943.00" y="318.50"></text></g><g><title>0x7fe39650320c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="945" y="324" width="4" height="15" fill="rgb(247,39,46)"/><text x="948.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.37%)</title><rect x="958" y="244" width="4" height="15" fill="rgb(229,198,12)"/><text x="961.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.37%)</title><rect x="967" y="260" width="4" height="15" fill="rgb(228,163,29)"/><text x="970.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 2.22%)</title><rect x="949" y="228" width="26" height="15" fill="rgb(235,64,42)"/><text x="952.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 1.11%)</title><rect x="962" y="244" width="13" height="15" fill="rgb(249,227,42)"/><text x="965.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.37%)</title><rect x="971" y="260" width="4" height="15" fill="rgb(227,92,2)"/><text x="974.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.37%)</title><rect x="971" y="276" width="4" height="15" fill="rgb(225,188,45)"/><text x="974.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.37%)</title><rect x="971" y="292" width="4" height="15" fill="rgb(222,100,30)"/><text x="974.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.37%)</title><rect x="971" y="308" width="4" height="15" fill="rgb(254,130,3)"/><text x="974.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:51) (1 samples, 0.37%)</title><rect x="971" y="324" width="4" height="15" fill="rgb(219,3,23)"/><text x="974.00" y="334.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3002) (1 samples, 0.37%)</title><rect x="971" y="340" width="4" height="15" fill="rgb(212,102,6)"/><text x="974.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (29 samples, 10.74%)</title><rect x="853" y="196" width="127" height="15" fill="rgb(241,176,18)"/><text x="856.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (29 samples, 10.74%)</title><rect x="853" y="212" width="127" height="15" fill="rgb(221,115,38)"/><text x="856.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.37%)</title><rect x="975" y="228" width="5" height="15" fill="rgb(247,148,18)"/><text x="978.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (56 samples, 20.74%)</title><rect x="739" y="180" width="245" height="15" fill="rgb(220,25,13)"/><text x="742.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.37%)</title><rect x="980" y="196" width="4" height="15" fill="rgb(214,183,27)"/><text x="983.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.37%)</title><rect x="984" y="180" width="4" height="15" fill="rgb(232,211,27)"/><text x="987.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.74%)</title><rect x="988" y="180" width="9" height="15" fill="rgb(205,95,43)"/><text x="991.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (64 samples, 23.70%)</title><rect x="726" y="164" width="280" height="15" fill="rgb(219,161,46)"/><text x="729.00" y="174.50">_run_sequence_runtime (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.74%)</title><rect x="997" y="180" width="9" height="15" fill="rgb(221,105,30)"/><text x="1000.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:45) (77 samples, 28.52%)</title><rect x="687" y="52" width="336" height="15" fill="rgb(234,227,54)"/><text x="690.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:44) (77 samples, 28.52%)</title><rect x="687" y="68" width="336" height="15" fill="rgb(213,132,26)"/><text x="690.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblin..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:29) (77 samples, 28.52%)</title><rect x="687" y="84" width="336" height="15" fill="rgb(219,150,54)"/><text x="690.00" y="94.50">setup_profile (bench_LogisticRegression_libli..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:23) (77 samples, 28.52%)</title><rect x="687" y="100" width="336" height="15" fill="rgb(231,113,44)"/><text x="690.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (76 samples, 28.15%)</title><rect x="691" y="116" width="332" height="15" fill="rgb(211,133,3)"/><text x="694.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (76 samples, 28.15%)</title><rect x="691" y="132" width="332" height="15" fill="rgb(250,26,29)"/><text x="694.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (71 samples, 26.30%)</title><rect x="713" y="148" width="310" height="15" fill="rgb(253,64,50)"/><text x="716.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:4..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.48%)</title><rect x="1006" y="164" width="17" height="15" fill="rgb(217,219,46)"/><text x="1009.00" y="174.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:28) (1 samples, 0.37%)</title><rect x="1023" y="84" width="5" height="15" fill="rgb(208,12,36)"/><text x="1026.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.37%)</title><rect x="1023" y="100" width="5" height="15" fill="rgb(208,102,14)"/><text x="1026.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.37%)</title><rect x="1023" y="116" width="5" height="15" fill="rgb(241,38,9)"/><text x="1026.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.37%)</title><rect x="1023" y="132" width="5" height="15" fill="rgb(208,60,50)"/><text x="1026.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.37%)</title><rect x="1023" y="148" width="5" height="15" fill="rgb(213,52,54)"/><text x="1026.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.37%)</title><rect x="1023" y="164" width="5" height="15" fill="rgb(232,63,44)"/><text x="1026.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1023" y="180" width="5" height="15" fill="rgb(246,128,36)"/><text x="1026.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1023" y="196" width="5" height="15" fill="rgb(253,149,13)"/><text x="1026.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1023" y="212" width="5" height="15" fill="rgb(231,23,14)"/><text x="1026.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1023" y="228" width="5" height="15" fill="rgb(251,218,33)"/><text x="1026.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1023" y="244" width="5" height="15" fill="rgb(215,90,22)"/><text x="1026.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.37%)</title><rect x="1023" y="260" width="5" height="15" fill="rgb(232,33,43)"/><text x="1026.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1023" y="276" width="5" height="15" fill="rgb(224,70,51)"/><text x="1026.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1023" y="292" width="5" height="15" fill="rgb(254,222,20)"/><text x="1026.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1023" y="308" width="5" height="15" fill="rgb(218,130,13)"/><text x="1026.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1023" y="324" width="5" height="15" fill="rgb(240,200,22)"/><text x="1026.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1023" y="340" width="5" height="15" fill="rgb(248,57,13)"/><text x="1026.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.37%)</title><rect x="1023" y="356" width="5" height="15" fill="rgb(233,213,27)"/><text x="1026.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1023" y="372" width="5" height="15" fill="rgb(229,150,33)"/><text x="1026.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1023" y="388" width="5" height="15" fill="rgb(223,26,31)"/><text x="1026.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1023" y="404" width="5" height="15" fill="rgb(208,158,14)"/><text x="1026.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1023" y="420" width="5" height="15" fill="rgb(250,38,25)"/><text x="1026.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1023" y="436" width="5" height="15" fill="rgb(247,0,27)"/><text x="1026.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.37%)</title><rect x="1023" y="452" width="5" height="15" fill="rgb(218,148,45)"/><text x="1026.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1023" y="468" width="5" height="15" fill="rgb(240,222,54)"/><text x="1026.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1023" y="484" width="5" height="15" fill="rgb(240,140,9)"/><text x="1026.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.37%)</title><rect x="1023" y="500" width="5" height="15" fill="rgb(209,71,39)"/><text x="1026.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.37%)</title><rect x="1023" y="516" width="5" height="15" fill="rgb(213,160,54)"/><text x="1026.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.37%)</title><rect x="1023" y="532" width="5" height="15" fill="rgb(225,40,50)"/><text x="1026.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1023" y="548" width="5" height="15" fill="rgb(238,149,38)"/><text x="1026.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="564" width="5" height="15" fill="rgb(226,225,33)"/><text x="1026.00" y="574.50"></text></g><g><title>0x7fe3b4364995 (libdl-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="580" width="5" height="15" fill="rgb(244,4,49)"/><text x="1026.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="596" width="5" height="15" fill="rgb(228,89,53)"/><text x="1026.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="612" width="5" height="15" fill="rgb(212,86,23)"/><text x="1026.00" y="622.50"></text></g><g><title>0x7fe3b4364258 (libdl-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="628" width="5" height="15" fill="rgb(215,134,21)"/><text x="1026.00" y="638.50"></text></g><g><title>0x7fe3b43b1d7a (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="644" width="5" height="15" fill="rgb(219,222,31)"/><text x="1026.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="660" width="5" height="15" fill="rgb(251,179,32)"/><text x="1026.00" y="670.50"></text></g><g><title>0x7fe3b43b2345 (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="676" width="5" height="15" fill="rgb(215,94,2)"/><text x="1026.00" y="686.50"></text></g><g><title>0x7fe3b43aafec (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="692" width="5" height="15" fill="rgb(244,48,16)"/><text x="1026.00" y="702.50"></text></g><g><title>0x7fe3b43a956b (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="708" width="5" height="15" fill="rgb(237,178,42)"/><text x="1026.00" y="718.50"></text></g><g><title>0x7fe3b43a9112 (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1023" y="724" width="5" height="15" fill="rgb(212,131,13)"/><text x="1026.00" y="734.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:22) (1 samples, 0.37%)</title><rect x="1028" y="100" width="4" height="15" fill="rgb(215,93,40)"/><text x="1031.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.74%)</title><rect x="1050" y="148" width="8" height="15" fill="rgb(222,26,51)"/><text x="1053.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 2.22%)</title><rect x="1058" y="196" width="27" height="15" fill="rgb(210,217,36)"/><text x="1061.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.48%)</title><rect x="1067" y="212" width="18" height="15" fill="rgb(238,181,9)"/><text x="1070.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1076" y="228" width="9" height="15" fill="rgb(241,95,0)"/><text x="1079.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1076" y="244" width="9" height="15" fill="rgb(225,148,31)"/><text x="1079.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1076" y="260" width="9" height="15" fill="rgb(245,11,49)"/><text x="1079.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1076" y="276" width="9" height="15" fill="rgb(220,99,27)"/><text x="1079.00" y="286.50"></text></g><g><title>0x7fe374985ff9 (?) (1 samples, 0.37%)</title><rect x="1089" y="212" width="4" height="15" fill="rgb(232,153,0)"/><text x="1092.00" y="222.50"></text></g><g><title>0x7fe374980d3b (?) (1 samples, 0.37%)</title><rect x="1089" y="228" width="4" height="15" fill="rgb(239,188,53)"/><text x="1092.00" y="238.50"></text></g><g><title>0x7fe37497f19d (?) (1 samples, 0.37%)</title><rect x="1089" y="244" width="4" height="15" fill="rgb(210,206,52)"/><text x="1092.00" y="254.50"></text></g><g><title>0x7fe374992850 (?) (1 samples, 0.37%)</title><rect x="1089" y="260" width="4" height="15" fill="rgb(236,160,11)"/><text x="1092.00" y="270.50"></text></g><g><title>0x7fff0cb30a01 ([vdso]) (1 samples, 0.37%)</title><rect x="1093" y="212" width="5" height="15" fill="rgb(221,98,30)"/><text x="1096.00" y="222.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="1098" y="260" width="4" height="15" fill="rgb(248,77,35)"/><text x="1101.00" y="270.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1111" y="356" width="4" height="15" fill="rgb(210,93,36)"/><text x="1114.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1111" y="372" width="4" height="15" fill="rgb(222,33,36)"/><text x="1114.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1111" y="388" width="4" height="15" fill="rgb(253,162,12)"/><text x="1114.00" y="398.50"></text></g><g><title>0x7fe3b40eb6a0 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1111" y="404" width="4" height="15" fill="rgb(225,218,16)"/><text x="1114.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1111" y="340" width="9" height="15" fill="rgb(232,63,2)"/><text x="1114.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetExecutionPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1115" y="356" width="5" height="15" fill="rgb(211,97,24)"/><text x="1118.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1120" y="340" width="8" height="15" fill="rgb(214,106,2)"/><text x="1123.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1120" y="356" width="8" height="15" fill="rgb(234,108,26)"/><text x="1123.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1128" y="452" width="5" height="15" fill="rgb(239,191,38)"/><text x="1131.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1128" y="468" width="5" height="15" fill="rgb(210,100,14)"/><text x="1131.00" y="478.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="340" width="9" height="15" fill="rgb(212,191,51)"/><text x="1131.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="356" width="9" height="15" fill="rgb(240,220,46)"/><text x="1131.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="372" width="9" height="15" fill="rgb(225,17,44)"/><text x="1131.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="388" width="9" height="15" fill="rgb(231,210,44)"/><text x="1131.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="404" width="9" height="15" fill="rgb(228,102,4)"/><text x="1131.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="420" width="9" height="15" fill="rgb(234,213,36)"/><text x="1131.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1128" y="436" width="9" height="15" fill="rgb(240,2,19)"/><text x="1131.00" y="446.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1133" y="452" width="4" height="15" fill="rgb(248,145,0)"/><text x="1136.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.70%)</title><rect x="1102" y="260" width="44" height="15" fill="rgb(246,122,21)"/><text x="1105.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.70%)</title><rect x="1102" y="276" width="44" height="15" fill="rgb(205,57,28)"/><text x="1105.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.33%)</title><rect x="1106" y="292" width="40" height="15" fill="rgb(245,203,28)"/><text x="1109.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.33%)</title><rect x="1106" y="308" width="40" height="15" fill="rgb(253,206,8)"/><text x="1109.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.33%)</title><rect x="1106" y="324" width="40" height="15" fill="rgb(221,94,16)"/><text x="1109.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1137" y="340" width="9" height="15" fill="rgb(215,182,7)"/><text x="1140.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1137" y="356" width="9" height="15" fill="rgb(212,21,45)"/><text x="1140.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1137" y="372" width="9" height="15" fill="rgb(224,190,9)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1137" y="388" width="9" height="15" fill="rgb(254,229,18)"/><text x="1140.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1137" y="404" width="9" height="15" fill="rgb(224,53,14)"/><text x="1140.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="420" width="5" height="15" fill="rgb(237,79,4)"/><text x="1144.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="436" width="5" height="15" fill="rgb(234,128,14)"/><text x="1144.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="452" width="5" height="15" fill="rgb(217,81,5)"/><text x="1144.00" y="462.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="468" width="5" height="15" fill="rgb(226,171,1)"/><text x="1144.00" y="478.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.11%)</title><rect x="1146" y="260" width="13" height="15" fill="rgb(246,152,28)"/><text x="1149.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.37%)</title><rect x="1155" y="276" width="4" height="15" fill="rgb(228,41,30)"/><text x="1158.00" y="286.50"></text></g><g><title>0x7fe3b41bae61 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1155" y="292" width="4" height="15" fill="rgb(205,169,6)"/><text x="1158.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.37%)</title><rect x="1159" y="292" width="4" height="15" fill="rgb(254,129,6)"/><text x="1162.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.37%)</title><rect x="1159" y="308" width="4" height="15" fill="rgb(225,199,53)"/><text x="1162.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="1159" y="260" width="9" height="15" fill="rgb(227,87,46)"/><text x="1162.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.74%)</title><rect x="1159" y="276" width="9" height="15" fill="rgb(205,166,14)"/><text x="1162.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1077) (1 samples, 0.37%)</title><rect x="1163" y="292" width="5" height="15" fill="rgb(214,149,29)"/><text x="1166.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.30%)</title><rect x="1098" y="244" width="74" height="15" fill="rgb(229,71,12)"/><text x="1101.00" y="254.50">onnxrunt..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(232,87,4)"/><text x="1171.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1172" y="244" width="4" height="15" fill="rgb(210,186,52)"/><text x="1175.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1172" y="260" width="4" height="15" fill="rgb(250,63,39)"/><text x="1175.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1172" y="276" width="4" height="15" fill="rgb(253,79,16)"/><text x="1175.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1172" y="292" width="4" height="15" fill="rgb(218,212,9)"/><text x="1175.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (28 samples, 10.37%)</title><rect x="1058" y="164" width="123" height="15" fill="rgb(218,169,40)"/><text x="1061.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (28 samples, 10.37%)</title><rect x="1058" y="180" width="123" height="15" fill="rgb(219,88,7)"/><text x="1061.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (22 samples, 8.15%)</title><rect x="1085" y="196" width="96" height="15" fill="rgb(252,92,40)"/><text x="1088.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 7.04%)</title><rect x="1098" y="212" width="83" height="15" fill="rgb(213,217,45)"/><text x="1101.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 7.04%)</title><rect x="1098" y="228" width="83" height="15" fill="rgb(242,85,38)"/><text x="1101.00" y="238.50">void pybi..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1176" y="244" width="5" height="15" fill="rgb(254,86,39)"/><text x="1179.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (33 samples, 12.22%)</title><rect x="1041" y="132" width="144" height="15" fill="rgb(237,108,40)"/><text x="1044.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (29 samples, 10.74%)</title><rect x="1058" y="148" width="127" height="15" fill="rgb(240,115,27)"/><text x="1061.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.37%)</title><rect x="1181" y="164" width="4" height="15" fill="rgb(252,97,30)"/><text x="1184.00" y="174.50"></text></g><g><title>all (270 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(233,83,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:52) (38 samples, 14.07%)</title><rect x="1023" y="52" width="167" height="15" fill="rgb(219,169,17)"/><text x="1026.00" y="62.50">&lt;module&gt; (bench_Logis..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:51) (38 samples, 14.07%)</title><rect x="1023" y="68" width="167" height="15" fill="rgb(228,108,38)"/><text x="1026.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:29) (37 samples, 13.70%)</title><rect x="1028" y="84" width="162" height="15" fill="rgb(215,7,54)"/><text x="1031.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_nozipmap.py:23) (36 samples, 13.33%)</title><rect x="1032" y="100" width="158" height="15" fill="rgb(245,225,40)"/><text x="1035.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (36 samples, 13.33%)</title><rect x="1032" y="116" width="158" height="15" fill="rgb(218,199,31)"/><text x="1035.00" y="126.50">time_predict (mlprod..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.37%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(227,154,50)"/><text x="1188.00" y="142.50"></text></g><g><title>0x7fe3b41ba134 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(210,62,49)"/><text x="1188.00" y="158.50"></text></g></g></svg>