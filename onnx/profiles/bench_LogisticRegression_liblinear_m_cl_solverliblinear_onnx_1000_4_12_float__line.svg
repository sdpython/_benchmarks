<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:31) (1 samples, 0.14%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(243,56,13)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:11) (1 samples, 0.14%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(241,189,51)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:41) (1 samples, 0.14%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(254,82,13)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.14%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(205,61,39)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py:1542) (1 samples, 0.14%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(234,206,43)"/><text x="13.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py:939) (1 samples, 0.14%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(247,44,49)"/><text x="13.00" y="142.50"></text></g><g><title>0x7f29d9959c54 (?) (1 samples, 0.14%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(209,228,23)"/><text x="13.00" y="158.50"></text></g><g><title>0x7f29d9956060 (?) (1 samples, 0.14%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(237,19,14)"/><text x="13.00" y="174.50"></text></g><g><title>0x7f29d9963d04 (?) (1 samples, 0.14%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(224,102,34)"/><text x="13.00" y="190.50"></text></g><g><title>0x7f29d996105a (?) (1 samples, 0.14%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(213,144,26)"/><text x="13.00" y="206.50"></text></g><g><title>0x7f29d995b64a (?) (1 samples, 0.14%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(245,101,31)"/><text x="13.00" y="222.50"></text></g><g><title>0x7f29d995c075 (?) (1 samples, 0.14%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(229,59,29)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f29d995c016 (?) (1 samples, 0.14%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(248,211,3)"/><text x="13.00" y="254.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:18) (1 samples, 0.14%)</title><rect x="11" y="100" width="2" height="15" fill="rgb(252,27,43)"/><text x="14.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.14%)</title><rect x="11" y="116" width="2" height="15" fill="rgb(219,215,49)"/><text x="14.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.14%)</title><rect x="11" y="132" width="2" height="15" fill="rgb(241,40,37)"/><text x="14.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.14%)</title><rect x="11" y="148" width="2" height="15" fill="rgb(242,44,13)"/><text x="14.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.14%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(214,120,15)"/><text x="14.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.14%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(211,217,23)"/><text x="14.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.14%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(210,217,7)"/><text x="14.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.14%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(249,104,35)"/><text x="14.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.14%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(215,90,6)"/><text x="14.00" y="238.50"></text></g><g><title>0x7f29eb7a49dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="11" y="244" width="2" height="15" fill="rgb(205,10,33)"/><text x="14.00" y="254.50"></text></g><g><title>0x7f29eb7c5279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="11" y="260" width="2" height="15" fill="rgb(206,73,18)"/><text x="14.00" y="270.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (2 samples, 0.28%)</title><rect x="16" y="148" width="3" height="15" fill="rgb(224,29,29)"/><text x="19.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.28%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(241,110,23)"/><text x="19.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.28%)</title><rect x="16" y="180" width="3" height="15" fill="rgb(216,103,54)"/><text x="19.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.14%)</title><rect x="26" y="228" width="2" height="15" fill="rgb(244,70,27)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.56%)</title><rect x="24" y="212" width="7" height="15" fill="rgb(240,166,32)"/><text x="27.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.28%)</title><rect x="28" y="228" width="3" height="15" fill="rgb(205,36,14)"/><text x="31.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (7 samples, 0.98%)</title><rect x="21" y="180" width="12" height="15" fill="rgb(235,212,40)"/><text x="24.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 0.98%)</title><rect x="21" y="196" width="12" height="15" fill="rgb(215,225,47)"/><text x="24.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.14%)</title><rect x="31" y="212" width="2" height="15" fill="rgb(209,138,39)"/><text x="34.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.14%)</title><rect x="31" y="228" width="2" height="15" fill="rgb(226,15,51)"/><text x="34.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.14%)</title><rect x="33" y="196" width="1" height="15" fill="rgb(222,154,34)"/><text x="36.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.28%)</title><rect x="34" y="228" width="4" height="15" fill="rgb(214,187,4)"/><text x="37.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.42%)</title><rect x="34" y="196" width="5" height="15" fill="rgb(222,156,23)"/><text x="37.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.42%)</title><rect x="34" y="212" width="5" height="15" fill="rgb(240,160,38)"/><text x="37.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.14%)</title><rect x="38" y="228" width="1" height="15" fill="rgb(227,137,48)"/><text x="41.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.14%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(246,156,54)"/><text x="42.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.14%)</title><rect x="39" y="212" width="2" height="15" fill="rgb(239,27,48)"/><text x="42.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1756) (1 samples, 0.14%)</title><rect x="39" y="228" width="2" height="15" fill="rgb(233,46,16)"/><text x="42.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.14%)</title><rect x="41" y="196" width="2" height="15" fill="rgb(224,91,42)"/><text x="44.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.14%)</title><rect x="41" y="212" width="2" height="15" fill="rgb(213,80,1)"/><text x="44.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:327) (1 samples, 0.14%)</title><rect x="43" y="228" width="1" height="15" fill="rgb(234,91,14)"/><text x="46.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 0.42%)</title><rect x="43" y="196" width="5" height="15" fill="rgb(225,145,2)"/><text x="46.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.42%)</title><rect x="43" y="212" width="5" height="15" fill="rgb(216,186,48)"/><text x="46.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.28%)</title><rect x="44" y="228" width="4" height="15" fill="rgb(248,99,3)"/><text x="47.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.14%)</title><rect x="48" y="196" width="1" height="15" fill="rgb(239,199,50)"/><text x="51.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.14%)</title><rect x="49" y="196" width="2" height="15" fill="rgb(249,184,10)"/><text x="52.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.14%)</title><rect x="49" y="212" width="2" height="15" fill="rgb(253,205,10)"/><text x="52.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.14%)</title><rect x="49" y="228" width="2" height="15" fill="rgb(236,9,48)"/><text x="52.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (15 samples, 2.10%)</title><rect x="33" y="180" width="24" height="15" fill="rgb(247,77,1)"/><text x="36.00" y="190.50">d..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 0.56%)</title><rect x="51" y="196" width="6" height="15" fill="rgb(251,66,9)"/><text x="54.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.56%)</title><rect x="51" y="212" width="6" height="15" fill="rgb(220,190,34)"/><text x="54.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.14%)</title><rect x="56" y="228" width="1" height="15" fill="rgb(248,223,24)"/><text x="59.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.14%)</title><rect x="57" y="180" width="2" height="15" fill="rgb(239,125,26)"/><text x="60.00" y="190.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.14%)</title><rect x="61" y="260" width="1" height="15" fill="rgb(226,37,48)"/><text x="64.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.14%)</title><rect x="61" y="276" width="1" height="15" fill="rgb(206,210,7)"/><text x="64.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.14%)</title><rect x="61" y="292" width="1" height="15" fill="rgb(230,108,15)"/><text x="64.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.14%)</title><rect x="61" y="308" width="1" height="15" fill="rgb(230,225,24)"/><text x="64.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.14%)</title><rect x="61" y="324" width="1" height="15" fill="rgb(213,187,47)"/><text x="64.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:984) (1 samples, 0.14%)</title><rect x="61" y="340" width="1" height="15" fill="rgb(220,223,47)"/><text x="64.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.14%)</title><rect x="62" y="308" width="2" height="15" fill="rgb(228,14,48)"/><text x="65.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.28%)</title><rect x="64" y="308" width="3" height="15" fill="rgb(205,141,35)"/><text x="67.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.14%)</title><rect x="67" y="308" width="2" height="15" fill="rgb(232,114,42)"/><text x="70.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.14%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(214,148,41)"/><text x="70.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.70%)</title><rect x="62" y="260" width="9" height="15" fill="rgb(251,55,45)"/><text x="65.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.70%)</title><rect x="62" y="276" width="9" height="15" fill="rgb(236,74,42)"/><text x="65.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.70%)</title><rect x="62" y="292" width="9" height="15" fill="rgb(243,76,43)"/><text x="65.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.14%)</title><rect x="69" y="308" width="2" height="15" fill="rgb(243,30,4)"/><text x="72.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.98%)</title><rect x="61" y="212" width="11" height="15" fill="rgb(254,155,2)"/><text x="64.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.98%)</title><rect x="61" y="228" width="11" height="15" fill="rgb(215,205,21)"/><text x="64.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.98%)</title><rect x="61" y="244" width="11" height="15" fill="rgb(238,27,46)"/><text x="64.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.14%)</title><rect x="71" y="260" width="1" height="15" fill="rgb(209,189,11)"/><text x="74.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.14%)</title><rect x="71" y="276" width="1" height="15" fill="rgb(210,114,51)"/><text x="74.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.14%)</title><rect x="71" y="292" width="1" height="15" fill="rgb(244,192,48)"/><text x="74.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.14%)</title><rect x="71" y="308" width="1" height="15" fill="rgb(231,94,54)"/><text x="74.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.14%)</title><rect x="72" y="228" width="2" height="15" fill="rgb(247,102,35)"/><text x="75.00" y="238.50"></text></g><g><title>array_add (number.c:330) (9 samples, 1.26%)</title><rect x="61" y="196" width="15" height="15" fill="rgb(222,129,15)"/><text x="64.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (2 samples, 0.28%)</title><rect x="72" y="212" width="4" height="15" fill="rgb(240,29,38)"/><text x="75.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2029) (1 samples, 0.14%)</title><rect x="74" y="228" width="2" height="15" fill="rgb(254,171,4)"/><text x="77.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.14%)</title><rect x="76" y="196" width="1" height="15" fill="rgb(245,186,18)"/><text x="79.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.14%)</title><rect x="76" y="212" width="1" height="15" fill="rgb(229,129,22)"/><text x="79.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.14%)</title><rect x="76" y="228" width="1" height="15" fill="rgb(216,197,16)"/><text x="79.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="79" y="212" width="2" height="15" fill="rgb(218,22,28)"/><text x="82.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.42%)</title><rect x="81" y="212" width="5" height="15" fill="rgb(211,138,35)"/><text x="84.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.14%)</title><rect x="86" y="212" width="1" height="15" fill="rgb(245,219,9)"/><text x="89.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.14%)</title><rect x="86" y="228" width="1" height="15" fill="rgb(223,98,21)"/><text x="89.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.14%)</title><rect x="86" y="244" width="1" height="15" fill="rgb(240,117,54)"/><text x="89.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.14%)</title><rect x="86" y="260" width="1" height="15" fill="rgb(236,42,34)"/><text x="89.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.14%)</title><rect x="87" y="244" width="2" height="15" fill="rgb(249,205,26)"/><text x="90.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.14%)</title><rect x="87" y="260" width="2" height="15" fill="rgb(230,27,44)"/><text x="90.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.14%)</title><rect x="89" y="260" width="2" height="15" fill="rgb(207,12,2)"/><text x="92.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.14%)</title><rect x="89" y="276" width="2" height="15" fill="rgb(225,23,41)"/><text x="92.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.14%)</title><rect x="91" y="260" width="1" height="15" fill="rgb(251,68,2)"/><text x="94.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1541) (1 samples, 0.14%)</title><rect x="91" y="276" width="1" height="15" fill="rgb(208,215,1)"/><text x="94.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.14%)</title><rect x="92" y="260" width="2" height="15" fill="rgb(209,218,8)"/><text x="95.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.14%)</title><rect x="92" y="276" width="2" height="15" fill="rgb(251,132,43)"/><text x="95.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1506) (1 samples, 0.14%)</title><rect x="92" y="292" width="2" height="15" fill="rgb(243,168,39)"/><text x="95.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.14%)</title><rect x="94" y="276" width="2" height="15" fill="rgb(250,92,44)"/><text x="97.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.14%)</title><rect x="94" y="292" width="2" height="15" fill="rgb(246,151,5)"/><text x="97.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (5 samples, 0.70%)</title><rect x="89" y="244" width="8" height="15" fill="rgb(242,15,52)"/><text x="92.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.28%)</title><rect x="94" y="260" width="3" height="15" fill="rgb(250,52,30)"/><text x="97.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.14%)</title><rect x="96" y="276" width="1" height="15" fill="rgb(237,20,28)"/><text x="99.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.14%)</title><rect x="96" y="292" width="1" height="15" fill="rgb(250,25,25)"/><text x="99.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.14%)</title><rect x="96" y="308" width="1" height="15" fill="rgb(219,60,33)"/><text x="99.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4001) (1 samples, 0.14%)</title><rect x="96" y="324" width="1" height="15" fill="rgb(254,147,53)"/><text x="99.00" y="334.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src:114) (1 samples, 0.14%)</title><rect x="97" y="276" width="2" height="15" fill="rgb(246,147,52)"/><text x="100.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (14 samples, 1.96%)</title><rect x="77" y="196" width="24" height="15" fill="rgb(223,173,12)"/><text x="80.00" y="206.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.12%)</title><rect x="87" y="212" width="14" height="15" fill="rgb(237,166,2)"/><text x="90.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 1.12%)</title><rect x="87" y="228" width="14" height="15" fill="rgb(229,200,51)"/><text x="90.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.28%)</title><rect x="97" y="244" width="4" height="15" fill="rgb(206,65,46)"/><text x="100.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (2 samples, 0.28%)</title><rect x="97" y="260" width="4" height="15" fill="rgb(247,190,42)"/><text x="100.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="99" y="276" width="2" height="15" fill="rgb(241,63,48)"/><text x="102.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="99" y="292" width="2" height="15" fill="rgb(209,87,53)"/><text x="102.00" y="302.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="99" y="308" width="2" height="15" fill="rgb(254,79,23)"/><text x="102.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (27 samples, 3.79%)</title><rect x="59" y="180" width="45" height="15" fill="rgb(209,36,39)"/><text x="62.00" y="190.50">deci..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.28%)</title><rect x="101" y="196" width="3" height="15" fill="rgb(248,72,34)"/><text x="104.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.14%)</title><rect x="102" y="212" width="2" height="15" fill="rgb(222,52,45)"/><text x="105.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (52 samples, 7.29%)</title><rect x="21" y="164" width="86" height="15" fill="rgb(219,176,36)"/><text x="24.00" y="174.50">_predict_p..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.28%)</title><rect x="104" y="180" width="3" height="15" fill="rgb(208,17,1)"/><text x="107.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.14%)</title><rect x="107" y="180" width="2" height="15" fill="rgb(230,172,53)"/><text x="110.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.14%)</title><rect x="107" y="196" width="2" height="15" fill="rgb(229,13,1)"/><text x="110.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.14%)</title><rect x="107" y="212" width="2" height="15" fill="rgb(223,165,8)"/><text x="110.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.14%)</title><rect x="107" y="228" width="2" height="15" fill="rgb(252,41,4)"/><text x="110.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.14%)</title><rect x="109" y="212" width="1" height="15" fill="rgb(249,176,5)"/><text x="112.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.14%)</title><rect x="109" y="228" width="1" height="15" fill="rgb(243,185,15)"/><text x="112.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.14%)</title><rect x="109" y="244" width="1" height="15" fill="rgb(224,134,43)"/><text x="112.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.14%)</title><rect x="109" y="260" width="1" height="15" fill="rgb(207,112,47)"/><text x="112.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.14%)</title><rect x="109" y="276" width="1" height="15" fill="rgb(243,80,24)"/><text x="112.00" y="286.50"></text></g><g><title>0x7f2a09356a86 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="109" y="292" width="1" height="15" fill="rgb(252,135,43)"/><text x="112.00" y="302.50"></text></g><g><title>0x7f29eb7a49da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="110" y="244" width="2" height="15" fill="rgb(223,198,5)"/><text x="113.00" y="254.50"></text></g><g><title>0x7f29eb7c5254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="112" y="260" width="2" height="15" fill="rgb(213,31,48)"/><text x="115.00" y="270.50"></text></g><g><title>0x7f29eb782fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="114" y="276" width="1" height="15" fill="rgb(219,12,16)"/><text x="117.00" y="286.50"></text></g><g><title>0x7f29eb8ce9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.42%)</title><rect x="115" y="276" width="5" height="15" fill="rgb(235,207,47)"/><text x="118.00" y="286.50"></text></g><g><title>0x7f2a094ea1b0 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="125" y="292" width="2" height="15" fill="rgb(243,113,0)"/><text x="128.00" y="302.50"></text></g><g><title>0x7f2a09570bb4 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="127" y="292" width="2" height="15" fill="rgb(206,85,52)"/><text x="130.00" y="302.50"></text></g><g><title>0x7f2a09570bf9 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="129" y="292" width="1" height="15" fill="rgb(219,188,39)"/><text x="132.00" y="302.50"></text></g><g><title>0x7f2a09570c18 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="130" y="292" width="2" height="15" fill="rgb(238,17,0)"/><text x="133.00" y="302.50"></text></g><g><title>0x7f2a09570c3e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="132" y="292" width="2" height="15" fill="rgb(206,8,49)"/><text x="135.00" y="302.50"></text></g><g><title>0x7f29eb7c5265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.82%)</title><rect x="114" y="260" width="21" height="15" fill="rgb(237,15,29)"/><text x="117.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (9 samples, 1.26%)</title><rect x="120" y="276" width="15" height="15" fill="rgb(247,75,35)"/><text x="123.00" y="286.50"></text></g><g><title>0x7f2a09570c6a (libm-2.29.so) (1 samples, 0.14%)</title><rect x="134" y="292" width="1" height="15" fill="rgb(205,152,7)"/><text x="137.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (32 samples, 4.49%)</title><rect x="107" y="164" width="53" height="15" fill="rgb(229,60,48)"/><text x="110.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (31 samples, 4.35%)</title><rect x="109" y="180" width="51" height="15" fill="rgb(252,76,11)"/><text x="112.00" y="190.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (31 samples, 4.35%)</title><rect x="109" y="196" width="51" height="15" fill="rgb(238,225,21)"/><text x="112.00" y="206.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (30 samples, 4.21%)</title><rect x="110" y="212" width="50" height="15" fill="rgb(249,185,23)"/><text x="113.00" y="222.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (30 samples, 4.21%)</title><rect x="110" y="228" width="50" height="15" fill="rgb(252,201,40)"/><text x="113.00" y="238.50">trivi..</text></g><g><title>0x7f29eb7a49dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.07%)</title><rect x="112" y="244" width="48" height="15" fill="rgb(218,188,13)"/><text x="115.00" y="254.50">0x7f..</text></g><g><title>0x7f29eb7c5279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.10%)</title><rect x="135" y="260" width="25" height="15" fill="rgb(231,125,19)"/><text x="138.00" y="270.50">0..</text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.14%)</title><rect x="163" y="180" width="2" height="15" fill="rgb(247,171,23)"/><text x="166.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.14%)</title><rect x="163" y="196" width="2" height="15" fill="rgb(211,25,2)"/><text x="166.00" y="206.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.14%)</title><rect x="165" y="180" width="2" height="15" fill="rgb(231,101,39)"/><text x="168.00" y="190.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.14%)</title><rect x="168" y="260" width="2" height="15" fill="rgb(205,39,18)"/><text x="171.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.14%)</title><rect x="168" y="276" width="2" height="15" fill="rgb(229,165,15)"/><text x="171.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.14%)</title><rect x="168" y="292" width="2" height="15" fill="rgb(234,204,18)"/><text x="171.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.14%)</title><rect x="168" y="308" width="2" height="15" fill="rgb(206,31,3)"/><text x="171.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:230) (1 samples, 0.14%)</title><rect x="170" y="308" width="2" height="15" fill="rgb(217,7,26)"/><text x="173.00" y="318.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.14%)</title><rect x="170" y="324" width="2" height="15" fill="rgb(251,179,32)"/><text x="173.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.42%)</title><rect x="170" y="276" width="5" height="15" fill="rgb(218,215,34)"/><text x="173.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.42%)</title><rect x="170" y="292" width="5" height="15" fill="rgb(223,155,50)"/><text x="173.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (2 samples, 0.28%)</title><rect x="172" y="308" width="3" height="15" fill="rgb(253,118,21)"/><text x="175.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3813) (1 samples, 0.14%)</title><rect x="173" y="324" width="2" height="15" fill="rgb(241,166,17)"/><text x="176.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.14%)</title><rect x="173" y="340" width="2" height="15" fill="rgb(250,75,7)"/><text x="176.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.14%)</title><rect x="175" y="292" width="2" height="15" fill="rgb(224,38,5)"/><text x="178.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.14%)</title><rect x="177" y="292" width="1" height="15" fill="rgb(233,217,12)"/><text x="180.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.14%)</title><rect x="178" y="308" width="2" height="15" fill="rgb(240,158,28)"/><text x="181.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (3 samples, 0.42%)</title><rect x="180" y="324" width="5" height="15" fill="rgb(209,62,12)"/><text x="183.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.56%)</title><rect x="180" y="308" width="7" height="15" fill="rgb(206,24,18)"/><text x="183.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.14%)</title><rect x="185" y="324" width="2" height="15" fill="rgb(253,139,15)"/><text x="188.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (13 samples, 1.82%)</title><rect x="167" y="180" width="21" height="15" fill="rgb(212,178,0)"/><text x="170.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 1.82%)</title><rect x="167" y="196" width="21" height="15" fill="rgb(244,13,31)"/><text x="170.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 1.68%)</title><rect x="168" y="212" width="20" height="15" fill="rgb(245,68,16)"/><text x="171.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 1.68%)</title><rect x="168" y="228" width="20" height="15" fill="rgb(219,15,40)"/><text x="171.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 1.68%)</title><rect x="168" y="244" width="20" height="15" fill="rgb(253,153,6)"/><text x="171.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.54%)</title><rect x="170" y="260" width="18" height="15" fill="rgb(248,196,49)"/><text x="173.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 1.12%)</title><rect x="175" y="276" width="13" height="15" fill="rgb(214,216,52)"/><text x="178.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.84%)</title><rect x="178" y="292" width="10" height="15" fill="rgb(219,148,43)"/><text x="181.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.14%)</title><rect x="187" y="308" width="1" height="15" fill="rgb(210,67,19)"/><text x="190.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.14%)</title><rect x="188" y="196" width="2" height="15" fill="rgb(224,129,45)"/><text x="191.00" y="206.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.14%)</title><rect x="188" y="212" width="2" height="15" fill="rgb(227,206,40)"/><text x="191.00" y="222.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1164) (1 samples, 0.14%)</title><rect x="188" y="228" width="2" height="15" fill="rgb(213,88,7)"/><text x="191.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.14%)</title><rect x="190" y="228" width="2" height="15" fill="rgb(209,40,1)"/><text x="193.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.14%)</title><rect x="190" y="244" width="2" height="15" fill="rgb(225,113,32)"/><text x="193.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.14%)</title><rect x="190" y="260" width="2" height="15" fill="rgb(244,212,4)"/><text x="193.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.14%)</title><rect x="190" y="276" width="2" height="15" fill="rgb(229,32,21)"/><text x="193.00" y="286.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.14%)</title><rect x="190" y="292" width="2" height="15" fill="rgb(237,126,34)"/><text x="193.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.14%)</title><rect x="192" y="276" width="1" height="15" fill="rgb(249,108,24)"/><text x="195.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.14%)</title><rect x="193" y="292" width="2" height="15" fill="rgb(242,125,36)"/><text x="196.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.56%)</title><rect x="192" y="228" width="6" height="15" fill="rgb(218,86,29)"/><text x="195.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.56%)</title><rect x="192" y="244" width="6" height="15" fill="rgb(223,77,26)"/><text x="195.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.56%)</title><rect x="192" y="260" width="6" height="15" fill="rgb(223,109,6)"/><text x="195.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.42%)</title><rect x="193" y="276" width="5" height="15" fill="rgb(212,147,50)"/><text x="196.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.28%)</title><rect x="195" y="292" width="3" height="15" fill="rgb(210,68,38)"/><text x="198.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.14%)</title><rect x="198" y="228" width="2" height="15" fill="rgb(216,31,36)"/><text x="201.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="198" y="244" width="2" height="15" fill="rgb(207,26,7)"/><text x="201.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.98%)</title><rect x="190" y="196" width="11" height="15" fill="rgb(231,226,0)"/><text x="193.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.98%)</title><rect x="190" y="212" width="11" height="15" fill="rgb(230,57,34)"/><text x="193.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.14%)</title><rect x="200" y="228" width="1" height="15" fill="rgb(209,76,45)"/><text x="203.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.14%)</title><rect x="200" y="244" width="1" height="15" fill="rgb(219,14,53)"/><text x="203.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.14%)</title><rect x="200" y="260" width="1" height="15" fill="rgb(227,222,28)"/><text x="203.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.14%)</title><rect x="200" y="276" width="1" height="15" fill="rgb(240,118,30)"/><text x="203.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.14%)</title><rect x="200" y="292" width="1" height="15" fill="rgb(214,113,18)"/><text x="203.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:38) (116 samples, 16.27%)</title><rect x="11" y="52" width="192" height="15" fill="rgb(211,118,11)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_LogisticR..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:37) (116 samples, 16.27%)</title><rect x="11" y="68" width="192" height="15" fill="rgb(241,26,3)"/><text x="14.00" y="78.50">profile_skl (bench_Logist..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:29) (116 samples, 16.27%)</title><rect x="11" y="84" width="192" height="15" fill="rgb(231,50,29)"/><text x="14.00" y="94.50">setup_profile (bench_Logi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:23) (115 samples, 16.13%)</title><rect x="13" y="100" width="190" height="15" fill="rgb(211,79,32)"/><text x="16.00" y="110.50">profile (bench_LogisticR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (113 samples, 15.85%)</title><rect x="16" y="116" width="187" height="15" fill="rgb(209,24,16)"/><text x="19.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (113 samples, 15.85%)</title><rect x="16" y="132" width="187" height="15" fill="rgb(235,24,47)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (111 samples, 15.57%)</title><rect x="19" y="148" width="184" height="15" fill="rgb(230,126,24)"/><text x="22.00" y="158.50">predict_proba (sklearn/..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (26 samples, 3.65%)</title><rect x="160" y="164" width="43" height="15" fill="rgb(207,57,36)"/><text x="163.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.26%)</title><rect x="188" y="180" width="15" height="15" fill="rgb(226,45,8)"/><text x="191.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3266) (1 samples, 0.14%)</title><rect x="201" y="196" width="2" height="15" fill="rgb(210,174,39)"/><text x="204.00" y="206.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.14%)</title><rect x="203" y="244" width="2" height="15" fill="rgb(237,6,32)"/><text x="206.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="203" y="260" width="2" height="15" fill="rgb(242,148,11)"/><text x="206.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="203" y="276" width="2" height="15" fill="rgb(209,198,41)"/><text x="206.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="203" y="292" width="2" height="15" fill="rgb(217,80,49)"/><text x="206.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="203" y="308" width="2" height="15" fill="rgb(220,9,54)"/><text x="206.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="203" y="324" width="2" height="15" fill="rgb(213,8,33)"/><text x="206.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="203" y="340" width="2" height="15" fill="rgb(232,37,26)"/><text x="206.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="203" y="356" width="2" height="15" fill="rgb(229,25,50)"/><text x="206.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.14%)</title><rect x="203" y="372" width="2" height="15" fill="rgb(245,130,34)"/><text x="206.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="203" y="388" width="2" height="15" fill="rgb(208,81,43)"/><text x="206.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="203" y="404" width="2" height="15" fill="rgb(221,168,35)"/><text x="206.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="203" y="420" width="2" height="15" fill="rgb(243,209,51)"/><text x="206.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="203" y="436" width="2" height="15" fill="rgb(212,101,49)"/><text x="206.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="203" y="452" width="2" height="15" fill="rgb(252,211,38)"/><text x="206.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="203" y="468" width="2" height="15" fill="rgb(237,94,16)"/><text x="206.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="203" y="484" width="2" height="15" fill="rgb(206,183,13)"/><text x="206.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:35) (1 samples, 0.14%)</title><rect x="203" y="500" width="2" height="15" fill="rgb(235,72,34)"/><text x="206.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="203" y="516" width="2" height="15" fill="rgb(249,189,52)"/><text x="206.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="203" y="532" width="2" height="15" fill="rgb(233,118,32)"/><text x="206.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.14%)</title><rect x="203" y="548" width="2" height="15" fill="rgb(222,120,40)"/><text x="206.00" y="558.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.14%)</title><rect x="203" y="564" width="2" height="15" fill="rgb(208,39,43)"/><text x="206.00" y="574.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:570) (1 samples, 0.14%)</title><rect x="203" y="580" width="2" height="15" fill="rgb(228,18,25)"/><text x="206.00" y="590.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:1) (2 samples, 0.28%)</title><rect x="203" y="148" width="3" height="15" fill="rgb(236,124,34)"/><text x="206.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="203" y="164" width="3" height="15" fill="rgb(242,164,38)"/><text x="206.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="203" y="180" width="3" height="15" fill="rgb(221,188,43)"/><text x="206.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="203" y="196" width="3" height="15" fill="rgb(223,56,16)"/><text x="206.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="203" y="212" width="3" height="15" fill="rgb(238,210,6)"/><text x="206.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="203" y="228" width="3" height="15" fill="rgb(254,157,13)"/><text x="206.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.14%)</title><rect x="205" y="244" width="1" height="15" fill="rgb(248,132,49)"/><text x="208.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="205" y="260" width="1" height="15" fill="rgb(208,158,15)"/><text x="208.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="205" y="276" width="1" height="15" fill="rgb(237,87,24)"/><text x="208.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="205" y="292" width="1" height="15" fill="rgb(208,12,15)"/><text x="208.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="205" y="308" width="1" height="15" fill="rgb(231,17,35)"/><text x="208.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="205" y="324" width="1" height="15" fill="rgb(208,3,7)"/><text x="208.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="205" y="340" width="1" height="15" fill="rgb(219,173,49)"/><text x="208.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="205" y="356" width="1" height="15" fill="rgb(206,67,36)"/><text x="208.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.14%)</title><rect x="205" y="372" width="1" height="15" fill="rgb(210,101,47)"/><text x="208.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="205" y="388" width="1" height="15" fill="rgb(209,187,42)"/><text x="208.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="205" y="404" width="1" height="15" fill="rgb(231,122,43)"/><text x="208.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="205" y="420" width="1" height="15" fill="rgb(219,123,39)"/><text x="208.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="205" y="436" width="1" height="15" fill="rgb(251,53,54)"/><text x="208.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="205" y="452" width="1" height="15" fill="rgb(246,1,28)"/><text x="208.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.14%)</title><rect x="205" y="468" width="1" height="15" fill="rgb(221,53,47)"/><text x="208.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="205" y="484" width="1" height="15" fill="rgb(247,141,38)"/><text x="208.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="205" y="500" width="1" height="15" fill="rgb(230,138,22)"/><text x="208.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="205" y="516" width="1" height="15" fill="rgb(227,72,36)"/><text x="208.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="205" y="532" width="1" height="15" fill="rgb(224,198,35)"/><text x="208.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="205" y="548" width="1" height="15" fill="rgb(241,157,19)"/><text x="208.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:801) (1 samples, 0.14%)</title><rect x="205" y="564" width="1" height="15" fill="rgb(253,100,38)"/><text x="208.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.14%)</title><rect x="205" y="580" width="1" height="15" fill="rgb(206,210,18)"/><text x="208.00" y="590.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.14%)</title><rect x="205" y="596" width="1" height="15" fill="rgb(226,150,53)"/><text x="208.00" y="606.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.14%)</title><rect x="205" y="612" width="1" height="15" fill="rgb(221,204,25)"/><text x="208.00" y="622.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.14%)</title><rect x="205" y="628" width="1" height="15" fill="rgb(239,89,41)"/><text x="208.00" y="638.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.14%)</title><rect x="205" y="644" width="1" height="15" fill="rgb(246,173,27)"/><text x="208.00" y="654.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.14%)</title><rect x="205" y="660" width="1" height="15" fill="rgb(233,45,0)"/><text x="208.00" y="670.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.14%)</title><rect x="206" y="852" width="2" height="15" fill="rgb(238,96,9)"/><text x="209.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.14%)</title><rect x="206" y="868" width="2" height="15" fill="rgb(215,184,4)"/><text x="209.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.14%)</title><rect x="206" y="884" width="2" height="15" fill="rgb(245,48,35)"/><text x="209.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.14%)</title><rect x="206" y="900" width="2" height="15" fill="rgb(239,135,21)"/><text x="209.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.14%)</title><rect x="206" y="916" width="2" height="15" fill="rgb(241,195,32)"/><text x="209.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.14%)</title><rect x="206" y="932" width="2" height="15" fill="rgb(229,41,34)"/><text x="209.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.14%)</title><rect x="206" y="948" width="2" height="15" fill="rgb(231,80,21)"/><text x="209.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.14%)</title><rect x="206" y="964" width="2" height="15" fill="rgb(253,56,9)"/><text x="209.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.14%)</title><rect x="206" y="980" width="2" height="15" fill="rgb(233,50,46)"/><text x="209.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:213) (1 samples, 0.14%)</title><rect x="206" y="996" width="2" height="15" fill="rgb(230,57,17)"/><text x="209.00" y="1006.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.14%)</title><rect x="208" y="868" width="2" height="15" fill="rgb(227,124,46)"/><text x="211.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.14%)</title><rect x="208" y="884" width="2" height="15" fill="rgb(215,201,22)"/><text x="211.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.14%)</title><rect x="208" y="900" width="2" height="15" fill="rgb(225,45,10)"/><text x="211.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.14%)</title><rect x="208" y="916" width="2" height="15" fill="rgb(237,171,54)"/><text x="211.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.14%)</title><rect x="208" y="932" width="2" height="15" fill="rgb(210,31,36)"/><text x="211.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.14%)</title><rect x="208" y="948" width="2" height="15" fill="rgb(208,144,0)"/><text x="211.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (3 samples, 0.42%)</title><rect x="206" y="148" width="5" height="15" fill="rgb(232,0,35)"/><text x="209.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="164" width="5" height="15" fill="rgb(210,177,27)"/><text x="209.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.42%)</title><rect x="206" y="180" width="5" height="15" fill="rgb(231,186,27)"/><text x="209.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="196" width="5" height="15" fill="rgb(225,57,4)"/><text x="209.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="212" width="5" height="15" fill="rgb(250,190,32)"/><text x="209.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="206" y="228" width="5" height="15" fill="rgb(234,172,48)"/><text x="209.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="206" y="244" width="5" height="15" fill="rgb(224,212,9)"/><text x="209.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="206" y="260" width="5" height="15" fill="rgb(214,4,25)"/><text x="209.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="276" width="5" height="15" fill="rgb(216,121,45)"/><text x="209.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.42%)</title><rect x="206" y="292" width="5" height="15" fill="rgb(205,72,10)"/><text x="209.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="308" width="5" height="15" fill="rgb(232,120,51)"/><text x="209.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="206" y="324" width="5" height="15" fill="rgb(239,55,22)"/><text x="209.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="206" y="340" width="5" height="15" fill="rgb(242,94,42)"/><text x="209.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="206" y="356" width="5" height="15" fill="rgb(237,114,35)"/><text x="209.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="372" width="5" height="15" fill="rgb(225,188,46)"/><text x="209.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.42%)</title><rect x="206" y="388" width="5" height="15" fill="rgb(254,207,22)"/><text x="209.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="404" width="5" height="15" fill="rgb(240,83,6)"/><text x="209.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="206" y="420" width="5" height="15" fill="rgb(239,198,42)"/><text x="209.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="206" y="436" width="5" height="15" fill="rgb(223,14,34)"/><text x="209.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="206" y="452" width="5" height="15" fill="rgb(251,136,11)"/><text x="209.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="468" width="5" height="15" fill="rgb(231,136,32)"/><text x="209.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.42%)</title><rect x="206" y="484" width="5" height="15" fill="rgb(239,227,16)"/><text x="209.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="500" width="5" height="15" fill="rgb(249,218,8)"/><text x="209.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="206" y="516" width="5" height="15" fill="rgb(252,55,54)"/><text x="209.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="206" y="532" width="5" height="15" fill="rgb(225,222,6)"/><text x="209.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="206" y="548" width="5" height="15" fill="rgb(251,49,48)"/><text x="209.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="564" width="5" height="15" fill="rgb(247,229,26)"/><text x="209.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.42%)</title><rect x="206" y="580" width="5" height="15" fill="rgb(207,213,17)"/><text x="209.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="596" width="5" height="15" fill="rgb(247,195,49)"/><text x="209.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.42%)</title><rect x="206" y="612" width="5" height="15" fill="rgb(240,21,2)"/><text x="209.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="628" width="5" height="15" fill="rgb(242,75,19)"/><text x="209.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="644" width="5" height="15" fill="rgb(240,106,28)"/><text x="209.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="206" y="660" width="5" height="15" fill="rgb(220,202,35)"/><text x="209.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="206" y="676" width="5" height="15" fill="rgb(249,31,44)"/><text x="209.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="206" y="692" width="5" height="15" fill="rgb(230,48,49)"/><text x="209.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="708" width="5" height="15" fill="rgb(238,167,52)"/><text x="209.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.42%)</title><rect x="206" y="724" width="5" height="15" fill="rgb(225,100,32)"/><text x="209.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="206" y="740" width="5" height="15" fill="rgb(221,136,45)"/><text x="209.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="206" y="756" width="5" height="15" fill="rgb(227,159,16)"/><text x="209.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="206" y="772" width="5" height="15" fill="rgb(219,81,41)"/><text x="209.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="206" y="788" width="5" height="15" fill="rgb(228,185,22)"/><text x="209.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="206" y="804" width="5" height="15" fill="rgb(213,92,43)"/><text x="209.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.42%)</title><rect x="206" y="820" width="5" height="15" fill="rgb(227,1,51)"/><text x="209.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.42%)</title><rect x="206" y="836" width="5" height="15" fill="rgb(233,13,19)"/><text x="209.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.28%)</title><rect x="208" y="852" width="3" height="15" fill="rgb(249,169,37)"/><text x="211.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.14%)</title><rect x="210" y="868" width="1" height="15" fill="rgb(232,35,35)"/><text x="213.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:11) (1 samples, 0.14%)</title><rect x="211" y="388" width="2" height="15" fill="rgb(206,105,27)"/><text x="214.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="211" y="404" width="2" height="15" fill="rgb(205,139,27)"/><text x="214.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="211" y="420" width="2" height="15" fill="rgb(219,111,19)"/><text x="214.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="211" y="436" width="2" height="15" fill="rgb(245,148,19)"/><text x="214.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="211" y="452" width="2" height="15" fill="rgb(210,171,28)"/><text x="214.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="211" y="468" width="2" height="15" fill="rgb(242,141,51)"/><text x="214.00" y="478.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:237) (1 samples, 0.14%)</title><rect x="211" y="484" width="2" height="15" fill="rgb(220,69,27)"/><text x="214.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="211" y="500" width="2" height="15" fill="rgb(231,220,39)"/><text x="214.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="211" y="516" width="2" height="15" fill="rgb(253,145,24)"/><text x="214.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="211" y="532" width="2" height="15" fill="rgb(239,197,42)"/><text x="214.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="211" y="548" width="2" height="15" fill="rgb(236,1,32)"/><text x="214.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.14%)</title><rect x="211" y="564" width="2" height="15" fill="rgb(209,191,18)"/><text x="214.00" y="574.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.14%)</title><rect x="211" y="580" width="2" height="15" fill="rgb(215,66,51)"/><text x="214.00" y="590.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.28%)</title><rect x="211" y="292" width="4" height="15" fill="rgb(236,220,33)"/><text x="214.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="211" y="308" width="4" height="15" fill="rgb(240,111,5)"/><text x="214.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="211" y="324" width="4" height="15" fill="rgb(235,128,32)"/><text x="214.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="211" y="340" width="4" height="15" fill="rgb(227,20,0)"/><text x="214.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="211" y="356" width="4" height="15" fill="rgb(253,198,46)"/><text x="214.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="211" y="372" width="4" height="15" fill="rgb(247,224,9)"/><text x="214.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:20) (1 samples, 0.14%)</title><rect x="213" y="388" width="2" height="15" fill="rgb(239,72,31)"/><text x="216.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="213" y="404" width="2" height="15" fill="rgb(238,181,49)"/><text x="216.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="213" y="420" width="2" height="15" fill="rgb(228,92,30)"/><text x="216.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="213" y="436" width="2" height="15" fill="rgb(212,191,0)"/><text x="216.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="213" y="452" width="2" height="15" fill="rgb(244,223,18)"/><text x="216.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="213" y="468" width="2" height="15" fill="rgb(210,62,33)"/><text x="216.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py:10) (1 samples, 0.14%)</title><rect x="213" y="484" width="2" height="15" fill="rgb(249,132,28)"/><text x="216.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="213" y="500" width="2" height="15" fill="rgb(246,214,14)"/><text x="216.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="213" y="516" width="2" height="15" fill="rgb(236,161,14)"/><text x="216.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="213" y="532" width="2" height="15" fill="rgb(215,82,47)"/><text x="216.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="213" y="548" width="2" height="15" fill="rgb(209,54,31)"/><text x="216.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="213" y="564" width="2" height="15" fill="rgb(235,148,40)"/><text x="216.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="213" y="580" width="2" height="15" fill="rgb(220,174,8)"/><text x="216.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="213" y="596" width="2" height="15" fill="rgb(238,178,54)"/><text x="216.00" y="606.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py:15) (1 samples, 0.14%)</title><rect x="213" y="612" width="2" height="15" fill="rgb(237,62,46)"/><text x="216.00" y="622.50"></text></g><g><title>system (platform.py:1068) (1 samples, 0.14%)</title><rect x="213" y="628" width="2" height="15" fill="rgb(211,213,2)"/><text x="216.00" y="638.50"></text></g><g><title>uname (platform.py:1034) (1 samples, 0.14%)</title><rect x="213" y="644" width="2" height="15" fill="rgb(211,157,26)"/><text x="216.00" y="654.50"></text></g><g><title>_syscmd_uname (platform.py:788) (1 samples, 0.14%)</title><rect x="213" y="660" width="2" height="15" fill="rgb(247,215,31)"/><text x="216.00" y="670.50"></text></g><g><title>popen (os.py:989) (1 samples, 0.14%)</title><rect x="213" y="676" width="2" height="15" fill="rgb(232,172,23)"/><text x="216.00" y="686.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.14%)</title><rect x="213" y="692" width="2" height="15" fill="rgb(215,172,23)"/><text x="216.00" y="702.50"></text></g><g><title>_execute_child (subprocess.py:1453) (1 samples, 0.14%)</title><rect x="213" y="708" width="2" height="15" fill="rgb(227,218,30)"/><text x="216.00" y="718.50"></text></g><g><title>0x7f29fda1f372 (?) (1 samples, 0.14%)</title><rect x="213" y="724" width="2" height="15" fill="rgb(224,56,51)"/><text x="216.00" y="734.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.14%)</title><rect x="213" y="740" width="2" height="15" fill="rgb(206,96,2)"/><text x="216.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.14%)</title><rect x="215" y="820" width="1" height="15" fill="rgb(213,143,2)"/><text x="218.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="215" y="836" width="1" height="15" fill="rgb(228,109,4)"/><text x="218.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="215" y="852" width="1" height="15" fill="rgb(220,124,20)"/><text x="218.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="215" y="868" width="1" height="15" fill="rgb(254,21,29)"/><text x="218.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="215" y="884" width="1" height="15" fill="rgb(247,215,49)"/><text x="218.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="215" y="900" width="1" height="15" fill="rgb(210,151,26)"/><text x="218.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="215" y="916" width="1" height="15" fill="rgb(229,59,7)"/><text x="218.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="215" y="932" width="1" height="15" fill="rgb(243,6,41)"/><text x="218.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.14%)</title><rect x="215" y="948" width="1" height="15" fill="rgb(213,169,40)"/><text x="218.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="215" y="964" width="1" height="15" fill="rgb(237,185,15)"/><text x="218.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="215" y="980" width="1" height="15" fill="rgb(214,199,50)"/><text x="218.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="215" y="996" width="1" height="15" fill="rgb(213,20,24)"/><text x="218.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="215" y="1012" width="1" height="15" fill="rgb(222,20,3)"/><text x="218.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="215" y="1028" width="1" height="15" fill="rgb(233,0,23)"/><text x="218.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.14%)</title><rect x="215" y="1044" width="1" height="15" fill="rgb(245,35,35)"/><text x="218.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="215" y="1060" width="1" height="15" fill="rgb(249,38,2)"/><text x="218.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="215" y="1076" width="1" height="15" fill="rgb(236,75,7)"/><text x="218.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="215" y="1092" width="1" height="15" fill="rgb(252,41,36)"/><text x="218.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="215" y="1108" width="1" height="15" fill="rgb(207,220,17)"/><text x="218.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="215" y="1124" width="1" height="15" fill="rgb(210,23,31)"/><text x="218.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:26) (1 samples, 0.14%)</title><rect x="215" y="1140" width="1" height="15" fill="rgb(211,173,35)"/><text x="218.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="215" y="1156" width="1" height="15" fill="rgb(246,125,16)"/><text x="218.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="215" y="1172" width="1" height="15" fill="rgb(212,67,38)"/><text x="218.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="215" y="1188" width="1" height="15" fill="rgb(238,196,11)"/><text x="218.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="215" y="1204" width="1" height="15" fill="rgb(242,156,32)"/><text x="218.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="215" y="1220" width="1" height="15" fill="rgb(234,168,2)"/><text x="218.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/func_inspect.py:17) (1 samples, 0.14%)</title><rect x="215" y="1236" width="1" height="15" fill="rgb(253,102,33)"/><text x="218.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="215" y="1252" width="1" height="15" fill="rgb(205,228,44)"/><text x="218.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="215" y="1268" width="1" height="15" fill="rgb(237,131,21)"/><text x="218.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="215" y="1284" width="1" height="15" fill="rgb(212,67,14)"/><text x="218.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="215" y="1300" width="1" height="15" fill="rgb(245,34,7)"/><text x="218.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="215" y="1316" width="1" height="15" fill="rgb(243,209,44)"/><text x="218.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/logger.py:20) (1 samples, 0.14%)</title><rect x="215" y="1332" width="1" height="15" fill="rgb(206,56,48)"/><text x="218.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="215" y="1348" width="1" height="15" fill="rgb(213,175,14)"/><text x="218.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.14%)</title><rect x="215" y="1364" width="1" height="15" fill="rgb(205,59,19)"/><text x="218.00" y="1374.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.14%)</title><rect x="215" y="1380" width="1" height="15" fill="rgb(243,205,41)"/><text x="218.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.14%)</title><rect x="215" y="1396" width="1" height="15" fill="rgb(238,157,2)"/><text x="218.00" y="1406.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.14%)</title><rect x="215" y="1412" width="1" height="15" fill="rgb(251,78,25)"/><text x="218.00" y="1422.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1390) (1 samples, 0.14%)</title><rect x="215" y="1428" width="1" height="15" fill="rgb(215,117,39)"/><text x="218.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (2 samples, 0.28%)</title><rect x="215" y="532" width="3" height="15" fill="rgb(205,25,35)"/><text x="218.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="215" y="548" width="3" height="15" fill="rgb(222,71,10)"/><text x="218.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="215" y="564" width="3" height="15" fill="rgb(218,23,17)"/><text x="218.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="215" y="580" width="3" height="15" fill="rgb(214,207,40)"/><text x="218.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="215" y="596" width="3" height="15" fill="rgb(252,179,0)"/><text x="218.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="215" y="612" width="3" height="15" fill="rgb(217,15,50)"/><text x="218.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.28%)</title><rect x="215" y="628" width="3" height="15" fill="rgb(239,40,53)"/><text x="218.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="215" y="644" width="3" height="15" fill="rgb(206,179,31)"/><text x="218.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="215" y="660" width="3" height="15" fill="rgb(237,38,10)"/><text x="218.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="215" y="676" width="3" height="15" fill="rgb(227,13,21)"/><text x="218.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="215" y="692" width="3" height="15" fill="rgb(236,51,8)"/><text x="218.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="215" y="708" width="3" height="15" fill="rgb(231,217,15)"/><text x="218.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.28%)</title><rect x="215" y="724" width="3" height="15" fill="rgb(238,196,17)"/><text x="218.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="215" y="740" width="3" height="15" fill="rgb(215,220,12)"/><text x="218.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="215" y="756" width="3" height="15" fill="rgb(235,194,1)"/><text x="218.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="215" y="772" width="3" height="15" fill="rgb(226,82,4)"/><text x="218.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="215" y="788" width="3" height="15" fill="rgb(205,136,15)"/><text x="218.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="215" y="804" width="3" height="15" fill="rgb(212,99,0)"/><text x="218.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.14%)</title><rect x="216" y="820" width="2" height="15" fill="rgb(246,137,41)"/><text x="219.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="216" y="836" width="2" height="15" fill="rgb(236,65,5)"/><text x="219.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="216" y="852" width="2" height="15" fill="rgb(208,226,32)"/><text x="219.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="216" y="868" width="2" height="15" fill="rgb(229,47,1)"/><text x="219.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="216" y="884" width="2" height="15" fill="rgb(213,50,31)"/><text x="219.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="900" width="2" height="15" fill="rgb(226,176,24)"/><text x="219.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.14%)</title><rect x="216" y="916" width="2" height="15" fill="rgb(213,35,26)"/><text x="219.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="216" y="932" width="2" height="15" fill="rgb(251,224,34)"/><text x="219.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="216" y="948" width="2" height="15" fill="rgb(248,121,47)"/><text x="219.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="216" y="964" width="2" height="15" fill="rgb(224,68,46)"/><text x="219.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="216" y="980" width="2" height="15" fill="rgb(212,86,42)"/><text x="219.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="996" width="2" height="15" fill="rgb(223,87,0)"/><text x="219.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.14%)</title><rect x="216" y="1012" width="2" height="15" fill="rgb(208,36,4)"/><text x="219.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="216" y="1028" width="2" height="15" fill="rgb(253,99,52)"/><text x="219.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="216" y="1044" width="2" height="15" fill="rgb(218,38,3)"/><text x="219.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="216" y="1060" width="2" height="15" fill="rgb(216,10,34)"/><text x="219.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="216" y="1076" width="2" height="15" fill="rgb(253,42,12)"/><text x="219.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="1092" width="2" height="15" fill="rgb(224,129,2)"/><text x="219.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.14%)</title><rect x="216" y="1108" width="2" height="15" fill="rgb(234,93,7)"/><text x="219.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="216" y="1124" width="2" height="15" fill="rgb(250,1,10)"/><text x="219.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="1140" width="2" height="15" fill="rgb(219,152,30)"/><text x="219.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="216" y="1156" width="2" height="15" fill="rgb(219,27,33)"/><text x="219.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="216" y="1172" width="2" height="15" fill="rgb(219,84,5)"/><text x="219.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="216" y="1188" width="2" height="15" fill="rgb(209,75,10)"/><text x="219.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="216" y="1204" width="2" height="15" fill="rgb(207,175,17)"/><text x="219.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="1220" width="2" height="15" fill="rgb(242,109,32)"/><text x="219.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.14%)</title><rect x="216" y="1236" width="2" height="15" fill="rgb(244,12,37)"/><text x="219.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="216" y="1252" width="2" height="15" fill="rgb(207,193,51)"/><text x="219.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="216" y="1268" width="2" height="15" fill="rgb(221,116,26)"/><text x="219.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="216" y="1284" width="2" height="15" fill="rgb(210,43,2)"/><text x="219.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="216" y="1300" width="2" height="15" fill="rgb(208,109,47)"/><text x="219.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="1316" width="2" height="15" fill="rgb(238,169,2)"/><text x="219.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.14%)</title><rect x="216" y="1332" width="2" height="15" fill="rgb(220,145,21)"/><text x="219.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="216" y="1348" width="2" height="15" fill="rgb(220,132,30)"/><text x="219.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="1364" width="2" height="15" fill="rgb(227,211,36)"/><text x="219.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="216" y="1380" width="2" height="15" fill="rgb(209,150,17)"/><text x="219.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="216" y="1396" width="2" height="15" fill="rgb(242,127,5)"/><text x="219.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="216" y="1412" width="2" height="15" fill="rgb(227,45,23)"/><text x="219.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="216" y="1428" width="2" height="15" fill="rgb(217,194,30)"/><text x="219.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="216" y="1444" width="2" height="15" fill="rgb(240,223,21)"/><text x="219.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:91) (1 samples, 0.14%)</title><rect x="216" y="1460" width="2" height="15" fill="rgb(242,60,48)"/><text x="219.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.14%)</title><rect x="216" y="1476" width="2" height="15" fill="rgb(243,143,19)"/><text x="219.00" y="1486.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.14%)</title><rect x="216" y="1492" width="2" height="15" fill="rgb(218,181,45)"/><text x="219.00" y="1502.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:166) (1 samples, 0.14%)</title><rect x="216" y="1508" width="2" height="15" fill="rgb(212,130,8)"/><text x="219.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:4) (10 samples, 1.40%)</title><rect x="203" y="52" width="17" height="15" fill="rgb(217,202,5)"/><text x="206.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.40%)</title><rect x="203" y="68" width="17" height="15" fill="rgb(251,76,8)"/><text x="206.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.40%)</title><rect x="203" y="84" width="17" height="15" fill="rgb(252,61,19)"/><text x="206.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.40%)</title><rect x="203" y="100" width="17" height="15" fill="rgb(253,142,5)"/><text x="206.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.40%)</title><rect x="203" y="116" width="17" height="15" fill="rgb(206,140,9)"/><text x="206.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.40%)</title><rect x="203" y="132" width="17" height="15" fill="rgb(209,61,28)"/><text x="206.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (5 samples, 0.70%)</title><rect x="211" y="148" width="9" height="15" fill="rgb(211,205,46)"/><text x="214.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.70%)</title><rect x="211" y="164" width="9" height="15" fill="rgb(235,108,5)"/><text x="214.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.70%)</title><rect x="211" y="180" width="9" height="15" fill="rgb(208,196,53)"/><text x="214.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.70%)</title><rect x="211" y="196" width="9" height="15" fill="rgb(237,5,35)"/><text x="214.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.70%)</title><rect x="211" y="212" width="9" height="15" fill="rgb(218,116,32)"/><text x="214.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.70%)</title><rect x="211" y="228" width="9" height="15" fill="rgb(241,42,11)"/><text x="214.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.70%)</title><rect x="211" y="244" width="9" height="15" fill="rgb(231,197,34)"/><text x="214.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.70%)</title><rect x="211" y="260" width="9" height="15" fill="rgb(248,197,29)"/><text x="214.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.70%)</title><rect x="211" y="276" width="9" height="15" fill="rgb(217,68,50)"/><text x="214.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.42%)</title><rect x="215" y="292" width="5" height="15" fill="rgb(239,200,22)"/><text x="218.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="215" y="308" width="5" height="15" fill="rgb(231,4,19)"/><text x="218.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.42%)</title><rect x="215" y="324" width="5" height="15" fill="rgb(223,48,45)"/><text x="218.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="215" y="340" width="5" height="15" fill="rgb(228,189,22)"/><text x="218.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="215" y="356" width="5" height="15" fill="rgb(210,111,31)"/><text x="218.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="215" y="372" width="5" height="15" fill="rgb(237,31,27)"/><text x="218.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="215" y="388" width="5" height="15" fill="rgb(231,24,38)"/><text x="218.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="215" y="404" width="5" height="15" fill="rgb(209,50,8)"/><text x="218.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="215" y="420" width="5" height="15" fill="rgb(243,32,10)"/><text x="218.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.42%)</title><rect x="215" y="436" width="5" height="15" fill="rgb(231,108,46)"/><text x="218.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="215" y="452" width="5" height="15" fill="rgb(207,226,32)"/><text x="218.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="215" y="468" width="5" height="15" fill="rgb(247,102,13)"/><text x="218.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="215" y="484" width="5" height="15" fill="rgb(242,180,50)"/><text x="218.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="215" y="500" width="5" height="15" fill="rgb(233,213,41)"/><text x="218.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="215" y="516" width="5" height="15" fill="rgb(227,184,16)"/><text x="218.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.14%)</title><rect x="218" y="532" width="2" height="15" fill="rgb(228,114,51)"/><text x="221.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="548" width="2" height="15" fill="rgb(205,201,54)"/><text x="221.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="218" y="564" width="2" height="15" fill="rgb(246,144,9)"/><text x="221.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="218" y="580" width="2" height="15" fill="rgb(206,138,7)"/><text x="221.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="218" y="596" width="2" height="15" fill="rgb(246,220,47)"/><text x="221.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="612" width="2" height="15" fill="rgb(213,131,29)"/><text x="221.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.14%)</title><rect x="218" y="628" width="2" height="15" fill="rgb(216,111,50)"/><text x="221.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="644" width="2" height="15" fill="rgb(207,187,34)"/><text x="221.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="218" y="660" width="2" height="15" fill="rgb(239,23,27)"/><text x="221.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="218" y="676" width="2" height="15" fill="rgb(222,163,54)"/><text x="221.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="218" y="692" width="2" height="15" fill="rgb(239,205,2)"/><text x="221.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="708" width="2" height="15" fill="rgb(251,16,21)"/><text x="221.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.14%)</title><rect x="218" y="724" width="2" height="15" fill="rgb(218,55,28)"/><text x="221.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="740" width="2" height="15" fill="rgb(240,150,27)"/><text x="221.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.14%)</title><rect x="218" y="756" width="2" height="15" fill="rgb(220,48,10)"/><text x="221.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="772" width="2" height="15" fill="rgb(248,33,16)"/><text x="221.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="788" width="2" height="15" fill="rgb(214,146,34)"/><text x="221.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="218" y="804" width="2" height="15" fill="rgb(242,107,28)"/><text x="221.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="218" y="820" width="2" height="15" fill="rgb(212,173,17)"/><text x="221.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="218" y="836" width="2" height="15" fill="rgb(233,213,23)"/><text x="221.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="852" width="2" height="15" fill="rgb(242,49,42)"/><text x="221.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.14%)</title><rect x="218" y="868" width="2" height="15" fill="rgb(215,135,23)"/><text x="221.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="884" width="2" height="15" fill="rgb(210,27,34)"/><text x="221.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="218" y="900" width="2" height="15" fill="rgb(239,168,0)"/><text x="221.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="218" y="916" width="2" height="15" fill="rgb(240,23,53)"/><text x="221.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="218" y="932" width="2" height="15" fill="rgb(209,127,39)"/><text x="221.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="948" width="2" height="15" fill="rgb(251,123,47)"/><text x="221.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.14%)</title><rect x="218" y="964" width="2" height="15" fill="rgb(233,86,26)"/><text x="221.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="980" width="2" height="15" fill="rgb(222,68,36)"/><text x="221.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="218" y="996" width="2" height="15" fill="rgb(244,80,36)"/><text x="221.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="218" y="1012" width="2" height="15" fill="rgb(212,13,22)"/><text x="221.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="218" y="1028" width="2" height="15" fill="rgb(254,14,42)"/><text x="221.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="1044" width="2" height="15" fill="rgb(241,107,46)"/><text x="221.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.14%)</title><rect x="218" y="1060" width="2" height="15" fill="rgb(229,135,13)"/><text x="221.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="218" y="1076" width="2" height="15" fill="rgb(220,80,47)"/><text x="221.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="218" y="1092" width="2" height="15" fill="rgb(220,63,25)"/><text x="221.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="218" y="1108" width="2" height="15" fill="rgb(229,122,33)"/><text x="221.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="218" y="1124" width="2" height="15" fill="rgb(228,87,5)"/><text x="221.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="218" y="1140" width="2" height="15" fill="rgb(206,71,10)"/><text x="221.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.14%)</title><rect x="218" y="1156" width="2" height="15" fill="rgb(244,226,48)"/><text x="221.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.14%)</title><rect x="218" y="1172" width="2" height="15" fill="rgb(239,126,22)"/><text x="221.00" y="1182.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.14%)</title><rect x="218" y="1188" width="2" height="15" fill="rgb(205,165,54)"/><text x="221.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py:955) (1 samples, 0.14%)</title><rect x="218" y="1204" width="2" height="15" fill="rgb(220,127,54)"/><text x="221.00" y="1214.50"></text></g><g><title>findsource (inspect.py:782) (1 samples, 0.14%)</title><rect x="218" y="1220" width="2" height="15" fill="rgb(224,10,39)"/><text x="221.00" y="1230.50"></text></g><g><title>getlines (linecache.py:47) (1 samples, 0.14%)</title><rect x="218" y="1236" width="2" height="15" fill="rgb(250,120,49)"/><text x="221.00" y="1246.50"></text></g><g><title>updatecache (linecache.py:137) (1 samples, 0.14%)</title><rect x="218" y="1252" width="2" height="15" fill="rgb(241,150,40)"/><text x="221.00" y="1262.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:28) (1 samples, 0.14%)</title><rect x="220" y="84" width="1" height="15" fill="rgb(228,10,48)"/><text x="223.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.14%)</title><rect x="220" y="100" width="1" height="15" fill="rgb(248,156,27)"/><text x="223.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.14%)</title><rect x="220" y="116" width="1" height="15" fill="rgb(211,95,14)"/><text x="223.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.14%)</title><rect x="220" y="132" width="1" height="15" fill="rgb(214,228,34)"/><text x="223.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.14%)</title><rect x="220" y="148" width="1" height="15" fill="rgb(241,136,6)"/><text x="223.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.14%)</title><rect x="220" y="164" width="1" height="15" fill="rgb(215,54,11)"/><text x="223.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.14%)</title><rect x="220" y="180" width="1" height="15" fill="rgb(242,6,24)"/><text x="223.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.14%)</title><rect x="220" y="196" width="1" height="15" fill="rgb(216,174,11)"/><text x="223.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="220" y="212" width="1" height="15" fill="rgb(229,173,20)"/><text x="223.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="220" y="228" width="1" height="15" fill="rgb(245,178,24)"/><text x="223.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="220" y="244" width="1" height="15" fill="rgb(246,162,44)"/><text x="223.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="220" y="260" width="1" height="15" fill="rgb(229,116,2)"/><text x="223.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="220" y="276" width="1" height="15" fill="rgb(231,9,14)"/><text x="223.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.14%)</title><rect x="220" y="292" width="1" height="15" fill="rgb(243,85,41)"/><text x="223.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="220" y="308" width="1" height="15" fill="rgb(223,179,32)"/><text x="223.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="220" y="324" width="1" height="15" fill="rgb(250,21,21)"/><text x="223.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="220" y="340" width="1" height="15" fill="rgb(252,165,52)"/><text x="223.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="220" y="356" width="1" height="15" fill="rgb(232,177,12)"/><text x="223.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="220" y="372" width="1" height="15" fill="rgb(205,227,39)"/><text x="223.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.14%)</title><rect x="220" y="388" width="1" height="15" fill="rgb(230,191,45)"/><text x="223.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="220" y="404" width="1" height="15" fill="rgb(214,42,26)"/><text x="223.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="220" y="420" width="1" height="15" fill="rgb(225,19,30)"/><text x="223.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="220" y="436" width="1" height="15" fill="rgb(240,84,24)"/><text x="223.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="220" y="452" width="1" height="15" fill="rgb(240,156,34)"/><text x="223.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="220" y="468" width="1" height="15" fill="rgb(217,104,40)"/><text x="223.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.14%)</title><rect x="220" y="484" width="1" height="15" fill="rgb(224,25,29)"/><text x="223.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.14%)</title><rect x="220" y="500" width="1" height="15" fill="rgb(220,15,18)"/><text x="223.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.14%)</title><rect x="220" y="516" width="1" height="15" fill="rgb(219,65,54)"/><text x="223.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.14%)</title><rect x="220" y="532" width="1" height="15" fill="rgb(212,19,47)"/><text x="223.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.14%)</title><rect x="220" y="548" width="1" height="15" fill="rgb(250,53,14)"/><text x="223.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.14%)</title><rect x="220" y="564" width="1" height="15" fill="rgb(254,12,30)"/><text x="223.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.14%)</title><rect x="220" y="580" width="1" height="15" fill="rgb(215,185,32)"/><text x="223.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.14%)</title><rect x="220" y="596" width="1" height="15" fill="rgb(243,197,22)"/><text x="223.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.14%)</title><rect x="220" y="612" width="1" height="15" fill="rgb(210,213,40)"/><text x="223.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.14%)</title><rect x="220" y="628" width="1" height="15" fill="rgb(225,198,37)"/><text x="223.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.14%)</title><rect x="220" y="644" width="1" height="15" fill="rgb(242,129,39)"/><text x="223.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1040) (1 samples, 0.14%)</title><rect x="220" y="660" width="1" height="15" fill="rgb(232,115,0)"/><text x="223.00" y="670.50"></text></g><g><title>analyze_node (jinja2/idtracking.py:41) (1 samples, 0.14%)</title><rect x="220" y="676" width="1" height="15" fill="rgb(227,63,13)"/><text x="223.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.14%)</title><rect x="220" y="692" width="1" height="15" fill="rgb(243,195,35)"/><text x="223.00" y="702.50"></text></g><g><title>visit_For (jinja2/idtracking.py:190) (1 samples, 0.14%)</title><rect x="220" y="708" width="1" height="15" fill="rgb(226,68,25)"/><text x="223.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.14%)</title><rect x="220" y="724" width="1" height="15" fill="rgb(247,71,46)"/><text x="223.00" y="734.50"></text></g><g><title>visit_If (jinja2/idtracking.py:235) (1 samples, 0.14%)</title><rect x="220" y="740" width="1" height="15" fill="rgb(209,162,24)"/><text x="223.00" y="750.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:229) (1 samples, 0.14%)</title><rect x="220" y="756" width="1" height="15" fill="rgb(239,192,27)"/><text x="223.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.14%)</title><rect x="220" y="772" width="1" height="15" fill="rgb(231,39,16)"/><text x="223.00" y="782.50"></text></g><g><title>visit_If (jinja2/idtracking.py:222) (1 samples, 0.14%)</title><rect x="220" y="788" width="1" height="15" fill="rgb(228,208,3)"/><text x="223.00" y="798.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.14%)</title><rect x="220" y="804" width="1" height="15" fill="rgb(236,202,8)"/><text x="223.00" y="814.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.14%)</title><rect x="220" y="820" width="1" height="15" fill="rgb(235,21,53)"/><text x="223.00" y="830.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.14%)</title><rect x="220" y="836" width="1" height="15" fill="rgb(214,160,52)"/><text x="223.00" y="846.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.14%)</title><rect x="220" y="852" width="1" height="15" fill="rgb(251,11,42)"/><text x="223.00" y="862.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.14%)</title><rect x="223" y="148" width="2" height="15" fill="rgb(225,49,53)"/><text x="226.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (2 samples, 0.28%)</title><rect x="228" y="164" width="3" height="15" fill="rgb(246,123,48)"/><text x="231.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.14%)</title><rect x="233" y="180" width="2" height="15" fill="rgb(235,112,7)"/><text x="236.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.14%)</title><rect x="235" y="180" width="1" height="15" fill="rgb(248,200,33)"/><text x="238.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.56%)</title><rect x="236" y="180" width="7" height="15" fill="rgb(220,5,14)"/><text x="239.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:117) (1 samples, 0.14%)</title><rect x="246" y="196" width="2" height="15" fill="rgb(234,166,24)"/><text x="249.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.28%)</title><rect x="248" y="196" width="3" height="15" fill="rgb(242,102,34)"/><text x="251.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.28%)</title><rect x="248" y="212" width="3" height="15" fill="rgb(210,136,44)"/><text x="251.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.28%)</title><rect x="248" y="228" width="3" height="15" fill="rgb(211,83,14)"/><text x="251.00" y="238.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.14%)</title><rect x="256" y="260" width="2" height="15" fill="rgb(241,63,33)"/><text x="259.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.14%)</title><rect x="261" y="324" width="2" height="15" fill="rgb(218,118,32)"/><text x="264.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.14%)</title><rect x="263" y="324" width="1" height="15" fill="rgb(252,95,38)"/><text x="266.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:809) (1 samples, 0.14%)</title><rect x="263" y="340" width="1" height="15" fill="rgb(243,181,21)"/><text x="266.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.14%)</title><rect x="264" y="388" width="2" height="15" fill="rgb(253,215,47)"/><text x="267.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3790) (1 samples, 0.14%)</title><rect x="264" y="404" width="2" height="15" fill="rgb(249,137,28)"/><text x="267.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.14%)</title><rect x="264" y="420" width="2" height="15" fill="rgb(223,5,7)"/><text x="267.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.28%)</title><rect x="264" y="356" width="4" height="15" fill="rgb(233,17,28)"/><text x="267.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.28%)</title><rect x="264" y="372" width="4" height="15" fill="rgb(241,27,16)"/><text x="267.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:309) (1 samples, 0.14%)</title><rect x="266" y="388" width="2" height="15" fill="rgb(229,62,18)"/><text x="269.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.14%)</title><rect x="268" y="356" width="1" height="15" fill="rgb(238,158,12)"/><text x="271.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.14%)</title><rect x="268" y="372" width="1" height="15" fill="rgb(226,112,0)"/><text x="271.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.14%)</title><rect x="268" y="388" width="1" height="15" fill="rgb(226,115,40)"/><text x="271.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2655) (1 samples, 0.14%)</title><rect x="268" y="404" width="1" height="15" fill="rgb(252,16,5)"/><text x="271.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.14%)</title><rect x="269" y="372" width="2" height="15" fill="rgb(219,90,11)"/><text x="272.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (2 samples, 0.28%)</title><rect x="271" y="372" width="3" height="15" fill="rgb(219,198,28)"/><text x="274.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.28%)</title><rect x="276" y="388" width="3" height="15" fill="rgb(219,79,0)"/><text x="279.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.14%)</title><rect x="278" y="404" width="1" height="15" fill="rgb(252,117,34)"/><text x="281.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.70%)</title><rect x="274" y="372" width="9" height="15" fill="rgb(243,227,4)"/><text x="277.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (2 samples, 0.28%)</title><rect x="279" y="388" width="4" height="15" fill="rgb(211,26,7)"/><text x="282.00" y="398.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 2.24%)</title><rect x="258" y="276" width="26" height="15" fill="rgb(208,62,37)"/><text x="261.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 2.10%)</title><rect x="259" y="292" width="25" height="15" fill="rgb(253,226,36)"/><text x="262.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 1.96%)</title><rect x="261" y="308" width="23" height="15" fill="rgb(213,16,49)"/><text x="264.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 1.68%)</title><rect x="264" y="324" width="20" height="15" fill="rgb(217,123,49)"/><text x="267.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (12 samples, 1.68%)</title><rect x="264" y="340" width="20" height="15" fill="rgb(219,14,2)"/><text x="267.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 1.26%)</title><rect x="269" y="356" width="15" height="15" fill="rgb(245,163,36)"/><text x="272.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.14%)</title><rect x="283" y="372" width="1" height="15" fill="rgb(213,115,0)"/><text x="286.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="283" y="388" width="1" height="15" fill="rgb(244,10,9)"/><text x="286.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (17 samples, 2.38%)</title><rect x="258" y="260" width="28" height="15" fill="rgb(227,155,28)"/><text x="261.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.14%)</title><rect x="284" y="276" width="2" height="15" fill="rgb(225,226,18)"/><text x="287.00" y="286.50"></text></g><g><title>0x7f2a093bf120 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="284" y="292" width="2" height="15" fill="rgb(232,76,35)"/><text x="287.00" y="302.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.14%)</title><rect x="286" y="324" width="2" height="15" fill="rgb(240,40,40)"/><text x="289.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.14%)</title><rect x="286" y="340" width="2" height="15" fill="rgb(221,74,7)"/><text x="289.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.14%)</title><rect x="286" y="356" width="2" height="15" fill="rgb(208,17,54)"/><text x="289.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.14%)</title><rect x="286" y="372" width="2" height="15" fill="rgb(251,120,28)"/><text x="289.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (23 samples, 3.23%)</title><rect x="251" y="244" width="38" height="15" fill="rgb(232,107,40)"/><text x="254.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.28%)</title><rect x="286" y="260" width="3" height="15" fill="rgb(219,66,10)"/><text x="289.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.28%)</title><rect x="286" y="276" width="3" height="15" fill="rgb(238,85,53)"/><text x="289.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.28%)</title><rect x="286" y="292" width="3" height="15" fill="rgb(222,96,24)"/><text x="289.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.28%)</title><rect x="286" y="308" width="3" height="15" fill="rgb(250,69,50)"/><text x="289.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.14%)</title><rect x="288" y="324" width="1" height="15" fill="rgb(205,108,20)"/><text x="291.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.14%)</title><rect x="288" y="340" width="1" height="15" fill="rgb(206,146,48)"/><text x="291.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.14%)</title><rect x="289" y="276" width="2" height="15" fill="rgb(220,19,23)"/><text x="292.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.14%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(224,40,21)"/><text x="292.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.14%)</title><rect x="291" y="324" width="2" height="15" fill="rgb(223,82,18)"/><text x="294.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.14%)</title><rect x="291" y="340" width="2" height="15" fill="rgb(236,145,10)"/><text x="294.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.28%)</title><rect x="291" y="308" width="3" height="15" fill="rgb(211,7,47)"/><text x="294.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.14%)</title><rect x="293" y="324" width="1" height="15" fill="rgb(218,115,39)"/><text x="296.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.14%)</title><rect x="293" y="340" width="1" height="15" fill="rgb(212,136,0)"/><text x="296.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (5 samples, 0.70%)</title><rect x="294" y="356" width="8" height="15" fill="rgb(213,57,39)"/><text x="297.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.84%)</title><rect x="294" y="308" width="10" height="15" fill="rgb(224,143,1)"/><text x="297.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.84%)</title><rect x="294" y="324" width="10" height="15" fill="rgb(228,94,23)"/><text x="297.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 0.84%)</title><rect x="294" y="340" width="10" height="15" fill="rgb(246,184,19)"/><text x="297.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.14%)</title><rect x="302" y="356" width="2" height="15" fill="rgb(229,202,38)"/><text x="305.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.14%)</title><rect x="302" y="372" width="2" height="15" fill="rgb(221,15,19)"/><text x="305.00" y="382.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (2 samples, 0.28%)</title><rect x="304" y="324" width="3" height="15" fill="rgb(207,142,23)"/><text x="307.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (2 samples, 0.28%)</title><rect x="304" y="340" width="3" height="15" fill="rgb(220,155,27)"/><text x="307.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (2 samples, 0.28%)</title><rect x="304" y="356" width="3" height="15" fill="rgb(247,133,44)"/><text x="307.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.28%)</title><rect x="304" y="372" width="3" height="15" fill="rgb(216,10,54)"/><text x="307.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.68%)</title><rect x="289" y="260" width="20" height="15" fill="rgb(235,224,52)"/><text x="292.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.54%)</title><rect x="291" y="276" width="18" height="15" fill="rgb(222,71,48)"/><text x="294.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.54%)</title><rect x="291" y="292" width="18" height="15" fill="rgb(227,38,49)"/><text x="294.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.42%)</title><rect x="304" y="308" width="5" height="15" fill="rgb(242,152,42)"/><text x="307.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.14%)</title><rect x="307" y="324" width="2" height="15" fill="rgb(244,26,49)"/><text x="310.00" y="334.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1969) (1 samples, 0.14%)</title><rect x="307" y="340" width="2" height="15" fill="rgb(227,129,29)"/><text x="310.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (36 samples, 5.05%)</title><rect x="251" y="196" width="60" height="15" fill="rgb(214,182,46)"/><text x="254.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 5.05%)</title><rect x="251" y="212" width="60" height="15" fill="rgb(225,121,11)"/><text x="254.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (36 samples, 5.05%)</title><rect x="251" y="228" width="60" height="15" fill="rgb(212,15,30)"/><text x="254.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (13 samples, 1.82%)</title><rect x="289" y="244" width="22" height="15" fill="rgb(222,118,8)"/><text x="292.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.14%)</title><rect x="309" y="260" width="2" height="15" fill="rgb(210,220,44)"/><text x="312.00" y="270.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2095) (1 samples, 0.14%)</title><rect x="312" y="324" width="2" height="15" fill="rgb(213,169,13)"/><text x="315.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.14%)</title><rect x="312" y="340" width="2" height="15" fill="rgb(218,229,29)"/><text x="315.00" y="350.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (2 samples, 0.28%)</title><rect x="312" y="308" width="4" height="15" fill="rgb(229,66,24)"/><text x="315.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.14%)</title><rect x="314" y="324" width="2" height="15" fill="rgb(210,146,42)"/><text x="317.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.14%)</title><rect x="314" y="340" width="2" height="15" fill="rgb(234,20,1)"/><text x="317.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (1 samples, 0.14%)</title><rect x="314" y="356" width="2" height="15" fill="rgb(253,124,44)"/><text x="317.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.14%)</title><rect x="314" y="372" width="2" height="15" fill="rgb(252,87,30)"/><text x="317.00" y="382.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:949) (1 samples, 0.14%)</title><rect x="316" y="308" width="1" height="15" fill="rgb(209,126,8)"/><text x="319.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.14%)</title><rect x="316" y="324" width="1" height="15" fill="rgb(248,44,38)"/><text x="319.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2065) (1 samples, 0.14%)</title><rect x="316" y="340" width="1" height="15" fill="rgb(210,38,22)"/><text x="319.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.28%)</title><rect x="317" y="324" width="4" height="15" fill="rgb(217,203,18)"/><text x="320.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (2 samples, 0.28%)</title><rect x="317" y="340" width="4" height="15" fill="rgb(218,173,43)"/><text x="320.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1357) (2 samples, 0.28%)</title><rect x="317" y="356" width="4" height="15" fill="rgb(225,144,15)"/><text x="320.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.84%)</title><rect x="312" y="276" width="10" height="15" fill="rgb(212,217,34)"/><text x="315.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (6 samples, 0.84%)</title><rect x="312" y="292" width="10" height="15" fill="rgb(227,89,23)"/><text x="315.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.42%)</title><rect x="317" y="308" width="5" height="15" fill="rgb(254,112,5)"/><text x="320.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (1 samples, 0.14%)</title><rect x="321" y="324" width="1" height="15" fill="rgb(205,167,3)"/><text x="324.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (1 samples, 0.14%)</title><rect x="321" y="340" width="1" height="15" fill="rgb(244,138,41)"/><text x="324.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="321" y="356" width="1" height="15" fill="rgb(206,197,26)"/><text x="324.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="321" y="372" width="1" height="15" fill="rgb(210,96,1)"/><text x="324.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="321" y="388" width="1" height="15" fill="rgb(252,127,4)"/><text x="324.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="322" y="276" width="2" height="15" fill="rgb(222,121,0)"/><text x="325.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (18 samples, 2.52%)</title><rect x="311" y="228" width="29" height="15" fill="rgb(208,182,33)"/><text x="314.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (18 samples, 2.52%)</title><rect x="311" y="244" width="29" height="15" fill="rgb(242,61,8)"/><text x="314.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (18 samples, 2.52%)</title><rect x="311" y="260" width="29" height="15" fill="rgb(242,20,12)"/><text x="314.00" y="270.50">do..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 1.40%)</title><rect x="324" y="276" width="16" height="15" fill="rgb(252,200,26)"/><text x="327.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.14%)</title><rect x="340" y="260" width="2" height="15" fill="rgb(246,174,20)"/><text x="343.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.14%)</title><rect x="340" y="276" width="2" height="15" fill="rgb(245,71,49)"/><text x="343.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.14%)</title><rect x="340" y="292" width="2" height="15" fill="rgb(219,194,4)"/><text x="343.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.14%)</title><rect x="342" y="292" width="2" height="15" fill="rgb(208,36,19)"/><text x="345.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.14%)</title><rect x="342" y="308" width="2" height="15" fill="rgb(223,141,9)"/><text x="345.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2783) (1 samples, 0.14%)</title><rect x="342" y="324" width="2" height="15" fill="rgb(250,51,26)"/><text x="345.00" y="334.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:203) (1 samples, 0.14%)</title><rect x="342" y="340" width="2" height="15" fill="rgb(243,97,50)"/><text x="345.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.14%)</title><rect x="344" y="292" width="1" height="15" fill="rgb(216,186,53)"/><text x="347.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.14%)</title><rect x="344" y="308" width="1" height="15" fill="rgb(216,77,30)"/><text x="347.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.14%)</title><rect x="344" y="324" width="1" height="15" fill="rgb(231,174,22)"/><text x="347.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.14%)</title><rect x="344" y="340" width="1" height="15" fill="rgb(230,117,31)"/><text x="347.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.42%)</title><rect x="342" y="260" width="5" height="15" fill="rgb(246,86,29)"/><text x="345.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.42%)</title><rect x="342" y="276" width="5" height="15" fill="rgb(207,139,51)"/><text x="345.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.14%)</title><rect x="345" y="292" width="2" height="15" fill="rgb(219,33,44)"/><text x="348.00" y="302.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.14%)</title><rect x="345" y="308" width="2" height="15" fill="rgb(230,76,26)"/><text x="348.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.70%)</title><rect x="340" y="244" width="9" height="15" fill="rgb(221,107,8)"/><text x="343.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.14%)</title><rect x="347" y="260" width="2" height="15" fill="rgb(212,154,39)"/><text x="350.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.14%)</title><rect x="347" y="276" width="2" height="15" fill="rgb(217,141,47)"/><text x="350.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.14%)</title><rect x="347" y="292" width="2" height="15" fill="rgb(248,97,50)"/><text x="350.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 0.84%)</title><rect x="340" y="228" width="10" height="15" fill="rgb(245,139,44)"/><text x="343.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.14%)</title><rect x="349" y="244" width="1" height="15" fill="rgb(235,65,16)"/><text x="352.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.14%)</title><rect x="349" y="260" width="1" height="15" fill="rgb(225,71,5)"/><text x="352.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.14%)</title><rect x="350" y="260" width="2" height="15" fill="rgb(238,99,10)"/><text x="353.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.14%)</title><rect x="350" y="276" width="2" height="15" fill="rgb(215,153,18)"/><text x="353.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.28%)</title><rect x="352" y="276" width="3" height="15" fill="rgb(223,89,21)"/><text x="355.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.14%)</title><rect x="354" y="292" width="1" height="15" fill="rgb(209,216,29)"/><text x="357.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.14%)</title><rect x="354" y="308" width="1" height="15" fill="rgb(241,106,6)"/><text x="357.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.14%)</title><rect x="354" y="324" width="1" height="15" fill="rgb(226,100,26)"/><text x="357.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:446) (1 samples, 0.14%)</title><rect x="354" y="340" width="1" height="15" fill="rgb(248,122,28)"/><text x="357.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h:45) (1 samples, 0.14%)</title><rect x="354" y="356" width="1" height="15" fill="rgb(232,24,29)"/><text x="357.00" y="366.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.14%)</title><rect x="355" y="292" width="2" height="15" fill="rgb(221,199,23)"/><text x="358.00" y="302.50"></text></g><g><title>0x7f29eb7c5204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.28%)</title><rect x="357" y="324" width="3" height="15" fill="rgb(215,142,39)"/><text x="360.00" y="334.50"></text></g><g><title>0x7f29eb783890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="364" y="340" width="1" height="15" fill="rgb(209,220,49)"/><text x="367.00" y="350.50"></text></g><g><title>0x7f2a0951de06 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="369" y="356" width="1" height="15" fill="rgb(251,110,35)"/><text x="372.00" y="366.50"></text></g><g><title>0x7f2a0951de17 (libm-2.29.so) (3 samples, 0.42%)</title><rect x="370" y="356" width="5" height="15" fill="rgb(239,193,4)"/><text x="373.00" y="366.50"></text></g><g><title>0x7f2a0951de4e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="375" y="356" width="2" height="15" fill="rgb(216,68,12)"/><text x="378.00" y="366.50"></text></g><g><title>0x7f2a0951de62 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="377" y="356" width="2" height="15" fill="rgb(244,0,8)"/><text x="380.00" y="366.50"></text></g><g><title>0x7f2a0951de96 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="379" y="356" width="1" height="15" fill="rgb(232,58,20)"/><text x="382.00" y="366.50"></text></g><g><title>0x7f2a0951dea2 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="380" y="356" width="2" height="15" fill="rgb(249,219,52)"/><text x="383.00" y="366.50"></text></g><g><title>0x7f29eb7c5214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.10%)</title><rect x="360" y="324" width="25" height="15" fill="rgb(242,175,47)"/><text x="363.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (12 samples, 1.68%)</title><rect x="365" y="340" width="20" height="15" fill="rgb(253,92,2)"/><text x="368.00" y="350.50"></text></g><g><title>0x7f2a0951dea6 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="382" y="356" width="3" height="15" fill="rgb(248,219,48)"/><text x="385.00" y="366.50"></text></g><g><title>0x7f29eb7c5224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="385" y="324" width="2" height="15" fill="rgb(227,210,13)"/><text x="388.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (26 samples, 3.65%)</title><rect x="350" y="228" width="43" height="15" fill="rgb(234,3,23)"/><text x="353.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (26 samples, 3.65%)</title><rect x="350" y="244" width="43" height="15" fill="rgb(205,88,39)"/><text x="353.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 3.51%)</title><rect x="352" y="260" width="41" height="15" fill="rgb(206,200,50)"/><text x="355.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (23 samples, 3.23%)</title><rect x="355" y="276" width="38" height="15" fill="rgb(233,13,12)"/><text x="358.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (22 samples, 3.09%)</title><rect x="357" y="292" width="36" height="15" fill="rgb(246,61,27)"/><text x="360.00" y="302.50">tri..</text></g><g><title>0x7f29eb7a333d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 3.09%)</title><rect x="357" y="308" width="36" height="15" fill="rgb(240,217,22)"/><text x="360.00" y="318.50">0x7..</text></g><g><title>0x7f29eb7c5228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.56%)</title><rect x="387" y="324" width="6" height="15" fill="rgb(209,139,33)"/><text x="390.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.14%)</title><rect x="393" y="228" width="2" height="15" fill="rgb(229,80,25)"/><text x="396.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.14%)</title><rect x="395" y="292" width="2" height="15" fill="rgb(247,205,28)"/><text x="398.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.14%)</title><rect x="397" y="308" width="1" height="15" fill="rgb(224,74,41)"/><text x="400.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.14%)</title><rect x="397" y="324" width="1" height="15" fill="rgb(238,176,10)"/><text x="400.00" y="334.50"></text></g><g><title>0x7f2a0947cd21 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="397" y="340" width="1" height="15" fill="rgb(244,66,31)"/><text x="400.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.14%)</title><rect x="398" y="340" width="2" height="15" fill="rgb(232,75,42)"/><text x="401.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.14%)</title><rect x="400" y="340" width="2" height="15" fill="rgb(247,223,52)"/><text x="403.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (98 samples, 13.74%)</title><rect x="243" y="180" width="162" height="15" fill="rgb(213,144,25)"/><text x="246.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (57 samples, 7.99%)</title><rect x="311" y="196" width="94" height="15" fill="rgb(236,210,51)"/><text x="314.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (57 samples, 7.99%)</title><rect x="311" y="212" width="94" height="15" fill="rgb(219,84,46)"/><text x="314.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 0.84%)</title><rect x="395" y="228" width="10" height="15" fill="rgb(252,143,34)"/><text x="398.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 0.84%)</title><rect x="395" y="244" width="10" height="15" fill="rgb(205,174,21)"/><text x="398.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.84%)</title><rect x="395" y="260" width="10" height="15" fill="rgb(215,219,8)"/><text x="398.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 0.84%)</title><rect x="395" y="276" width="10" height="15" fill="rgb(206,120,13)"/><text x="398.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 0.70%)</title><rect x="397" y="292" width="8" height="15" fill="rgb(228,201,40)"/><text x="400.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (4 samples, 0.56%)</title><rect x="398" y="308" width="7" height="15" fill="rgb(233,63,14)"/><text x="401.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (4 samples, 0.56%)</title><rect x="398" y="324" width="7" height="15" fill="rgb(228,123,36)"/><text x="401.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3140) (2 samples, 0.28%)</title><rect x="402" y="340" width="3" height="15" fill="rgb(207,125,50)"/><text x="405.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.14%)</title><rect x="405" y="180" width="2" height="15" fill="rgb(231,206,50)"/><text x="408.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.14%)</title><rect x="407" y="180" width="1" height="15" fill="rgb(237,69,42)"/><text x="410.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (6 samples, 0.84%)</title><rect x="408" y="180" width="10" height="15" fill="rgb(230,53,0)"/><text x="411.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (114 samples, 15.99%)</title><rect x="231" y="164" width="189" height="15" fill="rgb(207,212,5)"/><text x="234.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.14%)</title><rect x="418" y="180" width="2" height="15" fill="rgb(250,162,50)"/><text x="421.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:45) (122 samples, 17.11%)</title><rect x="220" y="52" width="202" height="15" fill="rgb(212,75,54)"/><text x="223.00" y="62.50">&lt;module&gt; (bench_LogisticRe..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:44) (122 samples, 17.11%)</title><rect x="220" y="68" width="202" height="15" fill="rgb(208,138,52)"/><text x="223.00" y="78.50">profile_pyrt (bench_Logist..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:29) (121 samples, 16.97%)</title><rect x="221" y="84" width="201" height="15" fill="rgb(223,172,40)"/><text x="224.00" y="94.50">setup_profile (bench_Logis..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:23) (121 samples, 16.97%)</title><rect x="221" y="100" width="201" height="15" fill="rgb(218,40,53)"/><text x="224.00" y="110.50">profile (bench_LogisticReg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (121 samples, 16.97%)</title><rect x="221" y="116" width="201" height="15" fill="rgb(221,15,51)"/><text x="224.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (121 samples, 16.97%)</title><rect x="221" y="132" width="201" height="15" fill="rgb(213,110,7)"/><text x="224.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (119 samples, 16.69%)</title><rect x="225" y="148" width="197" height="15" fill="rgb(246,50,43)"/><text x="228.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.14%)</title><rect x="420" y="164" width="2" height="15" fill="rgb(251,24,8)"/><text x="423.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.14%)</title><rect x="420" y="180" width="2" height="15" fill="rgb(223,111,37)"/><text x="423.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.14%)</title><rect x="427" y="116" width="1" height="15" fill="rgb(215,72,51)"/><text x="430.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.14%)</title><rect x="427" y="132" width="1" height="15" fill="rgb(210,120,7)"/><text x="430.00" y="142.50"></text></g><g><title>0x7f29c9c07ff9 (?) (1 samples, 0.14%)</title><rect x="428" y="212" width="2" height="15" fill="rgb(221,28,54)"/><text x="431.00" y="222.50"></text></g><g><title>0x7f29c9c02ef6 (?) (1 samples, 0.14%)</title><rect x="428" y="228" width="2" height="15" fill="rgb(206,210,34)"/><text x="431.00" y="238.50"></text></g><g><title>0x7f29c9bf7962 (?) (1 samples, 0.14%)</title><rect x="428" y="244" width="2" height="15" fill="rgb(215,19,21)"/><text x="431.00" y="254.50"></text></g><g><title>0x7f29c9c2b7a7 (?) (1 samples, 0.14%)</title><rect x="428" y="260" width="2" height="15" fill="rgb(245,215,21)"/><text x="431.00" y="270.50"></text></g><g><title>0x7f29c9c2b379 (?) (1 samples, 0.14%)</title><rect x="428" y="276" width="2" height="15" fill="rgb(218,19,2)"/><text x="431.00" y="286.50"></text></g><g><title>0x7f29ca0898b8 (?) (1 samples, 0.14%)</title><rect x="428" y="292" width="2" height="15" fill="rgb(213,181,42)"/><text x="431.00" y="302.50"></text></g><g><title>0x7f29ca087c7f (?) (1 samples, 0.14%)</title><rect x="428" y="308" width="2" height="15" fill="rgb(213,174,0)"/><text x="431.00" y="318.50"></text></g><g><title>0x7f29ca09a99c (?) (1 samples, 0.14%)</title><rect x="428" y="324" width="2" height="15" fill="rgb(212,34,2)"/><text x="431.00" y="334.50"></text></g><g><title>0x7f29c9dc546f (?) (1 samples, 0.14%)</title><rect x="428" y="340" width="2" height="15" fill="rgb(253,219,49)"/><text x="431.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="430" y="340" width="3" height="15" fill="rgb(214,190,47)"/><text x="433.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="430" y="356" width="3" height="15" fill="rgb(244,71,47)"/><text x="433.00" y="366.50"></text></g><g><title>0x7f2a093bedb3 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="432" y="372" width="1" height="15" fill="rgb(232,152,1)"/><text x="435.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:18) (8 samples, 1.12%)</title><rect x="422" y="100" width="13" height="15" fill="rgb(223,168,7)"/><text x="425.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.56%)</title><rect x="428" y="116" width="7" height="15" fill="rgb(228,92,16)"/><text x="431.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.56%)</title><rect x="428" y="132" width="7" height="15" fill="rgb(238,159,24)"/><text x="431.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.56%)</title><rect x="428" y="148" width="7" height="15" fill="rgb(213,53,24)"/><text x="431.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.56%)</title><rect x="428" y="164" width="7" height="15" fill="rgb(249,146,10)"/><text x="431.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.56%)</title><rect x="428" y="180" width="7" height="15" fill="rgb(239,209,31)"/><text x="431.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.56%)</title><rect x="428" y="196" width="7" height="15" fill="rgb(207,117,46)"/><text x="431.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="212" width="5" height="15" fill="rgb(237,168,2)"/><text x="433.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="228" width="5" height="15" fill="rgb(233,71,52)"/><text x="433.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="244" width="5" height="15" fill="rgb(251,220,7)"/><text x="433.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="260" width="5" height="15" fill="rgb(228,171,36)"/><text x="433.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="276" width="5" height="15" fill="rgb(228,56,23)"/><text x="433.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="292" width="5" height="15" fill="rgb(237,47,8)"/><text x="433.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="308" width="5" height="15" fill="rgb(211,146,22)"/><text x="433.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="430" y="324" width="5" height="15" fill="rgb(252,113,51)"/><text x="433.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="433" y="340" width="2" height="15" fill="rgb(227,193,47)"/><text x="436.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="433" y="356" width="2" height="15" fill="rgb(254,138,42)"/><text x="436.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="433" y="372" width="2" height="15" fill="rgb(221,94,37)"/><text x="436.00" y="382.50"></text></g><g><title>0x7f2a0939dbc0 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="509" y="132" width="2" height="15" fill="rgb(212,60,50)"/><text x="512.00" y="142.50"></text></g><g><title>0x7f2a0939dbc6 (libc-2.29.so) (6 samples, 0.84%)</title><rect x="511" y="132" width="10" height="15" fill="rgb(246,168,18)"/><text x="514.00" y="142.50"></text></g><g><title>0x7f2a0939dbd1 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="521" y="132" width="2" height="15" fill="rgb(242,61,11)"/><text x="524.00" y="142.50"></text></g><g><title>0x7f2a0939dbdf (libc-2.29.so) (2 samples, 0.28%)</title><rect x="523" y="132" width="3" height="15" fill="rgb(214,206,4)"/><text x="526.00" y="142.50"></text></g><g><title>0x7f2a0939dc04 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="526" y="132" width="2" height="15" fill="rgb(205,100,9)"/><text x="529.00" y="142.50"></text></g><g><title>0x7f2a0939dc2d (libc-2.29.so) (2 samples, 0.28%)</title><rect x="528" y="132" width="3" height="15" fill="rgb(218,11,32)"/><text x="531.00" y="142.50"></text></g><g><title>0x7f2a0939dc49 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="531" y="132" width="3" height="15" fill="rgb(237,53,1)"/><text x="534.00" y="142.50"></text></g><g><title>0x7f2a0939dc4d (libc-2.29.so) (2 samples, 0.28%)</title><rect x="534" y="132" width="3" height="15" fill="rgb(238,133,9)"/><text x="537.00" y="142.50"></text></g><g><title>0x7f2a0939dc51 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="537" y="132" width="2" height="15" fill="rgb(214,224,14)"/><text x="540.00" y="142.50"></text></g><g><title>0x7f2a0939dc73 (libc-2.29.so) (3 samples, 0.42%)</title><rect x="539" y="132" width="5" height="15" fill="rgb(212,136,10)"/><text x="542.00" y="142.50"></text></g><g><title>0x7f2a0939daaf (libc-2.29.so) (2 samples, 0.28%)</title><rect x="541" y="148" width="3" height="15" fill="rgb(253,127,45)"/><text x="544.00" y="158.50"></text></g><g><title>0x7f2a0939daaf (libc-2.29.so) (1 samples, 0.14%)</title><rect x="544" y="148" width="2" height="15" fill="rgb(233,39,40)"/><text x="547.00" y="158.50"></text></g><g><title>0x7f2a0939eeb0 (libc-2.29.so) (23 samples, 3.23%)</title><rect x="509" y="116" width="38" height="15" fill="rgb(249,47,28)"/><text x="512.00" y="126.50">0x7..</text></g><g><title>0x7f2a0939dca7 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="544" y="132" width="3" height="15" fill="rgb(249,139,34)"/><text x="547.00" y="142.50"></text></g><g><title>0x7f2a0939dae2 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="546" y="148" width="1" height="15" fill="rgb(207,6,46)"/><text x="549.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.14%)</title><rect x="547" y="116" width="2" height="15" fill="rgb(251,199,28)"/><text x="550.00" y="126.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.14%)</title><rect x="547" y="132" width="2" height="15" fill="rgb(231,30,43)"/><text x="550.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.14%)</title><rect x="547" y="148" width="2" height="15" fill="rgb(206,68,30)"/><text x="550.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.14%)</title><rect x="549" y="148" width="2" height="15" fill="rgb(249,122,52)"/><text x="552.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.14%)</title><rect x="557" y="196" width="2" height="15" fill="rgb(231,59,46)"/><text x="560.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.14%)</title><rect x="557" y="212" width="2" height="15" fill="rgb(239,160,52)"/><text x="560.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="557" y="228" width="2" height="15" fill="rgb(217,93,12)"/><text x="560.00" y="238.50"></text></g><g><title>0x7f29c9bce930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="557" y="244" width="2" height="15" fill="rgb(224,82,32)"/><text x="560.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="569" y="260" width="2" height="15" fill="rgb(225,13,19)"/><text x="572.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="571" y="260" width="1" height="15" fill="rgb(241,130,54)"/><text x="574.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="580" y="500" width="2" height="15" fill="rgb(221,84,7)"/><text x="583.00" y="510.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.56%)</title><rect x="577" y="340" width="7" height="15" fill="rgb(224,220,52)"/><text x="580.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="356" width="5" height="15" fill="rgb(225,212,42)"/><text x="582.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="372" width="5" height="15" fill="rgb(243,218,7)"/><text x="582.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="388" width="5" height="15" fill="rgb(226,170,30)"/><text x="582.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="404" width="5" height="15" fill="rgb(230,176,37)"/><text x="582.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="420" width="5" height="15" fill="rgb(237,216,48)"/><text x="582.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="436" width="5" height="15" fill="rgb(231,213,25)"/><text x="582.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.42%)</title><rect x="579" y="452" width="5" height="15" fill="rgb(242,106,24)"/><text x="582.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="580" y="468" width="4" height="15" fill="rgb(231,48,27)"/><text x="583.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="580" y="484" width="4" height="15" fill="rgb(230,224,2)"/><text x="583.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="582" y="500" width="2" height="15" fill="rgb(210,133,43)"/><text x="585.00" y="510.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="584" y="356" width="1" height="15" fill="rgb(246,120,53)"/><text x="587.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="584" y="340" width="3" height="15" fill="rgb(248,64,25)"/><text x="587.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="585" y="356" width="2" height="15" fill="rgb(241,128,23)"/><text x="588.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="587" y="340" width="2" height="15" fill="rgb(253,53,45)"/><text x="590.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="587" y="356" width="2" height="15" fill="rgb(247,25,14)"/><text x="590.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="587" y="372" width="2" height="15" fill="rgb(254,118,45)"/><text x="590.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="587" y="388" width="2" height="15" fill="rgb(252,121,1)"/><text x="590.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="587" y="404" width="2" height="15" fill="rgb(209,180,47)"/><text x="590.00" y="414.50"></text></g><g><title>0x7f2a0939ebe8 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="587" y="420" width="2" height="15" fill="rgb(247,58,29)"/><text x="590.00" y="430.50"></text></g><g><title>0x7f2a093bed50 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="660" y="372" width="2" height="15" fill="rgb(206,198,49)"/><text x="663.00" y="382.50"></text></g><g><title>0x7f2a093bedb3 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="662" y="372" width="1" height="15" fill="rgb(215,223,45)"/><text x="665.00" y="382.50"></text></g><g><title>0x7f2a093bedbb (libc-2.29.so) (1 samples, 0.14%)</title><rect x="663" y="372" width="2" height="15" fill="rgb(233,29,24)"/><text x="666.00" y="382.50"></text></g><g><title>0x7f2a0951de00 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="665" y="372" width="3" height="15" fill="rgb(209,199,3)"/><text x="668.00" y="382.50"></text></g><g><title>0x7f2a0951de0a (libm-2.29.so) (1 samples, 0.14%)</title><rect x="668" y="372" width="2" height="15" fill="rgb(228,17,30)"/><text x="671.00" y="382.50"></text></g><g><title>0x7f2a0951de0e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="670" y="372" width="1" height="15" fill="rgb(213,212,49)"/><text x="673.00" y="382.50"></text></g><g><title>0x7f2a0951de4a (libm-2.29.so) (1 samples, 0.14%)</title><rect x="671" y="372" width="2" height="15" fill="rgb(236,121,14)"/><text x="674.00" y="382.50"></text></g><g><title>0x7f2a0951de76 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="673" y="372" width="2" height="15" fill="rgb(242,54,41)"/><text x="676.00" y="382.50"></text></g><g><title>0x7f2a0951de92 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="675" y="372" width="3" height="15" fill="rgb(233,170,36)"/><text x="678.00" y="382.50"></text></g><g><title>0x7f2a0951de96 (libm-2.29.so) (3 samples, 0.42%)</title><rect x="678" y="372" width="5" height="15" fill="rgb(220,134,9)"/><text x="681.00" y="382.50"></text></g><g><title>0x7f2a0951dea2 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="683" y="372" width="2" height="15" fill="rgb(251,34,31)"/><text x="686.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (60 samples, 8.42%)</title><rect x="589" y="340" width="99" height="15" fill="rgb(242,91,44)"/><text x="592.00" y="350.50">onnxruntime..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 5.33%)</title><rect x="625" y="356" width="63" height="15" fill="rgb(243,77,1)"/><text x="628.00" y="366.50">onnxru..</text></g><g><title>0x7f2a0951dea6 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="685" y="372" width="3" height="15" fill="rgb(219,166,25)"/><text x="688.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.52%)</title><rect x="688" y="340" width="30" height="15" fill="rgb(206,31,36)"/><text x="691.00" y="350.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.52%)</title><rect x="688" y="356" width="30" height="15" fill="rgb(215,227,23)"/><text x="691.00" y="366.50">on..</text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="748" y="356" width="1" height="15" fill="rgb(252,115,47)"/><text x="751.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="748" y="372" width="1" height="15" fill="rgb(211,142,7)"/><text x="751.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="748" y="388" width="1" height="15" fill="rgb(207,134,12)"/><text x="751.00" y="398.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::GetCreateFunc() const::{lambda()#1}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="748" y="404" width="1" height="15" fill="rgb(241,35,12)"/><text x="751.00" y="414.50"></text></g><g><title>0x7f29f8e6ad50 (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="756" y="372" width="2" height="15" fill="rgb(243,9,31)"/><text x="759.00" y="382.50"></text></g><g><title>0x7f2a0939fb24 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="840" y="388" width="4" height="15" fill="rgb(252,109,5)"/><text x="843.00" y="398.50"></text></g><g><title>0x7f2a0939fb76 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="844" y="388" width="1" height="15" fill="rgb(240,224,35)"/><text x="847.00" y="398.50"></text></g><g><title>0x7f2a0939fd27 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="845" y="388" width="2" height="15" fill="rgb(238,125,16)"/><text x="848.00" y="398.50"></text></g><g><title>0x7f2a0939fd36 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="847" y="388" width="2" height="15" fill="rgb(242,73,34)"/><text x="850.00" y="398.50"></text></g><g><title>0x7f2a0939fd54 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="849" y="388" width="1" height="15" fill="rgb(220,79,46)"/><text x="852.00" y="398.50"></text></g><g><title>0x7f2a0939fd8d (libc-2.29.so) (2 samples, 0.28%)</title><rect x="850" y="388" width="4" height="15" fill="rgb(220,72,18)"/><text x="853.00" y="398.50"></text></g><g><title>0x7f2a0939fd9f (libc-2.29.so) (1 samples, 0.14%)</title><rect x="854" y="388" width="1" height="15" fill="rgb(252,75,47)"/><text x="857.00" y="398.50"></text></g><g><title>0x7f2a0939fdb4 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="855" y="388" width="2" height="15" fill="rgb(216,14,20)"/><text x="858.00" y="398.50"></text></g><g><title>0x7f2a0939fdd6 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="857" y="388" width="3" height="15" fill="rgb(205,151,23)"/><text x="860.00" y="398.50"></text></g><g><title>0x7f2a0939fde0 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="860" y="388" width="2" height="15" fill="rgb(242,190,37)"/><text x="863.00" y="398.50"></text></g><g><title>0x7f2a0939ff2a (libc-2.29.so) (1 samples, 0.14%)</title><rect x="862" y="388" width="1" height="15" fill="rgb(221,228,15)"/><text x="865.00" y="398.50"></text></g><g><title>0x7f2a0939ffde (libc-2.29.so) (1 samples, 0.14%)</title><rect x="863" y="388" width="2" height="15" fill="rgb(230,148,44)"/><text x="866.00" y="398.50"></text></g><g><title>0x7f2a0939ffe4 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="865" y="388" width="3" height="15" fill="rgb(217,229,41)"/><text x="868.00" y="398.50"></text></g><g><title>0x7f2a093a0033 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="868" y="388" width="4" height="15" fill="rgb(219,31,4)"/><text x="871.00" y="398.50"></text></g><g><title>0x7f2a093a0040 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="872" y="388" width="1" height="15" fill="rgb(238,112,52)"/><text x="875.00" y="398.50"></text></g><g><title>0x7f2a093a0050 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="873" y="388" width="4" height="15" fill="rgb(227,180,32)"/><text x="876.00" y="398.50"></text></g><g><title>0x7f2a093a007f (libc-2.29.so) (1 samples, 0.14%)</title><rect x="877" y="388" width="1" height="15" fill="rgb(211,163,13)"/><text x="880.00" y="398.50"></text></g><g><title>0x7f2a093a008c (libc-2.29.so) (2 samples, 0.28%)</title><rect x="878" y="388" width="4" height="15" fill="rgb(251,191,49)"/><text x="881.00" y="398.50"></text></g><g><title>0x7f2a093a0384 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="882" y="388" width="1" height="15" fill="rgb(216,17,42)"/><text x="885.00" y="398.50"></text></g><g><title>0x7f2a093a03c1 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="883" y="388" width="2" height="15" fill="rgb(207,170,45)"/><text x="886.00" y="398.50"></text></g><g><title>0x7f2a093a03dc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="885" y="388" width="2" height="15" fill="rgb(221,1,14)"/><text x="888.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (84 samples, 11.78%)</title><rect x="749" y="356" width="139" height="15" fill="rgb(208,77,4)"/><text x="752.00" y="366.50">operator new (lib..</text></g><g><title>malloc (libc-2.29.so) (79 samples, 11.08%)</title><rect x="758" y="372" width="130" height="15" fill="rgb(249,128,48)"/><text x="761.00" y="382.50">malloc (libc-2.2..</text></g><g><title>0x7f2a093a03ed (libc-2.29.so) (1 samples, 0.14%)</title><rect x="887" y="388" width="1" height="15" fill="rgb(217,42,17)"/><text x="890.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="888" y="356" width="4" height="15" fill="rgb(234,73,35)"/><text x="891.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.12%)</title><rect x="892" y="356" width="13" height="15" fill="rgb(247,170,28)"/><text x="895.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="902" y="372" width="3" height="15" fill="rgb(215,139,45)"/><text x="905.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.28%)</title><rect x="905" y="356" width="3" height="15" fill="rgb(220,78,53)"/><text x="908.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (207 samples, 29.03%)</title><rect x="572" y="260" width="343" height="15" fill="rgb(222,72,30)"/><text x="575.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (207 samples, 29.03%)</title><rect x="572" y="276" width="343" height="15" fill="rgb(222,132,19)"/><text x="575.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (207 samples, 29.03%)</title><rect x="572" y="292" width="343" height="15" fill="rgb(246,82,53)"/><text x="575.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (207 samples, 29.03%)</title><rect x="572" y="308" width="343" height="15" fill="rgb(239,123,8)"/><text x="575.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (207 samples, 29.03%)</title><rect x="572" y="324" width="343" height="15" fill="rgb(205,176,3)"/><text x="575.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 16.69%)</title><rect x="718" y="340" width="197" height="15" fill="rgb(227,108,29)"/><text x="721.00" y="350.50">onnxruntime::ml::ZipMapOp..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.56%)</title><rect x="908" y="356" width="7" height="15" fill="rgb(252,54,30)"/><text x="911.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="915" y="260" width="1" height="15" fill="rgb(232,124,6)"/><text x="918.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.14%)</title><rect x="915" y="276" width="1" height="15" fill="rgb(238,170,4)"/><text x="918.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="916" y="260" width="2" height="15" fill="rgb(213,177,39)"/><text x="919.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.14%)</title><rect x="916" y="276" width="2" height="15" fill="rgb(249,203,4)"/><text x="919.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.14%)</title><rect x="916" y="292" width="2" height="15" fill="rgb(245,61,28)"/><text x="919.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.14%)</title><rect x="916" y="308" width="2" height="15" fill="rgb(249,164,1)"/><text x="919.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.14%)</title><rect x="916" y="324" width="2" height="15" fill="rgb(242,178,0)"/><text x="919.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.14%)</title><rect x="916" y="340" width="2" height="15" fill="rgb(214,109,31)"/><text x="919.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="916" y="356" width="2" height="15" fill="rgb(217,61,10)"/><text x="919.00" y="366.50"></text></g><g><title>0x7f2a093a0028 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="916" y="372" width="2" height="15" fill="rgb(222,127,3)"/><text x="919.00" y="382.50"></text></g><g><title>0x7f2a0939db9b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="916" y="388" width="2" height="15" fill="rgb(227,67,36)"/><text x="919.00" y="398.50"></text></g><g><title>0x7f29c9bcf870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="1060" y="276" width="4" height="15" fill="rgb(237,84,30)"/><text x="1063.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.79%)</title><rect x="1064" y="276" width="44" height="15" fill="rgb(240,228,18)"/><text x="1067.00" y="286.50">pybi..</text></g><g><title>0x7f29c9bcf310 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1107" y="292" width="1" height="15" fill="rgb(244,134,54)"/><text x="1110.00" y="302.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 16.41%)</title><rect x="918" y="260" width="194" height="15" fill="rgb(237,163,10)"/><text x="921.00" y="270.50">pybind11::detail::map_cas..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.28%)</title><rect x="1108" y="276" width="4" height="15" fill="rgb(248,106,1)"/><text x="1111.00" y="286.50"></text></g><g><title>0x7f2a0939e906 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1118" y="292" width="4" height="15" fill="rgb(250,11,50)"/><text x="1121.00" y="302.50"></text></g><g><title>0x7f2a0939e92c (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1122" y="292" width="3" height="15" fill="rgb(232,192,52)"/><text x="1125.00" y="302.50"></text></g><g><title>0x7f2a0939e982 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1125" y="292" width="2" height="15" fill="rgb(236,184,3)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7f2a0939e9ff (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1127" y="292" width="1" height="15" fill="rgb(242,64,26)"/><text x="1130.00" y="302.50"></text></g><g><title>0x7f2a0939ea51 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1128" y="292" width="2" height="15" fill="rgb(234,33,10)"/><text x="1131.00" y="302.50"></text></g><g><title>0x7f2a0939ecf0 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1130" y="292" width="2" height="15" fill="rgb(251,123,19)"/><text x="1133.00" y="302.50"></text></g><g><title>0x7f2a0939ed07 (libc-2.29.so) (4 samples, 0.56%)</title><rect x="1132" y="292" width="6" height="15" fill="rgb(244,187,20)"/><text x="1135.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.56%)</title><rect x="1138" y="292" width="7" height="15" fill="rgb(208,218,54)"/><text x="1141.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="1145" y="292" width="1" height="15" fill="rgb(239,26,15)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7f2a0939e906 (libc-2.29.so) (3 samples, 0.42%)</title><rect x="1150" y="308" width="5" height="15" fill="rgb(234,190,17)"/><text x="1153.00" y="318.50"></text></g><g><title>0x7f2a0939e91e (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1155" y="308" width="1" height="15" fill="rgb(238,34,14)"/><text x="1158.00" y="318.50"></text></g><g><title>0x7f2a0939e99b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1156" y="308" width="2" height="15" fill="rgb(242,52,21)"/><text x="1159.00" y="318.50"></text></g><g><title>0x7f2a0939e9b7 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1158" y="308" width="2" height="15" fill="rgb(213,169,3)"/><text x="1161.00" y="318.50"></text></g><g><title>0x7f2a0939e9d3 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1160" y="308" width="1" height="15" fill="rgb(225,174,23)"/><text x="1163.00" y="318.50"></text></g><g><title>0x7f2a0939ea4b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1161" y="308" width="2" height="15" fill="rgb(230,154,23)"/><text x="1164.00" y="318.50"></text></g><g><title>0x7f2a0939ea51 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1163" y="308" width="2" height="15" fill="rgb(246,152,10)"/><text x="1166.00" y="318.50"></text></g><g><title>0x7f2a0939ed07 (libc-2.29.so) (6 samples, 0.84%)</title><rect x="1165" y="308" width="10" height="15" fill="rgb(238,226,30)"/><text x="1168.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1175" y="308" width="3" height="15" fill="rgb(220,150,35)"/><text x="1178.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.28%)</title><rect x="1178" y="308" width="3" height="15" fill="rgb(206,119,14)"/><text x="1181.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 52.45%)</title><rect x="566" y="244" width="619" height="15" fill="rgb(254,113,15)"/><text x="569.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Infere..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 6.17%)</title><rect x="1112" y="260" width="73" height="15" fill="rgb(236,180,33)"/><text x="1115.00" y="270.50">std::vec..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (44 samples, 6.17%)</title><rect x="1112" y="276" width="73" height="15" fill="rgb(246,48,8)"/><text x="1115.00" y="286.50">onnxrunt..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.23%)</title><rect x="1146" y="292" width="39" height="15" fill="rgb(222,88,7)"/><text x="1149.00" y="302.50">std..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="1181" y="308" width="4" height="15" fill="rgb(209,76,19)"/><text x="1184.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (383 samples, 53.72%)</title><rect x="552" y="164" width="634" height="15" fill="rgb(247,147,53)"/><text x="555.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (383 samples, 53.72%)</title><rect x="552" y="180" width="634" height="15" fill="rgb(230,194,3)"/><text x="555.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (379 samples, 53.16%)</title><rect x="559" y="196" width="627" height="15" fill="rgb(209,60,42)"/><text x="562.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (378 samples, 53.02%)</title><rect x="561" y="212" width="625" height="15" fill="rgb(208,45,15)"/><text x="564.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (378 samples, 53.02%)</title><rect x="561" y="228" width="625" height="15" fill="rgb(213,138,48)"/><text x="564.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1185" y="244" width="1" height="15" fill="rgb(245,85,45)"/><text x="1188.00" y="254.50"></text></g><g><title>all (713 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,206,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:52) (464 samples, 65.08%)</title><rect x="422" y="52" width="768" height="15" fill="rgb(220,179,14)"/><text x="425.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:51) (464 samples, 65.08%)</title><rect x="422" y="68" width="768" height="15" fill="rgb(229,115,49)"/><text x="425.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:29) (464 samples, 65.08%)</title><rect x="422" y="84" width="768" height="15" fill="rgb(245,15,40)"/><text x="425.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:23) (456 samples, 63.96%)</title><rect x="435" y="100" width="755" height="15" fill="rgb(222,147,30)"/><text x="438.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (387 samples, 54.28%)</title><rect x="549" y="116" width="641" height="15" fill="rgb(217,25,43)"/><text x="552.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (387 samples, 54.28%)</title><rect x="549" y="132" width="641" height="15" fill="rgb(205,154,3)"/><text x="552.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (386 samples, 54.14%)</title><rect x="551" y="148" width="639" height="15" fill="rgb(207,79,16)"/><text x="554.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.28%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(249,34,41)"/><text x="1189.00" y="174.50"></text></g></g></svg>