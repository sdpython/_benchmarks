<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>__iter__ (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(253,72,21)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(239,25,23)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(229,84,15)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(241,142,43)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(210,3,31)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(213,139,32)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(254,224,0)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(231,151,19)"/><text x="15.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(223,201,54)"/><text x="15.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(218,18,31)"/><text x="17.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(243,97,54)"/><text x="17.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(220,65,12)"/><text x="17.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(216,197,7)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(216,225,51)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(254,169,45)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(245,133,15)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(235,59,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(236,63,53)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(205,196,7)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(237,12,27)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(250,133,33)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(223,211,26)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(222,109,52)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(224,101,30)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.76%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(247,222,12)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(222,65,8)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(232,71,3)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(230,119,29)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(215,106,2)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(246,104,11)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.76%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(231,165,46)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(213,44,48)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(214,10,21)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(221,15,48)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(206,149,1)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(242,29,35)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.76%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(229,198,1)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(246,1,48)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(250,17,15)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(224,63,23)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(208,50,30)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(252,10,1)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(254,1,50)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(247,95,37)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(225,170,46)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(237,126,4)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(230,35,36)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(226,148,50)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(209,116,29)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(215,179,22)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(220,80,50)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(218,198,44)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(205,68,44)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.76%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(218,155,4)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(229,35,30)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(211,35,14)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(235,93,14)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(251,16,28)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(250,60,53)"/><text x="19.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(207,151,32)"/><text x="19.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(205,185,14)"/><text x="19.00" y="974.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="18" y="1636" width="3" height="15" fill="rgb(220,225,46)"/><text x="21.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="18" y="1652" width="3" height="15" fill="rgb(223,106,25)"/><text x="21.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.19%)</title><rect x="18" y="1668" width="3" height="15" fill="rgb(252,66,31)"/><text x="21.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="18" y="1684" width="3" height="15" fill="rgb(226,198,35)"/><text x="21.00" y="1694.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="18" y="1700" width="3" height="15" fill="rgb(250,205,36)"/><text x="21.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.19%)</title><rect x="18" y="1716" width="3" height="15" fill="rgb(229,32,34)"/><text x="21.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1476" width="5" height="15" fill="rgb(215,112,17)"/><text x="21.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1492" width="5" height="15" fill="rgb(252,65,43)"/><text x="21.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1508" width="5" height="15" fill="rgb(210,53,36)"/><text x="21.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="18" y="1524" width="5" height="15" fill="rgb(235,94,4)"/><text x="21.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1540" width="5" height="15" fill="rgb(238,219,24)"/><text x="21.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.38%)</title><rect x="18" y="1556" width="5" height="15" fill="rgb(238,163,19)"/><text x="21.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py) (2 samples, 0.38%)</title><rect x="18" y="1572" width="5" height="15" fill="rgb(213,221,40)"/><text x="21.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.38%)</title><rect x="18" y="1588" width="5" height="15" fill="rgb(253,208,14)"/><text x="21.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.38%)</title><rect x="18" y="1604" width="5" height="15" fill="rgb(249,26,53)"/><text x="21.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.38%)</title><rect x="18" y="1620" width="5" height="15" fill="rgb(221,105,34)"/><text x="21.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="21" y="1636" width="2" height="15" fill="rgb(244,229,23)"/><text x="24.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1652" width="2" height="15" fill="rgb(207,194,7)"/><text x="24.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1668" width="2" height="15" fill="rgb(234,74,13)"/><text x="24.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1684" width="2" height="15" fill="rgb(233,54,24)"/><text x="24.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1700" width="2" height="15" fill="rgb(240,119,31)"/><text x="24.00" y="1710.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1716" width="2" height="15" fill="rgb(227,95,14)"/><text x="24.00" y="1726.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1732" width="2" height="15" fill="rgb(224,72,24)"/><text x="24.00" y="1742.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1748" width="2" height="15" fill="rgb(219,211,0)"/><text x="24.00" y="1758.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1764" width="2" height="15" fill="rgb(237,18,29)"/><text x="24.00" y="1774.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1780" width="2" height="15" fill="rgb(253,166,4)"/><text x="24.00" y="1790.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1796" width="2" height="15" fill="rgb(235,189,28)"/><text x="24.00" y="1806.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1812" width="2" height="15" fill="rgb(208,56,27)"/><text x="24.00" y="1822.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1828" width="2" height="15" fill="rgb(252,157,17)"/><text x="24.00" y="1838.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1844" width="2" height="15" fill="rgb(228,151,18)"/><text x="24.00" y="1854.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1860" width="2" height="15" fill="rgb(215,144,9)"/><text x="24.00" y="1870.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1876" width="2" height="15" fill="rgb(226,84,17)"/><text x="24.00" y="1886.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="21" y="1892" width="2" height="15" fill="rgb(213,188,18)"/><text x="24.00" y="1902.50"></text></g><g><title>0x7fd731463681 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="23" y="1620" width="2" height="15" fill="rgb(240,10,52)"/><text x="26.00" y="1630.50"></text></g><g><title>0x7fd73146894d (?) (1 samples, 0.19%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(226,50,9)"/><text x="28.00" y="1630.50"></text></g><g><title>0x7fd7315296bb (?) (1 samples, 0.19%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(230,118,19)"/><text x="28.00" y="1646.50"></text></g><g><title>0x7fd731528de2 (?) (1 samples, 0.19%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(231,10,14)"/><text x="28.00" y="1662.50"></text></g><g><title>0x7fd73152df16 (?) (1 samples, 0.19%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(228,12,35)"/><text x="28.00" y="1678.50"></text></g><g><title>0x7fd731517464 (?) (1 samples, 0.19%)</title><rect x="25" y="1684" width="2" height="15" fill="rgb(240,126,43)"/><text x="28.00" y="1694.50"></text></g><g><title>0x7fd73151b894 (?) (1 samples, 0.19%)</title><rect x="25" y="1700" width="2" height="15" fill="rgb(251,74,0)"/><text x="28.00" y="1710.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.57%)</title><rect x="23" y="1508" width="7" height="15" fill="rgb(232,77,18)"/><text x="26.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.57%)</title><rect x="23" y="1524" width="7" height="15" fill="rgb(238,21,39)"/><text x="26.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.57%)</title><rect x="23" y="1540" width="7" height="15" fill="rgb(238,52,27)"/><text x="26.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.57%)</title><rect x="23" y="1556" width="7" height="15" fill="rgb(254,7,24)"/><text x="26.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.57%)</title><rect x="23" y="1572" width="7" height="15" fill="rgb(219,77,21)"/><text x="26.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (3 samples, 0.57%)</title><rect x="23" y="1588" width="7" height="15" fill="rgb(242,205,38)"/><text x="26.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (3 samples, 0.57%)</title><rect x="23" y="1604" width="7" height="15" fill="rgb(241,41,39)"/><text x="26.00" y="1614.50"></text></g><g><title>0x7fd73146a3b1 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="27" y="1620" width="3" height="15" fill="rgb(226,34,5)"/><text x="30.00" y="1630.50"></text></g><g><title>google::protobuf::python::cmessage::Clear (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="27" y="1636" width="3" height="15" fill="rgb(233,168,24)"/><text x="30.00" y="1646.50"></text></g><g><title>0x7fd731468083 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="27" y="1652" width="3" height="15" fill="rgb(235,44,43)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="1348" width="14" height="15" fill="rgb(211,50,37)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (6 samples, 1.14%)</title><rect x="18" y="1364" width="14" height="15" fill="rgb(239,150,37)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="1380" width="14" height="15" fill="rgb(229,7,54)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="1396" width="14" height="15" fill="rgb(241,157,39)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="1412" width="14" height="15" fill="rgb(215,227,37)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.14%)</title><rect x="18" y="1428" width="14" height="15" fill="rgb(231,209,46)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="1444" width="14" height="15" fill="rgb(221,203,3)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (6 samples, 1.14%)</title><rect x="18" y="1460" width="14" height="15" fill="rgb(220,201,35)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.76%)</title><rect x="23" y="1476" width="9" height="15" fill="rgb(214,64,41)"/><text x="26.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.76%)</title><rect x="23" y="1492" width="9" height="15" fill="rgb(230,155,38)"/><text x="26.00" y="1502.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(231,42,6)"/><text x="33.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="484" width="16" height="15" fill="rgb(209,28,29)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="500" width="16" height="15" fill="rgb(210,60,2)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="516" width="16" height="15" fill="rgb(235,6,16)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="532" width="16" height="15" fill="rgb(228,113,23)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="548" width="16" height="15" fill="rgb(253,173,45)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="564" width="16" height="15" fill="rgb(249,31,38)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 1.33%)</title><rect x="18" y="580" width="16" height="15" fill="rgb(226,114,43)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="596" width="16" height="15" fill="rgb(246,11,11)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="612" width="16" height="15" fill="rgb(219,126,35)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="628" width="16" height="15" fill="rgb(212,122,3)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="644" width="16" height="15" fill="rgb(244,12,36)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="660" width="16" height="15" fill="rgb(235,112,2)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 1.33%)</title><rect x="18" y="676" width="16" height="15" fill="rgb(229,200,51)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="692" width="16" height="15" fill="rgb(228,96,38)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="708" width="16" height="15" fill="rgb(209,70,47)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="724" width="16" height="15" fill="rgb(250,184,48)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="740" width="16" height="15" fill="rgb(254,178,37)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="756" width="16" height="15" fill="rgb(227,136,3)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 1.33%)</title><rect x="18" y="772" width="16" height="15" fill="rgb(210,190,54)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="788" width="16" height="15" fill="rgb(243,117,36)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="804" width="16" height="15" fill="rgb(220,80,0)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="820" width="16" height="15" fill="rgb(240,204,51)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="836" width="16" height="15" fill="rgb(248,144,6)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="852" width="16" height="15" fill="rgb(222,84,19)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 1.33%)</title><rect x="18" y="868" width="16" height="15" fill="rgb(208,225,19)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="884" width="16" height="15" fill="rgb(231,148,5)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="900" width="16" height="15" fill="rgb(224,175,2)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="916" width="16" height="15" fill="rgb(244,163,47)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="932" width="16" height="15" fill="rgb(210,182,32)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="948" width="16" height="15" fill="rgb(220,187,37)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="964" width="16" height="15" fill="rgb(244,69,6)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="980" width="16" height="15" fill="rgb(207,126,20)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="996" width="16" height="15" fill="rgb(239,207,2)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 1.33%)</title><rect x="18" y="1012" width="16" height="15" fill="rgb(226,9,36)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1028" width="16" height="15" fill="rgb(243,188,33)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1044" width="16" height="15" fill="rgb(213,179,12)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1060" width="16" height="15" fill="rgb(250,78,44)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="1076" width="16" height="15" fill="rgb(233,14,21)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1092" width="16" height="15" fill="rgb(253,29,44)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 1.33%)</title><rect x="18" y="1108" width="16" height="15" fill="rgb(231,120,39)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1124" width="16" height="15" fill="rgb(246,56,38)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1140" width="16" height="15" fill="rgb(209,62,36)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1156" width="16" height="15" fill="rgb(208,105,12)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1172" width="16" height="15" fill="rgb(233,37,40)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1188" width="16" height="15" fill="rgb(205,21,22)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="1204" width="16" height="15" fill="rgb(214,53,31)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1220" width="16" height="15" fill="rgb(220,33,17)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (7 samples, 1.33%)</title><rect x="18" y="1236" width="16" height="15" fill="rgb(230,142,46)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1252" width="16" height="15" fill="rgb(253,133,33)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1268" width="16" height="15" fill="rgb(213,217,25)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1284" width="16" height="15" fill="rgb(241,137,6)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1300" width="16" height="15" fill="rgb(220,16,2)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.33%)</title><rect x="18" y="1316" width="16" height="15" fill="rgb(215,216,52)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.33%)</title><rect x="18" y="1332" width="16" height="15" fill="rgb(246,95,41)"/><text x="21.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1348" width="2" height="15" fill="rgb(254,130,10)"/><text x="35.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1364" width="2" height="15" fill="rgb(243,225,39)"/><text x="35.00" y="1374.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.52%)</title><rect x="18" y="340" width="18" height="15" fill="rgb(226,11,38)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.52%)</title><rect x="18" y="356" width="18" height="15" fill="rgb(225,106,47)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.52%)</title><rect x="18" y="372" width="18" height="15" fill="rgb(244,93,36)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.52%)</title><rect x="18" y="388" width="18" height="15" fill="rgb(249,208,6)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.52%)</title><rect x="18" y="404" width="18" height="15" fill="rgb(236,205,53)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.52%)</title><rect x="18" y="420" width="18" height="15" fill="rgb(220,74,47)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.52%)</title><rect x="18" y="436" width="18" height="15" fill="rgb(224,156,15)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.52%)</title><rect x="18" y="452" width="18" height="15" fill="rgb(223,139,23)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.52%)</title><rect x="18" y="468" width="18" height="15" fill="rgb(249,228,1)"/><text x="21.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="484" width="2" height="15" fill="rgb(245,106,22)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="500" width="2" height="15" fill="rgb(241,85,54)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="516" width="2" height="15" fill="rgb(205,210,33)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="34" y="532" width="2" height="15" fill="rgb(240,229,10)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="548" width="2" height="15" fill="rgb(243,110,20)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="564" width="2" height="15" fill="rgb(240,224,16)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="580" width="2" height="15" fill="rgb(214,53,30)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="596" width="2" height="15" fill="rgb(208,194,24)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="612" width="2" height="15" fill="rgb(205,97,21)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="628" width="2" height="15" fill="rgb(222,227,52)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="644" width="2" height="15" fill="rgb(237,55,50)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="660" width="2" height="15" fill="rgb(220,215,29)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="676" width="2" height="15" fill="rgb(246,74,5)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="692" width="2" height="15" fill="rgb(208,118,45)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="708" width="2" height="15" fill="rgb(227,10,18)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.19%)</title><rect x="34" y="724" width="2" height="15" fill="rgb(218,72,41)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="740" width="2" height="15" fill="rgb(239,90,26)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="756" width="2" height="15" fill="rgb(218,20,3)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="772" width="2" height="15" fill="rgb(220,215,36)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="788" width="2" height="15" fill="rgb(241,157,54)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="804" width="2" height="15" fill="rgb(245,181,48)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="820" width="2" height="15" fill="rgb(248,111,21)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="836" width="2" height="15" fill="rgb(213,161,51)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="852" width="2" height="15" fill="rgb(239,10,8)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="868" width="2" height="15" fill="rgb(245,185,51)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="884" width="2" height="15" fill="rgb(237,3,32)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(224,103,50)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.19%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(237,122,8)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(254,77,13)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(234,175,29)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(206,32,27)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(249,118,40)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(225,215,0)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.19%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(254,210,50)"/><text x="37.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="1028" width="2" height="15" fill="rgb(220,56,49)"/><text x="37.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="1044" width="2" height="15" fill="rgb(223,90,53)"/><text x="37.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.19%)</title><rect x="34" y="1060" width="2" height="15" fill="rgb(245,120,15)"/><text x="37.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.19%)</title><rect x="34" y="1076" width="2" height="15" fill="rgb(248,3,43)"/><text x="37.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.19%)</title><rect x="34" y="1092" width="2" height="15" fill="rgb(220,95,23)"/><text x="37.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.19%)</title><rect x="34" y="1108" width="2" height="15" fill="rgb(237,153,38)"/><text x="37.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.19%)</title><rect x="34" y="1124" width="2" height="15" fill="rgb(230,113,13)"/><text x="37.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="34" y="1140" width="2" height="15" fill="rgb(212,192,51)"/><text x="37.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 1.71%)</title><rect x="18" y="244" width="21" height="15" fill="rgb(252,18,52)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.71%)</title><rect x="18" y="260" width="21" height="15" fill="rgb(252,85,24)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.71%)</title><rect x="18" y="276" width="21" height="15" fill="rgb(218,143,18)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.71%)</title><rect x="18" y="292" width="21" height="15" fill="rgb(228,23,14)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.71%)</title><rect x="18" y="308" width="21" height="15" fill="rgb(238,198,8)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.71%)</title><rect x="18" y="324" width="21" height="15" fill="rgb(234,227,16)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.19%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(217,113,40)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="356" width="3" height="15" fill="rgb(242,126,34)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="372" width="3" height="15" fill="rgb(237,218,8)"/><text x="39.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="388" width="3" height="15" fill="rgb(208,142,38)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="404" width="3" height="15" fill="rgb(232,1,48)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="420" width="3" height="15" fill="rgb(230,54,25)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="436" width="3" height="15" fill="rgb(214,25,5)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="452" width="3" height="15" fill="rgb(222,216,6)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="468" width="3" height="15" fill="rgb(212,196,26)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.19%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(246,138,7)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(253,106,40)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(240,43,35)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(226,17,46)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(232,58,13)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(221,90,33)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.19%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(205,109,18)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(227,187,4)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(213,15,51)"/><text x="39.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(214,229,19)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(230,176,28)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(225,178,10)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(225,56,18)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(234,202,8)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(212,177,42)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.19%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(221,143,39)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(237,86,36)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(223,21,36)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(233,44,28)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(221,105,11)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(242,113,54)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.19%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(240,27,48)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(235,0,1)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(252,123,6)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(241,125,26)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(228,147,31)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(235,105,11)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.19%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(240,218,7)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(254,114,9)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(237,30,50)"/><text x="39.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(246,26,4)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(212,175,2)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(239,204,30)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(240,77,4)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(220,192,41)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(212,129,29)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.19%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(207,144,40)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(241,164,11)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(235,31,34)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(233,199,24)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(251,142,25)"/><text x="39.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(242,191,22)"/><text x="39.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(238,7,40)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.67%)</title><rect x="10" y="68" width="31" height="15" fill="rgb(251,177,9)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.67%)</title><rect x="10" y="84" width="31" height="15" fill="rgb(248,189,13)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.67%)</title><rect x="10" y="100" width="31" height="15" fill="rgb(209,170,25)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.67%)</title><rect x="10" y="116" width="31" height="15" fill="rgb(213,14,36)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.67%)</title><rect x="10" y="132" width="31" height="15" fill="rgb(251,148,25)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (14 samples, 2.67%)</title><rect x="10" y="148" width="31" height="15" fill="rgb(236,31,16)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.67%)</title><rect x="10" y="164" width="31" height="15" fill="rgb(246,71,47)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.67%)</title><rect x="10" y="180" width="31" height="15" fill="rgb(250,86,8)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.90%)</title><rect x="18" y="196" width="23" height="15" fill="rgb(220,197,14)"/><text x="21.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.90%)</title><rect x="18" y="212" width="23" height="15" fill="rgb(215,222,1)"/><text x="21.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.90%)</title><rect x="18" y="228" width="23" height="15" fill="rgb(217,72,46)"/><text x="21.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.19%)</title><rect x="39" y="244" width="2" height="15" fill="rgb(212,95,41)"/><text x="42.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="260" width="2" height="15" fill="rgb(251,64,32)"/><text x="42.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="276" width="2" height="15" fill="rgb(235,182,51)"/><text x="42.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="292" width="2" height="15" fill="rgb(210,119,16)"/><text x="42.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="308" width="2" height="15" fill="rgb(225,96,42)"/><text x="42.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="324" width="2" height="15" fill="rgb(233,111,11)"/><text x="42.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_base.py) (1 samples, 0.19%)</title><rect x="39" y="340" width="2" height="15" fill="rgb(241,4,39)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="356" width="2" height="15" fill="rgb(206,48,52)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="372" width="2" height="15" fill="rgb(206,209,0)"/><text x="42.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="388" width="2" height="15" fill="rgb(247,90,39)"/><text x="42.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="404" width="2" height="15" fill="rgb(228,160,9)"/><text x="42.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="420" width="2" height="15" fill="rgb(216,30,53)"/><text x="42.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py) (1 samples, 0.19%)</title><rect x="39" y="436" width="2" height="15" fill="rgb(221,92,10)"/><text x="42.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="452" width="2" height="15" fill="rgb(242,187,23)"/><text x="42.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="468" width="2" height="15" fill="rgb(211,224,25)"/><text x="42.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="484" width="2" height="15" fill="rgb(216,86,25)"/><text x="42.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="500" width="2" height="15" fill="rgb(245,193,30)"/><text x="42.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="516" width="2" height="15" fill="rgb(245,16,19)"/><text x="42.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_data.py) (1 samples, 0.19%)</title><rect x="39" y="532" width="2" height="15" fill="rgb(220,180,5)"/><text x="42.00" y="542.50"></text></g><g><title>0x7fd743114b84 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="59" y="132" width="2" height="15" fill="rgb(240,4,38)"/><text x="62.00" y="142.50"></text></g><g><title>0x7fd743114bc0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="61" y="132" width="2" height="15" fill="rgb(205,18,20)"/><text x="64.00" y="142.50"></text></g><g><title>0x7fd743114c28 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="63" y="132" width="3" height="15" fill="rgb(207,186,39)"/><text x="66.00" y="142.50"></text></g><g><title>0x7fd743114c2d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="66" y="132" width="2" height="15" fill="rgb(246,166,10)"/><text x="69.00" y="142.50"></text></g><g><title>0x7fd743114c36 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="68" y="132" width="2" height="15" fill="rgb(237,76,33)"/><text x="71.00" y="142.50"></text></g><g><title>0x7fd743114c4d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="70" y="132" width="2" height="15" fill="rgb(210,103,20)"/><text x="73.00" y="142.50"></text></g><g><title>0x7fd743114aa0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="72" y="148" width="3" height="15" fill="rgb(243,98,16)"/><text x="75.00" y="158.50"></text></g><g><title>0x7fd743115eb0 (libc-2.29.so) (8 samples, 1.52%)</title><rect x="59" y="116" width="18" height="15" fill="rgb(207,23,49)"/><text x="62.00" y="126.50"></text></g><g><title>0x7fd743114ca7 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="72" y="132" width="5" height="15" fill="rgb(228,6,3)"/><text x="75.00" y="142.50"></text></g><g><title>0x7fd743114acd (libc-2.29.so) (1 samples, 0.19%)</title><rect x="75" y="148" width="2" height="15" fill="rgb(253,201,49)"/><text x="78.00" y="158.50"></text></g><g><title>0x7fd703185ff9 (?) (1 samples, 0.19%)</title><rect x="88" y="212" width="2" height="15" fill="rgb(237,170,13)"/><text x="91.00" y="222.50"></text></g><g><title>0x7fd703180ef6 (?) (1 samples, 0.19%)</title><rect x="88" y="228" width="2" height="15" fill="rgb(210,145,30)"/><text x="91.00" y="238.50"></text></g><g><title>0x7fd703175962 (?) (1 samples, 0.19%)</title><rect x="88" y="244" width="2" height="15" fill="rgb(230,54,46)"/><text x="91.00" y="254.50"></text></g><g><title>0x7fd7031a97a7 (?) (1 samples, 0.19%)</title><rect x="88" y="260" width="2" height="15" fill="rgb(246,145,8)"/><text x="91.00" y="270.50"></text></g><g><title>0x7fd7031a9379 (?) (1 samples, 0.19%)</title><rect x="88" y="276" width="2" height="15" fill="rgb(217,86,40)"/><text x="91.00" y="286.50"></text></g><g><title>0x7fd7036078b8 (?) (1 samples, 0.19%)</title><rect x="88" y="292" width="2" height="15" fill="rgb(224,99,40)"/><text x="91.00" y="302.50"></text></g><g><title>0x7fd703605c7f (?) (1 samples, 0.19%)</title><rect x="88" y="308" width="2" height="15" fill="rgb(217,9,43)"/><text x="91.00" y="318.50"></text></g><g><title>0x7fd70361899c (?) (1 samples, 0.19%)</title><rect x="88" y="324" width="2" height="15" fill="rgb(218,218,50)"/><text x="91.00" y="334.50"></text></g><g><title>0x7fd7032fdae6 (?) (1 samples, 0.19%)</title><rect x="88" y="340" width="2" height="15" fill="rgb(215,166,52)"/><text x="91.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="93" y="340" width="4" height="15" fill="rgb(223,3,48)"/><text x="96.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="93" y="356" width="4" height="15" fill="rgb(251,20,2)"/><text x="96.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="93" y="372" width="4" height="15" fill="rgb(249,119,54)"/><text x="96.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="95" y="388" width="2" height="15" fill="rgb(244,77,37)"/><text x="98.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="97" y="340" width="2" height="15" fill="rgb(243,87,3)"/><text x="100.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="97" y="356" width="2" height="15" fill="rgb(224,126,30)"/><text x="100.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="97" y="372" width="2" height="15" fill="rgb(245,0,4)"/><text x="100.00" y="382.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="97" y="388" width="2" height="15" fill="rgb(236,67,8)"/><text x="100.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="97" y="404" width="2" height="15" fill="rgb(212,143,28)"/><text x="100.00" y="414.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(211,30,34)"/><text x="260.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="257" y="372" width="2" height="15" fill="rgb(232,189,50)"/><text x="260.00" y="382.50"></text></g><g><title>0x7fd743294e00 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="299" y="372" width="3" height="15" fill="rgb(247,201,32)"/><text x="302.00" y="382.50"></text></g><g><title>0x7fd743294e2f (libm-2.29.so) (1 samples, 0.19%)</title><rect x="302" y="372" width="2" height="15" fill="rgb(248,172,11)"/><text x="305.00" y="382.50"></text></g><g><title>0x7fd743294e37 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="304" y="372" width="2" height="15" fill="rgb(248,207,11)"/><text x="307.00" y="382.50"></text></g><g><title>0x7fd743294e6d (libm-2.29.so) (1 samples, 0.19%)</title><rect x="306" y="372" width="2" height="15" fill="rgb(236,213,21)"/><text x="309.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (94 samples, 17.90%)</title><rect x="99" y="340" width="212" height="15" fill="rgb(211,42,9)"/><text x="102.00" y="350.50">onnxruntime::ml::LinearClas..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 4.38%)</title><rect x="259" y="356" width="52" height="15" fill="rgb(233,113,36)"/><text x="262.00" y="366.50">onnxr..</text></g><g><title>0x7fd743294e76 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="308" y="372" width="3" height="15" fill="rgb(226,153,37)"/><text x="311.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.71%)</title><rect x="311" y="340" width="20" height="15" fill="rgb(246,59,27)"/><text x="314.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.71%)</title><rect x="311" y="356" width="20" height="15" fill="rgb(229,90,15)"/><text x="314.00" y="366.50"></text></g><g><title>0x7fd743116b12 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="407" y="388" width="3" height="15" fill="rgb(253,93,14)"/><text x="410.00" y="398.50"></text></g><g><title>0x7fd743116b76 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="410" y="388" width="4" height="15" fill="rgb(229,28,2)"/><text x="413.00" y="398.50"></text></g><g><title>0x7fd743116d27 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="414" y="388" width="2" height="15" fill="rgb(237,125,26)"/><text x="417.00" y="398.50"></text></g><g><title>0x7fd743116d81 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="416" y="388" width="3" height="15" fill="rgb(246,120,35)"/><text x="419.00" y="398.50"></text></g><g><title>0x7fd743116dec (libc-2.29.so) (2 samples, 0.38%)</title><rect x="419" y="388" width="4" height="15" fill="rgb(222,5,35)"/><text x="422.00" y="398.50"></text></g><g><title>0x7fd74311706d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="423" y="388" width="2" height="15" fill="rgb(254,109,2)"/><text x="426.00" y="398.50"></text></g><g><title>0x7fd74311708c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="425" y="388" width="3" height="15" fill="rgb(243,225,20)"/><text x="428.00" y="398.50"></text></g><g><title>0x7fd7431170a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="428" y="388" width="2" height="15" fill="rgb(217,88,3)"/><text x="431.00" y="398.50"></text></g><g><title>0x7fd743117384 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="430" y="388" width="4" height="15" fill="rgb(240,118,38)"/><text x="433.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (38 samples, 7.24%)</title><rect x="351" y="356" width="86" height="15" fill="rgb(216,55,12)"/><text x="354.00" y="366.50">operator n..</text></g><g><title>malloc (libc-2.29.so) (37 samples, 7.05%)</title><rect x="353" y="372" width="84" height="15" fill="rgb(248,168,53)"/><text x="356.00" y="382.50">malloc (l..</text></g><g><title>0x7fd7431173d1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="434" y="388" width="3" height="15" fill="rgb(237,103,23)"/><text x="437.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="437" y="356" width="6" height="15" fill="rgb(254,111,41)"/><text x="440.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.38%)</title><rect x="443" y="356" width="5" height="15" fill="rgb(224,35,45)"/><text x="446.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (161 samples, 30.67%)</title><rect x="93" y="260" width="362" height="15" fill="rgb(212,77,20)"/><text x="96.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (161 samples, 30.67%)</title><rect x="93" y="276" width="362" height="15" fill="rgb(251,36,0)"/><text x="96.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (161 samples, 30.67%)</title><rect x="93" y="292" width="362" height="15" fill="rgb(216,138,41)"/><text x="96.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (161 samples, 30.67%)</title><rect x="93" y="308" width="362" height="15" fill="rgb(240,40,17)"/><text x="96.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (161 samples, 30.67%)</title><rect x="93" y="324" width="362" height="15" fill="rgb(236,101,45)"/><text x="96.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 10.48%)</title><rect x="331" y="340" width="124" height="15" fill="rgb(249,16,49)"/><text x="334.00" y="350.50">onnxruntime::ml..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="448" y="356" width="7" height="15" fill="rgb(205,85,7)"/><text x="451.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="455" y="260" width="2" height="15" fill="rgb(214,144,50)"/><text x="458.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.19%)</title><rect x="455" y="276" width="2" height="15" fill="rgb(221,37,29)"/><text x="458.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="455" y="292" width="2" height="15" fill="rgb(214,36,4)"/><text x="458.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(217,153,49)"/><text x="458.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(221,114,42)"/><text x="458.00" y="334.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 4.57%)</title><rect x="556" y="276" width="54" height="15" fill="rgb(230,11,30)"/><text x="559.00" y="286.50">pybin..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 14.10%)</title><rect x="457" y="260" width="166" height="15" fill="rgb(239,50,28)"/><text x="460.00" y="270.50">pybind11::detail::map..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 1.14%)</title><rect x="610" y="276" width="13" height="15" fill="rgb(234,155,0)"/><text x="613.00" y="286.50"></text></g><g><title>0x7fd74311591e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="628" y="292" width="2" height="15" fill="rgb(249,85,46)"/><text x="631.00" y="302.50"></text></g><g><title>0x7fd743115982 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="630" y="292" width="4" height="15" fill="rgb(243,10,51)"/><text x="633.00" y="302.50"></text></g><g><title>0x7fd743115d07 (libc-2.29.so) (7 samples, 1.33%)</title><rect x="634" y="292" width="16" height="15" fill="rgb(232,29,14)"/><text x="637.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="650" y="292" width="2" height="15" fill="rgb(216,197,4)"/><text x="653.00" y="302.50"></text></g><g><title>0x7fd743115906 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="652" y="308" width="3" height="15" fill="rgb(249,8,22)"/><text x="655.00" y="318.50"></text></g><g><title>0x7fd74311592c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="655" y="308" width="2" height="15" fill="rgb(227,51,7)"/><text x="658.00" y="318.50"></text></g><g><title>0x7fd7431159b7 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="657" y="308" width="2" height="15" fill="rgb(236,217,36)"/><text x="660.00" y="318.50"></text></g><g><title>0x7fd743115a4b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="659" y="308" width="2" height="15" fill="rgb(229,118,11)"/><text x="662.00" y="318.50"></text></g><g><title>0x7fd743115d07 (libc-2.29.so) (4 samples, 0.76%)</title><rect x="661" y="308" width="9" height="15" fill="rgb(225,93,52)"/><text x="664.00" y="318.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (281 samples, 53.52%)</title><rect x="41" y="68" width="632" height="15" fill="rgb(209,55,39)"/><text x="44.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_floa..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (281 samples, 53.52%)</title><rect x="41" y="84" width="632" height="15" fill="rgb(211,109,10)"/><text x="44.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_fl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (281 samples, 53.52%)</title><rect x="41" y="100" width="632" height="15" fill="rgb(252,29,43)"/><text x="44.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (265 samples, 50.48%)</title><rect x="77" y="116" width="596" height="15" fill="rgb(254,74,47)"/><text x="80.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (264 samples, 50.29%)</title><rect x="79" y="132" width="594" height="15" fill="rgb(236,192,5)"/><text x="82.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (262 samples, 49.90%)</title><rect x="84" y="148" width="589" height="15" fill="rgb(207,40,11)"/><text x="87.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (262 samples, 49.90%)</title><rect x="84" y="164" width="589" height="15" fill="rgb(226,174,25)"/><text x="87.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (261 samples, 49.71%)</title><rect x="86" y="180" width="587" height="15" fill="rgb(238,201,34)"/><text x="89.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (261 samples, 49.71%)</title><rect x="86" y="196" width="587" height="15" fill="rgb(249,58,17)"/><text x="89.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (259 samples, 49.33%)</title><rect x="90" y="212" width="583" height="15" fill="rgb(234,109,51)"/><text x="93.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state...</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (258 samples, 49.14%)</title><rect x="93" y="228" width="580" height="15" fill="rgb(253,17,1)"/><text x="96.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(p..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (258 samples, 49.14%)</title><rect x="93" y="244" width="580" height="15" fill="rgb(245,182,18)"/><text x="96.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 4.19%)</title><rect x="623" y="260" width="50" height="15" fill="rgb(229,15,54)"/><text x="626.00" y="270.50">std::..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 4.19%)</title><rect x="623" y="276" width="50" height="15" fill="rgb(240,53,5)"/><text x="626.00" y="286.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.71%)</title><rect x="652" y="292" width="21" height="15" fill="rgb(254,66,46)"/><text x="655.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="670" y="308" width="3" height="15" fill="rgb(254,175,11)"/><text x="673.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="673" y="116" width="2" height="15" fill="rgb(240,148,29)"/><text x="676.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="673" y="132" width="2" height="15" fill="rgb(210,58,33)"/><text x="676.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="682" y="180" width="2" height="15" fill="rgb(219,195,20)"/><text x="685.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.19%)</title><rect x="700" y="212" width="2" height="15" fill="rgb(238,158,43)"/><text x="703.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.19%)</title><rect x="700" y="228" width="2" height="15" fill="rgb(240,178,7)"/><text x="703.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.19%)</title><rect x="700" y="244" width="2" height="15" fill="rgb(250,48,6)"/><text x="703.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.19%)</title><rect x="700" y="260" width="2" height="15" fill="rgb(205,21,44)"/><text x="703.00" y="270.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="706" y="260" width="3" height="15" fill="rgb(247,92,47)"/><text x="709.00" y="270.50"></text></g><g><title>PyArray_DATA (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="711" y="340" width="2" height="15" fill="rgb(218,226,50)"/><text x="714.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 0.76%)</title><rect x="706" y="244" width="9" height="15" fill="rgb(252,50,25)"/><text x="709.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.57%)</title><rect x="709" y="260" width="6" height="15" fill="rgb(234,11,12)"/><text x="712.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (2 samples, 0.38%)</title><rect x="711" y="276" width="4" height="15" fill="rgb(229,68,2)"/><text x="714.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.38%)</title><rect x="711" y="292" width="4" height="15" fill="rgb(208,139,0)"/><text x="714.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.38%)</title><rect x="711" y="308" width="4" height="15" fill="rgb(254,37,51)"/><text x="714.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.38%)</title><rect x="711" y="324" width="4" height="15" fill="rgb(209,104,22)"/><text x="714.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="713" y="340" width="2" height="15" fill="rgb(250,98,43)"/><text x="716.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="713" y="356" width="2" height="15" fill="rgb(241,207,54)"/><text x="716.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.33%)</title><rect x="720" y="276" width="15" height="15" fill="rgb(205,49,33)"/><text x="723.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 1.33%)</title><rect x="720" y="292" width="15" height="15" fill="rgb(216,113,31)"/><text x="723.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (6 samples, 1.14%)</title><rect x="722" y="308" width="13" height="15" fill="rgb(209,174,7)"/><text x="725.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (6 samples, 1.14%)</title><rect x="722" y="324" width="13" height="15" fill="rgb(238,48,8)"/><text x="725.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (5 samples, 0.95%)</title><rect x="724" y="340" width="11" height="15" fill="rgb(251,80,9)"/><text x="727.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.95%)</title><rect x="724" y="356" width="11" height="15" fill="rgb(239,38,0)"/><text x="727.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.95%)</title><rect x="724" y="372" width="11" height="15" fill="rgb(233,52,30)"/><text x="727.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.95%)</title><rect x="724" y="388" width="11" height="15" fill="rgb(236,171,16)"/><text x="727.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (28 samples, 5.33%)</title><rect x="715" y="244" width="63" height="15" fill="rgb(221,148,28)"/><text x="718.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (27 samples, 5.14%)</title><rect x="718" y="260" width="60" height="15" fill="rgb(228,157,45)"/><text x="721.00" y="270.50">dot (&lt;..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 3.62%)</title><rect x="735" y="276" width="43" height="15" fill="rgb(244,32,30)"/><text x="738.00" y="286.50">sgem..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="780" y="276" width="3" height="15" fill="rgb(241,149,3)"/><text x="783.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="780" y="292" width="3" height="15" fill="rgb(220,80,19)"/><text x="783.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.19%)</title><rect x="780" y="308" width="3" height="15" fill="rgb(249,154,40)"/><text x="783.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.19%)</title><rect x="780" y="324" width="3" height="15" fill="rgb(252,36,46)"/><text x="783.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.19%)</title><rect x="783" y="292" width="2" height="15" fill="rgb(245,75,47)"/><text x="786.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.19%)</title><rect x="783" y="308" width="2" height="15" fill="rgb(213,10,9)"/><text x="786.00" y="318.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.19%)</title><rect x="785" y="308" width="2" height="15" fill="rgb(234,171,0)"/><text x="788.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.19%)</title><rect x="785" y="324" width="2" height="15" fill="rgb(239,131,40)"/><text x="788.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.19%)</title><rect x="785" y="340" width="2" height="15" fill="rgb(237,30,46)"/><text x="788.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h) (1 samples, 0.19%)</title><rect x="785" y="356" width="2" height="15" fill="rgb(215,62,21)"/><text x="788.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.38%)</title><rect x="787" y="308" width="5" height="15" fill="rgb(239,178,3)"/><text x="790.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.19%)</title><rect x="789" y="324" width="3" height="15" fill="rgb(209,5,52)"/><text x="792.00" y="334.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c) (1 samples, 0.19%)</title><rect x="792" y="308" width="2" height="15" fill="rgb(235,157,6)"/><text x="795.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.95%)</title><rect x="785" y="292" width="11" height="15" fill="rgb(207,229,18)"/><text x="788.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.19%)</title><rect x="794" y="308" width="2" height="15" fill="rgb(242,55,32)"/><text x="797.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="794" y="324" width="2" height="15" fill="rgb(209,144,33)"/><text x="797.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="794" y="340" width="2" height="15" fill="rgb(232,156,10)"/><text x="797.00" y="350.50"></text></g><g><title>0x7fd743135dbb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="794" y="356" width="2" height="15" fill="rgb(253,156,31)"/><text x="797.00" y="366.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.19%)</title><rect x="796" y="292" width="2" height="15" fill="rgb(228,174,19)"/><text x="799.00" y="302.50"></text></g><g><title>0x7fd72e3fd33a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="798" y="308" width="3" height="15" fill="rgb(218,189,19)"/><text x="801.00" y="318.50"></text></g><g><title>0x7fd7432611a0 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="812" y="356" width="4" height="15" fill="rgb(251,202,25)"/><text x="815.00" y="366.50"></text></g><g><title>0x7fd743294e00 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="816" y="356" width="3" height="15" fill="rgb(217,38,8)"/><text x="819.00" y="366.50"></text></g><g><title>0x7fd743294e62 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="819" y="356" width="2" height="15" fill="rgb(215,33,14)"/><text x="822.00" y="366.50"></text></g><g><title>0x7fd743294e7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="821" y="356" width="2" height="15" fill="rgb(223,155,37)"/><text x="824.00" y="366.50"></text></g><g><title>0x7fd72e41f214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.10%)</title><rect x="801" y="324" width="24" height="15" fill="rgb(238,197,41)"/><text x="804.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (11 samples, 2.10%)</title><rect x="801" y="340" width="24" height="15" fill="rgb(239,25,36)"/><text x="804.00" y="350.50">e..</text></g><g><title>0x7fd743294e96 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="823" y="356" width="2" height="15" fill="rgb(241,123,22)"/><text x="826.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (23 samples, 4.38%)</title><rect x="783" y="276" width="51" height="15" fill="rgb(236,95,30)"/><text x="786.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (16 samples, 3.05%)</title><rect x="798" y="292" width="36" height="15" fill="rgb(232,20,26)"/><text x="801.00" y="302.50">tri..</text></g><g><title>0x7fd72e3fd33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.86%)</title><rect x="801" y="308" width="33" height="15" fill="rgb(245,54,41)"/><text x="804.00" y="318.50">0x..</text></g><g><title>0x7fd72e41f228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="825" y="324" width="9" height="15" fill="rgb(221,16,21)"/><text x="828.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (59 samples, 11.24%)</title><rect x="704" y="228" width="133" height="15" fill="rgb(212,27,31)"/><text x="707.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (26 samples, 4.95%)</title><rect x="778" y="244" width="59" height="15" fill="rgb(225,133,43)"/><text x="781.00" y="254.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (26 samples, 4.95%)</title><rect x="778" y="260" width="59" height="15" fill="rgb(226,3,8)"/><text x="781.00" y="270.50">PyUFun..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="834" y="276" width="3" height="15" fill="rgb(241,59,9)"/><text x="837.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="834" y="292" width="3" height="15" fill="rgb(207,150,7)"/><text x="837.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="834" y="308" width="3" height="15" fill="rgb(252,227,49)"/><text x="837.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.38%)</title><rect x="843" y="260" width="5" height="15" fill="rgb(214,20,2)"/><text x="846.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="846" y="276" width="2" height="15" fill="rgb(233,116,35)"/><text x="849.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="846" y="292" width="2" height="15" fill="rgb(209,81,37)"/><text x="849.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (10 samples, 1.90%)</title><rect x="850" y="388" width="23" height="15" fill="rgb(209,113,53)"/><text x="853.00" y="398.50">F..</text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (5 samples, 0.95%)</title><rect x="861" y="404" width="12" height="15" fill="rgb(208,180,10)"/><text x="864.00" y="414.50"></text></g><g><title>array_sum (methods.c) (12 samples, 2.29%)</title><rect x="848" y="260" width="27" height="15" fill="rgb(221,174,41)"/><text x="851.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (12 samples, 2.29%)</title><rect x="848" y="276" width="27" height="15" fill="rgb(217,91,19)"/><text x="851.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.29%)</title><rect x="848" y="292" width="27" height="15" fill="rgb(241,157,6)"/><text x="851.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.29%)</title><rect x="848" y="308" width="27" height="15" fill="rgb(254,228,15)"/><text x="851.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 2.29%)</title><rect x="848" y="324" width="27" height="15" fill="rgb(226,0,14)"/><text x="851.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (12 samples, 2.29%)</title><rect x="848" y="340" width="27" height="15" fill="rgb(253,75,51)"/><text x="851.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (12 samples, 2.29%)</title><rect x="848" y="356" width="27" height="15" fill="rgb(244,169,12)"/><text x="851.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (12 samples, 2.29%)</title><rect x="848" y="372" width="27" height="15" fill="rgb(246,67,53)"/><text x="851.00" y="382.50">r..</text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="873" y="388" width="2" height="15" fill="rgb(247,123,34)"/><text x="876.00" y="398.50"></text></g><g><title>FLOAT_divide (loops.c.src) (2 samples, 0.38%)</title><rect x="877" y="324" width="5" height="15" fill="rgb(246,208,23)"/><text x="880.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (2 samples, 0.38%)</title><rect x="877" y="340" width="5" height="15" fill="rgb(217,178,14)"/><text x="880.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.38%)</title><rect x="877" y="356" width="5" height="15" fill="rgb(238,110,42)"/><text x="880.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.38%)</title><rect x="877" y="372" width="5" height="15" fill="rgb(233,196,23)"/><text x="880.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.95%)</title><rect x="877" y="308" width="11" height="15" fill="rgb(220,146,27)"/><text x="880.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.57%)</title><rect x="882" y="324" width="6" height="15" fill="rgb(206,78,16)"/><text x="885.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.57%)</title><rect x="882" y="340" width="6" height="15" fill="rgb(253,196,15)"/><text x="885.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.57%)</title><rect x="882" y="356" width="6" height="15" fill="rgb(227,160,44)"/><text x="885.00" y="366.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (96 samples, 18.29%)</title><rect x="675" y="132" width="216" height="15" fill="rgb(254,131,29)"/><text x="678.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (96 samples, 18.29%)</title><rect x="675" y="148" width="216" height="15" fill="rgb(229,201,3)"/><text x="678.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (95 samples, 18.10%)</title><rect x="677" y="164" width="214" height="15" fill="rgb(243,133,31)"/><text x="680.00" y="174.50">_run_sequence_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (92 samples, 17.52%)</title><rect x="684" y="180" width="207" height="15" fill="rgb(246,197,22)"/><text x="687.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (86 samples, 16.38%)</title><rect x="697" y="196" width="194" height="15" fill="rgb(218,151,36)"/><text x="700.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (84 samples, 16.00%)</title><rect x="702" y="212" width="189" height="15" fill="rgb(237,117,40)"/><text x="705.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (24 samples, 4.57%)</title><rect x="837" y="228" width="54" height="15" fill="rgb(222,101,20)"/><text x="840.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (23 samples, 4.38%)</title><rect x="839" y="244" width="52" height="15" fill="rgb(211,168,23)"/><text x="842.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.33%)</title><rect x="875" y="260" width="16" height="15" fill="rgb(243,220,32)"/><text x="878.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.14%)</title><rect x="877" y="276" width="14" height="15" fill="rgb(231,44,18)"/><text x="880.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.14%)</title><rect x="877" y="292" width="14" height="15" fill="rgb(218,1,18)"/><text x="880.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="888" y="308" width="3" height="15" fill="rgb(213,3,6)"/><text x="891.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.19%)</title><rect x="888" y="324" width="3" height="15" fill="rgb(214,125,24)"/><text x="891.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.19%)</title><rect x="888" y="340" width="3" height="15" fill="rgb(246,5,6)"/><text x="891.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.19%)</title><rect x="888" y="356" width="3" height="15" fill="rgb(205,189,27)"/><text x="891.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.19%)</title><rect x="888" y="372" width="3" height="15" fill="rgb(228,155,42)"/><text x="891.00" y="382.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.19%)</title><rect x="891" y="132" width="2" height="15" fill="rgb(252,197,18)"/><text x="894.00" y="142.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (99 samples, 18.86%)</title><rect x="673" y="100" width="222" height="15" fill="rgb(219,30,14)"/><text x="676.00" y="110.50">profile (bench_LogisticRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (98 samples, 18.67%)</title><rect x="675" y="116" width="220" height="15" fill="rgb(219,78,15)"/><text x="678.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="893" y="132" width="2" height="15" fill="rgb(228,113,32)"/><text x="896.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (100 samples, 19.05%)</title><rect x="673" y="68" width="224" height="15" fill="rgb(244,136,49)"/><text x="676.00" y="78.50">profile_pyrt (bench_LogisticR..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (100 samples, 19.05%)</title><rect x="673" y="84" width="224" height="15" fill="rgb(226,200,26)"/><text x="676.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="895" y="100" width="2" height="15" fill="rgb(233,26,54)"/><text x="898.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="895" y="116" width="2" height="15" fill="rgb(247,215,15)"/><text x="898.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="895" y="132" width="2" height="15" fill="rgb(225,18,30)"/><text x="898.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="895" y="148" width="2" height="15" fill="rgb(253,17,36)"/><text x="898.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="895" y="164" width="2" height="15" fill="rgb(213,105,34)"/><text x="898.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.19%)</title><rect x="895" y="180" width="2" height="15" fill="rgb(215,122,11)"/><text x="898.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.19%)</title><rect x="895" y="196" width="2" height="15" fill="rgb(245,62,37)"/><text x="898.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="212" width="2" height="15" fill="rgb(237,72,6)"/><text x="898.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="228" width="2" height="15" fill="rgb(213,181,31)"/><text x="898.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="244" width="2" height="15" fill="rgb(226,35,44)"/><text x="898.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="895" y="260" width="2" height="15" fill="rgb(239,214,34)"/><text x="898.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="276" width="2" height="15" fill="rgb(212,50,46)"/><text x="898.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.19%)</title><rect x="895" y="292" width="2" height="15" fill="rgb(217,79,8)"/><text x="898.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="308" width="2" height="15" fill="rgb(209,77,19)"/><text x="898.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="324" width="2" height="15" fill="rgb(211,184,9)"/><text x="898.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="340" width="2" height="15" fill="rgb(219,173,20)"/><text x="898.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="895" y="356" width="2" height="15" fill="rgb(213,90,54)"/><text x="898.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="372" width="2" height="15" fill="rgb(242,165,29)"/><text x="898.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.19%)</title><rect x="895" y="388" width="2" height="15" fill="rgb(225,184,32)"/><text x="898.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="404" width="2" height="15" fill="rgb(213,113,0)"/><text x="898.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="420" width="2" height="15" fill="rgb(219,130,12)"/><text x="898.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="436" width="2" height="15" fill="rgb(219,63,51)"/><text x="898.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="895" y="452" width="2" height="15" fill="rgb(243,161,35)"/><text x="898.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="895" y="468" width="2" height="15" fill="rgb(212,49,5)"/><text x="898.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.19%)</title><rect x="895" y="484" width="2" height="15" fill="rgb(211,15,41)"/><text x="898.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.19%)</title><rect x="895" y="500" width="2" height="15" fill="rgb(206,128,50)"/><text x="898.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="895" y="516" width="2" height="15" fill="rgb(251,87,15)"/><text x="898.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="895" y="532" width="2" height="15" fill="rgb(252,42,54)"/><text x="898.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="895" y="548" width="2" height="15" fill="rgb(250,143,29)"/><text x="898.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="895" y="564" width="2" height="15" fill="rgb(243,216,26)"/><text x="898.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="580" width="2" height="15" fill="rgb(244,36,7)"/><text x="898.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="596" width="2" height="15" fill="rgb(215,188,36)"/><text x="898.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="612" width="2" height="15" fill="rgb(209,14,27)"/><text x="898.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="628" width="2" height="15" fill="rgb(216,173,20)"/><text x="898.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="644" width="2" height="15" fill="rgb(238,134,11)"/><text x="898.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="660" width="2" height="15" fill="rgb(222,225,33)"/><text x="898.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="676" width="2" height="15" fill="rgb(241,52,22)"/><text x="898.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="692" width="2" height="15" fill="rgb(242,78,29)"/><text x="898.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="708" width="2" height="15" fill="rgb(215,93,4)"/><text x="898.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="724" width="2" height="15" fill="rgb(253,170,20)"/><text x="898.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="740" width="2" height="15" fill="rgb(208,51,19)"/><text x="898.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="756" width="2" height="15" fill="rgb(220,87,51)"/><text x="898.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="772" width="2" height="15" fill="rgb(208,148,28)"/><text x="898.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.19%)</title><rect x="895" y="788" width="2" height="15" fill="rgb(244,4,24)"/><text x="898.00" y="798.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.19%)</title><rect x="895" y="804" width="2" height="15" fill="rgb(235,206,26)"/><text x="898.00" y="814.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.19%)</title><rect x="895" y="820" width="2" height="15" fill="rgb(229,117,51)"/><text x="898.00" y="830.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.19%)</title><rect x="895" y="836" width="2" height="15" fill="rgb(230,157,41)"/><text x="898.00" y="846.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.19%)</title><rect x="895" y="852" width="2" height="15" fill="rgb(253,26,25)"/><text x="898.00" y="862.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="895" y="868" width="2" height="15" fill="rgb(249,135,45)"/><text x="898.00" y="878.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.19%)</title><rect x="895" y="884" width="2" height="15" fill="rgb(228,51,52)"/><text x="898.00" y="894.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.19%)</title><rect x="911" y="180" width="2" height="15" fill="rgb(226,13,30)"/><text x="914.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.19%)</title><rect x="911" y="196" width="2" height="15" fill="rgb(238,201,5)"/><text x="914.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.19%)</title><rect x="911" y="212" width="2" height="15" fill="rgb(237,172,15)"/><text x="914.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.38%)</title><rect x="915" y="244" width="5" height="15" fill="rgb(223,171,47)"/><text x="918.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.38%)</title><rect x="915" y="260" width="5" height="15" fill="rgb(213,37,29)"/><text x="918.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.38%)</title><rect x="915" y="276" width="5" height="15" fill="rgb(211,58,31)"/><text x="918.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.38%)</title><rect x="915" y="292" width="5" height="15" fill="rgb(241,4,30)"/><text x="918.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.38%)</title><rect x="915" y="308" width="5" height="15" fill="rgb(232,50,0)"/><text x="918.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="918" y="324" width="2" height="15" fill="rgb(231,68,51)"/><text x="921.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.38%)</title><rect x="922" y="292" width="5" height="15" fill="rgb(251,19,46)"/><text x="925.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.19%)</title><rect x="924" y="308" width="3" height="15" fill="rgb(243,29,26)"/><text x="927.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="927" y="292" width="2" height="15" fill="rgb(231,209,38)"/><text x="930.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.19%)</title><rect x="929" y="292" width="2" height="15" fill="rgb(251,117,29)"/><text x="932.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="929" y="308" width="2" height="15" fill="rgb(242,208,14)"/><text x="932.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="929" y="324" width="2" height="15" fill="rgb(223,158,9)"/><text x="932.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (7 samples, 1.33%)</title><rect x="931" y="308" width="16" height="15" fill="rgb(215,226,46)"/><text x="934.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.57%)</title><rect x="940" y="324" width="7" height="15" fill="rgb(223,128,39)"/><text x="943.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="947" y="308" width="2" height="15" fill="rgb(243,161,25)"/><text x="950.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (13 samples, 2.48%)</title><rect x="922" y="276" width="29" height="15" fill="rgb(248,150,27)"/><text x="925.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (9 samples, 1.71%)</title><rect x="931" y="292" width="20" height="15" fill="rgb(214,67,32)"/><text x="934.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="949" y="308" width="2" height="15" fill="rgb(249,165,18)"/><text x="952.00" y="318.50"></text></g><g><title>array_sum (methods.c) (18 samples, 3.43%)</title><rect x="913" y="180" width="41" height="15" fill="rgb(205,227,35)"/><text x="916.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 3.43%)</title><rect x="913" y="196" width="41" height="15" fill="rgb(222,220,5)"/><text x="916.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (17 samples, 3.24%)</title><rect x="915" y="212" width="39" height="15" fill="rgb(239,112,23)"/><text x="918.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (17 samples, 3.24%)</title><rect x="915" y="228" width="39" height="15" fill="rgb(237,108,41)"/><text x="918.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 2.86%)</title><rect x="920" y="244" width="34" height="15" fill="rgb(248,58,39)"/><text x="923.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (14 samples, 2.67%)</title><rect x="922" y="260" width="32" height="15" fill="rgb(210,175,18)"/><text x="925.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.19%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(218,184,23)"/><text x="954.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="951" y="292" width="3" height="15" fill="rgb(224,192,36)"/><text x="954.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="951" y="308" width="3" height="15" fill="rgb(216,29,16)"/><text x="954.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.19%)</title><rect x="954" y="196" width="2" height="15" fill="rgb(241,227,40)"/><text x="957.00" y="206.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.38%)</title><rect x="958" y="276" width="4" height="15" fill="rgb(232,225,11)"/><text x="961.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.38%)</title><rect x="958" y="292" width="4" height="15" fill="rgb(216,145,32)"/><text x="961.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.38%)</title><rect x="958" y="308" width="4" height="15" fill="rgb(213,21,53)"/><text x="961.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.38%)</title><rect x="958" y="324" width="4" height="15" fill="rgb(227,105,34)"/><text x="961.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="962" y="292" width="3" height="15" fill="rgb(211,109,23)"/><text x="965.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.19%)</title><rect x="962" y="308" width="3" height="15" fill="rgb(237,226,30)"/><text x="965.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="962" y="324" width="3" height="15" fill="rgb(237,124,29)"/><text x="965.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="962" y="340" width="3" height="15" fill="rgb(229,87,35)"/><text x="965.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="962" y="356" width="3" height="15" fill="rgb(216,106,36)"/><text x="965.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="962" y="372" width="3" height="15" fill="rgb(235,175,25)"/><text x="965.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.19%)</title><rect x="962" y="388" width="3" height="15" fill="rgb(232,61,18)"/><text x="965.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="962" y="404" width="3" height="15" fill="rgb(234,58,52)"/><text x="965.00" y="414.50"></text></g><g><title>0x7fd7431171a0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="962" y="420" width="3" height="15" fill="rgb(229,58,3)"/><text x="965.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.19%)</title><rect x="965" y="292" width="2" height="15" fill="rgb(226,75,44)"/><text x="968.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="965" y="308" width="2" height="15" fill="rgb(213,39,39)"/><text x="968.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.57%)</title><rect x="962" y="276" width="7" height="15" fill="rgb(221,133,44)"/><text x="965.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.19%)</title><rect x="967" y="292" width="2" height="15" fill="rgb(245,89,22)"/><text x="970.00" y="302.50"></text></g><g><title>array_add (number.c) (7 samples, 1.33%)</title><rect x="956" y="196" width="15" height="15" fill="rgb(240,138,34)"/><text x="959.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.14%)</title><rect x="958" y="212" width="13" height="15" fill="rgb(213,112,44)"/><text x="961.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.14%)</title><rect x="958" y="228" width="13" height="15" fill="rgb(238,204,32)"/><text x="961.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.14%)</title><rect x="958" y="244" width="13" height="15" fill="rgb(233,172,49)"/><text x="961.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.14%)</title><rect x="958" y="260" width="13" height="15" fill="rgb(207,200,28)"/><text x="961.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="969" y="276" width="2" height="15" fill="rgb(217,163,46)"/><text x="972.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="969" y="292" width="2" height="15" fill="rgb(245,208,38)"/><text x="972.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="971" y="196" width="3" height="15" fill="rgb(222,155,14)"/><text x="974.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.19%)</title><rect x="978" y="212" width="2" height="15" fill="rgb(251,214,33)"/><text x="981.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="985" y="228" width="2" height="15" fill="rgb(215,13,51)"/><text x="988.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.76%)</title><rect x="980" y="212" width="9" height="15" fill="rgb(234,59,18)"/><text x="983.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.19%)</title><rect x="987" y="228" width="2" height="15" fill="rgb(214,194,41)"/><text x="990.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.57%)</title><rect x="989" y="212" width="7" height="15" fill="rgb(217,27,2)"/><text x="992.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.38%)</title><rect x="992" y="228" width="4" height="15" fill="rgb(251,113,49)"/><text x="995.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.19%)</title><rect x="994" y="244" width="2" height="15" fill="rgb(235,111,23)"/><text x="997.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.19%)</title><rect x="996" y="212" width="2" height="15" fill="rgb(222,188,48)"/><text x="999.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (12 samples, 2.29%)</title><rect x="974" y="196" width="27" height="15" fill="rgb(222,214,20)"/><text x="977.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.19%)</title><rect x="998" y="212" width="3" height="15" fill="rgb(208,63,2)"/><text x="1001.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.19%)</title><rect x="998" y="228" width="3" height="15" fill="rgb(224,210,12)"/><text x="1001.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="1001" y="196" width="4" height="15" fill="rgb(214,166,2)"/><text x="1004.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="1001" y="212" width="4" height="15" fill="rgb(227,43,34)"/><text x="1004.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="1003" y="228" width="2" height="15" fill="rgb(241,196,33)"/><text x="1006.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="1007" y="212" width="3" height="15" fill="rgb(241,102,32)"/><text x="1010.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.86%)</title><rect x="1010" y="212" width="33" height="15" fill="rgb(246,105,10)"/><text x="1013.00" y="222.50">dg..</text></g><g><title>DOUBLE_matmul (matmul.c.src) (4 samples, 0.76%)</title><rect x="1043" y="260" width="9" height="15" fill="rgb(248,180,16)"/><text x="1046.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.76%)</title><rect x="1043" y="276" width="9" height="15" fill="rgb(252,180,48)"/><text x="1046.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.76%)</title><rect x="1043" y="292" width="9" height="15" fill="rgb(238,72,35)"/><text x="1046.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="1046" y="308" width="6" height="15" fill="rgb(243,171,36)"/><text x="1049.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (21 samples, 4.00%)</title><rect x="1055" y="324" width="47" height="15" fill="rgb(217,60,12)"/><text x="1058.00" y="334.50">_ali..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (23 samples, 4.38%)</title><rect x="1052" y="276" width="52" height="15" fill="rgb(221,104,43)"/><text x="1055.00" y="286.50">npyit..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (23 samples, 4.38%)</title><rect x="1052" y="292" width="52" height="15" fill="rgb(239,156,24)"/><text x="1055.00" y="302.50">PyArr..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (23 samples, 4.38%)</title><rect x="1052" y="308" width="52" height="15" fill="rgb(217,156,21)"/><text x="1055.00" y="318.50">raw_a..</text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="1102" y="324" width="2" height="15" fill="rgb(246,158,20)"/><text x="1105.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="1102" y="340" width="2" height="15" fill="rgb(207,207,28)"/><text x="1105.00" y="350.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1104" y="292" width="2" height="15" fill="rgb(221,180,50)"/><text x="1107.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (25 samples, 4.76%)</title><rect x="1052" y="260" width="57" height="15" fill="rgb(252,165,14)"/><text x="1055.00" y="270.50">NpyIte..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.38%)</title><rect x="1104" y="276" width="5" height="15" fill="rgb(223,160,51)"/><text x="1107.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1106" y="292" width="3" height="15" fill="rgb(211,97,9)"/><text x="1109.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="1106" y="308" width="3" height="15" fill="rgb(207,38,14)"/><text x="1109.00" y="318.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="1106" y="324" width="3" height="15" fill="rgb(205,149,26)"/><text x="1109.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1109" y="260" width="2" height="15" fill="rgb(205,20,11)"/><text x="1112.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1109" y="276" width="2" height="15" fill="rgb(250,142,8)"/><text x="1112.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="1109" y="292" width="2" height="15" fill="rgb(244,105,20)"/><text x="1112.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="1109" y="308" width="2" height="15" fill="rgb(218,205,24)"/><text x="1112.00" y="318.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.19%)</title><rect x="1111" y="260" width="2" height="15" fill="rgb(252,226,15)"/><text x="1114.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (72 samples, 13.71%)</title><rect x="954" y="180" width="161" height="15" fill="rgb(214,153,6)"/><text x="957.00" y="190.50">decision_function (s..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (49 samples, 9.33%)</title><rect x="1005" y="196" width="110" height="15" fill="rgb(236,207,28)"/><text x="1008.00" y="206.50">safe_sparse_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 6.10%)</title><rect x="1043" y="212" width="72" height="15" fill="rgb(218,174,13)"/><text x="1046.00" y="222.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (32 samples, 6.10%)</title><rect x="1043" y="228" width="72" height="15" fill="rgb(232,113,30)"/><text x="1046.00" y="238.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (32 samples, 6.10%)</title><rect x="1043" y="244" width="72" height="15" fill="rgb(222,99,9)"/><text x="1046.00" y="254.50">PyUFunc_..</text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1113" y="260" width="2" height="15" fill="rgb(242,80,50)"/><text x="1116.00" y="270.50"></text></g><g><title>0x7fd743135d97 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1113" y="276" width="2" height="15" fill="rgb(246,95,27)"/><text x="1116.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.19%)</title><rect x="1115" y="212" width="3" height="15" fill="rgb(238,188,5)"/><text x="1118.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1118" y="212" width="2" height="15" fill="rgb(209,206,41)"/><text x="1121.00" y="222.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (5 samples, 0.95%)</title><rect x="1120" y="244" width="11" height="15" fill="rgb(231,151,49)"/><text x="1123.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (5 samples, 0.95%)</title><rect x="1120" y="260" width="11" height="15" fill="rgb(237,124,48)"/><text x="1123.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (5 samples, 0.95%)</title><rect x="1120" y="276" width="11" height="15" fill="rgb(235,220,16)"/><text x="1123.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.76%)</title><rect x="1122" y="292" width="9" height="15" fill="rgb(219,156,18)"/><text x="1125.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.33%)</title><rect x="1120" y="228" width="16" height="15" fill="rgb(246,138,3)"/><text x="1123.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.38%)</title><rect x="1131" y="244" width="5" height="15" fill="rgb(224,194,13)"/><text x="1134.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.38%)</title><rect x="1131" y="260" width="5" height="15" fill="rgb(213,200,30)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.38%)</title><rect x="1131" y="276" width="5" height="15" fill="rgb(209,63,28)"/><text x="1134.00" y="286.50"></text></g><g><title>0x7fd72e3fe9a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1136" y="244" width="2" height="15" fill="rgb(245,29,45)"/><text x="1139.00" y="254.50"></text></g><g><title>0x7fd72e3fe9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1138" y="244" width="2" height="15" fill="rgb(219,205,10)"/><text x="1141.00" y="254.50"></text></g><g><title>0x7fd72e41f254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1140" y="260" width="2" height="15" fill="rgb(247,28,31)"/><text x="1143.00" y="270.50"></text></g><g><title>0x7fd72e5289f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1145" y="276" width="2" height="15" fill="rgb(218,176,44)"/><text x="1148.00" y="286.50"></text></g><g><title>0x7fd7432e7bb4 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1149" y="292" width="2" height="15" fill="rgb(208,49,45)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7fd7432e7bd3 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(210,168,7)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fd7432e7c07 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1154" y="292" width="2" height="15" fill="rgb(250,177,50)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7fd7432e7c18 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(217,127,48)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fd72e41f265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.52%)</title><rect x="1142" y="260" width="18" height="15" fill="rgb(218,173,48)"/><text x="1145.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (6 samples, 1.14%)</title><rect x="1147" y="276" width="13" height="15" fill="rgb(210,40,8)"/><text x="1150.00" y="286.50"></text></g><g><title>0x7fd7432e7c3e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1158" y="292" width="2" height="15" fill="rgb(234,121,34)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7fd72e41f275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="1160" y="260" width="5" height="15" fill="rgb(207,31,40)"/><text x="1163.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (26 samples, 4.95%)</title><rect x="1120" y="212" width="58" height="15" fill="rgb(249,95,20)"/><text x="1123.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (19 samples, 3.62%)</title><rect x="1136" y="228" width="42" height="15" fill="rgb(221,43,2)"/><text x="1139.00" y="238.50">tri..</text></g><g><title>0x7fd72e3fe9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.24%)</title><rect x="1140" y="244" width="38" height="15" fill="rgb(209,164,36)"/><text x="1143.00" y="254.50">0x7..</text></g><g><title>0x7fd72e41f279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.14%)</title><rect x="1165" y="260" width="13" height="15" fill="rgb(249,153,36)"/><text x="1168.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (122 samples, 23.24%)</title><rect x="906" y="164" width="275" height="15" fill="rgb(240,60,9)"/><text x="909.00" y="174.50">_predict_proba_lr (sklearn/linear_mo..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 5.52%)</title><rect x="1115" y="180" width="66" height="15" fill="rgb(213,82,4)"/><text x="1118.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (29 samples, 5.52%)</title><rect x="1115" y="196" width="66" height="15" fill="rgb(205,130,47)"/><text x="1118.00" y="206.50">PyUFunc..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1178" y="212" width="3" height="15" fill="rgb(206,108,47)"/><text x="1181.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1178" y="228" width="3" height="15" fill="rgb(237,1,33)"/><text x="1181.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1178" y="244" width="3" height="15" fill="rgb(220,223,53)"/><text x="1181.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 23.81%)</title><rect x="904" y="132" width="281" height="15" fill="rgb(253,156,10)"/><text x="907.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (125 samples, 23.81%)</title><rect x="904" y="148" width="281" height="15" fill="rgb(209,36,9)"/><text x="907.00" y="158.50">predict_proba (sklearn/linear_model/_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="1181" y="164" width="4" height="15" fill="rgb(243,73,44)"/><text x="1184.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="1181" y="180" width="4" height="15" fill="rgb(234,109,46)"/><text x="1184.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.38%)</title><rect x="1181" y="196" width="4" height="15" fill="rgb(208,74,49)"/><text x="1184.00" y="206.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (129 samples, 24.57%)</title><rect x="897" y="68" width="290" height="15" fill="rgb(209,180,20)"/><text x="900.00" y="78.50">profile_skl (bench_LogisticRegression_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (129 samples, 24.57%)</title><rect x="897" y="84" width="290" height="15" fill="rgb(234,150,52)"/><text x="900.00" y="94.50">setup_profile (bench_LogisticRegressio..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (129 samples, 24.57%)</title><rect x="897" y="100" width="290" height="15" fill="rgb(223,204,25)"/><text x="900.00" y="110.50">profile (bench_LogisticRegression_libl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (128 samples, 24.38%)</title><rect x="900" y="116" width="287" height="15" fill="rgb(247,111,35)"/><text x="903.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="1185" y="132" width="2" height="15" fill="rgb(223,186,38)"/><text x="1188.00" y="142.50"></text></g><g><title>all (525 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,69,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (525 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(219,91,23)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_float_.py) (1 samples, 0.19%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(205,29,51)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (1 samples, 0.19%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(214,229,17)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(224,113,23)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py) (1 samples, 0.19%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(215,24,27)"/><text x="1190.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py) (1 samples, 0.19%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(211,156,34)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7fd71bb2ac54 (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(253,89,23)"/><text x="1190.00" y="158.50"></text></g><g><title>0x7fd71bb27060 (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(254,103,13)"/><text x="1190.00" y="174.50"></text></g><g><title>train (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(209,36,54)"/><text x="1190.00" y="190.50"></text></g><g><title>0x7fd71bb3205a (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(250,135,52)"/><text x="1190.00" y="206.50"></text></g><g><title>TRON::tron (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(244,198,23)"/><text x="1190.00" y="222.50"></text></g><g><title>l2r_lr_fun::grad (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(234,4,14)"/><text x="1190.00" y="238.50"></text></g><g><title>l2r_lr_fun::XTv (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(250,210,31)"/><text x="1190.00" y="254.50"></text></g></g></svg>