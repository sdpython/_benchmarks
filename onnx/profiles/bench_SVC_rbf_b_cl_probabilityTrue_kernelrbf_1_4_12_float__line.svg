<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1654" onload="init(evt)" viewBox="0 0 1200 1654" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1654" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1637.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1637.00"> </text><g id="frames"><g><title>_predict_proba (sklearn/svm/_base.py:640) (1 samples, 0.54%)</title><rect x="16" y="148" width="6" height="15" fill="rgb(235,36,38)"/><text x="19.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (1 samples, 0.54%)</title><rect x="16" y="164" width="6" height="15" fill="rgb(208,80,51)"/><text x="19.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.54%)</title><rect x="16" y="180" width="6" height="15" fill="rgb(250,69,52)"/><text x="19.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.54%)</title><rect x="16" y="196" width="6" height="15" fill="rgb(227,205,8)"/><text x="19.00" y="206.50"></text></g><g><title>0x7f379d243ff2 (?) (1 samples, 0.54%)</title><rect x="16" y="212" width="6" height="15" fill="rgb(224,95,10)"/><text x="19.00" y="222.50"></text></g><g><title>0x7f379d1ad435 (?) (1 samples, 0.54%)</title><rect x="16" y="228" width="6" height="15" fill="rgb(210,68,54)"/><text x="19.00" y="238.50"></text></g><g><title>0x7f379d1acbfe (?) (1 samples, 0.54%)</title><rect x="16" y="244" width="6" height="15" fill="rgb(208,4,1)"/><text x="19.00" y="254.50"></text></g><g><title>0x7f379d1ac72b (?) (1 samples, 0.54%)</title><rect x="16" y="260" width="6" height="15" fill="rgb(227,32,13)"/><text x="19.00" y="270.50"></text></g><g><title>0x7f379d1ac1e5 (?) (1 samples, 0.54%)</title><rect x="16" y="276" width="6" height="15" fill="rgb(241,150,35)"/><text x="19.00" y="286.50"></text></g><g><title>0x7f379d1f2bb4 (?) (1 samples, 0.54%)</title><rect x="16" y="292" width="6" height="15" fill="rgb(210,225,54)"/><text x="19.00" y="302.50"></text></g><g><title>0x7f379d3e0d04 (?) (1 samples, 0.54%)</title><rect x="16" y="308" width="6" height="15" fill="rgb(246,203,18)"/><text x="19.00" y="318.50"></text></g><g><title>0x7f3778a10553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="22" y="196" width="7" height="15" fill="rgb(210,184,14)"/><text x="25.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="22" y="212" width="7" height="15" fill="rgb(234,176,42)"/><text x="25.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="22" y="228" width="7" height="15" fill="rgb(238,124,17)"/><text x="25.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="22" y="244" width="7" height="15" fill="rgb(245,135,41)"/><text x="25.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="22" y="260" width="7" height="15" fill="rgb(237,221,38)"/><text x="25.00" y="270.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:18) (4 samples, 2.17%)</title><rect x="10" y="100" width="25" height="15" fill="rgb(251,50,8)"/><text x="13.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 2.17%)</title><rect x="10" y="116" width="25" height="15" fill="rgb(227,82,51)"/><text x="13.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 2.17%)</title><rect x="10" y="132" width="25" height="15" fill="rgb(216,95,36)"/><text x="13.00" y="142.50">&lt;..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (2 samples, 1.09%)</title><rect x="22" y="148" width="13" height="15" fill="rgb(211,203,1)"/><text x="25.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (2 samples, 1.09%)</title><rect x="22" y="164" width="13" height="15" fill="rgb(241,173,45)"/><text x="25.00" y="174.50"></text></g><g><title>0x7f3778a123fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="22" y="180" width="13" height="15" fill="rgb(233,129,5)"/><text x="25.00" y="190.50"></text></g><g><title>0x7f3778a107b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="29" y="196" width="6" height="15" fill="rgb(205,30,54)"/><text x="32.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.54%)</title><rect x="29" y="212" width="6" height="15" fill="rgb(238,77,27)"/><text x="32.00" y="222.50"></text></g><g><title>npy_free_cache_dim (alloc.c:172) (1 samples, 0.54%)</title><rect x="29" y="228" width="6" height="15" fill="rgb(223,96,14)"/><text x="32.00" y="238.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:22) (1 samples, 0.54%)</title><rect x="35" y="100" width="7" height="15" fill="rgb(226,29,50)"/><text x="38.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.54%)</title><rect x="61" y="180" width="6" height="15" fill="rgb(213,86,22)"/><text x="64.00" y="190.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.54%)</title><rect x="61" y="196" width="6" height="15" fill="rgb(239,149,36)"/><text x="64.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.54%)</title><rect x="74" y="196" width="6" height="15" fill="rgb(230,144,17)"/><text x="77.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.63%)</title><rect x="119" y="212" width="19" height="15" fill="rgb(234,17,37)"/><text x="122.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 5.43%)</title><rect x="80" y="196" width="64" height="15" fill="rgb(242,5,30)"/><text x="83.00" y="206.50">&lt;listco..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.54%)</title><rect x="138" y="212" width="6" height="15" fill="rgb(218,134,54)"/><text x="141.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (17 samples, 9.24%)</title><rect x="54" y="164" width="109" height="15" fill="rgb(212,105,37)"/><text x="57.00" y="174.50">_validate_for..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 8.15%)</title><rect x="67" y="180" width="96" height="15" fill="rgb(254,167,8)"/><text x="70.00" y="190.50">check_is_fi..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 1.63%)</title><rect x="144" y="196" width="19" height="15" fill="rgb(215,83,49)"/><text x="147.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.09%)</title><rect x="151" y="212" width="12" height="15" fill="rgb(221,214,19)"/><text x="154.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.54%)</title><rect x="163" y="180" width="7" height="15" fill="rgb(236,39,47)"/><text x="166.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (2 samples, 1.09%)</title><rect x="170" y="196" width="13" height="15" fill="rgb(248,5,21)"/><text x="173.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.63%)</title><rect x="170" y="180" width="19" height="15" fill="rgb(212,144,14)"/><text x="173.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.54%)</title><rect x="183" y="196" width="6" height="15" fill="rgb(225,82,50)"/><text x="186.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.54%)</title><rect x="189" y="196" width="6" height="15" fill="rgb(254,160,38)"/><text x="192.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.54%)</title><rect x="195" y="196" width="7" height="15" fill="rgb(212,159,6)"/><text x="198.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 1.09%)</title><rect x="202" y="212" width="13" height="15" fill="rgb(214,203,15)"/><text x="205.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 2.72%)</title><rect x="189" y="180" width="32" height="15" fill="rgb(244,146,51)"/><text x="192.00" y="190.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.63%)</title><rect x="202" y="196" width="19" height="15" fill="rgb(234,66,29)"/><text x="205.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.54%)</title><rect x="215" y="212" width="6" height="15" fill="rgb(248,134,16)"/><text x="218.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.54%)</title><rect x="215" y="228" width="6" height="15" fill="rgb(216,123,38)"/><text x="218.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.54%)</title><rect x="221" y="180" width="7" height="15" fill="rgb(222,164,15)"/><text x="224.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.54%)</title><rect x="234" y="212" width="6" height="15" fill="rgb(251,162,4)"/><text x="237.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.54%)</title><rect x="234" y="228" width="6" height="15" fill="rgb(245,160,1)"/><text x="237.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.54%)</title><rect x="234" y="244" width="6" height="15" fill="rgb(238,192,20)"/><text x="237.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.54%)</title><rect x="240" y="260" width="7" height="15" fill="rgb(252,109,10)"/><text x="243.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.54%)</title><rect x="240" y="276" width="7" height="15" fill="rgb(207,219,20)"/><text x="243.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.54%)</title><rect x="240" y="292" width="7" height="15" fill="rgb(247,84,30)"/><text x="243.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.54%)</title><rect x="240" y="308" width="7" height="15" fill="rgb(236,71,45)"/><text x="243.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.54%)</title><rect x="240" y="324" width="7" height="15" fill="rgb(239,14,39)"/><text x="243.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.54%)</title><rect x="240" y="340" width="7" height="15" fill="rgb(215,157,51)"/><text x="243.00" y="350.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 2.17%)</title><rect x="228" y="180" width="25" height="15" fill="rgb(205,68,12)"/><text x="231.00" y="190.50">c..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 2.17%)</title><rect x="228" y="196" width="25" height="15" fill="rgb(235,138,50)"/><text x="231.00" y="206.50">a..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 1.09%)</title><rect x="240" y="212" width="13" height="15" fill="rgb(245,139,25)"/><text x="243.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 1.09%)</title><rect x="240" y="228" width="13" height="15" fill="rgb(205,177,54)"/><text x="243.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 1.09%)</title><rect x="240" y="244" width="13" height="15" fill="rgb(242,104,3)"/><text x="243.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.54%)</title><rect x="247" y="260" width="6" height="15" fill="rgb(226,60,28)"/><text x="250.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.54%)</title><rect x="247" y="276" width="6" height="15" fill="rgb(210,105,0)"/><text x="250.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.54%)</title><rect x="247" y="292" width="6" height="15" fill="rgb(219,149,54)"/><text x="250.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.54%)</title><rect x="247" y="308" width="6" height="15" fill="rgb(208,213,27)"/><text x="250.00" y="318.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.54%)</title><rect x="247" y="324" width="6" height="15" fill="rgb(241,182,19)"/><text x="250.00" y="334.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.54%)</title><rect x="272" y="196" width="7" height="15" fill="rgb(253,35,35)"/><text x="275.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.54%)</title><rect x="279" y="196" width="6" height="15" fill="rgb(248,172,39)"/><text x="282.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (6 samples, 3.26%)</title><rect x="253" y="180" width="39" height="15" fill="rgb(232,23,13)"/><text x="256.00" y="190.50">che..</text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.54%)</title><rect x="285" y="196" width="7" height="15" fill="rgb(245,170,0)"/><text x="288.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 2.17%)</title><rect x="292" y="180" width="25" height="15" fill="rgb(230,159,10)"/><text x="295.00" y="190.50">c..</text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (4 samples, 2.17%)</title><rect x="292" y="196" width="25" height="15" fill="rgb(234,34,15)"/><text x="295.00" y="206.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.54%)</title><rect x="317" y="180" width="7" height="15" fill="rgb(225,138,7)"/><text x="320.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 1.09%)</title><rect x="343" y="212" width="13" height="15" fill="rgb(212,221,20)"/><text x="346.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 2.72%)</title><rect x="330" y="196" width="32" height="15" fill="rgb(218,146,31)"/><text x="333.00" y="206.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.54%)</title><rect x="356" y="212" width="6" height="15" fill="rgb(246,167,16)"/><text x="359.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 3.80%)</title><rect x="324" y="180" width="45" height="15" fill="rgb(208,66,7)"/><text x="327.00" y="190.50">chec..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.54%)</title><rect x="362" y="196" width="7" height="15" fill="rgb(236,204,16)"/><text x="365.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 1.09%)</title><rect x="369" y="196" width="12" height="15" fill="rgb(225,17,2)"/><text x="372.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (3 samples, 1.63%)</title><rect x="381" y="196" width="20" height="15" fill="rgb(221,90,15)"/><text x="384.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.54%)</title><rect x="401" y="196" width="6" height="15" fill="rgb(240,223,42)"/><text x="404.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.54%)</title><rect x="401" y="212" width="6" height="15" fill="rgb(206,155,2)"/><text x="404.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.54%)</title><rect x="401" y="228" width="6" height="15" fill="rgb(244,54,33)"/><text x="404.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 3.80%)</title><rect x="369" y="180" width="45" height="15" fill="rgb(222,160,25)"/><text x="372.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.54%)</title><rect x="407" y="196" width="7" height="15" fill="rgb(234,88,18)"/><text x="410.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (40 samples, 21.74%)</title><rect x="163" y="164" width="257" height="15" fill="rgb(253,66,53)"/><text x="166.00" y="174.50">_validate_for_predict (sklearn/svm..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.54%)</title><rect x="414" y="180" width="6" height="15" fill="rgb(206,76,45)"/><text x="417.00" y="190.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:453) (1 samples, 0.54%)</title><rect x="420" y="164" width="6" height="15" fill="rgb(246,102,30)"/><text x="423.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (59 samples, 32.07%)</title><rect x="54" y="148" width="379" height="15" fill="rgb(245,28,10)"/><text x="57.00" y="158.50">_predict_proba (sklearn/svm/_base.py:640)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:459) (1 samples, 0.54%)</title><rect x="426" y="164" width="7" height="15" fill="rgb(219,206,24)"/><text x="429.00" y="174.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:641) (1 samples, 0.54%)</title><rect x="433" y="148" width="6" height="15" fill="rgb(221,163,14)"/><text x="436.00" y="158.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:645) (1 samples, 0.54%)</title><rect x="439" y="148" width="7" height="15" fill="rgb(225,91,39)"/><text x="442.00" y="158.50"></text></g><g><title>0x7f3778a0fd0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="465" y="196" width="6" height="15" fill="rgb(235,123,51)"/><text x="468.00" y="206.50"></text></g><g><title>0x7f37789f9e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="465" y="212" width="6" height="15" fill="rgb(227,208,10)"/><text x="468.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.54%)</title><rect x="465" y="228" width="6" height="15" fill="rgb(241,50,19)"/><text x="468.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.54%)</title><rect x="465" y="244" width="6" height="15" fill="rgb(243,59,51)"/><text x="468.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.54%)</title><rect x="465" y="260" width="6" height="15" fill="rgb(208,59,48)"/><text x="468.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:369) (1 samples, 0.54%)</title><rect x="465" y="276" width="6" height="15" fill="rgb(219,223,1)"/><text x="468.00" y="286.50"></text></g><g><title>_buffer_info_new (buffer.c:548) (1 samples, 0.54%)</title><rect x="471" y="260" width="7" height="15" fill="rgb(241,221,12)"/><text x="474.00" y="270.50"></text></g><g><title>0x7f3778a0fde1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="471" y="196" width="13" height="15" fill="rgb(231,54,43)"/><text x="474.00" y="206.50"></text></g><g><title>0x7f37789f95ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.09%)</title><rect x="471" y="212" width="13" height="15" fill="rgb(239,115,52)"/><text x="474.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 1.09%)</title><rect x="471" y="228" width="13" height="15" fill="rgb(253,79,18)"/><text x="474.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 1.09%)</title><rect x="471" y="244" width="13" height="15" fill="rgb(221,7,20)"/><text x="474.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.54%)</title><rect x="478" y="260" width="6" height="15" fill="rgb(210,122,15)"/><text x="481.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.54%)</title><rect x="478" y="276" width="6" height="15" fill="rgb(242,68,53)"/><text x="481.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:206) (1 samples, 0.54%)</title><rect x="478" y="292" width="6" height="15" fill="rgb(206,92,16)"/><text x="481.00" y="302.50"></text></g><g><title>0x7f3778a0fe20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="484" y="196" width="6" height="15" fill="rgb(237,42,10)"/><text x="487.00" y="206.50"></text></g><g><title>0x7f37789f9e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="484" y="212" width="6" height="15" fill="rgb(231,218,1)"/><text x="487.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.54%)</title><rect x="484" y="228" width="6" height="15" fill="rgb(220,151,37)"/><text x="487.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.54%)</title><rect x="484" y="244" width="6" height="15" fill="rgb(226,154,23)"/><text x="487.00" y="254.50"></text></g><g><title>0x7f3778a0feb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="490" y="196" width="7" height="15" fill="rgb(209,112,27)"/><text x="493.00" y="206.50"></text></g><g><title>0x7f37789f9e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="490" y="212" width="7" height="15" fill="rgb(235,107,3)"/><text x="493.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.54%)</title><rect x="490" y="228" width="7" height="15" fill="rgb(250,202,14)"/><text x="493.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.54%)</title><rect x="490" y="244" width="7" height="15" fill="rgb(250,210,38)"/><text x="493.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.54%)</title><rect x="490" y="260" width="7" height="15" fill="rgb(206,9,35)"/><text x="493.00" y="270.50"></text></g><g><title>0x7f379df21982 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="490" y="276" width="7" height="15" fill="rgb(215,90,30)"/><text x="493.00" y="286.50"></text></g><g><title>0x7f3778a0ff5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="497" y="196" width="6" height="15" fill="rgb(237,94,25)"/><text x="500.00" y="206.50"></text></g><g><title>0x7f37789f9e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="497" y="212" width="6" height="15" fill="rgb(248,1,19)"/><text x="500.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.54%)</title><rect x="497" y="228" width="6" height="15" fill="rgb(223,23,38)"/><text x="500.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.54%)</title><rect x="497" y="244" width="6" height="15" fill="rgb(212,23,22)"/><text x="500.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.54%)</title><rect x="497" y="260" width="6" height="15" fill="rgb(217,216,8)"/><text x="500.00" y="270.50"></text></g><g><title>0x7f379df3093a (libc-2.29.so) (1 samples, 0.54%)</title><rect x="497" y="276" width="6" height="15" fill="rgb(208,113,0)"/><text x="500.00" y="286.50"></text></g><g><title>0x7f3778a0ff9b (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="503" y="196" width="7" height="15" fill="rgb(238,128,22)"/><text x="506.00" y="206.50"></text></g><g><title>0x7f37789f9e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="503" y="212" width="7" height="15" fill="rgb(215,107,45)"/><text x="506.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.54%)</title><rect x="503" y="228" width="7" height="15" fill="rgb(244,216,28)"/><text x="506.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.54%)</title><rect x="503" y="244" width="7" height="15" fill="rgb(244,176,38)"/><text x="506.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.54%)</title><rect x="503" y="260" width="7" height="15" fill="rgb(241,201,6)"/><text x="506.00" y="270.50"></text></g><g><title>0x7f379df2191c (libc-2.29.so) (1 samples, 0.54%)</title><rect x="503" y="276" width="7" height="15" fill="rgb(208,108,29)"/><text x="506.00" y="286.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.54%)</title><rect x="510" y="212" width="6" height="15" fill="rgb(220,190,11)"/><text x="513.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3354) (1 samples, 0.54%)</title><rect x="516" y="228" width="7" height="15" fill="rgb(251,161,39)"/><text x="519.00" y="238.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3406) (1 samples, 0.54%)</title><rect x="523" y="228" width="6" height="15" fill="rgb(217,7,25)"/><text x="526.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3251) (1 samples, 0.54%)</title><rect x="529" y="244" width="6" height="15" fill="rgb(233,157,36)"/><text x="532.00" y="254.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 1.09%)</title><rect x="529" y="228" width="13" height="15" fill="rgb(226,107,31)"/><text x="532.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3330) (1 samples, 0.54%)</title><rect x="535" y="244" width="7" height="15" fill="rgb(222,8,20)"/><text x="538.00" y="254.50"></text></g><g><title>_arange_safe_ceil_to_intp (ctors.c:3137) (1 samples, 0.54%)</title><rect x="535" y="260" width="7" height="15" fill="rgb(234,63,11)"/><text x="538.00" y="270.50"></text></g><g><title>0x7f3778a1012f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.26%)</title><rect x="510" y="196" width="38" height="15" fill="rgb(240,132,53)"/><text x="513.00" y="206.50">0x7..</text></g><g><title>array_arange (multiarraymodule.c:2763) (5 samples, 2.72%)</title><rect x="516" y="212" width="32" height="15" fill="rgb(208,131,11)"/><text x="519.00" y="222.50">ar..</text></g><g><title>PyArray_ArangeObj (ctors.c:3432) (1 samples, 0.54%)</title><rect x="542" y="228" width="6" height="15" fill="rgb(213,210,4)"/><text x="545.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.54%)</title><rect x="542" y="244" width="6" height="15" fill="rgb(223,198,35)"/><text x="545.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.54%)</title><rect x="542" y="260" width="6" height="15" fill="rgb(238,41,22)"/><text x="545.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.54%)</title><rect x="542" y="276" width="6" height="15" fill="rgb(206,176,2)"/><text x="545.00" y="286.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.54%)</title><rect x="542" y="292" width="6" height="15" fill="rgb(222,153,12)"/><text x="545.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="542" y="308" width="6" height="15" fill="rgb(208,192,1)"/><text x="545.00" y="318.50"></text></g><g><title>0x7f3778a10237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="548" y="196" width="7" height="15" fill="rgb(230,60,23)"/><text x="551.00" y="206.50"></text></g><g><title>0x7f37789face3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="548" y="212" width="7" height="15" fill="rgb(223,184,7)"/><text x="551.00" y="222.50"></text></g><g><title>0x7f379e000004 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="548" y="228" width="7" height="15" fill="rgb(218,69,14)"/><text x="551.00" y="238.50"></text></g><g><title>0x7f3778a10535 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="555" y="196" width="6" height="15" fill="rgb(242,148,37)"/><text x="558.00" y="206.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 1.09%)</title><rect x="574" y="244" width="13" height="15" fill="rgb(229,63,26)"/><text x="577.00" y="254.50"></text></g><g><title>0x7f379df236db (libc-2.29.so) (1 samples, 0.54%)</title><rect x="580" y="260" width="7" height="15" fill="rgb(222,137,26)"/><text x="583.00" y="270.50"></text></g><g><title>0x7f379e0f3bb4 (libm-2.29.so) (1 samples, 0.54%)</title><rect x="587" y="276" width="6" height="15" fill="rgb(225,168,31)"/><text x="590.00" y="286.50"></text></g><g><title>0x7f379e0f3c0c (libm-2.29.so) (1 samples, 0.54%)</title><rect x="593" y="276" width="7" height="15" fill="rgb(239,161,2)"/><text x="596.00" y="286.50"></text></g><g><title>0x7f3778a10553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.80%)</title><rect x="561" y="196" width="45" height="15" fill="rgb(214,146,39)"/><text x="564.00" y="206.50">0x7f..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.80%)</title><rect x="561" y="212" width="45" height="15" fill="rgb(253,181,8)"/><text x="564.00" y="222.50">copy..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.26%)</title><rect x="567" y="228" width="39" height="15" fill="rgb(212,146,8)"/><text x="570.00" y="238.50">svm..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.63%)</title><rect x="587" y="244" width="19" height="15" fill="rgb(249,158,11)"/><text x="590.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (3 samples, 1.63%)</title><rect x="587" y="260" width="19" height="15" fill="rgb(211,79,0)"/><text x="590.00" y="270.50"></text></g><g><title>0x7f379e0f3c6e (libm-2.29.so) (1 samples, 0.54%)</title><rect x="600" y="276" width="6" height="15" fill="rgb(224,23,54)"/><text x="603.00" y="286.50"></text></g><g><title>0x7f3778a123fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (23 samples, 12.50%)</title><rect x="465" y="180" width="147" height="15" fill="rgb(222,217,37)"/><text x="468.00" y="190.50">0x7f3778a123fd (sk..</text></g><g><title>0x7f3778a1055e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="606" y="196" width="6" height="15" fill="rgb(210,174,3)"/><text x="609.00" y="206.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="606" y="212" width="6" height="15" fill="rgb(210,192,38)"/><text x="609.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (27 samples, 14.67%)</title><rect x="446" y="148" width="173" height="15" fill="rgb(233,213,12)"/><text x="449.00" y="158.50">_predict_proba (sklear..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (26 samples, 14.13%)</title><rect x="452" y="164" width="167" height="15" fill="rgb(248,88,2)"/><text x="455.00" y="174.50">_dense_predict_proba ..</text></g><g><title>0x7f3778a12fc2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="612" y="180" width="7" height="15" fill="rgb(217,56,52)"/><text x="615.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:38) (96 samples, 52.17%)</title><rect x="10" y="52" width="615" height="15" fill="rgb(218,161,41)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:37) (96 samples, 52.17%)</title><rect x="10" y="68" width="615" height="15" fill="rgb(216,63,35)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29) (96 samples, 52.17%)</title><rect x="10" y="84" width="615" height="15" fill="rgb(222,22,24)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29)</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23) (91 samples, 49.46%)</title><rect x="42" y="100" width="583" height="15" fill="rgb(223,184,19)"/><text x="45.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (91 samples, 49.46%)</title><rect x="42" y="116" width="583" height="15" fill="rgb(214,34,47)"/><text x="45.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (91 samples, 49.46%)</title><rect x="42" y="132" width="583" height="15" fill="rgb(216,111,29)"/><text x="45.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/svm/_base.py:636) (1 samples, 0.54%)</title><rect x="619" y="148" width="6" height="15" fill="rgb(218,147,53)"/><text x="622.00" y="158.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:1) (1 samples, 0.54%)</title><rect x="625" y="148" width="7" height="15" fill="rgb(207,32,30)"/><text x="628.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="625" y="164" width="7" height="15" fill="rgb(232,32,4)"/><text x="628.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="625" y="180" width="7" height="15" fill="rgb(235,166,37)"/><text x="628.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="625" y="196" width="7" height="15" fill="rgb(229,48,36)"/><text x="628.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="625" y="212" width="7" height="15" fill="rgb(210,1,28)"/><text x="628.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="625" y="228" width="7" height="15" fill="rgb(247,33,17)"/><text x="628.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.54%)</title><rect x="625" y="244" width="7" height="15" fill="rgb(222,186,3)"/><text x="628.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.54%)</title><rect x="625" y="260" width="7" height="15" fill="rgb(217,178,14)"/><text x="628.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="625" y="276" width="7" height="15" fill="rgb(248,27,22)"/><text x="628.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="625" y="292" width="7" height="15" fill="rgb(232,161,53)"/><text x="628.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="625" y="308" width="7" height="15" fill="rgb(224,36,44)"/><text x="628.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="625" y="324" width="7" height="15" fill="rgb(229,203,11)"/><text x="628.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="625" y="340" width="7" height="15" fill="rgb(238,38,17)"/><text x="628.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="625" y="356" width="7" height="15" fill="rgb(226,132,3)"/><text x="628.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.54%)</title><rect x="625" y="372" width="7" height="15" fill="rgb(215,66,39)"/><text x="628.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.54%)</title><rect x="625" y="388" width="7" height="15" fill="rgb(248,194,7)"/><text x="628.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="625" y="404" width="7" height="15" fill="rgb(217,112,21)"/><text x="628.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="625" y="420" width="7" height="15" fill="rgb(225,131,7)"/><text x="628.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="625" y="436" width="7" height="15" fill="rgb(219,153,36)"/><text x="628.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="625" y="452" width="7" height="15" fill="rgb(213,95,35)"/><text x="628.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="625" y="468" width="7" height="15" fill="rgb(218,117,38)"/><text x="628.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="625" y="484" width="7" height="15" fill="rgb(250,108,13)"/><text x="628.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:520) (1 samples, 0.54%)</title><rect x="625" y="500" width="7" height="15" fill="rgb(233,138,16)"/><text x="628.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.54%)</title><rect x="625" y="516" width="7" height="15" fill="rgb(230,79,43)"/><text x="628.00" y="526.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.54%)</title><rect x="625" y="532" width="7" height="15" fill="rgb(221,113,35)"/><text x="628.00" y="542.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.54%)</title><rect x="625" y="548" width="7" height="15" fill="rgb(233,123,43)"/><text x="628.00" y="558.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.54%)</title><rect x="625" y="564" width="7" height="15" fill="rgb(242,101,38)"/><text x="628.00" y="574.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.54%)</title><rect x="632" y="916" width="6" height="15" fill="rgb(234,42,19)"/><text x="635.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.54%)</title><rect x="632" y="932" width="6" height="15" fill="rgb(240,116,4)"/><text x="635.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:2057) (1 samples, 0.54%)</title><rect x="632" y="948" width="6" height="15" fill="rgb(232,120,53)"/><text x="635.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py:2074) (1 samples, 0.54%)</title><rect x="632" y="964" width="6" height="15" fill="rgb(236,7,46)"/><text x="635.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 1.09%)</title><rect x="632" y="852" width="12" height="15" fill="rgb(213,183,19)"/><text x="635.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 1.09%)</title><rect x="632" y="868" width="12" height="15" fill="rgb(206,160,10)"/><text x="635.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 1.09%)</title><rect x="632" y="884" width="12" height="15" fill="rgb(242,225,35)"/><text x="635.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 1.09%)</title><rect x="632" y="900" width="12" height="15" fill="rgb(217,197,46)"/><text x="635.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.54%)</title><rect x="638" y="916" width="6" height="15" fill="rgb(246,57,0)"/><text x="641.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.54%)</title><rect x="638" y="932" width="6" height="15" fill="rgb(229,202,16)"/><text x="641.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.54%)</title><rect x="638" y="948" width="6" height="15" fill="rgb(230,87,32)"/><text x="641.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.54%)</title><rect x="638" y="964" width="6" height="15" fill="rgb(212,210,29)"/><text x="641.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.54%)</title><rect x="638" y="980" width="6" height="15" fill="rgb(212,23,40)"/><text x="641.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:214) (1 samples, 0.54%)</title><rect x="638" y="996" width="6" height="15" fill="rgb(210,219,1)"/><text x="641.00" y="1006.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.54%)</title><rect x="644" y="916" width="7" height="15" fill="rgb(252,109,48)"/><text x="647.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.54%)</title><rect x="644" y="932" width="7" height="15" fill="rgb(251,77,12)"/><text x="647.00" y="942.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 1.09%)</title><rect x="644" y="884" width="13" height="15" fill="rgb(242,17,35)"/><text x="647.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 1.09%)</title><rect x="644" y="900" width="13" height="15" fill="rgb(226,209,28)"/><text x="647.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.54%)</title><rect x="651" y="916" width="6" height="15" fill="rgb(207,145,20)"/><text x="654.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.54%)</title><rect x="651" y="932" width="6" height="15" fill="rgb(242,152,23)"/><text x="654.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.54%)</title><rect x="651" y="948" width="6" height="15" fill="rgb(238,159,32)"/><text x="654.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.54%)</title><rect x="651" y="964" width="6" height="15" fill="rgb(250,177,10)"/><text x="654.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.54%)</title><rect x="651" y="980" width="6" height="15" fill="rgb(212,22,45)"/><text x="654.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.54%)</title><rect x="651" y="996" width="6" height="15" fill="rgb(214,203,33)"/><text x="654.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 1.63%)</title><rect x="644" y="852" width="20" height="15" fill="rgb(242,203,11)"/><text x="647.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 1.63%)</title><rect x="644" y="868" width="20" height="15" fill="rgb(254,183,48)"/><text x="647.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.54%)</title><rect x="657" y="884" width="7" height="15" fill="rgb(207,24,11)"/><text x="660.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.54%)</title><rect x="657" y="900" width="7" height="15" fill="rgb(246,227,33)"/><text x="660.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.54%)</title><rect x="657" y="916" width="7" height="15" fill="rgb(235,165,40)"/><text x="660.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.54%)</title><rect x="657" y="932" width="7" height="15" fill="rgb(214,193,40)"/><text x="660.00" y="942.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.54%)</title><rect x="657" y="948" width="7" height="15" fill="rgb(254,211,30)"/><text x="660.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.54%)</title><rect x="657" y="964" width="7" height="15" fill="rgb(206,168,29)"/><text x="660.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 3.26%)</title><rect x="632" y="820" width="38" height="15" fill="rgb(252,52,49)"/><text x="635.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 3.26%)</title><rect x="632" y="836" width="38" height="15" fill="rgb(240,142,30)"/><text x="635.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.54%)</title><rect x="664" y="852" width="6" height="15" fill="rgb(226,98,8)"/><text x="667.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.54%)</title><rect x="664" y="868" width="6" height="15" fill="rgb(227,217,10)"/><text x="667.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.54%)</title><rect x="664" y="884" width="6" height="15" fill="rgb(220,123,17)"/><text x="667.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.54%)</title><rect x="664" y="900" width="6" height="15" fill="rgb(214,66,47)"/><text x="667.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.54%)</title><rect x="664" y="916" width="6" height="15" fill="rgb(254,173,43)"/><text x="667.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.54%)</title><rect x="664" y="932" width="6" height="15" fill="rgb(218,30,5)"/><text x="667.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.54%)</title><rect x="664" y="948" width="6" height="15" fill="rgb(221,136,14)"/><text x="667.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.54%)</title><rect x="664" y="964" width="6" height="15" fill="rgb(211,147,53)"/><text x="667.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.54%)</title><rect x="664" y="980" width="6" height="15" fill="rgb(231,152,5)"/><text x="667.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:2) (7 samples, 3.80%)</title><rect x="632" y="148" width="44" height="15" fill="rgb(221,143,51)"/><text x="635.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="164" width="44" height="15" fill="rgb(236,162,16)"/><text x="635.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 3.80%)</title><rect x="632" y="180" width="44" height="15" fill="rgb(246,209,42)"/><text x="635.00" y="190.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="196" width="44" height="15" fill="rgb(230,229,1)"/><text x="635.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="212" width="44" height="15" fill="rgb(237,97,0)"/><text x="635.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="632" y="228" width="44" height="15" fill="rgb(234,183,51)"/><text x="635.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="632" y="244" width="44" height="15" fill="rgb(244,201,38)"/><text x="635.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="632" y="260" width="44" height="15" fill="rgb(252,109,45)"/><text x="635.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="276" width="44" height="15" fill="rgb(248,79,42)"/><text x="635.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 3.80%)</title><rect x="632" y="292" width="44" height="15" fill="rgb(251,87,5)"/><text x="635.00" y="302.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="308" width="44" height="15" fill="rgb(229,179,45)"/><text x="635.00" y="318.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="632" y="324" width="44" height="15" fill="rgb(209,160,48)"/><text x="635.00" y="334.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="632" y="340" width="44" height="15" fill="rgb(223,7,28)"/><text x="635.00" y="350.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="632" y="356" width="44" height="15" fill="rgb(228,173,7)"/><text x="635.00" y="366.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="372" width="44" height="15" fill="rgb(248,112,42)"/><text x="635.00" y="382.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 3.80%)</title><rect x="632" y="388" width="44" height="15" fill="rgb(233,205,3)"/><text x="635.00" y="398.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="404" width="44" height="15" fill="rgb(242,66,21)"/><text x="635.00" y="414.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="632" y="420" width="44" height="15" fill="rgb(209,40,24)"/><text x="635.00" y="430.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="632" y="436" width="44" height="15" fill="rgb(253,65,14)"/><text x="635.00" y="446.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="632" y="452" width="44" height="15" fill="rgb(211,78,44)"/><text x="635.00" y="462.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="468" width="44" height="15" fill="rgb(232,38,15)"/><text x="635.00" y="478.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 3.80%)</title><rect x="632" y="484" width="44" height="15" fill="rgb(229,63,48)"/><text x="635.00" y="494.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="500" width="44" height="15" fill="rgb(212,148,38)"/><text x="635.00" y="510.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="632" y="516" width="44" height="15" fill="rgb(248,170,28)"/><text x="635.00" y="526.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="632" y="532" width="44" height="15" fill="rgb(220,127,12)"/><text x="635.00" y="542.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="632" y="548" width="44" height="15" fill="rgb(245,11,23)"/><text x="635.00" y="558.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="564" width="44" height="15" fill="rgb(213,201,18)"/><text x="635.00" y="574.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 3.80%)</title><rect x="632" y="580" width="44" height="15" fill="rgb(234,72,0)"/><text x="635.00" y="590.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="596" width="44" height="15" fill="rgb(234,152,41)"/><text x="635.00" y="606.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 3.80%)</title><rect x="632" y="612" width="44" height="15" fill="rgb(248,192,32)"/><text x="635.00" y="622.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="628" width="44" height="15" fill="rgb(245,108,13)"/><text x="635.00" y="638.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="644" width="44" height="15" fill="rgb(230,114,15)"/><text x="635.00" y="654.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="632" y="660" width="44" height="15" fill="rgb(213,226,33)"/><text x="635.00" y="670.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="632" y="676" width="44" height="15" fill="rgb(214,2,27)"/><text x="635.00" y="686.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="632" y="692" width="44" height="15" fill="rgb(250,204,33)"/><text x="635.00" y="702.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="708" width="44" height="15" fill="rgb(235,157,33)"/><text x="635.00" y="718.50">_cal..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 3.80%)</title><rect x="632" y="724" width="44" height="15" fill="rgb(217,72,37)"/><text x="635.00" y="734.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="632" y="740" width="44" height="15" fill="rgb(242,179,14)"/><text x="635.00" y="750.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="632" y="756" width="44" height="15" fill="rgb(254,200,10)"/><text x="635.00" y="766.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="632" y="772" width="44" height="15" fill="rgb(251,154,5)"/><text x="635.00" y="782.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="632" y="788" width="44" height="15" fill="rgb(216,4,18)"/><text x="635.00" y="798.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="632" y="804" width="44" height="15" fill="rgb(205,36,29)"/><text x="635.00" y="814.50">_cal..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.54%)</title><rect x="670" y="820" width="6" height="15" fill="rgb(236,49,10)"/><text x="673.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="670" y="836" width="6" height="15" fill="rgb(248,30,19)"/><text x="673.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="670" y="852" width="6" height="15" fill="rgb(208,47,10)"/><text x="673.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="670" y="868" width="6" height="15" fill="rgb(241,214,7)"/><text x="673.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="670" y="884" width="6" height="15" fill="rgb(244,108,43)"/><text x="673.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="670" y="900" width="6" height="15" fill="rgb(219,118,44)"/><text x="673.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:214) (1 samples, 0.54%)</title><rect x="670" y="916" width="6" height="15" fill="rgb(237,163,46)"/><text x="673.00" y="926.50"></text></g><g><title>LegacySpecifier (pkg_resources/_vendor/packaging/specifiers.py:231) (1 samples, 0.54%)</title><rect x="670" y="932" width="6" height="15" fill="rgb(212,76,53)"/><text x="673.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.54%)</title><rect x="670" y="948" width="6" height="15" fill="rgb(252,229,43)"/><text x="673.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.54%)</title><rect x="670" y="964" width="6" height="15" fill="rgb(212,133,53)"/><text x="673.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.54%)</title><rect x="670" y="980" width="6" height="15" fill="rgb(248,208,11)"/><text x="673.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.54%)</title><rect x="670" y="996" width="6" height="15" fill="rgb(254,196,16)"/><text x="673.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.54%)</title><rect x="670" y="1012" width="6" height="15" fill="rgb(225,174,48)"/><text x="673.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.54%)</title><rect x="670" y="1028" width="6" height="15" fill="rgb(237,197,7)"/><text x="673.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.54%)</title><rect x="670" y="1044" width="6" height="15" fill="rgb(223,208,51)"/><text x="673.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:489) (1 samples, 0.54%)</title><rect x="670" y="1060" width="6" height="15" fill="rgb(215,99,54)"/><text x="673.00" y="1070.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.54%)</title><rect x="676" y="484" width="7" height="15" fill="rgb(252,133,29)"/><text x="679.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.54%)</title><rect x="676" y="500" width="7" height="15" fill="rgb(242,33,27)"/><text x="679.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="516" width="7" height="15" fill="rgb(227,173,54)"/><text x="679.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="676" y="532" width="7" height="15" fill="rgb(250,75,3)"/><text x="679.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="676" y="548" width="7" height="15" fill="rgb(239,68,20)"/><text x="679.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="676" y="564" width="7" height="15" fill="rgb(213,219,19)"/><text x="679.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="676" y="580" width="7" height="15" fill="rgb(230,136,52)"/><text x="679.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="596" width="7" height="15" fill="rgb(214,224,32)"/><text x="679.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.54%)</title><rect x="676" y="612" width="7" height="15" fill="rgb(239,120,1)"/><text x="679.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="676" y="628" width="7" height="15" fill="rgb(205,95,49)"/><text x="679.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="676" y="644" width="7" height="15" fill="rgb(215,35,2)"/><text x="679.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="676" y="660" width="7" height="15" fill="rgb(226,173,2)"/><text x="679.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="676" y="676" width="7" height="15" fill="rgb(237,135,39)"/><text x="679.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="692" width="7" height="15" fill="rgb(218,51,24)"/><text x="679.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.54%)</title><rect x="676" y="708" width="7" height="15" fill="rgb(231,50,21)"/><text x="679.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="676" y="724" width="7" height="15" fill="rgb(228,167,22)"/><text x="679.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="676" y="740" width="7" height="15" fill="rgb(233,209,4)"/><text x="679.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="676" y="756" width="7" height="15" fill="rgb(223,155,23)"/><text x="679.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="676" y="772" width="7" height="15" fill="rgb(211,159,18)"/><text x="679.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="788" width="7" height="15" fill="rgb(250,125,36)"/><text x="679.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.54%)</title><rect x="676" y="804" width="7" height="15" fill="rgb(220,136,20)"/><text x="679.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="676" y="820" width="7" height="15" fill="rgb(242,191,31)"/><text x="679.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="676" y="836" width="7" height="15" fill="rgb(206,138,27)"/><text x="679.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="676" y="852" width="7" height="15" fill="rgb(212,218,31)"/><text x="679.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="676" y="868" width="7" height="15" fill="rgb(212,9,54)"/><text x="679.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="884" width="7" height="15" fill="rgb(230,143,12)"/><text x="679.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:7) (1 samples, 0.54%)</title><rect x="676" y="900" width="7" height="15" fill="rgb(241,52,47)"/><text x="679.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="676" y="916" width="7" height="15" fill="rgb(241,60,10)"/><text x="679.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="676" y="932" width="7" height="15" fill="rgb(207,176,24)"/><text x="679.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="676" y="948" width="7" height="15" fill="rgb(244,150,53)"/><text x="679.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="676" y="964" width="7" height="15" fill="rgb(210,79,16)"/><text x="679.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="980" width="7" height="15" fill="rgb(250,187,54)"/><text x="679.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py:107) (1 samples, 0.54%)</title><rect x="676" y="996" width="7" height="15" fill="rgb(237,203,46)"/><text x="679.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="676" y="1012" width="7" height="15" fill="rgb(251,86,14)"/><text x="679.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="676" y="1028" width="7" height="15" fill="rgb(249,68,14)"/><text x="679.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="676" y="1044" width="7" height="15" fill="rgb(226,183,28)"/><text x="679.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="676" y="1060" width="7" height="15" fill="rgb(236,37,47)"/><text x="679.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="676" y="1076" width="7" height="15" fill="rgb(206,169,20)"/><text x="679.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/encoder.py:20) (1 samples, 0.54%)</title><rect x="676" y="1092" width="7" height="15" fill="rgb(244,134,54)"/><text x="679.00" y="1102.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.54%)</title><rect x="676" y="1108" width="7" height="15" fill="rgb(251,196,3)"/><text x="679.00" y="1118.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.54%)</title><rect x="676" y="1124" width="7" height="15" fill="rgb(233,218,5)"/><text x="679.00" y="1134.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.54%)</title><rect x="676" y="1140" width="7" height="15" fill="rgb(242,80,39)"/><text x="679.00" y="1150.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.54%)</title><rect x="676" y="1156" width="7" height="15" fill="rgb(236,27,51)"/><text x="679.00" y="1166.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.54%)</title><rect x="676" y="1172" width="7" height="15" fill="rgb(232,123,4)"/><text x="679.00" y="1182.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.54%)</title><rect x="676" y="1188" width="7" height="15" fill="rgb(214,212,32)"/><text x="679.00" y="1198.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.54%)</title><rect x="676" y="1204" width="7" height="15" fill="rgb(219,15,20)"/><text x="679.00" y="1214.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:13) (1 samples, 0.54%)</title><rect x="683" y="580" width="6" height="15" fill="rgb(230,79,36)"/><text x="686.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="683" y="596" width="6" height="15" fill="rgb(224,15,14)"/><text x="686.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.54%)</title><rect x="683" y="612" width="6" height="15" fill="rgb(215,101,52)"/><text x="686.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="683" y="628" width="6" height="15" fill="rgb(217,51,14)"/><text x="686.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="683" y="644" width="6" height="15" fill="rgb(241,159,22)"/><text x="686.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="683" y="660" width="6" height="15" fill="rgb(237,221,39)"/><text x="686.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="683" y="676" width="6" height="15" fill="rgb(227,169,44)"/><text x="686.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="683" y="692" width="6" height="15" fill="rgb(207,15,2)"/><text x="686.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="683" y="708" width="6" height="15" fill="rgb(223,171,33)"/><text x="686.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py:44) (1 samples, 0.54%)</title><rect x="683" y="724" width="6" height="15" fill="rgb(227,157,33)"/><text x="686.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.54%)</title><rect x="683" y="740" width="6" height="15" fill="rgb(238,91,20)"/><text x="686.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="683" y="756" width="6" height="15" fill="rgb(239,101,18)"/><text x="686.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="683" y="772" width="6" height="15" fill="rgb(226,114,28)"/><text x="686.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="683" y="788" width="6" height="15" fill="rgb(246,199,6)"/><text x="686.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="683" y="804" width="6" height="15" fill="rgb(210,104,36)"/><text x="686.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="683" y="820" width="6" height="15" fill="rgb(241,66,9)"/><text x="686.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="683" y="836" width="6" height="15" fill="rgb(223,128,11)"/><text x="686.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/sysconfig.py:280) (1 samples, 0.54%)</title><rect x="683" y="852" width="6" height="15" fill="rgb(212,39,11)"/><text x="686.00" y="862.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.54%)</title><rect x="683" y="868" width="6" height="15" fill="rgb(211,174,2)"/><text x="686.00" y="878.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.54%)</title><rect x="683" y="884" width="6" height="15" fill="rgb(222,128,14)"/><text x="686.00" y="894.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.54%)</title><rect x="683" y="900" width="6" height="15" fill="rgb(232,116,44)"/><text x="686.00" y="910.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.54%)</title><rect x="683" y="916" width="6" height="15" fill="rgb(223,88,49)"/><text x="686.00" y="926.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.54%)</title><rect x="683" y="932" width="6" height="15" fill="rgb(227,124,47)"/><text x="686.00" y="942.50"></text></g><g><title>_parse (sre_parse.py:628) (1 samples, 0.54%)</title><rect x="683" y="948" width="6" height="15" fill="rgb(242,17,1)"/><text x="686.00" y="958.50"></text></g><g><title>seek (sre_parse.py:290) (1 samples, 0.54%)</title><rect x="683" y="964" width="6" height="15" fill="rgb(244,158,2)"/><text x="686.00" y="974.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.54%)</title><rect x="683" y="980" width="6" height="15" fill="rgb(250,112,29)"/><text x="686.00" y="990.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.54%)</title><rect x="683" y="996" width="6" height="15" fill="rgb(253,50,22)"/><text x="686.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:4) (3 samples, 1.63%)</title><rect x="676" y="148" width="20" height="15" fill="rgb(232,209,26)"/><text x="679.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="676" y="164" width="20" height="15" fill="rgb(232,202,51)"/><text x="679.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.63%)</title><rect x="676" y="180" width="20" height="15" fill="rgb(217,177,34)"/><text x="679.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="676" y="196" width="20" height="15" fill="rgb(207,122,20)"/><text x="679.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="676" y="212" width="20" height="15" fill="rgb(234,56,22)"/><text x="679.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="676" y="228" width="20" height="15" fill="rgb(208,156,0)"/><text x="679.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="676" y="244" width="20" height="15" fill="rgb(235,141,4)"/><text x="679.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="676" y="260" width="20" height="15" fill="rgb(208,151,35)"/><text x="679.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="676" y="276" width="20" height="15" fill="rgb(232,160,3)"/><text x="679.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 1.63%)</title><rect x="676" y="292" width="20" height="15" fill="rgb(226,165,19)"/><text x="679.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="676" y="308" width="20" height="15" fill="rgb(235,200,18)"/><text x="679.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="676" y="324" width="20" height="15" fill="rgb(234,206,29)"/><text x="679.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="676" y="340" width="20" height="15" fill="rgb(223,62,19)"/><text x="679.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="676" y="356" width="20" height="15" fill="rgb(218,1,13)"/><text x="679.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="676" y="372" width="20" height="15" fill="rgb(220,228,9)"/><text x="679.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 1.63%)</title><rect x="676" y="388" width="20" height="15" fill="rgb(222,101,28)"/><text x="679.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="676" y="404" width="20" height="15" fill="rgb(223,179,32)"/><text x="679.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="676" y="420" width="20" height="15" fill="rgb(239,122,29)"/><text x="679.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="676" y="436" width="20" height="15" fill="rgb(250,134,34)"/><text x="679.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="676" y="452" width="20" height="15" fill="rgb(225,1,31)"/><text x="679.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="676" y="468" width="20" height="15" fill="rgb(215,111,19)"/><text x="679.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 1.09%)</title><rect x="683" y="484" width="13" height="15" fill="rgb(219,75,42)"/><text x="686.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="683" y="500" width="13" height="15" fill="rgb(243,212,26)"/><text x="686.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="683" y="516" width="13" height="15" fill="rgb(252,178,32)"/><text x="686.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="683" y="532" width="13" height="15" fill="rgb(227,89,17)"/><text x="686.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="683" y="548" width="13" height="15" fill="rgb(239,124,31)"/><text x="686.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="683" y="564" width="13" height="15" fill="rgb(229,198,29)"/><text x="686.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.54%)</title><rect x="689" y="580" width="7" height="15" fill="rgb(235,82,11)"/><text x="692.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="689" y="596" width="7" height="15" fill="rgb(236,74,30)"/><text x="692.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="689" y="612" width="7" height="15" fill="rgb(226,216,18)"/><text x="692.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="689" y="628" width="7" height="15" fill="rgb(232,69,0)"/><text x="692.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="689" y="644" width="7" height="15" fill="rgb(211,131,10)"/><text x="692.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="689" y="660" width="7" height="15" fill="rgb(227,11,0)"/><text x="692.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.54%)</title><rect x="689" y="676" width="7" height="15" fill="rgb(207,99,12)"/><text x="692.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="689" y="692" width="7" height="15" fill="rgb(236,85,38)"/><text x="692.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="689" y="708" width="7" height="15" fill="rgb(248,100,45)"/><text x="692.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="689" y="724" width="7" height="15" fill="rgb(225,86,13)"/><text x="692.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="689" y="740" width="7" height="15" fill="rgb(232,128,24)"/><text x="692.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="689" y="756" width="7" height="15" fill="rgb(243,71,23)"/><text x="692.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.54%)</title><rect x="689" y="772" width="7" height="15" fill="rgb(232,185,10)"/><text x="692.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.54%)</title><rect x="689" y="788" width="7" height="15" fill="rgb(225,62,36)"/><text x="692.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="689" y="804" width="7" height="15" fill="rgb(231,87,39)"/><text x="692.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="689" y="820" width="7" height="15" fill="rgb(251,149,29)"/><text x="692.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="689" y="836" width="7" height="15" fill="rgb(207,8,40)"/><text x="692.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="689" y="852" width="7" height="15" fill="rgb(206,174,39)"/><text x="692.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="689" y="868" width="7" height="15" fill="rgb(221,159,25)"/><text x="692.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="689" y="884" width="7" height="15" fill="rgb(239,76,26)"/><text x="692.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.54%)</title><rect x="689" y="900" width="7" height="15" fill="rgb(219,81,6)"/><text x="692.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.54%)</title><rect x="689" y="916" width="7" height="15" fill="rgb(238,70,17)"/><text x="692.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="689" y="932" width="7" height="15" fill="rgb(219,199,5)"/><text x="692.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="689" y="948" width="7" height="15" fill="rgb(213,130,38)"/><text x="692.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="689" y="964" width="7" height="15" fill="rgb(226,214,20)"/><text x="692.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="689" y="980" width="7" height="15" fill="rgb(216,3,24)"/><text x="692.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="689" y="996" width="7" height="15" fill="rgb(239,102,17)"/><text x="692.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="689" y="1012" width="7" height="15" fill="rgb(252,116,23)"/><text x="692.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:3034) (1 samples, 0.54%)</title><rect x="689" y="1028" width="7" height="15" fill="rgb(207,211,23)"/><text x="692.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.54%)</title><rect x="689" y="1044" width="7" height="15" fill="rgb(219,154,1)"/><text x="692.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:694) (1 samples, 0.54%)</title><rect x="689" y="1060" width="7" height="15" fill="rgb(237,134,39)"/><text x="692.00" y="1070.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="689" y="1076" width="7" height="15" fill="rgb(254,44,0)"/><text x="692.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.54%)</title><rect x="696" y="772" width="6" height="15" fill="rgb(247,222,48)"/><text x="699.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="788" width="6" height="15" fill="rgb(217,188,21)"/><text x="699.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="696" y="804" width="6" height="15" fill="rgb(244,6,54)"/><text x="699.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="696" y="820" width="6" height="15" fill="rgb(243,173,50)"/><text x="699.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="696" y="836" width="6" height="15" fill="rgb(219,39,9)"/><text x="699.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="852" width="6" height="15" fill="rgb(214,207,25)"/><text x="699.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.54%)</title><rect x="696" y="868" width="6" height="15" fill="rgb(232,90,9)"/><text x="699.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="884" width="6" height="15" fill="rgb(217,167,14)"/><text x="699.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="696" y="900" width="6" height="15" fill="rgb(212,129,39)"/><text x="699.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="696" y="916" width="6" height="15" fill="rgb(207,199,29)"/><text x="699.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="696" y="932" width="6" height="15" fill="rgb(228,216,7)"/><text x="699.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="948" width="6" height="15" fill="rgb(230,108,45)"/><text x="699.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.54%)</title><rect x="696" y="964" width="6" height="15" fill="rgb(249,21,45)"/><text x="699.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="980" width="6" height="15" fill="rgb(232,169,51)"/><text x="699.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="696" y="996" width="6" height="15" fill="rgb(227,32,5)"/><text x="699.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="696" y="1012" width="6" height="15" fill="rgb(211,105,46)"/><text x="699.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="696" y="1028" width="6" height="15" fill="rgb(249,34,10)"/><text x="699.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="1044" width="6" height="15" fill="rgb(232,218,50)"/><text x="699.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.54%)</title><rect x="696" y="1060" width="6" height="15" fill="rgb(224,203,39)"/><text x="699.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="1076" width="6" height="15" fill="rgb(224,50,9)"/><text x="699.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.54%)</title><rect x="696" y="1092" width="6" height="15" fill="rgb(236,31,38)"/><text x="699.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="1108" width="6" height="15" fill="rgb(222,170,0)"/><text x="699.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="1124" width="6" height="15" fill="rgb(249,80,13)"/><text x="699.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="696" y="1140" width="6" height="15" fill="rgb(221,97,13)"/><text x="699.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="696" y="1156" width="6" height="15" fill="rgb(222,139,16)"/><text x="699.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="696" y="1172" width="6" height="15" fill="rgb(214,25,17)"/><text x="699.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="1188" width="6" height="15" fill="rgb(251,117,16)"/><text x="699.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.54%)</title><rect x="696" y="1204" width="6" height="15" fill="rgb(244,95,54)"/><text x="699.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="1220" width="6" height="15" fill="rgb(214,173,4)"/><text x="699.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="696" y="1236" width="6" height="15" fill="rgb(220,103,7)"/><text x="699.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="696" y="1252" width="6" height="15" fill="rgb(247,177,29)"/><text x="699.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="696" y="1268" width="6" height="15" fill="rgb(231,58,35)"/><text x="699.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="1284" width="6" height="15" fill="rgb(205,128,7)"/><text x="699.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.54%)</title><rect x="696" y="1300" width="6" height="15" fill="rgb(215,147,31)"/><text x="699.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="696" y="1316" width="6" height="15" fill="rgb(242,226,27)"/><text x="699.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="696" y="1332" width="6" height="15" fill="rgb(227,75,26)"/><text x="699.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="696" y="1348" width="6" height="15" fill="rgb(244,183,37)"/><text x="699.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="696" y="1364" width="6" height="15" fill="rgb(208,193,19)"/><text x="699.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="696" y="1380" width="6" height="15" fill="rgb(242,221,14)"/><text x="699.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:61) (1 samples, 0.54%)</title><rect x="696" y="1396" width="6" height="15" fill="rgb(246,151,32)"/><text x="699.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.54%)</title><rect x="696" y="1412" width="6" height="15" fill="rgb(251,168,2)"/><text x="699.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.54%)</title><rect x="696" y="1428" width="6" height="15" fill="rgb(223,67,33)"/><text x="699.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.54%)</title><rect x="696" y="1444" width="6" height="15" fill="rgb(220,83,13)"/><text x="699.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.54%)</title><rect x="696" y="1460" width="6" height="15" fill="rgb(221,11,6)"/><text x="699.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.54%)</title><rect x="696" y="1476" width="6" height="15" fill="rgb(224,91,28)"/><text x="699.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.54%)</title><rect x="696" y="1492" width="6" height="15" fill="rgb(248,111,33)"/><text x="699.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.54%)</title><rect x="696" y="1508" width="6" height="15" fill="rgb(221,93,17)"/><text x="699.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:482) (1 samples, 0.54%)</title><rect x="696" y="1524" width="6" height="15" fill="rgb(251,31,48)"/><text x="699.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 1.09%)</title><rect x="696" y="244" width="13" height="15" fill="rgb(223,133,36)"/><text x="699.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="696" y="260" width="13" height="15" fill="rgb(238,116,8)"/><text x="699.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="696" y="276" width="13" height="15" fill="rgb(244,45,28)"/><text x="699.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="696" y="292" width="13" height="15" fill="rgb(248,111,5)"/><text x="699.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="696" y="308" width="13" height="15" fill="rgb(207,161,46)"/><text x="699.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="696" y="324" width="13" height="15" fill="rgb(227,25,21)"/><text x="699.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 1.09%)</title><rect x="696" y="340" width="13" height="15" fill="rgb(240,225,26)"/><text x="699.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="696" y="356" width="13" height="15" fill="rgb(225,129,15)"/><text x="699.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.09%)</title><rect x="696" y="372" width="13" height="15" fill="rgb(246,68,41)"/><text x="699.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="696" y="388" width="13" height="15" fill="rgb(222,173,22)"/><text x="699.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="696" y="404" width="13" height="15" fill="rgb(221,211,28)"/><text x="699.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="696" y="420" width="13" height="15" fill="rgb(237,197,27)"/><text x="699.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="696" y="436" width="13" height="15" fill="rgb(221,85,8)"/><text x="699.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="696" y="452" width="13" height="15" fill="rgb(252,141,51)"/><text x="699.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="696" y="468" width="13" height="15" fill="rgb(240,154,29)"/><text x="699.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 1.09%)</title><rect x="696" y="484" width="13" height="15" fill="rgb(222,59,49)"/><text x="699.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="696" y="500" width="13" height="15" fill="rgb(233,153,9)"/><text x="699.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="696" y="516" width="13" height="15" fill="rgb(250,117,30)"/><text x="699.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="696" y="532" width="13" height="15" fill="rgb(239,50,36)"/><text x="699.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="696" y="548" width="13" height="15" fill="rgb(206,24,1)"/><text x="699.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="696" y="564" width="13" height="15" fill="rgb(211,207,41)"/><text x="699.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 1.09%)</title><rect x="696" y="580" width="13" height="15" fill="rgb(252,46,20)"/><text x="699.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="696" y="596" width="13" height="15" fill="rgb(210,39,18)"/><text x="699.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="696" y="612" width="13" height="15" fill="rgb(213,178,8)"/><text x="699.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="696" y="628" width="13" height="15" fill="rgb(226,84,46)"/><text x="699.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="696" y="644" width="13" height="15" fill="rgb(250,53,31)"/><text x="699.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="696" y="660" width="13" height="15" fill="rgb(244,143,1)"/><text x="699.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 1.09%)</title><rect x="696" y="676" width="13" height="15" fill="rgb(251,23,15)"/><text x="699.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="696" y="692" width="13" height="15" fill="rgb(214,170,8)"/><text x="699.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="696" y="708" width="13" height="15" fill="rgb(221,55,47)"/><text x="699.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="696" y="724" width="13" height="15" fill="rgb(245,207,54)"/><text x="699.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="696" y="740" width="13" height="15" fill="rgb(248,184,38)"/><text x="699.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="696" y="756" width="13" height="15" fill="rgb(233,57,7)"/><text x="699.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.54%)</title><rect x="702" y="772" width="7" height="15" fill="rgb(221,54,48)"/><text x="705.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="702" y="788" width="7" height="15" fill="rgb(254,83,10)"/><text x="705.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="702" y="804" width="7" height="15" fill="rgb(235,172,52)"/><text x="705.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="702" y="820" width="7" height="15" fill="rgb(229,108,50)"/><text x="705.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="702" y="836" width="7" height="15" fill="rgb(221,21,25)"/><text x="705.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="702" y="852" width="7" height="15" fill="rgb(238,82,44)"/><text x="705.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.54%)</title><rect x="702" y="868" width="7" height="15" fill="rgb(250,101,0)"/><text x="705.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="702" y="884" width="7" height="15" fill="rgb(212,125,50)"/><text x="705.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="702" y="900" width="7" height="15" fill="rgb(250,45,17)"/><text x="705.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="702" y="916" width="7" height="15" fill="rgb(233,174,49)"/><text x="705.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="702" y="932" width="7" height="15" fill="rgb(212,74,22)"/><text x="705.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="702" y="948" width="7" height="15" fill="rgb(253,34,48)"/><text x="705.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.54%)</title><rect x="702" y="964" width="7" height="15" fill="rgb(217,20,1)"/><text x="705.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="702" y="980" width="7" height="15" fill="rgb(218,126,45)"/><text x="705.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="702" y="996" width="7" height="15" fill="rgb(242,54,25)"/><text x="705.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="702" y="1012" width="7" height="15" fill="rgb(246,227,10)"/><text x="705.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="702" y="1028" width="7" height="15" fill="rgb(207,17,44)"/><text x="705.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="702" y="1044" width="7" height="15" fill="rgb(208,214,24)"/><text x="705.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:32) (1 samples, 0.54%)</title><rect x="702" y="1060" width="7" height="15" fill="rgb(251,225,40)"/><text x="705.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="702" y="1076" width="7" height="15" fill="rgb(210,179,34)"/><text x="705.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="702" y="1092" width="7" height="15" fill="rgb(206,169,29)"/><text x="705.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="702" y="1108" width="7" height="15" fill="rgb(234,103,19)"/><text x="705.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="702" y="1124" width="7" height="15" fill="rgb(229,21,17)"/><text x="705.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="702" y="1140" width="7" height="15" fill="rgb(230,214,13)"/><text x="705.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py:30) (1 samples, 0.54%)</title><rect x="702" y="1156" width="7" height="15" fill="rgb(225,161,48)"/><text x="705.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="702" y="1172" width="7" height="15" fill="rgb(236,96,36)"/><text x="705.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="702" y="1188" width="7" height="15" fill="rgb(241,144,21)"/><text x="705.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="702" y="1204" width="7" height="15" fill="rgb(227,74,19)"/><text x="705.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="702" y="1220" width="7" height="15" fill="rgb(225,34,46)"/><text x="705.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="702" y="1236" width="7" height="15" fill="rgb(253,215,18)"/><text x="705.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/chardistribution.py:32) (1 samples, 0.54%)</title><rect x="702" y="1252" width="7" height="15" fill="rgb(235,46,37)"/><text x="705.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="702" y="1268" width="7" height="15" fill="rgb(207,104,29)"/><text x="705.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="702" y="1284" width="7" height="15" fill="rgb(233,219,46)"/><text x="705.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="702" y="1300" width="7" height="15" fill="rgb(245,66,43)"/><text x="705.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.54%)</title><rect x="702" y="1316" width="7" height="15" fill="rgb(245,117,15)"/><text x="705.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.54%)</title><rect x="702" y="1332" width="7" height="15" fill="rgb(236,66,34)"/><text x="705.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.54%)</title><rect x="702" y="1348" width="7" height="15" fill="rgb(217,90,9)"/><text x="705.00" y="1358.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.54%)</title><rect x="709" y="724" width="6" height="15" fill="rgb(222,77,44)"/><text x="712.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="709" y="740" width="6" height="15" fill="rgb(232,81,52)"/><text x="712.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="709" y="756" width="6" height="15" fill="rgb(211,52,23)"/><text x="712.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="709" y="772" width="6" height="15" fill="rgb(241,105,35)"/><text x="712.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="709" y="788" width="6" height="15" fill="rgb(223,120,11)"/><text x="712.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="709" y="804" width="6" height="15" fill="rgb(246,205,6)"/><text x="712.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.54%)</title><rect x="709" y="820" width="6" height="15" fill="rgb(228,167,36)"/><text x="712.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="709" y="836" width="6" height="15" fill="rgb(210,225,2)"/><text x="712.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="709" y="852" width="6" height="15" fill="rgb(239,162,10)"/><text x="712.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="709" y="868" width="6" height="15" fill="rgb(225,54,51)"/><text x="712.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="709" y="884" width="6" height="15" fill="rgb(222,81,21)"/><text x="712.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="709" y="900" width="6" height="15" fill="rgb(237,28,26)"/><text x="712.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.54%)</title><rect x="709" y="916" width="6" height="15" fill="rgb(228,101,44)"/><text x="712.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="709" y="932" width="6" height="15" fill="rgb(235,151,2)"/><text x="712.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="709" y="948" width="6" height="15" fill="rgb(218,145,0)"/><text x="712.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="709" y="964" width="6" height="15" fill="rgb(220,174,28)"/><text x="712.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="709" y="980" width="6" height="15" fill="rgb(242,151,9)"/><text x="712.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="709" y="996" width="6" height="15" fill="rgb(227,175,2)"/><text x="712.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.54%)</title><rect x="709" y="1012" width="6" height="15" fill="rgb(238,194,24)"/><text x="712.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="709" y="1028" width="6" height="15" fill="rgb(244,30,16)"/><text x="712.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="709" y="1044" width="6" height="15" fill="rgb(239,214,36)"/><text x="712.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="709" y="1060" width="6" height="15" fill="rgb(208,220,47)"/><text x="712.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="709" y="1076" width="6" height="15" fill="rgb(241,112,35)"/><text x="712.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="709" y="1092" width="6" height="15" fill="rgb(234,26,39)"/><text x="712.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:72) (1 samples, 0.54%)</title><rect x="709" y="1108" width="6" height="15" fill="rgb(224,86,9)"/><text x="712.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="709" y="1124" width="6" height="15" fill="rgb(242,130,36)"/><text x="712.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="709" y="1140" width="6" height="15" fill="rgb(241,156,44)"/><text x="712.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="709" y="1156" width="6" height="15" fill="rgb(228,89,54)"/><text x="712.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="709" y="1172" width="6" height="15" fill="rgb(236,79,37)"/><text x="712.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="709" y="1188" width="6" height="15" fill="rgb(226,165,20)"/><text x="712.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/accessors.py:294) (1 samples, 0.54%)</title><rect x="709" y="1204" width="6" height="15" fill="rgb(246,95,16)"/><text x="712.00" y="1214.50"></text></g><g><title>add_delegate_accessors (pandas/core/accessor.py:141) (1 samples, 0.54%)</title><rect x="709" y="1220" width="6" height="15" fill="rgb(235,75,42)"/><text x="712.00" y="1230.50"></text></g><g><title>_add_delegate_accessors (pandas/core/accessor.py:103) (1 samples, 0.54%)</title><rect x="709" y="1236" width="6" height="15" fill="rgb(215,100,27)"/><text x="712.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 1.09%)</title><rect x="709" y="436" width="12" height="15" fill="rgb(219,182,46)"/><text x="712.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="709" y="452" width="12" height="15" fill="rgb(228,38,6)"/><text x="712.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="709" y="468" width="12" height="15" fill="rgb(229,59,51)"/><text x="712.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="709" y="484" width="12" height="15" fill="rgb(252,83,54)"/><text x="712.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="709" y="500" width="12" height="15" fill="rgb(242,167,50)"/><text x="712.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="709" y="516" width="12" height="15" fill="rgb(247,24,48)"/><text x="712.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 1.09%)</title><rect x="709" y="532" width="12" height="15" fill="rgb(208,180,45)"/><text x="712.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="709" y="548" width="12" height="15" fill="rgb(226,209,20)"/><text x="712.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="709" y="564" width="12" height="15" fill="rgb(231,126,1)"/><text x="712.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="709" y="580" width="12" height="15" fill="rgb(205,24,34)"/><text x="712.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="709" y="596" width="12" height="15" fill="rgb(206,127,45)"/><text x="712.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="709" y="612" width="12" height="15" fill="rgb(242,43,26)"/><text x="712.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 1.09%)</title><rect x="709" y="628" width="12" height="15" fill="rgb(251,103,26)"/><text x="712.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="709" y="644" width="12" height="15" fill="rgb(254,217,7)"/><text x="712.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="709" y="660" width="12" height="15" fill="rgb(249,147,17)"/><text x="712.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="709" y="676" width="12" height="15" fill="rgb(214,37,32)"/><text x="712.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="709" y="692" width="12" height="15" fill="rgb(242,197,54)"/><text x="712.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="709" y="708" width="12" height="15" fill="rgb(222,197,28)"/><text x="712.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.54%)</title><rect x="715" y="724" width="6" height="15" fill="rgb(253,96,10)"/><text x="718.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="740" width="6" height="15" fill="rgb(249,88,4)"/><text x="718.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.54%)</title><rect x="715" y="756" width="6" height="15" fill="rgb(221,69,37)"/><text x="718.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="772" width="6" height="15" fill="rgb(254,6,27)"/><text x="718.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="788" width="6" height="15" fill="rgb(215,71,19)"/><text x="718.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="715" y="804" width="6" height="15" fill="rgb(220,142,14)"/><text x="718.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="715" y="820" width="6" height="15" fill="rgb(205,188,9)"/><text x="718.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="715" y="836" width="6" height="15" fill="rgb(216,40,24)"/><text x="718.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="852" width="6" height="15" fill="rgb(226,110,37)"/><text x="718.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (1 samples, 0.54%)</title><rect x="715" y="868" width="6" height="15" fill="rgb(239,163,15)"/><text x="718.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="884" width="6" height="15" fill="rgb(235,41,4)"/><text x="718.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="715" y="900" width="6" height="15" fill="rgb(227,175,14)"/><text x="718.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="715" y="916" width="6" height="15" fill="rgb(215,200,16)"/><text x="718.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="715" y="932" width="6" height="15" fill="rgb(206,102,32)"/><text x="718.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="948" width="6" height="15" fill="rgb(234,166,1)"/><text x="718.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (1 samples, 0.54%)</title><rect x="715" y="964" width="6" height="15" fill="rgb(213,63,48)"/><text x="718.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="980" width="6" height="15" fill="rgb(245,2,49)"/><text x="718.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="715" y="996" width="6" height="15" fill="rgb(209,73,38)"/><text x="718.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="715" y="1012" width="6" height="15" fill="rgb(244,137,11)"/><text x="718.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="715" y="1028" width="6" height="15" fill="rgb(245,125,43)"/><text x="718.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="1044" width="6" height="15" fill="rgb(248,156,8)"/><text x="718.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py:36) (1 samples, 0.54%)</title><rect x="715" y="1060" width="6" height="15" fill="rgb(230,90,14)"/><text x="718.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="1076" width="6" height="15" fill="rgb(210,107,1)"/><text x="718.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="715" y="1092" width="6" height="15" fill="rgb(242,141,28)"/><text x="718.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="715" y="1108" width="6" height="15" fill="rgb(214,206,6)"/><text x="718.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="715" y="1124" width="6" height="15" fill="rgb(220,203,24)"/><text x="718.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="1140" width="6" height="15" fill="rgb(242,200,15)"/><text x="718.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/nanops.py:38) (1 samples, 0.54%)</title><rect x="715" y="1156" width="6" height="15" fill="rgb(206,45,4)"/><text x="718.00" y="1166.50"></text></g><g><title>import_optional_dependency (pandas/compat/_optional.py:90) (1 samples, 0.54%)</title><rect x="715" y="1172" width="6" height="15" fill="rgb(250,39,42)"/><text x="718.00" y="1182.50"></text></g><g><title>import_module (importlib/__init__.py:127) (1 samples, 0.54%)</title><rect x="715" y="1188" width="6" height="15" fill="rgb(224,179,28)"/><text x="718.00" y="1198.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.54%)</title><rect x="715" y="1204" width="6" height="15" fill="rgb(239,162,22)"/><text x="718.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="1220" width="6" height="15" fill="rgb(210,192,12)"/><text x="718.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="715" y="1236" width="6" height="15" fill="rgb(214,155,47)"/><text x="718.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.54%)</title><rect x="715" y="1252" width="6" height="15" fill="rgb(236,121,7)"/><text x="718.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.54%)</title><rect x="715" y="1268" width="6" height="15" fill="rgb(230,222,41)"/><text x="718.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="1284" width="6" height="15" fill="rgb(212,156,45)"/><text x="718.00" y="1294.50"></text></g><g><title>&lt;module&gt; (bottleneck/__init__.py:24) (1 samples, 0.54%)</title><rect x="715" y="1300" width="6" height="15" fill="rgb(231,35,27)"/><text x="718.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.54%)</title><rect x="715" y="1316" width="6" height="15" fill="rgb(233,27,2)"/><text x="718.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.54%)</title><rect x="715" y="1332" width="6" height="15" fill="rgb(209,191,9)"/><text x="718.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.54%)</title><rect x="715" y="1348" width="6" height="15" fill="rgb(242,195,1)"/><text x="718.00" y="1358.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.54%)</title><rect x="715" y="1364" width="6" height="15" fill="rgb(241,111,16)"/><text x="718.00" y="1374.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.54%)</title><rect x="715" y="1380" width="6" height="15" fill="rgb(246,86,3)"/><text x="718.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.54%)</title><rect x="715" y="1396" width="6" height="15" fill="rgb(240,81,47)"/><text x="718.00" y="1406.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1412" width="6" height="15" fill="rgb(246,226,36)"/><text x="718.00" y="1422.50"></text></g><g><title>0x7f379e1a9995 (libdl-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1428" width="6" height="15" fill="rgb(225,81,52)"/><text x="718.00" y="1438.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1444" width="6" height="15" fill="rgb(238,67,24)"/><text x="718.00" y="1454.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1460" width="6" height="15" fill="rgb(241,64,2)"/><text x="718.00" y="1470.50"></text></g><g><title>0x7f379e1a9258 (libdl-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1476" width="6" height="15" fill="rgb(237,139,9)"/><text x="718.00" y="1486.50"></text></g><g><title>0x7f379e1f6d7a (ld-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1492" width="6" height="15" fill="rgb(229,197,3)"/><text x="718.00" y="1502.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1508" width="6" height="15" fill="rgb(249,173,36)"/><text x="718.00" y="1518.50"></text></g><g><title>0x7f379e1f718b (ld-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1524" width="6" height="15" fill="rgb(226,30,47)"/><text x="718.00" y="1534.50"></text></g><g><title>0x7f379e1ecbcb (ld-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1540" width="6" height="15" fill="rgb(238,128,25)"/><text x="718.00" y="1550.50"></text></g><g><title>0x7f379e1eb1b6 (ld-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1556" width="6" height="15" fill="rgb(250,130,45)"/><text x="718.00" y="1566.50"></text></g><g><title>0x7f379e1fea04 (ld-2.29.so) (1 samples, 0.54%)</title><rect x="715" y="1572" width="6" height="15" fill="rgb(235,148,43)"/><text x="718.00" y="1582.50"></text></g><g><title>root (&lt;template&gt;:23) (1 samples, 0.54%)</title><rect x="721" y="1572" width="7" height="15" fill="rgb(237,215,30)"/><text x="724.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:254) (1 samples, 0.54%)</title><rect x="721" y="1588" width="7" height="15" fill="rgb(238,204,30)"/><text x="724.00" y="1598.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.54%)</title><rect x="728" y="1572" width="6" height="15" fill="rgb(247,178,10)"/><text x="731.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.54%)</title><rect x="728" y="1588" width="6" height="15" fill="rgb(209,57,4)"/><text x="731.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:213) (1 samples, 0.54%)</title><rect x="728" y="1604" width="6" height="15" fill="rgb(244,116,1)"/><text x="731.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:4) (18 samples, 9.78%)</title><rect x="625" y="52" width="116" height="15" fill="rgb(238,73,9)"/><text x="628.00" y="62.50">&lt;module&gt; (benc..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 9.78%)</title><rect x="625" y="68" width="116" height="15" fill="rgb(251,49,49)"/><text x="628.00" y="78.50">_find_and_load..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 9.78%)</title><rect x="625" y="84" width="116" height="15" fill="rgb(235,206,45)"/><text x="628.00" y="94.50">_find_and_load..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 9.78%)</title><rect x="625" y="100" width="116" height="15" fill="rgb(245,213,26)"/><text x="628.00" y="110.50">_load_unlocked..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 9.78%)</title><rect x="625" y="116" width="116" height="15" fill="rgb(254,119,0)"/><text x="628.00" y="126.50">exec_module (&lt;..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 9.78%)</title><rect x="625" y="132" width="116" height="15" fill="rgb(254,97,23)"/><text x="628.00" y="142.50">_call_with_fra..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:7) (7 samples, 3.80%)</title><rect x="696" y="148" width="45" height="15" fill="rgb(220,59,14)"/><text x="699.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.80%)</title><rect x="696" y="164" width="45" height="15" fill="rgb(226,63,27)"/><text x="699.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.80%)</title><rect x="696" y="180" width="45" height="15" fill="rgb(241,8,21)"/><text x="699.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.80%)</title><rect x="696" y="196" width="45" height="15" fill="rgb(249,148,28)"/><text x="699.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.80%)</title><rect x="696" y="212" width="45" height="15" fill="rgb(251,95,10)"/><text x="699.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.80%)</title><rect x="696" y="228" width="45" height="15" fill="rgb(254,146,10)"/><text x="699.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.72%)</title><rect x="709" y="244" width="32" height="15" fill="rgb(223,202,50)"/><text x="712.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.72%)</title><rect x="709" y="260" width="32" height="15" fill="rgb(231,141,38)"/><text x="712.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.72%)</title><rect x="709" y="276" width="32" height="15" fill="rgb(212,23,44)"/><text x="712.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.72%)</title><rect x="709" y="292" width="32" height="15" fill="rgb(246,228,25)"/><text x="712.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.72%)</title><rect x="709" y="308" width="32" height="15" fill="rgb(248,138,36)"/><text x="712.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.72%)</title><rect x="709" y="324" width="32" height="15" fill="rgb(250,127,23)"/><text x="712.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.72%)</title><rect x="709" y="340" width="32" height="15" fill="rgb(230,98,22)"/><text x="712.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.72%)</title><rect x="709" y="356" width="32" height="15" fill="rgb(229,104,39)"/><text x="712.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.72%)</title><rect x="709" y="372" width="32" height="15" fill="rgb(217,191,35)"/><text x="712.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.72%)</title><rect x="709" y="388" width="32" height="15" fill="rgb(252,152,15)"/><text x="712.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.72%)</title><rect x="709" y="404" width="32" height="15" fill="rgb(247,212,49)"/><text x="712.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.72%)</title><rect x="709" y="420" width="32" height="15" fill="rgb(228,157,11)"/><text x="712.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.63%)</title><rect x="721" y="436" width="20" height="15" fill="rgb(237,125,26)"/><text x="724.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="452" width="20" height="15" fill="rgb(230,191,3)"/><text x="724.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.63%)</title><rect x="721" y="468" width="20" height="15" fill="rgb(214,195,44)"/><text x="724.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="484" width="20" height="15" fill="rgb(218,130,6)"/><text x="724.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="500" width="20" height="15" fill="rgb(214,60,11)"/><text x="724.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="516" width="20" height="15" fill="rgb(239,42,28)"/><text x="724.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="532" width="20" height="15" fill="rgb(224,55,26)"/><text x="724.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="548" width="20" height="15" fill="rgb(223,36,7)"/><text x="724.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="564" width="20" height="15" fill="rgb(239,116,46)"/><text x="724.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.63%)</title><rect x="721" y="580" width="20" height="15" fill="rgb(253,209,51)"/><text x="724.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="596" width="20" height="15" fill="rgb(237,32,46)"/><text x="724.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="612" width="20" height="15" fill="rgb(221,180,38)"/><text x="724.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="628" width="20" height="15" fill="rgb(208,220,23)"/><text x="724.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="644" width="20" height="15" fill="rgb(206,55,8)"/><text x="724.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="660" width="20" height="15" fill="rgb(222,212,20)"/><text x="724.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.63%)</title><rect x="721" y="676" width="20" height="15" fill="rgb(224,206,9)"/><text x="724.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="692" width="20" height="15" fill="rgb(228,10,7)"/><text x="724.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="708" width="20" height="15" fill="rgb(223,104,17)"/><text x="724.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="724" width="20" height="15" fill="rgb(218,19,19)"/><text x="724.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="740" width="20" height="15" fill="rgb(236,133,32)"/><text x="724.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="756" width="20" height="15" fill="rgb(228,188,38)"/><text x="724.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.63%)</title><rect x="721" y="772" width="20" height="15" fill="rgb(215,70,49)"/><text x="724.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="788" width="20" height="15" fill="rgb(221,0,15)"/><text x="724.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="804" width="20" height="15" fill="rgb(234,228,30)"/><text x="724.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="820" width="20" height="15" fill="rgb(223,213,44)"/><text x="724.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="836" width="20" height="15" fill="rgb(231,13,18)"/><text x="724.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="852" width="20" height="15" fill="rgb(254,140,12)"/><text x="724.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.63%)</title><rect x="721" y="868" width="20" height="15" fill="rgb(217,174,6)"/><text x="724.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="884" width="20" height="15" fill="rgb(207,109,1)"/><text x="724.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.63%)</title><rect x="721" y="900" width="20" height="15" fill="rgb(215,77,31)"/><text x="724.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="916" width="20" height="15" fill="rgb(206,166,5)"/><text x="724.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="932" width="20" height="15" fill="rgb(210,203,50)"/><text x="724.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="948" width="20" height="15" fill="rgb(206,59,4)"/><text x="724.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="964" width="20" height="15" fill="rgb(253,226,27)"/><text x="724.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="980" width="20" height="15" fill="rgb(237,102,49)"/><text x="724.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="996" width="20" height="15" fill="rgb(233,226,5)"/><text x="724.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.63%)</title><rect x="721" y="1012" width="20" height="15" fill="rgb(205,30,21)"/><text x="724.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="1028" width="20" height="15" fill="rgb(247,111,5)"/><text x="724.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="1044" width="20" height="15" fill="rgb(222,12,11)"/><text x="724.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="1060" width="20" height="15" fill="rgb(236,64,23)"/><text x="724.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="1076" width="20" height="15" fill="rgb(208,56,29)"/><text x="724.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="1092" width="20" height="15" fill="rgb(213,222,37)"/><text x="724.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 1.63%)</title><rect x="721" y="1108" width="20" height="15" fill="rgb(210,179,37)"/><text x="724.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.63%)</title><rect x="721" y="1124" width="20" height="15" fill="rgb(251,44,11)"/><text x="724.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="1140" width="20" height="15" fill="rgb(221,49,44)"/><text x="724.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="1156" width="20" height="15" fill="rgb(246,192,26)"/><text x="724.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="1172" width="20" height="15" fill="rgb(240,43,45)"/><text x="724.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="1188" width="20" height="15" fill="rgb(254,117,22)"/><text x="724.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="1204" width="20" height="15" fill="rgb(234,209,36)"/><text x="724.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="1220" width="20" height="15" fill="rgb(237,167,12)"/><text x="724.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 1.63%)</title><rect x="721" y="1236" width="20" height="15" fill="rgb(233,50,17)"/><text x="724.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.63%)</title><rect x="721" y="1252" width="20" height="15" fill="rgb(230,111,30)"/><text x="724.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="1268" width="20" height="15" fill="rgb(244,185,26)"/><text x="724.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="1284" width="20" height="15" fill="rgb(236,6,28)"/><text x="724.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="1300" width="20" height="15" fill="rgb(217,111,2)"/><text x="724.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="1316" width="20" height="15" fill="rgb(241,222,22)"/><text x="724.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="1332" width="20" height="15" fill="rgb(242,128,9)"/><text x="724.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="1348" width="20" height="15" fill="rgb(216,190,49)"/><text x="724.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 1.63%)</title><rect x="721" y="1364" width="20" height="15" fill="rgb(219,114,50)"/><text x="724.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.63%)</title><rect x="721" y="1380" width="20" height="15" fill="rgb(242,120,34)"/><text x="724.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.63%)</title><rect x="721" y="1396" width="20" height="15" fill="rgb(254,176,32)"/><text x="724.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.63%)</title><rect x="721" y="1412" width="20" height="15" fill="rgb(253,40,16)"/><text x="724.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.63%)</title><rect x="721" y="1428" width="20" height="15" fill="rgb(214,169,51)"/><text x="724.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.63%)</title><rect x="721" y="1444" width="20" height="15" fill="rgb(218,166,7)"/><text x="724.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 1.63%)</title><rect x="721" y="1460" width="20" height="15" fill="rgb(226,175,6)"/><text x="724.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 1.63%)</title><rect x="721" y="1476" width="20" height="15" fill="rgb(251,122,35)"/><text x="724.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 1.63%)</title><rect x="721" y="1492" width="20" height="15" fill="rgb(226,211,27)"/><text x="724.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 1.63%)</title><rect x="721" y="1508" width="20" height="15" fill="rgb(206,109,13)"/><text x="724.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 1.63%)</title><rect x="721" y="1524" width="20" height="15" fill="rgb(236,46,13)"/><text x="724.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 1.63%)</title><rect x="721" y="1540" width="20" height="15" fill="rgb(219,69,25)"/><text x="724.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.63%)</title><rect x="721" y="1556" width="20" height="15" fill="rgb(205,76,48)"/><text x="724.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:64) (1 samples, 0.54%)</title><rect x="734" y="1572" width="7" height="15" fill="rgb(213,7,4)"/><text x="737.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:245) (1 samples, 0.54%)</title><rect x="734" y="1588" width="7" height="15" fill="rgb(230,139,14)"/><text x="737.00" y="1598.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.54%)</title><rect x="741" y="148" width="6" height="15" fill="rgb(238,122,25)"/><text x="744.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.54%)</title><rect x="760" y="164" width="6" height="15" fill="rgb(247,40,15)"/><text x="763.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.54%)</title><rect x="766" y="164" width="7" height="15" fill="rgb(235,215,21)"/><text x="769.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (2 samples, 1.09%)</title><rect x="773" y="164" width="12" height="15" fill="rgb(221,123,0)"/><text x="776.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.54%)</title><rect x="805" y="180" width="6" height="15" fill="rgb(244,104,49)"/><text x="808.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 2.17%)</title><rect x="811" y="180" width="26" height="15" fill="rgb(248,107,43)"/><text x="814.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.54%)</title><rect x="830" y="196" width="7" height="15" fill="rgb(251,70,43)"/><text x="833.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.54%)</title><rect x="843" y="244" width="7" height="15" fill="rgb(249,225,4)"/><text x="846.00" y="254.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.54%)</title><rect x="850" y="244" width="6" height="15" fill="rgb(232,108,4)"/><text x="853.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.54%)</title><rect x="850" y="260" width="6" height="15" fill="rgb(217,136,34)"/><text x="853.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.54%)</title><rect x="850" y="276" width="6" height="15" fill="rgb(205,37,20)"/><text x="853.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.54%)</title><rect x="850" y="292" width="6" height="15" fill="rgb(249,121,21)"/><text x="853.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.54%)</title><rect x="850" y="308" width="6" height="15" fill="rgb(212,177,30)"/><text x="853.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 1.63%)</title><rect x="843" y="196" width="19" height="15" fill="rgb(229,188,9)"/><text x="846.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 1.63%)</title><rect x="843" y="212" width="19" height="15" fill="rgb(238,178,32)"/><text x="846.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 1.63%)</title><rect x="843" y="228" width="19" height="15" fill="rgb(243,112,2)"/><text x="846.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.54%)</title><rect x="856" y="244" width="6" height="15" fill="rgb(233,156,21)"/><text x="859.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.54%)</title><rect x="856" y="260" width="6" height="15" fill="rgb(238,167,52)"/><text x="859.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.54%)</title><rect x="856" y="276" width="6" height="15" fill="rgb(245,97,47)"/><text x="859.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="856" y="292" width="6" height="15" fill="rgb(249,146,54)"/><text x="859.00" y="302.50"></text></g><g><title>0x7f375f090c29 (?) (1 samples, 0.54%)</title><rect x="875" y="244" width="7" height="15" fill="rgb(232,201,20)"/><text x="878.00" y="254.50"></text></g><g><title>0x7f375f097d9e (?) (1 samples, 0.54%)</title><rect x="875" y="260" width="7" height="15" fill="rgb(222,208,34)"/><text x="878.00" y="270.50"></text></g><g><title>0x7f375f097c56 (?) (1 samples, 0.54%)</title><rect x="875" y="276" width="7" height="15" fill="rgb(211,68,14)"/><text x="878.00" y="286.50"></text></g><g><title>0x7f375f09dac7 (?) (1 samples, 0.54%)</title><rect x="875" y="292" width="7" height="15" fill="rgb(205,204,43)"/><text x="878.00" y="302.50"></text></g><g><title>0x7f375f09d328 (?) (1 samples, 0.54%)</title><rect x="875" y="308" width="7" height="15" fill="rgb(218,4,14)"/><text x="878.00" y="318.50"></text></g><g><title>0x7f375f095280 (?) (1 samples, 0.54%)</title><rect x="875" y="324" width="7" height="15" fill="rgb(237,139,2)"/><text x="878.00" y="334.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:496) (1 samples, 0.54%)</title><rect x="882" y="244" width="6" height="15" fill="rgb(226,159,37)"/><text x="885.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::function_call (attr.h:288) (1 samples, 0.54%)</title><rect x="882" y="260" width="6" height="15" fill="rgb(229,209,6)"/><text x="885.00" y="270.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::reserve (stl_bvector.h:893) (1 samples, 0.54%)</title><rect x="882" y="276" width="6" height="15" fill="rgb(245,216,6)"/><text x="885.00" y="286.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_reallocate (vector.tcc:706) (1 samples, 0.54%)</title><rect x="882" y="292" width="6" height="15" fill="rgb(247,17,35)"/><text x="885.00" y="302.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.54%)</title><rect x="888" y="276" width="7" height="15" fill="rgb(254,171,33)"/><text x="891.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.54%)</title><rect x="888" y="292" width="7" height="15" fill="rgb(247,90,19)"/><text x="891.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.54%)</title><rect x="888" y="308" width="7" height="15" fill="rgb(234,11,29)"/><text x="891.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.54%)</title><rect x="888" y="324" width="7" height="15" fill="rgb(238,155,3)"/><text x="891.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.54%)</title><rect x="888" y="340" width="7" height="15" fill="rgb(248,47,21)"/><text x="891.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.54%)</title><rect x="888" y="356" width="7" height="15" fill="rgb(206,6,44)"/><text x="891.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.54%)</title><rect x="888" y="372" width="7" height="15" fill="rgb(222,120,21)"/><text x="891.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.54%)</title><rect x="888" y="388" width="7" height="15" fill="rgb(226,175,32)"/><text x="891.00" y="398.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.54%)</title><rect x="895" y="276" width="6" height="15" fill="rgb(240,174,6)"/><text x="898.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.54%)</title><rect x="895" y="292" width="6" height="15" fill="rgb(216,69,51)"/><text x="898.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.54%)</title><rect x="895" y="308" width="6" height="15" fill="rgb(241,47,39)"/><text x="898.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.54%)</title><rect x="895" y="324" width="6" height="15" fill="rgb(214,7,44)"/><text x="898.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.54%)</title><rect x="895" y="340" width="6" height="15" fill="rgb(251,57,46)"/><text x="898.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.54%)</title><rect x="895" y="356" width="6" height="15" fill="rgb(209,182,18)"/><text x="898.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.54%)</title><rect x="895" y="372" width="6" height="15" fill="rgb(205,35,6)"/><text x="898.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.54%)</title><rect x="895" y="388" width="6" height="15" fill="rgb(234,217,10)"/><text x="898.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.54%)</title><rect x="895" y="404" width="6" height="15" fill="rgb(223,119,48)"/><text x="898.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.54%)</title><rect x="895" y="420" width="6" height="15" fill="rgb(250,192,47)"/><text x="898.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.54%)</title><rect x="895" y="436" width="6" height="15" fill="rgb(217,225,2)"/><text x="898.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.54%)</title><rect x="895" y="452" width="6" height="15" fill="rgb(249,182,13)"/><text x="898.00" y="462.50"></text></g><g><title>0x7f375f080440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.54%)</title><rect x="901" y="468" width="6" height="15" fill="rgb(245,45,38)"/><text x="904.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.54%)</title><rect x="907" y="468" width="7" height="15" fill="rgb(247,96,21)"/><text x="910.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (3 samples, 1.63%)</title><rect x="901" y="452" width="19" height="15" fill="rgb(219,80,18)"/><text x="904.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (1 samples, 0.54%)</title><rect x="914" y="468" width="6" height="15" fill="rgb(213,67,10)"/><text x="917.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (1 samples, 0.54%)</title><rect x="920" y="452" width="7" height="15" fill="rgb(234,195,11)"/><text x="923.00" y="462.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (7 samples, 3.80%)</title><rect x="888" y="244" width="45" height="15" fill="rgb(239,24,32)"/><text x="891.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (7 samples, 3.80%)</title><rect x="888" y="260" width="45" height="15" fill="rgb(237,113,49)"/><text x="891.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (5 samples, 2.72%)</title><rect x="901" y="276" width="32" height="15" fill="rgb(244,31,22)"/><text x="904.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (5 samples, 2.72%)</title><rect x="901" y="292" width="32" height="15" fill="rgb(240,57,40)"/><text x="904.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (5 samples, 2.72%)</title><rect x="901" y="308" width="32" height="15" fill="rgb(225,48,37)"/><text x="904.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (5 samples, 2.72%)</title><rect x="901" y="324" width="32" height="15" fill="rgb(244,102,47)"/><text x="904.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (5 samples, 2.72%)</title><rect x="901" y="340" width="32" height="15" fill="rgb(240,66,10)"/><text x="904.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (5 samples, 2.72%)</title><rect x="901" y="356" width="32" height="15" fill="rgb(212,0,40)"/><text x="904.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (5 samples, 2.72%)</title><rect x="901" y="372" width="32" height="15" fill="rgb(217,13,39)"/><text x="904.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (5 samples, 2.72%)</title><rect x="901" y="388" width="32" height="15" fill="rgb(222,78,22)"/><text x="904.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (5 samples, 2.72%)</title><rect x="901" y="404" width="32" height="15" fill="rgb(208,153,51)"/><text x="904.00" y="414.50">py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (5 samples, 2.72%)</title><rect x="901" y="420" width="32" height="15" fill="rgb(234,142,33)"/><text x="904.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (5 samples, 2.72%)</title><rect x="901" y="436" width="32" height="15" fill="rgb(249,213,43)"/><text x="904.00" y="446.50">py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (1 samples, 0.54%)</title><rect x="927" y="452" width="6" height="15" fill="rgb(245,175,48)"/><text x="930.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.54%)</title><rect x="927" y="468" width="6" height="15" fill="rgb(224,31,33)"/><text x="930.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.54%)</title><rect x="927" y="484" width="6" height="15" fill="rgb(244,19,31)"/><text x="930.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.54%)</title><rect x="927" y="500" width="6" height="15" fill="rgb(215,190,10)"/><text x="930.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1425) (1 samples, 0.54%)</title><rect x="927" y="516" width="6" height="15" fill="rgb(251,151,5)"/><text x="930.00" y="526.50"></text></g><g><title>std::max&lt;unsigned long&gt; (stl_algobase.h:224) (1 samples, 0.54%)</title><rect x="927" y="532" width="6" height="15" fill="rgb(218,62,11)"/><text x="930.00" y="542.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pytypes.h:197) (1 samples, 0.54%)</title><rect x="933" y="244" width="6" height="15" fill="rgb(245,173,39)"/><text x="936.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::~function_call (cast.h:1861) (1 samples, 0.54%)</title><rect x="933" y="260" width="6" height="15" fill="rgb(240,24,13)"/><text x="936.00" y="270.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.54%)</title><rect x="933" y="276" width="6" height="15" fill="rgb(234,163,43)"/><text x="936.00" y="286.50"></text></g><g><title>0x7f379df21d07 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="933" y="292" width="6" height="15" fill="rgb(218,80,20)"/><text x="936.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (11 samples, 5.98%)</title><rect x="875" y="228" width="71" height="15" fill="rgb(233,15,8)"/><text x="878.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (stl_bvector.h:677) (1 samples, 0.54%)</title><rect x="939" y="244" width="7" height="15" fill="rgb(243,98,51)"/><text x="942.00" y="254.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::~_Bvector_base (stl_bvector.h:485) (1 samples, 0.54%)</title><rect x="939" y="260" width="7" height="15" fill="rgb(231,38,26)"/><text x="942.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (14 samples, 7.61%)</title><rect x="862" y="196" width="90" height="15" fill="rgb(230,96,29)"/><text x="865.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (13 samples, 7.07%)</title><rect x="869" y="212" width="83" height="15" fill="rgb(225,4,51)"/><text x="872.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (1 samples, 0.54%)</title><rect x="946" y="228" width="6" height="15" fill="rgb(211,122,44)"/><text x="949.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.54%)</title><rect x="946" y="244" width="6" height="15" fill="rgb(206,50,52)"/><text x="949.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.54%)</title><rect x="946" y="260" width="6" height="15" fill="rgb(233,199,21)"/><text x="949.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (19 samples, 10.33%)</title><rect x="837" y="180" width="122" height="15" fill="rgb(229,162,32)"/><text x="840.00" y="190.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.54%)</title><rect x="952" y="196" width="7" height="15" fill="rgb(225,73,3)"/><text x="955.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.54%)</title><rect x="959" y="180" width="6" height="15" fill="rgb(222,181,38)"/><text x="962.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (29 samples, 15.76%)</title><rect x="785" y="164" width="186" height="15" fill="rgb(206,23,9)"/><text x="788.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.54%)</title><rect x="965" y="180" width="6" height="15" fill="rgb(240,169,47)"/><text x="968.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (37 samples, 20.11%)</title><rect x="741" y="132" width="237" height="15" fill="rgb(233,61,34)"/><text x="744.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (36 samples, 19.57%)</title><rect x="747" y="148" width="231" height="15" fill="rgb(251,81,33)"/><text x="750.00" y="158.50">run (mlprodict/onnxrt/onnx_inf..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.54%)</title><rect x="971" y="164" width="7" height="15" fill="rgb(238,92,26)"/><text x="974.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:45) (38 samples, 20.65%)</title><rect x="741" y="52" width="243" height="15" fill="rgb(230,204,3)"/><text x="744.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_pro..</text></g><g><title>profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:44) (38 samples, 20.65%)</title><rect x="741" y="68" width="243" height="15" fill="rgb(230,147,15)"/><text x="744.00" y="78.50">profile_pyrt (bench_SVC_rbf_b_cl..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29) (38 samples, 20.65%)</title><rect x="741" y="84" width="243" height="15" fill="rgb(211,68,36)"/><text x="744.00" y="94.50">setup_profile (bench_SVC_rbf_b_c..</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23) (38 samples, 20.65%)</title><rect x="741" y="100" width="243" height="15" fill="rgb(230,192,20)"/><text x="744.00" y="110.50">profile (bench_SVC_rbf_b_cl_prob..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (38 samples, 20.65%)</title><rect x="741" y="116" width="243" height="15" fill="rgb(252,208,4)"/><text x="744.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.54%)</title><rect x="978" y="132" width="6" height="15" fill="rgb(234,185,16)"/><text x="981.00" y="142.50"></text></g><g><title>0x7f375df59af0 (?) (1 samples, 0.54%)</title><rect x="984" y="564" width="7" height="15" fill="rgb(237,134,23)"/><text x="987.00" y="574.50"></text></g><g><title>0x7f375df6c1d2 (?) (1 samples, 0.54%)</title><rect x="984" y="580" width="7" height="15" fill="rgb(247,49,34)"/><text x="987.00" y="590.50"></text></g><g><title>0x7f375df6b7b8 (?) (1 samples, 0.54%)</title><rect x="984" y="596" width="7" height="15" fill="rgb(210,29,35)"/><text x="987.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="984" y="612" width="7" height="15" fill="rgb(244,167,8)"/><text x="987.00" y="622.50"></text></g><g><title>0x7f375df69881 (?) (1 samples, 0.54%)</title><rect x="984" y="628" width="7" height="15" fill="rgb(220,221,21)"/><text x="987.00" y="638.50"></text></g><g><title>0x7f375df66fd7 (?) (1 samples, 0.54%)</title><rect x="984" y="644" width="7" height="15" fill="rgb(230,17,22)"/><text x="987.00" y="654.50"></text></g><g><title>0x7f375e4c9241 (?) (1 samples, 0.54%)</title><rect x="984" y="660" width="7" height="15" fill="rgb(243,142,31)"/><text x="987.00" y="670.50"></text></g><g><title>0x7f375e50ff5e (?) (1 samples, 0.54%)</title><rect x="984" y="676" width="7" height="15" fill="rgb(254,160,8)"/><text x="987.00" y="686.50"></text></g><g><title>0x7f375e50f7b0 (?) (1 samples, 0.54%)</title><rect x="984" y="692" width="7" height="15" fill="rgb(220,111,39)"/><text x="987.00" y="702.50"></text></g><g><title>0x7f375e49e017 (?) (1 samples, 0.54%)</title><rect x="984" y="708" width="7" height="15" fill="rgb(252,88,41)"/><text x="987.00" y="718.50"></text></g><g><title>0x7f375e49dc64 (?) (1 samples, 0.54%)</title><rect x="984" y="724" width="7" height="15" fill="rgb(227,132,5)"/><text x="987.00" y="734.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="984" y="740" width="7" height="15" fill="rgb(226,100,5)"/><text x="987.00" y="750.50"></text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:28) (2 samples, 1.09%)</title><rect x="984" y="84" width="13" height="15" fill="rgb(217,176,14)"/><text x="987.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 1.09%)</title><rect x="984" y="100" width="13" height="15" fill="rgb(223,26,14)"/><text x="987.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 1.09%)</title><rect x="984" y="116" width="13" height="15" fill="rgb(244,111,5)"/><text x="987.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 1.09%)</title><rect x="984" y="132" width="13" height="15" fill="rgb(251,91,20)"/><text x="987.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 1.09%)</title><rect x="984" y="148" width="13" height="15" fill="rgb(237,37,4)"/><text x="987.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 1.09%)</title><rect x="984" y="164" width="13" height="15" fill="rgb(251,175,54)"/><text x="987.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="984" y="180" width="13" height="15" fill="rgb(240,151,22)"/><text x="987.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="984" y="196" width="13" height="15" fill="rgb(234,135,28)"/><text x="987.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="984" y="212" width="13" height="15" fill="rgb(226,1,14)"/><text x="987.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="984" y="228" width="13" height="15" fill="rgb(229,28,16)"/><text x="987.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="984" y="244" width="13" height="15" fill="rgb(228,176,49)"/><text x="987.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 1.09%)</title><rect x="984" y="260" width="13" height="15" fill="rgb(240,220,8)"/><text x="987.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="984" y="276" width="13" height="15" fill="rgb(212,42,3)"/><text x="987.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="984" y="292" width="13" height="15" fill="rgb(235,38,39)"/><text x="987.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="984" y="308" width="13" height="15" fill="rgb(222,212,39)"/><text x="987.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="984" y="324" width="13" height="15" fill="rgb(229,114,21)"/><text x="987.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="984" y="340" width="13" height="15" fill="rgb(253,59,42)"/><text x="987.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 1.09%)</title><rect x="984" y="356" width="13" height="15" fill="rgb(228,17,27)"/><text x="987.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="984" y="372" width="13" height="15" fill="rgb(245,160,12)"/><text x="987.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="984" y="388" width="13" height="15" fill="rgb(245,63,0)"/><text x="987.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.09%)</title><rect x="984" y="404" width="13" height="15" fill="rgb(218,1,32)"/><text x="987.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.09%)</title><rect x="984" y="420" width="13" height="15" fill="rgb(246,98,38)"/><text x="987.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="984" y="436" width="13" height="15" fill="rgb(220,15,24)"/><text x="987.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 1.09%)</title><rect x="984" y="452" width="13" height="15" fill="rgb(234,159,14)"/><text x="987.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.09%)</title><rect x="984" y="468" width="13" height="15" fill="rgb(205,41,30)"/><text x="987.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.09%)</title><rect x="984" y="484" width="13" height="15" fill="rgb(227,111,52)"/><text x="987.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 1.09%)</title><rect x="984" y="500" width="13" height="15" fill="rgb(231,79,28)"/><text x="987.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 1.09%)</title><rect x="984" y="516" width="13" height="15" fill="rgb(240,176,4)"/><text x="987.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 1.09%)</title><rect x="984" y="532" width="13" height="15" fill="rgb(239,39,6)"/><text x="987.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.09%)</title><rect x="984" y="548" width="13" height="15" fill="rgb(215,31,47)"/><text x="987.00" y="558.50"></text></g><g><title>PyInit_onnxruntime_pybind11_state (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="564" width="6" height="15" fill="rgb(235,194,47)"/><text x="994.00" y="574.50"></text></g><g><title>onnxruntime::Environment::Create (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="580" width="6" height="15" fill="rgb(212,228,10)"/><text x="994.00" y="590.50"></text></g><g><title>onnxruntime::Environment::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="596" width="6" height="15" fill="rgb(240,87,6)"/><text x="994.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="991" y="612" width="6" height="15" fill="rgb(244,53,6)"/><text x="994.00" y="622.50"></text></g><g><title>void std::call_once&lt;onnxruntime::Environment::Initialize()::{lambda()#1}, &gt;(std::once_flag&amp;, onnxruntime::Environment::Initialize()::{lambda()#1}&amp;&amp;, &amp;&amp;)::{lambda()#2}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="628" width="6" height="15" fill="rgb(226,227,52)"/><text x="994.00" y="638.50"></text></g><g><title>onnx::OpSet_Onnx_ver6::ForEachSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="644" width="6" height="15" fill="rgb(224,223,4)"/><text x="994.00" y="654.50"></text></g><g><title>onnx::RegisterSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="660" width="6" height="15" fill="rgb(228,128,3)"/><text x="994.00" y="670.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="676" width="6" height="15" fill="rgb(220,118,31)"/><text x="994.00" y="686.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;int, int&gt; &gt;, true&gt; const*)#1}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="991" y="692" width="6" height="15" fill="rgb(239,132,40)"/><text x="994.00" y="702.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="991" y="708" width="6" height="15" fill="rgb(207,47,14)"/><text x="994.00" y="718.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="991" y="724" width="6" height="15" fill="rgb(249,23,45)"/><text x="994.00" y="734.50"></text></g><g><title>0x7f379df238a4 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="991" y="740" width="6" height="15" fill="rgb(250,226,37)"/><text x="994.00" y="750.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.54%)</title><rect x="1004" y="148" width="6" height="15" fill="rgb(226,160,3)"/><text x="1007.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.54%)</title><rect x="1029" y="196" width="7" height="15" fill="rgb(243,69,14)"/><text x="1032.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:133) (1 samples, 0.54%)</title><rect x="1036" y="196" width="6" height="15" fill="rgb(214,86,34)"/><text x="1039.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 1.09%)</title><rect x="1042" y="196" width="13" height="15" fill="rgb(224,182,45)"/><text x="1045.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 1.09%)</title><rect x="1042" y="212" width="13" height="15" fill="rgb(236,100,52)"/><text x="1045.00" y="222.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1061" y="292" width="7" height="15" fill="rgb(209,160,1)"/><text x="1064.00" y="302.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1061" y="308" width="7" height="15" fill="rgb(243,219,41)"/><text x="1064.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1068" y="324" width="6" height="15" fill="rgb(222,11,34)"/><text x="1071.00" y="334.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1087" y="340" width="6" height="15" fill="rgb(221,201,6)"/><text x="1090.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1087" y="356" width="6" height="15" fill="rgb(224,218,52)"/><text x="1090.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1087" y="372" width="6" height="15" fill="rgb(227,190,37)"/><text x="1090.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.54%)</title><rect x="1087" y="388" width="6" height="15" fill="rgb(232,65,31)"/><text x="1090.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1093" y="340" width="7" height="15" fill="rgb(225,58,23)"/><text x="1096.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1093" y="356" width="7" height="15" fill="rgb(220,39,34)"/><text x="1096.00" y="366.50"></text></g><g><title>0x7f378d9ee7a0 (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="1093" y="372" width="7" height="15" fill="rgb(240,184,48)"/><text x="1096.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1100" y="340" width="6" height="15" fill="rgb(212,116,8)"/><text x="1103.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1100" y="356" width="6" height="15" fill="rgb(221,156,12)"/><text x="1103.00" y="366.50"></text></g><g><title>0x7f379df42124 (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1113" y="356" width="6" height="15" fill="rgb(237,56,21)"/><text x="1116.00" y="366.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.63%)</title><rect x="1106" y="340" width="19" height="15" fill="rgb(226,175,3)"/><text x="1109.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1119" y="356" width="6" height="15" fill="rgb(238,109,27)"/><text x="1122.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="1119" y="372" width="6" height="15" fill="rgb(207,98,52)"/><text x="1122.00" y="382.50"></text></g><g><title>0x7f378d9edd50 (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="1119" y="388" width="6" height="15" fill="rgb(253,19,47)"/><text x="1122.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 5.43%)</title><rect x="1068" y="308" width="64" height="15" fill="rgb(234,81,26)"/><text x="1071.00" y="318.50">onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.89%)</title><rect x="1074" y="324" width="58" height="15" fill="rgb(251,122,25)"/><text x="1077.00" y="334.50">onnxru..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1125" y="340" width="7" height="15" fill="rgb(238,54,21)"/><text x="1128.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 7.07%)</title><rect x="1061" y="260" width="84" height="15" fill="rgb(213,86,26)"/><text x="1064.00" y="270.50">onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 7.07%)</title><rect x="1061" y="276" width="84" height="15" fill="rgb(221,38,51)"/><text x="1064.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.52%)</title><rect x="1068" y="292" width="77" height="15" fill="rgb(214,222,52)"/><text x="1071.00" y="302.50">onnxrunt..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.09%)</title><rect x="1132" y="308" width="13" height="15" fill="rgb(238,112,12)"/><text x="1135.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::SetDeviceCopyChecks (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1138" y="324" width="7" height="15" fill="rgb(226,145,43)"/><text x="1141.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.54%)</title><rect x="1151" y="292" width="6" height="15" fill="rgb(211,38,40)"/><text x="1154.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.54%)</title><rect x="1151" y="308" width="6" height="15" fill="rgb(215,193,13)"/><text x="1154.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 8.70%)</title><rect x="1061" y="244" width="103" height="15" fill="rgb(216,81,30)"/><text x="1064.00" y="254.50">onnxruntime:..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.63%)</title><rect x="1145" y="260" width="19" height="15" fill="rgb(209,89,18)"/><text x="1148.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 1.09%)</title><rect x="1151" y="276" width="13" height="15" fill="rgb(208,166,12)"/><text x="1154.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.54%)</title><rect x="1157" y="292" width="7" height="15" fill="rgb(227,92,4)"/><text x="1160.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.54%)</title><rect x="1157" y="308" width="7" height="15" fill="rgb(208,173,12)"/><text x="1160.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:171) (1 samples, 0.54%)</title><rect x="1157" y="324" width="7" height="15" fill="rgb(208,48,50)"/><text x="1160.00" y="334.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1164" y="260" width="6" height="15" fill="rgb(217,22,36)"/><text x="1167.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.09%)</title><rect x="1164" y="244" width="13" height="15" fill="rgb(245,200,10)"/><text x="1167.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1170" y="260" width="7" height="15" fill="rgb(240,89,34)"/><text x="1173.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.54%)</title><rect x="1170" y="276" width="7" height="15" fill="rgb(223,191,46)"/><text x="1173.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.54%)</title><rect x="1170" y="292" width="7" height="15" fill="rgb(227,8,10)"/><text x="1173.00" y="302.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (27 samples, 14.67%)</title><rect x="1010" y="164" width="173" height="15" fill="rgb(248,151,50)"/><text x="1013.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (25 samples, 13.59%)</title><rect x="1023" y="180" width="160" height="15" fill="rgb(208,27,31)"/><text x="1026.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (20 samples, 10.87%)</title><rect x="1055" y="196" width="128" height="15" fill="rgb(233,121,32)"/><text x="1058.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 10.33%)</title><rect x="1061" y="212" width="122" height="15" fill="rgb(240,48,5)"/><text x="1064.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 10.33%)</title><rect x="1061" y="228" width="122" height="15" fill="rgb(239,32,37)"/><text x="1064.00" y="238.50">void pybind11::..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.54%)</title><rect x="1177" y="244" width="6" height="15" fill="rgb(214,224,12)"/><text x="1180.00" y="254.50"></text></g><g><title>all (184 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(216,190,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:52) (32 samples, 17.39%)</title><rect x="984" y="52" width="206" height="15" fill="rgb(233,186,2)"/><text x="987.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_c..</text></g><g><title>profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:51) (32 samples, 17.39%)</title><rect x="984" y="68" width="206" height="15" fill="rgb(235,140,40)"/><text x="987.00" y="78.50">profile_ort (bench_SVC_rbf_..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:29) (30 samples, 16.30%)</title><rect x="997" y="84" width="193" height="15" fill="rgb(253,8,49)"/><text x="1000.00" y="94.50">setup_profile (bench_SVC_..</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py:23) (30 samples, 16.30%)</title><rect x="997" y="100" width="193" height="15" fill="rgb(246,51,45)"/><text x="1000.00" y="110.50">profile (bench_SVC_rbf_b_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (30 samples, 16.30%)</title><rect x="997" y="116" width="193" height="15" fill="rgb(225,10,50)"/><text x="1000.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (29 samples, 15.76%)</title><rect x="1004" y="132" width="186" height="15" fill="rgb(219,51,26)"/><text x="1007.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (28 samples, 15.22%)</title><rect x="1010" y="148" width="180" height="15" fill="rgb(221,69,7)"/><text x="1013.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.54%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(244,105,45)"/><text x="1186.00" y="174.50"></text></g></g></svg>