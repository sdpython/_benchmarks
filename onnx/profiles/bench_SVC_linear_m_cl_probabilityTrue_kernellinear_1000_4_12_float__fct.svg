<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>add (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(209,8,15)"/><text x="13.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(246,8,30)"/><text x="13.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(214,64,50)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(213,211,30)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(250,91,9)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(218,94,12)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(207,33,24)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(205,83,36)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(249,201,42)"/><text x="14.00" y="942.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.13%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(219,206,6)"/><text x="14.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.13%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(241,27,52)"/><text x="14.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(214,94,13)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(243,93,17)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(221,204,13)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(233,63,52)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(211,4,42)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(245,221,13)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(218,36,2)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(246,187,5)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(251,67,0)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(208,37,20)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(221,130,13)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(240,136,26)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.40%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(254,70,48)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(252,30,40)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(251,127,9)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(230,34,37)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(233,91,25)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(224,68,20)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.40%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(210,11,47)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(240,63,23)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(211,166,1)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(227,217,49)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(247,85,24)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(236,174,24)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.40%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(252,182,42)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(206,118,34)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(215,227,50)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(225,212,14)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(212,22,25)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(249,196,9)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(224,113,51)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(237,82,7)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(252,165,10)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(219,78,46)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(206,19,53)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(232,225,32)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(247,99,51)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(212,218,33)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(228,30,2)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(220,20,42)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="836" width="1" height="15" fill="rgb(237,43,32)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="852" width="1" height="15" fill="rgb(207,75,38)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="868" width="1" height="15" fill="rgb(253,23,30)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(228,73,21)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(250,227,27)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.13%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(225,48,5)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(238,142,23)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(254,80,12)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(217,200,43)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(211,199,15)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="13" y="996" width="1" height="15" fill="rgb(250,23,33)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.13%)</title><rect x="13" y="1012" width="1" height="15" fill="rgb(232,92,52)"/><text x="16.00" y="1022.50"></text></g><g><title>compile (re.py) (1 samples, 0.13%)</title><rect x="13" y="1028" width="1" height="15" fill="rgb(249,87,23)"/><text x="16.00" y="1038.50"></text></g><g><title>_compile (re.py) (1 samples, 0.13%)</title><rect x="13" y="1044" width="1" height="15" fill="rgb(232,220,7)"/><text x="16.00" y="1054.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="13" y="1060" width="1" height="15" fill="rgb(245,78,3)"/><text x="16.00" y="1070.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="13" y="1076" width="1" height="15" fill="rgb(225,163,2)"/><text x="16.00" y="1086.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="13" y="1092" width="1" height="15" fill="rgb(247,1,42)"/><text x="16.00" y="1102.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="13" y="1108" width="1" height="15" fill="rgb(218,4,19)"/><text x="16.00" y="1118.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.13%)</title><rect x="13" y="1124" width="1" height="15" fill="rgb(247,6,33)"/><text x="16.00" y="1134.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.13%)</title><rect x="13" y="1140" width="1" height="15" fill="rgb(221,14,49)"/><text x="16.00" y="1150.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.13%)</title><rect x="13" y="1156" width="1" height="15" fill="rgb(232,35,16)"/><text x="16.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="484" width="2" height="15" fill="rgb(237,147,15)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="500" width="2" height="15" fill="rgb(252,29,38)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="516" width="2" height="15" fill="rgb(245,38,42)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="532" width="2" height="15" fill="rgb(237,135,51)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="548" width="2" height="15" fill="rgb(227,132,31)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="564" width="2" height="15" fill="rgb(244,144,46)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="580" width="2" height="15" fill="rgb(253,3,34)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="596" width="2" height="15" fill="rgb(251,18,18)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="612" width="2" height="15" fill="rgb(226,134,28)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="628" width="2" height="15" fill="rgb(239,82,9)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="644" width="2" height="15" fill="rgb(254,79,41)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="660" width="2" height="15" fill="rgb(238,141,6)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.13%)</title><rect x="14" y="676" width="2" height="15" fill="rgb(221,3,37)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="692" width="2" height="15" fill="rgb(252,46,16)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="708" width="2" height="15" fill="rgb(254,96,42)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="724" width="2" height="15" fill="rgb(250,34,40)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="740" width="2" height="15" fill="rgb(237,184,22)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="756" width="2" height="15" fill="rgb(243,204,48)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="772" width="2" height="15" fill="rgb(252,206,17)"/><text x="17.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="788" width="2" height="15" fill="rgb(224,202,11)"/><text x="17.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="804" width="2" height="15" fill="rgb(209,126,29)"/><text x="17.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="820" width="2" height="15" fill="rgb(230,192,24)"/><text x="17.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="836" width="2" height="15" fill="rgb(246,197,36)"/><text x="17.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(216,82,37)"/><text x="17.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.13%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(241,154,4)"/><text x="17.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(207,54,50)"/><text x="17.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(223,76,25)"/><text x="17.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(244,44,12)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(252,154,8)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(221,50,2)"/><text x="17.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(207,61,11)"/><text x="17.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(212,55,17)"/><text x="17.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(247,107,18)"/><text x="17.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(253,71,29)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1028" width="2" height="15" fill="rgb(254,191,54)"/><text x="17.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1044" width="2" height="15" fill="rgb(227,130,20)"/><text x="17.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1060" width="2" height="15" fill="rgb(228,1,53)"/><text x="17.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="1076" width="2" height="15" fill="rgb(250,201,28)"/><text x="17.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1092" width="2" height="15" fill="rgb(233,33,41)"/><text x="17.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.13%)</title><rect x="14" y="1108" width="2" height="15" fill="rgb(217,29,13)"/><text x="17.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1124" width="2" height="15" fill="rgb(251,25,51)"/><text x="17.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1140" width="2" height="15" fill="rgb(244,185,10)"/><text x="17.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1156" width="2" height="15" fill="rgb(250,4,5)"/><text x="17.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1172" width="2" height="15" fill="rgb(207,143,31)"/><text x="17.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1188" width="2" height="15" fill="rgb(214,24,28)"/><text x="17.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="1204" width="2" height="15" fill="rgb(229,176,44)"/><text x="17.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1220" width="2" height="15" fill="rgb(250,124,52)"/><text x="17.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="1236" width="2" height="15" fill="rgb(224,194,2)"/><text x="17.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1252" width="2" height="15" fill="rgb(213,39,21)"/><text x="17.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1268" width="2" height="15" fill="rgb(221,119,15)"/><text x="17.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1284" width="2" height="15" fill="rgb(230,161,4)"/><text x="17.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1300" width="2" height="15" fill="rgb(214,54,54)"/><text x="17.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1316" width="2" height="15" fill="rgb(210,90,2)"/><text x="17.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="1332" width="2" height="15" fill="rgb(240,228,31)"/><text x="17.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1348" width="2" height="15" fill="rgb(253,219,30)"/><text x="17.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.13%)</title><rect x="14" y="1364" width="2" height="15" fill="rgb(248,27,9)"/><text x="17.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1380" width="2" height="15" fill="rgb(210,160,2)"/><text x="17.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1396" width="2" height="15" fill="rgb(253,90,2)"/><text x="17.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1412" width="2" height="15" fill="rgb(215,180,43)"/><text x="17.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="1428" width="2" height="15" fill="rgb(215,112,50)"/><text x="17.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="1444" width="2" height="15" fill="rgb(205,228,19)"/><text x="17.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="14" y="1460" width="2" height="15" fill="rgb(254,191,12)"/><text x="17.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="14" y="1476" width="2" height="15" fill="rgb(250,199,49)"/><text x="17.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="14" y="1492" width="2" height="15" fill="rgb(235,16,2)"/><text x="17.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="14" y="1508" width="2" height="15" fill="rgb(237,40,2)"/><text x="17.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="14" y="1524" width="2" height="15" fill="rgb(208,100,3)"/><text x="17.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="14" y="1540" width="2" height="15" fill="rgb(240,29,35)"/><text x="17.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="14" y="1556" width="2" height="15" fill="rgb(206,154,25)"/><text x="17.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.13%)</title><rect x="14" y="1572" width="2" height="15" fill="rgb(222,146,27)"/><text x="17.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.13%)</title><rect x="16" y="724" width="1" height="15" fill="rgb(223,172,39)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="740" width="1" height="15" fill="rgb(248,130,33)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="756" width="1" height="15" fill="rgb(215,99,4)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="772" width="1" height="15" fill="rgb(223,14,11)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="788" width="1" height="15" fill="rgb(211,37,24)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="804" width="1" height="15" fill="rgb(214,68,47)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.13%)</title><rect x="16" y="820" width="1" height="15" fill="rgb(211,134,3)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(205,23,41)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(237,199,8)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(248,63,53)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(216,12,54)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(218,27,44)"/><text x="19.00" y="910.50"></text></g><g><title>0x7f89f6a7c67b (?) (1 samples, 0.13%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(241,136,11)"/><text x="19.00" y="926.50"></text></g><g><title>0x7f89f6a80d4a (?) (1 samples, 0.13%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(222,222,12)"/><text x="19.00" y="942.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(243,106,5)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.40%)</title><rect x="14" y="436" width="5" height="15" fill="rgb(235,201,38)"/><text x="17.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="14" y="452" width="5" height="15" fill="rgb(211,17,7)"/><text x="17.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="14" y="468" width="5" height="15" fill="rgb(209,85,19)"/><text x="17.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(218,147,34)"/><text x="19.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="16" y="500" width="3" height="15" fill="rgb(242,229,40)"/><text x="19.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="516" width="3" height="15" fill="rgb(209,227,38)"/><text x="19.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.27%)</title><rect x="16" y="532" width="3" height="15" fill="rgb(248,30,27)"/><text x="19.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="548" width="3" height="15" fill="rgb(210,185,46)"/><text x="19.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="564" width="3" height="15" fill="rgb(221,180,29)"/><text x="19.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="580" width="3" height="15" fill="rgb(227,161,21)"/><text x="19.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="16" y="596" width="3" height="15" fill="rgb(208,24,26)"/><text x="19.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="612" width="3" height="15" fill="rgb(237,215,39)"/><text x="19.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.27%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(242,147,1)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(232,170,31)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="660" width="3" height="15" fill="rgb(218,171,13)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="676" width="3" height="15" fill="rgb(218,225,23)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="16" y="692" width="3" height="15" fill="rgb(231,137,54)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="16" y="708" width="3" height="15" fill="rgb(210,160,38)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.13%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(227,78,43)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(230,167,25)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(242,86,30)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(230,67,33)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(250,170,3)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(248,211,47)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.13%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(230,200,39)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(228,150,22)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(216,169,28)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(254,150,27)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(236,37,46)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(248,64,26)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.13%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(228,68,45)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(213,83,43)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(249,63,21)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(226,174,38)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(217,99,12)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(235,115,34)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.13%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(220,86,52)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(230,178,37)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(247,36,6)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(232,202,5)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(253,217,44)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(209,196,49)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.13%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(225,79,12)"/><text x="20.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(243,215,16)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(208,56,37)"/><text x="20.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(236,201,39)"/><text x="20.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(205,33,42)"/><text x="20.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(206,208,21)"/><text x="20.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.13%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(247,224,52)"/><text x="20.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(226,21,40)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(206,219,26)"/><text x="20.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(250,65,8)"/><text x="20.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(219,18,36)"/><text x="20.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(210,171,53)"/><text x="20.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.13%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(210,19,46)"/><text x="20.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(233,212,27)"/><text x="20.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(214,78,9)"/><text x="20.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(234,12,46)"/><text x="20.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(207,3,34)"/><text x="20.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(242,1,24)"/><text x="20.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(205,109,31)"/><text x="20.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(225,163,18)"/><text x="20.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(251,102,27)"/><text x="20.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(212,22,4)"/><text x="20.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(239,200,52)"/><text x="20.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(225,172,10)"/><text x="20.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.13%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(235,63,8)"/><text x="20.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(222,226,37)"/><text x="20.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(248,199,26)"/><text x="20.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(232,45,11)"/><text x="20.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1556" width="2" height="15" fill="rgb(246,107,11)"/><text x="20.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1572" width="2" height="15" fill="rgb(253,166,33)"/><text x="20.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.13%)</title><rect x="17" y="1588" width="2" height="15" fill="rgb(206,224,49)"/><text x="20.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1604" width="2" height="15" fill="rgb(215,116,29)"/><text x="20.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1620" width="2" height="15" fill="rgb(229,126,25)"/><text x="20.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1636" width="2" height="15" fill="rgb(232,94,40)"/><text x="20.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1652" width="2" height="15" fill="rgb(245,170,47)"/><text x="20.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1668" width="2" height="15" fill="rgb(229,178,50)"/><text x="20.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.13%)</title><rect x="17" y="1684" width="2" height="15" fill="rgb(223,94,33)"/><text x="20.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1700" width="2" height="15" fill="rgb(245,162,14)"/><text x="20.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1716" width="2" height="15" fill="rgb(252,57,25)"/><text x="20.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1732" width="2" height="15" fill="rgb(229,191,32)"/><text x="20.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1748" width="2" height="15" fill="rgb(205,192,13)"/><text x="20.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1764" width="2" height="15" fill="rgb(245,105,13)"/><text x="20.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.13%)</title><rect x="17" y="1780" width="2" height="15" fill="rgb(228,34,2)"/><text x="20.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1796" width="2" height="15" fill="rgb(232,146,3)"/><text x="20.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1812" width="2" height="15" fill="rgb(209,160,9)"/><text x="20.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1828" width="2" height="15" fill="rgb(214,49,24)"/><text x="20.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1844" width="2" height="15" fill="rgb(237,8,40)"/><text x="20.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1860" width="2" height="15" fill="rgb(251,217,8)"/><text x="20.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.13%)</title><rect x="17" y="1876" width="2" height="15" fill="rgb(208,65,33)"/><text x="20.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="17" y="1892" width="2" height="15" fill="rgb(254,168,43)"/><text x="20.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="17" y="1908" width="2" height="15" fill="rgb(245,206,54)"/><text x="20.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="17" y="1924" width="2" height="15" fill="rgb(218,79,22)"/><text x="20.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.13%)</title><rect x="17" y="1940" width="2" height="15" fill="rgb(250,12,38)"/><text x="20.00" y="1950.50"></text></g><g><title>kind (inspect.py) (1 samples, 0.13%)</title><rect x="17" y="1956" width="2" height="15" fill="rgb(220,228,29)"/><text x="20.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.54%)</title><rect x="14" y="340" width="7" height="15" fill="rgb(242,206,13)"/><text x="17.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="14" y="356" width="7" height="15" fill="rgb(209,147,11)"/><text x="17.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="14" y="372" width="7" height="15" fill="rgb(211,200,17)"/><text x="17.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="14" y="388" width="7" height="15" fill="rgb(234,160,36)"/><text x="17.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.54%)</title><rect x="14" y="404" width="7" height="15" fill="rgb(215,81,8)"/><text x="17.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="14" y="420" width="7" height="15" fill="rgb(223,172,3)"/><text x="17.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="436" width="2" height="15" fill="rgb(235,61,36)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="452" width="2" height="15" fill="rgb(245,10,46)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="468" width="2" height="15" fill="rgb(237,105,44)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="484" width="2" height="15" fill="rgb(251,25,11)"/><text x="22.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="500" width="2" height="15" fill="rgb(212,181,0)"/><text x="22.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="516" width="2" height="15" fill="rgb(237,225,33)"/><text x="22.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.13%)</title><rect x="19" y="532" width="2" height="15" fill="rgb(213,222,20)"/><text x="22.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="548" width="2" height="15" fill="rgb(212,138,36)"/><text x="22.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="564" width="2" height="15" fill="rgb(246,121,43)"/><text x="22.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(233,145,34)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(221,115,15)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(211,24,5)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(236,46,11)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(228,113,41)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(222,225,4)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(248,198,17)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(216,67,34)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(229,221,6)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(252,210,30)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(220,42,34)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(220,26,34)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/idl.py) (1 samples, 0.13%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(214,197,17)"/><text x="22.00" y="782.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.13%)</title><rect x="21" y="580" width="1" height="15" fill="rgb(251,105,41)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="596" width="1" height="15" fill="rgb(237,95,20)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="612" width="1" height="15" fill="rgb(227,109,37)"/><text x="24.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="628" width="1" height="15" fill="rgb(244,172,6)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="644" width="1" height="15" fill="rgb(241,68,24)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="660" width="1" height="15" fill="rgb(209,181,33)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="676" width="1" height="15" fill="rgb(213,114,16)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="692" width="1" height="15" fill="rgb(247,56,13)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="708" width="1" height="15" fill="rgb(210,191,50)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.13%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(220,134,38)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(230,2,51)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(225,134,19)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(222,20,29)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(212,165,24)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(244,219,48)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.13%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(243,174,31)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(234,93,48)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(211,74,26)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(244,177,3)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(238,7,17)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(220,55,27)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.13%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(225,153,29)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(246,48,4)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(227,3,26)"/><text x="24.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(244,155,51)"/><text x="24.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(206,150,12)"/><text x="24.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(206,95,28)"/><text x="24.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(214,12,53)"/><text x="24.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(205,128,48)"/><text x="24.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(230,55,22)"/><text x="24.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.13%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(221,27,10)"/><text x="24.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(218,180,17)"/><text x="24.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(212,24,43)"/><text x="24.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(247,223,42)"/><text x="24.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(224,95,35)"/><text x="24.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(205,161,28)"/><text x="24.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(217,173,14)"/><text x="24.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.81%)</title><rect x="14" y="244" width="10" height="15" fill="rgb(206,177,51)"/><text x="17.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.81%)</title><rect x="14" y="260" width="10" height="15" fill="rgb(243,162,23)"/><text x="17.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.81%)</title><rect x="14" y="276" width="10" height="15" fill="rgb(243,163,47)"/><text x="17.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.81%)</title><rect x="14" y="292" width="10" height="15" fill="rgb(237,50,26)"/><text x="17.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.81%)</title><rect x="14" y="308" width="10" height="15" fill="rgb(247,151,50)"/><text x="17.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.81%)</title><rect x="14" y="324" width="10" height="15" fill="rgb(214,165,42)"/><text x="17.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.27%)</title><rect x="21" y="340" width="3" height="15" fill="rgb(250,171,24)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="356" width="3" height="15" fill="rgb(245,228,7)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="372" width="3" height="15" fill="rgb(240,11,7)"/><text x="24.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="388" width="3" height="15" fill="rgb(230,11,7)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="404" width="3" height="15" fill="rgb(233,101,23)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="420" width="3" height="15" fill="rgb(249,80,12)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="436" width="3" height="15" fill="rgb(238,168,42)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="452" width="3" height="15" fill="rgb(226,20,34)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="468" width="3" height="15" fill="rgb(254,180,12)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.27%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(250,92,50)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(212,128,0)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(229,219,16)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(243,113,18)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(240,133,16)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(216,168,5)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.13%)</title><rect x="22" y="580" width="2" height="15" fill="rgb(240,226,46)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="596" width="2" height="15" fill="rgb(253,182,7)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(229,223,28)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(206,25,11)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="644" width="2" height="15" fill="rgb(219,140,53)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="660" width="2" height="15" fill="rgb(252,141,40)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.13%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(228,64,21)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(222,91,52)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(242,158,33)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(238,127,10)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(210,202,20)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(229,138,38)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.13%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(205,97,37)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(219,217,33)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(207,212,3)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(205,93,45)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(213,148,4)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(246,117,42)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(248,219,1)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(218,208,46)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.13%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(219,99,18)"/><text x="25.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(218,37,33)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(240,149,24)"/><text x="25.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(247,197,35)"/><text x="25.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(222,212,42)"/><text x="25.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(206,174,3)"/><text x="25.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.13%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(220,22,4)"/><text x="25.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(230,55,16)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(244,161,41)"/><text x="25.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(242,96,51)"/><text x="25.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(208,168,45)"/><text x="25.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1076" width="2" height="15" fill="rgb(243,162,2)"/><text x="25.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.13%)</title><rect x="22" y="1092" width="2" height="15" fill="rgb(238,151,9)"/><text x="25.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(251,86,3)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(243,223,23)"/><text x="25.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(217,218,13)"/><text x="25.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(253,134,51)"/><text x="25.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(205,182,3)"/><text x="25.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/dsa.py) (1 samples, 0.13%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(228,2,23)"/><text x="25.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.13%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(240,205,2)"/><text x="25.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.13%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(220,199,24)"/><text x="25.00" y="1230.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.13%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(217,85,54)"/><text x="25.00" y="1246.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.13%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(239,49,49)"/><text x="25.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.13%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(246,58,5)"/><text x="25.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.13%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(225,218,44)"/><text x="25.00" y="1294.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="516" width="1" height="15" fill="rgb(206,16,51)"/><text x="27.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="532" width="1" height="15" fill="rgb(214,209,12)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="548" width="1" height="15" fill="rgb(223,179,16)"/><text x="27.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="564" width="1" height="15" fill="rgb(211,111,19)"/><text x="27.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="580" width="1" height="15" fill="rgb(231,138,52)"/><text x="27.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="596" width="1" height="15" fill="rgb(211,50,19)"/><text x="27.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="612" width="1" height="15" fill="rgb(236,108,22)"/><text x="27.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.13%)</title><rect x="24" y="628" width="1" height="15" fill="rgb(235,216,23)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="644" width="1" height="15" fill="rgb(210,137,49)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="660" width="1" height="15" fill="rgb(206,8,20)"/><text x="27.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="676" width="1" height="15" fill="rgb(237,36,52)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="692" width="1" height="15" fill="rgb(238,31,6)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="708" width="1" height="15" fill="rgb(232,217,39)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="724" width="1" height="15" fill="rgb(241,135,32)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="740" width="1" height="15" fill="rgb(249,57,26)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="756" width="1" height="15" fill="rgb(251,167,17)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="772" width="1" height="15" fill="rgb(235,209,26)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="788" width="1" height="15" fill="rgb(238,119,2)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="804" width="1" height="15" fill="rgb(253,102,14)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="820" width="1" height="15" fill="rgb(242,158,45)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="836" width="1" height="15" fill="rgb(219,222,6)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="852" width="1" height="15" fill="rgb(239,37,14)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="868" width="1" height="15" fill="rgb(218,82,43)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="884" width="1" height="15" fill="rgb(228,160,2)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.13%)</title><rect x="24" y="900" width="1" height="15" fill="rgb(213,99,36)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="916" width="1" height="15" fill="rgb(215,122,31)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="932" width="1" height="15" fill="rgb(245,114,44)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="948" width="1" height="15" fill="rgb(237,199,0)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="964" width="1" height="15" fill="rgb(219,30,23)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="980" width="1" height="15" fill="rgb(252,103,31)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (1 samples, 0.13%)</title><rect x="24" y="996" width="1" height="15" fill="rgb(205,0,6)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1012" width="1" height="15" fill="rgb(221,219,37)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1028" width="1" height="15" fill="rgb(233,179,19)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1044" width="1" height="15" fill="rgb(246,4,6)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="1060" width="1" height="15" fill="rgb(248,65,44)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1076" width="1" height="15" fill="rgb(212,45,16)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (urllib/parse.py) (1 samples, 0.13%)</title><rect x="24" y="1092" width="1" height="15" fill="rgb(215,190,16)"/><text x="27.00" y="1102.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="1108" width="1" height="15" fill="rgb(254,155,50)"/><text x="27.00" y="1118.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (3 samples, 0.40%)</title><rect x="24" y="372" width="5" height="15" fill="rgb(225,169,33)"/><text x="27.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="24" y="388" width="5" height="15" fill="rgb(236,51,3)"/><text x="27.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="24" y="404" width="5" height="15" fill="rgb(234,22,4)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="24" y="420" width="5" height="15" fill="rgb(207,184,43)"/><text x="27.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="24" y="436" width="5" height="15" fill="rgb(237,78,2)"/><text x="27.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="24" y="452" width="5" height="15" fill="rgb(234,17,45)"/><text x="27.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="24" y="468" width="5" height="15" fill="rgb(233,19,45)"/><text x="27.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="24" y="484" width="5" height="15" fill="rgb(215,220,24)"/><text x="27.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (3 samples, 0.40%)</title><rect x="24" y="500" width="5" height="15" fill="rgb(206,98,16)"/><text x="27.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.27%)</title><rect x="25" y="516" width="4" height="15" fill="rgb(207,121,33)"/><text x="28.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.27%)</title><rect x="25" y="532" width="4" height="15" fill="rgb(229,64,14)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.75%)</title><rect x="10" y="68" width="20" height="15" fill="rgb(212,103,30)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.75%)</title><rect x="10" y="84" width="20" height="15" fill="rgb(229,207,14)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.75%)</title><rect x="10" y="100" width="20" height="15" fill="rgb(250,87,37)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 1.75%)</title><rect x="10" y="116" width="20" height="15" fill="rgb(205,1,18)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.75%)</title><rect x="10" y="132" width="20" height="15" fill="rgb(214,122,13)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_m_cl_probabilityTrue_kernellinear.py) (13 samples, 1.75%)</title><rect x="10" y="148" width="20" height="15" fill="rgb(234,113,42)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.75%)</title><rect x="10" y="164" width="20" height="15" fill="rgb(246,122,48)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.75%)</title><rect x="10" y="180" width="20" height="15" fill="rgb(215,217,25)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.35%)</title><rect x="14" y="196" width="16" height="15" fill="rgb(239,117,1)"/><text x="17.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.35%)</title><rect x="14" y="212" width="16" height="15" fill="rgb(234,2,33)"/><text x="17.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.35%)</title><rect x="14" y="228" width="16" height="15" fill="rgb(242,169,30)"/><text x="17.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (4 samples, 0.54%)</title><rect x="24" y="244" width="6" height="15" fill="rgb(239,9,54)"/><text x="27.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="24" y="260" width="6" height="15" fill="rgb(211,82,29)"/><text x="27.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="24" y="276" width="6" height="15" fill="rgb(242,56,14)"/><text x="27.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="24" y="292" width="6" height="15" fill="rgb(217,170,12)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="24" y="308" width="6" height="15" fill="rgb(206,117,38)"/><text x="27.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="24" y="324" width="6" height="15" fill="rgb(217,47,19)"/><text x="27.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.54%)</title><rect x="24" y="340" width="6" height="15" fill="rgb(243,35,38)"/><text x="27.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.54%)</title><rect x="24" y="356" width="6" height="15" fill="rgb(219,6,13)"/><text x="27.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.13%)</title><rect x="29" y="372" width="1" height="15" fill="rgb(241,162,36)"/><text x="32.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="388" width="1" height="15" fill="rgb(254,95,52)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="404" width="1" height="15" fill="rgb(206,121,11)"/><text x="32.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="420" width="1" height="15" fill="rgb(229,172,25)"/><text x="32.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="436" width="1" height="15" fill="rgb(227,147,40)"/><text x="32.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="452" width="1" height="15" fill="rgb(235,203,24)"/><text x="32.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.13%)</title><rect x="29" y="468" width="1" height="15" fill="rgb(226,66,39)"/><text x="32.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="484" width="1" height="15" fill="rgb(209,55,44)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="500" width="1" height="15" fill="rgb(245,11,21)"/><text x="32.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="516" width="1" height="15" fill="rgb(248,204,37)"/><text x="32.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="532" width="1" height="15" fill="rgb(237,98,40)"/><text x="32.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="548" width="1" height="15" fill="rgb(250,5,37)"/><text x="32.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.13%)</title><rect x="29" y="564" width="1" height="15" fill="rgb(244,167,15)"/><text x="32.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="580" width="1" height="15" fill="rgb(227,113,44)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="596" width="1" height="15" fill="rgb(248,223,15)"/><text x="32.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="612" width="1" height="15" fill="rgb(215,8,42)"/><text x="32.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="29" y="628" width="1" height="15" fill="rgb(225,62,31)"/><text x="32.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="29" y="644" width="1" height="15" fill="rgb(246,227,13)"/><text x="32.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/lib/histograms.py) (1 samples, 0.13%)</title><rect x="29" y="660" width="1" height="15" fill="rgb(249,200,52)"/><text x="32.00" y="670.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.13%)</title><rect x="29" y="676" width="1" height="15" fill="rgb(237,39,10)"/><text x="32.00" y="686.50"></text></g><g><title>0x7f8a21563bc6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="48" y="132" width="1" height="15" fill="rgb(207,198,45)"/><text x="51.00" y="142.50"></text></g><g><title>0x7f8a21563c36 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="49" y="132" width="2" height="15" fill="rgb(224,171,40)"/><text x="52.00" y="142.50"></text></g><g><title>0x7f8a21563c3d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="51" y="132" width="1" height="15" fill="rgb(222,80,44)"/><text x="54.00" y="142.50"></text></g><g><title>0x7f8a21563c45 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="52" y="132" width="2" height="15" fill="rgb(222,104,4)"/><text x="55.00" y="142.50"></text></g><g><title>0x7f8a21563c73 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="54" y="132" width="2" height="15" fill="rgb(234,72,32)"/><text x="57.00" y="142.50"></text></g><g><title>0x7f8a21563ab9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="54" y="148" width="2" height="15" fill="rgb(205,193,39)"/><text x="57.00" y="158.50"></text></g><g><title>0x7f8a21564eb0 (libc-2.29.so) (6 samples, 0.81%)</title><rect x="48" y="116" width="9" height="15" fill="rgb(217,15,31)"/><text x="51.00" y="126.50"></text></g><g><title>0x7f8a21563ca7 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="56" y="132" width="1" height="15" fill="rgb(240,139,54)"/><text x="59.00" y="142.50"></text></g><g><title>0x7f8a21563aa0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="56" y="148" width="1" height="15" fill="rgb(207,43,54)"/><text x="59.00" y="158.50"></text></g><g><title>0x7f89e15d4ff9 (?) (1 samples, 0.13%)</title><rect x="60" y="212" width="2" height="15" fill="rgb(214,1,39)"/><text x="63.00" y="222.50"></text></g><g><title>0x7f89e15cfef6 (?) (1 samples, 0.13%)</title><rect x="60" y="228" width="2" height="15" fill="rgb(240,151,33)"/><text x="63.00" y="238.50"></text></g><g><title>0x7f89e15c4962 (?) (1 samples, 0.13%)</title><rect x="60" y="244" width="2" height="15" fill="rgb(222,52,1)"/><text x="63.00" y="254.50"></text></g><g><title>0x7f89e15f87a7 (?) (1 samples, 0.13%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(215,137,15)"/><text x="63.00" y="270.50"></text></g><g><title>0x7f89e15f8379 (?) (1 samples, 0.13%)</title><rect x="60" y="276" width="2" height="15" fill="rgb(209,12,12)"/><text x="63.00" y="286.50"></text></g><g><title>0x7f89e1a568b8 (?) (1 samples, 0.13%)</title><rect x="60" y="292" width="2" height="15" fill="rgb(254,84,4)"/><text x="63.00" y="302.50"></text></g><g><title>0x7f89e1a54c7f (?) (1 samples, 0.13%)</title><rect x="60" y="308" width="2" height="15" fill="rgb(227,108,46)"/><text x="63.00" y="318.50"></text></g><g><title>0x7f89e1a6799c (?) (1 samples, 0.13%)</title><rect x="60" y="324" width="2" height="15" fill="rgb(237,150,12)"/><text x="63.00" y="334.50"></text></g><g><title>0x7f89e176cae2 (?) (1 samples, 0.13%)</title><rect x="60" y="340" width="2" height="15" fill="rgb(217,11,18)"/><text x="63.00" y="350.50"></text></g><g><title>0x7f8a2156490e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="60" y="356" width="2" height="15" fill="rgb(240,208,2)"/><text x="63.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="340" width="2" height="15" fill="rgb(215,5,47)"/><text x="65.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="356" width="2" height="15" fill="rgb(216,155,53)"/><text x="65.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="372" width="2" height="15" fill="rgb(234,97,30)"/><text x="65.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="388" width="2" height="15" fill="rgb(247,137,38)"/><text x="65.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="404" width="2" height="15" fill="rgb(242,126,33)"/><text x="65.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="420" width="2" height="15" fill="rgb(243,109,40)"/><text x="65.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="436" width="2" height="15" fill="rgb(223,21,31)"/><text x="65.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="452" width="2" height="15" fill="rgb(210,206,16)"/><text x="65.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="62" y="468" width="2" height="15" fill="rgb(254,50,36)"/><text x="65.00" y="478.50"></text></g><g><title>0x7f89e159bed0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="175" y="356" width="2" height="15" fill="rgb(205,101,15)"/><text x="178.00" y="366.50"></text></g><g><title>0x7f8a2156491e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="177" y="356" width="1" height="15" fill="rgb(247,211,16)"/><text x="180.00" y="366.50"></text></g><g><title>0x7f8a21564a4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="178" y="356" width="2" height="15" fill="rgb(253,51,10)"/><text x="181.00" y="366.50"></text></g><g><title>0x7f8a21564bd8 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="180" y="356" width="3" height="15" fill="rgb(216,124,3)"/><text x="183.00" y="366.50"></text></g><g><title>0x7f8a21585120 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="183" y="356" width="2" height="15" fill="rgb(206,15,22)"/><text x="186.00" y="366.50"></text></g><g><title>0x7f8a216e3e69 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="185" y="356" width="1" height="15" fill="rgb(232,4,17)"/><text x="188.00" y="366.50"></text></g><g><title>0x7f8a216e3ea2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="186" y="356" width="2" height="15" fill="rgb(237,180,3)"/><text x="189.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="188" y="356" width="3" height="15" fill="rgb(222,143,49)"/><text x="191.00" y="366.50"></text></g><g><title>0x7f8a2156499b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="271" y="372" width="1" height="15" fill="rgb(217,112,40)"/><text x="274.00" y="382.50"></text></g><g><title>0x7f8a21564a38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="272" y="372" width="2" height="15" fill="rgb(230,17,10)"/><text x="275.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="274" y="372" width="1" height="15" fill="rgb(245,83,44)"/><text x="277.00" y="382.50"></text></g><g><title>0x7f89e159b930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="285" y="388" width="2" height="15" fill="rgb(207,11,23)"/><text x="288.00" y="398.50"></text></g><g><title>0x7f89e159c0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="287" y="388" width="1" height="15" fill="rgb(220,52,24)"/><text x="290.00" y="398.50"></text></g><g><title>0x7f8a21564906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="288" y="388" width="2" height="15" fill="rgb(230,202,36)"/><text x="291.00" y="398.50"></text></g><g><title>0x7f8a2156491e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="290" y="388" width="1" height="15" fill="rgb(227,125,33)"/><text x="293.00" y="398.50"></text></g><g><title>0x7f8a2156493b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="291" y="388" width="2" height="15" fill="rgb(227,123,31)"/><text x="294.00" y="398.50"></text></g><g><title>0x7f8a21564961 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="293" y="388" width="2" height="15" fill="rgb(214,221,23)"/><text x="296.00" y="398.50"></text></g><g><title>0x7f8a2156496a (libc-2.29.so) (2 samples, 0.27%)</title><rect x="295" y="388" width="3" height="15" fill="rgb(240,213,47)"/><text x="298.00" y="398.50"></text></g><g><title>0x7f8a2156497c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="298" y="388" width="1" height="15" fill="rgb(215,57,18)"/><text x="301.00" y="398.50"></text></g><g><title>0x7f8a21564998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="299" y="388" width="2" height="15" fill="rgb(229,91,43)"/><text x="302.00" y="398.50"></text></g><g><title>0x7f8a21564a41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="301" y="388" width="2" height="15" fill="rgb(226,113,40)"/><text x="304.00" y="398.50"></text></g><g><title>0x7f8a21584d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="303" y="388" width="1" height="15" fill="rgb(208,228,25)"/><text x="306.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.54%)</title><rect x="304" y="388" width="6" height="15" fill="rgb(244,77,10)"/><text x="307.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (80 samples, 10.80%)</title><rect x="191" y="356" width="127" height="15" fill="rgb(247,136,23)"/><text x="194.00" y="366.50">onnxruntime::ml..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.64%)</title><rect x="275" y="372" width="43" height="15" fill="rgb(209,123,42)"/><text x="278.00" y="382.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.67%)</title><rect x="310" y="388" width="8" height="15" fill="rgb(231,222,42)"/><text x="313.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.40%)</title><rect x="314" y="404" width="4" height="15" fill="rgb(253,116,8)"/><text x="317.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="318" y="356" width="2" height="15" fill="rgb(206,58,48)"/><text x="321.00" y="366.50"></text></g><g><title>0x7f8a21584dbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="318" y="372" width="2" height="15" fill="rgb(222,120,27)"/><text x="321.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(222,155,16)"/><text x="323.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="322" y="356" width="3" height="15" fill="rgb(219,218,19)"/><text x="325.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="322" y="372" width="3" height="15" fill="rgb(212,185,28)"/><text x="325.00" y="382.50"></text></g><g><title>0x7f8a21564906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="344" y="372" width="2" height="15" fill="rgb(246,199,14)"/><text x="347.00" y="382.50"></text></g><g><title>0x7f8a21564917 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="346" y="372" width="4" height="15" fill="rgb(206,215,22)"/><text x="349.00" y="382.50"></text></g><g><title>0x7f8a21564929 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="350" y="372" width="2" height="15" fill="rgb(213,127,28)"/><text x="353.00" y="382.50"></text></g><g><title>0x7f8a2156497e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="352" y="372" width="1" height="15" fill="rgb(207,150,2)"/><text x="355.00" y="382.50"></text></g><g><title>0x7f8a21564991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="353" y="372" width="2" height="15" fill="rgb(224,123,8)"/><text x="356.00" y="382.50"></text></g><g><title>0x7f8a21564be0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="355" y="372" width="2" height="15" fill="rgb(211,84,18)"/><text x="358.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.54%)</title><rect x="357" y="372" width="6" height="15" fill="rgb(220,110,27)"/><text x="360.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 4.05%)</title><rect x="325" y="356" width="48" height="15" fill="rgb(244,107,8)"/><text x="328.00" y="366.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.81%)</title><rect x="363" y="372" width="10" height="15" fill="rgb(217,209,34)"/><text x="366.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.54%)</title><rect x="366" y="388" width="7" height="15" fill="rgb(249,79,51)"/><text x="369.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (196 samples, 26.45%)</title><rect x="64" y="340" width="312" height="15" fill="rgb(213,37,20)"/><text x="67.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Com..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="373" y="356" width="3" height="15" fill="rgb(247,209,21)"/><text x="376.00" y="366.50"></text></g><g><title>0x7f89e159b930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="373" y="372" width="3" height="15" fill="rgb(225,2,39)"/><text x="376.00" y="382.50"></text></g><g><title>0x7f8a21565b24 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="395" y="388" width="1" height="15" fill="rgb(217,58,28)"/><text x="398.00" y="398.50"></text></g><g><title>0x7f8a21565b76 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="396" y="388" width="4" height="15" fill="rgb(205,160,0)"/><text x="399.00" y="398.50"></text></g><g><title>0x7f8a21565fe6 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="400" y="388" width="4" height="15" fill="rgb(229,170,14)"/><text x="403.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (16 samples, 2.16%)</title><rect x="382" y="356" width="26" height="15" fill="rgb(250,31,20)"/><text x="385.00" y="366.50">o..</text></g><g><title>malloc (libc-2.29.so) (15 samples, 2.02%)</title><rect x="384" y="372" width="24" height="15" fill="rgb(245,160,47)"/><text x="387.00" y="382.50">m..</text></g><g><title>0x7f8a215660a3 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="404" y="388" width="4" height="15" fill="rgb(240,38,20)"/><text x="407.00" y="398.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="408" y="356" width="3" height="15" fill="rgb(244,221,24)"/><text x="411.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (220 samples, 29.69%)</title><rect x="62" y="260" width="350" height="15" fill="rgb(234,124,51)"/><text x="65.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (220 samples, 29.69%)</title><rect x="62" y="276" width="350" height="15" fill="rgb(224,62,28)"/><text x="65.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (220 samples, 29.69%)</title><rect x="62" y="292" width="350" height="15" fill="rgb(241,64,15)"/><text x="65.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (220 samples, 29.69%)</title><rect x="62" y="308" width="350" height="15" fill="rgb(206,183,35)"/><text x="65.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (220 samples, 29.69%)</title><rect x="62" y="324" width="350" height="15" fill="rgb(229,182,32)"/><text x="65.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxr..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.10%)</title><rect x="376" y="340" width="36" height="15" fill="rgb(227,174,23)"/><text x="379.00" y="350.50">onn..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="411" y="356" width="1" height="15" fill="rgb(210,224,52)"/><text x="414.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="412" y="260" width="2" height="15" fill="rgb(226,148,37)"/><text x="415.00" y="270.50"></text></g><g><title>0x7f89e159c570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="446" y="276" width="1" height="15" fill="rgb(239,225,6)"/><text x="449.00" y="286.50"></text></g><g><title>0x7f89e159c5c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="276" width="2" height="15" fill="rgb(220,93,33)"/><text x="450.00" y="286.50"></text></g><g><title>0x7f89e159c870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="449" y="276" width="2" height="15" fill="rgb(238,183,17)"/><text x="452.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.81%)</title><rect x="451" y="276" width="9" height="15" fill="rgb(205,65,48)"/><text x="454.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 4.18%)</title><rect x="414" y="260" width="49" height="15" fill="rgb(208,150,14)"/><text x="417.00" y="270.50">pybi..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="460" y="276" width="3" height="15" fill="rgb(245,138,16)"/><text x="463.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="463" y="276" width="2" height="15" fill="rgb(235,36,49)"/><text x="466.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="463" y="292" width="2" height="15" fill="rgb(232,132,53)"/><text x="466.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="463" y="308" width="2" height="15" fill="rgb(205,9,16)"/><text x="466.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="463" y="324" width="2" height="15" fill="rgb(231,111,1)"/><text x="466.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="463" y="340" width="2" height="15" fill="rgb(229,68,50)"/><text x="466.00" y="350.50"></text></g><g><title>0x7f8a21564d07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="465" y="292" width="2" height="15" fill="rgb(222,108,20)"/><text x="468.00" y="302.50"></text></g><g><title>0x7f8a21564d07 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="467" y="308" width="4" height="15" fill="rgb(236,79,27)"/><text x="470.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="471" y="308" width="2" height="15" fill="rgb(236,91,9)"/><text x="474.00" y="318.50"></text></g><g><title>profile_ort (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (279 samples, 37.65%)</title><rect x="30" y="68" width="444" height="15" fill="rgb(237,81,2)"/><text x="33.00" y="78.50">profile_ort (bench_SVC_linear_m_cl_probabilityTrue_kernellin..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (279 samples, 37.65%)</title><rect x="30" y="84" width="444" height="15" fill="rgb(221,149,38)"/><text x="33.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernell..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (279 samples, 37.65%)</title><rect x="30" y="100" width="444" height="15" fill="rgb(249,222,1)"/><text x="33.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (262 samples, 35.36%)</title><rect x="57" y="116" width="417" height="15" fill="rgb(219,160,36)"/><text x="60.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (262 samples, 35.36%)</title><rect x="57" y="132" width="417" height="15" fill="rgb(248,153,43)"/><text x="60.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (262 samples, 35.36%)</title><rect x="57" y="148" width="417" height="15" fill="rgb(233,71,30)"/><text x="60.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (262 samples, 35.36%)</title><rect x="57" y="164" width="417" height="15" fill="rgb(208,106,35)"/><text x="60.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (262 samples, 35.36%)</title><rect x="57" y="180" width="417" height="15" fill="rgb(209,39,3)"/><text x="60.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (261 samples, 35.22%)</title><rect x="59" y="196" width="415" height="15" fill="rgb(241,178,15)"/><text x="62.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (259 samples, 34.95%)</title><rect x="62" y="212" width="412" height="15" fill="rgb(211,59,36)"/><text x="65.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onn..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (259 samples, 34.95%)</title><rect x="62" y="228" width="412" height="15" fill="rgb(247,151,11)"/><text x="65.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (259 samples, 34.95%)</title><rect x="62" y="244" width="412" height="15" fill="rgb(215,170,44)"/><text x="65.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.94%)</title><rect x="463" y="260" width="11" height="15" fill="rgb(245,188,41)"/><text x="466.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.81%)</title><rect x="465" y="276" width="9" height="15" fill="rgb(247,135,1)"/><text x="468.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.67%)</title><rect x="467" y="292" width="7" height="15" fill="rgb(244,28,12)"/><text x="470.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="473" y="308" width="1" height="15" fill="rgb(209,71,28)"/><text x="476.00" y="318.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="476" y="180" width="2" height="15" fill="rgb(242,40,49)"/><text x="479.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.13%)</title><rect x="476" y="196" width="2" height="15" fill="rgb(221,55,52)"/><text x="479.00" y="206.50"></text></g><g><title>0x7f89e26d3c29 (?) (1 samples, 0.13%)</title><rect x="481" y="244" width="1" height="15" fill="rgb(222,150,39)"/><text x="484.00" y="254.50"></text></g><g><title>0x7f89e26dad9e (?) (1 samples, 0.13%)</title><rect x="481" y="260" width="1" height="15" fill="rgb(237,52,7)"/><text x="484.00" y="270.50"></text></g><g><title>0x7f89e26dac56 (?) (1 samples, 0.13%)</title><rect x="481" y="276" width="1" height="15" fill="rgb(212,88,49)"/><text x="484.00" y="286.50"></text></g><g><title>0x7f89e26e0ac7 (?) (1 samples, 0.13%)</title><rect x="481" y="292" width="1" height="15" fill="rgb(248,190,44)"/><text x="484.00" y="302.50"></text></g><g><title>0x7f89e26e05a2 (?) (1 samples, 0.13%)</title><rect x="481" y="308" width="1" height="15" fill="rgb(245,115,53)"/><text x="484.00" y="318.50"></text></g><g><title>0x7f89e26d7c09 (?) (1 samples, 0.13%)</title><rect x="481" y="324" width="1" height="15" fill="rgb(238,129,24)"/><text x="484.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="481" y="340" width="1" height="15" fill="rgb(250,56,20)"/><text x="484.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="481" y="356" width="1" height="15" fill="rgb(212,42,16)"/><text x="484.00" y="366.50"></text></g><g><title>0x7f89e26c32a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="524" y="468" width="1" height="15" fill="rgb(216,40,25)"/><text x="527.00" y="478.50"></text></g><g><title>0x7f89e26c3440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="525" y="468" width="2" height="15" fill="rgb(227,23,54)"/><text x="528.00" y="478.50"></text></g><g><title>0x7f8a21564a53 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="527" y="468" width="2" height="15" fill="rgb(249,109,22)"/><text x="530.00" y="478.50"></text></g><g><title>0x7f8a21564bd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="529" y="468" width="1" height="15" fill="rgb(211,47,7)"/><text x="532.00" y="478.50"></text></g><g><title>0x7f89e26c2e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="541" y="484" width="5" height="15" fill="rgb(230,44,10)"/><text x="544.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (51 samples, 6.88%)</title><rect x="546" y="484" width="81" height="15" fill="rgb(247,115,47)"/><text x="549.00" y="494.50">vector_do..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (65 samples, 8.77%)</title><rect x="530" y="468" width="104" height="15" fill="rgb(209,45,44)"/><text x="533.00" y="478.50">RuntimeSVMCl..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (4 samples, 0.54%)</title><rect x="627" y="484" width="7" height="15" fill="rgb(243,106,12)"/><text x="630.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="634" y="468" width="1" height="15" fill="rgb(209,11,29)"/><text x="637.00" y="478.50"></text></g><g><title>0x7f8a216e3e0e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="640" y="500" width="2" height="15" fill="rgb(246,132,30)"/><text x="643.00" y="510.50"></text></g><g><title>0x7f8a216e3e14 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="642" y="500" width="1" height="15" fill="rgb(207,179,37)"/><text x="645.00" y="510.50"></text></g><g><title>0x7f8a216e3e71 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="643" y="500" width="2" height="15" fill="rgb(207,2,15)"/><text x="646.00" y="510.50"></text></g><g><title>0x7f8a216e3e7e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="645" y="500" width="1" height="15" fill="rgb(246,144,14)"/><text x="648.00" y="510.50"></text></g><g><title>0x7f8a216e3e9e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="646" y="500" width="2" height="15" fill="rgb(240,82,8)"/><text x="649.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (9 samples, 1.21%)</title><rect x="635" y="468" width="15" height="15" fill="rgb(249,211,26)"/><text x="638.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (8 samples, 1.08%)</title><rect x="637" y="484" width="13" height="15" fill="rgb(223,197,7)"/><text x="640.00" y="494.50"></text></g><g><title>0x7f8a216e3ea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="648" y="500" width="2" height="15" fill="rgb(232,27,40)"/><text x="651.00" y="510.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h) (2 samples, 0.27%)</title><rect x="650" y="468" width="3" height="15" fill="rgb(248,178,41)"/><text x="653.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h) (2 samples, 0.27%)</title><rect x="650" y="484" width="3" height="15" fill="rgb(212,146,37)"/><text x="653.00" y="494.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::operator++ (stl_iterator.h) (1 samples, 0.13%)</title><rect x="651" y="500" width="2" height="15" fill="rgb(251,73,36)"/><text x="654.00" y="510.50"></text></g><g><title>0x7f8a110317a0 (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="654" y="484" width="4" height="15" fill="rgb(225,181,42)"/><text x="657.00" y="494.50"></text></g><g><title>0x7f8a2156490e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="658" y="484" width="1" height="15" fill="rgb(234,1,36)"/><text x="661.00" y="494.50"></text></g><g><title>0x7f8a2156493b (libc-2.29.so) (2 samples, 0.27%)</title><rect x="659" y="484" width="3" height="15" fill="rgb(228,15,14)"/><text x="662.00" y="494.50"></text></g><g><title>0x7f8a2156497c (libc-2.29.so) (3 samples, 0.40%)</title><rect x="662" y="484" width="5" height="15" fill="rgb(233,24,32)"/><text x="665.00" y="494.50"></text></g><g><title>0x7f8a21564991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="667" y="484" width="2" height="15" fill="rgb(206,33,40)"/><text x="670.00" y="494.50"></text></g><g><title>0x7f8a21564a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="669" y="484" width="1" height="15" fill="rgb(252,210,39)"/><text x="672.00" y="494.50"></text></g><g><title>0x7f8a21564a4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="670" y="484" width="2" height="15" fill="rgb(216,56,0)"/><text x="673.00" y="494.50"></text></g><g><title>0x7f8a21564bd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="672" y="484" width="2" height="15" fill="rgb(234,196,21)"/><text x="675.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="674" y="484" width="1" height="15" fill="rgb(245,43,33)"/><text x="677.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (7 samples, 0.94%)</title><rect x="675" y="484" width="11" height="15" fill="rgb(222,187,5)"/><text x="678.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (7 samples, 0.94%)</title><rect x="675" y="500" width="11" height="15" fill="rgb(249,228,26)"/><text x="678.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (7 samples, 0.94%)</title><rect x="675" y="516" width="11" height="15" fill="rgb(207,35,47)"/><text x="678.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.94%)</title><rect x="675" y="532" width="11" height="15" fill="rgb(207,0,11)"/><text x="678.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.81%)</title><rect x="677" y="548" width="9" height="15" fill="rgb(252,14,52)"/><text x="680.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (22 samples, 2.97%)</title><rect x="653" y="468" width="35" height="15" fill="rgb(220,199,30)"/><text x="656.00" y="478.50">st..</text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="686" y="484" width="2" height="15" fill="rgb(233,187,7)"/><text x="689.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="686" y="500" width="2" height="15" fill="rgb(240,67,36)"/><text x="689.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="686" y="516" width="2" height="15" fill="rgb(250,63,0)"/><text x="689.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="686" y="532" width="2" height="15" fill="rgb(233,27,21)"/><text x="689.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="686" y="548" width="2" height="15" fill="rgb(247,131,26)"/><text x="689.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="686" y="564" width="2" height="15" fill="rgb(254,23,30)"/><text x="689.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="686" y="580" width="2" height="15" fill="rgb(247,220,14)"/><text x="689.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="686" y="596" width="2" height="15" fill="rgb(215,155,40)"/><text x="689.00" y="606.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h) (1 samples, 0.13%)</title><rect x="691" y="484" width="2" height="15" fill="rgb(226,105,7)"/><text x="694.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h) (1 samples, 0.13%)</title><rect x="691" y="500" width="2" height="15" fill="rgb(218,81,20)"/><text x="694.00" y="510.50"></text></g><g><title>0x7f8a21564a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="694" y="516" width="2" height="15" fill="rgb(240,93,13)"/><text x="697.00" y="526.50"></text></g><g><title>0x7f8a21564a4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="696" y="516" width="1" height="15" fill="rgb(233,209,24)"/><text x="699.00" y="526.50"></text></g><g><title>0x7f8a21584dae (libc-2.29.so) (1 samples, 0.13%)</title><rect x="697" y="516" width="2" height="15" fill="rgb(230,179,42)"/><text x="700.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (10 samples, 1.35%)</title><rect x="688" y="468" width="16" height="15" fill="rgb(231,44,39)"/><text x="691.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (7 samples, 0.94%)</title><rect x="693" y="484" width="11" height="15" fill="rgb(236,138,46)"/><text x="696.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (6 samples, 0.81%)</title><rect x="694" y="500" width="10" height="15" fill="rgb(245,110,48)"/><text x="697.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (3 samples, 0.40%)</title><rect x="699" y="516" width="5" height="15" fill="rgb(233,45,53)"/><text x="702.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (3 samples, 0.40%)</title><rect x="699" y="532" width="5" height="15" fill="rgb(230,50,30)"/><text x="702.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (3 samples, 0.40%)</title><rect x="699" y="548" width="5" height="15" fill="rgb(217,199,24)"/><text x="702.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="699" y="564" width="5" height="15" fill="rgb(218,188,2)"/><text x="702.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.40%)</title><rect x="699" y="580" width="5" height="15" fill="rgb(253,186,1)"/><text x="702.00" y="590.50"></text></g><g><title>0x7f89e26c3810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="758" y="500" width="2" height="15" fill="rgb(231,29,13)"/><text x="761.00" y="510.50"></text></g><g><title>std::fabs (cmath) (2 samples, 0.27%)</title><rect x="760" y="500" width="3" height="15" fill="rgb(239,129,41)"/><text x="763.00" y="510.50"></text></g><g><title>0x7f8a2156490e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="769" y="516" width="2" height="15" fill="rgb(220,99,54)"/><text x="772.00" y="526.50"></text></g><g><title>0x7f8a2156496a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="771" y="516" width="1" height="15" fill="rgb(221,196,12)"/><text x="774.00" y="526.50"></text></g><g><title>0x7f8a2156497c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="772" y="516" width="2" height="15" fill="rgb(241,85,44)"/><text x="775.00" y="526.50"></text></g><g><title>0x7f8a21564991 (libc-2.29.so) (4 samples, 0.54%)</title><rect x="774" y="516" width="6" height="15" fill="rgb(248,56,43)"/><text x="777.00" y="526.50"></text></g><g><title>0x7f8a21564a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="780" y="516" width="2" height="15" fill="rgb(207,201,30)"/><text x="783.00" y="526.50"></text></g><g><title>0x7f8a21564be8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="782" y="516" width="1" height="15" fill="rgb(215,15,29)"/><text x="785.00" y="526.50"></text></g><g><title>0x7f8a21584d50 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="783" y="516" width="4" height="15" fill="rgb(225,152,21)"/><text x="786.00" y="526.50"></text></g><g><title>0x7f8a21584d6f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="787" y="516" width="1" height="15" fill="rgb(239,26,48)"/><text x="790.00" y="526.50"></text></g><g><title>0x7f8a21584dbb (libc-2.29.so) (2 samples, 0.27%)</title><rect x="788" y="516" width="3" height="15" fill="rgb(208,50,53)"/><text x="791.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (6 samples, 0.81%)</title><rect x="791" y="516" width="10" height="15" fill="rgb(232,44,18)"/><text x="794.00" y="526.50"></text></g><g><title>0x7f8a11030d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="807" y="580" width="2" height="15" fill="rgb(215,6,9)"/><text x="810.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (10 samples, 1.35%)</title><rect x="801" y="516" width="16" height="15" fill="rgb(214,4,54)"/><text x="804.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (8 samples, 1.08%)</title><rect x="804" y="532" width="13" height="15" fill="rgb(240,117,16)"/><text x="807.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (8 samples, 1.08%)</title><rect x="804" y="548" width="13" height="15" fill="rgb(221,24,44)"/><text x="807.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.08%)</title><rect x="804" y="564" width="13" height="15" fill="rgb(242,199,5)"/><text x="807.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.67%)</title><rect x="809" y="580" width="8" height="15" fill="rgb(234,197,42)"/><text x="812.00" y="590.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="817" y="516" width="3" height="15" fill="rgb(246,155,6)"/><text x="820.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="817" y="532" width="3" height="15" fill="rgb(244,10,54)"/><text x="820.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="817" y="548" width="3" height="15" fill="rgb(234,120,49)"/><text x="820.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="817" y="564" width="3" height="15" fill="rgb(221,83,20)"/><text x="820.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="817" y="580" width="3" height="15" fill="rgb(246,24,0)"/><text x="820.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="817" y="596" width="3" height="15" fill="rgb(253,211,43)"/><text x="820.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="817" y="612" width="3" height="15" fill="rgb(246,191,7)"/><text x="820.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="817" y="628" width="3" height="15" fill="rgb(233,201,9)"/><text x="820.00" y="638.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h) (1 samples, 0.13%)</title><rect x="820" y="516" width="2" height="15" fill="rgb(224,84,41)"/><text x="823.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h) (1 samples, 0.13%)</title><rect x="820" y="532" width="2" height="15" fill="rgb(224,159,7)"/><text x="823.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (40 samples, 5.40%)</title><rect x="763" y="500" width="63" height="15" fill="rgb(207,41,34)"/><text x="766.00" y="510.50">std::v..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h) (3 samples, 0.40%)</title><rect x="822" y="516" width="4" height="15" fill="rgb(222,226,3)"/><text x="825.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.27%)</title><rect x="823" y="532" width="3" height="15" fill="rgb(250,213,3)"/><text x="826.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (3 samples, 0.40%)</title><rect x="826" y="500" width="5" height="15" fill="rgb(235,57,19)"/><text x="829.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (3 samples, 0.40%)</title><rect x="826" y="516" width="5" height="15" fill="rgb(244,56,18)"/><text x="829.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h) (1 samples, 0.13%)</title><rect x="830" y="532" width="1" height="15" fill="rgb(247,120,47)"/><text x="833.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h) (1 samples, 0.13%)</title><rect x="830" y="548" width="1" height="15" fill="rgb(236,163,17)"/><text x="833.00" y="558.50"></text></g><g><title>0x7f8a21564906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="831" y="516" width="2" height="15" fill="rgb(214,84,23)"/><text x="834.00" y="526.50"></text></g><g><title>0x7f8a21564bd4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="833" y="516" width="1" height="15" fill="rgb(226,12,40)"/><text x="836.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="834" y="516" width="4" height="15" fill="rgb(218,117,42)"/><text x="837.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (85 samples, 11.47%)</title><rect x="704" y="484" width="135" height="15" fill="rgb(249,104,52)"/><text x="707.00" y="494.50">multiclass_probab..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (5 samples, 0.67%)</title><rect x="831" y="500" width="8" height="15" fill="rgb(227,183,45)"/><text x="834.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="838" y="516" width="1" height="15" fill="rgb(250,183,44)"/><text x="841.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (87 samples, 11.74%)</title><rect x="704" y="468" width="138" height="15" fill="rgb(218,180,42)"/><text x="707.00" y="478.50">std::vector&lt;float..</text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (2 samples, 0.27%)</title><rect x="839" y="484" width="3" height="15" fill="rgb(246,64,23)"/><text x="842.00" y="494.50"></text></g><g><title>0x7f89e26c31b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="841" y="500" width="1" height="15" fill="rgb(223,127,4)"/><text x="844.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="842" y="516" width="5" height="15" fill="rgb(225,114,20)"/><text x="845.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="844" y="532" width="3" height="15" fill="rgb(238,35,3)"/><text x="847.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (5 samples, 0.67%)</title><rect x="842" y="500" width="8" height="15" fill="rgb(221,150,53)"/><text x="845.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.27%)</title><rect x="847" y="516" width="3" height="15" fill="rgb(225,64,51)"/><text x="850.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.13%)</title><rect x="849" y="532" width="1" height="15" fill="rgb(245,16,50)"/><text x="852.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.13%)</title><rect x="849" y="548" width="1" height="15" fill="rgb(243,89,11)"/><text x="852.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (6 samples, 0.81%)</title><rect x="842" y="468" width="10" height="15" fill="rgb(234,53,11)"/><text x="845.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (6 samples, 0.81%)</title><rect x="842" y="484" width="10" height="15" fill="rgb(238,97,25)"/><text x="845.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h) (1 samples, 0.13%)</title><rect x="850" y="500" width="2" height="15" fill="rgb(218,163,17)"/><text x="853.00" y="510.50"></text></g><g><title>0x7f8a21564906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="852" y="484" width="1" height="15" fill="rgb(233,42,14)"/><text x="855.00" y="494.50"></text></g><g><title>0x7f8a21564929 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="853" y="484" width="2" height="15" fill="rgb(215,34,28)"/><text x="856.00" y="494.50"></text></g><g><title>0x7f8a21564957 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="855" y="484" width="2" height="15" fill="rgb(253,125,14)"/><text x="858.00" y="494.50"></text></g><g><title>0x7f8a21564a38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="857" y="484" width="1" height="15" fill="rgb(221,116,6)"/><text x="860.00" y="494.50"></text></g><g><title>0x7f8a21564be4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="858" y="484" width="2" height="15" fill="rgb(216,172,51)"/><text x="861.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="860" y="484" width="1" height="15" fill="rgb(249,182,44)"/><text x="863.00" y="494.50"></text></g><g><title>0x7f8a21564906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="863" y="548" width="2" height="15" fill="rgb(207,112,45)"/><text x="866.00" y="558.50"></text></g><g><title>0x7f8a21564bd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="865" y="548" width="1" height="15" fill="rgb(221,112,1)"/><text x="868.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (10 samples, 1.35%)</title><rect x="852" y="468" width="16" height="15" fill="rgb(223,50,45)"/><text x="855.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h) (4 samples, 0.54%)</title><rect x="861" y="484" width="7" height="15" fill="rgb(205,153,7)"/><text x="864.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (4 samples, 0.54%)</title><rect x="861" y="500" width="7" height="15" fill="rgb(217,199,18)"/><text x="864.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (4 samples, 0.54%)</title><rect x="861" y="516" width="7" height="15" fill="rgb(211,108,48)"/><text x="864.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (4 samples, 0.54%)</title><rect x="861" y="532" width="7" height="15" fill="rgb(224,30,30)"/><text x="864.00" y="542.50"></text></g><g><title>0x7f8a21564be4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="866" y="548" width="2" height="15" fill="rgb(225,217,2)"/><text x="869.00" y="558.50"></text></g><g><title>std::__uninitialized_fill_n_a&lt;long*, unsigned long, long, long&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="874" y="516" width="2" height="15" fill="rgb(213,175,1)"/><text x="877.00" y="526.50"></text></g><g><title>std::uninitialized_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="874" y="532" width="2" height="15" fill="rgb(238,32,2)"/><text x="877.00" y="542.50"></text></g><g><title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="874" y="548" width="2" height="15" fill="rgb(218,16,47)"/><text x="877.00" y="558.50"></text></g><g><title>std::fill_n&lt;long*, unsigned long, long&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="874" y="564" width="2" height="15" fill="rgb(226,124,1)"/><text x="877.00" y="574.50"></text></g><g><title>std::__fill_n_a&lt;long*, unsigned long, long&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="874" y="580" width="2" height="15" fill="rgb(210,40,48)"/><text x="877.00" y="590.50"></text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (253 samples, 34.14%)</title><rect x="474" y="100" width="403" height="15" fill="rgb(217,90,52)"/><text x="477.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilityTrue_kernell..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (253 samples, 34.14%)</title><rect x="474" y="116" width="403" height="15" fill="rgb(230,159,45)"/><text x="477.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (253 samples, 34.14%)</title><rect x="474" y="132" width="403" height="15" fill="rgb(235,1,54)"/><text x="477.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (252 samples, 34.01%)</title><rect x="476" y="148" width="401" height="15" fill="rgb(224,28,9)"/><text x="479.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (252 samples, 34.01%)</title><rect x="476" y="164" width="401" height="15" fill="rgb(226,51,9)"/><text x="479.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (251 samples, 33.87%)</title><rect x="478" y="180" width="399" height="15" fill="rgb(250,133,22)"/><text x="481.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (249 samples, 33.60%)</title><rect x="481" y="196" width="396" height="15" fill="rgb(213,162,44)"/><text x="484.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (249 samples, 33.60%)</title><rect x="481" y="212" width="396" height="15" fill="rgb(241,210,3)"/><text x="484.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (249 samples, 33.60%)</title><rect x="481" y="228" width="396" height="15" fill="rgb(224,130,50)"/><text x="484.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (248 samples, 33.47%)</title><rect x="482" y="244" width="395" height="15" fill="rgb(236,85,19)"/><text x="485.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (248 samples, 33.47%)</title><rect x="482" y="260" width="395" height="15" fill="rgb(209,4,31)"/><text x="485.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (248 samples, 33.47%)</title><rect x="482" y="276" width="395" height="15" fill="rgb(227,142,54)"/><text x="485.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (248 samples, 33.47%)</title><rect x="482" y="292" width="395" height="15" fill="rgb(242,207,19)"/><text x="485.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifie..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (248 samples, 33.47%)</title><rect x="482" y="308" width="395" height="15" fill="rgb(210,160,3)"/><text x="485.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifie..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (248 samples, 33.47%)</title><rect x="482" y="324" width="395" height="15" fill="rgb(232,130,48)"/><text x="485.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tuple,..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (248 samples, 33.47%)</title><rect x="482" y="340" width="395" height="15" fill="rgb(235,210,7)"/><text x="485.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (248 samples, 33.47%)</title><rect x="482" y="356" width="395" height="15" fill="rgb(205,12,44)"/><text x="485.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (248 samples, 33.47%)</title><rect x="482" y="372" width="395" height="15" fill="rgb(221,36,35)"/><text x="485.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (248 samples, 33.47%)</title><rect x="482" y="388" width="395" height="15" fill="rgb(238,57,1)"/><text x="485.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (248 samples, 33.47%)</title><rect x="482" y="404" width="395" height="15" fill="rgb(208,169,34)"/><text x="485.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (248 samples, 33.47%)</title><rect x="482" y="420" width="395" height="15" fill="rgb(246,187,1)"/><text x="485.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (248 samples, 33.47%)</title><rect x="482" y="436" width="395" height="15" fill="rgb(213,115,33)"/><text x="485.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (248 samples, 33.47%)</title><rect x="482" y="452" width="395" height="15" fill="rgb(214,109,12)"/><text x="485.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprod..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (6 samples, 0.81%)</title><rect x="868" y="468" width="9" height="15" fill="rgb(227,90,45)"/><text x="871.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (5 samples, 0.67%)</title><rect x="869" y="484" width="8" height="15" fill="rgb(216,145,9)"/><text x="872.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (4 samples, 0.54%)</title><rect x="871" y="500" width="6" height="15" fill="rgb(209,147,24)"/><text x="874.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_check_len (stl_vector.h) (1 samples, 0.13%)</title><rect x="876" y="516" width="1" height="15" fill="rgb(248,78,54)"/><text x="879.00" y="526.50"></text></g><g><title>profile_pyrt (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (254 samples, 34.28%)</title><rect x="474" y="68" width="405" height="15" fill="rgb(238,181,39)"/><text x="477.00" y="78.50">profile_pyrt (bench_SVC_linear_m_cl_probabilityTrue_ker..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (254 samples, 34.28%)</title><rect x="474" y="84" width="405" height="15" fill="rgb(246,69,11)"/><text x="477.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_probabilityTrue_ke..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="877" y="100" width="2" height="15" fill="rgb(222,106,10)"/><text x="880.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="877" y="116" width="2" height="15" fill="rgb(254,120,2)"/><text x="880.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="877" y="132" width="2" height="15" fill="rgb(231,194,6)"/><text x="880.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="877" y="148" width="2" height="15" fill="rgb(238,111,30)"/><text x="880.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="877" y="164" width="2" height="15" fill="rgb(235,48,3)"/><text x="880.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.13%)</title><rect x="877" y="180" width="2" height="15" fill="rgb(249,47,11)"/><text x="880.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.13%)</title><rect x="877" y="196" width="2" height="15" fill="rgb(229,99,26)"/><text x="880.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="212" width="2" height="15" fill="rgb(229,223,31)"/><text x="880.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="228" width="2" height="15" fill="rgb(233,144,51)"/><text x="880.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="244" width="2" height="15" fill="rgb(223,76,52)"/><text x="880.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="877" y="260" width="2" height="15" fill="rgb(228,62,39)"/><text x="880.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="276" width="2" height="15" fill="rgb(229,33,28)"/><text x="880.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.13%)</title><rect x="877" y="292" width="2" height="15" fill="rgb(237,165,46)"/><text x="880.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="308" width="2" height="15" fill="rgb(238,21,13)"/><text x="880.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="324" width="2" height="15" fill="rgb(232,196,9)"/><text x="880.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="340" width="2" height="15" fill="rgb(205,168,40)"/><text x="880.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="877" y="356" width="2" height="15" fill="rgb(231,194,49)"/><text x="880.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="372" width="2" height="15" fill="rgb(239,216,43)"/><text x="880.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.13%)</title><rect x="877" y="388" width="2" height="15" fill="rgb(250,48,26)"/><text x="880.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="404" width="2" height="15" fill="rgb(249,39,9)"/><text x="880.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="420" width="2" height="15" fill="rgb(211,97,53)"/><text x="880.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="436" width="2" height="15" fill="rgb(243,56,22)"/><text x="880.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="877" y="452" width="2" height="15" fill="rgb(210,222,37)"/><text x="880.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="877" y="468" width="2" height="15" fill="rgb(233,24,7)"/><text x="880.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.13%)</title><rect x="877" y="484" width="2" height="15" fill="rgb(221,147,5)"/><text x="880.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.13%)</title><rect x="877" y="500" width="2" height="15" fill="rgb(207,88,29)"/><text x="880.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="877" y="516" width="2" height="15" fill="rgb(223,99,34)"/><text x="880.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="877" y="532" width="2" height="15" fill="rgb(249,24,24)"/><text x="880.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="877" y="548" width="2" height="15" fill="rgb(229,84,30)"/><text x="880.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="877" y="564" width="2" height="15" fill="rgb(235,128,33)"/><text x="880.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="580" width="2" height="15" fill="rgb(238,106,3)"/><text x="880.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="596" width="2" height="15" fill="rgb(254,184,18)"/><text x="880.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="612" width="2" height="15" fill="rgb(246,89,38)"/><text x="880.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="628" width="2" height="15" fill="rgb(249,49,45)"/><text x="880.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="644" width="2" height="15" fill="rgb(213,190,26)"/><text x="880.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="660" width="2" height="15" fill="rgb(234,98,46)"/><text x="880.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="676" width="2" height="15" fill="rgb(213,175,33)"/><text x="880.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="692" width="2" height="15" fill="rgb(233,99,13)"/><text x="880.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="708" width="2" height="15" fill="rgb(250,162,11)"/><text x="880.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="724" width="2" height="15" fill="rgb(219,103,28)"/><text x="880.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="740" width="2" height="15" fill="rgb(252,222,14)"/><text x="880.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="756" width="2" height="15" fill="rgb(208,13,12)"/><text x="880.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="772" width="2" height="15" fill="rgb(248,38,39)"/><text x="880.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.13%)</title><rect x="877" y="788" width="2" height="15" fill="rgb(224,40,25)"/><text x="880.00" y="798.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.13%)</title><rect x="877" y="804" width="2" height="15" fill="rgb(238,9,34)"/><text x="880.00" y="814.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.13%)</title><rect x="877" y="820" width="2" height="15" fill="rgb(232,146,36)"/><text x="880.00" y="830.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.13%)</title><rect x="877" y="836" width="2" height="15" fill="rgb(248,83,25)"/><text x="880.00" y="846.50"></text></g><g><title>0x7f89fc052d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="879" y="196" width="2" height="15" fill="rgb(208,137,1)"/><text x="882.00" y="206.50"></text></g><g><title>0x7f89fc03ce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="879" y="212" width="2" height="15" fill="rgb(241,195,47)"/><text x="882.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.13%)</title><rect x="879" y="228" width="2" height="15" fill="rgb(248,34,39)"/><text x="882.00" y="238.50"></text></g><g><title>0x7f89fc052e66 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="881" y="196" width="1" height="15" fill="rgb(224,215,1)"/><text x="884.00" y="206.50"></text></g><g><title>0x7f89fc03cf13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="881" y="212" width="1" height="15" fill="rgb(206,89,13)"/><text x="884.00" y="222.50"></text></g><g><title>0x7f89fc03c359 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="881" y="228" width="1" height="15" fill="rgb(210,192,19)"/><text x="884.00" y="238.50"></text></g><g><title>0x7f89fc052f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="882" y="196" width="2" height="15" fill="rgb(205,205,33)"/><text x="885.00" y="206.50"></text></g><g><title>0x7f89fc03ce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="882" y="212" width="2" height="15" fill="rgb(210,5,30)"/><text x="885.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.13%)</title><rect x="882" y="228" width="2" height="15" fill="rgb(209,143,24)"/><text x="885.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.13%)</title><rect x="882" y="244" width="2" height="15" fill="rgb(208,223,22)"/><text x="885.00" y="254.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.13%)</title><rect x="882" y="260" width="2" height="15" fill="rgb(231,153,22)"/><text x="885.00" y="270.50"></text></g><g><title>0x7f8a2156492c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="882" y="276" width="2" height="15" fill="rgb(243,221,20)"/><text x="885.00" y="286.50"></text></g><g><title>0x7f8a21564906 (libc-2.29.so) (3 samples, 0.40%)</title><rect x="997" y="244" width="5" height="15" fill="rgb(240,223,15)"/><text x="1000.00" y="254.50"></text></g><g><title>0x7f8a2156491e (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1002" y="244" width="3" height="15" fill="rgb(229,9,15)"/><text x="1005.00" y="254.50"></text></g><g><title>0x7f8a21564982 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1005" y="244" width="1" height="15" fill="rgb(215,159,47)"/><text x="1008.00" y="254.50"></text></g><g><title>0x7f8a21564991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1006" y="244" width="2" height="15" fill="rgb(215,209,6)"/><text x="1009.00" y="254.50"></text></g><g><title>0x7f8a2156499b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1008" y="244" width="2" height="15" fill="rgb(221,120,44)"/><text x="1011.00" y="254.50"></text></g><g><title>0x7f8a21564a51 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1010" y="244" width="1" height="15" fill="rgb(252,137,5)"/><text x="1013.00" y="254.50"></text></g><g><title>0x7f8a21564bc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1011" y="244" width="2" height="15" fill="rgb(209,7,22)"/><text x="1014.00" y="254.50"></text></g><g><title>0x7f8a21564bd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1013" y="244" width="1" height="15" fill="rgb(254,196,24)"/><text x="1016.00" y="254.50"></text></g><g><title>0x7f8a21564d02 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1014" y="244" width="2" height="15" fill="rgb(215,211,9)"/><text x="1017.00" y="254.50"></text></g><g><title>0x7f8a21564d07 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1016" y="244" width="3" height="15" fill="rgb(242,89,18)"/><text x="1019.00" y="254.50"></text></g><g><title>0x7f8a216b01b0 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="1027" y="260" width="3" height="15" fill="rgb(207,125,36)"/><text x="1030.00" y="270.50"></text></g><g><title>0x7f8a21736be7 (libm-2.29.so) (2 samples, 0.27%)</title><rect x="1030" y="260" width="3" height="15" fill="rgb(233,7,24)"/><text x="1033.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (10 samples, 1.35%)</title><rect x="1019" y="244" width="16" height="15" fill="rgb(221,93,50)"/><text x="1022.00" y="254.50"></text></g><g><title>0x7f8a21736c52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1033" y="260" width="2" height="15" fill="rgb(213,83,2)"/><text x="1036.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1035" y="244" width="3" height="15" fill="rgb(213,59,0)"/><text x="1038.00" y="254.50"></text></g><g><title>0x7f8a21565c23 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1064" y="260" width="1" height="15" fill="rgb(211,87,18)"/><text x="1067.00" y="270.50"></text></g><g><title>0x7f8a21565f0a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1065" y="260" width="2" height="15" fill="rgb(214,173,47)"/><text x="1068.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (19 samples, 2.56%)</title><rect x="1038" y="244" width="30" height="15" fill="rgb(221,116,50)"/><text x="1041.00" y="254.50">ma..</text></g><g><title>0x7f8a2156600a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1067" y="260" width="1" height="15" fill="rgb(234,163,4)"/><text x="1070.00" y="270.50"></text></g><g><title>0x7f8a2156490e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1111" y="260" width="2" height="15" fill="rgb(213,153,38)"/><text x="1114.00" y="270.50"></text></g><g><title>0x7f8a2156491e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1113" y="260" width="2" height="15" fill="rgb(227,83,4)"/><text x="1116.00" y="270.50"></text></g><g><title>0x7f8a21564971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1115" y="260" width="1" height="15" fill="rgb(236,148,44)"/><text x="1118.00" y="270.50"></text></g><g><title>0x7f8a21564a55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1116" y="260" width="2" height="15" fill="rgb(243,60,20)"/><text x="1119.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1118" y="260" width="1" height="15" fill="rgb(217,159,36)"/><text x="1121.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.54%)</title><rect x="1119" y="260" width="7" height="15" fill="rgb(223,171,10)"/><text x="1122.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (26 samples, 3.51%)</title><rect x="1126" y="260" width="41" height="15" fill="rgb(228,23,52)"/><text x="1129.00" y="270.50">svm..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (190 samples, 25.64%)</title><rect x="879" y="164" width="303" height="15" fill="rgb(238,13,13)"/><text x="882.00" y="174.50">_dense_predict_proba (sklearn/svm/_base...</text></g><g><title>0x7f89fc0553fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (190 samples, 25.64%)</title><rect x="879" y="180" width="303" height="15" fill="rgb(217,160,19)"/><text x="882.00" y="190.50">0x7f89fc0553fd (sklearn/svm/_libsvm.cpyt..</text></g><g><title>0x7f89fc053553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (187 samples, 25.24%)</title><rect x="884" y="196" width="298" height="15" fill="rgb(225,87,14)"/><text x="887.00" y="206.50">0x7f89fc053553 (sklearn/svm/_libsvm.cpyt..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (187 samples, 25.24%)</title><rect x="884" y="212" width="298" height="15" fill="rgb(225,110,42)"/><text x="887.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm...</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (187 samples, 25.24%)</title><rect x="884" y="228" width="298" height="15" fill="rgb(254,42,27)"/><text x="887.00" y="238.50">svm_predict_probability (sklearn/svm/_li..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (71 samples, 9.58%)</title><rect x="1068" y="244" width="114" height="15" fill="rgb(228,181,52)"/><text x="1071.00" y="254.50">svm_predict_va..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.21%)</title><rect x="1167" y="260" width="15" height="15" fill="rgb(226,206,9)"/><text x="1170.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.13%)</title><rect x="1182" y="196" width="1" height="15" fill="rgb(244,113,31)"/><text x="1185.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.27%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(229,57,35)"/><text x="1186.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.13%)</title><rect x="1185" y="212" width="1" height="15" fill="rgb(206,178,35)"/><text x="1188.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (4 samples, 0.54%)</title><rect x="1182" y="180" width="6" height="15" fill="rgb(231,49,44)"/><text x="1185.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.13%)</title><rect x="1186" y="196" width="2" height="15" fill="rgb(213,73,39)"/><text x="1189.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(221,81,16)"/><text x="1189.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.13%)</title><rect x="1186" y="228" width="2" height="15" fill="rgb(218,163,49)"/><text x="1189.00" y="238.50"></text></g><g><title>0x7f8a21642df0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1186" y="244" width="2" height="15" fill="rgb(250,221,25)"/><text x="1189.00" y="254.50"></text></g><g><title>all (741 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(241,139,22)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (741 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(252,140,27)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (195 samples, 26.32%)</title><rect x="879" y="68" width="311" height="15" fill="rgb(214,122,14)"/><text x="882.00" y="78.50">profile_skl (bench_SVC_linear_m_cl_probab..</text></g><g><title>setup_profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (195 samples, 26.32%)</title><rect x="879" y="84" width="311" height="15" fill="rgb(228,222,54)"/><text x="882.00" y="94.50">setup_profile (bench_SVC_linear_m_cl_prob..</text></g><g><title>profile (bench_SVC_linear_m_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (195 samples, 26.32%)</title><rect x="879" y="100" width="311" height="15" fill="rgb(208,105,45)"/><text x="882.00" y="110.50">profile (bench_SVC_linear_m_cl_probabilit..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (195 samples, 26.32%)</title><rect x="879" y="116" width="311" height="15" fill="rgb(222,20,1)"/><text x="882.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (195 samples, 26.32%)</title><rect x="879" y="132" width="311" height="15" fill="rgb(207,145,21)"/><text x="882.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (195 samples, 26.32%)</title><rect x="879" y="148" width="311" height="15" fill="rgb(238,151,24)"/><text x="882.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (5 samples, 0.67%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(209,165,47)"/><text x="1185.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.13%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(220,100,29)"/><text x="1191.00" y="190.50"></text></g></g></svg>