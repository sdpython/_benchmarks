<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(252,154,25)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(253,132,11)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(251,91,43)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(229,134,47)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(242,229,25)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(213,154,53)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.21%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(228,47,46)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(210,156,31)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(250,105,7)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(242,225,25)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(211,142,47)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(244,136,50)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.21%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(249,2,8)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(242,12,35)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="516" width="2" height="15" fill="rgb(214,55,0)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="532" width="2" height="15" fill="rgb(241,88,15)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="548" width="2" height="15" fill="rgb(245,127,38)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="564" width="2" height="15" fill="rgb(205,161,45)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.21%)</title><rect x="10" y="580" width="2" height="15" fill="rgb(213,184,13)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="596" width="2" height="15" fill="rgb(207,227,19)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="612" width="2" height="15" fill="rgb(249,80,13)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="628" width="2" height="15" fill="rgb(224,39,50)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="644" width="2" height="15" fill="rgb(206,194,1)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="660" width="2" height="15" fill="rgb(243,206,49)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="676" width="2" height="15" fill="rgb(207,54,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="692" width="2" height="15" fill="rgb(228,178,34)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="708" width="2" height="15" fill="rgb(227,120,20)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="724" width="2" height="15" fill="rgb(210,152,13)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="740" width="2" height="15" fill="rgb(254,221,54)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="756" width="2" height="15" fill="rgb(250,206,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="772" width="2" height="15" fill="rgb(236,113,19)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="788" width="2" height="15" fill="rgb(218,128,43)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="10" y="804" width="2" height="15" fill="rgb(218,210,13)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="820" width="2" height="15" fill="rgb(213,218,41)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="836" width="2" height="15" fill="rgb(241,113,22)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(236,9,48)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(211,225,10)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(248,156,26)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(228,167,1)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(246,169,41)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(251,52,6)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(234,183,2)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(213,224,41)"/><text x="13.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(254,77,54)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(228,178,40)"/><text x="13.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="196" width="7" height="15" fill="rgb(220,223,54)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="212" width="7" height="15" fill="rgb(253,197,17)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="228" width="7" height="15" fill="rgb(250,131,4)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(212,206,15)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(212,197,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="10" y="276" width="7" height="15" fill="rgb(254,119,11)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="292" width="5" height="15" fill="rgb(218,76,0)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="308" width="5" height="15" fill="rgb(231,162,0)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="324" width="5" height="15" fill="rgb(243,13,50)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="340" width="5" height="15" fill="rgb(223,87,35)"/><text x="15.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="356" width="5" height="15" fill="rgb(225,218,40)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="372" width="5" height="15" fill="rgb(223,185,39)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.42%)</title><rect x="12" y="388" width="5" height="15" fill="rgb(254,24,11)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="404" width="5" height="15" fill="rgb(225,112,48)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="420" width="5" height="15" fill="rgb(207,155,13)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="436" width="5" height="15" fill="rgb(234,70,4)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="452" width="5" height="15" fill="rgb(237,191,48)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="468" width="5" height="15" fill="rgb(216,216,15)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="484" width="5" height="15" fill="rgb(246,222,14)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="500" width="5" height="15" fill="rgb(220,128,29)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="516" width="5" height="15" fill="rgb(222,209,31)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="532" width="5" height="15" fill="rgb(250,179,52)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="548" width="5" height="15" fill="rgb(228,140,18)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="564" width="5" height="15" fill="rgb(232,43,32)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.42%)</title><rect x="12" y="580" width="5" height="15" fill="rgb(252,216,50)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="596" width="5" height="15" fill="rgb(233,115,34)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="612" width="5" height="15" fill="rgb(240,210,47)"/><text x="15.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="628" width="5" height="15" fill="rgb(218,15,47)"/><text x="15.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="644" width="5" height="15" fill="rgb(252,6,36)"/><text x="15.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="660" width="5" height="15" fill="rgb(234,75,20)"/><text x="15.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="676" width="5" height="15" fill="rgb(240,58,25)"/><text x="15.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="692" width="5" height="15" fill="rgb(226,148,44)"/><text x="15.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="708" width="5" height="15" fill="rgb(211,218,9)"/><text x="15.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="724" width="5" height="15" fill="rgb(232,100,7)"/><text x="15.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="740" width="5" height="15" fill="rgb(220,169,53)"/><text x="15.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="756" width="5" height="15" fill="rgb(238,127,37)"/><text x="15.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.42%)</title><rect x="12" y="772" width="5" height="15" fill="rgb(254,164,10)"/><text x="15.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="788" width="5" height="15" fill="rgb(209,23,48)"/><text x="15.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="804" width="5" height="15" fill="rgb(210,159,48)"/><text x="15.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="820" width="5" height="15" fill="rgb(230,223,28)"/><text x="15.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="12" y="836" width="5" height="15" fill="rgb(223,157,1)"/><text x="15.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="12" y="852" width="5" height="15" fill="rgb(217,171,4)"/><text x="15.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="868" width="5" height="15" fill="rgb(219,138,25)"/><text x="15.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="14" y="884" width="3" height="15" fill="rgb(239,89,21)"/><text x="17.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="14" y="900" width="3" height="15" fill="rgb(248,196,18)"/><text x="17.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="14" y="916" width="3" height="15" fill="rgb(230,191,49)"/><text x="17.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="14" y="932" width="3" height="15" fill="rgb(217,8,29)"/><text x="17.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="14" y="948" width="3" height="15" fill="rgb(248,155,42)"/><text x="17.00" y="958.50"></text></g><g><title>0x7fa265684933 (?) (1 samples, 0.21%)</title><rect x="14" y="964" width="3" height="15" fill="rgb(217,229,16)"/><text x="17.00" y="974.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(254,185,21)"/><text x="20.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(244,73,27)"/><text x="20.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(247,28,0)"/><text x="20.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(213,192,5)"/><text x="20.00" y="1374.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.21%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(254,106,23)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1476" width="5" height="15" fill="rgb(238,126,31)"/><text x="22.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1492" width="5" height="15" fill="rgb(210,13,0)"/><text x="22.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1508" width="5" height="15" fill="rgb(211,102,30)"/><text x="22.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="19" y="1524" width="5" height="15" fill="rgb(224,17,34)"/><text x="22.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1540" width="5" height="15" fill="rgb(254,55,5)"/><text x="22.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.42%)</title><rect x="19" y="1556" width="5" height="15" fill="rgb(216,229,23)"/><text x="22.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.42%)</title><rect x="19" y="1572" width="5" height="15" fill="rgb(229,226,48)"/><text x="22.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1588" width="5" height="15" fill="rgb(208,121,46)"/><text x="22.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1604" width="5" height="15" fill="rgb(246,65,31)"/><text x="22.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1620" width="5" height="15" fill="rgb(218,194,22)"/><text x="22.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="19" y="1636" width="5" height="15" fill="rgb(217,228,33)"/><text x="22.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1652" width="5" height="15" fill="rgb(252,220,34)"/><text x="22.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (2 samples, 0.42%)</title><rect x="19" y="1668" width="5" height="15" fill="rgb(222,68,53)"/><text x="22.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (2 samples, 0.42%)</title><rect x="19" y="1684" width="5" height="15" fill="rgb(213,140,15)"/><text x="22.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1700" width="5" height="15" fill="rgb(246,100,23)"/><text x="22.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1716" width="5" height="15" fill="rgb(217,60,48)"/><text x="22.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1732" width="5" height="15" fill="rgb(245,42,13)"/><text x="22.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="19" y="1748" width="5" height="15" fill="rgb(219,71,7)"/><text x="22.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1764" width="5" height="15" fill="rgb(215,54,31)"/><text x="22.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (2 samples, 0.42%)</title><rect x="19" y="1780" width="5" height="15" fill="rgb(231,222,54)"/><text x="22.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1796" width="5" height="15" fill="rgb(216,119,26)"/><text x="22.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1812" width="5" height="15" fill="rgb(233,200,23)"/><text x="22.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1828" width="5" height="15" fill="rgb(239,29,41)"/><text x="22.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="19" y="1844" width="5" height="15" fill="rgb(244,172,13)"/><text x="22.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1860" width="5" height="15" fill="rgb(227,33,30)"/><text x="22.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (2 samples, 0.42%)</title><rect x="19" y="1876" width="5" height="15" fill="rgb(242,112,13)"/><text x="22.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1892" width="5" height="15" fill="rgb(242,59,37)"/><text x="22.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1908" width="5" height="15" fill="rgb(242,20,49)"/><text x="22.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1924" width="5" height="15" fill="rgb(247,189,11)"/><text x="22.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="19" y="1940" width="5" height="15" fill="rgb(241,71,35)"/><text x="22.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="19" y="1956" width="5" height="15" fill="rgb(244,13,49)"/><text x="22.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/unix_events.py) (2 samples, 0.42%)</title><rect x="19" y="1972" width="5" height="15" fill="rgb(221,224,53)"/><text x="22.00" y="1982.50"></text></g><g><title>FastChildWatcher (asyncio/unix_events.py) (2 samples, 0.42%)</title><rect x="19" y="1988" width="5" height="15" fill="rgb(228,31,41)"/><text x="22.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="484" width="12" height="15" fill="rgb(246,117,50)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="500" width="12" height="15" fill="rgb(229,30,37)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="516" width="12" height="15" fill="rgb(239,74,6)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="532" width="12" height="15" fill="rgb(217,133,18)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="548" width="12" height="15" fill="rgb(209,114,31)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="564" width="12" height="15" fill="rgb(226,146,52)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="580" width="12" height="15" fill="rgb(214,206,54)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="596" width="12" height="15" fill="rgb(243,19,30)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="612" width="12" height="15" fill="rgb(243,120,34)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="628" width="12" height="15" fill="rgb(230,74,4)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="644" width="12" height="15" fill="rgb(224,17,35)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="660" width="12" height="15" fill="rgb(207,121,49)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.04%)</title><rect x="17" y="676" width="12" height="15" fill="rgb(220,155,29)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="692" width="12" height="15" fill="rgb(248,170,22)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="708" width="12" height="15" fill="rgb(244,196,21)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="724" width="12" height="15" fill="rgb(229,182,54)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="740" width="12" height="15" fill="rgb(232,224,17)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="756" width="12" height="15" fill="rgb(210,73,48)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="772" width="12" height="15" fill="rgb(242,171,13)"/><text x="20.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="788" width="12" height="15" fill="rgb(214,158,39)"/><text x="20.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="804" width="12" height="15" fill="rgb(214,177,47)"/><text x="20.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="820" width="12" height="15" fill="rgb(217,57,18)"/><text x="20.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="836" width="12" height="15" fill="rgb(228,103,33)"/><text x="20.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="852" width="12" height="15" fill="rgb(206,61,3)"/><text x="20.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.04%)</title><rect x="17" y="868" width="12" height="15" fill="rgb(251,96,40)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="884" width="12" height="15" fill="rgb(212,120,36)"/><text x="20.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="900" width="12" height="15" fill="rgb(217,166,17)"/><text x="20.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="916" width="12" height="15" fill="rgb(228,42,13)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="932" width="12" height="15" fill="rgb(220,6,37)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="948" width="12" height="15" fill="rgb(239,216,12)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="964" width="12" height="15" fill="rgb(207,83,49)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="980" width="12" height="15" fill="rgb(229,96,29)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="996" width="12" height="15" fill="rgb(241,24,32)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="1012" width="12" height="15" fill="rgb(217,39,17)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1028" width="12" height="15" fill="rgb(230,227,41)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1044" width="12" height="15" fill="rgb(209,152,9)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1060" width="12" height="15" fill="rgb(253,204,24)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="1076" width="12" height="15" fill="rgb(225,150,54)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1092" width="12" height="15" fill="rgb(226,194,42)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.04%)</title><rect x="17" y="1108" width="12" height="15" fill="rgb(220,17,5)"/><text x="20.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1124" width="12" height="15" fill="rgb(248,82,50)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1140" width="12" height="15" fill="rgb(208,175,35)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1156" width="12" height="15" fill="rgb(229,44,13)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1172" width="12" height="15" fill="rgb(224,101,30)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1188" width="12" height="15" fill="rgb(249,60,30)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="17" y="1204" width="12" height="15" fill="rgb(234,39,28)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1220" width="12" height="15" fill="rgb(212,109,14)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="1236" width="12" height="15" fill="rgb(210,162,9)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1252" width="12" height="15" fill="rgb(228,96,2)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1268" width="12" height="15" fill="rgb(215,133,3)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1284" width="12" height="15" fill="rgb(234,128,38)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="17" y="1300" width="12" height="15" fill="rgb(215,126,43)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="19" y="1316" width="10" height="15" fill="rgb(208,86,50)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.83%)</title><rect x="19" y="1332" width="10" height="15" fill="rgb(205,142,34)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="19" y="1348" width="10" height="15" fill="rgb(236,148,21)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.83%)</title><rect x="19" y="1364" width="10" height="15" fill="rgb(253,54,33)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="19" y="1380" width="10" height="15" fill="rgb(243,144,6)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="19" y="1396" width="10" height="15" fill="rgb(212,90,8)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="19" y="1412" width="10" height="15" fill="rgb(219,202,12)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.83%)</title><rect x="19" y="1428" width="10" height="15" fill="rgb(236,193,0)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="19" y="1444" width="10" height="15" fill="rgb(230,51,11)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.83%)</title><rect x="19" y="1460" width="10" height="15" fill="rgb(210,187,5)"/><text x="22.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.42%)</title><rect x="24" y="1476" width="5" height="15" fill="rgb(254,71,21)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.42%)</title><rect x="24" y="1492" width="5" height="15" fill="rgb(245,215,29)"/><text x="27.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.42%)</title><rect x="24" y="1508" width="5" height="15" fill="rgb(249,34,32)"/><text x="27.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.42%)</title><rect x="24" y="1524" width="5" height="15" fill="rgb(230,69,36)"/><text x="27.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.42%)</title><rect x="24" y="1540" width="5" height="15" fill="rgb(248,86,2)"/><text x="27.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.42%)</title><rect x="24" y="1556" width="5" height="15" fill="rgb(205,145,44)"/><text x="27.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.42%)</title><rect x="24" y="1572" width="5" height="15" fill="rgb(248,113,23)"/><text x="27.00" y="1582.50"></text></g><g><title>0x7fa26870bc58 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(206,65,5)"/><text x="30.00" y="1598.50"></text></g><g><title>google::protobuf::TextFormat::Printer::PrintToString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(225,79,3)"/><text x="30.00" y="1614.50"></text></g><g><title>google::protobuf::TextFormat::Printer::Print (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(236,219,44)"/><text x="30.00" y="1630.50"></text></g><g><title>google::protobuf::TextFormat::Printer::Print (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(243,152,45)"/><text x="30.00" y="1646.50"></text></g><g><title>google::protobuf::TextFormat::Printer::PrintField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(252,0,34)"/><text x="30.00" y="1662.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::~DynamicMessageFactory (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(210,156,11)"/><text x="30.00" y="1678.50"></text></g><g><title>0x7fa27a3db12b (libc-2.29.so) (1 samples, 0.21%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(215,58,25)"/><text x="30.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="772" width="3" height="15" fill="rgb(234,202,29)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(234,218,35)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="804" width="3" height="15" fill="rgb(243,30,26)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(233,80,11)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(234,65,48)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(215,67,14)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.21%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(216,205,32)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(226,211,35)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(222,63,18)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(240,30,7)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(231,11,49)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="948" width="3" height="15" fill="rgb(210,159,47)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.21%)</title><rect x="29" y="964" width="3" height="15" fill="rgb(241,156,54)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="980" width="3" height="15" fill="rgb(227,191,47)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="996" width="3" height="15" fill="rgb(231,109,24)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1012" width="3" height="15" fill="rgb(248,225,6)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(206,122,27)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(243,78,8)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.21%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(208,177,35)"/><text x="32.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(230,36,27)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1092" width="3" height="15" fill="rgb(226,97,50)"/><text x="32.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1108" width="3" height="15" fill="rgb(254,142,11)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(252,143,12)"/><text x="32.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(249,7,12)"/><text x="32.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(221,205,45)"/><text x="32.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(237,185,12)"/><text x="32.00" y="1182.50"></text></g><g><title>0x7fa24fba4770 (?) (1 samples, 0.21%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(210,119,30)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.21%)</title><rect x="32" y="1108" width="2" height="15" fill="rgb(207,62,42)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1124" width="2" height="15" fill="rgb(245,227,17)"/><text x="35.00" y="1134.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1140" width="2" height="15" fill="rgb(218,124,17)"/><text x="35.00" y="1150.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1156" width="2" height="15" fill="rgb(237,93,11)"/><text x="35.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 1.66%)</title><rect x="17" y="244" width="19" height="15" fill="rgb(247,160,38)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="260" width="19" height="15" fill="rgb(208,59,10)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="276" width="19" height="15" fill="rgb(251,89,52)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="292" width="19" height="15" fill="rgb(248,86,23)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.66%)</title><rect x="17" y="308" width="19" height="15" fill="rgb(234,6,27)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="324" width="19" height="15" fill="rgb(238,215,6)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.66%)</title><rect x="17" y="340" width="19" height="15" fill="rgb(237,76,51)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="356" width="19" height="15" fill="rgb(206,80,12)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="372" width="19" height="15" fill="rgb(228,125,52)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="388" width="19" height="15" fill="rgb(231,156,14)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.66%)</title><rect x="17" y="404" width="19" height="15" fill="rgb(216,212,17)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="420" width="19" height="15" fill="rgb(226,150,20)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.66%)</title><rect x="17" y="436" width="19" height="15" fill="rgb(210,137,21)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="452" width="19" height="15" fill="rgb(212,208,29)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="17" y="468" width="19" height="15" fill="rgb(226,92,11)"/><text x="20.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="484" width="7" height="15" fill="rgb(218,108,51)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="29" y="500" width="7" height="15" fill="rgb(249,196,42)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="516" width="7" height="15" fill="rgb(230,218,1)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.62%)</title><rect x="29" y="532" width="7" height="15" fill="rgb(213,26,35)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="548" width="7" height="15" fill="rgb(214,178,20)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="564" width="7" height="15" fill="rgb(250,133,15)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="580" width="7" height="15" fill="rgb(222,178,28)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="29" y="596" width="7" height="15" fill="rgb(252,183,25)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="612" width="7" height="15" fill="rgb(232,35,29)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.62%)</title><rect x="29" y="628" width="7" height="15" fill="rgb(224,6,49)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="644" width="7" height="15" fill="rgb(254,146,17)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="660" width="7" height="15" fill="rgb(218,72,1)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="676" width="7" height="15" fill="rgb(233,100,6)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="29" y="692" width="7" height="15" fill="rgb(222,33,30)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="708" width="7" height="15" fill="rgb(211,45,43)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.62%)</title><rect x="29" y="724" width="7" height="15" fill="rgb(216,17,43)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="740" width="7" height="15" fill="rgb(217,133,39)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="29" y="756" width="7" height="15" fill="rgb(245,110,26)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(254,134,17)"/><text x="35.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(243,186,42)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(242,140,6)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.42%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(250,24,8)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(227,211,12)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(222,183,20)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(233,38,7)"/><text x="35.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(236,75,3)"/><text x="35.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(243,80,12)"/><text x="35.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.42%)</title><rect x="32" y="916" width="4" height="15" fill="rgb(220,65,19)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="932" width="4" height="15" fill="rgb(234,161,52)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="948" width="4" height="15" fill="rgb(240,64,18)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="964" width="4" height="15" fill="rgb(210,3,48)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="980" width="4" height="15" fill="rgb(252,12,11)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="996" width="4" height="15" fill="rgb(226,51,2)"/><text x="35.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.42%)</title><rect x="32" y="1012" width="4" height="15" fill="rgb(223,61,52)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="1028" width="4" height="15" fill="rgb(218,78,40)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="1044" width="4" height="15" fill="rgb(215,84,19)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="1060" width="4" height="15" fill="rgb(244,82,21)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="1076" width="4" height="15" fill="rgb(228,81,46)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="1092" width="4" height="15" fill="rgb(214,41,33)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.21%)</title><rect x="34" y="1108" width="2" height="15" fill="rgb(236,17,4)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1124" width="2" height="15" fill="rgb(217,49,51)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1140" width="2" height="15" fill="rgb(221,92,25)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1156" width="2" height="15" fill="rgb(213,170,26)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1172" width="2" height="15" fill="rgb(210,100,31)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1188" width="2" height="15" fill="rgb(208,1,16)"/><text x="37.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.21%)</title><rect x="34" y="1204" width="2" height="15" fill="rgb(245,28,47)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1220" width="2" height="15" fill="rgb(212,216,30)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1236" width="2" height="15" fill="rgb(246,97,34)"/><text x="37.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1252" width="2" height="15" fill="rgb(232,184,20)"/><text x="37.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1268" width="2" height="15" fill="rgb(209,46,0)"/><text x="37.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1284" width="2" height="15" fill="rgb(230,123,2)"/><text x="37.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.21%)</title><rect x="34" y="1300" width="2" height="15" fill="rgb(250,176,32)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1316" width="2" height="15" fill="rgb(248,168,50)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1332" width="2" height="15" fill="rgb(220,211,33)"/><text x="37.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1348" width="2" height="15" fill="rgb(221,12,25)"/><text x="37.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1364" width="2" height="15" fill="rgb(225,84,38)"/><text x="37.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1380" width="2" height="15" fill="rgb(228,58,24)"/><text x="37.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.21%)</title><rect x="34" y="1396" width="2" height="15" fill="rgb(248,73,2)"/><text x="37.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1412" width="2" height="15" fill="rgb(233,59,1)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1428" width="2" height="15" fill="rgb(232,219,32)"/><text x="37.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1444" width="2" height="15" fill="rgb(227,206,4)"/><text x="37.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1460" width="2" height="15" fill="rgb(220,62,53)"/><text x="37.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1476" width="2" height="15" fill="rgb(230,206,4)"/><text x="37.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.21%)</title><rect x="34" y="1492" width="2" height="15" fill="rgb(250,148,37)"/><text x="37.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1508" width="2" height="15" fill="rgb(221,222,12)"/><text x="37.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1524" width="2" height="15" fill="rgb(236,143,36)"/><text x="37.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1540" width="2" height="15" fill="rgb(234,64,24)"/><text x="37.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1556" width="2" height="15" fill="rgb(246,152,1)"/><text x="37.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1572" width="2" height="15" fill="rgb(232,40,14)"/><text x="37.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1588" width="2" height="15" fill="rgb(221,15,4)"/><text x="37.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="1604" width="2" height="15" fill="rgb(246,43,53)"/><text x="37.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1620" width="2" height="15" fill="rgb(227,145,53)"/><text x="37.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.21%)</title><rect x="34" y="1636" width="2" height="15" fill="rgb(216,200,35)"/><text x="37.00" y="1646.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.21%)</title><rect x="34" y="1652" width="2" height="15" fill="rgb(216,145,10)"/><text x="37.00" y="1662.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.21%)</title><rect x="34" y="1668" width="2" height="15" fill="rgb(251,195,41)"/><text x="37.00" y="1678.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.21%)</title><rect x="34" y="1684" width="2" height="15" fill="rgb(214,39,47)"/><text x="37.00" y="1694.50"></text></g><g><title>validate_color (matplotlib/rcsetup.py) (1 samples, 0.21%)</title><rect x="34" y="1700" width="2" height="15" fill="rgb(211,194,46)"/><text x="37.00" y="1710.50"></text></g><g><title>is_color_like (matplotlib/colors.py) (1 samples, 0.21%)</title><rect x="34" y="1716" width="2" height="15" fill="rgb(227,84,42)"/><text x="37.00" y="1726.50"></text></g><g><title>_is_nth_color (matplotlib/colors.py) (1 samples, 0.21%)</title><rect x="34" y="1732" width="2" height="15" fill="rgb(232,158,35)"/><text x="37.00" y="1742.50"></text></g><g><title>match (re.py) (1 samples, 0.21%)</title><rect x="34" y="1748" width="2" height="15" fill="rgb(220,70,23)"/><text x="37.00" y="1758.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.21%)</title><rect x="34" y="1764" width="2" height="15" fill="rgb(210,128,11)"/><text x="37.00" y="1774.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.21%)</title><rect x="34" y="1780" width="2" height="15" fill="rgb(241,141,7)"/><text x="37.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.49%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(232,89,37)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.49%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(209,110,14)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.49%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(252,226,0)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.49%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(248,20,4)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.49%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(234,75,9)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py) (12 samples, 2.49%)</title><rect x="10" y="148" width="29" height="15" fill="rgb(212,145,5)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.49%)</title><rect x="10" y="164" width="29" height="15" fill="rgb(235,175,15)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.49%)</title><rect x="10" y="180" width="29" height="15" fill="rgb(240,58,24)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="17" y="196" width="22" height="15" fill="rgb(241,103,11)"/><text x="20.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.87%)</title><rect x="17" y="212" width="22" height="15" fill="rgb(241,140,1)"/><text x="20.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="17" y="228" width="22" height="15" fill="rgb(254,63,24)"/><text x="20.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.21%)</title><rect x="36" y="244" width="3" height="15" fill="rgb(208,139,36)"/><text x="39.00" y="254.50"></text></g><g><title>_register_known_types (numpy/core/getlimits.py) (1 samples, 0.21%)</title><rect x="36" y="260" width="3" height="15" fill="rgb(241,66,23)"/><text x="39.00" y="270.50"></text></g><g><title>__init__ (numpy/core/getlimits.py) (1 samples, 0.21%)</title><rect x="36" y="276" width="3" height="15" fill="rgb(219,32,34)"/><text x="39.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (numpy/core/getlimits.py) (1 samples, 0.21%)</title><rect x="36" y="292" width="3" height="15" fill="rgb(236,57,17)"/><text x="39.00" y="302.50"></text></g><g><title>array_str (strfuncs.c) (1 samples, 0.21%)</title><rect x="36" y="308" width="3" height="15" fill="rgb(224,19,20)"/><text x="39.00" y="318.50"></text></g><g><title>_array_str_implementation (numpy/core/arrayprint.py) (1 samples, 0.21%)</title><rect x="36" y="324" width="3" height="15" fill="rgb(245,142,15)"/><text x="39.00" y="334.50"></text></g><g><title>wrapper (numpy/core/arrayprint.py) (1 samples, 0.21%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(228,172,6)"/><text x="39.00" y="350.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.21%)</title><rect x="36" y="356" width="3" height="15" fill="rgb(210,44,32)"/><text x="39.00" y="366.50"></text></g><g><title>longdoubletype_str (scalartypes.c.src) (1 samples, 0.21%)</title><rect x="36" y="372" width="3" height="15" fill="rgb(251,131,3)"/><text x="39.00" y="382.50"></text></g><g><title>Dragon4_Scientific_LongDouble (dragon4.c) (1 samples, 0.21%)</title><rect x="36" y="388" width="3" height="15" fill="rgb(227,19,4)"/><text x="39.00" y="398.50"></text></g><g><title>Dragon4_Scientific_LongDouble_opt (dragon4.c) (1 samples, 0.21%)</title><rect x="36" y="404" width="3" height="15" fill="rgb(217,77,32)"/><text x="39.00" y="414.50"></text></g><g><title>Format_floatbits (dragon4.c) (1 samples, 0.21%)</title><rect x="36" y="420" width="3" height="15" fill="rgb(207,221,27)"/><text x="39.00" y="430.50"></text></g><g><title>FormatScientific (dragon4.c) (1 samples, 0.21%)</title><rect x="36" y="436" width="3" height="15" fill="rgb(250,160,22)"/><text x="39.00" y="446.50"></text></g><g><title>Dragon4 (dragon4.c) (1 samples, 0.21%)</title><rect x="36" y="452" width="3" height="15" fill="rgb(216,144,44)"/><text x="39.00" y="462.50"></text></g><g><title>BigInt_Add (dragon4.c) (1 samples, 0.21%)</title><rect x="36" y="468" width="3" height="15" fill="rgb(223,178,43)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.42%)</title><rect x="44" y="180" width="5" height="15" fill="rgb(251,65,44)"/><text x="47.00" y="190.50"></text></g><g><title>0x7fa23a3fdff9 (?) (1 samples, 0.21%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(253,83,47)"/><text x="57.00" y="222.50"></text></g><g><title>0x7fa23a3f8ef6 (?) (1 samples, 0.21%)</title><rect x="54" y="228" width="2" height="15" fill="rgb(251,114,27)"/><text x="57.00" y="238.50"></text></g><g><title>0x7fa23a3ed962 (?) (1 samples, 0.21%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(248,10,46)"/><text x="57.00" y="254.50"></text></g><g><title>0x7fa23a4217a7 (?) (1 samples, 0.21%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(224,7,30)"/><text x="57.00" y="270.50"></text></g><g><title>0x7fa23a421379 (?) (1 samples, 0.21%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(254,10,16)"/><text x="57.00" y="286.50"></text></g><g><title>0x7fa23a87f8b8 (?) (1 samples, 0.21%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(254,58,36)"/><text x="57.00" y="302.50"></text></g><g><title>0x7fa23a87dc7f (?) (1 samples, 0.21%)</title><rect x="54" y="308" width="2" height="15" fill="rgb(206,113,53)"/><text x="57.00" y="318.50"></text></g><g><title>0x7fa23a89099c (?) (1 samples, 0.21%)</title><rect x="54" y="324" width="2" height="15" fill="rgb(235,14,16)"/><text x="57.00" y="334.50"></text></g><g><title>0x7fa23a67c0b1 (?) (1 samples, 0.21%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(222,165,32)"/><text x="57.00" y="350.50"></text></g><g><title>0x7fa23a84c5e6 (?) (1 samples, 0.21%)</title><rect x="54" y="356" width="2" height="15" fill="rgb(226,17,38)"/><text x="57.00" y="366.50"></text></g><g><title>0x7fa23a84c486 (?) (1 samples, 0.21%)</title><rect x="54" y="372" width="2" height="15" fill="rgb(254,183,2)"/><text x="57.00" y="382.50"></text></g><g><title>0x7fa23a836c8d (?) (1 samples, 0.21%)</title><rect x="54" y="388" width="2" height="15" fill="rgb(206,216,7)"/><text x="57.00" y="398.50"></text></g><g><title>0x7fa23a836202 (?) (1 samples, 0.21%)</title><rect x="54" y="404" width="2" height="15" fill="rgb(246,99,29)"/><text x="57.00" y="414.50"></text></g><g><title>0x7fa23a835913 (?) (1 samples, 0.21%)</title><rect x="54" y="420" width="2" height="15" fill="rgb(219,219,0)"/><text x="57.00" y="430.50"></text></g><g><title>0x7fa23a834417 (?) (1 samples, 0.21%)</title><rect x="54" y="436" width="2" height="15" fill="rgb(253,171,2)"/><text x="57.00" y="446.50"></text></g><g><title>0x7fa23a868a8c (?) (1 samples, 0.21%)</title><rect x="54" y="452" width="2" height="15" fill="rgb(218,155,21)"/><text x="57.00" y="462.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.21%)</title><rect x="56" y="212" width="3" height="15" fill="rgb(245,128,36)"/><text x="59.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="61" y="292" width="2" height="15" fill="rgb(223,226,53)"/><text x="64.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="63" y="324" width="3" height="15" fill="rgb(238,154,18)"/><text x="66.00" y="334.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="68" y="340" width="3" height="15" fill="rgb(213,164,54)"/><text x="71.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="68" y="356" width="3" height="15" fill="rgb(220,174,44)"/><text x="71.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="68" y="372" width="3" height="15" fill="rgb(214,125,31)"/><text x="71.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="68" y="388" width="3" height="15" fill="rgb(246,169,25)"/><text x="71.00" y="398.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="71" y="340" width="2" height="15" fill="rgb(236,133,34)"/><text x="74.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="71" y="356" width="2" height="15" fill="rgb(214,138,28)"/><text x="74.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="71" y="372" width="2" height="15" fill="rgb(242,168,32)"/><text x="74.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="71" y="388" width="2" height="15" fill="rgb(231,57,6)"/><text x="74.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="73" y="356" width="3" height="15" fill="rgb(250,213,11)"/><text x="76.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="73" y="372" width="3" height="15" fill="rgb(253,226,16)"/><text x="76.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="73" y="388" width="3" height="15" fill="rgb(224,208,35)"/><text x="76.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="73" y="340" width="5" height="15" fill="rgb(250,46,49)"/><text x="76.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="76" y="356" width="2" height="15" fill="rgb(227,24,13)"/><text x="79.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="76" y="372" width="2" height="15" fill="rgb(253,65,54)"/><text x="79.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="76" y="388" width="2" height="15" fill="rgb(253,49,21)"/><text x="79.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="76" y="404" width="2" height="15" fill="rgb(217,192,24)"/><text x="79.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="76" y="420" width="2" height="15" fill="rgb(213,15,49)"/><text x="79.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="78" y="340" width="5" height="15" fill="rgb(244,63,9)"/><text x="81.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="78" y="356" width="5" height="15" fill="rgb(240,157,33)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="83" y="340" width="3" height="15" fill="rgb(216,28,41)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="83" y="356" width="3" height="15" fill="rgb(211,100,22)"/><text x="86.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="83" y="372" width="3" height="15" fill="rgb(234,164,39)"/><text x="86.00" y="382.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="86" y="340" width="2" height="15" fill="rgb(244,183,25)"/><text x="89.00" y="350.50"></text></g><g><title>0x7fa27a3ba982 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="86" y="356" width="2" height="15" fill="rgb(208,53,43)"/><text x="89.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="88" y="356" width="2" height="15" fill="rgb(250,62,39)"/><text x="91.00" y="366.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.49%)</title><rect x="63" y="292" width="30" height="15" fill="rgb(237,187,0)"/><text x="66.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.49%)</title><rect x="63" y="308" width="30" height="15" fill="rgb(245,102,51)"/><text x="66.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.29%)</title><rect x="66" y="324" width="27" height="15" fill="rgb(210,88,6)"/><text x="69.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="88" y="340" width="5" height="15" fill="rgb(243,225,4)"/><text x="91.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="90" y="356" width="3" height="15" fill="rgb(213,64,34)"/><text x="93.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="90" y="372" width="3" height="15" fill="rgb(241,126,50)"/><text x="93.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="90" y="388" width="3" height="15" fill="rgb(222,122,51)"/><text x="93.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.91%)</title><rect x="61" y="276" width="34" height="15" fill="rgb(221,113,1)"/><text x="64.00" y="286.50">on..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="93" y="292" width="2" height="15" fill="rgb(243,53,21)"/><text x="96.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.21%)</title><rect x="93" y="308" width="2" height="15" fill="rgb(223,124,20)"/><text x="96.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.12%)</title><rect x="61" y="260" width="37" height="15" fill="rgb(210,85,11)"/><text x="64.00" y="270.50">onn..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="95" y="276" width="3" height="15" fill="rgb(212,143,0)"/><text x="98.00" y="286.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="98" y="260" width="2" height="15" fill="rgb(209,99,40)"/><text x="101.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="100" y="260" width="3" height="15" fill="rgb(215,41,21)"/><text x="103.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="100" y="276" width="3" height="15" fill="rgb(244,85,26)"/><text x="103.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="100" y="292" width="3" height="15" fill="rgb(245,73,49)"/><text x="103.00" y="302.50"></text></g><g><title>run (onnxruntime/capi/session.py) (21 samples, 4.37%)</title><rect x="54" y="196" width="51" height="15" fill="rgb(213,114,52)"/><text x="57.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="59" y="212" width="46" height="15" fill="rgb(245,151,37)"/><text x="62.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="59" y="228" width="46" height="15" fill="rgb(234,153,41)"/><text x="62.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="59" y="244" width="46" height="15" fill="rgb(248,172,35)"/><text x="62.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="260" width="2" height="15" fill="rgb(247,6,24)"/><text x="106.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="276" width="2" height="15" fill="rgb(211,108,33)"/><text x="106.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="292" width="2" height="15" fill="rgb(239,38,29)"/><text x="106.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="308" width="2" height="15" fill="rgb(251,225,13)"/><text x="106.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="324" width="2" height="15" fill="rgb(207,77,23)"/><text x="106.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="340" width="2" height="15" fill="rgb(254,185,36)"/><text x="106.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="103" y="356" width="2" height="15" fill="rgb(219,88,5)"/><text x="106.00" y="366.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (28 samples, 5.82%)</title><rect x="39" y="68" width="69" height="15" fill="rgb(206,224,18)"/><text x="42.00" y="78.50">profile..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (28 samples, 5.82%)</title><rect x="39" y="84" width="69" height="15" fill="rgb(245,8,29)"/><text x="42.00" y="94.50">setup_p..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (28 samples, 5.82%)</title><rect x="39" y="100" width="69" height="15" fill="rgb(207,149,37)"/><text x="42.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (27 samples, 5.61%)</title><rect x="41" y="116" width="67" height="15" fill="rgb(230,117,35)"/><text x="44.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (27 samples, 5.61%)</title><rect x="41" y="132" width="67" height="15" fill="rgb(241,123,36)"/><text x="44.00" y="142.50">&lt;lambda..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (27 samples, 5.61%)</title><rect x="41" y="148" width="67" height="15" fill="rgb(212,146,40)"/><text x="44.00" y="158.50">run (ml..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (27 samples, 5.61%)</title><rect x="41" y="164" width="67" height="15" fill="rgb(252,173,24)"/><text x="44.00" y="174.50">_run_wh..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (24 samples, 4.99%)</title><rect x="49" y="180" width="59" height="15" fill="rgb(251,22,22)"/><text x="52.00" y="190.50">run (m..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.21%)</title><rect x="105" y="196" width="3" height="15" fill="rgb(237,139,39)"/><text x="108.00" y="206.50"></text></g><g><title>0x7fa27a3db13e (libc-2.29.so) (2 samples, 0.42%)</title><rect x="294" y="196" width="5" height="15" fill="rgb(220,154,40)"/><text x="297.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.62%)</title><rect x="299" y="196" width="7" height="15" fill="rgb(235,87,16)"/><text x="302.00" y="206.50"></text></g><g><title>0x7fa27a3db12b (libc-2.29.so) (1 samples, 0.21%)</title><rect x="321" y="228" width="3" height="15" fill="rgb(220,33,7)"/><text x="324.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.42%)</title><rect x="324" y="244" width="4" height="15" fill="rgb(240,128,44)"/><text x="327.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="326" y="260" width="2" height="15" fill="rgb(249,147,46)"/><text x="329.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (4 samples, 0.83%)</title><rect x="321" y="212" width="10" height="15" fill="rgb(229,63,53)"/><text x="324.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.62%)</title><rect x="324" y="228" width="7" height="15" fill="rgb(243,137,11)"/><text x="327.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="328" y="244" width="3" height="15" fill="rgb(219,3,1)"/><text x="331.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="328" y="260" width="3" height="15" fill="rgb(229,107,29)"/><text x="331.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="328" y="276" width="3" height="15" fill="rgb(226,147,24)"/><text x="331.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (2 samples, 0.42%)</title><rect x="341" y="292" width="5" height="15" fill="rgb(250,149,24)"/><text x="344.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="343" y="308" width="3" height="15" fill="rgb(252,214,6)"/><text x="346.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="346" y="292" width="2" height="15" fill="rgb(245,5,2)"/><text x="349.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.21%)</title><rect x="346" y="308" width="2" height="15" fill="rgb(241,200,40)"/><text x="349.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.04%)</title><rect x="338" y="260" width="12" height="15" fill="rgb(242,54,28)"/><text x="341.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.04%)</title><rect x="338" y="276" width="12" height="15" fill="rgb(206,3,5)"/><text x="341.00" y="286.50"></text></g><g><title>_aligned_cast_float_to_long (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="348" y="292" width="2" height="15" fill="rgb(242,204,10)"/><text x="351.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.42%)</title><rect x="350" y="260" width="5" height="15" fill="rgb(224,219,26)"/><text x="353.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.21%)</title><rect x="353" y="276" width="2" height="15" fill="rgb(225,50,21)"/><text x="356.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.21%)</title><rect x="353" y="292" width="2" height="15" fill="rgb(216,176,34)"/><text x="356.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.21%)</title><rect x="353" y="308" width="2" height="15" fill="rgb(229,101,51)"/><text x="356.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (11 samples, 2.29%)</title><rect x="331" y="212" width="27" height="15" fill="rgb(247,53,34)"/><text x="334.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (9 samples, 1.87%)</title><rect x="336" y="228" width="22" height="15" fill="rgb(219,3,35)"/><text x="339.00" y="238.50">&lt;..</text></g><g><title>array_astype (methods.c) (8 samples, 1.66%)</title><rect x="338" y="244" width="20" height="15" fill="rgb(252,1,6)"/><text x="341.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.21%)</title><rect x="355" y="260" width="3" height="15" fill="rgb(247,3,19)"/><text x="358.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="355" y="276" width="3" height="15" fill="rgb(229,102,15)"/><text x="358.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.21%)</title><rect x="355" y="292" width="3" height="15" fill="rgb(215,79,18)"/><text x="358.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="355" y="308" width="3" height="15" fill="rgb(239,35,10)"/><text x="358.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="355" y="324" width="3" height="15" fill="rgb(243,125,47)"/><text x="358.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="355" y="340" width="3" height="15" fill="rgb(222,161,49)"/><text x="358.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="360" y="244" width="3" height="15" fill="rgb(249,137,22)"/><text x="363.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="360" y="260" width="3" height="15" fill="rgb(251,39,6)"/><text x="363.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="360" y="276" width="3" height="15" fill="rgb(221,197,21)"/><text x="363.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="363" y="292" width="2" height="15" fill="rgb(241,191,43)"/><text x="366.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="363" y="308" width="2" height="15" fill="rgb(212,120,0)"/><text x="366.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (4 samples, 0.83%)</title><rect x="358" y="212" width="10" height="15" fill="rgb(214,62,54)"/><text x="361.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.83%)</title><rect x="358" y="228" width="10" height="15" fill="rgb(206,65,40)"/><text x="361.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.42%)</title><rect x="363" y="244" width="5" height="15" fill="rgb(239,220,27)"/><text x="366.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="363" y="260" width="5" height="15" fill="rgb(208,210,12)"/><text x="366.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="363" y="276" width="5" height="15" fill="rgb(224,19,3)"/><text x="366.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.21%)</title><rect x="365" y="292" width="3" height="15" fill="rgb(219,55,5)"/><text x="368.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="365" y="308" width="3" height="15" fill="rgb(214,63,3)"/><text x="368.00" y="318.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.21%)</title><rect x="373" y="244" width="2" height="15" fill="rgb(253,93,0)"/><text x="376.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.21%)</title><rect x="375" y="276" width="2" height="15" fill="rgb(253,82,0)"/><text x="378.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.21%)</title><rect x="375" y="292" width="2" height="15" fill="rgb(247,161,47)"/><text x="378.00" y="302.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="377" y="292" width="3" height="15" fill="rgb(232,114,41)"/><text x="380.00" y="302.50"></text></g><g><title>array_item (mapping.c) (2 samples, 0.42%)</title><rect x="377" y="276" width="5" height="15" fill="rgb(214,46,36)"/><text x="380.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.21%)</title><rect x="380" y="292" width="2" height="15" fill="rgb(248,85,33)"/><text x="383.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="380" y="308" width="2" height="15" fill="rgb(244,159,11)"/><text x="383.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="380" y="324" width="2" height="15" fill="rgb(219,106,3)"/><text x="383.00" y="334.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (4 samples, 0.83%)</title><rect x="375" y="260" width="10" height="15" fill="rgb(243,149,32)"/><text x="378.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.21%)</title><rect x="382" y="276" width="3" height="15" fill="rgb(216,193,16)"/><text x="385.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="382" y="292" width="3" height="15" fill="rgb(209,212,14)"/><text x="385.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="382" y="308" width="3" height="15" fill="rgb(232,127,42)"/><text x="385.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (8 samples, 1.66%)</title><rect x="368" y="212" width="19" height="15" fill="rgb(239,149,31)"/><text x="371.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (8 samples, 1.66%)</title><rect x="368" y="228" width="19" height="15" fill="rgb(205,153,51)"/><text x="371.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (5 samples, 1.04%)</title><rect x="375" y="244" width="12" height="15" fill="rgb(229,163,26)"/><text x="378.00" y="254.50"></text></g><g><title>array_length (mapping.c) (1 samples, 0.21%)</title><rect x="385" y="260" width="2" height="15" fill="rgb(205,157,47)"/><text x="388.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="395" y="276" width="2" height="15" fill="rgb(211,94,10)"/><text x="398.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="395" y="292" width="2" height="15" fill="rgb(243,142,30)"/><text x="398.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="397" y="276" width="3" height="15" fill="rgb(233,34,30)"/><text x="400.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="397" y="292" width="3" height="15" fill="rgb(235,23,52)"/><text x="400.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.21%)</title><rect x="397" y="308" width="3" height="15" fill="rgb(224,147,48)"/><text x="400.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="397" y="324" width="3" height="15" fill="rgb(253,4,10)"/><text x="400.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="397" y="340" width="3" height="15" fill="rgb(240,71,50)"/><text x="400.00" y="350.50"></text></g><g><title>_aligned_cast_long_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="397" y="356" width="3" height="15" fill="rgb(207,176,0)"/><text x="400.00" y="366.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.21%)</title><rect x="402" y="308" width="2" height="15" fill="rgb(249,157,38)"/><text x="405.00" y="318.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.21%)</title><rect x="402" y="324" width="2" height="15" fill="rgb(215,30,36)"/><text x="405.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.62%)</title><rect x="400" y="276" width="7" height="15" fill="rgb(206,147,5)"/><text x="403.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.42%)</title><rect x="402" y="292" width="5" height="15" fill="rgb(223,37,10)"/><text x="405.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="404" y="308" width="3" height="15" fill="rgb(240,119,11)"/><text x="407.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="404" y="324" width="3" height="15" fill="rgb(218,219,42)"/><text x="407.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="404" y="340" width="3" height="15" fill="rgb(215,184,39)"/><text x="407.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.66%)</title><rect x="390" y="260" width="19" height="15" fill="rgb(210,96,40)"/><text x="393.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.21%)</title><rect x="407" y="276" width="2" height="15" fill="rgb(230,94,1)"/><text x="410.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (11 samples, 2.29%)</title><rect x="387" y="212" width="27" height="15" fill="rgb(246,100,25)"/><text x="390.00" y="222.50">_..</text></g><g><title>array_add (number.c) (11 samples, 2.29%)</title><rect x="387" y="228" width="27" height="15" fill="rgb(248,111,16)"/><text x="390.00" y="238.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.08%)</title><rect x="390" y="244" width="24" height="15" fill="rgb(233,107,20)"/><text x="393.00" y="254.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (2 samples, 0.42%)</title><rect x="409" y="260" width="5" height="15" fill="rgb(219,168,11)"/><text x="412.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.21%)</title><rect x="412" y="276" width="2" height="15" fill="rgb(254,81,5)"/><text x="415.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.21%)</title><rect x="414" y="212" width="3" height="15" fill="rgb(244,60,20)"/><text x="417.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.21%)</title><rect x="417" y="212" width="2" height="15" fill="rgb(233,19,45)"/><text x="420.00" y="222.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.21%)</title><rect x="431" y="244" width="3" height="15" fill="rgb(221,34,35)"/><text x="434.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="431" y="260" width="3" height="15" fill="rgb(230,151,18)"/><text x="434.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="434" y="260" width="2" height="15" fill="rgb(224,213,20)"/><text x="437.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="434" y="276" width="2" height="15" fill="rgb(221,218,28)"/><text x="437.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.21%)</title><rect x="434" y="292" width="2" height="15" fill="rgb(208,130,35)"/><text x="437.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.21%)</title><rect x="441" y="308" width="3" height="15" fill="rgb(226,225,13)"/><text x="444.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="441" y="324" width="3" height="15" fill="rgb(227,25,31)"/><text x="444.00" y="334.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.21%)</title><rect x="441" y="340" width="3" height="15" fill="rgb(229,20,15)"/><text x="444.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.21%)</title><rect x="446" y="324" width="3" height="15" fill="rgb(207,0,5)"/><text x="449.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.62%)</title><rect x="444" y="308" width="7" height="15" fill="rgb(234,135,29)"/><text x="447.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.21%)</title><rect x="449" y="324" width="2" height="15" fill="rgb(252,93,14)"/><text x="452.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.25%)</title><rect x="439" y="276" width="15" height="15" fill="rgb(212,169,23)"/><text x="442.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.25%)</title><rect x="439" y="292" width="15" height="15" fill="rgb(210,62,29)"/><text x="442.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.21%)</title><rect x="451" y="308" width="3" height="15" fill="rgb(212,58,17)"/><text x="454.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (12 samples, 2.49%)</title><rect x="427" y="228" width="29" height="15" fill="rgb(220,197,46)"/><text x="430.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.87%)</title><rect x="434" y="244" width="22" height="15" fill="rgb(214,24,11)"/><text x="437.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.66%)</title><rect x="436" y="260" width="20" height="15" fill="rgb(250,59,34)"/><text x="439.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="454" y="276" width="2" height="15" fill="rgb(208,118,49)"/><text x="457.00" y="286.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (5 samples, 1.04%)</title><rect x="463" y="276" width="13" height="15" fill="rgb(225,171,48)"/><text x="466.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.83%)</title><rect x="466" y="292" width="10" height="15" fill="rgb(230,182,4)"/><text x="469.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 0.83%)</title><rect x="466" y="308" width="10" height="15" fill="rgb(242,90,2)"/><text x="469.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.62%)</title><rect x="468" y="324" width="8" height="15" fill="rgb(233,130,21)"/><text x="471.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.62%)</title><rect x="468" y="340" width="8" height="15" fill="rgb(222,172,25)"/><text x="471.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.21%)</title><rect x="473" y="356" width="3" height="15" fill="rgb(225,117,0)"/><text x="476.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="481" y="292" width="2" height="15" fill="rgb(240,98,29)"/><text x="484.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.21%)</title><rect x="483" y="292" width="2" height="15" fill="rgb(242,181,27)"/><text x="486.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.21%)</title><rect x="483" y="308" width="2" height="15" fill="rgb(234,130,22)"/><text x="486.00" y="318.50"></text></g><g><title>0x7fa27a3db120 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="483" y="324" width="2" height="15" fill="rgb(233,2,37)"/><text x="486.00" y="334.50"></text></g><g><title>array_astype (methods.c) (5 samples, 1.04%)</title><rect x="476" y="276" width="12" height="15" fill="rgb(211,180,11)"/><text x="479.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.21%)</title><rect x="485" y="292" width="3" height="15" fill="rgb(217,27,17)"/><text x="488.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="485" y="308" width="3" height="15" fill="rgb(231,160,21)"/><text x="488.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.21%)</title><rect x="485" y="324" width="3" height="15" fill="rgb(223,134,24)"/><text x="488.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="485" y="340" width="3" height="15" fill="rgb(241,46,47)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="485" y="356" width="3" height="15" fill="rgb(220,26,25)"/><text x="488.00" y="366.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="485" y="372" width="3" height="15" fill="rgb(243,93,31)"/><text x="488.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (20 samples, 4.16%)</title><rect x="456" y="228" width="49" height="15" fill="rgb(228,24,33)"/><text x="459.00" y="238.50">_run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (20 samples, 4.16%)</title><rect x="456" y="244" width="49" height="15" fill="rgb(208,147,12)"/><text x="459.00" y="254.50">_run..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (19 samples, 3.95%)</title><rect x="458" y="260" width="47" height="15" fill="rgb(253,14,8)"/><text x="461.00" y="270.50">_arg..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (7 samples, 1.46%)</title><rect x="488" y="276" width="17" height="15" fill="rgb(218,210,17)"/><text x="491.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.25%)</title><rect x="490" y="292" width="15" height="15" fill="rgb(248,80,40)"/><text x="493.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (6 samples, 1.25%)</title><rect x="490" y="308" width="15" height="15" fill="rgb(220,131,40)"/><text x="493.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.21%)</title><rect x="503" y="324" width="2" height="15" fill="rgb(215,219,17)"/><text x="506.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.21%)</title><rect x="503" y="340" width="2" height="15" fill="rgb(223,43,38)"/><text x="506.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.62%)</title><rect x="517" y="260" width="8" height="15" fill="rgb(234,216,18)"/><text x="520.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.62%)</title><rect x="517" y="276" width="8" height="15" fill="rgb(251,5,51)"/><text x="520.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (3 samples, 0.62%)</title><rect x="517" y="292" width="8" height="15" fill="rgb(217,137,52)"/><text x="520.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="522" y="308" width="3" height="15" fill="rgb(217,166,16)"/><text x="525.00" y="318.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="525" y="276" width="2" height="15" fill="rgb(211,96,16)"/><text x="528.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.21%)</title><rect x="527" y="276" width="3" height="15" fill="rgb(251,84,25)"/><text x="530.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="530" y="276" width="2" height="15" fill="rgb(211,159,13)"/><text x="533.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="530" y="292" width="2" height="15" fill="rgb(251,97,41)"/><text x="533.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="530" y="308" width="2" height="15" fill="rgb(238,64,35)"/><text x="533.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.21%)</title><rect x="530" y="324" width="2" height="15" fill="rgb(221,213,7)"/><text x="533.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="532" y="276" width="2" height="15" fill="rgb(246,152,19)"/><text x="535.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.21%)</title><rect x="532" y="292" width="2" height="15" fill="rgb(248,125,33)"/><text x="535.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (13 samples, 2.70%)</title><rect x="505" y="228" width="32" height="15" fill="rgb(244,194,11)"/><text x="508.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.66%)</title><rect x="517" y="244" width="20" height="15" fill="rgb(216,137,9)"/><text x="520.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.04%)</title><rect x="525" y="260" width="12" height="15" fill="rgb(228,226,42)"/><text x="528.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.21%)</title><rect x="534" y="276" width="3" height="15" fill="rgb(226,194,18)"/><text x="537.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="537" y="260" width="2" height="15" fill="rgb(250,28,17)"/><text x="540.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="537" y="276" width="2" height="15" fill="rgb(231,56,6)"/><text x="540.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="537" y="292" width="2" height="15" fill="rgb(237,168,45)"/><text x="540.00" y="302.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.21%)</title><rect x="539" y="276" width="3" height="15" fill="rgb(252,20,19)"/><text x="542.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.21%)</title><rect x="542" y="292" width="2" height="15" fill="rgb(254,227,1)"/><text x="545.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.21%)</title><rect x="542" y="308" width="2" height="15" fill="rgb(217,188,3)"/><text x="545.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.21%)</title><rect x="542" y="324" width="2" height="15" fill="rgb(235,66,24)"/><text x="545.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.62%)</title><rect x="542" y="276" width="7" height="15" fill="rgb(215,94,2)"/><text x="545.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="544" y="292" width="5" height="15" fill="rgb(215,204,19)"/><text x="547.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.21%)</title><rect x="547" y="308" width="2" height="15" fill="rgb(252,98,20)"/><text x="550.00" y="318.50"></text></g><g><title>0x7fa27a53c997 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="547" y="324" width="2" height="15" fill="rgb(247,9,43)"/><text x="550.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (6 samples, 1.25%)</title><rect x="537" y="228" width="15" height="15" fill="rgb(237,41,40)"/><text x="540.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.25%)</title><rect x="537" y="244" width="15" height="15" fill="rgb(240,53,31)"/><text x="540.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.04%)</title><rect x="539" y="260" width="13" height="15" fill="rgb(222,182,44)"/><text x="542.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="549" y="276" width="3" height="15" fill="rgb(211,205,22)"/><text x="552.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.21%)</title><rect x="549" y="292" width="3" height="15" fill="rgb(229,106,9)"/><text x="552.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="559" y="260" width="2" height="15" fill="rgb(234,170,38)"/><text x="562.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="559" y="276" width="2" height="15" fill="rgb(234,95,31)"/><text x="562.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="559" y="292" width="2" height="15" fill="rgb(237,151,19)"/><text x="562.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.21%)</title><rect x="561" y="260" width="3" height="15" fill="rgb(206,154,51)"/><text x="564.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.21%)</title><rect x="561" y="276" width="3" height="15" fill="rgb(243,140,43)"/><text x="564.00" y="286.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.21%)</title><rect x="571" y="340" width="3" height="15" fill="rgb(211,42,15)"/><text x="574.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (10 samples, 2.08%)</title><rect x="552" y="228" width="24" height="15" fill="rgb(237,184,23)"/><text x="555.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 2.08%)</title><rect x="552" y="244" width="24" height="15" fill="rgb(248,153,6)"/><text x="555.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (5 samples, 1.04%)</title><rect x="564" y="260" width="12" height="15" fill="rgb(243,213,17)"/><text x="567.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.83%)</title><rect x="566" y="276" width="10" height="15" fill="rgb(239,2,11)"/><text x="569.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 0.62%)</title><rect x="569" y="292" width="7" height="15" fill="rgb(243,94,17)"/><text x="572.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 0.62%)</title><rect x="569" y="308" width="7" height="15" fill="rgb(251,123,15)"/><text x="572.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 0.62%)</title><rect x="569" y="324" width="7" height="15" fill="rgb(211,192,29)"/><text x="572.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.21%)</title><rect x="574" y="340" width="2" height="15" fill="rgb(225,8,25)"/><text x="577.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.21%)</title><rect x="574" y="356" width="2" height="15" fill="rgb(220,104,27)"/><text x="577.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="574" y="372" width="2" height="15" fill="rgb(210,197,14)"/><text x="577.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.21%)</title><rect x="574" y="388" width="2" height="15" fill="rgb(242,183,35)"/><text x="577.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="574" y="404" width="2" height="15" fill="rgb(232,221,24)"/><text x="577.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="574" y="420" width="2" height="15" fill="rgb(229,2,33)"/><text x="577.00" y="430.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.21%)</title><rect x="588" y="372" width="3" height="15" fill="rgb(221,182,36)"/><text x="591.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.21%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(215,13,45)"/><text x="594.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.21%)</title><rect x="591" y="388" width="2" height="15" fill="rgb(253,127,14)"/><text x="594.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="591" y="404" width="2" height="15" fill="rgb(207,164,19)"/><text x="594.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="591" y="420" width="2" height="15" fill="rgb(209,175,49)"/><text x="594.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.21%)</title><rect x="591" y="436" width="2" height="15" fill="rgb(225,175,26)"/><text x="594.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="591" y="452" width="2" height="15" fill="rgb(217,130,41)"/><text x="594.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.62%)</title><rect x="588" y="356" width="8" height="15" fill="rgb(217,64,35)"/><text x="591.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.21%)</title><rect x="593" y="372" width="3" height="15" fill="rgb(234,164,46)"/><text x="596.00" y="382.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (7 samples, 1.46%)</title><rect x="581" y="244" width="17" height="15" fill="rgb(221,169,23)"/><text x="584.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.46%)</title><rect x="581" y="260" width="17" height="15" fill="rgb(219,91,7)"/><text x="584.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (7 samples, 1.46%)</title><rect x="581" y="276" width="17" height="15" fill="rgb(225,73,14)"/><text x="584.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (7 samples, 1.46%)</title><rect x="581" y="292" width="17" height="15" fill="rgb(250,198,50)"/><text x="584.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 1.04%)</title><rect x="586" y="308" width="12" height="15" fill="rgb(212,194,19)"/><text x="589.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.04%)</title><rect x="586" y="324" width="12" height="15" fill="rgb(248,123,39)"/><text x="589.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.83%)</title><rect x="588" y="340" width="10" height="15" fill="rgb(248,86,35)"/><text x="591.00" y="350.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.21%)</title><rect x="596" y="356" width="2" height="15" fill="rgb(227,92,54)"/><text x="599.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.21%)</title><rect x="598" y="276" width="3" height="15" fill="rgb(209,191,42)"/><text x="601.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.21%)</title><rect x="601" y="276" width="2" height="15" fill="rgb(238,136,51)"/><text x="604.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.21%)</title><rect x="601" y="292" width="2" height="15" fill="rgb(231,103,20)"/><text x="604.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="606" y="292" width="2" height="15" fill="rgb(234,121,5)"/><text x="609.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="606" y="308" width="2" height="15" fill="rgb(226,99,0)"/><text x="609.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="606" y="324" width="2" height="15" fill="rgb(247,74,15)"/><text x="609.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.21%)</title><rect x="606" y="340" width="2" height="15" fill="rgb(216,158,29)"/><text x="609.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="606" y="356" width="2" height="15" fill="rgb(236,99,14)"/><text x="609.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (15 samples, 3.12%)</title><rect x="576" y="228" width="37" height="15" fill="rgb(246,112,39)"/><text x="579.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.25%)</title><rect x="598" y="244" width="15" height="15" fill="rgb(211,51,28)"/><text x="601.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.25%)</title><rect x="598" y="260" width="15" height="15" fill="rgb(221,7,54)"/><text x="601.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.83%)</title><rect x="603" y="276" width="10" height="15" fill="rgb(229,109,19)"/><text x="606.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="608" y="292" width="5" height="15" fill="rgb(235,53,54)"/><text x="611.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.21%)</title><rect x="611" y="308" width="2" height="15" fill="rgb(205,33,39)"/><text x="614.00" y="318.50"></text></g><g><title>0x7fa27a53c997 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="611" y="324" width="2" height="15" fill="rgb(227,74,25)"/><text x="614.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.21%)</title><rect x="633" y="356" width="2" height="15" fill="rgb(250,179,12)"/><text x="636.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.21%)</title><rect x="633" y="372" width="2" height="15" fill="rgb(237,32,11)"/><text x="636.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="633" y="388" width="2" height="15" fill="rgb(205,173,53)"/><text x="636.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="633" y="404" width="2" height="15" fill="rgb(224,117,45)"/><text x="636.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="633" y="420" width="2" height="15" fill="rgb(243,10,4)"/><text x="636.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.21%)</title><rect x="633" y="436" width="2" height="15" fill="rgb(240,129,8)"/><text x="636.00" y="446.50"></text></g><g><title>0x7fa27a3dad62 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="633" y="452" width="2" height="15" fill="rgb(239,176,44)"/><text x="636.00" y="462.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (217 samples, 45.11%)</title><rect x="108" y="68" width="532" height="15" fill="rgb(215,153,11)"/><text x="111.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (217 samples, 45.11%)</title><rect x="108" y="84" width="532" height="15" fill="rgb(206,166,51)"/><text x="111.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (217 samples, 45.11%)</title><rect x="108" y="100" width="532" height="15" fill="rgb(247,77,21)"/><text x="111.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (217 samples, 45.11%)</title><rect x="108" y="116" width="532" height="15" fill="rgb(232,191,0)"/><text x="111.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (216 samples, 44.91%)</title><rect x="110" y="132" width="530" height="15" fill="rgb(254,16,29)"/><text x="113.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (216 samples, 44.91%)</title><rect x="110" y="148" width="530" height="15" fill="rgb(240,81,38)"/><text x="113.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (216 samples, 44.91%)</title><rect x="110" y="164" width="530" height="15" fill="rgb(241,68,12)"/><text x="113.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (207 samples, 43.04%)</title><rect x="132" y="180" width="508" height="15" fill="rgb(254,196,0)"/><text x="135.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (136 samples, 28.27%)</title><rect x="306" y="196" width="334" height="15" fill="rgb(208,51,22)"/><text x="309.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (90 samples, 18.71%)</title><rect x="419" y="212" width="221" height="15" fill="rgb(237,109,33)"/><text x="422.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (11 samples, 2.29%)</title><rect x="613" y="228" width="27" height="15" fill="rgb(243,1,24)"/><text x="616.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (11 samples, 2.29%)</title><rect x="613" y="244" width="27" height="15" fill="rgb(228,60,0)"/><text x="616.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.87%)</title><rect x="618" y="260" width="22" height="15" fill="rgb(242,68,9)"/><text x="621.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py) (8 samples, 1.66%)</title><rect x="620" y="276" width="20" height="15" fill="rgb(223,54,40)"/><text x="623.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (8 samples, 1.66%)</title><rect x="620" y="292" width="20" height="15" fill="rgb(250,223,14)"/><text x="623.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.83%)</title><rect x="630" y="308" width="10" height="15" fill="rgb(245,218,36)"/><text x="633.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.62%)</title><rect x="633" y="324" width="7" height="15" fill="rgb(213,119,24)"/><text x="636.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.62%)</title><rect x="633" y="340" width="7" height="15" fill="rgb(227,74,8)"/><text x="636.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.42%)</title><rect x="635" y="356" width="5" height="15" fill="rgb(243,62,25)"/><text x="638.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="635" y="372" width="5" height="15" fill="rgb(228,190,51)"/><text x="638.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="635" y="388" width="5" height="15" fill="rgb(219,20,21)"/><text x="638.00" y="398.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="638" y="404" width="2" height="15" fill="rgb(211,51,0)"/><text x="641.00" y="414.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="638" y="420" width="2" height="15" fill="rgb(229,90,17)"/><text x="641.00" y="430.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.42%)</title><rect x="669" y="228" width="5" height="15" fill="rgb(205,103,15)"/><text x="672.00" y="238.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.42%)</title><rect x="674" y="228" width="5" height="15" fill="rgb(206,173,31)"/><text x="677.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.21%)</title><rect x="679" y="228" width="3" height="15" fill="rgb(246,93,0)"/><text x="682.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.83%)</title><rect x="687" y="244" width="9" height="15" fill="rgb(211,46,2)"/><text x="690.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="696" y="244" width="5" height="15" fill="rgb(233,103,8)"/><text x="699.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 1.87%)</title><rect x="682" y="228" width="22" height="15" fill="rgb(233,188,31)"/><text x="685.00" y="238.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="701" y="244" width="3" height="15" fill="rgb(233,223,23)"/><text x="704.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.62%)</title><rect x="704" y="228" width="7" height="15" fill="rgb(212,187,13)"/><text x="707.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.04%)</title><rect x="711" y="228" width="12" height="15" fill="rgb(221,8,15)"/><text x="714.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.21%)</title><rect x="721" y="244" width="2" height="15" fill="rgb(206,194,18)"/><text x="724.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.21%)</title><rect x="721" y="260" width="2" height="15" fill="rgb(242,16,6)"/><text x="724.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.21%)</title><rect x="723" y="228" width="3" height="15" fill="rgb(243,13,30)"/><text x="726.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.21%)</title><rect x="723" y="244" width="3" height="15" fill="rgb(232,122,41)"/><text x="726.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (33 samples, 6.86%)</title><rect x="655" y="196" width="81" height="15" fill="rgb(219,32,12)"/><text x="658.00" y="206.50">_check_X ..</text></g><g><title>check_array (sklearn/utils/validation.py) (32 samples, 6.65%)</title><rect x="657" y="212" width="79" height="15" fill="rgb(244,210,16)"/><text x="660.00" y="222.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (4 samples, 0.83%)</title><rect x="726" y="228" width="10" height="15" fill="rgb(244,111,20)"/><text x="729.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.83%)</title><rect x="726" y="244" width="10" height="15" fill="rgb(206,5,41)"/><text x="729.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.21%)</title><rect x="741" y="228" width="2" height="15" fill="rgb(243,50,51)"/><text x="744.00" y="238.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="741" y="244" width="2" height="15" fill="rgb(222,184,54)"/><text x="744.00" y="254.50"></text></g><g><title>FLOAT_setitem (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="741" y="260" width="2" height="15" fill="rgb(212,98,31)"/><text x="744.00" y="270.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="741" y="276" width="2" height="15" fill="rgb(222,182,38)"/><text x="744.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.42%)</title><rect x="743" y="244" width="5" height="15" fill="rgb(241,71,2)"/><text x="746.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="745" y="260" width="3" height="15" fill="rgb(210,82,5)"/><text x="748.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (3 samples, 0.62%)</title><rect x="743" y="228" width="7" height="15" fill="rgb(235,83,53)"/><text x="746.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="748" y="244" width="2" height="15" fill="rgb(227,82,47)"/><text x="751.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c) (5 samples, 1.04%)</title><rect x="741" y="212" width="12" height="15" fill="rgb(211,46,17)"/><text x="744.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="750" y="228" width="3" height="15" fill="rgb(231,205,46)"/><text x="753.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="750" y="244" width="3" height="15" fill="rgb(228,210,43)"/><text x="753.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="750" y="260" width="3" height="15" fill="rgb(231,207,26)"/><text x="753.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="755" y="260" width="3" height="15" fill="rgb(227,101,47)"/><text x="758.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="755" y="276" width="3" height="15" fill="rgb(228,148,41)"/><text x="758.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="758" y="276" width="2" height="15" fill="rgb(214,134,31)"/><text x="761.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="758" y="292" width="2" height="15" fill="rgb(221,137,9)"/><text x="761.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="758" y="260" width="5" height="15" fill="rgb(222,132,3)"/><text x="761.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="760" y="276" width="3" height="15" fill="rgb(230,55,1)"/><text x="763.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="760" y="292" width="3" height="15" fill="rgb(243,189,14)"/><text x="763.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="760" y="308" width="3" height="15" fill="rgb(211,115,8)"/><text x="763.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.83%)</title><rect x="755" y="244" width="10" height="15" fill="rgb(229,62,3)"/><text x="758.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="763" y="260" width="2" height="15" fill="rgb(220,221,8)"/><text x="766.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.21%)</title><rect x="763" y="276" width="2" height="15" fill="rgb(214,80,5)"/><text x="766.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="763" y="292" width="2" height="15" fill="rgb(220,155,22)"/><text x="766.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="763" y="308" width="2" height="15" fill="rgb(239,196,18)"/><text x="766.00" y="318.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.21%)</title><rect x="765" y="244" width="3" height="15" fill="rgb(250,131,28)"/><text x="768.00" y="254.50"></text></g><g><title>array_richcompare (arrayobject.c) (7 samples, 1.46%)</title><rect x="753" y="212" width="17" height="15" fill="rgb(212,188,16)"/><text x="756.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.46%)</title><rect x="753" y="228" width="17" height="15" fill="rgb(242,124,27)"/><text x="756.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="768" y="244" width="2" height="15" fill="rgb(232,32,6)"/><text x="771.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="768" y="260" width="2" height="15" fill="rgb(211,57,44)"/><text x="771.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="768" y="276" width="2" height="15" fill="rgb(251,150,42)"/><text x="771.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.21%)</title><rect x="787" y="228" width="3" height="15" fill="rgb(237,50,48)"/><text x="790.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.42%)</title><rect x="790" y="228" width="5" height="15" fill="rgb(231,132,33)"/><text x="793.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.42%)</title><rect x="795" y="228" width="4" height="15" fill="rgb(223,110,4)"/><text x="798.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c) (1 samples, 0.21%)</title><rect x="797" y="244" width="2" height="15" fill="rgb(247,99,35)"/><text x="800.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.21%)</title><rect x="797" y="260" width="2" height="15" fill="rgb(250,44,14)"/><text x="800.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.21%)</title><rect x="797" y="276" width="2" height="15" fill="rgb(214,171,28)"/><text x="800.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.25%)</title><rect x="799" y="228" width="15" height="15" fill="rgb(253,101,29)"/><text x="802.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="812" y="244" width="2" height="15" fill="rgb(248,151,8)"/><text x="815.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.46%)</title><rect x="814" y="228" width="17" height="15" fill="rgb(245,25,31)"/><text x="817.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.42%)</title><rect x="826" y="244" width="5" height="15" fill="rgb(231,29,0)"/><text x="829.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.42%)</title><rect x="826" y="260" width="5" height="15" fill="rgb(218,173,15)"/><text x="829.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.21%)</title><rect x="831" y="228" width="3" height="15" fill="rgb(238,141,2)"/><text x="834.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.42%)</title><rect x="834" y="228" width="5" height="15" fill="rgb(230,50,51)"/><text x="837.00" y="238.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;) (3 samples, 0.62%)</title><rect x="839" y="228" width="7" height="15" fill="rgb(212,229,2)"/><text x="842.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.42%)</title><rect x="841" y="244" width="5" height="15" fill="rgb(238,49,36)"/><text x="844.00" y="254.50"></text></g><g><title>array_may_share_memory (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="844" y="260" width="2" height="15" fill="rgb(220,151,14)"/><text x="847.00" y="270.50"></text></g><g><title>array_shares_memory_impl (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="844" y="276" width="2" height="15" fill="rgb(228,20,15)"/><text x="847.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (33 samples, 6.86%)</title><rect x="770" y="212" width="81" height="15" fill="rgb(243,144,16)"/><text x="773.00" y="222.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.42%)</title><rect x="846" y="228" width="5" height="15" fill="rgb(216,38,28)"/><text x="849.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.42%)</title><rect x="846" y="244" width="5" height="15" fill="rgb(213,136,50)"/><text x="849.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="851" y="244" width="5" height="15" fill="rgb(215,185,16)"/><text x="854.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="851" y="260" width="5" height="15" fill="rgb(240,194,38)"/><text x="854.00" y="270.50"></text></g><g><title>BOOL_logical_not (loops.c.src) (2 samples, 0.42%)</title><rect x="851" y="276" width="5" height="15" fill="rgb(247,89,48)"/><text x="854.00" y="286.50"></text></g><g><title>run_unary_simd_logical_not_BOOL (simd.inc.src) (1 samples, 0.21%)</title><rect x="853" y="292" width="3" height="15" fill="rgb(224,154,13)"/><text x="856.00" y="302.50"></text></g><g><title>sse2_logical_not_BOOL (simd.inc.src) (1 samples, 0.21%)</title><rect x="853" y="308" width="3" height="15" fill="rgb(225,200,52)"/><text x="856.00" y="318.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (83 samples, 17.26%)</title><rect x="655" y="180" width="203" height="15" fill="rgb(227,221,2)"/><text x="658.00" y="190.50">_check_X (sklearn/naive_ba..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (50 samples, 10.40%)</title><rect x="736" y="196" width="122" height="15" fill="rgb(222,227,25)"/><text x="739.00" y="206.50">binarize (sklea..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.62%)</title><rect x="851" y="212" width="7" height="15" fill="rgb(228,221,12)"/><text x="854.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.62%)</title><rect x="851" y="228" width="7" height="15" fill="rgb(240,76,8)"/><text x="854.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="856" y="244" width="2" height="15" fill="rgb(249,110,45)"/><text x="859.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="856" y="260" width="2" height="15" fill="rgb(214,31,54)"/><text x="859.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.21%)</title><rect x="856" y="276" width="2" height="15" fill="rgb(241,131,42)"/><text x="859.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.21%)</title><rect x="873" y="196" width="2" height="15" fill="rgb(208,169,39)"/><text x="876.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.21%)</title><rect x="873" y="212" width="2" height="15" fill="rgb(240,60,52)"/><text x="876.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="873" y="228" width="2" height="15" fill="rgb(216,28,28)"/><text x="876.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.21%)</title><rect x="873" y="244" width="2" height="15" fill="rgb(246,181,8)"/><text x="876.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="873" y="260" width="2" height="15" fill="rgb(218,5,50)"/><text x="876.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="875" y="196" width="3" height="15" fill="rgb(205,199,5)"/><text x="878.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="875" y="212" width="3" height="15" fill="rgb(214,121,40)"/><text x="878.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="875" y="228" width="3" height="15" fill="rgb(221,105,50)"/><text x="878.00" y="238.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="878" y="244" width="2" height="15" fill="rgb(243,97,11)"/><text x="881.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="878" y="260" width="2" height="15" fill="rgb(233,5,12)"/><text x="881.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.21%)</title><rect x="878" y="276" width="2" height="15" fill="rgb(238,185,29)"/><text x="881.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.21%)</title><rect x="880" y="276" width="3" height="15" fill="rgb(244,51,20)"/><text x="883.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="880" y="292" width="3" height="15" fill="rgb(240,13,47)"/><text x="883.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="880" y="308" width="3" height="15" fill="rgb(244,183,49)"/><text x="883.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="880" y="324" width="3" height="15" fill="rgb(211,112,8)"/><text x="883.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="880" y="340" width="3" height="15" fill="rgb(217,96,16)"/><text x="883.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="880" y="244" width="5" height="15" fill="rgb(208,186,10)"/><text x="883.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (2 samples, 0.42%)</title><rect x="880" y="260" width="5" height="15" fill="rgb(241,191,26)"/><text x="883.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="883" y="276" width="2" height="15" fill="rgb(237,165,21)"/><text x="886.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="883" y="292" width="2" height="15" fill="rgb(220,109,41)"/><text x="886.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="883" y="308" width="2" height="15" fill="rgb(252,157,13)"/><text x="886.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="885" y="244" width="3" height="15" fill="rgb(225,18,52)"/><text x="888.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="885" y="260" width="3" height="15" fill="rgb(238,82,25)"/><text x="888.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="885" y="276" width="3" height="15" fill="rgb(231,123,13)"/><text x="888.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.04%)</title><rect x="878" y="228" width="12" height="15" fill="rgb(234,76,35)"/><text x="881.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="888" y="244" width="2" height="15" fill="rgb(234,28,31)"/><text x="891.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.21%)</title><rect x="888" y="260" width="2" height="15" fill="rgb(249,63,6)"/><text x="891.00" y="270.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="888" y="276" width="2" height="15" fill="rgb(221,203,26)"/><text x="891.00" y="286.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="888" y="292" width="2" height="15" fill="rgb(240,11,31)"/><text x="891.00" y="302.50"></text></g><g><title>array_subtract (number.c) (6 samples, 1.25%)</title><rect x="878" y="196" width="15" height="15" fill="rgb(242,94,36)"/><text x="881.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.25%)</title><rect x="878" y="212" width="15" height="15" fill="rgb(225,106,52)"/><text x="881.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="890" y="228" width="3" height="15" fill="rgb(225,133,8)"/><text x="893.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="890" y="244" width="3" height="15" fill="rgb(237,27,19)"/><text x="893.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="890" y="260" width="3" height="15" fill="rgb(251,43,52)"/><text x="893.00" y="270.50"></text></g><g><title>0x7fa27a3db120 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="895" y="228" width="3" height="15" fill="rgb(222,201,5)"/><text x="898.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="898" y="260" width="2" height="15" fill="rgb(209,149,38)"/><text x="901.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="898" y="276" width="2" height="15" fill="rgb(234,146,34)"/><text x="901.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="898" y="292" width="2" height="15" fill="rgb(221,210,29)"/><text x="901.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.21%)</title><rect x="898" y="308" width="2" height="15" fill="rgb(241,45,45)"/><text x="901.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.21%)</title><rect x="898" y="324" width="2" height="15" fill="rgb(239,26,33)"/><text x="901.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.21%)</title><rect x="900" y="276" width="2" height="15" fill="rgb(216,180,11)"/><text x="903.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.21%)</title><rect x="902" y="308" width="3" height="15" fill="rgb(211,170,0)"/><text x="905.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (2 samples, 0.42%)</title><rect x="905" y="340" width="5" height="15" fill="rgb(231,92,30)"/><text x="908.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.21%)</title><rect x="907" y="356" width="3" height="15" fill="rgb(211,17,18)"/><text x="910.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.83%)</title><rect x="902" y="292" width="10" height="15" fill="rgb(229,94,41)"/><text x="905.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.62%)</title><rect x="905" y="308" width="7" height="15" fill="rgb(238,34,20)"/><text x="908.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.62%)</title><rect x="905" y="324" width="7" height="15" fill="rgb(228,185,45)"/><text x="908.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="910" y="340" width="2" height="15" fill="rgb(249,23,6)"/><text x="913.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="910" y="356" width="2" height="15" fill="rgb(253,174,45)"/><text x="913.00" y="366.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="910" y="372" width="2" height="15" fill="rgb(218,9,43)"/><text x="913.00" y="382.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="910" y="388" width="2" height="15" fill="rgb(211,35,32)"/><text x="913.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.21%)</title><rect x="912" y="292" width="3" height="15" fill="rgb(205,125,32)"/><text x="915.00" y="302.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.21%)</title><rect x="912" y="308" width="3" height="15" fill="rgb(219,203,48)"/><text x="915.00" y="318.50"></text></g><g><title>array_sum (methods.c) (12 samples, 2.49%)</title><rect x="893" y="196" width="29" height="15" fill="rgb(247,143,0)"/><text x="896.00" y="206.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 2.29%)</title><rect x="895" y="212" width="27" height="15" fill="rgb(238,55,32)"/><text x="898.00" y="222.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 2.08%)</title><rect x="898" y="228" width="24" height="15" fill="rgb(248,107,10)"/><text x="901.00" y="238.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.08%)</title><rect x="898" y="244" width="24" height="15" fill="rgb(235,123,13)"/><text x="901.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.87%)</title><rect x="900" y="260" width="22" height="15" fill="rgb(245,26,53)"/><text x="903.00" y="270.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.66%)</title><rect x="902" y="276" width="20" height="15" fill="rgb(246,62,14)"/><text x="905.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.62%)</title><rect x="915" y="292" width="7" height="15" fill="rgb(227,1,35)"/><text x="918.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="917" y="308" width="5" height="15" fill="rgb(245,107,38)"/><text x="920.00" y="318.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="917" y="324" width="5" height="15" fill="rgb(209,166,40)"/><text x="920.00" y="334.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="917" y="340" width="5" height="15" fill="rgb(214,97,8)"/><text x="920.00" y="350.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.21%)</title><rect x="927" y="212" width="2" height="15" fill="rgb(237,118,25)"/><text x="930.00" y="222.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.21%)</title><rect x="929" y="292" width="3" height="15" fill="rgb(246,43,30)"/><text x="932.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.21%)</title><rect x="929" y="308" width="3" height="15" fill="rgb(216,2,32)"/><text x="932.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.21%)</title><rect x="929" y="324" width="3" height="15" fill="rgb(218,197,37)"/><text x="932.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.21%)</title><rect x="929" y="340" width="3" height="15" fill="rgb(239,212,29)"/><text x="932.00" y="350.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.21%)</title><rect x="929" y="356" width="3" height="15" fill="rgb(233,151,31)"/><text x="932.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.42%)</title><rect x="929" y="276" width="5" height="15" fill="rgb(210,34,49)"/><text x="932.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.21%)</title><rect x="932" y="292" width="2" height="15" fill="rgb(223,93,35)"/><text x="935.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="932" y="308" width="2" height="15" fill="rgb(247,107,5)"/><text x="935.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="932" y="324" width="2" height="15" fill="rgb(212,81,44)"/><text x="935.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="932" y="340" width="2" height="15" fill="rgb(237,16,48)"/><text x="935.00" y="350.50"></text></g><g><title>0x7fa2795dd2c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="932" y="356" width="2" height="15" fill="rgb(225,37,43)"/><text x="935.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.62%)</title><rect x="929" y="260" width="8" height="15" fill="rgb(237,162,19)"/><text x="932.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.21%)</title><rect x="934" y="276" width="3" height="15" fill="rgb(241,26,39)"/><text x="937.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.83%)</title><rect x="929" y="228" width="10" height="15" fill="rgb(228,127,5)"/><text x="932.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (4 samples, 0.83%)</title><rect x="929" y="244" width="10" height="15" fill="rgb(229,21,25)"/><text x="932.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="937" y="260" width="2" height="15" fill="rgb(240,193,13)"/><text x="940.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="937" y="276" width="2" height="15" fill="rgb(213,55,48)"/><text x="940.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.21%)</title><rect x="937" y="292" width="2" height="15" fill="rgb(227,79,28)"/><text x="940.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.21%)</title><rect x="937" y="308" width="2" height="15" fill="rgb(254,177,47)"/><text x="940.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="937" y="324" width="2" height="15" fill="rgb(243,7,14)"/><text x="940.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="937" y="340" width="2" height="15" fill="rgb(226,39,21)"/><text x="940.00" y="350.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (8 samples, 1.66%)</title><rect x="922" y="196" width="20" height="15" fill="rgb(213,137,44)"/><text x="925.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.04%)</title><rect x="929" y="212" width="13" height="15" fill="rgb(226,124,34)"/><text x="932.00" y="222.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.21%)</title><rect x="939" y="228" width="3" height="15" fill="rgb(209,157,6)"/><text x="942.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="944" y="260" width="3" height="15" fill="rgb(218,20,17)"/><text x="947.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.21%)</title><rect x="944" y="276" width="3" height="15" fill="rgb(209,153,32)"/><text x="947.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.62%)</title><rect x="942" y="244" width="7" height="15" fill="rgb(246,136,23)"/><text x="945.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.21%)</title><rect x="947" y="260" width="2" height="15" fill="rgb(225,170,44)"/><text x="950.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.83%)</title><rect x="942" y="228" width="10" height="15" fill="rgb(240,61,41)"/><text x="945.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="949" y="244" width="3" height="15" fill="rgb(207,62,0)"/><text x="952.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="949" y="260" width="3" height="15" fill="rgb(213,90,15)"/><text x="952.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="952" y="228" width="4" height="15" fill="rgb(238,155,41)"/><text x="955.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="954" y="244" width="2" height="15" fill="rgb(214,138,8)"/><text x="957.00" y="254.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (41 samples, 8.52%)</title><rect x="858" y="180" width="101" height="15" fill="rgb(244,116,12)"/><text x="861.00" y="190.50">_joint_log_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.46%)</title><rect x="942" y="196" width="17" height="15" fill="rgb(205,64,25)"/><text x="945.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.46%)</title><rect x="942" y="212" width="17" height="15" fill="rgb(247,203,41)"/><text x="945.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.21%)</title><rect x="956" y="228" width="3" height="15" fill="rgb(221,215,48)"/><text x="959.00" y="238.50"></text></g><g><title>0x7fa27a3db1d1 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="956" y="244" width="3" height="15" fill="rgb(254,146,31)"/><text x="959.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.62%)</title><rect x="959" y="180" width="7" height="15" fill="rgb(207,150,8)"/><text x="962.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.21%)</title><rect x="964" y="196" width="2" height="15" fill="rgb(248,127,22)"/><text x="967.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.21%)</title><rect x="964" y="212" width="2" height="15" fill="rgb(220,220,41)"/><text x="967.00" y="222.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.21%)</title><rect x="966" y="276" width="3" height="15" fill="rgb(214,134,54)"/><text x="969.00" y="286.50"></text></g><g><title>array_subtract (number.c) (2 samples, 0.42%)</title><rect x="966" y="180" width="5" height="15" fill="rgb(222,28,46)"/><text x="969.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.42%)</title><rect x="966" y="196" width="5" height="15" fill="rgb(250,211,19)"/><text x="969.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.42%)</title><rect x="966" y="212" width="5" height="15" fill="rgb(230,191,20)"/><text x="969.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="966" y="228" width="5" height="15" fill="rgb(236,0,39)"/><text x="969.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="966" y="244" width="5" height="15" fill="rgb(228,88,48)"/><text x="969.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.42%)</title><rect x="966" y="260" width="5" height="15" fill="rgb(219,83,35)"/><text x="969.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.21%)</title><rect x="969" y="276" width="2" height="15" fill="rgb(229,93,6)"/><text x="972.00" y="286.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.21%)</title><rect x="969" y="292" width="2" height="15" fill="rgb(211,95,36)"/><text x="972.00" y="302.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (2 samples, 0.42%)</title><rect x="974" y="212" width="5" height="15" fill="rgb(220,121,18)"/><text x="977.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.21%)</title><rect x="976" y="228" width="3" height="15" fill="rgb(228,162,33)"/><text x="979.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.21%)</title><rect x="976" y="244" width="3" height="15" fill="rgb(218,71,34)"/><text x="979.00" y="254.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (4 samples, 0.83%)</title><rect x="971" y="180" width="10" height="15" fill="rgb(223,46,8)"/><text x="974.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.83%)</title><rect x="971" y="196" width="10" height="15" fill="rgb(248,229,36)"/><text x="974.00" y="206.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.21%)</title><rect x="979" y="212" width="2" height="15" fill="rgb(239,207,18)"/><text x="982.00" y="222.50"></text></g><g><title>pyobject_array_insert (arrayfunction_override.c) (1 samples, 0.21%)</title><rect x="979" y="228" width="2" height="15" fill="rgb(248,5,16)"/><text x="982.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 1.04%)</title><rect x="981" y="180" width="12" height="15" fill="rgb(224,206,30)"/><text x="984.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.21%)</title><rect x="991" y="196" width="2" height="15" fill="rgb(219,177,32)"/><text x="994.00" y="206.50"></text></g><g><title>0x7fa27a3db1d1 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1030" y="228" width="2" height="15" fill="rgb(245,202,7)"/><text x="1033.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (2 samples, 0.42%)</title><rect x="1030" y="196" width="5" height="15" fill="rgb(209,152,22)"/><text x="1033.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.42%)</title><rect x="1030" y="212" width="5" height="15" fill="rgb(211,14,1)"/><text x="1033.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.21%)</title><rect x="1032" y="228" width="3" height="15" fill="rgb(217,25,11)"/><text x="1035.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.42%)</title><rect x="1035" y="196" width="5" height="15" fill="rgb(254,57,32)"/><text x="1038.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.21%)</title><rect x="1037" y="212" width="3" height="15" fill="rgb(219,121,16)"/><text x="1040.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.21%)</title><rect x="1037" y="228" width="3" height="15" fill="rgb(223,160,26)"/><text x="1040.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.42%)</title><rect x="1042" y="212" width="5" height="15" fill="rgb(237,75,9)"/><text x="1045.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="1045" y="228" width="2" height="15" fill="rgb(252,4,27)"/><text x="1048.00" y="238.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py) (5 samples, 1.04%)</title><rect x="1040" y="196" width="12" height="15" fill="rgb(245,137,33)"/><text x="1043.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.42%)</title><rect x="1047" y="212" width="5" height="15" fill="rgb(229,187,24)"/><text x="1050.00" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.21%)</title><rect x="1077" y="260" width="2" height="15" fill="rgb(235,220,22)"/><text x="1080.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1079" y="324" width="3" height="15" fill="rgb(205,70,30)"/><text x="1082.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1079" y="340" width="3" height="15" fill="rgb(208,101,8)"/><text x="1082.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.21%)</title><rect x="1082" y="324" width="2" height="15" fill="rgb(246,124,43)"/><text x="1085.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.21%)</title><rect x="1082" y="340" width="2" height="15" fill="rgb(218,160,10)"/><text x="1085.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1082" y="356" width="2" height="15" fill="rgb(234,138,35)"/><text x="1085.00" y="366.50"></text></g><g><title>0x7fa27a372aae (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1082" y="372" width="2" height="15" fill="rgb(215,197,18)"/><text x="1085.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="1084" y="372" width="2" height="15" fill="rgb(212,90,14)"/><text x="1087.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.42%)</title><rect x="1084" y="340" width="5" height="15" fill="rgb(245,13,18)"/><text x="1087.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.42%)</title><rect x="1084" y="356" width="5" height="15" fill="rgb(209,171,47)"/><text x="1087.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="1086" y="372" width="3" height="15" fill="rgb(232,82,52)"/><text x="1089.00" y="382.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (3 samples, 0.62%)</title><rect x="1084" y="324" width="7" height="15" fill="rgb(209,40,32)"/><text x="1087.00" y="334.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.21%)</title><rect x="1089" y="340" width="2" height="15" fill="rgb(221,17,8)"/><text x="1092.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="1089" y="356" width="2" height="15" fill="rgb(254,76,34)"/><text x="1092.00" y="366.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.21%)</title><rect x="1089" y="372" width="2" height="15" fill="rgb(252,165,1)"/><text x="1092.00" y="382.50"></text></g><g><title>PyArray_FLAGS (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="1089" y="388" width="2" height="15" fill="rgb(218,75,28)"/><text x="1092.00" y="398.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (17 samples, 3.53%)</title><rect x="1052" y="196" width="42" height="15" fill="rgb(238,132,35)"/><text x="1055.00" y="206.50">ama..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (17 samples, 3.53%)</title><rect x="1052" y="212" width="42" height="15" fill="rgb(211,203,28)"/><text x="1055.00" y="222.50">arr..</text></g><g><title>amax (numpy/core/fromnumeric.py) (14 samples, 2.91%)</title><rect x="1059" y="228" width="35" height="15" fill="rgb(238,98,41)"/><text x="1062.00" y="238.50">am..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (14 samples, 2.91%)</title><rect x="1059" y="244" width="35" height="15" fill="rgb(242,108,9)"/><text x="1062.00" y="254.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 1.25%)</title><rect x="1079" y="260" width="15" height="15" fill="rgb(247,61,34)"/><text x="1082.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.25%)</title><rect x="1079" y="276" width="15" height="15" fill="rgb(241,125,30)"/><text x="1082.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.25%)</title><rect x="1079" y="292" width="15" height="15" fill="rgb(252,76,24)"/><text x="1082.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 1.25%)</title><rect x="1079" y="308" width="15" height="15" fill="rgb(249,228,50)"/><text x="1082.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1091" y="324" width="3" height="15" fill="rgb(221,144,50)"/><text x="1094.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (1 samples, 0.21%)</title><rect x="1091" y="340" width="3" height="15" fill="rgb(227,175,2)"/><text x="1094.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (1 samples, 0.21%)</title><rect x="1091" y="356" width="3" height="15" fill="rgb(228,149,8)"/><text x="1094.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (1 samples, 0.21%)</title><rect x="1091" y="372" width="3" height="15" fill="rgb(241,106,17)"/><text x="1094.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.21%)</title><rect x="1091" y="388" width="3" height="15" fill="rgb(237,61,41)"/><text x="1094.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.21%)</title><rect x="1091" y="404" width="3" height="15" fill="rgb(212,185,32)"/><text x="1094.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1091" y="420" width="3" height="15" fill="rgb(215,9,52)"/><text x="1094.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.21%)</title><rect x="1094" y="212" width="2" height="15" fill="rgb(233,97,30)"/><text x="1097.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.21%)</title><rect x="1094" y="228" width="2" height="15" fill="rgb(224,77,34)"/><text x="1097.00" y="238.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.42%)</title><rect x="1094" y="196" width="5" height="15" fill="rgb(221,146,5)"/><text x="1097.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.21%)</title><rect x="1096" y="212" width="3" height="15" fill="rgb(249,49,37)"/><text x="1099.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.42%)</title><rect x="1099" y="196" width="5" height="15" fill="rgb(231,155,25)"/><text x="1102.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.42%)</title><rect x="1099" y="212" width="5" height="15" fill="rgb(207,103,6)"/><text x="1102.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.42%)</title><rect x="1099" y="228" width="5" height="15" fill="rgb(213,224,19)"/><text x="1102.00" y="238.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.21%)</title><rect x="1104" y="196" width="2" height="15" fill="rgb(218,106,53)"/><text x="1107.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1104" y="212" width="2" height="15" fill="rgb(250,40,13)"/><text x="1107.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1104" y="228" width="2" height="15" fill="rgb(215,59,48)"/><text x="1107.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1104" y="244" width="2" height="15" fill="rgb(254,1,19)"/><text x="1107.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1104" y="260" width="2" height="15" fill="rgb(218,143,30)"/><text x="1107.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1104" y="276" width="2" height="15" fill="rgb(222,169,42)"/><text x="1107.00" y="286.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;) (4 samples, 0.83%)</title><rect x="1106" y="196" width="10" height="15" fill="rgb(225,89,17)"/><text x="1109.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.62%)</title><rect x="1109" y="212" width="7" height="15" fill="rgb(235,29,18)"/><text x="1112.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py) (3 samples, 0.62%)</title><rect x="1109" y="228" width="7" height="15" fill="rgb(241,13,12)"/><text x="1112.00" y="238.50"></text></g><g><title>array_squeeze (methods.c) (2 samples, 0.42%)</title><rect x="1111" y="244" width="5" height="15" fill="rgb(209,86,9)"/><text x="1114.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="1113" y="260" width="3" height="15" fill="rgb(215,193,16)"/><text x="1116.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.42%)</title><rect x="1133" y="276" width="5" height="15" fill="rgb(221,62,5)"/><text x="1136.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.42%)</title><rect x="1133" y="292" width="5" height="15" fill="rgb(213,2,30)"/><text x="1136.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.42%)</title><rect x="1133" y="308" width="5" height="15" fill="rgb(229,206,54)"/><text x="1136.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.42%)</title><rect x="1133" y="324" width="5" height="15" fill="rgb(251,45,36)"/><text x="1136.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.21%)</title><rect x="1143" y="324" width="2" height="15" fill="rgb(244,79,16)"/><text x="1146.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="1143" y="340" width="2" height="15" fill="rgb(206,214,3)"/><text x="1146.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="1143" y="356" width="2" height="15" fill="rgb(246,129,52)"/><text x="1146.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.21%)</title><rect x="1143" y="372" width="2" height="15" fill="rgb(231,226,46)"/><text x="1146.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.62%)</title><rect x="1140" y="308" width="8" height="15" fill="rgb(245,121,35)"/><text x="1143.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1145" y="324" width="3" height="15" fill="rgb(226,118,54)"/><text x="1148.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.21%)</title><rect x="1145" y="340" width="3" height="15" fill="rgb(237,37,19)"/><text x="1148.00" y="350.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="1145" y="356" width="3" height="15" fill="rgb(250,102,0)"/><text x="1148.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (15 samples, 3.12%)</title><rect x="1116" y="196" width="37" height="15" fill="rgb(240,110,11)"/><text x="1119.00" y="206.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (15 samples, 3.12%)</title><rect x="1116" y="212" width="37" height="15" fill="rgb(254,165,8)"/><text x="1119.00" y="222.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py) (15 samples, 3.12%)</title><rect x="1116" y="228" width="37" height="15" fill="rgb(251,109,13)"/><text x="1119.00" y="238.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (10 samples, 2.08%)</title><rect x="1128" y="244" width="25" height="15" fill="rgb(211,125,22)"/><text x="1131.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.66%)</title><rect x="1133" y="260" width="20" height="15" fill="rgb(206,29,12)"/><text x="1136.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.25%)</title><rect x="1138" y="276" width="15" height="15" fill="rgb(216,124,34)"/><text x="1141.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.04%)</title><rect x="1140" y="292" width="13" height="15" fill="rgb(247,211,45)"/><text x="1143.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.42%)</title><rect x="1148" y="308" width="5" height="15" fill="rgb(213,112,15)"/><text x="1151.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="1148" y="324" width="5" height="15" fill="rgb(241,158,40)"/><text x="1151.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="1148" y="340" width="5" height="15" fill="rgb(242,199,28)"/><text x="1151.00" y="350.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1158" y="228" width="2" height="15" fill="rgb(243,170,18)"/><text x="1161.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="1163" y="244" width="2" height="15" fill="rgb(251,187,53)"/><text x="1166.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="1163" y="260" width="2" height="15" fill="rgb(238,61,36)"/><text x="1166.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="1163" y="276" width="2" height="15" fill="rgb(237,23,12)"/><text x="1166.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.62%)</title><rect x="1160" y="228" width="7" height="15" fill="rgb(244,82,26)"/><text x="1163.00" y="238.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1165" y="244" width="2" height="15" fill="rgb(252,172,16)"/><text x="1168.00" y="254.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.21%)</title><rect x="1170" y="244" width="2" height="15" fill="rgb(219,100,39)"/><text x="1173.00" y="254.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.21%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(239,75,19)"/><text x="1173.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.87%)</title><rect x="1155" y="212" width="22" height="15" fill="rgb(236,175,8)"/><text x="1158.00" y="222.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 0.83%)</title><rect x="1167" y="228" width="10" height="15" fill="rgb(252,86,29)"/><text x="1170.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.42%)</title><rect x="1172" y="244" width="5" height="15" fill="rgb(223,30,42)"/><text x="1175.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.42%)</title><rect x="1172" y="260" width="5" height="15" fill="rgb(216,77,15)"/><text x="1175.00" y="270.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (218 samples, 45.32%)</title><rect x="645" y="164" width="535" height="15" fill="rgb(245,26,23)"/><text x="648.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (76 samples, 15.80%)</title><rect x="993" y="180" width="187" height="15" fill="rgb(215,36,18)"/><text x="996.00" y="190.50">logsumexp (scipy/special..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.29%)</title><rect x="1153" y="196" width="27" height="15" fill="rgb(223,37,11)"/><text x="1156.00" y="206.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1177" y="212" width="3" height="15" fill="rgb(232,186,46)"/><text x="1180.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(239,51,22)"/><text x="1188.00" y="206.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(235,32,15)"/><text x="1188.00" y="222.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.21%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(238,118,25)"/><text x="1188.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(215,177,27)"/><text x="1188.00" y="254.50"></text></g><g><title>0x7fa27a58cba0 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(205,91,12)"/><text x="1188.00" y="270.50"></text></g><g><title>all (481 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(231,185,15)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (481 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(237,118,43)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (224 samples, 46.57%)</title><rect x="640" y="68" width="550" height="15" fill="rgb(207,112,36)"/><text x="643.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (224 samples, 46.57%)</title><rect x="640" y="84" width="550" height="15" fill="rgb(230,203,7)"/><text x="643.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py) (224 samples, 46.57%)</title><rect x="640" y="100" width="550" height="15" fill="rgb(211,219,28)"/><text x="643.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 46.57%)</title><rect x="640" y="116" width="550" height="15" fill="rgb(237,124,40)"/><text x="643.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (223 samples, 46.36%)</title><rect x="642" y="132" width="548" height="15" fill="rgb(227,34,36)"/><text x="645.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (223 samples, 46.36%)</title><rect x="642" y="148" width="548" height="15" fill="rgb(246,185,48)"/><text x="645.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.83%)</title><rect x="1180" y="164" width="10" height="15" fill="rgb(219,169,41)"/><text x="1183.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.62%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(220,151,47)"/><text x="1185.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(219,149,35)"/><text x="1190.00" y="206.50"></text></g></g></svg>