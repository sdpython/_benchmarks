<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.31%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(245,93,4)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.31%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(237,16,32)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.31%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(233,47,25)"/><text x="13.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.31%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(218,77,1)"/><text x="13.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.31%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(233,185,19)"/><text x="13.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.31%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(210,136,3)"/><text x="13.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.31%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(242,7,30)"/><text x="13.00" y="222.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.31%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(215,32,17)"/><text x="13.00" y="238.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.31%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(233,227,34)"/><text x="13.00" y="254.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.31%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(208,15,5)"/><text x="13.00" y="270.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.31%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(216,154,28)"/><text x="13.00" y="286.50"></text></g><g><title>__init__ (inspect.py:2480) (1 samples, 0.31%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(221,22,3)"/><text x="13.00" y="302.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:149) (1 samples, 0.31%)</title><rect x="13" y="244" width="4" height="15" fill="rgb(244,36,45)"/><text x="16.00" y="254.50"></text></g><g><title>ones (numpy/core/numeric.py:215) (1 samples, 0.31%)</title><rect x="13" y="260" width="4" height="15" fill="rgb(205,55,50)"/><text x="16.00" y="270.50"></text></g><g><title>copyto (&lt;__array_function__ internals&gt;:6) (1 samples, 0.31%)</title><rect x="13" y="276" width="4" height="15" fill="rgb(231,21,41)"/><text x="16.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.31%)</title><rect x="13" y="292" width="4" height="15" fill="rgb(207,225,16)"/><text x="16.00" y="302.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.31%)</title><rect x="13" y="308" width="4" height="15" fill="rgb(239,34,12)"/><text x="16.00" y="318.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.31%)</title><rect x="13" y="324" width="4" height="15" fill="rgb(220,132,36)"/><text x="16.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.31%)</title><rect x="13" y="340" width="4" height="15" fill="rgb(217,206,23)"/><text x="16.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:21) (1 samples, 0.31%)</title><rect x="13" y="356" width="4" height="15" fill="rgb(220,114,10)"/><text x="16.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:31) (3 samples, 0.92%)</title><rect x="10" y="52" width="10" height="15" fill="rgb(252,49,50)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:11) (3 samples, 0.92%)</title><rect x="10" y="68" width="10" height="15" fill="rgb(214,170,9)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (3 samples, 0.92%)</title><rect x="10" y="84" width="10" height="15" fill="rgb(234,225,13)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.92%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(206,23,45)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (2 samples, 0.61%)</title><rect x="13" y="116" width="7" height="15" fill="rgb(252,56,36)"/><text x="16.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (2 samples, 0.61%)</title><rect x="13" y="132" width="7" height="15" fill="rgb(217,103,46)"/><text x="16.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.61%)</title><rect x="13" y="148" width="7" height="15" fill="rgb(205,162,13)"/><text x="16.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.61%)</title><rect x="13" y="164" width="7" height="15" fill="rgb(217,82,49)"/><text x="16.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.61%)</title><rect x="13" y="180" width="7" height="15" fill="rgb(217,122,44)"/><text x="16.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.61%)</title><rect x="13" y="196" width="7" height="15" fill="rgb(226,204,25)"/><text x="16.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.61%)</title><rect x="13" y="212" width="7" height="15" fill="rgb(221,143,4)"/><text x="16.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.61%)</title><rect x="13" y="228" width="7" height="15" fill="rgb(236,86,2)"/><text x="16.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (1 samples, 0.31%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(223,140,41)"/><text x="20.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.31%)</title><rect x="17" y="260" width="3" height="15" fill="rgb(221,58,25)"/><text x="20.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.31%)</title><rect x="17" y="276" width="3" height="15" fill="rgb(254,100,13)"/><text x="20.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.31%)</title><rect x="17" y="292" width="3" height="15" fill="rgb(213,111,37)"/><text x="20.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.31%)</title><rect x="17" y="308" width="3" height="15" fill="rgb(213,36,10)"/><text x="20.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.31%)</title><rect x="17" y="324" width="3" height="15" fill="rgb(230,72,7)"/><text x="20.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.31%)</title><rect x="17" y="340" width="3" height="15" fill="rgb(236,212,42)"/><text x="20.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.31%)</title><rect x="17" y="356" width="3" height="15" fill="rgb(221,166,0)"/><text x="20.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.31%)</title><rect x="17" y="372" width="3" height="15" fill="rgb(250,153,51)"/><text x="20.00" y="382.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.31%)</title><rect x="17" y="388" width="3" height="15" fill="rgb(238,79,15)"/><text x="20.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.31%)</title><rect x="17" y="404" width="3" height="15" fill="rgb(216,168,11)"/><text x="20.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c:6079) (1 samples, 0.31%)</title><rect x="17" y="420" width="3" height="15" fill="rgb(253,212,15)"/><text x="20.00" y="430.50"></text></g><g><title>__init__ (joblib/parallel.py:649) (1 samples, 0.31%)</title><rect x="20" y="164" width="4" height="15" fill="rgb(218,124,39)"/><text x="23.00" y="174.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (2 samples, 0.61%)</title><rect x="20" y="148" width="8" height="15" fill="rgb(252,146,27)"/><text x="23.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.31%)</title><rect x="24" y="164" width="4" height="15" fill="rgb(218,46,48)"/><text x="27.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py:304) (1 samples, 0.31%)</title><rect x="24" y="180" width="4" height="15" fill="rgb(208,217,18)"/><text x="27.00" y="190.50"></text></g><g><title>parse (distutils/version.py:312) (1 samples, 0.31%)</title><rect x="24" y="196" width="4" height="15" fill="rgb(225,57,18)"/><text x="27.00" y="206.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.31%)</title><rect x="24" y="212" width="4" height="15" fill="rgb(223,135,24)"/><text x="27.00" y="222.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="24" y="228" width="4" height="15" fill="rgb(246,81,33)"/><text x="27.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.31%)</title><rect x="28" y="164" width="3" height="15" fill="rgb(226,178,9)"/><text x="31.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (1 samples, 0.31%)</title><rect x="28" y="180" width="3" height="15" fill="rgb(227,78,35)"/><text x="31.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.31%)</title><rect x="35" y="180" width="3" height="15" fill="rgb(229,8,3)"/><text x="38.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.31%)</title><rect x="38" y="180" width="4" height="15" fill="rgb(212,70,23)"/><text x="41.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.31%)</title><rect x="42" y="196" width="4" height="15" fill="rgb(226,208,7)"/><text x="45.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (2 samples, 0.61%)</title><rect x="42" y="180" width="7" height="15" fill="rgb(244,187,44)"/><text x="45.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.31%)</title><rect x="46" y="196" width="3" height="15" fill="rgb(214,23,25)"/><text x="49.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.31%)</title><rect x="46" y="212" width="3" height="15" fill="rgb(229,44,2)"/><text x="49.00" y="222.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.31%)</title><rect x="56" y="212" width="4" height="15" fill="rgb(251,51,3)"/><text x="59.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.31%)</title><rect x="64" y="228" width="3" height="15" fill="rgb(235,81,17)"/><text x="67.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.61%)</title><rect x="67" y="228" width="7" height="15" fill="rgb(218,131,4)"/><text x="70.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (3 samples, 0.92%)</title><rect x="74" y="228" width="11" height="15" fill="rgb(220,96,35)"/><text x="77.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:59) (1 samples, 0.31%)</title><rect x="85" y="228" width="4" height="15" fill="rgb(223,56,54)"/><text x="88.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.31%)</title><rect x="89" y="228" width="3" height="15" fill="rgb(250,215,40)"/><text x="92.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (13 samples, 3.98%)</title><rect x="49" y="180" width="47" height="15" fill="rgb(244,93,45)"/><text x="52.00" y="190.50">disp..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (11 samples, 3.36%)</title><rect x="56" y="196" width="40" height="15" fill="rgb(217,130,46)"/><text x="59.00" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py:308) (10 samples, 3.06%)</title><rect x="60" y="212" width="36" height="15" fill="rgb(235,150,33)"/><text x="63.00" y="222.50">del..</text></g><g><title>wraps (functools.py:79) (1 samples, 0.31%)</title><rect x="92" y="228" width="4" height="15" fill="rgb(240,208,48)"/><text x="95.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (2 samples, 0.61%)</title><rect x="96" y="180" width="7" height="15" fill="rgb(223,20,37)"/><text x="99.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.31%)</title><rect x="103" y="180" width="4" height="15" fill="rgb(211,12,0)"/><text x="106.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.31%)</title><rect x="125" y="212" width="4" height="15" fill="rgb(210,228,12)"/><text x="128.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.31%)</title><rect x="129" y="212" width="3" height="15" fill="rgb(216,169,42)"/><text x="132.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (7 samples, 2.14%)</title><rect x="111" y="196" width="25" height="15" fill="rgb(205,13,7)"/><text x="114.00" y="206.50">g..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="132" y="212" width="4" height="15" fill="rgb(240,174,34)"/><text x="135.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.31%)</title><rect x="139" y="212" width="4" height="15" fill="rgb(244,103,23)"/><text x="142.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.31%)</title><rect x="139" y="228" width="4" height="15" fill="rgb(210,151,19)"/><text x="142.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.61%)</title><rect x="143" y="212" width="7" height="15" fill="rgb(206,155,8)"/><text x="146.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (13 samples, 3.98%)</title><rect x="107" y="180" width="47" height="15" fill="rgb(233,113,35)"/><text x="110.00" y="190.50">disp..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (5 samples, 1.53%)</title><rect x="136" y="196" width="18" height="15" fill="rgb(213,168,52)"/><text x="139.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:95) (1 samples, 0.31%)</title><rect x="150" y="212" width="4" height="15" fill="rgb(244,187,1)"/><text x="153.00" y="222.50"></text></g><g><title>put (queue.py:132) (2 samples, 0.61%)</title><rect x="154" y="196" width="7" height="15" fill="rgb(229,133,12)"/><text x="157.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.31%)</title><rect x="157" y="212" width="4" height="15" fill="rgb(252,175,29)"/><text x="160.00" y="222.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.31%)</title><rect x="161" y="196" width="4" height="15" fill="rgb(211,7,1)"/><text x="164.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.31%)</title><rect x="161" y="212" width="4" height="15" fill="rgb(218,214,12)"/><text x="164.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (4 samples, 1.22%)</title><rect x="154" y="180" width="14" height="15" fill="rgb(225,168,52)"/><text x="157.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.31%)</title><rect x="165" y="196" width="3" height="15" fill="rgb(254,26,43)"/><text x="168.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.31%)</title><rect x="165" y="212" width="3" height="15" fill="rgb(223,137,14)"/><text x="168.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.31%)</title><rect x="165" y="228" width="3" height="15" fill="rgb(215,21,0)"/><text x="168.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="165" y="244" width="3" height="15" fill="rgb(215,221,31)"/><text x="168.00" y="254.50"></text></g><g><title>get (queue.py:180) (1 samples, 0.31%)</title><rect x="172" y="196" width="3" height="15" fill="rgb(235,219,42)"/><text x="175.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.92%)</title><rect x="168" y="180" width="11" height="15" fill="rgb(209,171,44)"/><text x="171.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.31%)</title><rect x="175" y="196" width="4" height="15" fill="rgb(248,5,8)"/><text x="178.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (3 samples, 0.92%)</title><rect x="183" y="196" width="11" height="15" fill="rgb(223,139,49)"/><text x="186.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.31%)</title><rect x="190" y="212" width="4" height="15" fill="rgb(209,19,2)"/><text x="193.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.31%)</title><rect x="194" y="196" width="3" height="15" fill="rgb(221,43,0)"/><text x="197.00" y="206.50"></text></g><g><title>__enter__ (joblib/parallel.py:211) (1 samples, 0.31%)</title><rect x="201" y="260" width="3" height="15" fill="rgb(244,218,22)"/><text x="204.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.31%)</title><rect x="204" y="260" width="4" height="15" fill="rgb(233,180,48)"/><text x="207.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.92%)</title><rect x="201" y="244" width="11" height="15" fill="rgb(249,109,54)"/><text x="204.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (1 samples, 0.31%)</title><rect x="208" y="260" width="4" height="15" fill="rgb(212,197,9)"/><text x="211.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (1 samples, 0.31%)</title><rect x="215" y="308" width="4" height="15" fill="rgb(227,53,42)"/><text x="218.00" y="318.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.31%)</title><rect x="233" y="340" width="4" height="15" fill="rgb(235,136,18)"/><text x="236.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 2.14%)</title><rect x="215" y="292" width="25" height="15" fill="rgb(231,23,37)"/><text x="218.00" y="302.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.83%)</title><rect x="219" y="308" width="21" height="15" fill="rgb(220,31,26)"/><text x="222.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.53%)</title><rect x="222" y="324" width="18" height="15" fill="rgb(241,58,38)"/><text x="225.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="237" y="340" width="3" height="15" fill="rgb(252,222,12)"/><text x="240.00" y="350.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.31%)</title><rect x="240" y="372" width="4" height="15" fill="rgb(219,175,33)"/><text x="243.00" y="382.50"></text></g><g><title>0x7fe1bc6bb0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="240" y="388" width="4" height="15" fill="rgb(236,219,21)"/><text x="243.00" y="398.50"></text></g><g><title>0x7fe196eea225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="240" y="356" width="8" height="15" fill="rgb(227,55,43)"/><text x="243.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.31%)</title><rect x="244" y="372" width="4" height="15" fill="rgb(218,66,8)"/><text x="247.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.31%)</title><rect x="244" y="388" width="4" height="15" fill="rgb(238,158,13)"/><text x="247.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.31%)</title><rect x="244" y="404" width="4" height="15" fill="rgb(246,153,11)"/><text x="247.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.31%)</title><rect x="244" y="420" width="4" height="15" fill="rgb(253,125,27)"/><text x="247.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.31%)</title><rect x="248" y="436" width="3" height="15" fill="rgb(225,61,54)"/><text x="251.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.31%)</title><rect x="248" y="452" width="3" height="15" fill="rgb(246,139,14)"/><text x="251.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="248" y="468" width="3" height="15" fill="rgb(246,177,51)"/><text x="251.00" y="478.50"></text></g><g><title>0x7fe196eced04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="248" y="372" width="7" height="15" fill="rgb(212,90,17)"/><text x="251.00" y="382.50"></text></g><g><title>0x7fe196ece666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="248" y="388" width="7" height="15" fill="rgb(233,12,41)"/><text x="251.00" y="398.50"></text></g><g><title>0x7fe196ec42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="248" y="404" width="7" height="15" fill="rgb(219,197,15)"/><text x="251.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.61%)</title><rect x="248" y="420" width="7" height="15" fill="rgb(224,1,48)"/><text x="251.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.31%)</title><rect x="251" y="436" width="4" height="15" fill="rgb(230,54,4)"/><text x="254.00" y="446.50"></text></g><g><title>0x7fe196eea2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.92%)</title><rect x="248" y="356" width="10" height="15" fill="rgb(223,126,23)"/><text x="251.00" y="366.50"></text></g><g><title>0x7fe196ecee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="255" y="372" width="3" height="15" fill="rgb(206,183,27)"/><text x="258.00" y="382.50"></text></g><g><title>0x7fe196ec22bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="255" y="388" width="3" height="15" fill="rgb(222,129,42)"/><text x="258.00" y="398.50"></text></g><g><title>0x7fe196ec1d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="255" y="404" width="3" height="15" fill="rgb(246,4,3)"/><text x="258.00" y="414.50"></text></g><g><title>0x7fe196eeb405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.83%)</title><rect x="240" y="340" width="22" height="15" fill="rgb(246,42,9)"/><text x="243.00" y="350.50">0..</text></g><g><title>0x7fe196eeac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="258" y="356" width="4" height="15" fill="rgb(246,107,51)"/><text x="261.00" y="366.50"></text></g><g><title>0x7fe196ec2529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="258" y="372" width="4" height="15" fill="rgb(231,188,54)"/><text x="261.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:763) (1 samples, 0.31%)</title><rect x="258" y="388" width="4" height="15" fill="rgb(206,207,54)"/><text x="261.00" y="398.50"></text></g><g><title>0x7fe196edbfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.14%)</title><rect x="240" y="324" width="26" height="15" fill="rgb(251,89,5)"/><text x="243.00" y="334.50">0..</text></g><g><title>0x7fe196eeb540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="262" y="340" width="4" height="15" fill="rgb(254,192,24)"/><text x="265.00" y="350.50"></text></g><g><title>0x7fe196ec02f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="262" y="356" width="4" height="15" fill="rgb(240,13,43)"/><text x="265.00" y="366.50"></text></g><g><title>0x7fe196ebf530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="262" y="372" width="4" height="15" fill="rgb(254,102,14)"/><text x="265.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.31%)</title><rect x="262" y="388" width="4" height="15" fill="rgb(220,18,29)"/><text x="265.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.61%)</title><rect x="266" y="340" width="7" height="15" fill="rgb(208,190,15)"/><text x="269.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.31%)</title><rect x="269" y="356" width="4" height="15" fill="rgb(228,214,31)"/><text x="272.00" y="366.50"></text></g><g><title>0x7fe196edc05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.92%)</title><rect x="266" y="324" width="11" height="15" fill="rgb(231,23,3)"/><text x="269.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.31%)</title><rect x="273" y="340" width="4" height="15" fill="rgb(252,114,37)"/><text x="276.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:137) (1 samples, 0.31%)</title><rect x="273" y="356" width="4" height="15" fill="rgb(214,220,37)"/><text x="276.00" y="366.50"></text></g><g><title>0x7fe196edc13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="277" y="324" width="3" height="15" fill="rgb(212,157,24)"/><text x="280.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="277" y="340" width="3" height="15" fill="rgb(239,224,17)"/><text x="280.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="277" y="356" width="3" height="15" fill="rgb(212,144,35)"/><text x="280.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="277" y="372" width="3" height="15" fill="rgb(254,74,6)"/><text x="280.00" y="382.50"></text></g><g><title>0x7fe196edc14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="280" y="324" width="4" height="15" fill="rgb(244,22,53)"/><text x="283.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="280" y="340" width="4" height="15" fill="rgb(246,51,39)"/><text x="283.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="280" y="356" width="4" height="15" fill="rgb(253,74,23)"/><text x="283.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.31%)</title><rect x="280" y="372" width="4" height="15" fill="rgb(225,57,14)"/><text x="283.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.31%)</title><rect x="280" y="388" width="4" height="15" fill="rgb(246,139,6)"/><text x="283.00" y="398.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.31%)</title><rect x="284" y="340" width="3" height="15" fill="rgb(212,80,0)"/><text x="287.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:41) (1 samples, 0.31%)</title><rect x="284" y="356" width="3" height="15" fill="rgb(217,64,39)"/><text x="287.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (14 samples, 4.28%)</title><rect x="240" y="292" width="51" height="15" fill="rgb(212,126,4)"/><text x="243.00" y="302.50">predi..</text></g><g><title>0x7fe196edcd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.28%)</title><rect x="240" y="308" width="51" height="15" fill="rgb(242,122,50)"/><text x="243.00" y="318.50">0x7fe..</text></g><g><title>0x7fe196edc328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="284" y="324" width="7" height="15" fill="rgb(245,199,51)"/><text x="287.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.31%)</title><rect x="287" y="340" width="4" height="15" fill="rgb(211,41,4)"/><text x="290.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.31%)</title><rect x="287" y="356" width="4" height="15" fill="rgb(230,28,6)"/><text x="290.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:240) (1 samples, 0.31%)</title><rect x="287" y="372" width="4" height="15" fill="rgb(207,69,20)"/><text x="290.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="295" y="308" width="3" height="15" fill="rgb(231,214,47)"/><text x="298.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="295" y="324" width="3" height="15" fill="rgb(227,192,38)"/><text x="298.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="295" y="340" width="3" height="15" fill="rgb(228,27,21)"/><text x="298.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.92%)</title><rect x="291" y="292" width="11" height="15" fill="rgb(207,197,14)"/><text x="294.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="298" y="308" width="4" height="15" fill="rgb(227,90,7)"/><text x="301.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.31%)</title><rect x="298" y="324" width="4" height="15" fill="rgb(215,209,26)"/><text x="301.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.31%)</title><rect x="305" y="388" width="4" height="15" fill="rgb(244,180,33)"/><text x="308.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.61%)</title><rect x="305" y="356" width="8" height="15" fill="rgb(212,170,3)"/><text x="308.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.61%)</title><rect x="305" y="372" width="8" height="15" fill="rgb(220,181,35)"/><text x="308.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="309" y="388" width="4" height="15" fill="rgb(214,185,13)"/><text x="312.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.31%)</title><rect x="309" y="404" width="4" height="15" fill="rgb(232,160,29)"/><text x="312.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.31%)</title><rect x="309" y="420" width="4" height="15" fill="rgb(254,115,11)"/><text x="312.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.31%)</title><rect x="309" y="436" width="4" height="15" fill="rgb(249,3,18)"/><text x="312.00" y="446.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.31%)</title><rect x="313" y="436" width="3" height="15" fill="rgb(207,200,22)"/><text x="316.00" y="446.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.61%)</title><rect x="313" y="388" width="7" height="15" fill="rgb(209,150,10)"/><text x="316.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.61%)</title><rect x="313" y="404" width="7" height="15" fill="rgb(249,121,47)"/><text x="316.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.61%)</title><rect x="313" y="420" width="7" height="15" fill="rgb(254,125,28)"/><text x="316.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.31%)</title><rect x="316" y="436" width="4" height="15" fill="rgb(220,206,38)"/><text x="319.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1693) (1 samples, 0.31%)</title><rect x="316" y="452" width="4" height="15" fill="rgb(214,106,31)"/><text x="319.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.31%)</title><rect x="320" y="404" width="3" height="15" fill="rgb(238,151,22)"/><text x="323.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.31%)</title><rect x="320" y="420" width="3" height="15" fill="rgb(212,160,36)"/><text x="323.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.31%)</title><rect x="320" y="436" width="3" height="15" fill="rgb(213,170,50)"/><text x="323.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="320" y="452" width="3" height="15" fill="rgb(243,59,21)"/><text x="323.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="320" y="468" width="3" height="15" fill="rgb(214,198,7)"/><text x="323.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.31%)</title><rect x="323" y="420" width="4" height="15" fill="rgb(211,146,37)"/><text x="326.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.31%)</title><rect x="327" y="468" width="4" height="15" fill="rgb(249,118,49)"/><text x="330.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.92%)</title><rect x="323" y="404" width="11" height="15" fill="rgb(206,173,47)"/><text x="326.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.61%)</title><rect x="327" y="420" width="7" height="15" fill="rgb(221,198,49)"/><text x="330.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.61%)</title><rect x="327" y="436" width="7" height="15" fill="rgb(240,36,15)"/><text x="330.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.61%)</title><rect x="327" y="452" width="7" height="15" fill="rgb(251,73,36)"/><text x="330.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.31%)</title><rect x="331" y="468" width="3" height="15" fill="rgb(211,121,14)"/><text x="334.00" y="478.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.31%)</title><rect x="331" y="484" width="3" height="15" fill="rgb(230,56,44)"/><text x="334.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="334" y="404" width="4" height="15" fill="rgb(249,158,6)"/><text x="337.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.31%)</title><rect x="334" y="420" width="4" height="15" fill="rgb(246,96,48)"/><text x="337.00" y="430.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:801) (1 samples, 0.31%)</title><rect x="334" y="436" width="4" height="15" fill="rgb(245,141,21)"/><text x="337.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (11 samples, 3.36%)</title><rect x="302" y="292" width="39" height="15" fill="rgb(241,211,33)"/><text x="305.00" y="302.50">pre..</text></g><g><title>array_sum (methods.c:2215) (11 samples, 3.36%)</title><rect x="302" y="308" width="39" height="15" fill="rgb(244,108,42)"/><text x="305.00" y="318.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 3.36%)</title><rect x="302" y="324" width="39" height="15" fill="rgb(236,155,46)"/><text x="305.00" y="334.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 3.36%)</title><rect x="302" y="340" width="39" height="15" fill="rgb(211,37,31)"/><text x="305.00" y="350.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.45%)</title><rect x="313" y="356" width="28" height="15" fill="rgb(233,140,9)"/><text x="316.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 2.45%)</title><rect x="313" y="372" width="28" height="15" fill="rgb(210,203,24)"/><text x="316.00" y="382.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.83%)</title><rect x="320" y="388" width="21" height="15" fill="rgb(235,76,26)"/><text x="323.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.31%)</title><rect x="338" y="404" width="3" height="15" fill="rgb(241,198,39)"/><text x="341.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.31%)</title><rect x="338" y="420" width="3" height="15" fill="rgb(243,198,34)"/><text x="341.00" y="430.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.31%)</title><rect x="338" y="436" width="3" height="15" fill="rgb(208,121,47)"/><text x="341.00" y="446.50"></text></g><g><title>count_boolean_trues (item_selection.c:2053) (1 samples, 0.31%)</title><rect x="341" y="340" width="4" height="15" fill="rgb(246,137,32)"/><text x="344.00" y="350.50"></text></g><g><title>0x7fe1bd4b91ef (libc-2.29.so) (1 samples, 0.31%)</title><rect x="341" y="356" width="4" height="15" fill="rgb(218,12,46)"/><text x="344.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.61%)</title><rect x="341" y="308" width="8" height="15" fill="rgb(218,114,30)"/><text x="344.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (2 samples, 0.61%)</title><rect x="341" y="324" width="8" height="15" fill="rgb(222,222,3)"/><text x="344.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2080) (1 samples, 0.31%)</title><rect x="345" y="340" width="4" height="15" fill="rgb(223,191,34)"/><text x="348.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.92%)</title><rect x="341" y="292" width="11" height="15" fill="rgb(249,76,21)"/><text x="344.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.31%)</title><rect x="349" y="308" width="3" height="15" fill="rgb(237,161,37)"/><text x="352.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="349" y="324" width="3" height="15" fill="rgb(245,100,13)"/><text x="352.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="349" y="340" width="3" height="15" fill="rgb(215,161,5)"/><text x="352.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1084) (1 samples, 0.31%)</title><rect x="349" y="356" width="3" height="15" fill="rgb(216,189,26)"/><text x="352.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (40 samples, 12.23%)</title><rect x="212" y="276" width="144" height="15" fill="rgb(238,102,29)"/><text x="215.00" y="286.50">_accumulate_predic..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (1 samples, 0.31%)</title><rect x="352" y="292" width="4" height="15" fill="rgb(227,40,24)"/><text x="355.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="352" y="308" width="4" height="15" fill="rgb(254,45,12)"/><text x="355.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="352" y="324" width="4" height="15" fill="rgb(217,138,5)"/><text x="355.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.31%)</title><rect x="352" y="340" width="4" height="15" fill="rgb(225,13,14)"/><text x="355.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.31%)</title><rect x="352" y="356" width="4" height="15" fill="rgb(216,156,48)"/><text x="355.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.31%)</title><rect x="352" y="372" width="4" height="15" fill="rgb(220,82,33)"/><text x="355.00" y="382.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2099) (1 samples, 0.31%)</title><rect x="352" y="388" width="4" height="15" fill="rgb(232,171,25)"/><text x="355.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.31%)</title><rect x="356" y="276" width="4" height="15" fill="rgb(235,83,37)"/><text x="359.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="356" y="292" width="4" height="15" fill="rgb(251,200,50)"/><text x="359.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="356" y="308" width="4" height="15" fill="rgb(226,120,1)"/><text x="359.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (42 samples, 12.84%)</title><rect x="212" y="260" width="151" height="15" fill="rgb(205,0,52)"/><text x="215.00" y="270.50">&lt;listcomp&gt; (joblib/..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.31%)</title><rect x="360" y="276" width="3" height="15" fill="rgb(221,126,38)"/><text x="363.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="360" y="292" width="3" height="15" fill="rgb(236,226,30)"/><text x="363.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="360" y="308" width="3" height="15" fill="rgb(214,213,43)"/><text x="363.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:516) (1 samples, 0.31%)</title><rect x="360" y="324" width="3" height="15" fill="rgb(244,17,16)"/><text x="363.00" y="334.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (46 samples, 14.07%)</title><rect x="201" y="212" width="166" height="15" fill="rgb(205,102,35)"/><text x="204.00" y="222.50">apply_async (joblib/_..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (46 samples, 14.07%)</title><rect x="201" y="228" width="166" height="15" fill="rgb(224,34,37)"/><text x="204.00" y="238.50">__init__ (joblib/_par..</text></g><g><title>__call__ (joblib/parallel.py:256) (43 samples, 13.15%)</title><rect x="212" y="244" width="155" height="15" fill="rgb(221,89,51)"/><text x="215.00" y="254.50">__call__ (joblib/pa..</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.31%)</title><rect x="363" y="260" width="4" height="15" fill="rgb(221,50,52)"/><text x="366.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.31%)</title><rect x="363" y="276" width="4" height="15" fill="rgb(236,36,35)"/><text x="366.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.31%)</title><rect x="367" y="228" width="3" height="15" fill="rgb(234,60,19)"/><text x="370.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (49 samples, 14.98%)</title><rect x="197" y="196" width="177" height="15" fill="rgb(252,187,25)"/><text x="200.00" y="206.50">_dispatch (joblib/paral..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (2 samples, 0.61%)</title><rect x="367" y="212" width="7" height="15" fill="rgb(226,141,34)"/><text x="370.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:336) (1 samples, 0.31%)</title><rect x="370" y="228" width="4" height="15" fill="rgb(214,53,12)"/><text x="373.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (96 samples, 29.36%)</title><rect x="31" y="164" width="347" height="15" fill="rgb(220,102,9)"/><text x="34.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (55 samples, 16.82%)</title><rect x="179" y="180" width="199" height="15" fill="rgb(227,89,43)"/><text x="182.00" y="190.50">dispatch_one_batch (joblib..</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.31%)</title><rect x="374" y="196" width="4" height="15" fill="rgb(224,110,20)"/><text x="377.00" y="206.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:18) (101 samples, 30.89%)</title><rect x="20" y="100" width="365" height="15" fill="rgb(241,19,17)"/><text x="23.00" y="110.50">profile (bench_RandomForestClassifier_default_b_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (101 samples, 30.89%)</title><rect x="20" y="116" width="365" height="15" fill="rgb(252,229,15)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (101 samples, 30.89%)</title><rect x="20" y="132" width="365" height="15" fill="rgb(228,138,2)"/><text x="23.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (99 samples, 30.28%)</title><rect x="28" y="148" width="357" height="15" fill="rgb(247,204,45)"/><text x="31.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.61%)</title><rect x="378" y="164" width="7" height="15" fill="rgb(217,113,8)"/><text x="381.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (2 samples, 0.61%)</title><rect x="378" y="180" width="7" height="15" fill="rgb(245,98,37)"/><text x="381.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:663) (1 samples, 0.31%)</title><rect x="385" y="148" width="3" height="15" fill="rgb(216,31,34)"/><text x="388.00" y="158.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:6) (1 samples, 0.31%)</title><rect x="385" y="164" width="3" height="15" fill="rgb(239,110,22)"/><text x="388.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.31%)</title><rect x="385" y="180" width="3" height="15" fill="rgb(241,196,36)"/><text x="388.00" y="190.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:68) (1 samples, 0.31%)</title><rect x="385" y="196" width="3" height="15" fill="rgb(246,188,5)"/><text x="388.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.31%)</title><rect x="385" y="212" width="3" height="15" fill="rgb(225,170,20)"/><text x="388.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.31%)</title><rect x="385" y="228" width="3" height="15" fill="rgb(235,12,27)"/><text x="388.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.31%)</title><rect x="388" y="292" width="4" height="15" fill="rgb(230,34,7)"/><text x="391.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="388" y="308" width="4" height="15" fill="rgb(205,38,3)"/><text x="391.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.31%)</title><rect x="388" y="324" width="4" height="15" fill="rgb(245,216,45)"/><text x="391.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.61%)</title><rect x="388" y="276" width="8" height="15" fill="rgb(222,28,8)"/><text x="391.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.31%)</title><rect x="392" y="292" width="4" height="15" fill="rgb(213,164,36)"/><text x="395.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.31%)</title><rect x="392" y="308" width="4" height="15" fill="rgb(214,4,12)"/><text x="395.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.31%)</title><rect x="392" y="324" width="4" height="15" fill="rgb(236,64,46)"/><text x="395.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:112) (1 samples, 0.31%)</title><rect x="392" y="340" width="4" height="15" fill="rgb(245,197,29)"/><text x="395.00" y="350.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (3 samples, 0.92%)</title><rect x="388" y="164" width="11" height="15" fill="rgb(213,54,47)"/><text x="391.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.92%)</title><rect x="388" y="180" width="11" height="15" fill="rgb(249,229,30)"/><text x="391.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.92%)</title><rect x="388" y="196" width="11" height="15" fill="rgb(254,209,10)"/><text x="391.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.92%)</title><rect x="388" y="212" width="11" height="15" fill="rgb(252,215,19)"/><text x="391.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.92%)</title><rect x="388" y="228" width="11" height="15" fill="rgb(237,23,23)"/><text x="391.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.92%)</title><rect x="388" y="244" width="11" height="15" fill="rgb(243,190,11)"/><text x="391.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.92%)</title><rect x="388" y="260" width="11" height="15" fill="rgb(211,157,10)"/><text x="391.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.31%)</title><rect x="396" y="276" width="3" height="15" fill="rgb(205,202,49)"/><text x="399.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="396" y="292" width="3" height="15" fill="rgb(250,28,52)"/><text x="399.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="396" y="308" width="3" height="15" fill="rgb(211,9,8)"/><text x="399.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.31%)</title><rect x="396" y="324" width="3" height="15" fill="rgb(230,74,54)"/><text x="399.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.31%)</title><rect x="396" y="340" width="3" height="15" fill="rgb(229,81,14)"/><text x="399.00" y="350.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.31%)</title><rect x="414" y="180" width="3" height="15" fill="rgb(222,193,36)"/><text x="417.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.31%)</title><rect x="417" y="180" width="4" height="15" fill="rgb(247,138,4)"/><text x="420.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.31%)</title><rect x="421" y="180" width="3" height="15" fill="rgb(247,40,50)"/><text x="424.00" y="190.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="421" y="196" width="3" height="15" fill="rgb(246,80,28)"/><text x="424.00" y="206.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="421" y="212" width="3" height="15" fill="rgb(229,92,28)"/><text x="424.00" y="222.50"></text></g><g><title>get (queue.py:164) (3 samples, 0.92%)</title><rect x="428" y="196" width="11" height="15" fill="rgb(217,138,7)"/><text x="431.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.61%)</title><rect x="432" y="212" width="7" height="15" fill="rgb(243,109,11)"/><text x="435.00" y="222.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.61%)</title><rect x="439" y="196" width="7" height="15" fill="rgb(234,226,34)"/><text x="442.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.31%)</title><rect x="443" y="212" width="3" height="15" fill="rgb(208,189,40)"/><text x="446.00" y="222.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.61%)</title><rect x="446" y="196" width="7" height="15" fill="rgb(231,83,45)"/><text x="449.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (10 samples, 3.06%)</title><rect x="424" y="180" width="37" height="15" fill="rgb(242,40,33)"/><text x="427.00" y="190.50">dis..</text></g><g><title>get (queue.py:182) (2 samples, 0.61%)</title><rect x="453" y="196" width="8" height="15" fill="rgb(251,109,38)"/><text x="456.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.31%)</title><rect x="457" y="212" width="4" height="15" fill="rgb(245,137,49)"/><text x="460.00" y="222.50"></text></g><g><title>delayed (joblib/parallel.py:305) (2 samples, 0.61%)</title><rect x="464" y="212" width="7" height="15" fill="rgb(229,145,17)"/><text x="467.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.31%)</title><rect x="475" y="228" width="4" height="15" fill="rgb(232,119,3)"/><text x="478.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.31%)</title><rect x="479" y="228" width="3" height="15" fill="rgb(254,107,18)"/><text x="482.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.31%)</title><rect x="482" y="228" width="4" height="15" fill="rgb(244,72,14)"/><text x="485.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (5 samples, 1.53%)</title><rect x="471" y="212" width="18" height="15" fill="rgb(207,66,28)"/><text x="474.00" y="222.50"></text></g><g><title>wraps (functools.py:78) (1 samples, 0.31%)</title><rect x="486" y="228" width="3" height="15" fill="rgb(212,41,6)"/><text x="489.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (9 samples, 2.75%)</title><rect x="461" y="180" width="32" height="15" fill="rgb(236,92,34)"/><text x="464.00" y="190.50">di..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (9 samples, 2.75%)</title><rect x="461" y="196" width="32" height="15" fill="rgb(226,153,16)"/><text x="464.00" y="206.50">&lt;g..</text></g><g><title>delayed_function (joblib/parallel.py:306) (1 samples, 0.31%)</title><rect x="489" y="212" width="4" height="15" fill="rgb(252,185,24)"/><text x="492.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.31%)</title><rect x="493" y="180" width="4" height="15" fill="rgb(217,2,15)"/><text x="496.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (4 samples, 1.22%)</title><rect x="497" y="180" width="14" height="15" fill="rgb(245,10,28)"/><text x="500.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (2 samples, 0.61%)</title><rect x="511" y="180" width="7" height="15" fill="rgb(207,211,29)"/><text x="514.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (5 samples, 1.53%)</title><rect x="533" y="212" width="18" height="15" fill="rgb(226,146,18)"/><text x="536.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="551" y="212" width="3" height="15" fill="rgb(247,227,37)"/><text x="554.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (11 samples, 3.36%)</title><rect x="518" y="196" width="40" height="15" fill="rgb(233,127,34)"/><text x="521.00" y="206.50">get..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="554" y="212" width="4" height="15" fill="rgb(248,140,4)"/><text x="557.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (3 samples, 0.92%)</title><rect x="558" y="228" width="11" height="15" fill="rgb(227,131,7)"/><text x="561.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.22%)</title><rect x="558" y="212" width="14" height="15" fill="rgb(242,54,6)"/><text x="561.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.31%)</title><rect x="569" y="228" width="3" height="15" fill="rgb(227,19,13)"/><text x="572.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.31%)</title><rect x="572" y="212" width="4" height="15" fill="rgb(222,222,49)"/><text x="575.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:120) (2 samples, 0.61%)</title><rect x="576" y="212" width="7" height="15" fill="rgb(222,77,14)"/><text x="579.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.31%)</title><rect x="583" y="212" width="4" height="15" fill="rgb(216,109,12)"/><text x="586.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (21 samples, 6.42%)</title><rect x="518" y="180" width="76" height="15" fill="rgb(228,178,17)"/><text x="521.00" y="190.50">dispatch..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (10 samples, 3.06%)</title><rect x="558" y="196" width="36" height="15" fill="rgb(254,165,51)"/><text x="561.00" y="206.50">get..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.61%)</title><rect x="587" y="212" width="7" height="15" fill="rgb(207,15,36)"/><text x="590.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.31%)</title><rect x="594" y="180" width="4" height="15" fill="rgb(252,183,41)"/><text x="597.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (1 samples, 0.31%)</title><rect x="594" y="196" width="4" height="15" fill="rgb(247,217,7)"/><text x="597.00" y="206.50"></text></g><g><title>put (queue.py:132) (2 samples, 0.61%)</title><rect x="598" y="196" width="7" height="15" fill="rgb(248,54,54)"/><text x="601.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.31%)</title><rect x="601" y="212" width="4" height="15" fill="rgb(251,166,42)"/><text x="604.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="601" y="228" width="4" height="15" fill="rgb(213,159,15)"/><text x="604.00" y="238.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.31%)</title><rect x="605" y="196" width="4" height="15" fill="rgb(245,175,43)"/><text x="608.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.31%)</title><rect x="605" y="212" width="4" height="15" fill="rgb(243,20,51)"/><text x="608.00" y="222.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.31%)</title><rect x="609" y="196" width="3" height="15" fill="rgb(243,129,13)"/><text x="612.00" y="206.50"></text></g><g><title>notify (threading.py:345) (3 samples, 0.92%)</title><rect x="623" y="212" width="11" height="15" fill="rgb(243,101,35)"/><text x="626.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (3 samples, 0.92%)</title><rect x="623" y="228" width="11" height="15" fill="rgb(253,40,35)"/><text x="626.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.61%)</title><rect x="627" y="244" width="7" height="15" fill="rgb(217,176,31)"/><text x="630.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (13 samples, 3.98%)</title><rect x="598" y="180" width="47" height="15" fill="rgb(251,86,1)"/><text x="601.00" y="190.50">disp..</text></g><g><title>put (queue.py:151) (9 samples, 2.75%)</title><rect x="612" y="196" width="33" height="15" fill="rgb(232,223,42)"/><text x="615.00" y="206.50">pu..</text></g><g><title>notify (threading.py:348) (3 samples, 0.92%)</title><rect x="634" y="212" width="11" height="15" fill="rgb(225,130,32)"/><text x="637.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.31%)</title><rect x="652" y="196" width="3" height="15" fill="rgb(208,43,29)"/><text x="655.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.31%)</title><rect x="652" y="212" width="3" height="15" fill="rgb(242,130,1)"/><text x="655.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="652" y="228" width="3" height="15" fill="rgb(223,149,43)"/><text x="655.00" y="238.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.61%)</title><rect x="655" y="196" width="8" height="15" fill="rgb(228,20,36)"/><text x="658.00" y="206.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.61%)</title><rect x="655" y="212" width="8" height="15" fill="rgb(252,14,53)"/><text x="658.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 1.83%)</title><rect x="645" y="180" width="21" height="15" fill="rgb(236,92,30)"/><text x="648.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.31%)</title><rect x="663" y="196" width="3" height="15" fill="rgb(244,86,8)"/><text x="666.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:743) (1 samples, 0.31%)</title><rect x="673" y="196" width="4" height="15" fill="rgb(225,155,6)"/><text x="676.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (2 samples, 0.61%)</title><rect x="677" y="196" width="7" height="15" fill="rgb(222,181,11)"/><text x="680.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (2 samples, 0.61%)</title><rect x="684" y="196" width="8" height="15" fill="rgb(230,69,53)"/><text x="687.00" y="206.50"></text></g><g><title>time_time (python3.7) (2 samples, 0.61%)</title><rect x="684" y="212" width="8" height="15" fill="rgb(225,56,0)"/><text x="687.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="688" y="228" width="4" height="15" fill="rgb(230,55,23)"/><text x="691.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.31%)</title><rect x="692" y="196" width="3" height="15" fill="rgb(217,139,18)"/><text x="695.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 1.22%)</title><rect x="702" y="244" width="15" height="15" fill="rgb(224,125,17)"/><text x="705.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.61%)</title><rect x="710" y="260" width="7" height="15" fill="rgb(215,120,7)"/><text x="713.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:255) (1 samples, 0.31%)</title><rect x="717" y="244" width="3" height="15" fill="rgb(213,16,52)"/><text x="720.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.31%)</title><rect x="731" y="292" width="4" height="15" fill="rgb(223,58,15)"/><text x="734.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.31%)</title><rect x="731" y="308" width="4" height="15" fill="rgb(215,143,31)"/><text x="734.00" y="318.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.31%)</title><rect x="731" y="324" width="4" height="15" fill="rgb(224,150,29)"/><text x="734.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.31%)</title><rect x="742" y="308" width="4" height="15" fill="rgb(207,72,6)"/><text x="745.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.31%)</title><rect x="742" y="324" width="4" height="15" fill="rgb(243,152,54)"/><text x="745.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.61%)</title><rect x="756" y="324" width="8" height="15" fill="rgb(206,34,37)"/><text x="759.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.53%)</title><rect x="775" y="340" width="18" height="15" fill="rgb(240,15,45)"/><text x="778.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 3.67%)</title><rect x="764" y="324" width="43" height="15" fill="rgb(234,155,30)"/><text x="767.00" y="334.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.22%)</title><rect x="793" y="340" width="14" height="15" fill="rgb(240,88,28)"/><text x="796.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (23 samples, 7.03%)</title><rect x="735" y="292" width="83" height="15" fill="rgb(250,106,50)"/><text x="738.00" y="302.50">predict_p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (20 samples, 6.12%)</title><rect x="746" y="308" width="72" height="15" fill="rgb(243,74,11)"/><text x="749.00" y="318.50">check_is..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.92%)</title><rect x="807" y="324" width="11" height="15" fill="rgb(208,128,49)"/><text x="810.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="814" y="340" width="4" height="15" fill="rgb(224,14,2)"/><text x="817.00" y="350.50"></text></g><g><title>0x7fe196edcd24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="818" y="308" width="3" height="15" fill="rgb(254,51,42)"/><text x="821.00" y="318.50"></text></g><g><title>0x7fe196ecbcd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="821" y="340" width="4" height="15" fill="rgb(246,193,9)"/><text x="824.00" y="350.50"></text></g><g><title>0x7fe196edbf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="821" y="324" width="8" height="15" fill="rgb(226,65,34)"/><text x="824.00" y="334.50"></text></g><g><title>0x7fe196ecbd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="825" y="340" width="4" height="15" fill="rgb(219,42,22)"/><text x="828.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.31%)</title><rect x="825" y="356" width="4" height="15" fill="rgb(226,30,12)"/><text x="828.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1161) (1 samples, 0.31%)</title><rect x="825" y="372" width="4" height="15" fill="rgb(252,100,17)"/><text x="828.00" y="382.50"></text></g><g><title>0x7fe196edbf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="829" y="324" width="3" height="15" fill="rgb(221,143,10)"/><text x="832.00" y="334.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.31%)</title><rect x="832" y="372" width="4" height="15" fill="rgb(217,205,52)"/><text x="835.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.31%)</title><rect x="832" y="388" width="4" height="15" fill="rgb(209,6,29)"/><text x="835.00" y="398.50"></text></g><g><title>0x7fe196eea225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="832" y="356" width="7" height="15" fill="rgb(232,152,6)"/><text x="835.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.31%)</title><rect x="836" y="372" width="3" height="15" fill="rgb(221,170,43)"/><text x="839.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:770) (1 samples, 0.31%)</title><rect x="839" y="420" width="4" height="15" fill="rgb(208,206,28)"/><text x="842.00" y="430.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.31%)</title><rect x="843" y="452" width="4" height="15" fill="rgb(237,60,52)"/><text x="846.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="843" y="468" width="4" height="15" fill="rgb(251,149,10)"/><text x="846.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.61%)</title><rect x="843" y="436" width="7" height="15" fill="rgb(248,136,43)"/><text x="846.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.31%)</title><rect x="847" y="452" width="3" height="15" fill="rgb(226,120,14)"/><text x="850.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.31%)</title><rect x="847" y="468" width="3" height="15" fill="rgb(208,5,52)"/><text x="850.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.31%)</title><rect x="847" y="484" width="3" height="15" fill="rgb(207,227,53)"/><text x="850.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="847" y="500" width="3" height="15" fill="rgb(231,209,23)"/><text x="850.00" y="510.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.31%)</title><rect x="850" y="436" width="4" height="15" fill="rgb(251,193,54)"/><text x="853.00" y="446.50"></text></g><g><title>0x7fe196ece666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.53%)</title><rect x="839" y="388" width="19" height="15" fill="rgb(244,10,49)"/><text x="842.00" y="398.50"></text></g><g><title>0x7fe196ec42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.53%)</title><rect x="839" y="404" width="19" height="15" fill="rgb(234,165,4)"/><text x="842.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.22%)</title><rect x="843" y="420" width="15" height="15" fill="rgb(251,162,17)"/><text x="846.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.31%)</title><rect x="854" y="436" width="4" height="15" fill="rgb(227,133,36)"/><text x="857.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.31%)</title><rect x="854" y="452" width="4" height="15" fill="rgb(208,177,40)"/><text x="857.00" y="462.50"></text></g><g><title>0x7fe1bd498bd8 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="854" y="468" width="4" height="15" fill="rgb(246,175,24)"/><text x="857.00" y="478.50"></text></g><g><title>0x7fe196eced04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.83%)</title><rect x="839" y="372" width="22" height="15" fill="rgb(250,215,45)"/><text x="842.00" y="382.50">0..</text></g><g><title>0x7fe196ece66e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="858" y="388" width="3" height="15" fill="rgb(209,95,9)"/><text x="861.00" y="398.50"></text></g><g><title>0x7fe196eb6d00 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="858" y="404" width="3" height="15" fill="rgb(247,213,23)"/><text x="861.00" y="414.50"></text></g><g><title>0x7fe196eea2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.14%)</title><rect x="839" y="356" width="26" height="15" fill="rgb(231,146,47)"/><text x="842.00" y="366.50">0..</text></g><g><title>0x7fe196ecee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="861" y="372" width="4" height="15" fill="rgb(209,115,13)"/><text x="864.00" y="382.50"></text></g><g><title>0x7fe196ec22a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="861" y="388" width="4" height="15" fill="rgb(219,206,5)"/><text x="864.00" y="398.50"></text></g><g><title>0x7fe196eea53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="865" y="356" width="3" height="15" fill="rgb(234,81,49)"/><text x="868.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.31%)</title><rect x="868" y="388" width="4" height="15" fill="rgb(232,32,51)"/><text x="871.00" y="398.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.31%)</title><rect x="872" y="388" width="4" height="15" fill="rgb(238,211,51)"/><text x="875.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.31%)</title><rect x="872" y="404" width="4" height="15" fill="rgb(235,145,15)"/><text x="875.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.31%)</title><rect x="872" y="420" width="4" height="15" fill="rgb(207,114,6)"/><text x="875.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.31%)</title><rect x="872" y="436" width="4" height="15" fill="rgb(242,47,54)"/><text x="875.00" y="446.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 0.92%)</title><rect x="868" y="372" width="11" height="15" fill="rgb(234,181,28)"/><text x="871.00" y="382.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="876" y="388" width="3" height="15" fill="rgb(233,60,15)"/><text x="879.00" y="398.50"></text></g><g><title>0x7fe1bd576df0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="876" y="404" width="3" height="15" fill="rgb(239,108,46)"/><text x="879.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.31%)</title><rect x="879" y="420" width="4" height="15" fill="rgb(251,86,49)"/><text x="882.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.31%)</title><rect x="879" y="436" width="4" height="15" fill="rgb(214,23,0)"/><text x="882.00" y="446.50"></text></g><g><title>0x7fe196eea592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.53%)</title><rect x="868" y="356" width="18" height="15" fill="rgb(219,97,1)"/><text x="871.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.61%)</title><rect x="879" y="372" width="7" height="15" fill="rgb(251,169,4)"/><text x="882.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.61%)</title><rect x="879" y="388" width="7" height="15" fill="rgb(218,130,49)"/><text x="882.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.61%)</title><rect x="879" y="404" width="7" height="15" fill="rgb(239,139,23)"/><text x="882.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.31%)</title><rect x="883" y="420" width="3" height="15" fill="rgb(238,229,0)"/><text x="886.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:132) (1 samples, 0.31%)</title><rect x="883" y="436" width="3" height="15" fill="rgb(209,50,24)"/><text x="886.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.31%)</title><rect x="883" y="452" width="3" height="15" fill="rgb(242,92,27)"/><text x="886.00" y="462.50"></text></g><g><title>0x7fe196eea6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="886" y="356" width="4" height="15" fill="rgb(237,74,46)"/><text x="889.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="886" y="372" width="4" height="15" fill="rgb(208,189,53)"/><text x="889.00" y="382.50"></text></g><g><title>0x7fe196eea92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="890" y="356" width="4" height="15" fill="rgb(242,9,18)"/><text x="893.00" y="366.50"></text></g><g><title>0x7fe196ebf9df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="890" y="372" width="4" height="15" fill="rgb(244,146,40)"/><text x="893.00" y="382.50"></text></g><g><title>0x7fe196eeb405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 5.50%)</title><rect x="832" y="340" width="65" height="15" fill="rgb(234,100,51)"/><text x="835.00" y="350.50">0x7fe19..</text></g><g><title>0x7fe196eeac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="894" y="356" width="3" height="15" fill="rgb(213,176,46)"/><text x="897.00" y="366.50"></text></g><g><title>0x7fe196ec25f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="894" y="372" width="3" height="15" fill="rgb(221,30,0)"/><text x="897.00" y="382.50"></text></g><g><title>0x7fe196ec1fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="894" y="388" width="3" height="15" fill="rgb(229,109,38)"/><text x="897.00" y="398.50"></text></g><g><title>0x7fe196ec1a03 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="894" y="404" width="3" height="15" fill="rgb(248,228,19)"/><text x="897.00" y="414.50"></text></g><g><title>0x7fe196ebf4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="897" y="372" width="4" height="15" fill="rgb(213,182,30)"/><text x="900.00" y="382.50"></text></g><g><title>0x7fe196edbfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 6.12%)</title><rect x="832" y="324" width="72" height="15" fill="rgb(241,24,38)"/><text x="835.00" y="334.50">0x7fe196..</text></g><g><title>0x7fe196eeb540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="897" y="340" width="7" height="15" fill="rgb(249,97,28)"/><text x="900.00" y="350.50"></text></g><g><title>0x7fe196ec02f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.61%)</title><rect x="897" y="356" width="7" height="15" fill="rgb(252,127,29)"/><text x="900.00" y="366.50"></text></g><g><title>0x7fe196ebf530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="901" y="372" width="3" height="15" fill="rgb(238,105,7)"/><text x="904.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.31%)</title><rect x="901" y="388" width="3" height="15" fill="rgb(234,50,51)"/><text x="904.00" y="398.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3006) (1 samples, 0.31%)</title><rect x="904" y="372" width="4" height="15" fill="rgb(237,149,32)"/><text x="907.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (2 samples, 0.61%)</title><rect x="904" y="356" width="8" height="15" fill="rgb(213,64,52)"/><text x="907.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.31%)</title><rect x="908" y="372" width="4" height="15" fill="rgb(226,211,28)"/><text x="911.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.31%)</title><rect x="908" y="388" width="4" height="15" fill="rgb(236,207,23)"/><text x="911.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.31%)</title><rect x="908" y="404" width="4" height="15" fill="rgb(232,143,51)"/><text x="911.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.31%)</title><rect x="908" y="420" width="4" height="15" fill="rgb(238,23,24)"/><text x="911.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.31%)</title><rect x="908" y="436" width="4" height="15" fill="rgb(216,110,11)"/><text x="911.00" y="446.50"></text></g><g><title>0x7fe196edc05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.92%)</title><rect x="904" y="324" width="11" height="15" fill="rgb(219,89,6)"/><text x="907.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.92%)</title><rect x="904" y="340" width="11" height="15" fill="rgb(235,74,9)"/><text x="907.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.31%)</title><rect x="912" y="356" width="3" height="15" fill="rgb(238,117,44)"/><text x="915.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="912" y="372" width="3" height="15" fill="rgb(237,122,1)"/><text x="915.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.31%)</title><rect x="912" y="388" width="3" height="15" fill="rgb(231,155,20)"/><text x="915.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.31%)</title><rect x="912" y="404" width="3" height="15" fill="rgb(223,168,36)"/><text x="915.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:145) (1 samples, 0.31%)</title><rect x="912" y="420" width="3" height="15" fill="rgb(247,191,21)"/><text x="915.00" y="430.50"></text></g><g><title>0x7fe196edc14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="915" y="324" width="4" height="15" fill="rgb(221,91,31)"/><text x="918.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="915" y="340" width="4" height="15" fill="rgb(234,148,43)"/><text x="918.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="915" y="356" width="4" height="15" fill="rgb(210,46,49)"/><text x="918.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:722) (1 samples, 0.31%)</title><rect x="915" y="372" width="4" height="15" fill="rgb(246,129,35)"/><text x="918.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (29 samples, 8.87%)</title><rect x="818" y="292" width="104" height="15" fill="rgb(215,119,53)"/><text x="821.00" y="302.50">predict_prob..</text></g><g><title>0x7fe196edcd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 8.56%)</title><rect x="821" y="308" width="101" height="15" fill="rgb(212,28,8)"/><text x="824.00" y="318.50">0x7fe196edcd..</text></g><g><title>0x7fe196edc328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="919" y="324" width="3" height="15" fill="rgb(209,54,22)"/><text x="922.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.31%)</title><rect x="919" y="340" width="3" height="15" fill="rgb(210,201,18)"/><text x="922.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:45) (1 samples, 0.31%)</title><rect x="919" y="356" width="3" height="15" fill="rgb(220,45,44)"/><text x="922.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.31%)</title><rect x="922" y="292" width="4" height="15" fill="rgb(243,175,31)"/><text x="925.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.31%)</title><rect x="926" y="292" width="4" height="15" fill="rgb(251,163,23)"/><text x="929.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.31%)</title><rect x="937" y="404" width="4" height="15" fill="rgb(216,125,51)"/><text x="940.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.61%)</title><rect x="937" y="356" width="7" height="15" fill="rgb(248,226,45)"/><text x="940.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.61%)</title><rect x="937" y="372" width="7" height="15" fill="rgb(247,141,10)"/><text x="940.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.61%)</title><rect x="937" y="388" width="7" height="15" fill="rgb(231,31,8)"/><text x="940.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.31%)</title><rect x="941" y="404" width="3" height="15" fill="rgb(213,69,10)"/><text x="944.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.31%)</title><rect x="941" y="420" width="3" height="15" fill="rgb(224,203,44)"/><text x="944.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.31%)</title><rect x="941" y="436" width="3" height="15" fill="rgb(212,166,49)"/><text x="944.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.61%)</title><rect x="944" y="372" width="7" height="15" fill="rgb(249,18,36)"/><text x="947.00" y="382.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:1007) (1 samples, 0.31%)</title><rect x="948" y="388" width="3" height="15" fill="rgb(226,180,32)"/><text x="951.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.31%)</title><rect x="951" y="388" width="4" height="15" fill="rgb(238,4,45)"/><text x="954.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.31%)</title><rect x="951" y="404" width="4" height="15" fill="rgb(206,101,29)"/><text x="954.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.31%)</title><rect x="951" y="420" width="4" height="15" fill="rgb(241,13,15)"/><text x="954.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.31%)</title><rect x="951" y="436" width="4" height="15" fill="rgb(239,93,46)"/><text x="954.00" y="446.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.31%)</title><rect x="955" y="436" width="4" height="15" fill="rgb(207,174,52)"/><text x="958.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="955" y="452" width="4" height="15" fill="rgb(224,8,12)"/><text x="958.00" y="462.50"></text></g><g><title>0x7fe1bd4509f1 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="955" y="468" width="4" height="15" fill="rgb(214,68,11)"/><text x="958.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.61%)</title><rect x="955" y="404" width="7" height="15" fill="rgb(249,122,36)"/><text x="958.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.61%)</title><rect x="955" y="420" width="7" height="15" fill="rgb(213,176,40)"/><text x="958.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.31%)</title><rect x="959" y="436" width="3" height="15" fill="rgb(245,147,7)"/><text x="962.00" y="446.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.31%)</title><rect x="959" y="452" width="3" height="15" fill="rgb(253,200,2)"/><text x="962.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.31%)</title><rect x="962" y="404" width="4" height="15" fill="rgb(215,216,15)"/><text x="965.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.31%)</title><rect x="962" y="420" width="4" height="15" fill="rgb(233,73,38)"/><text x="965.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.31%)</title><rect x="962" y="436" width="4" height="15" fill="rgb(238,88,0)"/><text x="965.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.31%)</title><rect x="962" y="452" width="4" height="15" fill="rgb(242,36,42)"/><text x="965.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.31%)</title><rect x="962" y="468" width="4" height="15" fill="rgb(225,187,13)"/><text x="965.00" y="478.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:948) (1 samples, 0.31%)</title><rect x="962" y="484" width="4" height="15" fill="rgb(228,205,2)"/><text x="965.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="966" y="404" width="3" height="15" fill="rgb(228,9,20)"/><text x="969.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.31%)</title><rect x="966" y="420" width="3" height="15" fill="rgb(208,142,4)"/><text x="969.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.31%)</title><rect x="966" y="436" width="3" height="15" fill="rgb(232,103,37)"/><text x="969.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.31%)</title><rect x="969" y="404" width="4" height="15" fill="rgb(212,148,17)"/><text x="972.00" y="414.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.31%)</title><rect x="969" y="420" width="4" height="15" fill="rgb(250,72,54)"/><text x="972.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.31%)</title><rect x="969" y="436" width="4" height="15" fill="rgb(218,53,12)"/><text x="972.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (13 samples, 3.98%)</title><rect x="930" y="292" width="47" height="15" fill="rgb(216,110,41)"/><text x="933.00" y="302.50">pred..</text></g><g><title>array_sum (methods.c:2215) (13 samples, 3.98%)</title><rect x="930" y="308" width="47" height="15" fill="rgb(230,49,0)"/><text x="933.00" y="318.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 3.98%)</title><rect x="930" y="324" width="47" height="15" fill="rgb(207,69,49)"/><text x="933.00" y="334.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 3.98%)</title><rect x="930" y="340" width="47" height="15" fill="rgb(243,200,2)"/><text x="933.00" y="350.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 2.75%)</title><rect x="944" y="356" width="33" height="15" fill="rgb(243,58,30)"/><text x="947.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 2.14%)</title><rect x="951" y="372" width="26" height="15" fill="rgb(214,45,19)"/><text x="954.00" y="382.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.83%)</title><rect x="955" y="388" width="22" height="15" fill="rgb(233,185,33)"/><text x="958.00" y="398.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:584) (1 samples, 0.31%)</title><rect x="973" y="404" width="4" height="15" fill="rgb(234,160,12)"/><text x="976.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.31%)</title><rect x="977" y="308" width="3" height="15" fill="rgb(212,36,49)"/><text x="980.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:564) (1 samples, 0.31%)</title><rect x="977" y="324" width="3" height="15" fill="rgb(223,26,2)"/><text x="980.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.31%)</title><rect x="977" y="340" width="3" height="15" fill="rgb(220,77,35)"/><text x="980.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.31%)</title><rect x="980" y="308" width="4" height="15" fill="rgb(210,152,4)"/><text x="983.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.31%)</title><rect x="980" y="324" width="4" height="15" fill="rgb(223,221,2)"/><text x="983.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.31%)</title><rect x="980" y="340" width="4" height="15" fill="rgb(219,18,16)"/><text x="983.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.31%)</title><rect x="980" y="356" width="4" height="15" fill="rgb(214,52,18)"/><text x="983.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="980" y="372" width="4" height="15" fill="rgb(224,153,49)"/><text x="983.00" y="382.50"></text></g><g><title>0x7fe1bd43a318 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="980" y="388" width="4" height="15" fill="rgb(221,42,3)"/><text x="983.00" y="398.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.31%)</title><rect x="984" y="308" width="3" height="15" fill="rgb(244,224,49)"/><text x="987.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:147) (1 samples, 0.31%)</title><rect x="984" y="324" width="3" height="15" fill="rgb(213,78,19)"/><text x="987.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:108) (1 samples, 0.31%)</title><rect x="984" y="340" width="3" height="15" fill="rgb(236,42,6)"/><text x="987.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="987" y="340" width="4" height="15" fill="rgb(253,131,20)"/><text x="990.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.31%)</title><rect x="987" y="356" width="4" height="15" fill="rgb(229,188,16)"/><text x="990.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.31%)</title><rect x="987" y="372" width="4" height="15" fill="rgb(226,133,1)"/><text x="990.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.31%)</title><rect x="987" y="388" width="4" height="15" fill="rgb(229,152,46)"/><text x="990.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.31%)</title><rect x="987" y="404" width="4" height="15" fill="rgb(237,78,50)"/><text x="990.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.31%)</title><rect x="991" y="340" width="4" height="15" fill="rgb(217,152,32)"/><text x="994.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.31%)</title><rect x="991" y="356" width="4" height="15" fill="rgb(213,83,19)"/><text x="994.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.92%)</title><rect x="987" y="324" width="11" height="15" fill="rgb(213,34,17)"/><text x="990.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="995" y="340" width="3" height="15" fill="rgb(234,42,37)"/><text x="998.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.31%)</title><rect x="995" y="356" width="3" height="15" fill="rgb(224,65,26)"/><text x="998.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="995" y="372" width="3" height="15" fill="rgb(246,121,33)"/><text x="998.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.31%)</title><rect x="995" y="388" width="3" height="15" fill="rgb(219,178,39)"/><text x="998.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.31%)</title><rect x="995" y="404" width="3" height="15" fill="rgb(213,184,26)"/><text x="998.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.31%)</title><rect x="995" y="420" width="3" height="15" fill="rgb(242,184,35)"/><text x="998.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="995" y="436" width="3" height="15" fill="rgb(225,110,8)"/><text x="998.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="998" y="340" width="4" height="15" fill="rgb(239,118,8)"/><text x="1001.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="998" y="356" width="4" height="15" fill="rgb(227,30,40)"/><text x="1001.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="998" y="372" width="4" height="15" fill="rgb(226,201,11)"/><text x="1001.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 2.45%)</title><rect x="977" y="292" width="28" height="15" fill="rgb(219,115,51)"/><text x="980.00" y="302.50">p..</text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 1.53%)</title><rect x="987" y="308" width="18" height="15" fill="rgb(228,203,3)"/><text x="990.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.61%)</title><rect x="998" y="324" width="7" height="15" fill="rgb(243,20,17)"/><text x="1001.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:523) (1 samples, 0.31%)</title><rect x="1002" y="340" width="3" height="15" fill="rgb(210,116,19)"/><text x="1005.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.31%)</title><rect x="1013" y="324" width="3" height="15" fill="rgb(237,209,32)"/><text x="1016.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (2 samples, 0.61%)</title><rect x="1016" y="372" width="8" height="15" fill="rgb(233,117,25)"/><text x="1019.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (82 samples, 25.08%)</title><rect x="731" y="276" width="296" height="15" fill="rgb(253,100,32)"/><text x="734.00" y="286.50">_accumulate_prediction (sklearn/ensembl..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (6 samples, 1.83%)</title><rect x="1005" y="292" width="22" height="15" fill="rgb(216,146,13)"/><text x="1008.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.22%)</title><rect x="1013" y="308" width="14" height="15" fill="rgb(214,54,34)"/><text x="1016.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.92%)</title><rect x="1016" y="324" width="11" height="15" fill="rgb(237,16,5)"/><text x="1019.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.92%)</title><rect x="1016" y="340" width="11" height="15" fill="rgb(234,158,38)"/><text x="1019.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.92%)</title><rect x="1016" y="356" width="11" height="15" fill="rgb(237,19,1)"/><text x="1019.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="1024" y="372" width="3" height="15" fill="rgb(254,160,26)"/><text x="1027.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2722) (1 samples, 0.31%)</title><rect x="1024" y="388" width="3" height="15" fill="rgb(218,72,14)"/><text x="1027.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.31%)</title><rect x="1027" y="276" width="4" height="15" fill="rgb(210,32,30)"/><text x="1030.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="1027" y="292" width="4" height="15" fill="rgb(217,188,23)"/><text x="1030.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="1027" y="308" width="4" height="15" fill="rgb(249,86,50)"/><text x="1030.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.31%)</title><rect x="1031" y="276" width="3" height="15" fill="rgb(220,30,20)"/><text x="1034.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:502) (1 samples, 0.31%)</title><rect x="1045" y="324" width="4" height="15" fill="rgb(238,49,46)"/><text x="1048.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 1.53%)</title><rect x="1034" y="276" width="18" height="15" fill="rgb(237,123,37)"/><text x="1037.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.61%)</title><rect x="1045" y="292" width="7" height="15" fill="rgb(224,28,48)"/><text x="1048.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.61%)</title><rect x="1045" y="308" width="7" height="15" fill="rgb(238,181,41)"/><text x="1048.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.31%)</title><rect x="1049" y="324" width="3" height="15" fill="rgb(247,149,15)"/><text x="1052.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.31%)</title><rect x="1049" y="340" width="3" height="15" fill="rgb(217,10,4)"/><text x="1052.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.31%)</title><rect x="1049" y="356" width="3" height="15" fill="rgb(212,165,6)"/><text x="1052.00" y="366.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.31%)</title><rect x="1049" y="372" width="3" height="15" fill="rgb(213,44,2)"/><text x="1052.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (2 samples, 0.61%)</title><rect x="1052" y="276" width="8" height="15" fill="rgb(251,211,45)"/><text x="1055.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="1056" y="292" width="4" height="15" fill="rgb(226,121,43)"/><text x="1059.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="1056" y="308" width="4" height="15" fill="rgb(233,132,25)"/><text x="1059.00" y="318.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1056" y="324" width="4" height="15" fill="rgb(216,200,49)"/><text x="1059.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (92 samples, 28.13%)</title><rect x="731" y="260" width="332" height="15" fill="rgb(251,73,31)"/><text x="734.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="1060" y="276" width="3" height="15" fill="rgb(226,186,49)"/><text x="1063.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="1060" y="292" width="3" height="15" fill="rgb(225,220,22)"/><text x="1063.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="1060" y="308" width="3" height="15" fill="rgb(231,161,43)"/><text x="1063.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.31%)</title><rect x="1063" y="276" width="4" height="15" fill="rgb(205,29,0)"/><text x="1066.00" y="286.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.31%)</title><rect x="1067" y="276" width="3" height="15" fill="rgb(207,0,40)"/><text x="1070.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (104 samples, 31.80%)</title><rect x="699" y="212" width="375" height="15" fill="rgb(208,16,49)"/><text x="702.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (104 samples, 31.80%)</title><rect x="699" y="228" width="375" height="15" fill="rgb(238,39,22)"/><text x="702.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (98 samples, 29.97%)</title><rect x="720" y="244" width="354" height="15" fill="rgb(226,91,52)"/><text x="723.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.92%)</title><rect x="1063" y="260" width="11" height="15" fill="rgb(237,211,32)"/><text x="1066.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:222) (1 samples, 0.31%)</title><rect x="1070" y="276" width="4" height="15" fill="rgb(212,196,49)"/><text x="1073.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.31%)</title><rect x="1074" y="228" width="4" height="15" fill="rgb(207,83,29)"/><text x="1077.00" y="238.50"></text></g><g><title>0x7ffee739ba01 ([vdso]) (1 samples, 0.31%)</title><rect x="1081" y="244" width="4" height="15" fill="rgb(232,35,39)"/><text x="1084.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (3 samples, 0.92%)</title><rect x="1078" y="228" width="10" height="15" fill="rgb(209,167,49)"/><text x="1081.00" y="238.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.31%)</title><rect x="1085" y="244" width="3" height="15" fill="rgb(224,133,7)"/><text x="1088.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1085" y="260" width="3" height="15" fill="rgb(253,158,20)"/><text x="1088.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (192 samples, 58.72%)</title><rect x="399" y="164" width="693" height="15" fill="rgb(239,176,0)"/><text x="402.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (118 samples, 36.09%)</title><rect x="666" y="180" width="426" height="15" fill="rgb(219,100,16)"/><text x="669.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (110 samples, 33.64%)</title><rect x="695" y="196" width="397" height="15" fill="rgb(234,60,23)"/><text x="698.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (5 samples, 1.53%)</title><rect x="1074" y="212" width="18" height="15" fill="rgb(211,141,37)"/><text x="1077.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.31%)</title><rect x="1088" y="228" width="4" height="15" fill="rgb(237,73,24)"/><text x="1091.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:855) (1 samples, 0.31%)</title><rect x="1088" y="244" width="4" height="15" fill="rgb(246,181,11)"/><text x="1091.00" y="254.50"></text></g><g><title>retrieve (joblib/parallel.py:896) (1 samples, 0.31%)</title><rect x="1092" y="180" width="4" height="15" fill="rgb(245,125,37)"/><text x="1095.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.31%)</title><rect x="1096" y="180" width="3" height="15" fill="rgb(218,146,34)"/><text x="1099.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:38) (300 samples, 91.74%)</title><rect x="20" y="52" width="1083" height="15" fill="rgb(235,146,13)"/><text x="23.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:37) (300 samples, 91.74%)</title><rect x="20" y="68" width="1083" height="15" fill="rgb(247,95,33)"/><text x="23.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29) (300 samples, 91.74%)</title><rect x="20" y="84" width="1083" height="15" fill="rgb(240,50,21)"/><text x="23.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:23) (199 samples, 60.86%)</title><rect x="385" y="100" width="718" height="15" fill="rgb(233,26,26)"/><text x="388.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (199 samples, 60.86%)</title><rect x="385" y="116" width="718" height="15" fill="rgb(207,192,51)"/><text x="388.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (199 samples, 60.86%)</title><rect x="385" y="132" width="718" height="15" fill="rgb(254,1,16)"/><text x="388.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (198 samples, 60.55%)</title><rect x="388" y="148" width="715" height="15" fill="rgb(225,46,38)"/><text x="391.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (3 samples, 0.92%)</title><rect x="1092" y="164" width="11" height="15" fill="rgb(232,155,1)"/><text x="1095.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.31%)</title><rect x="1099" y="180" width="4" height="15" fill="rgb(219,192,10)"/><text x="1102.00" y="190.50"></text></g><g><title>0x7fe1bd4b8ee6 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1099" y="196" width="4" height="15" fill="rgb(217,81,7)"/><text x="1102.00" y="206.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.31%)</title><rect x="1103" y="244" width="4" height="15" fill="rgb(225,138,52)"/><text x="1106.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1103" y="260" width="4" height="15" fill="rgb(241,41,31)"/><text x="1106.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1103" y="276" width="4" height="15" fill="rgb(242,27,51)"/><text x="1106.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1103" y="292" width="4" height="15" fill="rgb(222,150,12)"/><text x="1106.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1103" y="308" width="4" height="15" fill="rgb(247,150,39)"/><text x="1106.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1103" y="324" width="4" height="15" fill="rgb(236,23,7)"/><text x="1106.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1103" y="340" width="4" height="15" fill="rgb(218,47,51)"/><text x="1106.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1103" y="356" width="4" height="15" fill="rgb(231,162,13)"/><text x="1106.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.31%)</title><rect x="1103" y="372" width="4" height="15" fill="rgb(240,3,29)"/><text x="1106.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1103" y="388" width="4" height="15" fill="rgb(214,48,4)"/><text x="1106.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1103" y="404" width="4" height="15" fill="rgb(233,143,25)"/><text x="1106.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1103" y="420" width="4" height="15" fill="rgb(226,156,11)"/><text x="1106.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1103" y="436" width="4" height="15" fill="rgb(250,57,36)"/><text x="1106.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1103" y="452" width="4" height="15" fill="rgb(238,214,49)"/><text x="1106.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1103" y="468" width="4" height="15" fill="rgb(230,71,39)"/><text x="1106.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1103" y="484" width="4" height="15" fill="rgb(254,40,11)"/><text x="1106.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.31%)</title><rect x="1103" y="500" width="4" height="15" fill="rgb(208,200,54)"/><text x="1106.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1103" y="516" width="4" height="15" fill="rgb(241,16,53)"/><text x="1106.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1103" y="532" width="4" height="15" fill="rgb(226,66,4)"/><text x="1106.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1103" y="548" width="4" height="15" fill="rgb(229,196,7)"/><text x="1106.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1103" y="564" width="4" height="15" fill="rgb(244,213,22)"/><text x="1106.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1103" y="580" width="4" height="15" fill="rgb(221,216,51)"/><text x="1106.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1103" y="596" width="4" height="15" fill="rgb(237,102,38)"/><text x="1106.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1103" y="612" width="4" height="15" fill="rgb(221,170,14)"/><text x="1106.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py:3562) (1 samples, 0.31%)</title><rect x="1103" y="628" width="4" height="15" fill="rgb(239,16,5)"/><text x="1106.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.31%)</title><rect x="1103" y="644" width="4" height="15" fill="rgb(245,143,24)"/><text x="1106.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.31%)</title><rect x="1107" y="372" width="3" height="15" fill="rgb(249,194,14)"/><text x="1110.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1107" y="388" width="3" height="15" fill="rgb(229,76,42)"/><text x="1110.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1107" y="404" width="3" height="15" fill="rgb(232,52,53)"/><text x="1110.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1107" y="420" width="3" height="15" fill="rgb(223,199,53)"/><text x="1110.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1107" y="436" width="3" height="15" fill="rgb(236,153,25)"/><text x="1110.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1107" y="452" width="3" height="15" fill="rgb(231,205,17)"/><text x="1110.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (1 samples, 0.31%)</title><rect x="1107" y="468" width="3" height="15" fill="rgb(225,38,54)"/><text x="1110.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1107" y="484" width="3" height="15" fill="rgb(219,128,36)"/><text x="1110.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1107" y="500" width="3" height="15" fill="rgb(253,154,15)"/><text x="1110.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1107" y="516" width="3" height="15" fill="rgb(253,15,30)"/><text x="1110.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1107" y="532" width="3" height="15" fill="rgb(212,139,31)"/><text x="1110.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1107" y="548" width="3" height="15" fill="rgb(217,112,20)"/><text x="1110.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py:42) (1 samples, 0.31%)</title><rect x="1107" y="564" width="3" height="15" fill="rgb(220,210,18)"/><text x="1110.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1107" y="580" width="3" height="15" fill="rgb(240,40,14)"/><text x="1110.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1107" y="596" width="3" height="15" fill="rgb(229,96,42)"/><text x="1110.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1107" y="612" width="3" height="15" fill="rgb(239,145,49)"/><text x="1110.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1107" y="628" width="3" height="15" fill="rgb(217,200,48)"/><text x="1110.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1107" y="644" width="3" height="15" fill="rgb(225,113,11)"/><text x="1110.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py:15) (1 samples, 0.31%)</title><rect x="1107" y="660" width="3" height="15" fill="rgb(229,12,35)"/><text x="1110.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1107" y="676" width="3" height="15" fill="rgb(252,117,9)"/><text x="1110.00" y="686.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.31%)</title><rect x="1107" y="692" width="3" height="15" fill="rgb(242,168,32)"/><text x="1110.00" y="702.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:105) (1 samples, 0.31%)</title><rect x="1107" y="708" width="3" height="15" fill="rgb(240,164,14)"/><text x="1110.00" y="718.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:1) (3 samples, 0.92%)</title><rect x="1103" y="148" width="11" height="15" fill="rgb(244,28,8)"/><text x="1106.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1103" y="164" width="11" height="15" fill="rgb(250,214,3)"/><text x="1106.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1103" y="180" width="11" height="15" fill="rgb(238,34,29)"/><text x="1106.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1103" y="196" width="11" height="15" fill="rgb(231,119,47)"/><text x="1106.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1103" y="212" width="11" height="15" fill="rgb(253,95,41)"/><text x="1106.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1103" y="228" width="11" height="15" fill="rgb(211,167,38)"/><text x="1106.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (2 samples, 0.61%)</title><rect x="1107" y="244" width="7" height="15" fill="rgb(216,114,5)"/><text x="1110.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.61%)</title><rect x="1107" y="260" width="7" height="15" fill="rgb(214,86,42)"/><text x="1110.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1107" y="276" width="7" height="15" fill="rgb(246,14,37)"/><text x="1110.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1107" y="292" width="7" height="15" fill="rgb(240,173,29)"/><text x="1110.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1107" y="308" width="7" height="15" fill="rgb(236,161,8)"/><text x="1110.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1107" y="324" width="7" height="15" fill="rgb(219,102,36)"/><text x="1110.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1107" y="340" width="7" height="15" fill="rgb(216,172,50)"/><text x="1110.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1107" y="356" width="7" height="15" fill="rgb(245,107,4)"/><text x="1110.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:25) (1 samples, 0.31%)</title><rect x="1110" y="372" width="4" height="15" fill="rgb(207,153,46)"/><text x="1113.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1110" y="388" width="4" height="15" fill="rgb(214,42,14)"/><text x="1113.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1110" y="404" width="4" height="15" fill="rgb(228,66,9)"/><text x="1113.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1110" y="420" width="4" height="15" fill="rgb(206,45,45)"/><text x="1113.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1110" y="436" width="4" height="15" fill="rgb(238,38,32)"/><text x="1113.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1110" y="452" width="4" height="15" fill="rgb(228,79,0)"/><text x="1113.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py:793) (1 samples, 0.31%)</title><rect x="1110" y="468" width="4" height="15" fill="rgb(233,194,14)"/><text x="1113.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.31%)</title><rect x="1110" y="484" width="4" height="15" fill="rgb(246,92,10)"/><text x="1113.00" y="494.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="1114" y="900" width="3" height="15" fill="rgb(215,200,9)"/><text x="1117.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.31%)</title><rect x="1114" y="916" width="3" height="15" fill="rgb(234,5,45)"/><text x="1117.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.31%)</title><rect x="1114" y="932" width="3" height="15" fill="rgb(226,17,27)"/><text x="1117.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.31%)</title><rect x="1114" y="948" width="3" height="15" fill="rgb(244,82,28)"/><text x="1117.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.31%)</title><rect x="1114" y="964" width="3" height="15" fill="rgb(250,120,27)"/><text x="1117.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.61%)</title><rect x="1114" y="852" width="7" height="15" fill="rgb(216,3,35)"/><text x="1117.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.61%)</title><rect x="1114" y="868" width="7" height="15" fill="rgb(254,125,24)"/><text x="1117.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.61%)</title><rect x="1114" y="884" width="7" height="15" fill="rgb(244,102,14)"/><text x="1117.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.31%)</title><rect x="1117" y="900" width="4" height="15" fill="rgb(239,111,5)"/><text x="1120.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.31%)</title><rect x="1117" y="916" width="4" height="15" fill="rgb(243,202,15)"/><text x="1120.00" y="926.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.92%)</title><rect x="1114" y="820" width="11" height="15" fill="rgb(248,169,44)"/><text x="1117.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.92%)</title><rect x="1114" y="836" width="11" height="15" fill="rgb(208,122,26)"/><text x="1117.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.31%)</title><rect x="1121" y="852" width="4" height="15" fill="rgb(240,160,29)"/><text x="1124.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="1121" y="868" width="4" height="15" fill="rgb(221,163,27)"/><text x="1124.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="1121" y="884" width="4" height="15" fill="rgb(208,82,14)"/><text x="1124.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.31%)</title><rect x="1121" y="900" width="4" height="15" fill="rgb(248,48,2)"/><text x="1124.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.31%)</title><rect x="1121" y="916" width="4" height="15" fill="rgb(251,125,8)"/><text x="1124.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.31%)</title><rect x="1121" y="932" width="4" height="15" fill="rgb(223,117,47)"/><text x="1124.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.31%)</title><rect x="1121" y="948" width="4" height="15" fill="rgb(246,112,37)"/><text x="1124.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2556) (1 samples, 0.31%)</title><rect x="1121" y="964" width="4" height="15" fill="rgb(241,128,3)"/><text x="1124.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2767) (1 samples, 0.31%)</title><rect x="1121" y="980" width="4" height="15" fill="rgb(236,190,42)"/><text x="1124.00" y="990.50"></text></g><g><title>get_metadata_lines (pkg_resources/__init__.py:1911) (1 samples, 0.31%)</title><rect x="1121" y="996" width="4" height="15" fill="rgb(245,149,52)"/><text x="1124.00" y="1006.50"></text></g><g><title>get_metadata (pkg_resources/__init__.py:1897) (1 samples, 0.31%)</title><rect x="1121" y="1012" width="4" height="15" fill="rgb(206,8,50)"/><text x="1124.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (4 samples, 1.22%)</title><rect x="1114" y="148" width="14" height="15" fill="rgb(221,131,45)"/><text x="1117.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="164" width="14" height="15" fill="rgb(211,139,35)"/><text x="1117.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.22%)</title><rect x="1114" y="180" width="14" height="15" fill="rgb(229,184,12)"/><text x="1117.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="196" width="14" height="15" fill="rgb(227,54,29)"/><text x="1117.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="212" width="14" height="15" fill="rgb(212,188,14)"/><text x="1117.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1114" y="228" width="14" height="15" fill="rgb(240,93,28)"/><text x="1117.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1114" y="244" width="14" height="15" fill="rgb(247,149,24)"/><text x="1117.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1114" y="260" width="14" height="15" fill="rgb(221,55,46)"/><text x="1117.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="276" width="14" height="15" fill="rgb(226,94,25)"/><text x="1117.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.22%)</title><rect x="1114" y="292" width="14" height="15" fill="rgb(228,75,9)"/><text x="1117.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="308" width="14" height="15" fill="rgb(229,177,32)"/><text x="1117.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1114" y="324" width="14" height="15" fill="rgb(222,187,18)"/><text x="1117.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1114" y="340" width="14" height="15" fill="rgb(214,147,20)"/><text x="1117.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1114" y="356" width="14" height="15" fill="rgb(254,175,15)"/><text x="1117.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="372" width="14" height="15" fill="rgb(246,106,0)"/><text x="1117.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.22%)</title><rect x="1114" y="388" width="14" height="15" fill="rgb(228,158,33)"/><text x="1117.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="404" width="14" height="15" fill="rgb(232,183,32)"/><text x="1117.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1114" y="420" width="14" height="15" fill="rgb(213,40,3)"/><text x="1117.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1114" y="436" width="14" height="15" fill="rgb(252,191,31)"/><text x="1117.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1114" y="452" width="14" height="15" fill="rgb(217,199,34)"/><text x="1117.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="468" width="14" height="15" fill="rgb(235,190,19)"/><text x="1117.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.22%)</title><rect x="1114" y="484" width="14" height="15" fill="rgb(217,179,27)"/><text x="1117.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="500" width="14" height="15" fill="rgb(215,57,5)"/><text x="1117.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1114" y="516" width="14" height="15" fill="rgb(218,144,37)"/><text x="1117.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1114" y="532" width="14" height="15" fill="rgb(224,125,49)"/><text x="1117.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1114" y="548" width="14" height="15" fill="rgb(249,131,8)"/><text x="1117.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="564" width="14" height="15" fill="rgb(247,121,37)"/><text x="1117.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.22%)</title><rect x="1114" y="580" width="14" height="15" fill="rgb(214,71,46)"/><text x="1117.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="596" width="14" height="15" fill="rgb(217,162,39)"/><text x="1117.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.22%)</title><rect x="1114" y="612" width="14" height="15" fill="rgb(252,21,24)"/><text x="1117.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="628" width="14" height="15" fill="rgb(236,207,45)"/><text x="1117.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="644" width="14" height="15" fill="rgb(254,49,2)"/><text x="1117.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1114" y="660" width="14" height="15" fill="rgb(248,160,41)"/><text x="1117.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1114" y="676" width="14" height="15" fill="rgb(209,201,29)"/><text x="1117.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1114" y="692" width="14" height="15" fill="rgb(206,79,14)"/><text x="1117.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="708" width="14" height="15" fill="rgb(228,60,35)"/><text x="1117.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.22%)</title><rect x="1114" y="724" width="14" height="15" fill="rgb(206,35,17)"/><text x="1117.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1114" y="740" width="14" height="15" fill="rgb(215,124,26)"/><text x="1117.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1114" y="756" width="14" height="15" fill="rgb(206,135,17)"/><text x="1117.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1114" y="772" width="14" height="15" fill="rgb(212,153,10)"/><text x="1117.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1114" y="788" width="14" height="15" fill="rgb(215,187,38)"/><text x="1117.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1114" y="804" width="14" height="15" fill="rgb(230,185,21)"/><text x="1117.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.31%)</title><rect x="1125" y="820" width="3" height="15" fill="rgb(236,126,6)"/><text x="1128.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1125" y="836" width="3" height="15" fill="rgb(228,124,7)"/><text x="1128.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1125" y="852" width="3" height="15" fill="rgb(232,148,39)"/><text x="1128.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1125" y="868" width="3" height="15" fill="rgb(212,14,44)"/><text x="1128.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1125" y="884" width="3" height="15" fill="rgb(238,170,2)"/><text x="1128.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1125" y="900" width="3" height="15" fill="rgb(235,96,10)"/><text x="1128.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.31%)</title><rect x="1125" y="916" width="3" height="15" fill="rgb(218,226,43)"/><text x="1128.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.31%)</title><rect x="1125" y="932" width="3" height="15" fill="rgb(214,208,7)"/><text x="1128.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1125" y="948" width="3" height="15" fill="rgb(236,17,41)"/><text x="1128.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="1125" y="964" width="3" height="15" fill="rgb(212,43,52)"/><text x="1128.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.31%)</title><rect x="1125" y="980" width="3" height="15" fill="rgb(238,177,3)"/><text x="1128.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.31%)</title><rect x="1125" y="996" width="3" height="15" fill="rgb(224,132,32)"/><text x="1128.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.31%)</title><rect x="1125" y="1012" width="3" height="15" fill="rgb(213,109,4)"/><text x="1128.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.31%)</title><rect x="1125" y="1028" width="3" height="15" fill="rgb(205,200,44)"/><text x="1128.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.31%)</title><rect x="1125" y="1044" width="3" height="15" fill="rgb(205,224,44)"/><text x="1128.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.31%)</title><rect x="1125" y="1060" width="3" height="15" fill="rgb(234,16,19)"/><text x="1128.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.31%)</title><rect x="1125" y="1076" width="3" height="15" fill="rgb(240,199,33)"/><text x="1128.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.31%)</title><rect x="1125" y="1092" width="3" height="15" fill="rgb(227,65,36)"/><text x="1128.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.31%)</title><rect x="1125" y="1108" width="3" height="15" fill="rgb(243,41,29)"/><text x="1128.00" y="1118.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.31%)</title><rect x="1125" y="1124" width="3" height="15" fill="rgb(212,143,23)"/><text x="1128.00" y="1134.50"></text></g><g><title>_optimize_charset (sre_compile.py:397) (1 samples, 0.31%)</title><rect x="1125" y="1140" width="3" height="15" fill="rgb(232,193,29)"/><text x="1128.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.31%)</title><rect x="1128" y="900" width="4" height="15" fill="rgb(239,34,42)"/><text x="1131.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="916" width="4" height="15" fill="rgb(219,97,3)"/><text x="1131.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="932" width="4" height="15" fill="rgb(241,195,27)"/><text x="1131.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="948" width="4" height="15" fill="rgb(249,114,14)"/><text x="1131.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="964" width="4" height="15" fill="rgb(253,122,13)"/><text x="1131.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="980" width="4" height="15" fill="rgb(226,37,24)"/><text x="1131.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.31%)</title><rect x="1128" y="996" width="4" height="15" fill="rgb(240,4,42)"/><text x="1131.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1128" y="1012" width="4" height="15" fill="rgb(234,45,41)"/><text x="1131.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="1028" width="4" height="15" fill="rgb(212,133,28)"/><text x="1131.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="1044" width="4" height="15" fill="rgb(235,135,46)"/><text x="1131.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="1060" width="4" height="15" fill="rgb(214,137,39)"/><text x="1131.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="1076" width="4" height="15" fill="rgb(253,54,26)"/><text x="1131.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="1092" width="4" height="15" fill="rgb(223,11,41)"/><text x="1131.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="1108" width="4" height="15" fill="rgb(249,87,10)"/><text x="1131.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:94) (1 samples, 0.31%)</title><rect x="1128" y="1124" width="4" height="15" fill="rgb(219,70,43)"/><text x="1131.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="1140" width="4" height="15" fill="rgb(231,146,2)"/><text x="1131.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="1156" width="4" height="15" fill="rgb(207,73,39)"/><text x="1131.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="1172" width="4" height="15" fill="rgb(238,119,8)"/><text x="1131.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="1188" width="4" height="15" fill="rgb(237,207,35)"/><text x="1131.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="1204" width="4" height="15" fill="rgb(246,223,38)"/><text x="1131.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/__init__.py:4) (1 samples, 0.31%)</title><rect x="1128" y="1220" width="4" height="15" fill="rgb(224,200,2)"/><text x="1131.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="1236" width="4" height="15" fill="rgb(231,56,21)"/><text x="1131.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="1252" width="4" height="15" fill="rgb(250,89,37)"/><text x="1131.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="1268" width="4" height="15" fill="rgb(211,181,45)"/><text x="1131.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="1284" width="4" height="15" fill="rgb(237,212,50)"/><text x="1131.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="1300" width="4" height="15" fill="rgb(236,24,0)"/><text x="1131.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/ivp.py:4) (1 samples, 0.31%)</title><rect x="1128" y="1316" width="4" height="15" fill="rgb(233,229,54)"/><text x="1131.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="1332" width="4" height="15" fill="rgb(251,208,15)"/><text x="1131.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="1348" width="4" height="15" fill="rgb(252,47,2)"/><text x="1131.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="1364" width="4" height="15" fill="rgb(225,198,8)"/><text x="1131.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="1380" width="4" height="15" fill="rgb(249,18,32)"/><text x="1131.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="1396" width="4" height="15" fill="rgb(214,29,43)"/><text x="1131.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/_ivp/bdf.py:10) (1 samples, 0.31%)</title><rect x="1128" y="1412" width="4" height="15" fill="rgb(236,97,42)"/><text x="1131.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="1428" width="4" height="15" fill="rgb(222,139,30)"/><text x="1131.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="1128" y="1444" width="4" height="15" fill="rgb(229,57,42)"/><text x="1131.00" y="1454.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="1128" y="1460" width="4" height="15" fill="rgb(208,138,34)"/><text x="1131.00" y="1470.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="1128" y="1476" width="4" height="15" fill="rgb(212,26,33)"/><text x="1131.00" y="1486.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="1128" y="1492" width="4" height="15" fill="rgb(217,124,20)"/><text x="1131.00" y="1502.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.31%)</title><rect x="1128" y="1508" width="4" height="15" fill="rgb(209,176,31)"/><text x="1131.00" y="1518.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.31%)</title><rect x="1128" y="1524" width="4" height="15" fill="rgb(230,153,8)"/><text x="1131.00" y="1534.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.31%)</title><rect x="1128" y="1540" width="4" height="15" fill="rgb(231,202,40)"/><text x="1131.00" y="1550.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:371) (1 samples, 0.31%)</title><rect x="1128" y="1556" width="4" height="15" fill="rgb(223,215,13)"/><text x="1131.00" y="1566.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.61%)</title><rect x="1128" y="484" width="7" height="15" fill="rgb(209,160,44)"/><text x="1131.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1128" y="500" width="7" height="15" fill="rgb(245,109,42)"/><text x="1131.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1128" y="516" width="7" height="15" fill="rgb(236,0,49)"/><text x="1131.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1128" y="532" width="7" height="15" fill="rgb(221,175,14)"/><text x="1131.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1128" y="548" width="7" height="15" fill="rgb(236,17,28)"/><text x="1131.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1128" y="564" width="7" height="15" fill="rgb(245,101,19)"/><text x="1131.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.61%)</title><rect x="1128" y="580" width="7" height="15" fill="rgb(243,44,21)"/><text x="1131.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1128" y="596" width="7" height="15" fill="rgb(217,17,4)"/><text x="1131.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1128" y="612" width="7" height="15" fill="rgb(223,94,50)"/><text x="1131.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1128" y="628" width="7" height="15" fill="rgb(218,30,24)"/><text x="1131.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1128" y="644" width="7" height="15" fill="rgb(252,61,8)"/><text x="1131.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1128" y="660" width="7" height="15" fill="rgb(215,12,54)"/><text x="1131.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.61%)</title><rect x="1128" y="676" width="7" height="15" fill="rgb(247,100,29)"/><text x="1131.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1128" y="692" width="7" height="15" fill="rgb(234,224,52)"/><text x="1131.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1128" y="708" width="7" height="15" fill="rgb(240,158,41)"/><text x="1131.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1128" y="724" width="7" height="15" fill="rgb(234,34,45)"/><text x="1131.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1128" y="740" width="7" height="15" fill="rgb(241,203,38)"/><text x="1131.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1128" y="756" width="7" height="15" fill="rgb(237,105,17)"/><text x="1131.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.61%)</title><rect x="1128" y="772" width="7" height="15" fill="rgb(253,204,36)"/><text x="1131.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.61%)</title><rect x="1128" y="788" width="7" height="15" fill="rgb(241,209,44)"/><text x="1131.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1128" y="804" width="7" height="15" fill="rgb(229,17,51)"/><text x="1131.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1128" y="820" width="7" height="15" fill="rgb(228,126,8)"/><text x="1131.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1128" y="836" width="7" height="15" fill="rgb(230,23,24)"/><text x="1131.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1128" y="852" width="7" height="15" fill="rgb(224,1,43)"/><text x="1131.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1128" y="868" width="7" height="15" fill="rgb(232,90,40)"/><text x="1131.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1128" y="884" width="7" height="15" fill="rgb(243,23,40)"/><text x="1131.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.31%)</title><rect x="1132" y="900" width="3" height="15" fill="rgb(248,205,18)"/><text x="1135.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1132" y="916" width="3" height="15" fill="rgb(238,9,10)"/><text x="1135.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1132" y="932" width="3" height="15" fill="rgb(212,145,38)"/><text x="1135.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1132" y="948" width="3" height="15" fill="rgb(220,71,26)"/><text x="1135.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1132" y="964" width="3" height="15" fill="rgb(252,204,51)"/><text x="1135.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1132" y="980" width="3" height="15" fill="rgb(234,222,46)"/><text x="1135.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1132" y="996" width="3" height="15" fill="rgb(240,105,42)"/><text x="1135.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1132" y="1012" width="3" height="15" fill="rgb(220,74,18)"/><text x="1135.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:620) (1 samples, 0.31%)</title><rect x="1132" y="1028" width="3" height="15" fill="rgb(234,24,4)"/><text x="1135.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.31%)</title><rect x="1132" y="1044" width="3" height="15" fill="rgb(249,174,0)"/><text x="1135.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.31%)</title><rect x="1132" y="1060" width="3" height="15" fill="rgb(240,20,2)"/><text x="1135.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.31%)</title><rect x="1132" y="1076" width="3" height="15" fill="rgb(241,141,41)"/><text x="1135.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.31%)</title><rect x="1132" y="1092" width="3" height="15" fill="rgb(238,89,7)"/><text x="1135.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:4) (3 samples, 0.92%)</title><rect x="1128" y="148" width="11" height="15" fill="rgb(253,111,52)"/><text x="1131.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1128" y="164" width="11" height="15" fill="rgb(231,150,36)"/><text x="1131.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.92%)</title><rect x="1128" y="180" width="11" height="15" fill="rgb(214,92,28)"/><text x="1131.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1128" y="196" width="11" height="15" fill="rgb(251,60,5)"/><text x="1131.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1128" y="212" width="11" height="15" fill="rgb(211,171,52)"/><text x="1131.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1128" y="228" width="11" height="15" fill="rgb(240,77,51)"/><text x="1131.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1128" y="244" width="11" height="15" fill="rgb(220,18,1)"/><text x="1131.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1128" y="260" width="11" height="15" fill="rgb(216,44,19)"/><text x="1131.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1128" y="276" width="11" height="15" fill="rgb(234,142,45)"/><text x="1131.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.92%)</title><rect x="1128" y="292" width="11" height="15" fill="rgb(254,136,54)"/><text x="1131.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1128" y="308" width="11" height="15" fill="rgb(244,211,52)"/><text x="1131.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1128" y="324" width="11" height="15" fill="rgb(249,196,1)"/><text x="1131.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1128" y="340" width="11" height="15" fill="rgb(217,40,33)"/><text x="1131.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1128" y="356" width="11" height="15" fill="rgb(243,137,5)"/><text x="1131.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1128" y="372" width="11" height="15" fill="rgb(251,93,54)"/><text x="1131.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.92%)</title><rect x="1128" y="388" width="11" height="15" fill="rgb(246,67,24)"/><text x="1131.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1128" y="404" width="11" height="15" fill="rgb(245,107,1)"/><text x="1131.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1128" y="420" width="11" height="15" fill="rgb(232,78,33)"/><text x="1131.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1128" y="436" width="11" height="15" fill="rgb(232,137,49)"/><text x="1131.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1128" y="452" width="11" height="15" fill="rgb(231,139,22)"/><text x="1131.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1128" y="468" width="11" height="15" fill="rgb(238,64,50)"/><text x="1131.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:26) (1 samples, 0.31%)</title><rect x="1135" y="484" width="4" height="15" fill="rgb(243,27,41)"/><text x="1138.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="500" width="4" height="15" fill="rgb(224,201,26)"/><text x="1138.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="516" width="4" height="15" fill="rgb(205,126,1)"/><text x="1138.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="532" width="4" height="15" fill="rgb(244,88,41)"/><text x="1138.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="1135" y="548" width="4" height="15" fill="rgb(244,4,53)"/><text x="1138.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="1135" y="564" width="4" height="15" fill="rgb(243,115,14)"/><text x="1138.00" y="574.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="1135" y="580" width="4" height="15" fill="rgb(219,164,34)"/><text x="1138.00" y="590.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:22) (1 samples, 0.31%)</title><rect x="1139" y="484" width="4" height="15" fill="rgb(206,59,2)"/><text x="1142.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="500" width="4" height="15" fill="rgb(240,21,41)"/><text x="1142.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1139" y="516" width="4" height="15" fill="rgb(235,153,4)"/><text x="1142.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1139" y="532" width="4" height="15" fill="rgb(210,87,30)"/><text x="1142.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="1139" y="548" width="4" height="15" fill="rgb(246,94,18)"/><text x="1142.00" y="558.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:807) (1 samples, 0.31%)</title><rect x="1139" y="564" width="4" height="15" fill="rgb(227,24,43)"/><text x="1142.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.61%)</title><rect x="1139" y="244" width="7" height="15" fill="rgb(210,28,44)"/><text x="1142.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1139" y="260" width="7" height="15" fill="rgb(245,191,24)"/><text x="1142.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1139" y="276" width="7" height="15" fill="rgb(232,176,51)"/><text x="1142.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1139" y="292" width="7" height="15" fill="rgb(248,70,33)"/><text x="1142.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1139" y="308" width="7" height="15" fill="rgb(244,82,13)"/><text x="1142.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1139" y="324" width="7" height="15" fill="rgb(242,168,32)"/><text x="1142.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.61%)</title><rect x="1139" y="340" width="7" height="15" fill="rgb(230,21,7)"/><text x="1142.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1139" y="356" width="7" height="15" fill="rgb(225,228,14)"/><text x="1142.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.61%)</title><rect x="1139" y="372" width="7" height="15" fill="rgb(225,19,34)"/><text x="1142.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1139" y="388" width="7" height="15" fill="rgb(218,161,17)"/><text x="1142.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1139" y="404" width="7" height="15" fill="rgb(210,161,29)"/><text x="1142.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1139" y="420" width="7" height="15" fill="rgb(232,70,11)"/><text x="1142.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1139" y="436" width="7" height="15" fill="rgb(212,131,12)"/><text x="1142.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1139" y="452" width="7" height="15" fill="rgb(239,197,24)"/><text x="1142.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1139" y="468" width="7" height="15" fill="rgb(215,76,31)"/><text x="1142.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.31%)</title><rect x="1143" y="484" width="3" height="15" fill="rgb(213,22,36)"/><text x="1146.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1143" y="500" width="3" height="15" fill="rgb(251,181,54)"/><text x="1146.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1143" y="516" width="3" height="15" fill="rgb(242,90,54)"/><text x="1146.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1143" y="532" width="3" height="15" fill="rgb(206,192,9)"/><text x="1146.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1143" y="548" width="3" height="15" fill="rgb(223,116,30)"/><text x="1146.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1143" y="564" width="3" height="15" fill="rgb(225,205,48)"/><text x="1146.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.31%)</title><rect x="1143" y="580" width="3" height="15" fill="rgb(220,95,23)"/><text x="1146.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1143" y="596" width="3" height="15" fill="rgb(229,204,21)"/><text x="1146.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1143" y="612" width="3" height="15" fill="rgb(254,79,37)"/><text x="1146.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1143" y="628" width="3" height="15" fill="rgb(206,88,22)"/><text x="1146.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1143" y="644" width="3" height="15" fill="rgb(240,198,4)"/><text x="1146.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1143" y="660" width="3" height="15" fill="rgb(217,196,34)"/><text x="1146.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.31%)</title><rect x="1143" y="676" width="3" height="15" fill="rgb(242,6,39)"/><text x="1146.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1143" y="692" width="3" height="15" fill="rgb(228,185,47)"/><text x="1146.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1143" y="708" width="3" height="15" fill="rgb(212,224,29)"/><text x="1146.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1143" y="724" width="3" height="15" fill="rgb(219,62,4)"/><text x="1146.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1143" y="740" width="3" height="15" fill="rgb(240,127,3)"/><text x="1146.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1143" y="756" width="3" height="15" fill="rgb(241,191,28)"/><text x="1146.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.31%)</title><rect x="1143" y="772" width="3" height="15" fill="rgb(223,19,25)"/><text x="1146.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1143" y="788" width="3" height="15" fill="rgb(241,132,43)"/><text x="1146.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="1143" y="804" width="3" height="15" fill="rgb(205,47,34)"/><text x="1146.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="1143" y="820" width="3" height="15" fill="rgb(245,141,22)"/><text x="1146.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="1143" y="836" width="3" height="15" fill="rgb(250,120,53)"/><text x="1146.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="1143" y="852" width="3" height="15" fill="rgb(211,155,39)"/><text x="1146.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.31%)</title><rect x="1143" y="868" width="3" height="15" fill="rgb(225,2,48)"/><text x="1146.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="1143" y="884" width="3" height="15" fill="rgb(210,107,19)"/><text x="1146.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.31%)</title><rect x="1143" y="900" width="3" height="15" fill="rgb(234,219,3)"/><text x="1146.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.31%)</title><rect x="1143" y="916" width="3" height="15" fill="rgb(213,129,25)"/><text x="1146.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.31%)</title><rect x="1143" y="932" width="3" height="15" fill="rgb(247,9,38)"/><text x="1146.00" y="942.50"></text></g><g><title>0x7fe1929c940e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="900" width="4" height="15" fill="rgb(234,78,32)"/><text x="1149.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="916" width="4" height="15" fill="rgb(231,100,12)"/><text x="1149.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="932" width="4" height="15" fill="rgb(244,94,35)"/><text x="1149.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="948" width="4" height="15" fill="rgb(241,43,37)"/><text x="1149.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="964" width="4" height="15" fill="rgb(249,29,4)"/><text x="1149.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="980" width="4" height="15" fill="rgb(213,208,19)"/><text x="1149.00" y="990.50"></text></g><g><title>0x7fe192782cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="996" width="4" height="15" fill="rgb(234,151,35)"/><text x="1149.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1012" width="4" height="15" fill="rgb(208,39,54)"/><text x="1149.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1028" width="4" height="15" fill="rgb(244,157,26)"/><text x="1149.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1044" width="4" height="15" fill="rgb(239,58,9)"/><text x="1149.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1060" width="4" height="15" fill="rgb(240,122,52)"/><text x="1149.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1076" width="4" height="15" fill="rgb(239,107,26)"/><text x="1149.00" y="1086.50"></text></g><g><title>0x7fe191e780e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1092" width="4" height="15" fill="rgb(236,29,52)"/><text x="1149.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1108" width="4" height="15" fill="rgb(210,126,49)"/><text x="1149.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1124" width="4" height="15" fill="rgb(228,215,29)"/><text x="1149.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1140" width="4" height="15" fill="rgb(248,60,36)"/><text x="1149.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1156" width="4" height="15" fill="rgb(254,87,22)"/><text x="1149.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1172" width="4" height="15" fill="rgb(224,82,4)"/><text x="1149.00" y="1182.50"></text></g><g><title>0x7fe191bfce68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1188" width="4" height="15" fill="rgb(242,144,48)"/><text x="1149.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1204" width="4" height="15" fill="rgb(238,7,53)"/><text x="1149.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1220" width="4" height="15" fill="rgb(213,94,54)"/><text x="1149.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1236" width="4" height="15" fill="rgb(235,84,52)"/><text x="1149.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1252" width="4" height="15" fill="rgb(239,74,10)"/><text x="1149.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1268" width="4" height="15" fill="rgb(207,168,16)"/><text x="1149.00" y="1278.50"></text></g><g><title>0x7fe19198d6be (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1284" width="4" height="15" fill="rgb(219,126,21)"/><text x="1149.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1300" width="4" height="15" fill="rgb(250,191,13)"/><text x="1149.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1316" width="4" height="15" fill="rgb(207,68,33)"/><text x="1149.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="1146" y="1332" width="4" height="15" fill="rgb(240,108,34)"/><text x="1149.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="1146" y="1348" width="4" height="15" fill="rgb(236,125,44)"/><text x="1149.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="1146" y="1364" width="4" height="15" fill="rgb(236,71,40)"/><text x="1149.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="1146" y="1380" width="4" height="15" fill="rgb(251,71,36)"/><text x="1149.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.31%)</title><rect x="1146" y="1396" width="4" height="15" fill="rgb(207,27,48)"/><text x="1149.00" y="1406.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.61%)</title><rect x="1146" y="628" width="7" height="15" fill="rgb(219,58,11)"/><text x="1149.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1146" y="644" width="7" height="15" fill="rgb(220,56,8)"/><text x="1149.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1146" y="660" width="7" height="15" fill="rgb(232,192,6)"/><text x="1149.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1146" y="676" width="7" height="15" fill="rgb(223,92,12)"/><text x="1149.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1146" y="692" width="7" height="15" fill="rgb(237,102,51)"/><text x="1149.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1146" y="708" width="7" height="15" fill="rgb(218,30,5)"/><text x="1149.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (2 samples, 0.61%)</title><rect x="1146" y="724" width="7" height="15" fill="rgb(238,12,54)"/><text x="1149.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1146" y="740" width="7" height="15" fill="rgb(223,211,49)"/><text x="1149.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1146" y="756" width="7" height="15" fill="rgb(205,32,32)"/><text x="1149.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1146" y="772" width="7" height="15" fill="rgb(229,199,44)"/><text x="1149.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1146" y="788" width="7" height="15" fill="rgb(228,49,44)"/><text x="1149.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1146" y="804" width="7" height="15" fill="rgb(207,173,26)"/><text x="1149.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (2 samples, 0.61%)</title><rect x="1146" y="820" width="7" height="15" fill="rgb(241,55,37)"/><text x="1149.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1146" y="836" width="7" height="15" fill="rgb(242,163,52)"/><text x="1149.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1146" y="852" width="7" height="15" fill="rgb(225,140,10)"/><text x="1149.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1146" y="868" width="7" height="15" fill="rgb(222,7,40)"/><text x="1149.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.61%)</title><rect x="1146" y="884" width="7" height="15" fill="rgb(225,196,44)"/><text x="1149.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="900" width="3" height="15" fill="rgb(208,5,41)"/><text x="1153.00" y="910.50"></text></g><g><title>0x7fe1929c940e (?) (1 samples, 0.31%)</title><rect x="1150" y="916" width="3" height="15" fill="rgb(234,6,23)"/><text x="1153.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1150" y="932" width="3" height="15" fill="rgb(243,100,53)"/><text x="1153.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1150" y="948" width="3" height="15" fill="rgb(219,173,38)"/><text x="1153.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1150" y="964" width="3" height="15" fill="rgb(254,97,34)"/><text x="1153.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1150" y="980" width="3" height="15" fill="rgb(240,182,9)"/><text x="1153.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="996" width="3" height="15" fill="rgb(212,214,16)"/><text x="1153.00" y="1006.50"></text></g><g><title>0x7fe192782cd2 (?) (1 samples, 0.31%)</title><rect x="1150" y="1012" width="3" height="15" fill="rgb(205,125,31)"/><text x="1153.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1150" y="1028" width="3" height="15" fill="rgb(241,168,36)"/><text x="1153.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1150" y="1044" width="3" height="15" fill="rgb(221,57,45)"/><text x="1153.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1150" y="1060" width="3" height="15" fill="rgb(236,134,43)"/><text x="1153.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1150" y="1076" width="3" height="15" fill="rgb(210,69,21)"/><text x="1153.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="1092" width="3" height="15" fill="rgb(221,63,27)"/><text x="1153.00" y="1102.50"></text></g><g><title>0x7fe191e780e5 (?) (1 samples, 0.31%)</title><rect x="1150" y="1108" width="3" height="15" fill="rgb(207,176,33)"/><text x="1153.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1150" y="1124" width="3" height="15" fill="rgb(250,37,37)"/><text x="1153.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1150" y="1140" width="3" height="15" fill="rgb(211,118,11)"/><text x="1153.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1150" y="1156" width="3" height="15" fill="rgb(241,54,43)"/><text x="1153.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1150" y="1172" width="3" height="15" fill="rgb(231,42,37)"/><text x="1153.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="1188" width="3" height="15" fill="rgb(221,220,53)"/><text x="1153.00" y="1198.50"></text></g><g><title>0x7fe191bfce68 (?) (1 samples, 0.31%)</title><rect x="1150" y="1204" width="3" height="15" fill="rgb(205,33,44)"/><text x="1153.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1150" y="1220" width="3" height="15" fill="rgb(219,216,10)"/><text x="1153.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1150" y="1236" width="3" height="15" fill="rgb(216,78,38)"/><text x="1153.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1150" y="1252" width="3" height="15" fill="rgb(238,92,42)"/><text x="1153.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1150" y="1268" width="3" height="15" fill="rgb(234,29,7)"/><text x="1153.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="1284" width="3" height="15" fill="rgb(249,142,17)"/><text x="1153.00" y="1294.50"></text></g><g><title>0x7fe19198d2fb (?) (1 samples, 0.31%)</title><rect x="1150" y="1300" width="3" height="15" fill="rgb(254,217,6)"/><text x="1153.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1150" y="1316" width="3" height="15" fill="rgb(206,74,27)"/><text x="1153.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1150" y="1332" width="3" height="15" fill="rgb(232,166,15)"/><text x="1153.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1150" y="1348" width="3" height="15" fill="rgb(240,96,40)"/><text x="1153.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1150" y="1364" width="3" height="15" fill="rgb(207,133,10)"/><text x="1153.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="1380" width="3" height="15" fill="rgb(216,145,2)"/><text x="1153.00" y="1390.50"></text></g><g><title>0x7fe191771153 (?) (1 samples, 0.31%)</title><rect x="1150" y="1396" width="3" height="15" fill="rgb(225,106,41)"/><text x="1153.00" y="1406.50"></text></g><g><title>0x7fe19176fc13 (?) (1 samples, 0.31%)</title><rect x="1150" y="1412" width="3" height="15" fill="rgb(229,210,25)"/><text x="1153.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1150" y="1428" width="3" height="15" fill="rgb(214,181,48)"/><text x="1153.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1150" y="1444" width="3" height="15" fill="rgb(241,93,23)"/><text x="1153.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1150" y="1460" width="3" height="15" fill="rgb(250,15,6)"/><text x="1153.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1150" y="1476" width="3" height="15" fill="rgb(221,113,8)"/><text x="1153.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1150" y="1492" width="3" height="15" fill="rgb(235,34,51)"/><text x="1153.00" y="1502.50"></text></g><g><title>0x7fe19150c181 (?) (1 samples, 0.31%)</title><rect x="1150" y="1508" width="3" height="15" fill="rgb(224,99,11)"/><text x="1153.00" y="1518.50"></text></g><g><title>0x7fe19150f1c9 (?) (1 samples, 0.31%)</title><rect x="1150" y="1524" width="3" height="15" fill="rgb(228,35,6)"/><text x="1153.00" y="1534.50"></text></g><g><title>0x7fe19153b167 (?) (1 samples, 0.31%)</title><rect x="1150" y="1540" width="3" height="15" fill="rgb(244,46,17)"/><text x="1153.00" y="1550.50"></text></g><g><title>0x7fe191536b64 (?) (1 samples, 0.31%)</title><rect x="1150" y="1556" width="3" height="15" fill="rgb(231,84,12)"/><text x="1153.00" y="1566.50"></text></g><g><title>0x7fe19151a07b (?) (1 samples, 0.31%)</title><rect x="1150" y="1572" width="3" height="15" fill="rgb(221,111,50)"/><text x="1153.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.31%)</title><rect x="1150" y="1588" width="3" height="15" fill="rgb(249,64,25)"/><text x="1153.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.31%)</title><rect x="1150" y="1604" width="3" height="15" fill="rgb(247,18,30)"/><text x="1153.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.31%)</title><rect x="1150" y="1620" width="3" height="15" fill="rgb(234,190,51)"/><text x="1153.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:96) (1 samples, 0.31%)</title><rect x="1150" y="1636" width="3" height="15" fill="rgb(243,36,44)"/><text x="1153.00" y="1646.50"></text></g><g><title>join (posixpath.py:81) (1 samples, 0.31%)</title><rect x="1150" y="1652" width="3" height="15" fill="rgb(252,63,19)"/><text x="1153.00" y="1662.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.31%)</title><rect x="1150" y="1668" width="3" height="15" fill="rgb(230,93,6)"/><text x="1153.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.31%)</title><rect x="1153" y="1492" width="4" height="15" fill="rgb(210,226,28)"/><text x="1156.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1508" width="4" height="15" fill="rgb(244,131,3)"/><text x="1156.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1524" width="4" height="15" fill="rgb(220,205,25)"/><text x="1156.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1540" width="4" height="15" fill="rgb(251,58,23)"/><text x="1156.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1556" width="4" height="15" fill="rgb(246,177,19)"/><text x="1156.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1572" width="4" height="15" fill="rgb(237,12,34)"/><text x="1156.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.31%)</title><rect x="1153" y="1588" width="4" height="15" fill="rgb(220,147,17)"/><text x="1156.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1604" width="4" height="15" fill="rgb(244,158,40)"/><text x="1156.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1620" width="4" height="15" fill="rgb(231,104,44)"/><text x="1156.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1636" width="4" height="15" fill="rgb(244,188,16)"/><text x="1156.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1652" width="4" height="15" fill="rgb(252,186,22)"/><text x="1156.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1668" width="4" height="15" fill="rgb(205,127,33)"/><text x="1156.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.31%)</title><rect x="1153" y="1684" width="4" height="15" fill="rgb(239,132,3)"/><text x="1156.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1700" width="4" height="15" fill="rgb(240,207,51)"/><text x="1156.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1716" width="4" height="15" fill="rgb(211,166,48)"/><text x="1156.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1732" width="4" height="15" fill="rgb(245,89,14)"/><text x="1156.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1748" width="4" height="15" fill="rgb(250,43,23)"/><text x="1156.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1764" width="4" height="15" fill="rgb(216,194,22)"/><text x="1156.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:656) (1 samples, 0.31%)</title><rect x="1153" y="1780" width="4" height="15" fill="rgb(241,161,9)"/><text x="1156.00" y="1790.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.92%)</title><rect x="1153" y="916" width="11" height="15" fill="rgb(246,33,31)"/><text x="1156.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1153" y="932" width="11" height="15" fill="rgb(214,6,24)"/><text x="1156.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1153" y="948" width="11" height="15" fill="rgb(207,174,4)"/><text x="1156.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1153" y="964" width="11" height="15" fill="rgb(215,202,41)"/><text x="1156.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1153" y="980" width="11" height="15" fill="rgb(216,12,36)"/><text x="1156.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1153" y="996" width="11" height="15" fill="rgb(207,137,28)"/><text x="1156.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 0.92%)</title><rect x="1153" y="1012" width="11" height="15" fill="rgb(216,113,51)"/><text x="1156.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1153" y="1028" width="11" height="15" fill="rgb(212,169,6)"/><text x="1156.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1153" y="1044" width="11" height="15" fill="rgb(209,181,51)"/><text x="1156.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1153" y="1060" width="11" height="15" fill="rgb(220,21,12)"/><text x="1156.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1153" y="1076" width="11" height="15" fill="rgb(230,138,12)"/><text x="1156.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1153" y="1092" width="11" height="15" fill="rgb(244,64,9)"/><text x="1156.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 0.92%)</title><rect x="1153" y="1108" width="11" height="15" fill="rgb(247,36,34)"/><text x="1156.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1153" y="1124" width="11" height="15" fill="rgb(231,203,15)"/><text x="1156.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1153" y="1140" width="11" height="15" fill="rgb(238,150,21)"/><text x="1156.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1153" y="1156" width="11" height="15" fill="rgb(206,19,31)"/><text x="1156.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1153" y="1172" width="11" height="15" fill="rgb(216,106,18)"/><text x="1156.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1153" y="1188" width="11" height="15" fill="rgb(235,125,13)"/><text x="1156.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 0.92%)</title><rect x="1153" y="1204" width="11" height="15" fill="rgb(217,203,17)"/><text x="1156.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1153" y="1220" width="11" height="15" fill="rgb(216,83,31)"/><text x="1156.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1153" y="1236" width="11" height="15" fill="rgb(221,128,2)"/><text x="1156.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1153" y="1252" width="11" height="15" fill="rgb(222,60,48)"/><text x="1156.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1153" y="1268" width="11" height="15" fill="rgb(210,65,31)"/><text x="1156.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1153" y="1284" width="11" height="15" fill="rgb(226,172,16)"/><text x="1156.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 0.92%)</title><rect x="1153" y="1300" width="11" height="15" fill="rgb(245,166,21)"/><text x="1156.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1153" y="1316" width="11" height="15" fill="rgb(216,208,38)"/><text x="1156.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1153" y="1332" width="11" height="15" fill="rgb(225,140,15)"/><text x="1156.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1153" y="1348" width="11" height="15" fill="rgb(250,115,45)"/><text x="1156.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1153" y="1364" width="11" height="15" fill="rgb(236,192,46)"/><text x="1156.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1153" y="1380" width="11" height="15" fill="rgb(207,210,33)"/><text x="1156.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 0.92%)</title><rect x="1153" y="1396" width="11" height="15" fill="rgb(247,98,37)"/><text x="1156.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1153" y="1412" width="11" height="15" fill="rgb(228,71,42)"/><text x="1156.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1153" y="1428" width="11" height="15" fill="rgb(214,224,4)"/><text x="1156.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1153" y="1444" width="11" height="15" fill="rgb(243,63,3)"/><text x="1156.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1153" y="1460" width="11" height="15" fill="rgb(242,77,26)"/><text x="1156.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1153" y="1476" width="11" height="15" fill="rgb(254,189,23)"/><text x="1156.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.61%)</title><rect x="1157" y="1492" width="7" height="15" fill="rgb(207,94,20)"/><text x="1160.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1157" y="1508" width="7" height="15" fill="rgb(209,172,23)"/><text x="1160.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.61%)</title><rect x="1157" y="1524" width="7" height="15" fill="rgb(221,160,39)"/><text x="1160.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1157" y="1540" width="7" height="15" fill="rgb(254,70,22)"/><text x="1160.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1157" y="1556" width="7" height="15" fill="rgb(225,222,31)"/><text x="1160.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1157" y="1572" width="7" height="15" fill="rgb(235,164,18)"/><text x="1160.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1157" y="1588" width="7" height="15" fill="rgb(208,63,32)"/><text x="1160.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1157" y="1604" width="7" height="15" fill="rgb(206,177,50)"/><text x="1160.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1157" y="1620" width="7" height="15" fill="rgb(246,214,54)"/><text x="1160.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (2 samples, 0.61%)</title><rect x="1157" y="1636" width="7" height="15" fill="rgb(233,80,10)"/><text x="1160.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.61%)</title><rect x="1157" y="1652" width="7" height="15" fill="rgb(218,151,10)"/><text x="1160.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1157" y="1668" width="7" height="15" fill="rgb(235,6,20)"/><text x="1160.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1157" y="1684" width="7" height="15" fill="rgb(236,118,40)"/><text x="1160.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1157" y="1700" width="7" height="15" fill="rgb(240,159,52)"/><text x="1160.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1157" y="1716" width="7" height="15" fill="rgb(238,147,41)"/><text x="1160.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1157" y="1732" width="7" height="15" fill="rgb(214,102,40)"/><text x="1160.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1157" y="1748" width="7" height="15" fill="rgb(224,193,7)"/><text x="1160.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (2 samples, 0.61%)</title><rect x="1157" y="1764" width="7" height="15" fill="rgb(236,88,9)"/><text x="1160.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1157" y="1780" width="7" height="15" fill="rgb(221,138,6)"/><text x="1160.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1157" y="1796" width="7" height="15" fill="rgb(208,43,17)"/><text x="1160.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1157" y="1812" width="7" height="15" fill="rgb(234,110,1)"/><text x="1160.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1157" y="1828" width="7" height="15" fill="rgb(237,166,10)"/><text x="1160.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1157" y="1844" width="7" height="15" fill="rgb(210,172,48)"/><text x="1160.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (2 samples, 0.61%)</title><rect x="1157" y="1860" width="7" height="15" fill="rgb(229,214,0)"/><text x="1160.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1157" y="1876" width="7" height="15" fill="rgb(215,128,21)"/><text x="1160.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1157" y="1892" width="7" height="15" fill="rgb(242,219,20)"/><text x="1160.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1157" y="1908" width="7" height="15" fill="rgb(230,61,19)"/><text x="1160.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1157" y="1924" width="7" height="15" fill="rgb(214,198,41)"/><text x="1160.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1157" y="1940" width="7" height="15" fill="rgb(232,88,29)"/><text x="1160.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (2 samples, 0.61%)</title><rect x="1157" y="1956" width="7" height="15" fill="rgb(248,92,49)"/><text x="1160.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6666) (2 samples, 0.61%)</title><rect x="1157" y="1972" width="7" height="15" fill="rgb(242,146,49)"/><text x="1160.00" y="1982.50"></text></g><g><title>__add__ (pyparsing.py:2158) (2 samples, 0.61%)</title><rect x="1157" y="1988" width="7" height="15" fill="rgb(242,146,52)"/><text x="1160.00" y="1998.50"></text></g><g><title>__init__ (pyparsing.py:4006) (1 samples, 0.31%)</title><rect x="1161" y="2004" width="3" height="15" fill="rgb(240,133,9)"/><text x="1164.00" y="2014.50"></text></g><g><title>__init__ (pyparsing.py:3861) (1 samples, 0.31%)</title><rect x="1161" y="2020" width="3" height="15" fill="rgb(244,105,34)"/><text x="1164.00" y="2030.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (6 samples, 1.83%)</title><rect x="1146" y="436" width="22" height="15" fill="rgb(209,85,22)"/><text x="1149.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.83%)</title><rect x="1146" y="452" width="22" height="15" fill="rgb(244,119,32)"/><text x="1149.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.83%)</title><rect x="1146" y="468" width="22" height="15" fill="rgb(218,130,26)"/><text x="1149.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.83%)</title><rect x="1146" y="484" width="22" height="15" fill="rgb(211,77,54)"/><text x="1149.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.83%)</title><rect x="1146" y="500" width="22" height="15" fill="rgb(209,121,17)"/><text x="1149.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.83%)</title><rect x="1146" y="516" width="22" height="15" fill="rgb(245,169,2)"/><text x="1149.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (6 samples, 1.83%)</title><rect x="1146" y="532" width="22" height="15" fill="rgb(210,48,25)"/><text x="1149.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.83%)</title><rect x="1146" y="548" width="22" height="15" fill="rgb(213,159,10)"/><text x="1149.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.83%)</title><rect x="1146" y="564" width="22" height="15" fill="rgb(245,146,40)"/><text x="1149.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.83%)</title><rect x="1146" y="580" width="22" height="15" fill="rgb(254,74,8)"/><text x="1149.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.83%)</title><rect x="1146" y="596" width="22" height="15" fill="rgb(215,145,40)"/><text x="1149.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.83%)</title><rect x="1146" y="612" width="22" height="15" fill="rgb(214,189,10)"/><text x="1149.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.22%)</title><rect x="1153" y="628" width="15" height="15" fill="rgb(232,9,39)"/><text x="1156.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1153" y="644" width="15" height="15" fill="rgb(213,57,48)"/><text x="1156.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1153" y="660" width="15" height="15" fill="rgb(242,127,23)"/><text x="1156.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1153" y="676" width="15" height="15" fill="rgb(253,47,6)"/><text x="1156.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1153" y="692" width="15" height="15" fill="rgb(228,30,40)"/><text x="1156.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1153" y="708" width="15" height="15" fill="rgb(205,154,23)"/><text x="1156.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 1.22%)</title><rect x="1153" y="724" width="15" height="15" fill="rgb(227,40,52)"/><text x="1156.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1153" y="740" width="15" height="15" fill="rgb(221,100,31)"/><text x="1156.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1153" y="756" width="15" height="15" fill="rgb(218,9,49)"/><text x="1156.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1153" y="772" width="15" height="15" fill="rgb(249,147,39)"/><text x="1156.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1153" y="788" width="15" height="15" fill="rgb(241,4,39)"/><text x="1156.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1153" y="804" width="15" height="15" fill="rgb(247,75,11)"/><text x="1156.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 1.22%)</title><rect x="1153" y="820" width="15" height="15" fill="rgb(236,12,39)"/><text x="1156.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.22%)</title><rect x="1153" y="836" width="15" height="15" fill="rgb(217,186,17)"/><text x="1156.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.22%)</title><rect x="1153" y="852" width="15" height="15" fill="rgb(224,158,38)"/><text x="1156.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.22%)</title><rect x="1153" y="868" width="15" height="15" fill="rgb(209,60,16)"/><text x="1156.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.22%)</title><rect x="1153" y="884" width="15" height="15" fill="rgb(209,75,49)"/><text x="1156.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.22%)</title><rect x="1153" y="900" width="15" height="15" fill="rgb(250,102,8)"/><text x="1156.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.31%)</title><rect x="1164" y="916" width="4" height="15" fill="rgb(244,95,8)"/><text x="1167.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1164" y="932" width="4" height="15" fill="rgb(207,43,47)"/><text x="1167.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1164" y="948" width="4" height="15" fill="rgb(218,223,40)"/><text x="1167.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1164" y="964" width="4" height="15" fill="rgb(254,91,34)"/><text x="1167.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1164" y="980" width="4" height="15" fill="rgb(219,53,0)"/><text x="1167.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1164" y="996" width="4" height="15" fill="rgb(227,16,35)"/><text x="1167.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.31%)</title><rect x="1164" y="1012" width="4" height="15" fill="rgb(234,105,48)"/><text x="1167.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.31%)</title><rect x="1164" y="1028" width="4" height="15" fill="rgb(249,158,36)"/><text x="1167.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:731) (1 samples, 0.31%)</title><rect x="1164" y="1044" width="4" height="15" fill="rgb(227,20,27)"/><text x="1167.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.31%)</title><rect x="1164" y="1060" width="4" height="15" fill="rgb(252,170,4)"/><text x="1167.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.31%)</title><rect x="1164" y="1076" width="4" height="15" fill="rgb(205,86,26)"/><text x="1167.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.31%)</title><rect x="1164" y="1092" width="4" height="15" fill="rgb(240,25,50)"/><text x="1167.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="1164" y="1108" width="4" height="15" fill="rgb(216,161,16)"/><text x="1167.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="1164" y="1124" width="4" height="15" fill="rgb(218,101,35)"/><text x="1167.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="1164" y="1140" width="4" height="15" fill="rgb(214,218,38)"/><text x="1167.00" y="1150.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.31%)</title><rect x="1168" y="1396" width="3" height="15" fill="rgb(226,148,0)"/><text x="1171.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1168" y="1412" width="3" height="15" fill="rgb(207,142,46)"/><text x="1171.00" y="1422.50"></text></g><g><title>_compile (re.py:276) (1 samples, 0.31%)</title><rect x="1168" y="1428" width="3" height="15" fill="rgb(242,151,11)"/><text x="1171.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.61%)</title><rect x="1168" y="1108" width="7" height="15" fill="rgb(252,119,34)"/><text x="1171.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1168" y="1124" width="7" height="15" fill="rgb(226,170,8)"/><text x="1171.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1168" y="1140" width="7" height="15" fill="rgb(239,8,37)"/><text x="1171.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1168" y="1156" width="7" height="15" fill="rgb(220,167,29)"/><text x="1171.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1168" y="1172" width="7" height="15" fill="rgb(232,159,47)"/><text x="1171.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1168" y="1188" width="7" height="15" fill="rgb(205,55,6)"/><text x="1171.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.61%)</title><rect x="1168" y="1204" width="7" height="15" fill="rgb(241,136,41)"/><text x="1171.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="1168" y="1220" width="7" height="15" fill="rgb(207,104,53)"/><text x="1171.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="1168" y="1236" width="7" height="15" fill="rgb(232,196,11)"/><text x="1171.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="1168" y="1252" width="7" height="15" fill="rgb(225,195,44)"/><text x="1171.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="1168" y="1268" width="7" height="15" fill="rgb(218,62,30)"/><text x="1171.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="1168" y="1284" width="7" height="15" fill="rgb(246,41,36)"/><text x="1171.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.61%)</title><rect x="1168" y="1300" width="7" height="15" fill="rgb(233,137,5)"/><text x="1171.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.61%)</title><rect x="1168" y="1316" width="7" height="15" fill="rgb(238,222,51)"/><text x="1171.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.61%)</title><rect x="1168" y="1332" width="7" height="15" fill="rgb(218,46,44)"/><text x="1171.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.61%)</title><rect x="1168" y="1348" width="7" height="15" fill="rgb(248,179,17)"/><text x="1171.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.61%)</title><rect x="1168" y="1364" width="7" height="15" fill="rgb(227,119,7)"/><text x="1171.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 0.61%)</title><rect x="1168" y="1380" width="7" height="15" fill="rgb(248,123,0)"/><text x="1171.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.31%)</title><rect x="1171" y="1396" width="4" height="15" fill="rgb(252,123,15)"/><text x="1174.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="1171" y="1412" width="4" height="15" fill="rgb(253,48,48)"/><text x="1174.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:4) (21 samples, 6.42%)</title><rect x="1103" y="52" width="76" height="15" fill="rgb(239,142,14)"/><text x="1106.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 6.42%)</title><rect x="1103" y="68" width="76" height="15" fill="rgb(226,67,20)"/><text x="1106.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 6.42%)</title><rect x="1103" y="84" width="76" height="15" fill="rgb(245,9,41)"/><text x="1106.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 6.42%)</title><rect x="1103" y="100" width="76" height="15" fill="rgb(234,15,53)"/><text x="1106.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 6.42%)</title><rect x="1103" y="116" width="76" height="15" fill="rgb(206,184,46)"/><text x="1106.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 6.42%)</title><rect x="1103" y="132" width="76" height="15" fill="rgb(216,10,41)"/><text x="1106.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (11 samples, 3.36%)</title><rect x="1139" y="148" width="40" height="15" fill="rgb(221,36,22)"/><text x="1142.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.36%)</title><rect x="1139" y="164" width="40" height="15" fill="rgb(213,144,23)"/><text x="1142.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.36%)</title><rect x="1139" y="180" width="40" height="15" fill="rgb(223,228,26)"/><text x="1142.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.36%)</title><rect x="1139" y="196" width="40" height="15" fill="rgb(233,92,10)"/><text x="1142.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.36%)</title><rect x="1139" y="212" width="40" height="15" fill="rgb(253,185,54)"/><text x="1142.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.36%)</title><rect x="1139" y="228" width="40" height="15" fill="rgb(239,217,16)"/><text x="1142.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 2.75%)</title><rect x="1146" y="244" width="33" height="15" fill="rgb(211,149,52)"/><text x="1149.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.75%)</title><rect x="1146" y="260" width="33" height="15" fill="rgb(236,56,50)"/><text x="1149.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.75%)</title><rect x="1146" y="276" width="33" height="15" fill="rgb(210,92,45)"/><text x="1149.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.75%)</title><rect x="1146" y="292" width="33" height="15" fill="rgb(240,144,47)"/><text x="1149.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.75%)</title><rect x="1146" y="308" width="33" height="15" fill="rgb(235,222,26)"/><text x="1149.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.75%)</title><rect x="1146" y="324" width="33" height="15" fill="rgb(208,104,28)"/><text x="1149.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (9 samples, 2.75%)</title><rect x="1146" y="340" width="33" height="15" fill="rgb(244,115,33)"/><text x="1149.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.75%)</title><rect x="1146" y="356" width="33" height="15" fill="rgb(246,141,9)"/><text x="1149.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.75%)</title><rect x="1146" y="372" width="33" height="15" fill="rgb(230,46,24)"/><text x="1149.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.75%)</title><rect x="1146" y="388" width="33" height="15" fill="rgb(227,194,33)"/><text x="1149.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.75%)</title><rect x="1146" y="404" width="33" height="15" fill="rgb(211,11,45)"/><text x="1149.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.75%)</title><rect x="1146" y="420" width="33" height="15" fill="rgb(220,133,54)"/><text x="1149.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.92%)</title><rect x="1168" y="436" width="11" height="15" fill="rgb(208,172,32)"/><text x="1171.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="452" width="11" height="15" fill="rgb(222,79,36)"/><text x="1171.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.92%)</title><rect x="1168" y="468" width="11" height="15" fill="rgb(229,24,32)"/><text x="1171.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="484" width="11" height="15" fill="rgb(229,23,4)"/><text x="1171.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="500" width="11" height="15" fill="rgb(243,1,42)"/><text x="1171.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1168" y="516" width="11" height="15" fill="rgb(250,157,30)"/><text x="1171.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1168" y="532" width="11" height="15" fill="rgb(235,71,17)"/><text x="1171.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1168" y="548" width="11" height="15" fill="rgb(247,205,51)"/><text x="1171.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="564" width="11" height="15" fill="rgb(219,96,6)"/><text x="1171.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.92%)</title><rect x="1168" y="580" width="11" height="15" fill="rgb(219,109,53)"/><text x="1171.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="596" width="11" height="15" fill="rgb(218,7,50)"/><text x="1171.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1168" y="612" width="11" height="15" fill="rgb(222,66,22)"/><text x="1171.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1168" y="628" width="11" height="15" fill="rgb(230,185,49)"/><text x="1171.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1168" y="644" width="11" height="15" fill="rgb(218,196,52)"/><text x="1171.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="660" width="11" height="15" fill="rgb(212,117,13)"/><text x="1171.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.92%)</title><rect x="1168" y="676" width="11" height="15" fill="rgb(232,187,30)"/><text x="1171.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="692" width="11" height="15" fill="rgb(218,105,19)"/><text x="1171.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1168" y="708" width="11" height="15" fill="rgb(250,14,18)"/><text x="1171.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1168" y="724" width="11" height="15" fill="rgb(241,119,40)"/><text x="1171.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1168" y="740" width="11" height="15" fill="rgb(247,134,15)"/><text x="1171.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="756" width="11" height="15" fill="rgb(208,215,8)"/><text x="1171.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.92%)</title><rect x="1168" y="772" width="11" height="15" fill="rgb(231,24,23)"/><text x="1171.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="788" width="11" height="15" fill="rgb(220,226,35)"/><text x="1171.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1168" y="804" width="11" height="15" fill="rgb(239,229,44)"/><text x="1171.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1168" y="820" width="11" height="15" fill="rgb(218,70,28)"/><text x="1171.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1168" y="836" width="11" height="15" fill="rgb(217,116,29)"/><text x="1171.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="852" width="11" height="15" fill="rgb(229,73,53)"/><text x="1171.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.92%)</title><rect x="1168" y="868" width="11" height="15" fill="rgb(240,227,44)"/><text x="1171.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="884" width="11" height="15" fill="rgb(229,2,42)"/><text x="1171.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.92%)</title><rect x="1168" y="900" width="11" height="15" fill="rgb(223,203,34)"/><text x="1171.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="916" width="11" height="15" fill="rgb(242,214,49)"/><text x="1171.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="932" width="11" height="15" fill="rgb(224,126,0)"/><text x="1171.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1168" y="948" width="11" height="15" fill="rgb(234,187,5)"/><text x="1171.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1168" y="964" width="11" height="15" fill="rgb(210,149,12)"/><text x="1171.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1168" y="980" width="11" height="15" fill="rgb(226,118,54)"/><text x="1171.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="996" width="11" height="15" fill="rgb(239,11,3)"/><text x="1171.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.92%)</title><rect x="1168" y="1012" width="11" height="15" fill="rgb(238,197,43)"/><text x="1171.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.92%)</title><rect x="1168" y="1028" width="11" height="15" fill="rgb(242,39,26)"/><text x="1171.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.92%)</title><rect x="1168" y="1044" width="11" height="15" fill="rgb(220,1,32)"/><text x="1171.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.92%)</title><rect x="1168" y="1060" width="11" height="15" fill="rgb(243,23,53)"/><text x="1171.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.92%)</title><rect x="1168" y="1076" width="11" height="15" fill="rgb(219,79,21)"/><text x="1171.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.92%)</title><rect x="1168" y="1092" width="11" height="15" fill="rgb(238,5,54)"/><text x="1171.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.31%)</title><rect x="1175" y="1108" width="4" height="15" fill="rgb(229,51,44)"/><text x="1178.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1175" y="1124" width="4" height="15" fill="rgb(212,40,10)"/><text x="1178.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1175" y="1140" width="4" height="15" fill="rgb(215,187,4)"/><text x="1178.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1175" y="1156" width="4" height="15" fill="rgb(213,48,4)"/><text x="1178.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1175" y="1172" width="4" height="15" fill="rgb(216,118,39)"/><text x="1178.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1175" y="1188" width="4" height="15" fill="rgb(251,215,25)"/><text x="1178.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1175" y="1204" width="4" height="15" fill="rgb(221,179,15)"/><text x="1178.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1175" y="1220" width="4" height="15" fill="rgb(211,88,51)"/><text x="1178.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.31%)</title><rect x="1175" y="1236" width="4" height="15" fill="rgb(250,145,10)"/><text x="1178.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1175" y="1252" width="4" height="15" fill="rgb(243,205,46)"/><text x="1178.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1175" y="1268" width="4" height="15" fill="rgb(246,116,16)"/><text x="1178.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1175" y="1284" width="4" height="15" fill="rgb(232,195,40)"/><text x="1178.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1175" y="1300" width="4" height="15" fill="rgb(214,76,37)"/><text x="1178.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1175" y="1316" width="4" height="15" fill="rgb(250,99,38)"/><text x="1178.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1175" y="1332" width="4" height="15" fill="rgb(220,217,33)"/><text x="1178.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1175" y="1348" width="4" height="15" fill="rgb(220,73,54)"/><text x="1178.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.31%)</title><rect x="1175" y="1364" width="4" height="15" fill="rgb(225,118,14)"/><text x="1178.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1175" y="1380" width="4" height="15" fill="rgb(226,71,32)"/><text x="1178.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1175" y="1396" width="4" height="15" fill="rgb(222,153,3)"/><text x="1178.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1175" y="1412" width="4" height="15" fill="rgb(214,136,49)"/><text x="1178.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1175" y="1428" width="4" height="15" fill="rgb(241,128,28)"/><text x="1178.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1175" y="1444" width="4" height="15" fill="rgb(247,129,37)"/><text x="1178.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.31%)</title><rect x="1175" y="1460" width="4" height="15" fill="rgb(234,224,6)"/><text x="1178.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.31%)</title><rect x="1175" y="1476" width="4" height="15" fill="rgb(211,89,43)"/><text x="1178.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.31%)</title><rect x="1175" y="1492" width="4" height="15" fill="rgb(218,25,48)"/><text x="1178.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.31%)</title><rect x="1175" y="1508" width="4" height="15" fill="rgb(248,33,47)"/><text x="1178.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.31%)</title><rect x="1175" y="1524" width="4" height="15" fill="rgb(236,0,21)"/><text x="1178.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.31%)</title><rect x="1175" y="1540" width="4" height="15" fill="rgb(230,73,13)"/><text x="1178.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="1175" y="1556" width="4" height="15" fill="rgb(233,164,32)"/><text x="1178.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.31%)</title><rect x="1175" y="1572" width="4" height="15" fill="rgb(224,98,49)"/><text x="1178.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.31%)</title><rect x="1175" y="1588" width="4" height="15" fill="rgb(232,131,39)"/><text x="1178.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.31%)</title><rect x="1175" y="1604" width="4" height="15" fill="rgb(243,104,11)"/><text x="1178.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.31%)</title><rect x="1175" y="1620" width="4" height="15" fill="rgb(210,222,24)"/><text x="1178.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="1175" y="1636" width="4" height="15" fill="rgb(232,56,18)"/><text x="1178.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="1175" y="1652" width="4" height="15" fill="rgb(218,106,39)"/><text x="1178.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="1175" y="1668" width="4" height="15" fill="rgb(234,137,35)"/><text x="1178.00" y="1678.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:28) (1 samples, 0.31%)</title><rect x="1179" y="84" width="3" height="15" fill="rgb(239,193,34)"/><text x="1182.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.31%)</title><rect x="1179" y="100" width="3" height="15" fill="rgb(235,150,44)"/><text x="1182.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.31%)</title><rect x="1179" y="116" width="3" height="15" fill="rgb(207,107,41)"/><text x="1182.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.31%)</title><rect x="1179" y="132" width="3" height="15" fill="rgb(206,64,32)"/><text x="1182.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.31%)</title><rect x="1179" y="148" width="3" height="15" fill="rgb(212,109,39)"/><text x="1182.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.31%)</title><rect x="1179" y="164" width="3" height="15" fill="rgb(239,172,26)"/><text x="1182.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.31%)</title><rect x="1179" y="180" width="3" height="15" fill="rgb(243,164,35)"/><text x="1182.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.31%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(250,222,48)"/><text x="1182.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(254,15,37)"/><text x="1182.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(244,169,28)"/><text x="1182.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(224,152,44)"/><text x="1182.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(252,65,10)"/><text x="1182.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(248,102,30)"/><text x="1182.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.31%)</title><rect x="1179" y="292" width="3" height="15" fill="rgb(211,183,14)"/><text x="1182.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1179" y="308" width="3" height="15" fill="rgb(226,72,28)"/><text x="1182.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1179" y="324" width="3" height="15" fill="rgb(217,115,16)"/><text x="1182.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1179" y="340" width="3" height="15" fill="rgb(250,36,38)"/><text x="1182.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1179" y="356" width="3" height="15" fill="rgb(250,188,34)"/><text x="1182.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1179" y="372" width="3" height="15" fill="rgb(248,186,9)"/><text x="1182.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (1 samples, 0.31%)</title><rect x="1179" y="388" width="3" height="15" fill="rgb(237,97,32)"/><text x="1182.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1179" y="404" width="3" height="15" fill="rgb(216,161,22)"/><text x="1182.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1179" y="420" width="3" height="15" fill="rgb(219,126,29)"/><text x="1182.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1179" y="436" width="3" height="15" fill="rgb(215,189,6)"/><text x="1182.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1179" y="452" width="3" height="15" fill="rgb(227,22,35)"/><text x="1182.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1179" y="468" width="3" height="15" fill="rgb(240,229,23)"/><text x="1182.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (1 samples, 0.31%)</title><rect x="1179" y="484" width="3" height="15" fill="rgb(233,227,44)"/><text x="1182.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (1 samples, 0.31%)</title><rect x="1179" y="500" width="3" height="15" fill="rgb(249,207,27)"/><text x="1182.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="516" width="3" height="15" fill="rgb(212,3,53)"/><text x="1182.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="532" width="3" height="15" fill="rgb(211,171,35)"/><text x="1182.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="548" width="3" height="15" fill="rgb(208,84,53)"/><text x="1182.00" y="558.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="564" width="3" height="15" fill="rgb(209,122,0)"/><text x="1182.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="580" width="3" height="15" fill="rgb(241,206,42)"/><text x="1182.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1179" y="596" width="3" height="15" fill="rgb(234,143,43)"/><text x="1182.00" y="606.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1179" y="612" width="3" height="15" fill="rgb(254,113,24)"/><text x="1182.00" y="622.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1179" y="628" width="3" height="15" fill="rgb(225,110,33)"/><text x="1182.00" y="638.50"></text></g><g><title>0x7fe1bd49a8a4 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1179" y="644" width="3" height="15" fill="rgb(216,109,29)"/><text x="1182.00" y="654.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:45) (2 samples, 0.61%)</title><rect x="1179" y="52" width="7" height="15" fill="rgb(252,181,17)"/><text x="1182.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:44) (2 samples, 0.61%)</title><rect x="1179" y="68" width="7" height="15" fill="rgb(243,134,4)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29) (1 samples, 0.31%)</title><rect x="1182" y="84" width="4" height="15" fill="rgb(226,226,24)"/><text x="1185.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:23) (1 samples, 0.31%)</title><rect x="1182" y="100" width="4" height="15" fill="rgb(234,146,25)"/><text x="1185.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="1182" y="116" width="4" height="15" fill="rgb(244,175,5)"/><text x="1185.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(235,222,8)"/><text x="1185.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(205,194,13)"/><text x="1185.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.31%)</title><rect x="1182" y="164" width="4" height="15" fill="rgb(243,143,45)"/><text x="1185.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.31%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(207,44,7)"/><text x="1185.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.31%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(232,36,4)"/><text x="1185.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.31%)</title><rect x="1182" y="212" width="4" height="15" fill="rgb(232,48,51)"/><text x="1185.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (1 samples, 0.31%)</title><rect x="1182" y="228" width="4" height="15" fill="rgb(250,166,6)"/><text x="1185.00" y="238.50"></text></g><g><title>0x7fe17e136422 (?) (1 samples, 0.31%)</title><rect x="1182" y="244" width="4" height="15" fill="rgb(237,65,16)"/><text x="1185.00" y="254.50"></text></g><g><title>0x7fe17e13c89e (?) (1 samples, 0.31%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(247,103,40)"/><text x="1185.00" y="270.50"></text></g><g><title>0x7fe17e13c74f (?) (1 samples, 0.31%)</title><rect x="1182" y="276" width="4" height="15" fill="rgb(228,37,6)"/><text x="1185.00" y="286.50"></text></g><g><title>0x7fe17e142a3a (?) (1 samples, 0.31%)</title><rect x="1182" y="292" width="4" height="15" fill="rgb(229,184,34)"/><text x="1185.00" y="302.50"></text></g><g><title>0x7fe18745eab9 (?) (1 samples, 0.31%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(247,191,24)"/><text x="1185.00" y="318.50"></text></g><g><title>0x7fe18745fea9 (?) (1 samples, 0.31%)</title><rect x="1182" y="324" width="4" height="15" fill="rgb(231,106,21)"/><text x="1185.00" y="334.50"></text></g><g><title>all (327 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,45,5)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:52) (1 samples, 0.31%)</title><rect x="1186" y="52" width="4" height="15" fill="rgb(246,119,4)"/><text x="1189.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:51) (1 samples, 0.31%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(222,222,47)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:28) (1 samples, 0.31%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(211,176,6)"/><text x="1189.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.31%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(234,121,13)"/><text x="1189.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.31%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(208,65,24)"/><text x="1189.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(222,209,52)"/><text x="1189.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.31%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(244,30,18)"/><text x="1189.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.31%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(239,14,13)"/><text x="1189.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.31%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(208,44,25)"/><text x="1189.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.31%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(232,131,2)"/><text x="1189.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.31%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(210,220,10)"/><text x="1189.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.31%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(212,165,28)"/><text x="1189.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.31%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(240,31,39)"/><text x="1189.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c:975) (1 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(231,223,43)"/><text x="1189.00" y="270.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2949) (1 samples, 0.31%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(205,198,18)"/><text x="1189.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:698) (1 samples, 0.31%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(244,158,31)"/><text x="1189.00" y="302.50"></text></g></g></svg>