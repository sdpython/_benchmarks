<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2134" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2117.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2117.00"> </text><g id="frames"><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.31%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(213,90,13)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.31%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(254,117,6)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.31%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(213,60,12)"/><text x="13.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.31%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(215,137,35)"/><text x="13.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.31%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(239,76,23)"/><text x="13.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.31%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(250,73,13)"/><text x="13.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.31%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(238,77,40)"/><text x="13.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.31%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(238,177,9)"/><text x="13.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.31%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(252,154,27)"/><text x="13.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.31%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(245,226,43)"/><text x="13.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.31%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(234,150,3)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:31) (2 samples, 0.62%)</title><rect x="10" y="52" width="7" height="15" fill="rgb(217,61,4)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:11) (2 samples, 0.62%)</title><rect x="10" y="68" width="7" height="15" fill="rgb(249,142,31)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (2 samples, 0.62%)</title><rect x="10" y="84" width="7" height="15" fill="rgb(239,32,11)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.62%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(238,117,5)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (1 samples, 0.31%)</title><rect x="13" y="116" width="4" height="15" fill="rgb(208,22,28)"/><text x="16.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (1 samples, 0.31%)</title><rect x="13" y="132" width="4" height="15" fill="rgb(208,11,34)"/><text x="16.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.31%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(254,80,28)"/><text x="16.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.31%)</title><rect x="13" y="164" width="4" height="15" fill="rgb(235,51,13)"/><text x="16.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.31%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(248,124,27)"/><text x="16.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.31%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(222,102,12)"/><text x="16.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(236,163,49)"/><text x="16.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="13" y="228" width="4" height="15" fill="rgb(224,175,28)"/><text x="16.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (1 samples, 0.31%)</title><rect x="13" y="244" width="4" height="15" fill="rgb(215,112,54)"/><text x="16.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (1 samples, 0.31%)</title><rect x="13" y="260" width="4" height="15" fill="rgb(218,146,31)"/><text x="16.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.31%)</title><rect x="13" y="276" width="4" height="15" fill="rgb(212,7,40)"/><text x="16.00" y="286.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.31%)</title><rect x="13" y="292" width="4" height="15" fill="rgb(231,0,2)"/><text x="16.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.31%)</title><rect x="13" y="308" width="4" height="15" fill="rgb(254,67,43)"/><text x="16.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.31%)</title><rect x="13" y="324" width="4" height="15" fill="rgb(248,127,8)"/><text x="16.00" y="334.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.31%)</title><rect x="13" y="340" width="4" height="15" fill="rgb(250,100,12)"/><text x="16.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.31%)</title><rect x="13" y="356" width="4" height="15" fill="rgb(218,161,25)"/><text x="16.00" y="366.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.31%)</title><rect x="13" y="372" width="4" height="15" fill="rgb(219,107,29)"/><text x="16.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.31%)</title><rect x="13" y="388" width="4" height="15" fill="rgb(236,151,24)"/><text x="16.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.31%)</title><rect x="13" y="404" width="4" height="15" fill="rgb(216,135,15)"/><text x="16.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.31%)</title><rect x="13" y="420" width="4" height="15" fill="rgb(231,129,37)"/><text x="16.00" y="430.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.31%)</title><rect x="13" y="436" width="4" height="15" fill="rgb(216,13,16)"/><text x="16.00" y="446.50"></text></g><g><title>multi_DECREF (mapping.c:148) (1 samples, 0.31%)</title><rect x="13" y="452" width="4" height="15" fill="rgb(226,51,48)"/><text x="16.00" y="462.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:28) (1 samples, 0.31%)</title><rect x="17" y="84" width="3" height="15" fill="rgb(225,170,22)"/><text x="20.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.31%)</title><rect x="17" y="100" width="3" height="15" fill="rgb(216,50,43)"/><text x="20.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.31%)</title><rect x="17" y="116" width="3" height="15" fill="rgb(216,229,35)"/><text x="20.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.31%)</title><rect x="17" y="132" width="3" height="15" fill="rgb(243,41,12)"/><text x="20.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.31%)</title><rect x="17" y="148" width="3" height="15" fill="rgb(225,127,24)"/><text x="20.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.31%)</title><rect x="17" y="164" width="3" height="15" fill="rgb(233,123,27)"/><text x="20.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.31%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(208,45,7)"/><text x="20.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.31%)</title><rect x="17" y="196" width="3" height="15" fill="rgb(243,78,24)"/><text x="20.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.31%)</title><rect x="17" y="212" width="3" height="15" fill="rgb(228,105,13)"/><text x="20.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.31%)</title><rect x="17" y="228" width="3" height="15" fill="rgb(240,4,34)"/><text x="20.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(243,141,29)"/><text x="20.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.31%)</title><rect x="17" y="260" width="3" height="15" fill="rgb(247,207,36)"/><text x="20.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.31%)</title><rect x="17" y="276" width="3" height="15" fill="rgb(212,45,23)"/><text x="20.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.31%)</title><rect x="17" y="292" width="3" height="15" fill="rgb(249,186,0)"/><text x="20.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.31%)</title><rect x="17" y="308" width="3" height="15" fill="rgb(233,78,4)"/><text x="20.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.31%)</title><rect x="20" y="196" width="4" height="15" fill="rgb(252,147,43)"/><text x="23.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:656) (2 samples, 0.62%)</title><rect x="20" y="148" width="8" height="15" fill="rgb(207,89,50)"/><text x="23.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (2 samples, 0.62%)</title><rect x="20" y="164" width="8" height="15" fill="rgb(222,19,33)"/><text x="23.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (2 samples, 0.62%)</title><rect x="20" y="180" width="8" height="15" fill="rgb(208,177,6)"/><text x="23.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.31%)</title><rect x="24" y="196" width="4" height="15" fill="rgb(222,183,53)"/><text x="27.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.31%)</title><rect x="24" y="212" width="4" height="15" fill="rgb(208,141,12)"/><text x="27.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.31%)</title><rect x="28" y="148" width="3" height="15" fill="rgb(228,154,20)"/><text x="31.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:620) (1 samples, 0.31%)</title><rect x="28" y="164" width="3" height="15" fill="rgb(242,30,37)"/><text x="31.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.31%)</title><rect x="28" y="180" width="3" height="15" fill="rgb(207,181,49)"/><text x="31.00" y="190.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (1 samples, 0.31%)</title><rect x="31" y="292" width="4" height="15" fill="rgb(229,69,21)"/><text x="34.00" y="302.50"></text></g><g><title>0x7fa3c8758d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="31" y="308" width="4" height="15" fill="rgb(238,103,39)"/><text x="34.00" y="318.50"></text></g><g><title>0x7fa3c875814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="31" y="324" width="4" height="15" fill="rgb(222,116,52)"/><text x="34.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="31" y="340" width="4" height="15" fill="rgb(245,134,40)"/><text x="34.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="31" y="356" width="4" height="15" fill="rgb(213,157,2)"/><text x="34.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.31%)</title><rect x="31" y="372" width="4" height="15" fill="rgb(245,83,25)"/><text x="34.00" y="382.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.62%)</title><rect x="31" y="164" width="8" height="15" fill="rgb(224,221,0)"/><text x="34.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.62%)</title><rect x="31" y="180" width="8" height="15" fill="rgb(219,103,0)"/><text x="34.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.62%)</title><rect x="31" y="196" width="8" height="15" fill="rgb(233,134,39)"/><text x="34.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.62%)</title><rect x="31" y="212" width="8" height="15" fill="rgb(215,93,2)"/><text x="34.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.62%)</title><rect x="31" y="228" width="8" height="15" fill="rgb(223,105,39)"/><text x="34.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.62%)</title><rect x="31" y="244" width="8" height="15" fill="rgb(225,134,53)"/><text x="34.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.62%)</title><rect x="31" y="260" width="8" height="15" fill="rgb(211,209,33)"/><text x="34.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.62%)</title><rect x="31" y="276" width="8" height="15" fill="rgb(242,75,27)"/><text x="34.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.31%)</title><rect x="35" y="292" width="4" height="15" fill="rgb(222,183,21)"/><text x="38.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.31%)</title><rect x="35" y="308" width="4" height="15" fill="rgb(207,162,12)"/><text x="38.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.31%)</title><rect x="35" y="324" width="4" height="15" fill="rgb(236,127,40)"/><text x="38.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.31%)</title><rect x="35" y="340" width="4" height="15" fill="rgb(222,76,51)"/><text x="38.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.31%)</title><rect x="35" y="356" width="4" height="15" fill="rgb(249,160,45)"/><text x="38.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="35" y="372" width="4" height="15" fill="rgb(232,44,6)"/><text x="38.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="35" y="388" width="4" height="15" fill="rgb(215,189,37)"/><text x="38.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.31%)</title><rect x="35" y="404" width="4" height="15" fill="rgb(254,218,6)"/><text x="38.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.31%)</title><rect x="35" y="420" width="4" height="15" fill="rgb(227,2,26)"/><text x="38.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.31%)</title><rect x="35" y="436" width="4" height="15" fill="rgb(209,138,37)"/><text x="38.00" y="446.50"></text></g><g><title>get (queue.py:164) (3 samples, 0.93%)</title><rect x="42" y="196" width="11" height="15" fill="rgb(221,192,23)"/><text x="45.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.31%)</title><rect x="50" y="212" width="3" height="15" fill="rgb(215,177,41)"/><text x="53.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (6 samples, 1.85%)</title><rect x="42" y="180" width="22" height="15" fill="rgb(217,156,23)"/><text x="45.00" y="190.50">d..</text></g><g><title>get (queue.py:167) (3 samples, 0.93%)</title><rect x="53" y="196" width="11" height="15" fill="rgb(228,59,48)"/><text x="56.00" y="206.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.31%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(227,141,51)"/><text x="82.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.62%)</title><rect x="82" y="228" width="8" height="15" fill="rgb(213,56,1)"/><text x="85.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (2 samples, 0.62%)</title><rect x="90" y="228" width="7" height="15" fill="rgb(231,161,23)"/><text x="93.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (11 samples, 3.40%)</title><rect x="64" y="180" width="40" height="15" fill="rgb(236,102,50)"/><text x="67.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (9 samples, 2.78%)</title><rect x="71" y="196" width="33" height="15" fill="rgb(252,57,51)"/><text x="74.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 2.47%)</title><rect x="75" y="212" width="29" height="15" fill="rgb(220,31,54)"/><text x="78.00" y="222.50">de..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.62%)</title><rect x="97" y="228" width="7" height="15" fill="rgb(206,45,24)"/><text x="100.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:810) (1 samples, 0.31%)</title><rect x="104" y="180" width="4" height="15" fill="rgb(249,93,2)"/><text x="107.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.31%)</title><rect x="108" y="180" width="3" height="15" fill="rgb(208,166,37)"/><text x="111.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (4 samples, 1.23%)</title><rect x="111" y="196" width="15" height="15" fill="rgb(206,226,44)"/><text x="114.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.31%)</title><rect x="122" y="212" width="4" height="15" fill="rgb(249,165,8)"/><text x="125.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.31%)</title><rect x="126" y="244" width="4" height="15" fill="rgb(250,3,24)"/><text x="129.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.62%)</title><rect x="126" y="212" width="7" height="15" fill="rgb(206,85,2)"/><text x="129.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.62%)</title><rect x="126" y="228" width="7" height="15" fill="rgb(214,218,6)"/><text x="129.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:39) (1 samples, 0.31%)</title><rect x="130" y="244" width="3" height="15" fill="rgb(222,47,42)"/><text x="133.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.31%)</title><rect x="133" y="212" width="4" height="15" fill="rgb(247,52,33)"/><text x="136.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (2 samples, 0.62%)</title><rect x="137" y="212" width="7" height="15" fill="rgb(237,199,15)"/><text x="140.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (10 samples, 3.09%)</title><rect x="111" y="180" width="37" height="15" fill="rgb(241,123,4)"/><text x="114.00" y="190.50">dis..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (6 samples, 1.85%)</title><rect x="126" y="196" width="22" height="15" fill="rgb(232,51,26)"/><text x="129.00" y="206.50">g..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.31%)</title><rect x="144" y="212" width="4" height="15" fill="rgb(235,172,22)"/><text x="147.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.62%)</title><rect x="148" y="180" width="7" height="15" fill="rgb(219,88,52)"/><text x="151.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.31%)</title><rect x="152" y="196" width="3" height="15" fill="rgb(208,165,49)"/><text x="155.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.31%)</title><rect x="155" y="196" width="4" height="15" fill="rgb(225,13,34)"/><text x="158.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.31%)</title><rect x="155" y="212" width="4" height="15" fill="rgb(224,141,34)"/><text x="158.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (2 samples, 0.62%)</title><rect x="155" y="180" width="7" height="15" fill="rgb(218,191,14)"/><text x="158.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.31%)</title><rect x="159" y="196" width="3" height="15" fill="rgb(244,144,6)"/><text x="162.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.31%)</title><rect x="159" y="212" width="3" height="15" fill="rgb(233,48,29)"/><text x="162.00" y="222.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.62%)</title><rect x="162" y="196" width="8" height="15" fill="rgb(243,2,12)"/><text x="165.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.62%)</title><rect x="162" y="212" width="8" height="15" fill="rgb(215,181,0)"/><text x="165.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="166" y="228" width="4" height="15" fill="rgb(205,176,4)"/><text x="169.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.31%)</title><rect x="166" y="244" width="4" height="15" fill="rgb(254,113,46)"/><text x="169.00" y="254.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.31%)</title><rect x="170" y="196" width="3" height="15" fill="rgb(227,30,38)"/><text x="173.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.31%)</title><rect x="170" y="212" width="3" height="15" fill="rgb(211,17,9)"/><text x="173.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (4 samples, 1.23%)</title><rect x="162" y="180" width="15" height="15" fill="rgb(233,154,25)"/><text x="165.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.31%)</title><rect x="173" y="196" width="4" height="15" fill="rgb(253,132,19)"/><text x="176.00" y="206.50"></text></g><g><title>notify (threading.py:347) (1 samples, 0.31%)</title><rect x="173" y="212" width="4" height="15" fill="rgb(208,136,22)"/><text x="176.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (2 samples, 0.62%)</title><rect x="177" y="180" width="7" height="15" fill="rgb(209,177,8)"/><text x="180.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.31%)</title><rect x="184" y="196" width="4" height="15" fill="rgb(238,190,51)"/><text x="187.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.31%)</title><rect x="195" y="260" width="4" height="15" fill="rgb(224,21,27)"/><text x="198.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (2 samples, 0.62%)</title><rect x="195" y="244" width="8" height="15" fill="rgb(227,0,44)"/><text x="198.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.31%)</title><rect x="199" y="260" width="4" height="15" fill="rgb(242,222,27)"/><text x="202.00" y="270.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.62%)</title><rect x="206" y="340" width="7" height="15" fill="rgb(222,219,12)"/><text x="209.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (4 samples, 1.23%)</title><rect x="206" y="292" width="15" height="15" fill="rgb(250,212,34)"/><text x="209.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 1.23%)</title><rect x="206" y="308" width="15" height="15" fill="rgb(208,207,11)"/><text x="209.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.23%)</title><rect x="206" y="324" width="15" height="15" fill="rgb(213,63,14)"/><text x="209.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="213" y="340" width="8" height="15" fill="rgb(224,164,2)"/><text x="216.00" y="350.50"></text></g><g><title>0x7fa3c8767272 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="221" y="340" width="3" height="15" fill="rgb(251,1,19)"/><text x="224.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.31%)</title><rect x="224" y="436" width="4" height="15" fill="rgb(233,143,20)"/><text x="227.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.31%)</title><rect x="224" y="452" width="4" height="15" fill="rgb(227,98,41)"/><text x="227.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.31%)</title><rect x="224" y="468" width="4" height="15" fill="rgb(207,83,23)"/><text x="227.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.31%)</title><rect x="224" y="484" width="4" height="15" fill="rgb(205,201,22)"/><text x="227.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="224" y="500" width="4" height="15" fill="rgb(237,125,38)"/><text x="227.00" y="510.50"></text></g><g><title>0x7fa3c874ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="224" y="372" width="8" height="15" fill="rgb(250,160,29)"/><text x="227.00" y="382.50"></text></g><g><title>0x7fa3c874a666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="224" y="388" width="8" height="15" fill="rgb(207,69,8)"/><text x="227.00" y="398.50"></text></g><g><title>0x7fa3c87402fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="224" y="404" width="8" height="15" fill="rgb(222,93,37)"/><text x="227.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.62%)</title><rect x="224" y="420" width="8" height="15" fill="rgb(247,83,39)"/><text x="227.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.31%)</title><rect x="228" y="436" width="4" height="15" fill="rgb(207,145,13)"/><text x="231.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.31%)</title><rect x="228" y="452" width="4" height="15" fill="rgb(249,10,40)"/><text x="231.00" y="462.50"></text></g><g><title>0x7fa3eed14902 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="228" y="468" width="4" height="15" fill="rgb(233,59,0)"/><text x="231.00" y="478.50"></text></g><g><title>0x7fa3c87662df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="224" y="356" width="11" height="15" fill="rgb(227,10,28)"/><text x="227.00" y="366.50"></text></g><g><title>0x7fa3c874ae72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="232" y="372" width="3" height="15" fill="rgb(245,125,23)"/><text x="235.00" y="382.50"></text></g><g><title>0x7fa3c873dfda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="232" y="388" width="3" height="15" fill="rgb(220,27,39)"/><text x="235.00" y="398.50"></text></g><g><title>0x7fa3c873d900 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="232" y="404" width="3" height="15" fill="rgb(231,122,7)"/><text x="235.00" y="414.50"></text></g><g><title>0x7fa3c8766456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="235" y="356" width="4" height="15" fill="rgb(209,218,34)"/><text x="238.00" y="366.50"></text></g><g><title>0x7fa3c876653e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="239" y="356" width="4" height="15" fill="rgb(249,61,28)"/><text x="242.00" y="366.50"></text></g><g><title>0x7fa3c8757fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.47%)</title><rect x="221" y="324" width="29" height="15" fill="rgb(239,126,22)"/><text x="224.00" y="334.50">0x..</text></g><g><title>0x7fa3c8767405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.16%)</title><rect x="224" y="340" width="26" height="15" fill="rgb(250,74,41)"/><text x="227.00" y="350.50">0..</text></g><g><title>0x7fa3c8766592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="243" y="356" width="7" height="15" fill="rgb(243,53,19)"/><text x="246.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.62%)</title><rect x="243" y="372" width="7" height="15" fill="rgb(218,62,37)"/><text x="246.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:36) (1 samples, 0.31%)</title><rect x="250" y="356" width="4" height="15" fill="rgb(235,136,2)"/><text x="253.00" y="366.50"></text></g><g><title>0x7fa3c875805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="250" y="324" width="7" height="15" fill="rgb(223,138,43)"/><text x="253.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.62%)</title><rect x="250" y="340" width="7" height="15" fill="rgb(242,100,52)"/><text x="253.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.31%)</title><rect x="254" y="356" width="3" height="15" fill="rgb(236,220,32)"/><text x="257.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="254" y="372" width="3" height="15" fill="rgb(229,111,37)"/><text x="257.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.31%)</title><rect x="254" y="388" width="3" height="15" fill="rgb(246,214,28)"/><text x="257.00" y="398.50"></text></g><g><title>_array_fill_strides (ctors.c:4128) (1 samples, 0.31%)</title><rect x="254" y="404" width="3" height="15" fill="rgb(227,3,7)"/><text x="257.00" y="414.50"></text></g><g><title>0x7fa3c8758328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="257" y="324" width="4" height="15" fill="rgb(250,194,15)"/><text x="260.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.31%)</title><rect x="257" y="340" width="4" height="15" fill="rgb(208,126,16)"/><text x="260.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.31%)</title><rect x="257" y="356" width="4" height="15" fill="rgb(208,96,52)"/><text x="260.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:932) (1 samples, 0.31%)</title><rect x="257" y="372" width="4" height="15" fill="rgb(210,156,29)"/><text x="260.00" y="382.50"></text></g><g><title>0x7fa3edf37020 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="257" y="388" width="4" height="15" fill="rgb(205,148,28)"/><text x="260.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (12 samples, 3.70%)</title><rect x="221" y="292" width="43" height="15" fill="rgb(213,206,34)"/><text x="224.00" y="302.50">pred..</text></g><g><title>0x7fa3c8758d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.70%)</title><rect x="221" y="308" width="43" height="15" fill="rgb(225,77,37)"/><text x="224.00" y="318.50">0x7f..</text></g><g><title>0x7fa3c875855e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="261" y="324" width="3" height="15" fill="rgb(235,146,24)"/><text x="264.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.31%)</title><rect x="264" y="292" width="4" height="15" fill="rgb(224,2,6)"/><text x="267.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="264" y="308" width="4" height="15" fill="rgb(218,147,35)"/><text x="267.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.31%)</title><rect x="272" y="356" width="3" height="15" fill="rgb(247,38,21)"/><text x="275.00" y="366.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:38) (1 samples, 0.31%)</title><rect x="272" y="372" width="3" height="15" fill="rgb(215,139,30)"/><text x="275.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.62%)</title><rect x="272" y="308" width="7" height="15" fill="rgb(251,152,14)"/><text x="275.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.62%)</title><rect x="272" y="324" width="7" height="15" fill="rgb(206,5,33)"/><text x="275.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.62%)</title><rect x="272" y="340" width="7" height="15" fill="rgb(237,31,30)"/><text x="275.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.31%)</title><rect x="275" y="356" width="4" height="15" fill="rgb(224,119,7)"/><text x="278.00" y="366.50"></text></g><g><title>0x7fa3edf371c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="275" y="372" width="4" height="15" fill="rgb(246,159,34)"/><text x="278.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.31%)</title><rect x="294" y="356" width="3" height="15" fill="rgb(220,105,37)"/><text x="297.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="294" y="372" width="3" height="15" fill="rgb(219,202,29)"/><text x="297.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="294" y="388" width="3" height="15" fill="rgb(233,221,26)"/><text x="297.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.31%)</title><rect x="294" y="404" width="3" height="15" fill="rgb(235,20,11)"/><text x="297.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.31%)</title><rect x="294" y="420" width="3" height="15" fill="rgb(233,117,19)"/><text x="297.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.31%)</title><rect x="294" y="436" width="3" height="15" fill="rgb(239,98,16)"/><text x="297.00" y="446.50"></text></g><g><title>0x7fa3eed2a757 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="297" y="388" width="4" height="15" fill="rgb(221,138,31)"/><text x="300.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.62%)</title><rect x="297" y="372" width="8" height="15" fill="rgb(234,115,24)"/><text x="300.00" y="382.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.31%)</title><rect x="301" y="388" width="4" height="15" fill="rgb(230,14,32)"/><text x="304.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.31%)</title><rect x="305" y="404" width="3" height="15" fill="rgb(239,167,16)"/><text x="308.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.31%)</title><rect x="305" y="420" width="3" height="15" fill="rgb(233,123,4)"/><text x="308.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.31%)</title><rect x="305" y="436" width="3" height="15" fill="rgb(216,209,31)"/><text x="308.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="305" y="452" width="3" height="15" fill="rgb(235,174,22)"/><text x="308.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.31%)</title><rect x="305" y="468" width="3" height="15" fill="rgb(243,126,52)"/><text x="308.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.31%)</title><rect x="305" y="484" width="3" height="15" fill="rgb(252,48,47)"/><text x="308.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.31%)</title><rect x="305" y="500" width="3" height="15" fill="rgb(237,20,50)"/><text x="308.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.31%)</title><rect x="308" y="404" width="4" height="15" fill="rgb(232,28,50)"/><text x="311.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.31%)</title><rect x="308" y="420" width="4" height="15" fill="rgb(238,187,4)"/><text x="311.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.31%)</title><rect x="308" y="436" width="4" height="15" fill="rgb(234,172,15)"/><text x="311.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.31%)</title><rect x="308" y="452" width="4" height="15" fill="rgb(230,111,54)"/><text x="311.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.31%)</title><rect x="308" y="468" width="4" height="15" fill="rgb(223,197,2)"/><text x="311.00" y="478.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.31%)</title><rect x="308" y="484" width="4" height="15" fill="rgb(209,29,6)"/><text x="311.00" y="494.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.31%)</title><rect x="308" y="500" width="4" height="15" fill="rgb(216,24,33)"/><text x="311.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="312" y="404" width="3" height="15" fill="rgb(235,73,28)"/><text x="315.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="312" y="420" width="3" height="15" fill="rgb(238,145,25)"/><text x="315.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2721) (1 samples, 0.31%)</title><rect x="312" y="436" width="3" height="15" fill="rgb(239,170,15)"/><text x="315.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:558) (1 samples, 0.31%)</title><rect x="315" y="404" width="4" height="15" fill="rgb(254,182,30)"/><text x="318.00" y="414.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.31%)</title><rect x="315" y="420" width="4" height="15" fill="rgb(245,93,19)"/><text x="318.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (15 samples, 4.63%)</title><rect x="268" y="292" width="55" height="15" fill="rgb(205,197,37)"/><text x="271.00" y="302.50">predi..</text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.70%)</title><rect x="279" y="308" width="44" height="15" fill="rgb(244,208,15)"/><text x="282.00" y="318.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 3.70%)</title><rect x="279" y="324" width="44" height="15" fill="rgb(221,85,20)"/><text x="282.00" y="334.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.09%)</title><rect x="286" y="340" width="37" height="15" fill="rgb(236,143,30)"/><text x="289.00" y="350.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.16%)</title><rect x="297" y="356" width="26" height="15" fill="rgb(245,136,5)"/><text x="300.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.54%)</title><rect x="305" y="372" width="18" height="15" fill="rgb(247,100,20)"/><text x="308.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.54%)</title><rect x="305" y="388" width="18" height="15" fill="rgb(231,208,50)"/><text x="308.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.31%)</title><rect x="319" y="404" width="4" height="15" fill="rgb(214,2,28)"/><text x="322.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.31%)</title><rect x="319" y="420" width="4" height="15" fill="rgb(247,136,10)"/><text x="322.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.31%)</title><rect x="326" y="308" width="4" height="15" fill="rgb(246,160,7)"/><text x="329.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.31%)</title><rect x="326" y="324" width="4" height="15" fill="rgb(210,136,20)"/><text x="329.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.31%)</title><rect x="326" y="340" width="4" height="15" fill="rgb(226,225,49)"/><text x="329.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.31%)</title><rect x="326" y="356" width="4" height="15" fill="rgb(234,117,21)"/><text x="329.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="326" y="372" width="4" height="15" fill="rgb(206,52,16)"/><text x="329.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="330" y="340" width="4" height="15" fill="rgb(214,144,9)"/><text x="333.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:403) (1 samples, 0.31%)</title><rect x="330" y="356" width="4" height="15" fill="rgb(254,25,24)"/><text x="333.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.31%)</title><rect x="330" y="372" width="4" height="15" fill="rgb(229,173,19)"/><text x="333.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.31%)</title><rect x="334" y="356" width="3" height="15" fill="rgb(233,158,17)"/><text x="337.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="334" y="372" width="3" height="15" fill="rgb(236,227,16)"/><text x="337.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.31%)</title><rect x="334" y="388" width="3" height="15" fill="rgb(244,130,16)"/><text x="337.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:123) (1 samples, 0.31%)</title><rect x="334" y="404" width="3" height="15" fill="rgb(252,110,8)"/><text x="337.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.93%)</title><rect x="330" y="324" width="11" height="15" fill="rgb(219,173,50)"/><text x="333.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.62%)</title><rect x="334" y="340" width="7" height="15" fill="rgb(242,30,25)"/><text x="337.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.31%)</title><rect x="337" y="356" width="4" height="15" fill="rgb(210,61,49)"/><text x="340.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.31%)</title><rect x="337" y="372" width="4" height="15" fill="rgb(225,0,24)"/><text x="340.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.31%)</title><rect x="337" y="388" width="4" height="15" fill="rgb(248,37,28)"/><text x="340.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:289) (1 samples, 0.31%)</title><rect x="337" y="404" width="4" height="15" fill="rgb(238,91,49)"/><text x="340.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 1.85%)</title><rect x="323" y="292" width="22" height="15" fill="rgb(241,152,30)"/><text x="326.00" y="302.50">p..</text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 1.23%)</title><rect x="330" y="308" width="15" height="15" fill="rgb(242,163,51)"/><text x="333.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.31%)</title><rect x="341" y="324" width="4" height="15" fill="rgb(236,220,23)"/><text x="344.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="341" y="340" width="4" height="15" fill="rgb(237,178,46)"/><text x="344.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="341" y="356" width="4" height="15" fill="rgb(208,108,6)"/><text x="344.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="341" y="372" width="4" height="15" fill="rgb(219,204,51)"/><text x="344.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.31%)</title><rect x="345" y="356" width="3" height="15" fill="rgb(230,3,16)"/><text x="348.00" y="366.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.31%)</title><rect x="345" y="372" width="3" height="15" fill="rgb(232,36,42)"/><text x="348.00" y="382.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.31%)</title><rect x="345" y="388" width="3" height="15" fill="rgb(250,150,17)"/><text x="348.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.62%)</title><rect x="345" y="324" width="7" height="15" fill="rgb(251,83,19)"/><text x="348.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.62%)</title><rect x="345" y="340" width="7" height="15" fill="rgb(226,142,9)"/><text x="348.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1721) (1 samples, 0.31%)</title><rect x="348" y="356" width="4" height="15" fill="rgb(222,103,1)"/><text x="351.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.31%)</title><rect x="352" y="372" width="3" height="15" fill="rgb(226,85,1)"/><text x="355.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.31%)</title><rect x="352" y="388" width="3" height="15" fill="rgb(237,20,41)"/><text x="355.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.62%)</title><rect x="352" y="356" width="7" height="15" fill="rgb(252,18,42)"/><text x="355.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="355" y="372" width="4" height="15" fill="rgb(214,83,53)"/><text x="358.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.31%)</title><rect x="355" y="388" width="4" height="15" fill="rgb(239,201,8)"/><text x="358.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.31%)</title><rect x="355" y="404" width="4" height="15" fill="rgb(250,179,27)"/><text x="358.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.31%)</title><rect x="355" y="420" width="4" height="15" fill="rgb(240,198,23)"/><text x="358.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (43 samples, 13.27%)</title><rect x="206" y="276" width="157" height="15" fill="rgb(210,183,4)"/><text x="209.00" y="286.50">_accumulate_predicti..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (5 samples, 1.54%)</title><rect x="345" y="292" width="18" height="15" fill="rgb(230,39,25)"/><text x="348.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.54%)</title><rect x="345" y="308" width="18" height="15" fill="rgb(230,210,33)"/><text x="348.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.93%)</title><rect x="352" y="324" width="11" height="15" fill="rgb(227,227,42)"/><text x="355.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.93%)</title><rect x="352" y="340" width="11" height="15" fill="rgb(235,96,8)"/><text x="355.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.31%)</title><rect x="359" y="356" width="4" height="15" fill="rgb(213,14,4)"/><text x="362.00" y="366.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1374) (1 samples, 0.31%)</title><rect x="359" y="372" width="4" height="15" fill="rgb(212,214,17)"/><text x="362.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.31%)</title><rect x="363" y="276" width="3" height="15" fill="rgb(246,72,37)"/><text x="366.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="363" y="292" width="3" height="15" fill="rgb(254,227,18)"/><text x="366.00" y="302.50"></text></g><g><title>0x7fa3eed2a730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="363" y="308" width="3" height="15" fill="rgb(207,52,2)"/><text x="366.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.31%)</title><rect x="366" y="276" width="4" height="15" fill="rgb(205,68,15)"/><text x="369.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="370" y="308" width="4" height="15" fill="rgb(214,69,47)"/><text x="373.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.31%)</title><rect x="370" y="324" width="4" height="15" fill="rgb(253,217,19)"/><text x="373.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="374" y="308" width="3" height="15" fill="rgb(252,46,17)"/><text x="377.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.31%)</title><rect x="374" y="324" width="3" height="15" fill="rgb(215,5,53)"/><text x="377.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.31%)</title><rect x="377" y="340" width="4" height="15" fill="rgb(217,19,4)"/><text x="380.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.31%)</title><rect x="377" y="356" width="4" height="15" fill="rgb(227,135,1)"/><text x="380.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:548) (1 samples, 0.31%)</title><rect x="377" y="372" width="4" height="15" fill="rgb(243,217,7)"/><text x="380.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="377" y="388" width="4" height="15" fill="rgb(237,150,6)"/><text x="380.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.23%)</title><rect x="370" y="292" width="15" height="15" fill="rgb(205,50,27)"/><text x="373.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.62%)</title><rect x="377" y="308" width="8" height="15" fill="rgb(247,33,37)"/><text x="380.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.62%)</title><rect x="377" y="324" width="8" height="15" fill="rgb(236,146,40)"/><text x="380.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:733) (1 samples, 0.31%)</title><rect x="381" y="340" width="4" height="15" fill="rgb(253,1,31)"/><text x="384.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (51 samples, 15.74%)</title><rect x="203" y="260" width="185" height="15" fill="rgb(228,51,46)"/><text x="206.00" y="270.50">&lt;listcomp&gt; (joblib/paral..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 1.54%)</title><rect x="370" y="276" width="18" height="15" fill="rgb(231,136,47)"/><text x="373.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.31%)</title><rect x="385" y="292" width="3" height="15" fill="rgb(225,118,19)"/><text x="388.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.31%)</title><rect x="385" y="308" width="3" height="15" fill="rgb(250,210,10)"/><text x="388.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (59 samples, 18.21%)</title><rect x="188" y="212" width="215" height="15" fill="rgb(223,18,14)"/><text x="191.00" y="222.50">apply_async (joblib/_paralle..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (58 samples, 17.90%)</title><rect x="192" y="228" width="211" height="15" fill="rgb(207,228,10)"/><text x="195.00" y="238.50">__init__ (joblib/_parallel_..</text></g><g><title>__call__ (joblib/parallel.py:256) (55 samples, 16.98%)</title><rect x="203" y="244" width="200" height="15" fill="rgb(254,149,27)"/><text x="206.00" y="254.50">__call__ (joblib/parallel...</text></g><g><title>__exit__ (joblib/parallel.py:215) (4 samples, 1.23%)</title><rect x="388" y="260" width="15" height="15" fill="rgb(224,177,37)"/><text x="391.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.62%)</title><rect x="396" y="276" width="7" height="15" fill="rgb(223,97,15)"/><text x="399.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.62%)</title><rect x="403" y="228" width="7" height="15" fill="rgb(213,43,19)"/><text x="406.00" y="238.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.31%)</title><rect x="406" y="244" width="4" height="15" fill="rgb(220,17,31)"/><text x="409.00" y="254.50"></text></g><g><title>0x7ffc275ccaf9 ([vdso]) (1 samples, 0.31%)</title><rect x="406" y="260" width="4" height="15" fill="rgb(230,76,50)"/><text x="409.00" y="270.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (62 samples, 19.14%)</title><rect x="188" y="196" width="226" height="15" fill="rgb(244,33,5)"/><text x="191.00" y="206.50">_dispatch (joblib/parallel.py..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (3 samples, 0.93%)</title><rect x="403" y="212" width="11" height="15" fill="rgb(214,186,45)"/><text x="406.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.31%)</title><rect x="410" y="228" width="4" height="15" fill="rgb(251,168,2)"/><text x="413.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (105 samples, 32.41%)</title><rect x="39" y="164" width="382" height="15" fill="rgb(207,112,22)"/><text x="42.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (65 samples, 20.06%)</title><rect x="184" y="180" width="237" height="15" fill="rgb(246,106,24)"/><text x="187.00" y="190.50">dispatch_one_batch (joblib/para..</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.62%)</title><rect x="414" y="196" width="7" height="15" fill="rgb(237,13,24)"/><text x="417.00" y="206.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:18) (111 samples, 34.26%)</title><rect x="20" y="100" width="405" height="15" fill="rgb(225,229,37)"/><text x="23.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (111 samples, 34.26%)</title><rect x="20" y="116" width="405" height="15" fill="rgb(223,194,29)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (111 samples, 34.26%)</title><rect x="20" y="132" width="405" height="15" fill="rgb(254,171,7)"/><text x="23.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (108 samples, 33.33%)</title><rect x="31" y="148" width="394" height="15" fill="rgb(246,129,24)"/><text x="34.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.31%)</title><rect x="421" y="164" width="4" height="15" fill="rgb(247,181,10)"/><text x="424.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.31%)</title><rect x="421" y="180" width="4" height="15" fill="rgb(206,7,22)"/><text x="424.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:656) (1 samples, 0.31%)</title><rect x="425" y="148" width="3" height="15" fill="rgb(231,42,24)"/><text x="428.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.31%)</title><rect x="425" y="164" width="3" height="15" fill="rgb(240,45,23)"/><text x="428.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.31%)</title><rect x="425" y="180" width="3" height="15" fill="rgb(207,209,32)"/><text x="428.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.31%)</title><rect x="425" y="196" width="3" height="15" fill="rgb(239,228,27)"/><text x="428.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.31%)</title><rect x="425" y="212" width="3" height="15" fill="rgb(226,93,49)"/><text x="428.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.31%)</title><rect x="428" y="148" width="4" height="15" fill="rgb(245,207,6)"/><text x="431.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:185) (1 samples, 0.31%)</title><rect x="428" y="164" width="4" height="15" fill="rgb(242,19,39)"/><text x="431.00" y="174.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.31%)</title><rect x="436" y="164" width="3" height="15" fill="rgb(253,70,13)"/><text x="439.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.31%)</title><rect x="436" y="180" width="3" height="15" fill="rgb(242,221,44)"/><text x="439.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.31%)</title><rect x="436" y="196" width="3" height="15" fill="rgb(245,110,14)"/><text x="439.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.31%)</title><rect x="436" y="212" width="3" height="15" fill="rgb(212,212,24)"/><text x="439.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.31%)</title><rect x="436" y="228" width="3" height="15" fill="rgb(244,138,43)"/><text x="439.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="436" y="244" width="3" height="15" fill="rgb(220,29,8)"/><text x="439.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.31%)</title><rect x="436" y="260" width="3" height="15" fill="rgb(215,182,8)"/><text x="439.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.31%)</title><rect x="436" y="276" width="3" height="15" fill="rgb(215,227,22)"/><text x="439.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (1 samples, 0.31%)</title><rect x="436" y="292" width="3" height="15" fill="rgb(215,65,12)"/><text x="439.00" y="302.50"></text></g><g><title>0x7fa3c8758d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="436" y="308" width="3" height="15" fill="rgb(216,165,24)"/><text x="439.00" y="318.50"></text></g><g><title>0x7fa3c8757f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="436" y="324" width="3" height="15" fill="rgb(250,23,40)"/><text x="439.00" y="334.50"></text></g><g><title>0x7fa3c8747d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="436" y="340" width="3" height="15" fill="rgb(250,119,9)"/><text x="439.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.31%)</title><rect x="436" y="356" width="3" height="15" fill="rgb(252,12,52)"/><text x="439.00" y="366.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.31%)</title><rect x="447" y="180" width="3" height="15" fill="rgb(215,222,34)"/><text x="450.00" y="190.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.62%)</title><rect x="457" y="196" width="8" height="15" fill="rgb(216,126,2)"/><text x="460.00" y="206.50"></text></g><g><title>__exit__ (threading.py:243) (1 samples, 0.31%)</title><rect x="476" y="212" width="3" height="15" fill="rgb(214,54,15)"/><text x="479.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (9 samples, 2.78%)</title><rect x="450" y="180" width="33" height="15" fill="rgb(250,89,8)"/><text x="453.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (5 samples, 1.54%)</title><rect x="465" y="196" width="18" height="15" fill="rgb(211,120,45)"/><text x="468.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.31%)</title><rect x="479" y="212" width="4" height="15" fill="rgb(239,94,5)"/><text x="482.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.31%)</title><rect x="479" y="228" width="4" height="15" fill="rgb(224,81,9)"/><text x="482.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:297) (1 samples, 0.31%)</title><rect x="498" y="212" width="3" height="15" fill="rgb(232,29,18)"/><text x="501.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.62%)</title><rect x="505" y="228" width="7" height="15" fill="rgb(212,57,40)"/><text x="508.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.31%)</title><rect x="512" y="228" width="4" height="15" fill="rgb(221,189,44)"/><text x="515.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (12 samples, 3.70%)</title><rect x="483" y="180" width="44" height="15" fill="rgb(234,35,52)"/><text x="486.00" y="190.50">disp..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (9 samples, 2.78%)</title><rect x="494" y="196" width="33" height="15" fill="rgb(248,56,19)"/><text x="497.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:308) (7 samples, 2.16%)</title><rect x="501" y="212" width="26" height="15" fill="rgb(207,85,54)"/><text x="504.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (3 samples, 0.93%)</title><rect x="516" y="228" width="11" height="15" fill="rgb(234,132,8)"/><text x="519.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.62%)</title><rect x="527" y="180" width="7" height="15" fill="rgb(213,94,31)"/><text x="530.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.31%)</title><rect x="534" y="180" width="4" height="15" fill="rgb(249,124,34)"/><text x="537.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.62%)</title><rect x="545" y="212" width="7" height="15" fill="rgb(248,18,49)"/><text x="548.00" y="222.50"></text></g><g><title>0x7fa3eed2ae7a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="549" y="228" width="3" height="15" fill="rgb(229,64,12)"/><text x="552.00" y="238.50"></text></g><g><title>0x7fa3eed256d0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="556" y="228" width="3" height="15" fill="rgb(217,212,22)"/><text x="559.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (7 samples, 2.16%)</title><rect x="538" y="196" width="25" height="15" fill="rgb(219,104,50)"/><text x="541.00" y="206.50">g..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.93%)</title><rect x="552" y="212" width="11" height="15" fill="rgb(232,189,31)"/><text x="555.00" y="222.50"></text></g><g><title>0x7fa3eed259a0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="559" y="228" width="4" height="15" fill="rgb(239,82,7)"/><text x="562.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.93%)</title><rect x="563" y="212" width="11" height="15" fill="rgb(252,146,24)"/><text x="566.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.31%)</title><rect x="570" y="228" width="4" height="15" fill="rgb(224,18,31)"/><text x="573.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.31%)</title><rect x="574" y="212" width="4" height="15" fill="rgb(243,96,53)"/><text x="577.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:119) (1 samples, 0.31%)</title><rect x="578" y="212" width="3" height="15" fill="rgb(227,148,41)"/><text x="581.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (2 samples, 0.62%)</title><rect x="581" y="212" width="8" height="15" fill="rgb(223,174,26)"/><text x="584.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.31%)</title><rect x="589" y="212" width="3" height="15" fill="rgb(240,0,4)"/><text x="592.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (18 samples, 5.56%)</title><rect x="538" y="180" width="65" height="15" fill="rgb(235,121,42)"/><text x="541.00" y="190.50">dispatc..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (11 samples, 3.40%)</title><rect x="563" y="196" width="40" height="15" fill="rgb(230,53,11)"/><text x="566.00" y="206.50">get..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (3 samples, 0.93%)</title><rect x="592" y="212" width="11" height="15" fill="rgb(251,93,35)"/><text x="595.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.62%)</title><rect x="603" y="180" width="7" height="15" fill="rgb(239,210,47)"/><text x="606.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.62%)</title><rect x="603" y="196" width="7" height="15" fill="rgb(210,187,2)"/><text x="606.00" y="206.50"></text></g><g><title>put (queue.py:121) (1 samples, 0.31%)</title><rect x="618" y="196" width="3" height="15" fill="rgb(254,216,6)"/><text x="621.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.31%)</title><rect x="621" y="196" width="4" height="15" fill="rgb(244,47,27)"/><text x="624.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.31%)</title><rect x="625" y="196" width="4" height="15" fill="rgb(239,53,7)"/><text x="628.00" y="206.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.31%)</title><rect x="629" y="196" width="3" height="15" fill="rgb(231,106,33)"/><text x="632.00" y="206.50"></text></g><g><title>_is_owned (threading.py:255) (1 samples, 0.31%)</title><rect x="643" y="228" width="4" height="15" fill="rgb(209,174,51)"/><text x="646.00" y="238.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.62%)</title><rect x="643" y="212" width="7" height="15" fill="rgb(206,73,10)"/><text x="646.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.31%)</title><rect x="647" y="228" width="3" height="15" fill="rgb(245,117,25)"/><text x="650.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.31%)</title><rect x="647" y="244" width="3" height="15" fill="rgb(223,107,46)"/><text x="650.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (13 samples, 4.01%)</title><rect x="610" y="180" width="48" height="15" fill="rgb(216,202,49)"/><text x="613.00" y="190.50">disp..</text></g><g><title>put (queue.py:151) (7 samples, 2.16%)</title><rect x="632" y="196" width="26" height="15" fill="rgb(211,216,37)"/><text x="635.00" y="206.50">p..</text></g><g><title>notify (threading.py:348) (2 samples, 0.62%)</title><rect x="650" y="212" width="8" height="15" fill="rgb(239,213,35)"/><text x="653.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.31%)</title><rect x="665" y="196" width="4" height="15" fill="rgb(229,180,44)"/><text x="668.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (4 samples, 1.23%)</title><rect x="658" y="180" width="14" height="15" fill="rgb(250,229,42)"/><text x="661.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.31%)</title><rect x="669" y="196" width="3" height="15" fill="rgb(224,171,48)"/><text x="672.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.31%)</title><rect x="669" y="212" width="3" height="15" fill="rgb(208,80,39)"/><text x="672.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.31%)</title><rect x="669" y="228" width="3" height="15" fill="rgb(207,185,42)"/><text x="672.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.31%)</title><rect x="672" y="180" width="4" height="15" fill="rgb(244,89,30)"/><text x="675.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.31%)</title><rect x="683" y="196" width="4" height="15" fill="rgb(240,20,37)"/><text x="686.00" y="206.50"></text></g><g><title>0x7fa3eed35124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="698" y="244" width="3" height="15" fill="rgb(227,205,4)"/><text x="701.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 1.23%)</title><rect x="701" y="244" width="15" height="15" fill="rgb(233,217,34)"/><text x="704.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.62%)</title><rect x="709" y="260" width="7" height="15" fill="rgb(212,225,38)"/><text x="712.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (3 samples, 0.93%)</title><rect x="723" y="260" width="11" height="15" fill="rgb(213,160,24)"/><text x="726.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.31%)</title><rect x="742" y="292" width="3" height="15" fill="rgb(246,114,9)"/><text x="745.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.62%)</title><rect x="749" y="308" width="7" height="15" fill="rgb(228,211,10)"/><text x="752.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.31%)</title><rect x="752" y="324" width="4" height="15" fill="rgb(248,55,29)"/><text x="755.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.31%)</title><rect x="756" y="308" width="4" height="15" fill="rgb(217,124,25)"/><text x="759.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.31%)</title><rect x="760" y="324" width="3" height="15" fill="rgb(223,103,33)"/><text x="763.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.93%)</title><rect x="785" y="340" width="11" height="15" fill="rgb(226,227,16)"/><text x="788.00" y="350.50"></text></g><g><title>0x7fa3eedf2130 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(246,176,26)"/><text x="796.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 3.09%)</title><rect x="763" y="324" width="37" height="15" fill="rgb(247,133,49)"/><text x="766.00" y="334.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="796" y="340" width="4" height="15" fill="rgb(213,80,50)"/><text x="799.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 4.32%)</title><rect x="760" y="308" width="51" height="15" fill="rgb(221,106,35)"/><text x="763.00" y="318.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.93%)</title><rect x="800" y="324" width="11" height="15" fill="rgb(207,77,1)"/><text x="803.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="803" y="340" width="8" height="15" fill="rgb(243,1,38)"/><text x="806.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (19 samples, 5.86%)</title><rect x="745" y="292" width="69" height="15" fill="rgb(216,17,42)"/><text x="748.00" y="302.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.31%)</title><rect x="811" y="308" width="3" height="15" fill="rgb(251,55,41)"/><text x="814.00" y="318.50"></text></g><g><title>0x7fa3c8757f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="818" y="324" width="4" height="15" fill="rgb(218,229,50)"/><text x="821.00" y="334.50"></text></g><g><title>0x7fa3c8747d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="818" y="340" width="4" height="15" fill="rgb(252,101,21)"/><text x="821.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.31%)</title><rect x="818" y="356" width="4" height="15" fill="rgb(246,5,32)"/><text x="821.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.31%)</title><rect x="818" y="372" width="4" height="15" fill="rgb(228,114,1)"/><text x="821.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.31%)</title><rect x="818" y="388" width="4" height="15" fill="rgb(240,139,32)"/><text x="821.00" y="398.50"></text></g><g><title>0x7fa3c8766225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="822" y="356" width="3" height="15" fill="rgb(232,162,39)"/><text x="825.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.31%)</title><rect x="822" y="372" width="3" height="15" fill="rgb(245,52,13)"/><text x="825.00" y="382.50"></text></g><g><title>0x7fa3c87662df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="825" y="356" width="8" height="15" fill="rgb(214,47,46)"/><text x="828.00" y="366.50"></text></g><g><title>0x7fa3c874ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="825" y="372" width="8" height="15" fill="rgb(240,198,43)"/><text x="828.00" y="382.50"></text></g><g><title>0x7fa3c874a666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="825" y="388" width="8" height="15" fill="rgb(222,180,2)"/><text x="828.00" y="398.50"></text></g><g><title>0x7fa3c87402fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="825" y="404" width="8" height="15" fill="rgb(252,25,9)"/><text x="828.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.31%)</title><rect x="829" y="420" width="4" height="15" fill="rgb(243,151,1)"/><text x="832.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.31%)</title><rect x="829" y="436" width="4" height="15" fill="rgb(237,161,7)"/><text x="832.00" y="446.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.31%)</title><rect x="840" y="388" width="4" height="15" fill="rgb(233,120,33)"/><text x="843.00" y="398.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:138) (1 samples, 0.31%)</title><rect x="844" y="388" width="3" height="15" fill="rgb(248,40,37)"/><text x="847.00" y="398.50"></text></g><g><title>0x7fa3c8766592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.54%)</title><rect x="833" y="356" width="18" height="15" fill="rgb(209,49,7)"/><text x="836.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (5 samples, 1.54%)</title><rect x="833" y="372" width="18" height="15" fill="rgb(226,95,48)"/><text x="836.00" y="382.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="847" y="388" width="4" height="15" fill="rgb(221,93,49)"/><text x="850.00" y="398.50"></text></g><g><title>0x7fa3eedf2df0 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="847" y="404" width="4" height="15" fill="rgb(227,119,36)"/><text x="850.00" y="414.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.31%)</title><rect x="851" y="436" width="3" height="15" fill="rgb(244,164,30)"/><text x="854.00" y="446.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:206) (1 samples, 0.31%)</title><rect x="851" y="452" width="3" height="15" fill="rgb(224,13,43)"/><text x="854.00" y="462.50"></text></g><g><title>0x7fa3c8767405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.40%)</title><rect x="822" y="340" width="40" height="15" fill="rgb(233,178,50)"/><text x="825.00" y="350.50">0x7..</text></g><g><title>0x7fa3c8766c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="851" y="356" width="11" height="15" fill="rgb(224,65,54)"/><text x="854.00" y="366.50"></text></g><g><title>0x7fa3c873e529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="851" y="372" width="11" height="15" fill="rgb(211,172,11)"/><text x="854.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.93%)</title><rect x="851" y="388" width="11" height="15" fill="rgb(248,26,6)"/><text x="854.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 0.93%)</title><rect x="851" y="404" width="11" height="15" fill="rgb(205,42,50)"/><text x="854.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (3 samples, 0.93%)</title><rect x="851" y="420" width="11" height="15" fill="rgb(209,144,23)"/><text x="854.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (2 samples, 0.62%)</title><rect x="854" y="436" width="8" height="15" fill="rgb(205,132,9)"/><text x="857.00" y="446.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.31%)</title><rect x="858" y="452" width="4" height="15" fill="rgb(244,129,17)"/><text x="861.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="858" y="468" width="4" height="15" fill="rgb(245,150,45)"/><text x="861.00" y="478.50"></text></g><g><title>0x7fa3c873b4c7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="862" y="372" width="3" height="15" fill="rgb(242,87,53)"/><text x="865.00" y="382.50"></text></g><g><title>0x7fa3c873b4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="865" y="372" width="4" height="15" fill="rgb(250,13,34)"/><text x="868.00" y="382.50"></text></g><g><title>0x7fa3c8757fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.32%)</title><rect x="822" y="324" width="51" height="15" fill="rgb(229,1,52)"/><text x="825.00" y="334.50">0x7fa..</text></g><g><title>0x7fa3c8767540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="862" y="340" width="11" height="15" fill="rgb(253,13,31)"/><text x="865.00" y="350.50"></text></g><g><title>0x7fa3c873c2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.93%)</title><rect x="862" y="356" width="11" height="15" fill="rgb(240,159,38)"/><text x="865.00" y="366.50"></text></g><g><title>0x7fa3c873b530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="869" y="372" width="4" height="15" fill="rgb(232,91,44)"/><text x="872.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.31%)</title><rect x="869" y="388" width="4" height="15" fill="rgb(233,38,11)"/><text x="872.00" y="398.50"></text></g><g><title>array_take (methods.c:131) (1 samples, 0.31%)</title><rect x="873" y="340" width="3" height="15" fill="rgb(231,113,39)"/><text x="876.00" y="350.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 1.23%)</title><rect x="876" y="340" width="15" height="15" fill="rgb(245,160,22)"/><text x="879.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.62%)</title><rect x="884" y="356" width="7" height="15" fill="rgb(213,117,3)"/><text x="887.00" y="366.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.31%)</title><rect x="891" y="356" width="4" height="15" fill="rgb(232,115,54)"/><text x="894.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3042) (1 samples, 0.31%)</title><rect x="891" y="372" width="4" height="15" fill="rgb(228,143,43)"/><text x="894.00" y="382.50"></text></g><g><title>check_and_adjust_axis (common.h:180) (1 samples, 0.31%)</title><rect x="891" y="388" width="4" height="15" fill="rgb(210,46,23)"/><text x="894.00" y="398.50"></text></g><g><title>check_and_adjust_axis_msg (common.h:143) (1 samples, 0.31%)</title><rect x="891" y="404" width="4" height="15" fill="rgb(229,189,34)"/><text x="894.00" y="414.50"></text></g><g><title>0x7fa3c875805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.16%)</title><rect x="873" y="324" width="25" height="15" fill="rgb(207,126,50)"/><text x="876.00" y="334.50">0..</text></g><g><title>array_take (methods.c:145) (2 samples, 0.62%)</title><rect x="891" y="340" width="7" height="15" fill="rgb(221,15,10)"/><text x="894.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:72) (1 samples, 0.31%)</title><rect x="895" y="356" width="3" height="15" fill="rgb(229,143,48)"/><text x="898.00" y="366.50"></text></g><g><title>0x7fa3c8758163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="898" y="324" width="4" height="15" fill="rgb(207,192,38)"/><text x="901.00" y="334.50"></text></g><g><title>0x7fa3c875817a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="902" y="324" width="3" height="15" fill="rgb(235,61,45)"/><text x="905.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (27 samples, 8.33%)</title><rect x="814" y="292" width="99" height="15" fill="rgb(238,124,19)"/><text x="817.00" y="302.50">predict_pro..</text></g><g><title>0x7fa3c8758d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 8.02%)</title><rect x="818" y="308" width="95" height="15" fill="rgb(237,87,25)"/><text x="821.00" y="318.50">0x7fa3c8758..</text></g><g><title>0x7fa3c8758328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="905" y="324" width="8" height="15" fill="rgb(205,72,32)"/><text x="908.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.31%)</title><rect x="909" y="340" width="4" height="15" fill="rgb(223,187,42)"/><text x="912.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.31%)</title><rect x="909" y="356" width="4" height="15" fill="rgb(251,18,42)"/><text x="912.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.31%)</title><rect x="909" y="372" width="4" height="15" fill="rgb(221,48,24)"/><text x="912.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.31%)</title><rect x="909" y="388" width="4" height="15" fill="rgb(235,68,7)"/><text x="912.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.31%)</title><rect x="909" y="404" width="4" height="15" fill="rgb(231,161,1)"/><text x="912.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.31%)</title><rect x="913" y="292" width="3" height="15" fill="rgb(222,88,10)"/><text x="916.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.31%)</title><rect x="916" y="308" width="4" height="15" fill="rgb(224,144,3)"/><text x="919.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.31%)</title><rect x="916" y="324" width="4" height="15" fill="rgb(241,22,50)"/><text x="919.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.62%)</title><rect x="916" y="292" width="8" height="15" fill="rgb(232,120,31)"/><text x="919.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.31%)</title><rect x="920" y="308" width="4" height="15" fill="rgb(212,15,45)"/><text x="923.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.31%)</title><rect x="920" y="324" width="4" height="15" fill="rgb(214,44,17)"/><text x="923.00" y="334.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.31%)</title><rect x="924" y="308" width="3" height="15" fill="rgb(210,4,26)"/><text x="927.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.31%)</title><rect x="931" y="436" width="4" height="15" fill="rgb(250,125,8)"/><text x="934.00" y="446.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="931" y="452" width="4" height="15" fill="rgb(242,120,52)"/><text x="934.00" y="462.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.93%)</title><rect x="931" y="356" width="11" height="15" fill="rgb(230,33,6)"/><text x="934.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.93%)</title><rect x="931" y="372" width="11" height="15" fill="rgb(221,72,20)"/><text x="934.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.93%)</title><rect x="931" y="388" width="11" height="15" fill="rgb(240,40,35)"/><text x="934.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.93%)</title><rect x="931" y="404" width="11" height="15" fill="rgb(232,105,52)"/><text x="934.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.93%)</title><rect x="931" y="420" width="11" height="15" fill="rgb(238,205,2)"/><text x="934.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.62%)</title><rect x="935" y="436" width="7" height="15" fill="rgb(236,157,29)"/><text x="938.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.31%)</title><rect x="942" y="372" width="3" height="15" fill="rgb(224,213,2)"/><text x="945.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.31%)</title><rect x="945" y="436" width="4" height="15" fill="rgb(220,28,39)"/><text x="948.00" y="446.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.31%)</title><rect x="945" y="452" width="4" height="15" fill="rgb(245,92,23)"/><text x="948.00" y="462.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2191) (1 samples, 0.31%)</title><rect x="949" y="436" width="4" height="15" fill="rgb(240,168,46)"/><text x="952.00" y="446.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (3 samples, 0.93%)</title><rect x="945" y="388" width="11" height="15" fill="rgb(247,196,16)"/><text x="948.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (3 samples, 0.93%)</title><rect x="945" y="404" width="11" height="15" fill="rgb(231,159,15)"/><text x="948.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (3 samples, 0.93%)</title><rect x="945" y="420" width="11" height="15" fill="rgb(244,3,6)"/><text x="948.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.31%)</title><rect x="953" y="436" width="3" height="15" fill="rgb(246,175,46)"/><text x="956.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.31%)</title><rect x="953" y="452" width="3" height="15" fill="rgb(226,46,20)"/><text x="956.00" y="462.50"></text></g><g><title>allocate_reduce_result (reduction.c:41) (1 samples, 0.31%)</title><rect x="956" y="436" width="4" height="15" fill="rgb(242,108,29)"/><text x="959.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.62%)</title><rect x="956" y="404" width="8" height="15" fill="rgb(237,91,10)"/><text x="959.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.62%)</title><rect x="956" y="420" width="8" height="15" fill="rgb(254,2,50)"/><text x="959.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.31%)</title><rect x="960" y="436" width="4" height="15" fill="rgb(233,190,0)"/><text x="963.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="960" y="452" width="4" height="15" fill="rgb(250,5,37)"/><text x="963.00" y="462.50"></text></g><g><title>0x7fa3eed34d50 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="960" y="468" width="4" height="15" fill="rgb(232,42,30)"/><text x="963.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.31%)</title><rect x="964" y="420" width="3" height="15" fill="rgb(227,197,28)"/><text x="967.00" y="430.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:775) (1 samples, 0.31%)</title><rect x="964" y="436" width="3" height="15" fill="rgb(238,65,17)"/><text x="967.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.31%)</title><rect x="967" y="420" width="4" height="15" fill="rgb(242,213,48)"/><text x="970.00" y="430.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2088) (1 samples, 0.31%)</title><rect x="967" y="436" width="4" height="15" fill="rgb(235,226,45)"/><text x="970.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.93%)</title><rect x="964" y="404" width="11" height="15" fill="rgb(251,43,32)"/><text x="967.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.31%)</title><rect x="971" y="420" width="4" height="15" fill="rgb(211,141,2)"/><text x="974.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.31%)</title><rect x="971" y="436" width="4" height="15" fill="rgb(208,41,41)"/><text x="974.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.31%)</title><rect x="975" y="404" width="3" height="15" fill="rgb(231,73,30)"/><text x="978.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.31%)</title><rect x="975" y="420" width="3" height="15" fill="rgb(254,192,7)"/><text x="978.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (16 samples, 4.94%)</title><rect x="924" y="292" width="58" height="15" fill="rgb(211,141,50)"/><text x="927.00" y="302.50">predic..</text></g><g><title>array_sum (methods.c:2215) (15 samples, 4.63%)</title><rect x="927" y="308" width="55" height="15" fill="rgb(225,81,17)"/><text x="930.00" y="318.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 4.63%)</title><rect x="927" y="324" width="55" height="15" fill="rgb(233,189,7)"/><text x="930.00" y="334.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.32%)</title><rect x="931" y="340" width="51" height="15" fill="rgb(237,120,34)"/><text x="934.00" y="350.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 3.40%)</title><rect x="942" y="356" width="40" height="15" fill="rgb(249,216,37)"/><text x="945.00" y="366.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 3.09%)</title><rect x="945" y="372" width="37" height="15" fill="rgb(250,34,3)"/><text x="948.00" y="382.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 2.16%)</title><rect x="956" y="388" width="26" height="15" fill="rgb(208,118,37)"/><text x="959.00" y="398.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.31%)</title><rect x="978" y="404" width="4" height="15" fill="rgb(230,49,9)"/><text x="981.00" y="414.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.31%)</title><rect x="978" y="420" width="4" height="15" fill="rgb(218,83,25)"/><text x="981.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:807) (1 samples, 0.31%)</title><rect x="978" y="436" width="4" height="15" fill="rgb(244,207,15)"/><text x="981.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.31%)</title><rect x="982" y="308" width="4" height="15" fill="rgb(205,10,30)"/><text x="985.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.31%)</title><rect x="982" y="324" width="4" height="15" fill="rgb(250,23,40)"/><text x="985.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c:2065) (1 samples, 0.31%)</title><rect x="986" y="308" width="3" height="15" fill="rgb(228,151,36)"/><text x="989.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="986" y="324" width="3" height="15" fill="rgb(219,11,33)"/><text x="989.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:946) (1 samples, 0.31%)</title><rect x="986" y="340" width="3" height="15" fill="rgb(253,212,1)"/><text x="989.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c:1404) (1 samples, 0.31%)</title><rect x="989" y="308" width="4" height="15" fill="rgb(250,229,10)"/><text x="992.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (2 samples, 0.62%)</title><rect x="996" y="324" width="8" height="15" fill="rgb(239,149,49)"/><text x="999.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.31%)</title><rect x="1004" y="340" width="3" height="15" fill="rgb(210,159,47)"/><text x="1007.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.31%)</title><rect x="1007" y="340" width="4" height="15" fill="rgb(240,61,40)"/><text x="1010.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.31%)</title><rect x="1007" y="356" width="4" height="15" fill="rgb(251,54,15)"/><text x="1010.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.31%)</title><rect x="1011" y="388" width="4" height="15" fill="rgb(210,108,35)"/><text x="1014.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.31%)</title><rect x="1011" y="404" width="4" height="15" fill="rgb(218,144,10)"/><text x="1014.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.31%)</title><rect x="1011" y="420" width="4" height="15" fill="rgb(214,144,8)"/><text x="1014.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.23%)</title><rect x="1004" y="324" width="14" height="15" fill="rgb(253,178,52)"/><text x="1007.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.62%)</title><rect x="1011" y="340" width="7" height="15" fill="rgb(241,42,10)"/><text x="1014.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (2 samples, 0.62%)</title><rect x="1011" y="356" width="7" height="15" fill="rgb(222,211,37)"/><text x="1014.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.62%)</title><rect x="1011" y="372" width="7" height="15" fill="rgb(223,129,31)"/><text x="1014.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.31%)</title><rect x="1015" y="388" width="3" height="15" fill="rgb(210,129,44)"/><text x="1018.00" y="398.50"></text></g><g><title>_array_fill_strides (ctors.c:4085) (1 samples, 0.31%)</title><rect x="1015" y="404" width="3" height="15" fill="rgb(211,189,19)"/><text x="1018.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (11 samples, 3.40%)</title><rect x="982" y="292" width="40" height="15" fill="rgb(221,45,43)"/><text x="985.00" y="302.50">pre..</text></g><g><title>array_richcompare (arrayobject.c:1445) (8 samples, 2.47%)</title><rect x="993" y="308" width="29" height="15" fill="rgb(239,179,2)"/><text x="996.00" y="318.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.31%)</title><rect x="1018" y="324" width="4" height="15" fill="rgb(242,69,3)"/><text x="1021.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="1018" y="340" width="4" height="15" fill="rgb(231,20,32)"/><text x="1021.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="1018" y="356" width="4" height="15" fill="rgb(223,162,30)"/><text x="1021.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="1018" y="372" width="4" height="15" fill="rgb(242,118,23)"/><text x="1021.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1515) (1 samples, 0.31%)</title><rect x="1022" y="356" width="4" height="15" fill="rgb(239,78,29)"/><text x="1025.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="1026" y="372" width="3" height="15" fill="rgb(244,202,21)"/><text x="1029.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1026" y="388" width="3" height="15" fill="rgb(206,88,50)"/><text x="1029.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.62%)</title><rect x="1026" y="356" width="7" height="15" fill="rgb(242,173,16)"/><text x="1029.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.31%)</title><rect x="1029" y="372" width="4" height="15" fill="rgb(233,105,39)"/><text x="1032.00" y="382.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.31%)</title><rect x="1029" y="388" width="4" height="15" fill="rgb(237,191,51)"/><text x="1032.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.23%)</title><rect x="1022" y="308" width="15" height="15" fill="rgb(219,218,0)"/><text x="1025.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.23%)</title><rect x="1022" y="324" width="15" height="15" fill="rgb(228,135,37)"/><text x="1025.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.23%)</title><rect x="1022" y="340" width="15" height="15" fill="rgb(226,181,38)"/><text x="1025.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.31%)</title><rect x="1033" y="356" width="4" height="15" fill="rgb(237,28,3)"/><text x="1036.00" y="366.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.31%)</title><rect x="1033" y="372" width="4" height="15" fill="rgb(230,25,5)"/><text x="1036.00" y="382.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.31%)</title><rect x="1033" y="388" width="4" height="15" fill="rgb(210,185,52)"/><text x="1036.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (82 samples, 25.31%)</title><rect x="742" y="276" width="298" height="15" fill="rgb(232,137,33)"/><text x="745.00" y="286.50">_accumulate_prediction (sklearn/ensemble..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (5 samples, 1.54%)</title><rect x="1022" y="292" width="18" height="15" fill="rgb(238,25,54)"/><text x="1025.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.31%)</title><rect x="1037" y="308" width="3" height="15" fill="rgb(245,163,24)"/><text x="1040.00" y="318.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.31%)</title><rect x="1037" y="324" width="3" height="15" fill="rgb(206,204,36)"/><text x="1040.00" y="334.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.31%)</title><rect x="1037" y="340" width="3" height="15" fill="rgb(219,200,29)"/><text x="1040.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="1040" y="292" width="4" height="15" fill="rgb(254,193,8)"/><text x="1043.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="1040" y="308" width="4" height="15" fill="rgb(224,153,16)"/><text x="1043.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.31%)</title><rect x="1040" y="324" width="4" height="15" fill="rgb(221,172,28)"/><text x="1043.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.31%)</title><rect x="1040" y="340" width="4" height="15" fill="rgb(234,88,21)"/><text x="1043.00" y="350.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.31%)</title><rect x="1044" y="340" width="3" height="15" fill="rgb(230,40,9)"/><text x="1047.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.62%)</title><rect x="1044" y="308" width="7" height="15" fill="rgb(221,160,27)"/><text x="1047.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (2 samples, 0.62%)</title><rect x="1044" y="324" width="7" height="15" fill="rgb(205,191,42)"/><text x="1047.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.31%)</title><rect x="1047" y="340" width="4" height="15" fill="rgb(246,91,9)"/><text x="1050.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.31%)</title><rect x="1047" y="356" width="4" height="15" fill="rgb(241,58,9)"/><text x="1050.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.31%)</title><rect x="1047" y="372" width="4" height="15" fill="rgb(216,59,7)"/><text x="1050.00" y="382.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.31%)</title><rect x="1047" y="388" width="4" height="15" fill="rgb(237,36,8)"/><text x="1050.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (4 samples, 1.23%)</title><rect x="1040" y="276" width="15" height="15" fill="rgb(239,101,29)"/><text x="1043.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.93%)</title><rect x="1044" y="292" width="11" height="15" fill="rgb(243,222,26)"/><text x="1047.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.31%)</title><rect x="1051" y="308" width="4" height="15" fill="rgb(245,4,29)"/><text x="1054.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.31%)</title><rect x="1051" y="324" width="4" height="15" fill="rgb(228,0,32)"/><text x="1054.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (89 samples, 27.47%)</title><rect x="734" y="260" width="324" height="15" fill="rgb(232,9,18)"/><text x="737.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.31%)</title><rect x="1055" y="276" width="3" height="15" fill="rgb(228,23,12)"/><text x="1058.00" y="286.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.62%)</title><rect x="1058" y="276" width="8" height="15" fill="rgb(228,15,2)"/><text x="1061.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (104 samples, 32.10%)</title><rect x="691" y="212" width="378" height="15" fill="rgb(231,163,7)"/><text x="694.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (103 samples, 31.79%)</title><rect x="694" y="228" width="375" height="15" fill="rgb(239,9,10)"/><text x="697.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (97 samples, 29.94%)</title><rect x="716" y="244" width="353" height="15" fill="rgb(206,165,49)"/><text x="719.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.93%)</title><rect x="1058" y="260" width="11" height="15" fill="rgb(208,132,2)"/><text x="1061.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.31%)</title><rect x="1066" y="276" width="3" height="15" fill="rgb(230,138,10)"/><text x="1069.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (4 samples, 1.23%)</title><rect x="1077" y="228" width="14" height="15" fill="rgb(240,165,48)"/><text x="1080.00" y="238.50"></text></g><g><title>time_time (python3.7) (3 samples, 0.93%)</title><rect x="1080" y="244" width="11" height="15" fill="rgb(205,21,23)"/><text x="1083.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (2 samples, 0.62%)</title><rect x="1084" y="260" width="7" height="15" fill="rgb(211,173,24)"/><text x="1087.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:335) (1 samples, 0.31%)</title><rect x="1091" y="228" width="4" height="15" fill="rgb(208,170,39)"/><text x="1094.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:336) (1 samples, 0.31%)</title><rect x="1095" y="228" width="3" height="15" fill="rgb(227,147,9)"/><text x="1098.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py:92) (1 samples, 0.31%)</title><rect x="1095" y="244" width="3" height="15" fill="rgb(230,1,10)"/><text x="1098.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.31%)</title><rect x="1098" y="228" width="4" height="15" fill="rgb(227,31,9)"/><text x="1101.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.31%)</title><rect x="1102" y="228" width="4" height="15" fill="rgb(234,130,49)"/><text x="1105.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (184 samples, 56.79%)</title><rect x="439" y="164" width="670" height="15" fill="rgb(235,217,13)"/><text x="442.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (119 samples, 36.73%)</title><rect x="676" y="180" width="433" height="15" fill="rgb(218,140,26)"/><text x="679.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (116 samples, 35.80%)</title><rect x="687" y="196" width="422" height="15" fill="rgb(238,136,46)"/><text x="690.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (11 samples, 3.40%)</title><rect x="1069" y="212" width="40" height="15" fill="rgb(219,171,0)"/><text x="1072.00" y="222.50">app..</text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.31%)</title><rect x="1106" y="228" width="3" height="15" fill="rgb(238,82,13)"/><text x="1109.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.31%)</title><rect x="1106" y="244" width="3" height="15" fill="rgb(211,167,8)"/><text x="1109.00" y="254.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1106" y="260" width="3" height="15" fill="rgb(210,75,45)"/><text x="1109.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:38) (301 samples, 92.90%)</title><rect x="17" y="52" width="1096" height="15" fill="rgb(253,29,19)"/><text x="20.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:37) (301 samples, 92.90%)</title><rect x="17" y="68" width="1096" height="15" fill="rgb(217,166,31)"/><text x="20.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29) (300 samples, 92.59%)</title><rect x="20" y="84" width="1093" height="15" fill="rgb(212,6,4)"/><text x="23.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:23) (189 samples, 58.33%)</title><rect x="425" y="100" width="688" height="15" fill="rgb(234,163,7)"/><text x="428.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (189 samples, 58.33%)</title><rect x="425" y="116" width="688" height="15" fill="rgb(234,33,37)"/><text x="428.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (189 samples, 58.33%)</title><rect x="425" y="132" width="688" height="15" fill="rgb(218,98,47)"/><text x="428.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (187 samples, 57.72%)</title><rect x="432" y="148" width="681" height="15" fill="rgb(215,1,47)"/><text x="435.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.31%)</title><rect x="1109" y="164" width="4" height="15" fill="rgb(235,18,4)"/><text x="1112.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.31%)</title><rect x="1109" y="180" width="4" height="15" fill="rgb(243,120,52)"/><text x="1112.00" y="190.50"></text></g><g><title>0x7fa3eed2a73f (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1109" y="196" width="4" height="15" fill="rgb(214,53,12)"/><text x="1112.00" y="206.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.62%)</title><rect x="1113" y="852" width="7" height="15" fill="rgb(225,137,24)"/><text x="1116.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.62%)</title><rect x="1113" y="868" width="7" height="15" fill="rgb(210,18,20)"/><text x="1116.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.62%)</title><rect x="1113" y="884" width="7" height="15" fill="rgb(250,41,33)"/><text x="1116.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.62%)</title><rect x="1113" y="900" width="7" height="15" fill="rgb(247,38,15)"/><text x="1116.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.62%)</title><rect x="1113" y="916" width="7" height="15" fill="rgb(229,95,4)"/><text x="1116.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.62%)</title><rect x="1113" y="932" width="7" height="15" fill="rgb(254,221,11)"/><text x="1116.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.62%)</title><rect x="1113" y="948" width="7" height="15" fill="rgb(221,63,17)"/><text x="1116.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.31%)</title><rect x="1117" y="964" width="3" height="15" fill="rgb(229,190,10)"/><text x="1120.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="1120" y="852" width="4" height="15" fill="rgb(244,213,45)"/><text x="1123.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="1120" y="868" width="4" height="15" fill="rgb(227,0,16)"/><text x="1123.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.31%)</title><rect x="1120" y="884" width="4" height="15" fill="rgb(230,63,38)"/><text x="1123.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.31%)</title><rect x="1120" y="900" width="4" height="15" fill="rgb(223,67,50)"/><text x="1123.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.31%)</title><rect x="1120" y="916" width="4" height="15" fill="rgb(233,149,50)"/><text x="1123.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.31%)</title><rect x="1120" y="932" width="4" height="15" fill="rgb(223,153,26)"/><text x="1123.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.23%)</title><rect x="1113" y="820" width="15" height="15" fill="rgb(210,177,43)"/><text x="1116.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.23%)</title><rect x="1113" y="836" width="15" height="15" fill="rgb(247,214,36)"/><text x="1116.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.31%)</title><rect x="1124" y="852" width="4" height="15" fill="rgb(214,72,30)"/><text x="1127.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="1124" y="868" width="4" height="15" fill="rgb(231,2,13)"/><text x="1127.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.31%)</title><rect x="1124" y="884" width="4" height="15" fill="rgb(207,221,52)"/><text x="1127.00" y="894.50"></text></g><g><title>join (posixpath.py:86) (1 samples, 0.31%)</title><rect x="1124" y="900" width="4" height="15" fill="rgb(206,59,42)"/><text x="1127.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (5 samples, 1.54%)</title><rect x="1113" y="148" width="18" height="15" fill="rgb(253,216,18)"/><text x="1116.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="164" width="18" height="15" fill="rgb(237,153,7)"/><text x="1116.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.54%)</title><rect x="1113" y="180" width="18" height="15" fill="rgb(242,120,54)"/><text x="1116.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="196" width="18" height="15" fill="rgb(227,79,41)"/><text x="1116.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="212" width="18" height="15" fill="rgb(245,14,41)"/><text x="1116.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1113" y="228" width="18" height="15" fill="rgb(211,209,11)"/><text x="1116.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1113" y="244" width="18" height="15" fill="rgb(245,111,35)"/><text x="1116.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1113" y="260" width="18" height="15" fill="rgb(233,163,48)"/><text x="1116.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="276" width="18" height="15" fill="rgb(240,229,15)"/><text x="1116.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.54%)</title><rect x="1113" y="292" width="18" height="15" fill="rgb(237,166,5)"/><text x="1116.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="308" width="18" height="15" fill="rgb(215,110,13)"/><text x="1116.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1113" y="324" width="18" height="15" fill="rgb(245,130,1)"/><text x="1116.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1113" y="340" width="18" height="15" fill="rgb(244,95,10)"/><text x="1116.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1113" y="356" width="18" height="15" fill="rgb(232,20,13)"/><text x="1116.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="372" width="18" height="15" fill="rgb(248,120,11)"/><text x="1116.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.54%)</title><rect x="1113" y="388" width="18" height="15" fill="rgb(244,74,34)"/><text x="1116.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="404" width="18" height="15" fill="rgb(250,74,24)"/><text x="1116.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1113" y="420" width="18" height="15" fill="rgb(252,108,0)"/><text x="1116.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1113" y="436" width="18" height="15" fill="rgb(230,4,29)"/><text x="1116.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1113" y="452" width="18" height="15" fill="rgb(215,100,16)"/><text x="1116.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="468" width="18" height="15" fill="rgb(247,198,28)"/><text x="1116.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.54%)</title><rect x="1113" y="484" width="18" height="15" fill="rgb(213,74,52)"/><text x="1116.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="500" width="18" height="15" fill="rgb(229,114,53)"/><text x="1116.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1113" y="516" width="18" height="15" fill="rgb(245,194,41)"/><text x="1116.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1113" y="532" width="18" height="15" fill="rgb(253,32,20)"/><text x="1116.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1113" y="548" width="18" height="15" fill="rgb(217,205,10)"/><text x="1116.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="564" width="18" height="15" fill="rgb(223,175,19)"/><text x="1116.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.54%)</title><rect x="1113" y="580" width="18" height="15" fill="rgb(248,28,43)"/><text x="1116.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="596" width="18" height="15" fill="rgb(249,49,15)"/><text x="1116.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.54%)</title><rect x="1113" y="612" width="18" height="15" fill="rgb(211,83,26)"/><text x="1116.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="628" width="18" height="15" fill="rgb(242,82,39)"/><text x="1116.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="644" width="18" height="15" fill="rgb(218,179,28)"/><text x="1116.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1113" y="660" width="18" height="15" fill="rgb(216,67,41)"/><text x="1116.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1113" y="676" width="18" height="15" fill="rgb(205,197,40)"/><text x="1116.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1113" y="692" width="18" height="15" fill="rgb(239,38,1)"/><text x="1116.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="708" width="18" height="15" fill="rgb(254,33,21)"/><text x="1116.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.54%)</title><rect x="1113" y="724" width="18" height="15" fill="rgb(240,10,30)"/><text x="1116.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1113" y="740" width="18" height="15" fill="rgb(243,75,42)"/><text x="1116.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1113" y="756" width="18" height="15" fill="rgb(207,37,43)"/><text x="1116.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1113" y="772" width="18" height="15" fill="rgb(220,31,15)"/><text x="1116.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1113" y="788" width="18" height="15" fill="rgb(225,184,39)"/><text x="1116.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1113" y="804" width="18" height="15" fill="rgb(238,175,45)"/><text x="1116.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.31%)</title><rect x="1128" y="820" width="3" height="15" fill="rgb(250,200,37)"/><text x="1131.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="836" width="3" height="15" fill="rgb(227,213,33)"/><text x="1131.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="852" width="3" height="15" fill="rgb(239,91,43)"/><text x="1131.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="868" width="3" height="15" fill="rgb(226,194,15)"/><text x="1131.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="884" width="3" height="15" fill="rgb(205,225,9)"/><text x="1131.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="900" width="3" height="15" fill="rgb(254,72,45)"/><text x="1131.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.31%)</title><rect x="1128" y="916" width="3" height="15" fill="rgb(212,196,52)"/><text x="1131.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="932" width="3" height="15" fill="rgb(252,144,7)"/><text x="1131.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="948" width="3" height="15" fill="rgb(240,48,12)"/><text x="1131.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.31%)</title><rect x="1128" y="964" width="3" height="15" fill="rgb(207,16,0)"/><text x="1131.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.31%)</title><rect x="1128" y="980" width="3" height="15" fill="rgb(253,86,35)"/><text x="1131.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.31%)</title><rect x="1128" y="996" width="3" height="15" fill="rgb(213,62,2)"/><text x="1131.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1128" y="1012" width="3" height="15" fill="rgb(252,110,4)"/><text x="1131.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1128" y="1028" width="3" height="15" fill="rgb(244,118,48)"/><text x="1131.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1128" y="1044" width="3" height="15" fill="rgb(217,46,27)"/><text x="1131.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1128" y="1060" width="3" height="15" fill="rgb(227,213,32)"/><text x="1131.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1128" y="1076" width="3" height="15" fill="rgb(250,72,27)"/><text x="1131.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.31%)</title><rect x="1128" y="1092" width="3" height="15" fill="rgb(212,122,30)"/><text x="1131.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5575) (1 samples, 0.31%)</title><rect x="1128" y="1108" width="3" height="15" fill="rgb(248,93,18)"/><text x="1131.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2703) (1 samples, 0.31%)</title><rect x="1128" y="1124" width="3" height="15" fill="rgb(226,110,44)"/><text x="1131.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1128" y="1140" width="3" height="15" fill="rgb(239,91,30)"/><text x="1131.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="1128" y="1156" width="3" height="15" fill="rgb(214,23,51)"/><text x="1131.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="1128" y="1172" width="3" height="15" fill="rgb(246,225,23)"/><text x="1131.00" y="1182.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="1128" y="1188" width="3" height="15" fill="rgb(247,62,43)"/><text x="1131.00" y="1198.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="1128" y="1204" width="3" height="15" fill="rgb(249,33,11)"/><text x="1131.00" y="1214.50"></text></g><g><title>_parse (sre_parse.py:550) (1 samples, 0.31%)</title><rect x="1128" y="1220" width="3" height="15" fill="rgb(217,144,54)"/><text x="1131.00" y="1230.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:4) (1 samples, 0.31%)</title><rect x="1131" y="148" width="4" height="15" fill="rgb(244,128,52)"/><text x="1134.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="164" width="4" height="15" fill="rgb(228,129,1)"/><text x="1134.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="1131" y="180" width="4" height="15" fill="rgb(235,155,11)"/><text x="1134.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="196" width="4" height="15" fill="rgb(222,125,52)"/><text x="1134.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="212" width="4" height="15" fill="rgb(226,178,37)"/><text x="1134.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="228" width="4" height="15" fill="rgb(234,52,27)"/><text x="1134.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="244" width="4" height="15" fill="rgb(231,34,43)"/><text x="1134.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="260" width="4" height="15" fill="rgb(245,194,45)"/><text x="1134.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="276" width="4" height="15" fill="rgb(238,153,1)"/><text x="1134.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.31%)</title><rect x="1131" y="292" width="4" height="15" fill="rgb(228,57,41)"/><text x="1134.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="308" width="4" height="15" fill="rgb(240,194,48)"/><text x="1134.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="324" width="4" height="15" fill="rgb(244,51,30)"/><text x="1134.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="340" width="4" height="15" fill="rgb(247,145,12)"/><text x="1134.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="356" width="4" height="15" fill="rgb(254,64,33)"/><text x="1134.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="372" width="4" height="15" fill="rgb(237,156,17)"/><text x="1134.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.31%)</title><rect x="1131" y="388" width="4" height="15" fill="rgb(248,228,54)"/><text x="1134.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="404" width="4" height="15" fill="rgb(234,114,43)"/><text x="1134.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="420" width="4" height="15" fill="rgb(251,158,45)"/><text x="1134.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="436" width="4" height="15" fill="rgb(254,0,53)"/><text x="1134.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="452" width="4" height="15" fill="rgb(245,32,17)"/><text x="1134.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="468" width="4" height="15" fill="rgb(229,220,35)"/><text x="1134.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.31%)</title><rect x="1131" y="484" width="4" height="15" fill="rgb(217,46,33)"/><text x="1134.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1131" y="500" width="4" height="15" fill="rgb(211,205,7)"/><text x="1134.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="516" width="4" height="15" fill="rgb(242,136,12)"/><text x="1134.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="532" width="4" height="15" fill="rgb(240,170,45)"/><text x="1134.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="548" width="4" height="15" fill="rgb(207,41,40)"/><text x="1134.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="564" width="4" height="15" fill="rgb(239,155,35)"/><text x="1134.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="580" width="4" height="15" fill="rgb(223,27,19)"/><text x="1134.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="596" width="4" height="15" fill="rgb(221,171,16)"/><text x="1134.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.31%)</title><rect x="1131" y="612" width="4" height="15" fill="rgb(222,66,45)"/><text x="1134.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="628" width="4" height="15" fill="rgb(211,36,28)"/><text x="1134.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="644" width="4" height="15" fill="rgb(242,116,23)"/><text x="1134.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="660" width="4" height="15" fill="rgb(234,28,42)"/><text x="1134.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="676" width="4" height="15" fill="rgb(254,112,37)"/><text x="1134.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="692" width="4" height="15" fill="rgb(212,154,21)"/><text x="1134.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.31%)</title><rect x="1131" y="708" width="4" height="15" fill="rgb(209,130,18)"/><text x="1134.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="724" width="4" height="15" fill="rgb(209,221,54)"/><text x="1134.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="740" width="4" height="15" fill="rgb(217,25,16)"/><text x="1134.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="756" width="4" height="15" fill="rgb(243,229,4)"/><text x="1134.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="772" width="4" height="15" fill="rgb(208,224,5)"/><text x="1134.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="788" width="4" height="15" fill="rgb(251,119,32)"/><text x="1134.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.31%)</title><rect x="1131" y="804" width="4" height="15" fill="rgb(243,54,5)"/><text x="1134.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="820" width="4" height="15" fill="rgb(251,100,13)"/><text x="1134.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="836" width="4" height="15" fill="rgb(217,120,4)"/><text x="1134.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="852" width="4" height="15" fill="rgb(211,166,32)"/><text x="1134.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="868" width="4" height="15" fill="rgb(242,153,11)"/><text x="1134.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="884" width="4" height="15" fill="rgb(217,46,43)"/><text x="1134.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:18) (1 samples, 0.31%)</title><rect x="1131" y="900" width="4" height="15" fill="rgb(229,190,28)"/><text x="1134.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1131" y="916" width="4" height="15" fill="rgb(244,63,11)"/><text x="1134.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="932" width="4" height="15" fill="rgb(244,100,5)"/><text x="1134.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="948" width="4" height="15" fill="rgb(224,5,3)"/><text x="1134.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="964" width="4" height="15" fill="rgb(243,101,17)"/><text x="1134.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="980" width="4" height="15" fill="rgb(212,126,50)"/><text x="1134.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="996" width="4" height="15" fill="rgb(211,2,41)"/><text x="1134.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="1012" width="4" height="15" fill="rgb(242,218,40)"/><text x="1134.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py:16) (1 samples, 0.31%)</title><rect x="1131" y="1028" width="4" height="15" fill="rgb(215,74,0)"/><text x="1134.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1131" y="1044" width="4" height="15" fill="rgb(254,115,10)"/><text x="1134.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1131" y="1060" width="4" height="15" fill="rgb(247,70,35)"/><text x="1134.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1131" y="1076" width="4" height="15" fill="rgb(206,95,54)"/><text x="1134.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1131" y="1092" width="4" height="15" fill="rgb(231,177,20)"/><text x="1134.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1131" y="1108" width="4" height="15" fill="rgb(253,136,26)"/><text x="1134.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py:213) (1 samples, 0.31%)</title><rect x="1131" y="1124" width="4" height="15" fill="rgb(218,69,0)"/><text x="1134.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.31%)</title><rect x="1135" y="484" width="4" height="15" fill="rgb(232,109,7)"/><text x="1138.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="500" width="4" height="15" fill="rgb(245,188,25)"/><text x="1138.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="516" width="4" height="15" fill="rgb(248,161,32)"/><text x="1138.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="532" width="4" height="15" fill="rgb(225,32,42)"/><text x="1138.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="548" width="4" height="15" fill="rgb(233,34,53)"/><text x="1138.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="564" width="4" height="15" fill="rgb(215,120,23)"/><text x="1138.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.31%)</title><rect x="1135" y="580" width="4" height="15" fill="rgb(245,128,12)"/><text x="1138.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="596" width="4" height="15" fill="rgb(215,206,4)"/><text x="1138.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="612" width="4" height="15" fill="rgb(208,171,12)"/><text x="1138.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="628" width="4" height="15" fill="rgb(215,94,19)"/><text x="1138.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="644" width="4" height="15" fill="rgb(248,65,11)"/><text x="1138.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="660" width="4" height="15" fill="rgb(233,159,6)"/><text x="1138.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.31%)</title><rect x="1135" y="676" width="4" height="15" fill="rgb(216,79,51)"/><text x="1138.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="692" width="4" height="15" fill="rgb(248,15,14)"/><text x="1138.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="708" width="4" height="15" fill="rgb(219,76,12)"/><text x="1138.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="724" width="4" height="15" fill="rgb(218,203,22)"/><text x="1138.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="740" width="4" height="15" fill="rgb(250,37,33)"/><text x="1138.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="756" width="4" height="15" fill="rgb(210,64,21)"/><text x="1138.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.31%)</title><rect x="1135" y="772" width="4" height="15" fill="rgb(207,14,42)"/><text x="1138.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1135" y="788" width="4" height="15" fill="rgb(231,169,13)"/><text x="1138.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="804" width="4" height="15" fill="rgb(249,19,25)"/><text x="1138.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="820" width="4" height="15" fill="rgb(211,6,8)"/><text x="1138.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="836" width="4" height="15" fill="rgb(209,203,18)"/><text x="1138.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="852" width="4" height="15" fill="rgb(245,164,39)"/><text x="1138.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="868" width="4" height="15" fill="rgb(242,31,20)"/><text x="1138.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="884" width="4" height="15" fill="rgb(253,31,36)"/><text x="1138.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.31%)</title><rect x="1135" y="900" width="4" height="15" fill="rgb(217,168,30)"/><text x="1138.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="916" width="4" height="15" fill="rgb(216,206,40)"/><text x="1138.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="932" width="4" height="15" fill="rgb(216,226,42)"/><text x="1138.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="948" width="4" height="15" fill="rgb(237,67,8)"/><text x="1138.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="964" width="4" height="15" fill="rgb(249,69,24)"/><text x="1138.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="980" width="4" height="15" fill="rgb(233,222,18)"/><text x="1138.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.31%)</title><rect x="1135" y="996" width="4" height="15" fill="rgb(241,135,15)"/><text x="1138.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="1012" width="4" height="15" fill="rgb(221,82,26)"/><text x="1138.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="1028" width="4" height="15" fill="rgb(227,54,23)"/><text x="1138.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="1044" width="4" height="15" fill="rgb(214,143,15)"/><text x="1138.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="1060" width="4" height="15" fill="rgb(248,173,30)"/><text x="1138.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="1076" width="4" height="15" fill="rgb(226,19,32)"/><text x="1138.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:60) (1 samples, 0.31%)</title><rect x="1135" y="1092" width="4" height="15" fill="rgb(226,80,5)"/><text x="1138.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1135" y="1108" width="4" height="15" fill="rgb(240,60,2)"/><text x="1138.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1135" y="1124" width="4" height="15" fill="rgb(216,40,38)"/><text x="1138.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1135" y="1140" width="4" height="15" fill="rgb(214,112,1)"/><text x="1138.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1135" y="1156" width="4" height="15" fill="rgb(230,209,25)"/><text x="1138.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1135" y="1172" width="4" height="15" fill="rgb(221,212,24)"/><text x="1138.00" y="1182.50"></text></g><g><title>&lt;module&gt; (http/cookies.py:451) (1 samples, 0.31%)</title><rect x="1135" y="1188" width="4" height="15" fill="rgb(232,9,25)"/><text x="1138.00" y="1198.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1135" y="1204" width="4" height="15" fill="rgb(254,36,12)"/><text x="1138.00" y="1214.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="1135" y="1220" width="4" height="15" fill="rgb(222,44,4)"/><text x="1138.00" y="1230.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="1135" y="1236" width="4" height="15" fill="rgb(236,51,23)"/><text x="1138.00" y="1246.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="1135" y="1252" width="4" height="15" fill="rgb(243,186,4)"/><text x="1138.00" y="1262.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="1135" y="1268" width="4" height="15" fill="rgb(231,51,18)"/><text x="1138.00" y="1278.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.31%)</title><rect x="1135" y="1284" width="4" height="15" fill="rgb(209,191,0)"/><text x="1138.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="1135" y="1300" width="4" height="15" fill="rgb(220,103,25)"/><text x="1138.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.31%)</title><rect x="1135" y="1316" width="4" height="15" fill="rgb(219,94,40)"/><text x="1138.00" y="1326.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.31%)</title><rect x="1135" y="1332" width="4" height="15" fill="rgb(236,208,26)"/><text x="1138.00" y="1342.50"></text></g><g><title>getwidth (sre_parse.py:183) (1 samples, 0.31%)</title><rect x="1135" y="1348" width="4" height="15" fill="rgb(211,119,25)"/><text x="1138.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.62%)</title><rect x="1135" y="244" width="7" height="15" fill="rgb(250,69,25)"/><text x="1138.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1135" y="260" width="7" height="15" fill="rgb(241,214,46)"/><text x="1138.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1135" y="276" width="7" height="15" fill="rgb(228,68,5)"/><text x="1138.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1135" y="292" width="7" height="15" fill="rgb(211,144,26)"/><text x="1138.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1135" y="308" width="7" height="15" fill="rgb(219,156,34)"/><text x="1138.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1135" y="324" width="7" height="15" fill="rgb(245,210,48)"/><text x="1138.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.62%)</title><rect x="1135" y="340" width="7" height="15" fill="rgb(222,228,8)"/><text x="1138.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1135" y="356" width="7" height="15" fill="rgb(246,63,12)"/><text x="1138.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="1135" y="372" width="7" height="15" fill="rgb(221,91,11)"/><text x="1138.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1135" y="388" width="7" height="15" fill="rgb(221,187,41)"/><text x="1138.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1135" y="404" width="7" height="15" fill="rgb(237,85,25)"/><text x="1138.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1135" y="420" width="7" height="15" fill="rgb(219,98,45)"/><text x="1138.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1135" y="436" width="7" height="15" fill="rgb(233,173,18)"/><text x="1138.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1135" y="452" width="7" height="15" fill="rgb(220,43,7)"/><text x="1138.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1135" y="468" width="7" height="15" fill="rgb(250,21,47)"/><text x="1138.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.31%)</title><rect x="1139" y="484" width="3" height="15" fill="rgb(215,74,46)"/><text x="1142.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="500" width="3" height="15" fill="rgb(246,214,13)"/><text x="1142.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1139" y="516" width="3" height="15" fill="rgb(213,60,40)"/><text x="1142.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1139" y="532" width="3" height="15" fill="rgb(237,33,9)"/><text x="1142.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1139" y="548" width="3" height="15" fill="rgb(242,145,43)"/><text x="1142.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1139" y="564" width="3" height="15" fill="rgb(213,43,8)"/><text x="1142.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.31%)</title><rect x="1139" y="580" width="3" height="15" fill="rgb(205,129,37)"/><text x="1142.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="596" width="3" height="15" fill="rgb(220,78,43)"/><text x="1142.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="1139" y="612" width="3" height="15" fill="rgb(236,74,21)"/><text x="1142.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1139" y="628" width="3" height="15" fill="rgb(230,171,30)"/><text x="1142.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="644" width="3" height="15" fill="rgb(247,211,39)"/><text x="1142.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1139" y="660" width="3" height="15" fill="rgb(249,21,33)"/><text x="1142.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1139" y="676" width="3" height="15" fill="rgb(238,151,41)"/><text x="1142.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1139" y="692" width="3" height="15" fill="rgb(227,122,32)"/><text x="1142.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1139" y="708" width="3" height="15" fill="rgb(223,137,27)"/><text x="1142.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.31%)</title><rect x="1139" y="724" width="3" height="15" fill="rgb(217,138,34)"/><text x="1142.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="740" width="3" height="15" fill="rgb(232,34,8)"/><text x="1142.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1139" y="756" width="3" height="15" fill="rgb(220,183,40)"/><text x="1142.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1139" y="772" width="3" height="15" fill="rgb(216,3,15)"/><text x="1142.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1139" y="788" width="3" height="15" fill="rgb(214,184,22)"/><text x="1142.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1139" y="804" width="3" height="15" fill="rgb(216,2,6)"/><text x="1142.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.31%)</title><rect x="1139" y="820" width="3" height="15" fill="rgb(207,214,23)"/><text x="1142.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="836" width="3" height="15" fill="rgb(247,118,10)"/><text x="1142.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1139" y="852" width="3" height="15" fill="rgb(249,176,49)"/><text x="1142.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1139" y="868" width="3" height="15" fill="rgb(216,137,54)"/><text x="1142.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1139" y="884" width="3" height="15" fill="rgb(215,223,48)"/><text x="1142.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1139" y="900" width="3" height="15" fill="rgb(217,115,7)"/><text x="1142.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:11) (1 samples, 0.31%)</title><rect x="1139" y="916" width="3" height="15" fill="rgb(235,48,22)"/><text x="1142.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1139" y="932" width="3" height="15" fill="rgb(205,145,27)"/><text x="1142.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1139" y="948" width="3" height="15" fill="rgb(238,102,10)"/><text x="1142.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1139" y="964" width="3" height="15" fill="rgb(206,43,43)"/><text x="1142.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1139" y="980" width="3" height="15" fill="rgb(212,31,38)"/><text x="1142.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1139" y="996" width="3" height="15" fill="rgb(215,166,36)"/><text x="1142.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/file_tree_node.py:18) (1 samples, 0.31%)</title><rect x="1139" y="1012" width="3" height="15" fill="rgb(243,71,0)"/><text x="1142.00" y="1022.50"></text></g><g><title>FileTreeNode (pyquickhelper/filehelper/file_tree_node.py:65) (1 samples, 0.31%)</title><rect x="1139" y="1028" width="3" height="15" fill="rgb(211,227,13)"/><text x="1142.00" y="1038.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="1139" y="1044" width="3" height="15" fill="rgb(222,88,22)"/><text x="1142.00" y="1054.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="1139" y="1060" width="3" height="15" fill="rgb(221,36,5)"/><text x="1142.00" y="1070.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="1139" y="1076" width="3" height="15" fill="rgb(231,59,5)"/><text x="1142.00" y="1086.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="1139" y="1092" width="3" height="15" fill="rgb(208,132,40)"/><text x="1142.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="1139" y="1108" width="3" height="15" fill="rgb(213,213,4)"/><text x="1142.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:811) (1 samples, 0.31%)</title><rect x="1139" y="1124" width="3" height="15" fill="rgb(238,201,4)"/><text x="1142.00" y="1134.50"></text></g><g><title>opengroup (sre_parse.py:87) (1 samples, 0.31%)</title><rect x="1139" y="1140" width="3" height="15" fill="rgb(225,53,39)"/><text x="1142.00" y="1150.50"></text></g><g><title>0x7fa3c424540e (?) (1 samples, 0.31%)</title><rect x="1142" y="916" width="4" height="15" fill="rgb(214,112,48)"/><text x="1145.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1142" y="932" width="4" height="15" fill="rgb(220,50,1)"/><text x="1145.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1142" y="948" width="4" height="15" fill="rgb(222,97,3)"/><text x="1145.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1142" y="964" width="4" height="15" fill="rgb(217,134,40)"/><text x="1145.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1142" y="980" width="4" height="15" fill="rgb(228,120,4)"/><text x="1145.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1142" y="996" width="4" height="15" fill="rgb(228,61,10)"/><text x="1145.00" y="1006.50"></text></g><g><title>0x7fa3c3ffecd2 (?) (1 samples, 0.31%)</title><rect x="1142" y="1012" width="4" height="15" fill="rgb(234,223,15)"/><text x="1145.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1142" y="1028" width="4" height="15" fill="rgb(211,83,33)"/><text x="1145.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1142" y="1044" width="4" height="15" fill="rgb(230,129,49)"/><text x="1145.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1142" y="1060" width="4" height="15" fill="rgb(246,118,16)"/><text x="1145.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1142" y="1076" width="4" height="15" fill="rgb(217,19,28)"/><text x="1145.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1142" y="1092" width="4" height="15" fill="rgb(211,19,17)"/><text x="1145.00" y="1102.50"></text></g><g><title>0x7fa3c36f40e5 (?) (1 samples, 0.31%)</title><rect x="1142" y="1108" width="4" height="15" fill="rgb(246,48,25)"/><text x="1145.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1142" y="1124" width="4" height="15" fill="rgb(223,32,19)"/><text x="1145.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1142" y="1140" width="4" height="15" fill="rgb(233,37,5)"/><text x="1145.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1142" y="1156" width="4" height="15" fill="rgb(229,133,11)"/><text x="1145.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1142" y="1172" width="4" height="15" fill="rgb(242,219,23)"/><text x="1145.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1142" y="1188" width="4" height="15" fill="rgb(235,211,8)"/><text x="1145.00" y="1198.50"></text></g><g><title>0x7fa3c3478e68 (?) (1 samples, 0.31%)</title><rect x="1142" y="1204" width="4" height="15" fill="rgb(250,174,42)"/><text x="1145.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1142" y="1220" width="4" height="15" fill="rgb(209,113,5)"/><text x="1145.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1142" y="1236" width="4" height="15" fill="rgb(211,115,17)"/><text x="1145.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1142" y="1252" width="4" height="15" fill="rgb(206,24,5)"/><text x="1145.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1142" y="1268" width="4" height="15" fill="rgb(234,71,34)"/><text x="1145.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1142" y="1284" width="4" height="15" fill="rgb(224,211,41)"/><text x="1145.00" y="1294.50"></text></g><g><title>0x7fa3c32092fb (?) (1 samples, 0.31%)</title><rect x="1142" y="1300" width="4" height="15" fill="rgb(205,218,12)"/><text x="1145.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1142" y="1316" width="4" height="15" fill="rgb(224,59,40)"/><text x="1145.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1142" y="1332" width="4" height="15" fill="rgb(222,70,22)"/><text x="1145.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1142" y="1348" width="4" height="15" fill="rgb(242,190,50)"/><text x="1145.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1142" y="1364" width="4" height="15" fill="rgb(253,209,3)"/><text x="1145.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1142" y="1380" width="4" height="15" fill="rgb(242,122,41)"/><text x="1145.00" y="1390.50"></text></g><g><title>0x7fa3c2fed153 (?) (1 samples, 0.31%)</title><rect x="1142" y="1396" width="4" height="15" fill="rgb(229,138,38)"/><text x="1145.00" y="1406.50"></text></g><g><title>0x7fa3c2febc13 (?) (1 samples, 0.31%)</title><rect x="1142" y="1412" width="4" height="15" fill="rgb(208,1,18)"/><text x="1145.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1142" y="1428" width="4" height="15" fill="rgb(212,160,32)"/><text x="1145.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1142" y="1444" width="4" height="15" fill="rgb(208,210,4)"/><text x="1145.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1142" y="1460" width="4" height="15" fill="rgb(231,223,4)"/><text x="1145.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1142" y="1476" width="4" height="15" fill="rgb(229,132,27)"/><text x="1145.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1142" y="1492" width="4" height="15" fill="rgb(211,136,30)"/><text x="1145.00" y="1502.50"></text></g><g><title>0x7fa3c2d88181 (?) (1 samples, 0.31%)</title><rect x="1142" y="1508" width="4" height="15" fill="rgb(246,80,22)"/><text x="1145.00" y="1518.50"></text></g><g><title>0x7fa3c2d8b1c9 (?) (1 samples, 0.31%)</title><rect x="1142" y="1524" width="4" height="15" fill="rgb(218,190,6)"/><text x="1145.00" y="1534.50"></text></g><g><title>0x7fa3c2db7167 (?) (1 samples, 0.31%)</title><rect x="1142" y="1540" width="4" height="15" fill="rgb(222,121,12)"/><text x="1145.00" y="1550.50"></text></g><g><title>0x7fa3c2db2b64 (?) (1 samples, 0.31%)</title><rect x="1142" y="1556" width="4" height="15" fill="rgb(233,49,52)"/><text x="1145.00" y="1566.50"></text></g><g><title>0x7fa3c2d9607b (?) (1 samples, 0.31%)</title><rect x="1142" y="1572" width="4" height="15" fill="rgb(208,54,2)"/><text x="1145.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.31%)</title><rect x="1142" y="1588" width="4" height="15" fill="rgb(246,31,28)"/><text x="1145.00" y="1598.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1142" y="1604" width="4" height="15" fill="rgb(224,115,3)"/><text x="1145.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.62%)</title><rect x="1142" y="628" width="7" height="15" fill="rgb(210,98,19)"/><text x="1145.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1142" y="644" width="7" height="15" fill="rgb(219,135,12)"/><text x="1145.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1142" y="660" width="7" height="15" fill="rgb(216,22,32)"/><text x="1145.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1142" y="676" width="7" height="15" fill="rgb(218,101,33)"/><text x="1145.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1142" y="692" width="7" height="15" fill="rgb(219,104,18)"/><text x="1145.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1142" y="708" width="7" height="15" fill="rgb(226,211,53)"/><text x="1145.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (2 samples, 0.62%)</title><rect x="1142" y="724" width="7" height="15" fill="rgb(219,195,23)"/><text x="1145.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1142" y="740" width="7" height="15" fill="rgb(240,35,41)"/><text x="1145.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1142" y="756" width="7" height="15" fill="rgb(217,4,50)"/><text x="1145.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1142" y="772" width="7" height="15" fill="rgb(226,103,42)"/><text x="1145.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1142" y="788" width="7" height="15" fill="rgb(215,216,43)"/><text x="1145.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1142" y="804" width="7" height="15" fill="rgb(215,75,6)"/><text x="1145.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (2 samples, 0.62%)</title><rect x="1142" y="820" width="7" height="15" fill="rgb(216,109,8)"/><text x="1145.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1142" y="836" width="7" height="15" fill="rgb(248,137,48)"/><text x="1145.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1142" y="852" width="7" height="15" fill="rgb(235,48,34)"/><text x="1145.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1142" y="868" width="7" height="15" fill="rgb(244,153,8)"/><text x="1145.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.62%)</title><rect x="1142" y="884" width="7" height="15" fill="rgb(212,182,40)"/><text x="1145.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1142" y="900" width="7" height="15" fill="rgb(224,36,22)"/><text x="1145.00" y="910.50"></text></g><g><title>0x7fa3c424540e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="916" width="3" height="15" fill="rgb(227,127,4)"/><text x="1149.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="932" width="3" height="15" fill="rgb(209,99,10)"/><text x="1149.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="948" width="3" height="15" fill="rgb(238,118,34)"/><text x="1149.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="964" width="3" height="15" fill="rgb(210,176,1)"/><text x="1149.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="980" width="3" height="15" fill="rgb(247,117,35)"/><text x="1149.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="996" width="3" height="15" fill="rgb(208,118,48)"/><text x="1149.00" y="1006.50"></text></g><g><title>0x7fa3c3ffecd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1012" width="3" height="15" fill="rgb(247,108,24)"/><text x="1149.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1028" width="3" height="15" fill="rgb(249,149,12)"/><text x="1149.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1044" width="3" height="15" fill="rgb(216,46,2)"/><text x="1149.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1060" width="3" height="15" fill="rgb(239,135,6)"/><text x="1149.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1076" width="3" height="15" fill="rgb(215,229,33)"/><text x="1149.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1092" width="3" height="15" fill="rgb(249,130,2)"/><text x="1149.00" y="1102.50"></text></g><g><title>0x7fa3c36f40e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1108" width="3" height="15" fill="rgb(224,79,47)"/><text x="1149.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1124" width="3" height="15" fill="rgb(236,31,27)"/><text x="1149.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1140" width="3" height="15" fill="rgb(206,95,5)"/><text x="1149.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1156" width="3" height="15" fill="rgb(233,163,21)"/><text x="1149.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1172" width="3" height="15" fill="rgb(230,77,47)"/><text x="1149.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1188" width="3" height="15" fill="rgb(207,31,46)"/><text x="1149.00" y="1198.50"></text></g><g><title>0x7fa3c3478e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1204" width="3" height="15" fill="rgb(230,134,34)"/><text x="1149.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1220" width="3" height="15" fill="rgb(224,113,36)"/><text x="1149.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1236" width="3" height="15" fill="rgb(250,134,36)"/><text x="1149.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1252" width="3" height="15" fill="rgb(248,36,14)"/><text x="1149.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1268" width="3" height="15" fill="rgb(215,67,28)"/><text x="1149.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1284" width="3" height="15" fill="rgb(235,52,46)"/><text x="1149.00" y="1294.50"></text></g><g><title>0x7fa3c32092fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1300" width="3" height="15" fill="rgb(227,198,46)"/><text x="1149.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1316" width="3" height="15" fill="rgb(242,62,46)"/><text x="1149.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1332" width="3" height="15" fill="rgb(214,75,5)"/><text x="1149.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1348" width="3" height="15" fill="rgb(245,45,6)"/><text x="1149.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1364" width="3" height="15" fill="rgb(231,226,3)"/><text x="1149.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1380" width="3" height="15" fill="rgb(208,150,32)"/><text x="1149.00" y="1390.50"></text></g><g><title>0x7fa3c2fed153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1396" width="3" height="15" fill="rgb(217,47,22)"/><text x="1149.00" y="1406.50"></text></g><g><title>0x7fa3c2febc13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1412" width="3" height="15" fill="rgb(253,167,54)"/><text x="1149.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1146" y="1428" width="3" height="15" fill="rgb(248,125,48)"/><text x="1149.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1146" y="1444" width="3" height="15" fill="rgb(236,69,53)"/><text x="1149.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1146" y="1460" width="3" height="15" fill="rgb(242,147,33)"/><text x="1149.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="1146" y="1476" width="3" height="15" fill="rgb(207,159,15)"/><text x="1149.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1146" y="1492" width="3" height="15" fill="rgb(215,6,7)"/><text x="1149.00" y="1502.50"></text></g><g><title>0x7fa3c2d88181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1508" width="3" height="15" fill="rgb(219,117,53)"/><text x="1149.00" y="1518.50"></text></g><g><title>0x7fa3c2d8b1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1524" width="3" height="15" fill="rgb(225,102,26)"/><text x="1149.00" y="1534.50"></text></g><g><title>0x7fa3c2db7167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1540" width="3" height="15" fill="rgb(213,225,40)"/><text x="1149.00" y="1550.50"></text></g><g><title>0x7fa3c2db2b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1556" width="3" height="15" fill="rgb(211,56,13)"/><text x="1149.00" y="1566.50"></text></g><g><title>0x7fa3c2d9607b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1146" y="1572" width="3" height="15" fill="rgb(212,162,6)"/><text x="1149.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.31%)</title><rect x="1146" y="1588" width="3" height="15" fill="rgb(238,83,8)"/><text x="1149.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.31%)</title><rect x="1146" y="1604" width="3" height="15" fill="rgb(226,70,3)"/><text x="1149.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.31%)</title><rect x="1146" y="1620" width="3" height="15" fill="rgb(205,177,1)"/><text x="1149.00" y="1630.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="1146" y="1636" width="3" height="15" fill="rgb(234,149,9)"/><text x="1149.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.31%)</title><rect x="1149" y="1012" width="4" height="15" fill="rgb(240,152,49)"/><text x="1152.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1028" width="4" height="15" fill="rgb(235,27,1)"/><text x="1152.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1044" width="4" height="15" fill="rgb(218,188,0)"/><text x="1152.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1060" width="4" height="15" fill="rgb(251,97,18)"/><text x="1152.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1076" width="4" height="15" fill="rgb(220,62,17)"/><text x="1152.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1092" width="4" height="15" fill="rgb(245,116,2)"/><text x="1152.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.31%)</title><rect x="1149" y="1108" width="4" height="15" fill="rgb(232,108,2)"/><text x="1152.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1124" width="4" height="15" fill="rgb(205,206,32)"/><text x="1152.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1140" width="4" height="15" fill="rgb(243,179,54)"/><text x="1152.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1156" width="4" height="15" fill="rgb(220,170,19)"/><text x="1152.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1172" width="4" height="15" fill="rgb(223,202,38)"/><text x="1152.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1188" width="4" height="15" fill="rgb(236,129,6)"/><text x="1152.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.31%)</title><rect x="1149" y="1204" width="4" height="15" fill="rgb(221,195,50)"/><text x="1152.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1220" width="4" height="15" fill="rgb(217,72,33)"/><text x="1152.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1236" width="4" height="15" fill="rgb(206,50,47)"/><text x="1152.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1252" width="4" height="15" fill="rgb(249,101,41)"/><text x="1152.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1268" width="4" height="15" fill="rgb(212,1,52)"/><text x="1152.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1284" width="4" height="15" fill="rgb(245,204,51)"/><text x="1152.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.31%)</title><rect x="1149" y="1300" width="4" height="15" fill="rgb(219,205,6)"/><text x="1152.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1316" width="4" height="15" fill="rgb(238,100,12)"/><text x="1152.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1332" width="4" height="15" fill="rgb(220,95,7)"/><text x="1152.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1348" width="4" height="15" fill="rgb(239,34,35)"/><text x="1152.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1364" width="4" height="15" fill="rgb(217,98,28)"/><text x="1152.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1380" width="4" height="15" fill="rgb(225,25,28)"/><text x="1152.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.31%)</title><rect x="1149" y="1396" width="4" height="15" fill="rgb(225,8,50)"/><text x="1152.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1412" width="4" height="15" fill="rgb(227,190,15)"/><text x="1152.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1428" width="4" height="15" fill="rgb(233,72,32)"/><text x="1152.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1444" width="4" height="15" fill="rgb(213,22,31)"/><text x="1152.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1460" width="4" height="15" fill="rgb(217,181,43)"/><text x="1152.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1476" width="4" height="15" fill="rgb(235,10,28)"/><text x="1152.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.31%)</title><rect x="1149" y="1492" width="4" height="15" fill="rgb(252,1,53)"/><text x="1152.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1508" width="4" height="15" fill="rgb(219,35,20)"/><text x="1152.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="1149" y="1524" width="4" height="15" fill="rgb(242,119,45)"/><text x="1152.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1540" width="4" height="15" fill="rgb(234,196,9)"/><text x="1152.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1556" width="4" height="15" fill="rgb(227,91,24)"/><text x="1152.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1572" width="4" height="15" fill="rgb(215,175,34)"/><text x="1152.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1588" width="4" height="15" fill="rgb(242,4,51)"/><text x="1152.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1604" width="4" height="15" fill="rgb(225,106,11)"/><text x="1152.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1620" width="4" height="15" fill="rgb(212,215,20)"/><text x="1152.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.31%)</title><rect x="1149" y="1636" width="4" height="15" fill="rgb(214,197,48)"/><text x="1152.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="1149" y="1652" width="4" height="15" fill="rgb(213,9,19)"/><text x="1152.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1668" width="4" height="15" fill="rgb(238,13,36)"/><text x="1152.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1684" width="4" height="15" fill="rgb(251,91,47)"/><text x="1152.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1700" width="4" height="15" fill="rgb(228,109,27)"/><text x="1152.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1716" width="4" height="15" fill="rgb(216,191,0)"/><text x="1152.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1732" width="4" height="15" fill="rgb(206,204,28)"/><text x="1152.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1748" width="4" height="15" fill="rgb(251,71,10)"/><text x="1152.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.31%)</title><rect x="1149" y="1764" width="4" height="15" fill="rgb(226,83,41)"/><text x="1152.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1780" width="4" height="15" fill="rgb(237,151,10)"/><text x="1152.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1796" width="4" height="15" fill="rgb(231,100,25)"/><text x="1152.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1812" width="4" height="15" fill="rgb(231,7,18)"/><text x="1152.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1828" width="4" height="15" fill="rgb(245,69,40)"/><text x="1152.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1844" width="4" height="15" fill="rgb(214,182,40)"/><text x="1152.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.31%)</title><rect x="1149" y="1860" width="4" height="15" fill="rgb(240,110,20)"/><text x="1152.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1149" y="1876" width="4" height="15" fill="rgb(240,87,18)"/><text x="1152.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1149" y="1892" width="4" height="15" fill="rgb(238,45,37)"/><text x="1152.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1149" y="1908" width="4" height="15" fill="rgb(237,47,38)"/><text x="1152.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1149" y="1924" width="4" height="15" fill="rgb(252,220,30)"/><text x="1152.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1149" y="1940" width="4" height="15" fill="rgb(238,126,15)"/><text x="1152.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.31%)</title><rect x="1149" y="1956" width="4" height="15" fill="rgb(220,190,50)"/><text x="1152.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6579) (1 samples, 0.31%)</title><rect x="1149" y="1972" width="4" height="15" fill="rgb(249,54,11)"/><text x="1152.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py:5105) (1 samples, 0.31%)</title><rect x="1149" y="1988" width="4" height="15" fill="rgb(246,84,25)"/><text x="1152.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.31%)</title><rect x="1149" y="2004" width="4" height="15" fill="rgb(215,86,26)"/><text x="1152.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.31%)</title><rect x="1149" y="2020" width="4" height="15" fill="rgb(251,113,49)"/><text x="1152.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.31%)</title><rect x="1149" y="2036" width="4" height="15" fill="rgb(237,118,17)"/><text x="1152.00" y="2046.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.31%)</title><rect x="1149" y="2052" width="4" height="15" fill="rgb(216,124,9)"/><text x="1152.00" y="2062.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.31%)</title><rect x="1149" y="2068" width="4" height="15" fill="rgb(213,48,12)"/><text x="1152.00" y="2078.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.31%)</title><rect x="1149" y="2084" width="4" height="15" fill="rgb(245,127,19)"/><text x="1152.00" y="2094.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.62%)</title><rect x="1149" y="724" width="8" height="15" fill="rgb(235,146,42)"/><text x="1152.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1149" y="740" width="8" height="15" fill="rgb(231,228,30)"/><text x="1152.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1149" y="756" width="8" height="15" fill="rgb(214,28,35)"/><text x="1152.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1149" y="772" width="8" height="15" fill="rgb(253,167,52)"/><text x="1152.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1149" y="788" width="8" height="15" fill="rgb(247,28,37)"/><text x="1152.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1149" y="804" width="8" height="15" fill="rgb(236,68,25)"/><text x="1152.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.62%)</title><rect x="1149" y="820" width="8" height="15" fill="rgb(206,72,45)"/><text x="1152.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1149" y="836" width="8" height="15" fill="rgb(229,132,32)"/><text x="1152.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1149" y="852" width="8" height="15" fill="rgb(236,213,52)"/><text x="1152.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1149" y="868" width="8" height="15" fill="rgb(205,60,25)"/><text x="1152.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1149" y="884" width="8" height="15" fill="rgb(233,70,52)"/><text x="1152.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1149" y="900" width="8" height="15" fill="rgb(241,145,39)"/><text x="1152.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.62%)</title><rect x="1149" y="916" width="8" height="15" fill="rgb(211,94,14)"/><text x="1152.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="1149" y="932" width="8" height="15" fill="rgb(234,107,39)"/><text x="1152.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="1149" y="948" width="8" height="15" fill="rgb(205,4,14)"/><text x="1152.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="1149" y="964" width="8" height="15" fill="rgb(236,174,10)"/><text x="1152.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="1149" y="980" width="8" height="15" fill="rgb(225,105,7)"/><text x="1152.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="1149" y="996" width="8" height="15" fill="rgb(253,157,53)"/><text x="1152.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.31%)</title><rect x="1153" y="1012" width="4" height="15" fill="rgb(243,31,22)"/><text x="1156.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1028" width="4" height="15" fill="rgb(243,72,41)"/><text x="1156.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1044" width="4" height="15" fill="rgb(239,49,32)"/><text x="1156.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1060" width="4" height="15" fill="rgb(219,45,8)"/><text x="1156.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1076" width="4" height="15" fill="rgb(236,205,0)"/><text x="1156.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1092" width="4" height="15" fill="rgb(211,228,23)"/><text x="1156.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.31%)</title><rect x="1153" y="1108" width="4" height="15" fill="rgb(219,113,6)"/><text x="1156.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1124" width="4" height="15" fill="rgb(230,213,17)"/><text x="1156.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1140" width="4" height="15" fill="rgb(235,126,33)"/><text x="1156.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1156" width="4" height="15" fill="rgb(213,32,31)"/><text x="1156.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1172" width="4" height="15" fill="rgb(212,41,21)"/><text x="1156.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1188" width="4" height="15" fill="rgb(250,167,23)"/><text x="1156.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.31%)</title><rect x="1153" y="1204" width="4" height="15" fill="rgb(250,118,18)"/><text x="1156.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1220" width="4" height="15" fill="rgb(211,98,21)"/><text x="1156.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1236" width="4" height="15" fill="rgb(250,58,31)"/><text x="1156.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1252" width="4" height="15" fill="rgb(224,202,48)"/><text x="1156.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1268" width="4" height="15" fill="rgb(236,183,38)"/><text x="1156.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1284" width="4" height="15" fill="rgb(227,6,43)"/><text x="1156.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.31%)</title><rect x="1153" y="1300" width="4" height="15" fill="rgb(209,145,0)"/><text x="1156.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1316" width="4" height="15" fill="rgb(251,21,39)"/><text x="1156.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1332" width="4" height="15" fill="rgb(252,227,25)"/><text x="1156.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1348" width="4" height="15" fill="rgb(237,171,23)"/><text x="1156.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1153" y="1364" width="4" height="15" fill="rgb(207,44,9)"/><text x="1156.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1153" y="1380" width="4" height="15" fill="rgb(250,55,42)"/><text x="1156.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.31%)</title><rect x="1153" y="1396" width="4" height="15" fill="rgb(223,101,30)"/><text x="1156.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1153" y="1412" width="4" height="15" fill="rgb(229,99,2)"/><text x="1156.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1153" y="1428" width="4" height="15" fill="rgb(251,147,39)"/><text x="1156.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1153" y="1444" width="4" height="15" fill="rgb(254,25,37)"/><text x="1156.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="1153" y="1460" width="4" height="15" fill="rgb(232,15,39)"/><text x="1156.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="1153" y="1476" width="4" height="15" fill="rgb(228,220,6)"/><text x="1156.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="1153" y="1492" width="4" height="15" fill="rgb(236,66,45)"/><text x="1156.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 1.54%)</title><rect x="1142" y="436" width="18" height="15" fill="rgb(219,125,42)"/><text x="1145.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1142" y="452" width="18" height="15" fill="rgb(221,59,20)"/><text x="1145.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1142" y="468" width="18" height="15" fill="rgb(210,161,18)"/><text x="1145.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1142" y="484" width="18" height="15" fill="rgb(252,115,30)"/><text x="1145.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1142" y="500" width="18" height="15" fill="rgb(224,38,30)"/><text x="1145.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1142" y="516" width="18" height="15" fill="rgb(252,210,31)"/><text x="1145.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 1.54%)</title><rect x="1142" y="532" width="18" height="15" fill="rgb(251,163,48)"/><text x="1145.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="1142" y="548" width="18" height="15" fill="rgb(248,222,48)"/><text x="1145.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="1142" y="564" width="18" height="15" fill="rgb(205,24,5)"/><text x="1145.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="1142" y="580" width="18" height="15" fill="rgb(218,63,16)"/><text x="1145.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="1142" y="596" width="18" height="15" fill="rgb(208,32,27)"/><text x="1145.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="1142" y="612" width="18" height="15" fill="rgb(213,80,44)"/><text x="1145.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.93%)</title><rect x="1149" y="628" width="11" height="15" fill="rgb(234,192,29)"/><text x="1152.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1149" y="644" width="11" height="15" fill="rgb(254,166,10)"/><text x="1152.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1149" y="660" width="11" height="15" fill="rgb(251,201,46)"/><text x="1152.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1149" y="676" width="11" height="15" fill="rgb(214,142,54)"/><text x="1152.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1149" y="692" width="11" height="15" fill="rgb(208,113,53)"/><text x="1152.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1149" y="708" width="11" height="15" fill="rgb(218,92,33)"/><text x="1152.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.31%)</title><rect x="1157" y="724" width="3" height="15" fill="rgb(217,20,54)"/><text x="1160.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="740" width="3" height="15" fill="rgb(252,75,20)"/><text x="1160.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="1157" y="756" width="3" height="15" fill="rgb(223,191,50)"/><text x="1160.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="772" width="3" height="15" fill="rgb(233,125,32)"/><text x="1160.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="788" width="3" height="15" fill="rgb(254,184,45)"/><text x="1160.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="804" width="3" height="15" fill="rgb(223,56,36)"/><text x="1160.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="820" width="3" height="15" fill="rgb(249,181,50)"/><text x="1160.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="836" width="3" height="15" fill="rgb(234,171,50)"/><text x="1160.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="852" width="3" height="15" fill="rgb(215,60,29)"/><text x="1160.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.31%)</title><rect x="1157" y="868" width="3" height="15" fill="rgb(234,69,36)"/><text x="1160.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="884" width="3" height="15" fill="rgb(224,115,38)"/><text x="1160.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="900" width="3" height="15" fill="rgb(239,199,50)"/><text x="1160.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="916" width="3" height="15" fill="rgb(236,10,25)"/><text x="1160.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="932" width="3" height="15" fill="rgb(212,12,51)"/><text x="1160.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="948" width="3" height="15" fill="rgb(226,120,43)"/><text x="1160.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.31%)</title><rect x="1157" y="964" width="3" height="15" fill="rgb(234,80,51)"/><text x="1160.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="980" width="3" height="15" fill="rgb(224,108,23)"/><text x="1160.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="996" width="3" height="15" fill="rgb(241,87,54)"/><text x="1160.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="1012" width="3" height="15" fill="rgb(234,128,31)"/><text x="1160.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1157" y="1028" width="3" height="15" fill="rgb(223,191,36)"/><text x="1160.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1157" y="1044" width="3" height="15" fill="rgb(252,181,45)"/><text x="1160.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:74) (1 samples, 0.31%)</title><rect x="1157" y="1060" width="3" height="15" fill="rgb(216,80,5)"/><text x="1160.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1157" y="1076" width="3" height="15" fill="rgb(223,119,44)"/><text x="1160.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1157" y="1092" width="3" height="15" fill="rgb(226,22,30)"/><text x="1160.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1157" y="1108" width="3" height="15" fill="rgb(225,13,31)"/><text x="1160.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="1157" y="1124" width="3" height="15" fill="rgb(218,222,24)"/><text x="1160.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="1157" y="1140" width="3" height="15" fill="rgb(213,8,28)"/><text x="1160.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="1157" y="1156" width="3" height="15" fill="rgb(218,79,44)"/><text x="1160.00" y="1166.50"></text></g><g><title>root (&lt;template&gt;:137) (1 samples, 0.31%)</title><rect x="1160" y="1572" width="4" height="15" fill="rgb(210,161,13)"/><text x="1163.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.31%)</title><rect x="1160" y="1588" width="4" height="15" fill="rgb(232,222,10)"/><text x="1163.00" y="1598.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.62%)</title><rect x="1160" y="1492" width="8" height="15" fill="rgb(239,31,21)"/><text x="1163.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.62%)</title><rect x="1160" y="1508" width="8" height="15" fill="rgb(239,153,52)"/><text x="1163.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.62%)</title><rect x="1160" y="1524" width="8" height="15" fill="rgb(236,105,40)"/><text x="1163.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.62%)</title><rect x="1160" y="1540" width="8" height="15" fill="rgb(242,43,50)"/><text x="1163.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.62%)</title><rect x="1160" y="1556" width="8" height="15" fill="rgb(237,93,40)"/><text x="1163.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.31%)</title><rect x="1164" y="1572" width="4" height="15" fill="rgb(249,145,29)"/><text x="1167.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.31%)</title><rect x="1164" y="1588" width="4" height="15" fill="rgb(206,26,23)"/><text x="1167.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.31%)</title><rect x="1164" y="1604" width="4" height="15" fill="rgb(238,195,54)"/><text x="1167.00" y="1614.50"></text></g><g><title>0x7fa3dd0626d5 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1164" y="1620" width="4" height="15" fill="rgb(212,61,24)"/><text x="1167.00" y="1630.50"></text></g><g><title>google::protobuf::DynamicMessage::New (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1164" y="1636" width="4" height="15" fill="rgb(208,89,0)"/><text x="1167.00" y="1646.50"></text></g><g><title>google::protobuf::DynamicMessage::DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1164" y="1652" width="4" height="15" fill="rgb(222,29,12)"/><text x="1167.00" y="1662.50"></text></g><g><title>google::protobuf::DynamicMessage::SharedCtor (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1164" y="1668" width="4" height="15" fill="rgb(208,123,6)"/><text x="1167.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:4) (16 samples, 4.94%)</title><rect x="1113" y="52" width="58" height="15" fill="rgb(212,142,18)"/><text x="1116.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 4.94%)</title><rect x="1113" y="68" width="58" height="15" fill="rgb(220,216,23)"/><text x="1116.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 4.94%)</title><rect x="1113" y="84" width="58" height="15" fill="rgb(239,211,36)"/><text x="1116.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 4.94%)</title><rect x="1113" y="100" width="58" height="15" fill="rgb(220,184,36)"/><text x="1116.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 4.94%)</title><rect x="1113" y="116" width="58" height="15" fill="rgb(232,166,25)"/><text x="1116.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 4.94%)</title><rect x="1113" y="132" width="58" height="15" fill="rgb(207,214,6)"/><text x="1116.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (10 samples, 3.09%)</title><rect x="1135" y="148" width="36" height="15" fill="rgb(227,91,38)"/><text x="1138.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.09%)</title><rect x="1135" y="164" width="36" height="15" fill="rgb(251,224,42)"/><text x="1138.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.09%)</title><rect x="1135" y="180" width="36" height="15" fill="rgb(232,116,48)"/><text x="1138.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.09%)</title><rect x="1135" y="196" width="36" height="15" fill="rgb(211,195,9)"/><text x="1138.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.09%)</title><rect x="1135" y="212" width="36" height="15" fill="rgb(253,154,34)"/><text x="1138.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.09%)</title><rect x="1135" y="228" width="36" height="15" fill="rgb(253,47,23)"/><text x="1138.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 2.47%)</title><rect x="1142" y="244" width="29" height="15" fill="rgb(251,48,30)"/><text x="1145.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.47%)</title><rect x="1142" y="260" width="29" height="15" fill="rgb(231,34,46)"/><text x="1145.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.47%)</title><rect x="1142" y="276" width="29" height="15" fill="rgb(206,82,25)"/><text x="1145.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.47%)</title><rect x="1142" y="292" width="29" height="15" fill="rgb(249,61,50)"/><text x="1145.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.47%)</title><rect x="1142" y="308" width="29" height="15" fill="rgb(212,31,19)"/><text x="1145.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.47%)</title><rect x="1142" y="324" width="29" height="15" fill="rgb(253,181,52)"/><text x="1145.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 2.47%)</title><rect x="1142" y="340" width="29" height="15" fill="rgb(248,166,27)"/><text x="1145.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.47%)</title><rect x="1142" y="356" width="29" height="15" fill="rgb(235,105,30)"/><text x="1145.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.47%)</title><rect x="1142" y="372" width="29" height="15" fill="rgb(206,135,9)"/><text x="1145.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.47%)</title><rect x="1142" y="388" width="29" height="15" fill="rgb(222,124,13)"/><text x="1145.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.47%)</title><rect x="1142" y="404" width="29" height="15" fill="rgb(209,206,12)"/><text x="1145.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.47%)</title><rect x="1142" y="420" width="29" height="15" fill="rgb(220,158,51)"/><text x="1145.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.93%)</title><rect x="1160" y="436" width="11" height="15" fill="rgb(236,207,18)"/><text x="1163.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="452" width="11" height="15" fill="rgb(239,41,16)"/><text x="1163.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.93%)</title><rect x="1160" y="468" width="11" height="15" fill="rgb(233,33,35)"/><text x="1163.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="484" width="11" height="15" fill="rgb(205,55,33)"/><text x="1163.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="500" width="11" height="15" fill="rgb(213,45,17)"/><text x="1163.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="516" width="11" height="15" fill="rgb(252,38,48)"/><text x="1163.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="532" width="11" height="15" fill="rgb(217,173,17)"/><text x="1163.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="548" width="11" height="15" fill="rgb(253,123,31)"/><text x="1163.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="564" width="11" height="15" fill="rgb(254,175,43)"/><text x="1163.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.93%)</title><rect x="1160" y="580" width="11" height="15" fill="rgb(218,136,4)"/><text x="1163.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="596" width="11" height="15" fill="rgb(243,42,54)"/><text x="1163.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="612" width="11" height="15" fill="rgb(234,29,37)"/><text x="1163.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="628" width="11" height="15" fill="rgb(211,112,9)"/><text x="1163.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="644" width="11" height="15" fill="rgb(207,109,31)"/><text x="1163.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="660" width="11" height="15" fill="rgb(253,60,26)"/><text x="1163.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.93%)</title><rect x="1160" y="676" width="11" height="15" fill="rgb(252,96,28)"/><text x="1163.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="692" width="11" height="15" fill="rgb(231,78,7)"/><text x="1163.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="708" width="11" height="15" fill="rgb(220,185,30)"/><text x="1163.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="724" width="11" height="15" fill="rgb(224,207,46)"/><text x="1163.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="740" width="11" height="15" fill="rgb(210,83,5)"/><text x="1163.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="756" width="11" height="15" fill="rgb(251,191,34)"/><text x="1163.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.93%)</title><rect x="1160" y="772" width="11" height="15" fill="rgb(251,170,51)"/><text x="1163.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="788" width="11" height="15" fill="rgb(236,109,19)"/><text x="1163.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="804" width="11" height="15" fill="rgb(220,44,47)"/><text x="1163.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="820" width="11" height="15" fill="rgb(253,175,21)"/><text x="1163.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="836" width="11" height="15" fill="rgb(207,37,24)"/><text x="1163.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="852" width="11" height="15" fill="rgb(235,223,18)"/><text x="1163.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.93%)</title><rect x="1160" y="868" width="11" height="15" fill="rgb(241,153,37)"/><text x="1163.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="884" width="11" height="15" fill="rgb(238,53,9)"/><text x="1163.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.93%)</title><rect x="1160" y="900" width="11" height="15" fill="rgb(222,24,0)"/><text x="1163.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="916" width="11" height="15" fill="rgb(234,5,6)"/><text x="1163.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="932" width="11" height="15" fill="rgb(206,138,6)"/><text x="1163.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="948" width="11" height="15" fill="rgb(248,1,28)"/><text x="1163.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="964" width="11" height="15" fill="rgb(250,44,53)"/><text x="1163.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="980" width="11" height="15" fill="rgb(240,85,11)"/><text x="1163.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="996" width="11" height="15" fill="rgb(218,220,20)"/><text x="1163.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.93%)</title><rect x="1160" y="1012" width="11" height="15" fill="rgb(217,207,4)"/><text x="1163.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="1028" width="11" height="15" fill="rgb(233,229,36)"/><text x="1163.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="1044" width="11" height="15" fill="rgb(231,207,24)"/><text x="1163.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="1060" width="11" height="15" fill="rgb(228,52,34)"/><text x="1163.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="1076" width="11" height="15" fill="rgb(232,154,6)"/><text x="1163.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="1092" width="11" height="15" fill="rgb(232,182,29)"/><text x="1163.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.93%)</title><rect x="1160" y="1108" width="11" height="15" fill="rgb(215,208,6)"/><text x="1163.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.93%)</title><rect x="1160" y="1124" width="11" height="15" fill="rgb(206,101,32)"/><text x="1163.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="1140" width="11" height="15" fill="rgb(246,6,45)"/><text x="1163.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="1156" width="11" height="15" fill="rgb(246,131,23)"/><text x="1163.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="1172" width="11" height="15" fill="rgb(221,107,49)"/><text x="1163.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="1188" width="11" height="15" fill="rgb(210,82,44)"/><text x="1163.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="1204" width="11" height="15" fill="rgb(209,113,8)"/><text x="1163.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="1220" width="11" height="15" fill="rgb(225,23,53)"/><text x="1163.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.93%)</title><rect x="1160" y="1236" width="11" height="15" fill="rgb(207,126,24)"/><text x="1163.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.93%)</title><rect x="1160" y="1252" width="11" height="15" fill="rgb(235,133,2)"/><text x="1163.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="1268" width="11" height="15" fill="rgb(241,136,46)"/><text x="1163.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="1284" width="11" height="15" fill="rgb(239,153,15)"/><text x="1163.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="1300" width="11" height="15" fill="rgb(207,86,32)"/><text x="1163.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="1316" width="11" height="15" fill="rgb(238,51,22)"/><text x="1163.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="1332" width="11" height="15" fill="rgb(215,70,19)"/><text x="1163.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="1348" width="11" height="15" fill="rgb(225,115,37)"/><text x="1163.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.93%)</title><rect x="1160" y="1364" width="11" height="15" fill="rgb(239,133,7)"/><text x="1163.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="1160" y="1380" width="11" height="15" fill="rgb(225,14,21)"/><text x="1163.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="1160" y="1396" width="11" height="15" fill="rgb(207,76,24)"/><text x="1163.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="1160" y="1412" width="11" height="15" fill="rgb(215,113,7)"/><text x="1163.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="1160" y="1428" width="11" height="15" fill="rgb(211,169,11)"/><text x="1163.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="1160" y="1444" width="11" height="15" fill="rgb(207,194,7)"/><text x="1163.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.93%)</title><rect x="1160" y="1460" width="11" height="15" fill="rgb(212,114,51)"/><text x="1163.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.93%)</title><rect x="1160" y="1476" width="11" height="15" fill="rgb(209,18,48)"/><text x="1163.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.31%)</title><rect x="1168" y="1492" width="3" height="15" fill="rgb(205,200,1)"/><text x="1171.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.31%)</title><rect x="1168" y="1508" width="3" height="15" fill="rgb(243,107,48)"/><text x="1171.00" y="1518.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:28) (1 samples, 0.31%)</title><rect x="1171" y="84" width="4" height="15" fill="rgb(205,67,31)"/><text x="1174.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.31%)</title><rect x="1171" y="100" width="4" height="15" fill="rgb(208,6,23)"/><text x="1174.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.31%)</title><rect x="1171" y="116" width="4" height="15" fill="rgb(218,161,22)"/><text x="1174.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.31%)</title><rect x="1171" y="132" width="4" height="15" fill="rgb(229,100,26)"/><text x="1174.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.31%)</title><rect x="1171" y="148" width="4" height="15" fill="rgb(236,198,12)"/><text x="1174.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.31%)</title><rect x="1171" y="164" width="4" height="15" fill="rgb(247,139,44)"/><text x="1174.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.31%)</title><rect x="1171" y="180" width="4" height="15" fill="rgb(212,10,2)"/><text x="1174.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.31%)</title><rect x="1171" y="196" width="4" height="15" fill="rgb(237,172,1)"/><text x="1174.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1171" y="212" width="4" height="15" fill="rgb(236,223,39)"/><text x="1174.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1171" y="228" width="4" height="15" fill="rgb(235,65,49)"/><text x="1174.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1171" y="244" width="4" height="15" fill="rgb(211,164,36)"/><text x="1174.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1171" y="260" width="4" height="15" fill="rgb(220,110,21)"/><text x="1174.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="276" width="4" height="15" fill="rgb(241,226,12)"/><text x="1174.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.31%)</title><rect x="1171" y="292" width="4" height="15" fill="rgb(251,1,47)"/><text x="1174.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1171" y="308" width="4" height="15" fill="rgb(253,27,23)"/><text x="1174.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1171" y="324" width="4" height="15" fill="rgb(253,220,8)"/><text x="1174.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="1171" y="340" width="4" height="15" fill="rgb(225,30,13)"/><text x="1174.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="1171" y="356" width="4" height="15" fill="rgb(234,108,50)"/><text x="1174.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="1171" y="372" width="4" height="15" fill="rgb(207,228,20)"/><text x="1174.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:28) (1 samples, 0.31%)</title><rect x="1171" y="388" width="4" height="15" fill="rgb(223,188,6)"/><text x="1174.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="1171" y="404" width="4" height="15" fill="rgb(215,198,45)"/><text x="1174.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="1171" y="420" width="4" height="15" fill="rgb(235,22,20)"/><text x="1174.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.31%)</title><rect x="1171" y="436" width="4" height="15" fill="rgb(223,0,43)"/><text x="1174.00" y="446.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:316) (1 samples, 0.31%)</title><rect x="1171" y="452" width="4" height="15" fill="rgb(214,165,51)"/><text x="1174.00" y="462.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:45) (2 samples, 0.62%)</title><rect x="1171" y="52" width="8" height="15" fill="rgb(246,95,51)"/><text x="1174.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:44) (2 samples, 0.62%)</title><rect x="1171" y="68" width="8" height="15" fill="rgb(252,190,42)"/><text x="1174.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29) (1 samples, 0.31%)</title><rect x="1175" y="84" width="4" height="15" fill="rgb(252,118,43)"/><text x="1178.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:18) (1 samples, 0.31%)</title><rect x="1175" y="100" width="4" height="15" fill="rgb(232,217,30)"/><text x="1178.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="1175" y="116" width="4" height="15" fill="rgb(233,10,51)"/><text x="1178.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="1175" y="132" width="4" height="15" fill="rgb(252,224,52)"/><text x="1178.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="1175" y="148" width="4" height="15" fill="rgb(233,169,3)"/><text x="1178.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.31%)</title><rect x="1175" y="164" width="4" height="15" fill="rgb(210,164,16)"/><text x="1178.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.31%)</title><rect x="1175" y="180" width="4" height="15" fill="rgb(217,171,36)"/><text x="1178.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.31%)</title><rect x="1175" y="196" width="4" height="15" fill="rgb(242,106,32)"/><text x="1178.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.31%)</title><rect x="1175" y="212" width="4" height="15" fill="rgb(253,3,21)"/><text x="1178.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (1 samples, 0.31%)</title><rect x="1175" y="228" width="4" height="15" fill="rgb(225,228,19)"/><text x="1178.00" y="238.50"></text></g><g><title>0x7fa3af9b2422 (?) (1 samples, 0.31%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(229,86,41)"/><text x="1178.00" y="254.50"></text></g><g><title>0x7fa3af9b889e (?) (1 samples, 0.31%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(232,26,26)"/><text x="1178.00" y="270.50"></text></g><g><title>0x7fa3af9b874f (?) (1 samples, 0.31%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(233,13,13)"/><text x="1178.00" y="286.50"></text></g><g><title>0x7fa3af9bea3a (?) (1 samples, 0.31%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(221,161,4)"/><text x="1178.00" y="302.50"></text></g><g><title>0x7fa3b8cd0cfa (?) (1 samples, 0.31%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(235,108,3)"/><text x="1178.00" y="318.50"></text></g><g><title>0x7fa3b8cd9daa (?) (1 samples, 0.31%)</title><rect x="1175" y="324" width="4" height="15" fill="rgb(246,162,49)"/><text x="1178.00" y="334.50"></text></g><g><title>0x7fa3b8cdbcfd (?) (1 samples, 0.31%)</title><rect x="1175" y="340" width="4" height="15" fill="rgb(227,149,5)"/><text x="1178.00" y="350.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:18) (1 samples, 0.31%)</title><rect x="1179" y="100" width="3" height="15" fill="rgb(249,158,5)"/><text x="1182.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="1179" y="116" width="3" height="15" fill="rgb(223,176,47)"/><text x="1182.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="1179" y="132" width="3" height="15" fill="rgb(248,109,16)"/><text x="1182.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="1179" y="148" width="3" height="15" fill="rgb(227,118,11)"/><text x="1182.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.31%)</title><rect x="1179" y="164" width="3" height="15" fill="rgb(231,94,51)"/><text x="1182.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.31%)</title><rect x="1179" y="180" width="3" height="15" fill="rgb(206,145,20)"/><text x="1182.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.31%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(216,154,27)"/><text x="1182.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(245,177,7)"/><text x="1182.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(225,169,32)"/><text x="1182.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(220,5,52)"/><text x="1182.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(231,151,9)"/><text x="1182.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(241,40,41)"/><text x="1182.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="292" width="3" height="15" fill="rgb(232,126,48)"/><text x="1182.00" y="302.50"></text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1179" y="308" width="3" height="15" fill="rgb(222,114,24)"/><text x="1182.00" y="318.50"></text></g><g><title>all (324 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(238,99,2)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:52) (3 samples, 0.93%)</title><rect x="1179" y="52" width="11" height="15" fill="rgb(225,182,33)"/><text x="1182.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:51) (3 samples, 0.93%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(220,114,39)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:29) (3 samples, 0.93%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(230,87,41)"/><text x="1182.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_50_12_float_.py:23) (2 samples, 0.62%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(235,107,45)"/><text x="1185.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.62%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(219,93,20)"/><text x="1185.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.62%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(224,12,16)"/><text x="1185.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.62%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(218,229,36)"/><text x="1185.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.62%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(251,47,5)"/><text x="1185.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.62%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(242,35,21)"/><text x="1185.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.62%)</title><rect x="1182" y="196" width="8" height="15" fill="rgb(229,51,11)"/><text x="1185.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1182" y="212" width="8" height="15" fill="rgb(231,12,28)"/><text x="1185.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1182" y="228" width="8" height="15" fill="rgb(237,39,23)"/><text x="1185.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(207,67,13)"/><text x="1189.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(244,145,16)"/><text x="1189.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(221,5,37)"/><text x="1189.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(224,117,47)"/><text x="1189.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(251,81,20)"/><text x="1189.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(232,213,7)"/><text x="1189.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(206,23,54)"/><text x="1189.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(219,58,34)"/><text x="1189.00" y="366.50"></text></g></g></svg>