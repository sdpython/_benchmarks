<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(253,51,54)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(248,205,1)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(241,44,36)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(248,27,34)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(227,61,17)"/><text x="13.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.38%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(248,144,1)"/><text x="13.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.38%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(239,132,41)"/><text x="13.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.38%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(222,191,20)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(237,197,52)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(208,22,40)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(232,28,2)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(217,184,29)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(225,27,49)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(218,131,9)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.75%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(223,101,50)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(238,109,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(213,0,11)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(213,127,4)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(205,13,27)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(231,116,27)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.75%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(253,147,2)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(248,77,3)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(214,102,34)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(212,36,14)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(231,196,19)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(229,153,44)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.75%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(230,227,54)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(235,121,6)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(231,115,54)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(207,152,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(243,165,3)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(207,106,10)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.75%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(219,191,35)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(213,41,53)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(215,12,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(252,132,32)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(218,181,17)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(243,49,41)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(216,69,10)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(211,144,17)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(214,90,49)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.75%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(223,146,11)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(209,93,20)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(230,135,52)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(225,37,46)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(206,44,37)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(220,199,52)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.75%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(254,91,9)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.75%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(228,225,3)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.75%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(247,164,12)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="868" width="4" height="15" fill="rgb(224,10,21)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="884" width="4" height="15" fill="rgb(242,111,24)"/><text x="17.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="900" width="4" height="15" fill="rgb(250,18,4)"/><text x="17.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(235,173,34)"/><text x="17.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(220,229,52)"/><text x="17.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.38%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(224,83,19)"/><text x="17.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.38%)</title><rect x="14" y="964" width="4" height="15" fill="rgb(235,63,39)"/><text x="17.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.38%)</title><rect x="14" y="980" width="4" height="15" fill="rgb(225,81,50)"/><text x="17.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.38%)</title><rect x="14" y="996" width="4" height="15" fill="rgb(253,68,35)"/><text x="17.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.38%)</title><rect x="14" y="1012" width="4" height="15" fill="rgb(250,14,17)"/><text x="17.00" y="1022.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.38%)</title><rect x="14" y="1028" width="4" height="15" fill="rgb(210,203,19)"/><text x="17.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1124" width="5" height="15" fill="rgb(238,78,2)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1140" width="5" height="15" fill="rgb(221,220,2)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1156" width="5" height="15" fill="rgb(206,153,48)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="18" y="1172" width="5" height="15" fill="rgb(241,2,43)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1188" width="5" height="15" fill="rgb(247,71,54)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.38%)</title><rect x="18" y="1204" width="5" height="15" fill="rgb(229,68,24)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1220" width="5" height="15" fill="rgb(234,142,14)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1236" width="5" height="15" fill="rgb(225,68,51)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1252" width="5" height="15" fill="rgb(248,71,42)"/><text x="21.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="18" y="1268" width="5" height="15" fill="rgb(228,6,54)"/><text x="21.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="18" y="1284" width="5" height="15" fill="rgb(244,86,3)"/><text x="21.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.38%)</title><rect x="18" y="1300" width="5" height="15" fill="rgb(212,191,14)"/><text x="21.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.38%)</title><rect x="18" y="1316" width="5" height="15" fill="rgb(206,101,35)"/><text x="21.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.38%)</title><rect x="18" y="1332" width="5" height="15" fill="rgb(249,204,4)"/><text x="21.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.38%)</title><rect x="18" y="1348" width="5" height="15" fill="rgb(248,220,22)"/><text x="21.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.38%)</title><rect x="18" y="1364" width="5" height="15" fill="rgb(254,213,44)"/><text x="21.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.38%)</title><rect x="18" y="1380" width="5" height="15" fill="rgb(224,63,27)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1476" width="4" height="15" fill="rgb(239,168,44)"/><text x="26.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1492" width="4" height="15" fill="rgb(233,140,7)"/><text x="26.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1508" width="4" height="15" fill="rgb(225,41,10)"/><text x="26.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="23" y="1524" width="4" height="15" fill="rgb(224,12,41)"/><text x="26.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="23" y="1540" width="4" height="15" fill="rgb(229,224,30)"/><text x="26.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.38%)</title><rect x="23" y="1556" width="4" height="15" fill="rgb(245,194,28)"/><text x="26.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.38%)</title><rect x="23" y="1572" width="4" height="15" fill="rgb(227,184,49)"/><text x="26.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="23" y="1588" width="4" height="15" fill="rgb(235,51,49)"/><text x="26.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="23" y="1604" width="4" height="15" fill="rgb(253,191,4)"/><text x="26.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="23" y="1620" width="4" height="15" fill="rgb(244,101,0)"/><text x="26.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="23" y="1636" width="4" height="15" fill="rgb(231,98,27)"/><text x="26.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="23" y="1652" width="4" height="15" fill="rgb(227,23,16)"/><text x="26.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.38%)</title><rect x="23" y="1668" width="4" height="15" fill="rgb(218,94,44)"/><text x="26.00" y="1678.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.38%)</title><rect x="23" y="1684" width="4" height="15" fill="rgb(247,224,13)"/><text x="26.00" y="1694.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.38%)</title><rect x="23" y="1700" width="4" height="15" fill="rgb(243,82,49)"/><text x="26.00" y="1710.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.38%)</title><rect x="23" y="1716" width="4" height="15" fill="rgb(249,164,25)"/><text x="26.00" y="1726.50"></text></g><g><title>0x7f75911257d7 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="27" y="1588" width="5" height="15" fill="rgb(254,178,36)"/><text x="30.00" y="1598.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="27" y="1604" width="5" height="15" fill="rgb(247,135,22)"/><text x="30.00" y="1614.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="27" y="1620" width="5" height="15" fill="rgb(219,139,17)"/><text x="30.00" y="1630.50"></text></g><g><title>0x7f759111e4b0 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="27" y="1636" width="5" height="15" fill="rgb(241,30,4)"/><text x="30.00" y="1646.50"></text></g><g><title>0x7f7592e9559a (?) (1 samples, 0.38%)</title><rect x="32" y="1620" width="4" height="15" fill="rgb(207,217,9)"/><text x="35.00" y="1630.50"></text></g><g><title>getattr (jinja2/environment.py) (2 samples, 0.75%)</title><rect x="32" y="1588" width="9" height="15" fill="rgb(237,106,30)"/><text x="35.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (2 samples, 0.75%)</title><rect x="32" y="1604" width="9" height="15" fill="rgb(237,92,2)"/><text x="35.00" y="1614.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="36" y="1620" width="5" height="15" fill="rgb(223,37,1)"/><text x="39.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="484" width="27" height="15" fill="rgb(215,57,2)"/><text x="21.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="500" width="27" height="15" fill="rgb(220,57,27)"/><text x="21.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="516" width="27" height="15" fill="rgb(250,112,22)"/><text x="21.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="532" width="27" height="15" fill="rgb(222,118,49)"/><text x="21.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.26%)</title><rect x="18" y="548" width="27" height="15" fill="rgb(231,180,0)"/><text x="21.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="564" width="27" height="15" fill="rgb(223,32,32)"/><text x="21.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 2.26%)</title><rect x="18" y="580" width="27" height="15" fill="rgb(231,135,6)"/><text x="21.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="596" width="27" height="15" fill="rgb(207,171,8)"/><text x="21.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="612" width="27" height="15" fill="rgb(205,44,18)"/><text x="21.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="628" width="27" height="15" fill="rgb(208,94,33)"/><text x="21.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.26%)</title><rect x="18" y="644" width="27" height="15" fill="rgb(232,106,5)"/><text x="21.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="660" width="27" height="15" fill="rgb(246,5,47)"/><text x="21.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 2.26%)</title><rect x="18" y="676" width="27" height="15" fill="rgb(241,69,44)"/><text x="21.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="692" width="27" height="15" fill="rgb(237,218,45)"/><text x="21.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="708" width="27" height="15" fill="rgb(246,20,47)"/><text x="21.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="724" width="27" height="15" fill="rgb(221,101,34)"/><text x="21.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.26%)</title><rect x="18" y="740" width="27" height="15" fill="rgb(243,225,37)"/><text x="21.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="756" width="27" height="15" fill="rgb(239,1,9)"/><text x="21.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 2.26%)</title><rect x="18" y="772" width="27" height="15" fill="rgb(213,221,52)"/><text x="21.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="788" width="27" height="15" fill="rgb(219,22,54)"/><text x="21.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="804" width="27" height="15" fill="rgb(223,194,38)"/><text x="21.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="820" width="27" height="15" fill="rgb(251,130,10)"/><text x="21.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.26%)</title><rect x="18" y="836" width="27" height="15" fill="rgb(236,155,40)"/><text x="21.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="852" width="27" height="15" fill="rgb(218,189,46)"/><text x="21.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 2.26%)</title><rect x="18" y="868" width="27" height="15" fill="rgb(234,159,52)"/><text x="21.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="884" width="27" height="15" fill="rgb(229,55,23)"/><text x="21.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="900" width="27" height="15" fill="rgb(248,146,46)"/><text x="21.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="916" width="27" height="15" fill="rgb(215,82,21)"/><text x="21.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="932" width="27" height="15" fill="rgb(232,2,36)"/><text x="21.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="948" width="27" height="15" fill="rgb(229,200,19)"/><text x="21.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="964" width="27" height="15" fill="rgb(246,122,11)"/><text x="21.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.26%)</title><rect x="18" y="980" width="27" height="15" fill="rgb(248,68,34)"/><text x="21.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="996" width="27" height="15" fill="rgb(205,21,35)"/><text x="21.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 2.26%)</title><rect x="18" y="1012" width="27" height="15" fill="rgb(250,18,17)"/><text x="21.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="1028" width="27" height="15" fill="rgb(210,92,32)"/><text x="21.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="1044" width="27" height="15" fill="rgb(225,11,13)"/><text x="21.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="1060" width="27" height="15" fill="rgb(254,178,37)"/><text x="21.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.26%)</title><rect x="18" y="1076" width="27" height="15" fill="rgb(229,228,17)"/><text x="21.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.26%)</title><rect x="18" y="1092" width="27" height="15" fill="rgb(227,84,29)"/><text x="21.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (6 samples, 2.26%)</title><rect x="18" y="1108" width="27" height="15" fill="rgb(244,1,1)"/><text x="21.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1124" width="22" height="15" fill="rgb(242,183,40)"/><text x="26.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1140" width="22" height="15" fill="rgb(209,15,42)"/><text x="26.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1156" width="22" height="15" fill="rgb(215,78,22)"/><text x="26.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1172" width="22" height="15" fill="rgb(229,171,43)"/><text x="26.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1188" width="22" height="15" fill="rgb(248,8,9)"/><text x="26.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.88%)</title><rect x="23" y="1204" width="22" height="15" fill="rgb(252,142,52)"/><text x="26.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1220" width="22" height="15" fill="rgb(243,200,44)"/><text x="26.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.88%)</title><rect x="23" y="1236" width="22" height="15" fill="rgb(240,140,1)"/><text x="26.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1252" width="22" height="15" fill="rgb(227,213,31)"/><text x="26.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1268" width="22" height="15" fill="rgb(238,75,7)"/><text x="26.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1284" width="22" height="15" fill="rgb(206,219,31)"/><text x="26.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1300" width="22" height="15" fill="rgb(237,100,48)"/><text x="26.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1316" width="22" height="15" fill="rgb(248,126,6)"/><text x="26.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.88%)</title><rect x="23" y="1332" width="22" height="15" fill="rgb(231,116,36)"/><text x="26.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1348" width="22" height="15" fill="rgb(223,15,52)"/><text x="26.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 1.88%)</title><rect x="23" y="1364" width="22" height="15" fill="rgb(209,41,7)"/><text x="26.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1380" width="22" height="15" fill="rgb(224,90,9)"/><text x="26.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1396" width="22" height="15" fill="rgb(227,125,53)"/><text x="26.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1412" width="22" height="15" fill="rgb(225,22,34)"/><text x="26.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.88%)</title><rect x="23" y="1428" width="22" height="15" fill="rgb(251,186,49)"/><text x="26.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="23" y="1444" width="22" height="15" fill="rgb(252,171,28)"/><text x="26.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.88%)</title><rect x="23" y="1460" width="22" height="15" fill="rgb(243,94,30)"/><text x="26.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.50%)</title><rect x="27" y="1476" width="18" height="15" fill="rgb(250,5,52)"/><text x="30.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.50%)</title><rect x="27" y="1492" width="18" height="15" fill="rgb(227,176,20)"/><text x="30.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (4 samples, 1.50%)</title><rect x="27" y="1508" width="18" height="15" fill="rgb(243,79,21)"/><text x="30.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (4 samples, 1.50%)</title><rect x="27" y="1524" width="18" height="15" fill="rgb(234,147,37)"/><text x="30.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (4 samples, 1.50%)</title><rect x="27" y="1540" width="18" height="15" fill="rgb(242,227,35)"/><text x="30.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 1.50%)</title><rect x="27" y="1556" width="18" height="15" fill="rgb(215,73,31)"/><text x="30.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (4 samples, 1.50%)</title><rect x="27" y="1572" width="18" height="15" fill="rgb(215,133,47)"/><text x="30.00" y="1582.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="41" y="1588" width="4" height="15" fill="rgb(250,186,22)"/><text x="44.00" y="1598.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="41" y="1604" width="4" height="15" fill="rgb(209,62,16)"/><text x="44.00" y="1614.50"></text></g><g><title>pybind11::detail::all_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="41" y="1620" width="4" height="15" fill="rgb(223,155,35)"/><text x="44.00" y="1630.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.38%)</title><rect x="41" y="1636" width="4" height="15" fill="rgb(211,173,33)"/><text x="44.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="41" y="1652" width="4" height="15" fill="rgb(207,220,27)"/><text x="44.00" y="1662.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.38%)</title><rect x="45" y="1876" width="4" height="15" fill="rgb(253,68,23)"/><text x="48.00" y="1886.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (2 samples, 0.75%)</title><rect x="45" y="1684" width="9" height="15" fill="rgb(225,95,3)"/><text x="48.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="45" y="1700" width="9" height="15" fill="rgb(243,151,26)"/><text x="48.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="45" y="1716" width="9" height="15" fill="rgb(227,184,36)"/><text x="48.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="45" y="1732" width="9" height="15" fill="rgb(236,77,18)"/><text x="48.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="45" y="1748" width="9" height="15" fill="rgb(215,168,46)"/><text x="48.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="45" y="1764" width="9" height="15" fill="rgb(205,85,16)"/><text x="48.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (2 samples, 0.75%)</title><rect x="45" y="1780" width="9" height="15" fill="rgb(223,112,46)"/><text x="48.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (2 samples, 0.75%)</title><rect x="45" y="1796" width="9" height="15" fill="rgb(223,18,18)"/><text x="48.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (2 samples, 0.75%)</title><rect x="45" y="1812" width="9" height="15" fill="rgb(235,41,21)"/><text x="48.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (2 samples, 0.75%)</title><rect x="45" y="1828" width="9" height="15" fill="rgb(205,105,2)"/><text x="48.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.75%)</title><rect x="45" y="1844" width="9" height="15" fill="rgb(244,2,16)"/><text x="48.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (2 samples, 0.75%)</title><rect x="45" y="1860" width="9" height="15" fill="rgb(236,83,30)"/><text x="48.00" y="1870.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (1 samples, 0.38%)</title><rect x="49" y="1876" width="5" height="15" fill="rgb(222,49,24)"/><text x="52.00" y="1886.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.38%)</title><rect x="49" y="1892" width="5" height="15" fill="rgb(245,17,23)"/><text x="52.00" y="1902.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.38%)</title><rect x="49" y="1908" width="5" height="15" fill="rgb(237,120,0)"/><text x="52.00" y="1918.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.38%)</title><rect x="49" y="1924" width="5" height="15" fill="rgb(231,45,28)"/><text x="52.00" y="1934.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.38%)</title><rect x="49" y="1940" width="5" height="15" fill="rgb(219,131,23)"/><text x="52.00" y="1950.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.38%)</title><rect x="49" y="1956" width="5" height="15" fill="rgb(241,83,41)"/><text x="52.00" y="1966.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="54" y="1892" width="4" height="15" fill="rgb(225,40,13)"/><text x="57.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="54" y="1908" width="4" height="15" fill="rgb(218,26,4)"/><text x="57.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="54" y="1924" width="4" height="15" fill="rgb(217,219,31)"/><text x="57.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="54" y="1940" width="4" height="15" fill="rgb(209,163,45)"/><text x="57.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="54" y="1956" width="4" height="15" fill="rgb(231,214,49)"/><text x="57.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="54" y="1972" width="4" height="15" fill="rgb(241,59,41)"/><text x="57.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="54" y="1988" width="4" height="15" fill="rgb(245,37,48)"/><text x="57.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.38%)</title><rect x="54" y="2004" width="4" height="15" fill="rgb(216,162,47)"/><text x="57.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.38%)</title><rect x="54" y="2020" width="4" height="15" fill="rgb(231,226,19)"/><text x="57.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.38%)</title><rect x="54" y="2036" width="4" height="15" fill="rgb(250,64,18)"/><text x="57.00" y="2046.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.38%)</title><rect x="54" y="2052" width="4" height="15" fill="rgb(207,86,36)"/><text x="57.00" y="2062.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.38%)</title><rect x="54" y="2068" width="4" height="15" fill="rgb(245,103,10)"/><text x="57.00" y="2078.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.38%)</title><rect x="54" y="2084" width="4" height="15" fill="rgb(224,67,6)"/><text x="57.00" y="2094.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.38%)</title><rect x="54" y="2100" width="4" height="15" fill="rgb(220,117,36)"/><text x="57.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="612" width="18" height="15" fill="rgb(249,228,54)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.50%)</title><rect x="45" y="628" width="18" height="15" fill="rgb(250,94,30)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="644" width="18" height="15" fill="rgb(214,46,52)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="660" width="18" height="15" fill="rgb(239,59,52)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="676" width="18" height="15" fill="rgb(224,19,43)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="692" width="18" height="15" fill="rgb(234,154,24)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="708" width="18" height="15" fill="rgb(250,100,13)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.50%)</title><rect x="45" y="724" width="18" height="15" fill="rgb(243,5,28)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="740" width="18" height="15" fill="rgb(254,130,49)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="756" width="18" height="15" fill="rgb(239,115,30)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="772" width="18" height="15" fill="rgb(210,143,5)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="788" width="18" height="15" fill="rgb(252,85,47)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="804" width="18" height="15" fill="rgb(218,128,32)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.50%)</title><rect x="45" y="820" width="18" height="15" fill="rgb(224,193,41)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="836" width="18" height="15" fill="rgb(223,92,12)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="852" width="18" height="15" fill="rgb(251,152,33)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="868" width="18" height="15" fill="rgb(211,40,47)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="884" width="18" height="15" fill="rgb(213,188,48)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="900" width="18" height="15" fill="rgb(241,210,31)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.50%)</title><rect x="45" y="916" width="18" height="15" fill="rgb(252,69,46)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="932" width="18" height="15" fill="rgb(220,12,52)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="948" width="18" height="15" fill="rgb(251,52,31)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="964" width="18" height="15" fill="rgb(243,64,26)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="980" width="18" height="15" fill="rgb(215,207,26)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="996" width="18" height="15" fill="rgb(229,137,0)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.50%)</title><rect x="45" y="1012" width="18" height="15" fill="rgb(207,2,34)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1028" width="18" height="15" fill="rgb(252,216,21)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1044" width="18" height="15" fill="rgb(236,99,52)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1060" width="18" height="15" fill="rgb(249,111,21)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1076" width="18" height="15" fill="rgb(207,216,18)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1092" width="18" height="15" fill="rgb(211,18,33)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (4 samples, 1.50%)</title><rect x="45" y="1108" width="18" height="15" fill="rgb(227,125,50)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1124" width="18" height="15" fill="rgb(247,212,38)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1140" width="18" height="15" fill="rgb(208,10,11)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1156" width="18" height="15" fill="rgb(223,8,17)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1172" width="18" height="15" fill="rgb(220,158,39)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1188" width="18" height="15" fill="rgb(244,119,4)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (4 samples, 1.50%)</title><rect x="45" y="1204" width="18" height="15" fill="rgb(241,22,13)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1220" width="18" height="15" fill="rgb(230,150,14)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1236" width="18" height="15" fill="rgb(249,55,53)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1252" width="18" height="15" fill="rgb(239,60,6)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1268" width="18" height="15" fill="rgb(231,1,42)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1284" width="18" height="15" fill="rgb(230,150,45)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (4 samples, 1.50%)</title><rect x="45" y="1300" width="18" height="15" fill="rgb(210,125,23)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1316" width="18" height="15" fill="rgb(214,157,18)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1332" width="18" height="15" fill="rgb(246,15,32)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1348" width="18" height="15" fill="rgb(210,165,53)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1364" width="18" height="15" fill="rgb(249,49,0)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1380" width="18" height="15" fill="rgb(247,11,13)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (4 samples, 1.50%)</title><rect x="45" y="1396" width="18" height="15" fill="rgb(208,124,27)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1412" width="18" height="15" fill="rgb(237,69,19)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1428" width="18" height="15" fill="rgb(219,193,10)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1444" width="18" height="15" fill="rgb(207,224,15)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1460" width="18" height="15" fill="rgb(207,23,33)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1476" width="18" height="15" fill="rgb(247,142,35)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (4 samples, 1.50%)</title><rect x="45" y="1492" width="18" height="15" fill="rgb(212,83,1)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1508" width="18" height="15" fill="rgb(237,48,32)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1524" width="18" height="15" fill="rgb(229,87,25)"/><text x="48.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1540" width="18" height="15" fill="rgb(207,206,33)"/><text x="48.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1556" width="18" height="15" fill="rgb(208,52,44)"/><text x="48.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1572" width="18" height="15" fill="rgb(216,169,13)"/><text x="48.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (4 samples, 1.50%)</title><rect x="45" y="1588" width="18" height="15" fill="rgb(245,164,43)"/><text x="48.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1604" width="18" height="15" fill="rgb(215,108,3)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1620" width="18" height="15" fill="rgb(230,118,21)"/><text x="48.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1636" width="18" height="15" fill="rgb(213,119,43)"/><text x="48.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.50%)</title><rect x="45" y="1652" width="18" height="15" fill="rgb(218,213,13)"/><text x="48.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.50%)</title><rect x="45" y="1668" width="18" height="15" fill="rgb(210,90,23)"/><text x="48.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.75%)</title><rect x="54" y="1684" width="9" height="15" fill="rgb(212,226,7)"/><text x="57.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1700" width="9" height="15" fill="rgb(237,59,28)"/><text x="57.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1716" width="9" height="15" fill="rgb(235,165,45)"/><text x="57.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1732" width="9" height="15" fill="rgb(214,221,1)"/><text x="57.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="54" y="1748" width="9" height="15" fill="rgb(213,190,33)"/><text x="57.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1764" width="9" height="15" fill="rgb(241,47,9)"/><text x="57.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.75%)</title><rect x="54" y="1780" width="9" height="15" fill="rgb(225,136,32)"/><text x="57.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1796" width="9" height="15" fill="rgb(237,36,8)"/><text x="57.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1812" width="9" height="15" fill="rgb(232,179,6)"/><text x="57.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1828" width="9" height="15" fill="rgb(243,98,19)"/><text x="57.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="54" y="1844" width="9" height="15" fill="rgb(249,199,4)"/><text x="57.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="54" y="1860" width="9" height="15" fill="rgb(210,209,10)"/><text x="57.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (2 samples, 0.75%)</title><rect x="54" y="1876" width="9" height="15" fill="rgb(230,136,37)"/><text x="57.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.38%)</title><rect x="58" y="1892" width="5" height="15" fill="rgb(210,12,9)"/><text x="61.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.38%)</title><rect x="58" y="1908" width="5" height="15" fill="rgb(222,45,18)"/><text x="61.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.38%)</title><rect x="58" y="1924" width="5" height="15" fill="rgb(237,199,19)"/><text x="61.00" y="1934.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.38%)</title><rect x="58" y="1940" width="5" height="15" fill="rgb(240,14,0)"/><text x="61.00" y="1950.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.38%)</title><rect x="58" y="1956" width="5" height="15" fill="rgb(227,47,40)"/><text x="61.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 4.14%)</title><rect x="18" y="340" width="49" height="15" fill="rgb(237,179,48)"/><text x="21.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.14%)</title><rect x="18" y="356" width="49" height="15" fill="rgb(232,122,15)"/><text x="21.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.14%)</title><rect x="18" y="372" width="49" height="15" fill="rgb(254,214,51)"/><text x="21.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.14%)</title><rect x="18" y="388" width="49" height="15" fill="rgb(250,109,50)"/><text x="21.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.14%)</title><rect x="18" y="404" width="49" height="15" fill="rgb(220,70,8)"/><text x="21.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.14%)</title><rect x="18" y="420" width="49" height="15" fill="rgb(253,221,47)"/><text x="21.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (11 samples, 4.14%)</title><rect x="18" y="436" width="49" height="15" fill="rgb(208,180,14)"/><text x="21.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.14%)</title><rect x="18" y="452" width="49" height="15" fill="rgb(209,184,48)"/><text x="21.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.14%)</title><rect x="18" y="468" width="49" height="15" fill="rgb(213,168,7)"/><text x="21.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="45" y="484" width="22" height="15" fill="rgb(209,211,0)"/><text x="48.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.88%)</title><rect x="45" y="500" width="22" height="15" fill="rgb(247,30,3)"/><text x="48.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="45" y="516" width="22" height="15" fill="rgb(207,132,54)"/><text x="48.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.88%)</title><rect x="45" y="532" width="22" height="15" fill="rgb(208,170,2)"/><text x="48.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="45" y="548" width="22" height="15" fill="rgb(223,226,8)"/><text x="48.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="45" y="564" width="22" height="15" fill="rgb(243,133,50)"/><text x="48.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.88%)</title><rect x="45" y="580" width="22" height="15" fill="rgb(244,218,47)"/><text x="48.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.88%)</title><rect x="45" y="596" width="22" height="15" fill="rgb(244,149,27)"/><text x="48.00" y="606.50">e..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="63" y="612" width="4" height="15" fill="rgb(236,19,24)"/><text x="66.00" y="622.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="63" y="628" width="4" height="15" fill="rgb(223,174,44)"/><text x="66.00" y="638.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.38%)</title><rect x="63" y="644" width="4" height="15" fill="rgb(221,147,26)"/><text x="66.00" y="654.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.38%)</title><rect x="67" y="580" width="5" height="15" fill="rgb(208,88,19)"/><text x="70.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="596" width="5" height="15" fill="rgb(208,46,14)"/><text x="70.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="612" width="5" height="15" fill="rgb(245,141,1)"/><text x="70.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="628" width="5" height="15" fill="rgb(252,42,26)"/><text x="70.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="644" width="5" height="15" fill="rgb(242,212,40)"/><text x="70.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="660" width="5" height="15" fill="rgb(216,182,7)"/><text x="70.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="676" width="5" height="15" fill="rgb(248,200,19)"/><text x="70.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="692" width="5" height="15" fill="rgb(242,114,38)"/><text x="70.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="708" width="5" height="15" fill="rgb(246,135,50)"/><text x="70.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.38%)</title><rect x="67" y="724" width="5" height="15" fill="rgb(241,138,10)"/><text x="70.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="740" width="5" height="15" fill="rgb(232,29,16)"/><text x="70.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="756" width="5" height="15" fill="rgb(235,207,15)"/><text x="70.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="772" width="5" height="15" fill="rgb(254,93,44)"/><text x="70.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="788" width="5" height="15" fill="rgb(244,197,6)"/><text x="70.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="804" width="5" height="15" fill="rgb(226,103,20)"/><text x="70.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.38%)</title><rect x="67" y="820" width="5" height="15" fill="rgb(237,229,41)"/><text x="70.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="836" width="5" height="15" fill="rgb(250,25,16)"/><text x="70.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="852" width="5" height="15" fill="rgb(220,97,43)"/><text x="70.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="868" width="5" height="15" fill="rgb(234,112,36)"/><text x="70.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="884" width="5" height="15" fill="rgb(225,101,24)"/><text x="70.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="900" width="5" height="15" fill="rgb(244,83,51)"/><text x="70.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.38%)</title><rect x="67" y="916" width="5" height="15" fill="rgb(213,193,0)"/><text x="70.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="932" width="5" height="15" fill="rgb(251,214,13)"/><text x="70.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="948" width="5" height="15" fill="rgb(252,173,49)"/><text x="70.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="964" width="5" height="15" fill="rgb(230,65,30)"/><text x="70.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="980" width="5" height="15" fill="rgb(231,198,45)"/><text x="70.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="996" width="5" height="15" fill="rgb(218,109,21)"/><text x="70.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1012" width="5" height="15" fill="rgb(212,122,34)"/><text x="70.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="1028" width="5" height="15" fill="rgb(251,117,2)"/><text x="70.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1044" width="5" height="15" fill="rgb(226,156,17)"/><text x="70.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.38%)</title><rect x="67" y="1060" width="5" height="15" fill="rgb(245,133,33)"/><text x="70.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1076" width="5" height="15" fill="rgb(240,213,31)"/><text x="70.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1092" width="5" height="15" fill="rgb(231,190,23)"/><text x="70.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1108" width="5" height="15" fill="rgb(224,100,11)"/><text x="70.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="1124" width="5" height="15" fill="rgb(224,36,16)"/><text x="70.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1140" width="5" height="15" fill="rgb(217,40,28)"/><text x="70.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog.py) (1 samples, 0.38%)</title><rect x="67" y="1156" width="5" height="15" fill="rgb(212,3,34)"/><text x="70.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1172" width="5" height="15" fill="rgb(234,112,43)"/><text x="70.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1188" width="5" height="15" fill="rgb(244,116,34)"/><text x="70.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="67" y="1204" width="5" height="15" fill="rgb(215,35,33)"/><text x="70.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="1220" width="5" height="15" fill="rgb(252,75,53)"/><text x="70.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="1236" width="5" height="15" fill="rgb(229,162,29)"/><text x="70.00" y="1246.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="1252" width="5" height="15" fill="rgb(233,124,19)"/><text x="70.00" y="1262.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="67" y="1268" width="5" height="15" fill="rgb(230,48,48)"/><text x="70.00" y="1278.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.38%)</title><rect x="67" y="1284" width="5" height="15" fill="rgb(209,228,11)"/><text x="70.00" y="1294.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.38%)</title><rect x="67" y="1300" width="5" height="15" fill="rgb(241,29,7)"/><text x="70.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1172" width="4" height="15" fill="rgb(237,152,54)"/><text x="75.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py) (1 samples, 0.38%)</title><rect x="72" y="1188" width="4" height="15" fill="rgb(215,123,0)"/><text x="75.00" y="1198.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1204" width="4" height="15" fill="rgb(237,214,5)"/><text x="75.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1220" width="4" height="15" fill="rgb(223,38,51)"/><text x="75.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1236" width="4" height="15" fill="rgb(232,148,24)"/><text x="75.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1252" width="4" height="15" fill="rgb(248,161,36)"/><text x="75.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1268" width="4" height="15" fill="rgb(217,166,49)"/><text x="75.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="72" y="1284" width="4" height="15" fill="rgb(242,126,25)"/><text x="75.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1300" width="4" height="15" fill="rgb(215,166,53)"/><text x="75.00" y="1310.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/__init__.py) (1 samples, 0.38%)</title><rect x="72" y="1316" width="4" height="15" fill="rgb(205,105,1)"/><text x="75.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1332" width="4" height="15" fill="rgb(222,32,53)"/><text x="75.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1348" width="4" height="15" fill="rgb(252,131,29)"/><text x="75.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1364" width="4" height="15" fill="rgb(209,105,54)"/><text x="75.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="72" y="1380" width="4" height="15" fill="rgb(231,7,19)"/><text x="75.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="72" y="1396" width="4" height="15" fill="rgb(228,143,15)"/><text x="75.00" y="1406.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/base.py) (1 samples, 0.38%)</title><rect x="72" y="1412" width="4" height="15" fill="rgb(220,84,13)"/><text x="75.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (14 samples, 5.26%)</title><rect x="18" y="244" width="62" height="15" fill="rgb(209,212,47)"/><text x="21.00" y="254.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.26%)</title><rect x="18" y="260" width="62" height="15" fill="rgb(254,60,11)"/><text x="21.00" y="270.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.26%)</title><rect x="18" y="276" width="62" height="15" fill="rgb(224,29,14)"/><text x="21.00" y="286.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.26%)</title><rect x="18" y="292" width="62" height="15" fill="rgb(253,51,42)"/><text x="21.00" y="302.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 5.26%)</title><rect x="18" y="308" width="62" height="15" fill="rgb(239,82,7)"/><text x="21.00" y="318.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.26%)</title><rect x="18" y="324" width="62" height="15" fill="rgb(225,24,42)"/><text x="21.00" y="334.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.13%)</title><rect x="67" y="340" width="13" height="15" fill="rgb(226,227,44)"/><text x="70.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="356" width="13" height="15" fill="rgb(232,205,0)"/><text x="70.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="372" width="13" height="15" fill="rgb(251,209,8)"/><text x="70.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="388" width="13" height="15" fill="rgb(251,150,48)"/><text x="70.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="404" width="13" height="15" fill="rgb(252,57,28)"/><text x="70.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="420" width="13" height="15" fill="rgb(216,60,41)"/><text x="70.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="436" width="13" height="15" fill="rgb(224,109,52)"/><text x="70.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.13%)</title><rect x="67" y="452" width="13" height="15" fill="rgb(218,83,37)"/><text x="70.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="468" width="13" height="15" fill="rgb(209,199,52)"/><text x="70.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.13%)</title><rect x="67" y="484" width="13" height="15" fill="rgb(205,128,44)"/><text x="70.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="500" width="13" height="15" fill="rgb(227,3,45)"/><text x="70.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="516" width="13" height="15" fill="rgb(241,69,44)"/><text x="70.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="532" width="13" height="15" fill="rgb(251,200,27)"/><text x="70.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.13%)</title><rect x="67" y="548" width="13" height="15" fill="rgb(216,24,28)"/><text x="70.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.13%)</title><rect x="67" y="564" width="13" height="15" fill="rgb(254,2,22)"/><text x="70.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.75%)</title><rect x="72" y="580" width="8" height="15" fill="rgb(217,37,18)"/><text x="75.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="596" width="8" height="15" fill="rgb(213,63,8)"/><text x="75.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="612" width="8" height="15" fill="rgb(242,113,52)"/><text x="75.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="628" width="8" height="15" fill="rgb(238,112,20)"/><text x="75.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="72" y="644" width="8" height="15" fill="rgb(229,206,20)"/><text x="75.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="660" width="8" height="15" fill="rgb(213,77,1)"/><text x="75.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.75%)</title><rect x="72" y="676" width="8" height="15" fill="rgb(221,135,44)"/><text x="75.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="692" width="8" height="15" fill="rgb(232,62,52)"/><text x="75.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="708" width="8" height="15" fill="rgb(229,142,33)"/><text x="75.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="724" width="8" height="15" fill="rgb(223,190,37)"/><text x="75.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="72" y="740" width="8" height="15" fill="rgb(222,220,54)"/><text x="75.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="756" width="8" height="15" fill="rgb(243,55,24)"/><text x="75.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.75%)</title><rect x="72" y="772" width="8" height="15" fill="rgb(250,75,45)"/><text x="75.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="788" width="8" height="15" fill="rgb(206,107,32)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="804" width="8" height="15" fill="rgb(239,45,25)"/><text x="75.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="820" width="8" height="15" fill="rgb(218,206,54)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="836" width="8" height="15" fill="rgb(219,50,6)"/><text x="75.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="852" width="8" height="15" fill="rgb(253,206,38)"/><text x="75.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="72" y="868" width="8" height="15" fill="rgb(206,35,11)"/><text x="75.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="884" width="8" height="15" fill="rgb(226,207,47)"/><text x="75.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.75%)</title><rect x="72" y="900" width="8" height="15" fill="rgb(208,64,22)"/><text x="75.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="916" width="8" height="15" fill="rgb(233,128,10)"/><text x="75.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="932" width="8" height="15" fill="rgb(250,114,31)"/><text x="75.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="948" width="8" height="15" fill="rgb(210,66,24)"/><text x="75.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="72" y="964" width="8" height="15" fill="rgb(222,57,15)"/><text x="75.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="980" width="8" height="15" fill="rgb(218,12,16)"/><text x="75.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (2 samples, 0.75%)</title><rect x="72" y="996" width="8" height="15" fill="rgb(222,206,19)"/><text x="75.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1012" width="8" height="15" fill="rgb(242,224,10)"/><text x="75.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1028" width="8" height="15" fill="rgb(228,9,46)"/><text x="75.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1044" width="8" height="15" fill="rgb(231,183,25)"/><text x="75.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="72" y="1060" width="8" height="15" fill="rgb(236,111,34)"/><text x="75.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1076" width="8" height="15" fill="rgb(229,142,37)"/><text x="75.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (2 samples, 0.75%)</title><rect x="72" y="1092" width="8" height="15" fill="rgb(223,128,13)"/><text x="75.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1108" width="8" height="15" fill="rgb(236,36,52)"/><text x="75.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1124" width="8" height="15" fill="rgb(239,87,21)"/><text x="75.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="72" y="1140" width="8" height="15" fill="rgb(253,80,4)"/><text x="75.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.75%)</title><rect x="72" y="1156" width="8" height="15" fill="rgb(247,7,40)"/><text x="75.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="76" y="1172" width="4" height="15" fill="rgb(245,50,29)"/><text x="79.00" y="1182.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="76" y="1188" width="4" height="15" fill="rgb(236,62,11)"/><text x="79.00" y="1198.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="76" y="1204" width="4" height="15" fill="rgb(224,132,22)"/><text x="79.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 6.39%)</title><rect x="10" y="68" width="75" height="15" fill="rgb(240,184,25)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 6.39%)</title><rect x="10" y="84" width="75" height="15" fill="rgb(220,79,4)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 6.39%)</title><rect x="10" y="100" width="75" height="15" fill="rgb(211,20,13)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 6.39%)</title><rect x="10" y="116" width="75" height="15" fill="rgb(219,86,28)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 6.39%)</title><rect x="10" y="132" width="75" height="15" fill="rgb(235,172,21)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (17 samples, 6.39%)</title><rect x="10" y="148" width="75" height="15" fill="rgb(206,198,1)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 6.39%)</title><rect x="10" y="164" width="75" height="15" fill="rgb(243,61,25)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 6.39%)</title><rect x="10" y="180" width="75" height="15" fill="rgb(226,0,30)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.64%)</title><rect x="18" y="196" width="67" height="15" fill="rgb(252,175,30)"/><text x="21.00" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 5.64%)</title><rect x="18" y="212" width="67" height="15" fill="rgb(207,45,50)"/><text x="21.00" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.64%)</title><rect x="18" y="228" width="67" height="15" fill="rgb(246,138,32)"/><text x="21.00" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.38%)</title><rect x="80" y="244" width="5" height="15" fill="rgb(245,128,7)"/><text x="83.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="80" y="260" width="5" height="15" fill="rgb(216,9,40)"/><text x="83.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="80" y="276" width="5" height="15" fill="rgb(240,207,36)"/><text x="83.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="80" y="292" width="5" height="15" fill="rgb(216,174,8)"/><text x="83.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="80" y="308" width="5" height="15" fill="rgb(237,110,21)"/><text x="83.00" y="318.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="80" y="324" width="5" height="15" fill="rgb(226,69,15)"/><text x="83.00" y="334.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="80" y="340" width="5" height="15" fill="rgb(213,213,7)"/><text x="83.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="80" y="356" width="5" height="15" fill="rgb(221,159,30)"/><text x="83.00" y="366.50"></text></g><g><title>0x7f75a2dda8a4 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="80" y="372" width="5" height="15" fill="rgb(226,1,27)"/><text x="83.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.38%)</title><rect x="85" y="116" width="4" height="15" fill="rgb(206,89,4)"/><text x="88.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.38%)</title><rect x="85" y="132" width="4" height="15" fill="rgb(242,183,1)"/><text x="88.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.38%)</title><rect x="85" y="148" width="4" height="15" fill="rgb(218,199,12)"/><text x="88.00" y="158.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.38%)</title><rect x="285" y="276" width="4" height="15" fill="rgb(232,205,0)"/><text x="288.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 1.13%)</title><rect x="285" y="260" width="13" height="15" fill="rgb(238,91,48)"/><text x="288.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.75%)</title><rect x="289" y="276" width="9" height="15" fill="rgb(251,104,47)"/><text x="292.00" y="286.50"></text></g><g><title>0x7f75a1ffad70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="293" y="292" width="5" height="15" fill="rgb(205,97,54)"/><text x="296.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.38%)</title><rect x="298" y="260" width="4" height="15" fill="rgb(228,220,27)"/><text x="301.00" y="270.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.38%)</title><rect x="298" y="276" width="4" height="15" fill="rgb(231,189,50)"/><text x="301.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.88%)</title><rect x="285" y="212" width="22" height="15" fill="rgb(217,170,31)"/><text x="288.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.88%)</title><rect x="285" y="228" width="22" height="15" fill="rgb(205,36,49)"/><text x="288.00" y="238.50">&lt;..</text></g><g><title>array_astype (methods.c) (5 samples, 1.88%)</title><rect x="285" y="244" width="22" height="15" fill="rgb(226,170,43)"/><text x="288.00" y="254.50">a..</text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.38%)</title><rect x="302" y="260" width="5" height="15" fill="rgb(227,195,10)"/><text x="305.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.38%)</title><rect x="302" y="276" width="5" height="15" fill="rgb(231,70,50)"/><text x="305.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.38%)</title><rect x="302" y="292" width="5" height="15" fill="rgb(247,83,16)"/><text x="305.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="302" y="308" width="5" height="15" fill="rgb(249,209,47)"/><text x="305.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.38%)</title><rect x="307" y="212" width="4" height="15" fill="rgb(205,102,21)"/><text x="310.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.38%)</title><rect x="307" y="228" width="4" height="15" fill="rgb(222,44,18)"/><text x="310.00" y="238.50"></text></g><g><title>0x7f75a2df9124 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="329" y="244" width="4" height="15" fill="rgb(247,140,43)"/><text x="332.00" y="254.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 2.26%)</title><rect x="333" y="244" width="27" height="15" fill="rgb(218,215,32)"/><text x="336.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.26%)</title><rect x="333" y="260" width="27" height="15" fill="rgb(252,190,1)"/><text x="336.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 2.26%)</title><rect x="333" y="276" width="27" height="15" fill="rgb(224,83,2)"/><text x="336.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.50%)</title><rect x="342" y="292" width="18" height="15" fill="rgb(210,119,34)"/><text x="345.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 1.13%)</title><rect x="347" y="308" width="13" height="15" fill="rgb(241,79,31)"/><text x="350.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.75%)</title><rect x="351" y="324" width="9" height="15" fill="rgb(250,116,16)"/><text x="354.00" y="334.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.38%)</title><rect x="373" y="324" width="5" height="15" fill="rgb(221,64,12)"/><text x="376.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.38%)</title><rect x="373" y="340" width="5" height="15" fill="rgb(234,67,47)"/><text x="376.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.38%)</title><rect x="373" y="356" width="5" height="15" fill="rgb(226,131,0)"/><text x="376.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.38%)</title><rect x="373" y="372" width="5" height="15" fill="rgb(237,110,39)"/><text x="376.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (5 samples, 1.88%)</title><rect x="360" y="244" width="22" height="15" fill="rgb(231,225,17)"/><text x="363.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (4 samples, 1.50%)</title><rect x="364" y="260" width="18" height="15" fill="rgb(249,137,31)"/><text x="367.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.50%)</title><rect x="364" y="276" width="18" height="15" fill="rgb(220,124,33)"/><text x="367.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 1.13%)</title><rect x="369" y="292" width="13" height="15" fill="rgb(221,135,39)"/><text x="372.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (2 samples, 0.75%)</title><rect x="373" y="308" width="9" height="15" fill="rgb(207,223,15)"/><text x="376.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (1 samples, 0.38%)</title><rect x="378" y="324" width="4" height="15" fill="rgb(224,76,15)"/><text x="381.00" y="334.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.38%)</title><rect x="378" y="340" width="4" height="15" fill="rgb(216,78,22)"/><text x="381.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.38%)</title><rect x="382" y="260" width="5" height="15" fill="rgb(253,59,50)"/><text x="385.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.38%)</title><rect x="382" y="276" width="5" height="15" fill="rgb(246,53,41)"/><text x="385.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.38%)</title><rect x="382" y="292" width="5" height="15" fill="rgb(228,20,13)"/><text x="385.00" y="302.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="391" y="276" width="4" height="15" fill="rgb(230,210,51)"/><text x="394.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.75%)</title><rect x="395" y="276" width="9" height="15" fill="rgb(208,160,22)"/><text x="398.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.38%)</title><rect x="400" y="292" width="4" height="15" fill="rgb(248,32,28)"/><text x="403.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.38%)</title><rect x="404" y="324" width="5" height="15" fill="rgb(220,170,45)"/><text x="407.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.38%)</title><rect x="404" y="340" width="5" height="15" fill="rgb(253,172,3)"/><text x="407.00" y="350.50"></text></g><g><title>0x7f75a2d907a5 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="404" y="356" width="5" height="15" fill="rgb(243,53,21)"/><text x="407.00" y="366.50"></text></g><g><title>0x7f75a2d9077d (libc-2.29.so) (1 samples, 0.38%)</title><rect x="404" y="372" width="5" height="15" fill="rgb(251,171,11)"/><text x="407.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.75%)</title><rect x="404" y="292" width="9" height="15" fill="rgb(236,138,52)"/><text x="407.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.75%)</title><rect x="404" y="308" width="9" height="15" fill="rgb(237,89,36)"/><text x="407.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.38%)</title><rect x="409" y="324" width="4" height="15" fill="rgb(242,120,33)"/><text x="412.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="409" y="340" width="4" height="15" fill="rgb(216,152,1)"/><text x="412.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.38%)</title><rect x="418" y="324" width="4" height="15" fill="rgb(252,47,11)"/><text x="421.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.88%)</title><rect x="404" y="276" width="22" height="15" fill="rgb(212,66,30)"/><text x="407.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.13%)</title><rect x="413" y="292" width="13" height="15" fill="rgb(236,163,48)"/><text x="416.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.13%)</title><rect x="413" y="308" width="13" height="15" fill="rgb(230,177,49)"/><text x="416.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.38%)</title><rect x="422" y="324" width="4" height="15" fill="rgb(212,189,16)"/><text x="425.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.38%)</title><rect x="426" y="276" width="5" height="15" fill="rgb(249,208,28)"/><text x="429.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="431" y="276" width="4" height="15" fill="rgb(247,51,41)"/><text x="434.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 4.51%)</title><rect x="387" y="260" width="53" height="15" fill="rgb(227,222,37)"/><text x="390.00" y="270.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.38%)</title><rect x="435" y="276" width="5" height="15" fill="rgb(253,211,28)"/><text x="438.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (29 samples, 10.90%)</title><rect x="316" y="228" width="128" height="15" fill="rgb(209,19,35)"/><text x="319.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 5.26%)</title><rect x="382" y="244" width="62" height="15" fill="rgb(225,114,36)"/><text x="385.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.38%)</title><rect x="440" y="260" width="4" height="15" fill="rgb(246,89,0)"/><text x="443.00" y="270.50"></text></g><g><title>0x7f75a2df9120 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="440" y="276" width="4" height="15" fill="rgb(231,145,2)"/><text x="443.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.75%)</title><rect x="466" y="260" width="9" height="15" fill="rgb(242,116,36)"/><text x="469.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.75%)</title><rect x="466" y="276" width="9" height="15" fill="rgb(247,76,47)"/><text x="469.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.38%)</title><rect x="471" y="292" width="4" height="15" fill="rgb(240,144,53)"/><text x="474.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.75%)</title><rect x="475" y="260" width="9" height="15" fill="rgb(213,79,39)"/><text x="478.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.38%)</title><rect x="480" y="276" width="4" height="15" fill="rgb(237,52,45)"/><text x="483.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.38%)</title><rect x="480" y="292" width="4" height="15" fill="rgb(216,157,5)"/><text x="483.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="480" y="308" width="4" height="15" fill="rgb(208,14,29)"/><text x="483.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.38%)</title><rect x="480" y="324" width="4" height="15" fill="rgb(211,135,25)"/><text x="483.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.75%)</title><rect x="489" y="324" width="8" height="15" fill="rgb(232,176,44)"/><text x="492.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.75%)</title><rect x="489" y="340" width="8" height="15" fill="rgb(247,33,50)"/><text x="492.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.75%)</title><rect x="489" y="356" width="8" height="15" fill="rgb(225,7,32)"/><text x="492.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.75%)</title><rect x="489" y="372" width="8" height="15" fill="rgb(251,139,8)"/><text x="492.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.75%)</title><rect x="489" y="388" width="8" height="15" fill="rgb(215,197,39)"/><text x="492.00" y="398.50"></text></g><g><title>0x7f75a2deee50 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="493" y="404" width="4" height="15" fill="rgb(219,196,32)"/><text x="496.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.75%)</title><rect x="502" y="372" width="9" height="15" fill="rgb(234,194,18)"/><text x="505.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.38%)</title><rect x="506" y="388" width="5" height="15" fill="rgb(209,195,54)"/><text x="509.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.38%)</title><rect x="511" y="404" width="4" height="15" fill="rgb(239,198,13)"/><text x="514.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="511" y="420" width="4" height="15" fill="rgb(210,37,50)"/><text x="514.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.38%)</title><rect x="511" y="436" width="4" height="15" fill="rgb(249,62,29)"/><text x="514.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.38%)</title><rect x="511" y="452" width="4" height="15" fill="rgb(226,215,24)"/><text x="514.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.38%)</title><rect x="511" y="468" width="4" height="15" fill="rgb(245,10,6)"/><text x="514.00" y="478.50"></text></g><g><title>0x7f75a2d9078e (libc-2.29.so) (1 samples, 0.38%)</title><rect x="515" y="420" width="5" height="15" fill="rgb(219,224,26)"/><text x="518.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 1.13%)</title><rect x="511" y="372" width="13" height="15" fill="rgb(209,229,48)"/><text x="514.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 1.13%)</title><rect x="511" y="388" width="13" height="15" fill="rgb(223,9,35)"/><text x="514.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.75%)</title><rect x="515" y="404" width="9" height="15" fill="rgb(246,68,17)"/><text x="518.00" y="414.50"></text></g><g><title>0x7f75a2d90a45 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="520" y="420" width="4" height="15" fill="rgb(225,141,52)"/><text x="523.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 2.63%)</title><rect x="502" y="356" width="31" height="15" fill="rgb(218,129,1)"/><text x="505.00" y="366.50">Py..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.75%)</title><rect x="524" y="372" width="9" height="15" fill="rgb(236,167,33)"/><text x="527.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.75%)</title><rect x="524" y="388" width="9" height="15" fill="rgb(250,174,53)"/><text x="527.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.75%)</title><rect x="524" y="404" width="9" height="15" fill="rgb(249,161,24)"/><text x="527.00" y="414.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.38%)</title><rect x="529" y="420" width="4" height="15" fill="rgb(251,176,34)"/><text x="532.00" y="430.50"></text></g><g><title>array_sum (methods.c) (14 samples, 5.26%)</title><rect x="484" y="260" width="62" height="15" fill="rgb(209,18,5)"/><text x="487.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 5.26%)</title><rect x="484" y="276" width="62" height="15" fill="rgb(211,35,52)"/><text x="487.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 4.89%)</title><rect x="489" y="292" width="57" height="15" fill="rgb(243,46,5)"/><text x="492.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.89%)</title><rect x="489" y="308" width="57" height="15" fill="rgb(232,95,54)"/><text x="492.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 4.14%)</title><rect x="497" y="324" width="49" height="15" fill="rgb(236,127,11)"/><text x="500.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.76%)</title><rect x="502" y="340" width="44" height="15" fill="rgb(215,49,25)"/><text x="505.00" y="350.50">PyUF..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 1.13%)</title><rect x="533" y="356" width="13" height="15" fill="rgb(215,93,18)"/><text x="536.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.75%)</title><rect x="537" y="372" width="9" height="15" fill="rgb(228,128,34)"/><text x="540.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.75%)</title><rect x="537" y="388" width="9" height="15" fill="rgb(205,190,35)"/><text x="540.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.75%)</title><rect x="537" y="404" width="9" height="15" fill="rgb(218,5,42)"/><text x="540.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.38%)</title><rect x="542" y="420" width="4" height="15" fill="rgb(232,84,52)"/><text x="545.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.75%)</title><rect x="551" y="276" width="9" height="15" fill="rgb(253,11,0)"/><text x="554.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.75%)</title><rect x="551" y="292" width="9" height="15" fill="rgb(223,215,3)"/><text x="554.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.75%)</title><rect x="551" y="308" width="9" height="15" fill="rgb(239,155,29)"/><text x="554.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.38%)</title><rect x="555" y="324" width="5" height="15" fill="rgb(213,12,41)"/><text x="558.00" y="334.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.38%)</title><rect x="564" y="292" width="4" height="15" fill="rgb(228,172,38)"/><text x="567.00" y="302.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.38%)</title><rect x="564" y="308" width="4" height="15" fill="rgb(235,176,42)"/><text x="567.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.38%)</title><rect x="568" y="308" width="5" height="15" fill="rgb(209,110,34)"/><text x="571.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.38%)</title><rect x="568" y="324" width="5" height="15" fill="rgb(250,144,2)"/><text x="571.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.75%)</title><rect x="568" y="292" width="9" height="15" fill="rgb(222,64,49)"/><text x="571.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.38%)</title><rect x="573" y="308" width="4" height="15" fill="rgb(220,170,2)"/><text x="576.00" y="318.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.38%)</title><rect x="573" y="324" width="4" height="15" fill="rgb(247,128,39)"/><text x="576.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.75%)</title><rect x="577" y="308" width="9" height="15" fill="rgb(205,141,50)"/><text x="580.00" y="318.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (114 samples, 42.86%)</title><rect x="85" y="100" width="506" height="15" fill="rgb(208,50,18)"/><text x="88.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (113 samples, 42.48%)</title><rect x="89" y="116" width="502" height="15" fill="rgb(252,149,0)"/><text x="92.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (112 samples, 42.11%)</title><rect x="94" y="132" width="497" height="15" fill="rgb(218,83,45)"/><text x="97.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (112 samples, 42.11%)</title><rect x="94" y="148" width="497" height="15" fill="rgb(228,162,14)"/><text x="97.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (108 samples, 40.60%)</title><rect x="112" y="164" width="479" height="15" fill="rgb(252,45,24)"/><text x="115.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (99 samples, 37.22%)</title><rect x="151" y="180" width="440" height="15" fill="rgb(240,74,18)"/><text x="154.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (73 samples, 27.44%)</title><rect x="267" y="196" width="324" height="15" fill="rgb(252,166,41)"/><text x="270.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (63 samples, 23.68%)</title><rect x="311" y="212" width="280" height="15" fill="rgb(224,67,21)"/><text x="314.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 12.41%)</title><rect x="444" y="228" width="147" height="15" fill="rgb(207,79,48)"/><text x="447.00" y="238.50">_run (mlprodict/on..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 12.03%)</title><rect x="449" y="244" width="142" height="15" fill="rgb(216,17,43)"/><text x="452.00" y="254.50">norm_l1 (mlprodict..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.76%)</title><rect x="546" y="260" width="45" height="15" fill="rgb(218,187,1)"/><text x="549.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.63%)</title><rect x="560" y="276" width="31" height="15" fill="rgb(218,94,12)"/><text x="563.00" y="286.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 1.13%)</title><rect x="577" y="292" width="14" height="15" fill="rgb(251,49,5)"/><text x="580.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.38%)</title><rect x="586" y="308" width="5" height="15" fill="rgb(206,144,0)"/><text x="589.00" y="318.50"></text></g><g><title>0x7f75a1ffa5b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.38%)</title><rect x="586" y="324" width="5" height="15" fill="rgb(207,137,13)"/><text x="589.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (115 samples, 43.23%)</title><rect x="85" y="68" width="510" height="15" fill="rgb(225,205,33)"/><text x="88.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverlibline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (115 samples, 43.23%)</title><rect x="85" y="84" width="510" height="15" fill="rgb(207,197,34)"/><text x="88.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblin..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="591" y="100" width="4" height="15" fill="rgb(229,170,45)"/><text x="594.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="591" y="116" width="4" height="15" fill="rgb(221,39,1)"/><text x="594.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.38%)</title><rect x="591" y="132" width="4" height="15" fill="rgb(219,132,6)"/><text x="594.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.38%)</title><rect x="591" y="148" width="4" height="15" fill="rgb(209,221,45)"/><text x="594.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.38%)</title><rect x="591" y="164" width="4" height="15" fill="rgb(225,6,48)"/><text x="594.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.38%)</title><rect x="591" y="180" width="4" height="15" fill="rgb(209,9,22)"/><text x="594.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.38%)</title><rect x="591" y="196" width="4" height="15" fill="rgb(234,144,34)"/><text x="594.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="212" width="4" height="15" fill="rgb(248,17,44)"/><text x="594.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="228" width="4" height="15" fill="rgb(226,11,32)"/><text x="594.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="244" width="4" height="15" fill="rgb(216,51,48)"/><text x="594.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="591" y="260" width="4" height="15" fill="rgb(208,149,6)"/><text x="594.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="276" width="4" height="15" fill="rgb(220,79,6)"/><text x="594.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.38%)</title><rect x="591" y="292" width="4" height="15" fill="rgb(226,162,20)"/><text x="594.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="308" width="4" height="15" fill="rgb(208,103,25)"/><text x="594.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="324" width="4" height="15" fill="rgb(253,211,33)"/><text x="594.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="340" width="4" height="15" fill="rgb(233,118,16)"/><text x="594.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="591" y="356" width="4" height="15" fill="rgb(221,225,13)"/><text x="594.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="372" width="4" height="15" fill="rgb(233,182,15)"/><text x="594.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.38%)</title><rect x="591" y="388" width="4" height="15" fill="rgb(213,157,7)"/><text x="594.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="404" width="4" height="15" fill="rgb(245,101,1)"/><text x="594.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="420" width="4" height="15" fill="rgb(230,208,11)"/><text x="594.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="436" width="4" height="15" fill="rgb(221,161,1)"/><text x="594.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.38%)</title><rect x="591" y="452" width="4" height="15" fill="rgb(242,104,2)"/><text x="594.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.38%)</title><rect x="591" y="468" width="4" height="15" fill="rgb(250,105,20)"/><text x="594.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.38%)</title><rect x="591" y="484" width="4" height="15" fill="rgb(209,77,18)"/><text x="594.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.38%)</title><rect x="591" y="500" width="4" height="15" fill="rgb(252,105,1)"/><text x="594.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="591" y="516" width="4" height="15" fill="rgb(236,203,26)"/><text x="594.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="591" y="532" width="4" height="15" fill="rgb(213,137,6)"/><text x="594.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="591" y="548" width="4" height="15" fill="rgb(232,178,9)"/><text x="594.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.38%)</title><rect x="591" y="564" width="4" height="15" fill="rgb(237,53,20)"/><text x="594.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.38%)</title><rect x="591" y="580" width="4" height="15" fill="rgb(209,48,34)"/><text x="594.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="596" width="4" height="15" fill="rgb(229,127,43)"/><text x="594.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.38%)</title><rect x="591" y="612" width="4" height="15" fill="rgb(237,219,54)"/><text x="594.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.38%)</title><rect x="591" y="628" width="4" height="15" fill="rgb(235,14,39)"/><text x="594.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="644" width="4" height="15" fill="rgb(230,88,39)"/><text x="594.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.38%)</title><rect x="591" y="660" width="4" height="15" fill="rgb(224,201,40)"/><text x="594.00" y="670.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.38%)</title><rect x="591" y="676" width="4" height="15" fill="rgb(210,189,11)"/><text x="594.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="692" width="4" height="15" fill="rgb(251,145,54)"/><text x="594.00" y="702.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="708" width="4" height="15" fill="rgb(209,212,41)"/><text x="594.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="724" width="4" height="15" fill="rgb(249,82,22)"/><text x="594.00" y="734.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="740" width="4" height="15" fill="rgb(241,167,23)"/><text x="594.00" y="750.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="756" width="4" height="15" fill="rgb(244,213,5)"/><text x="594.00" y="766.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.38%)</title><rect x="591" y="772" width="4" height="15" fill="rgb(232,130,2)"/><text x="594.00" y="782.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.38%)</title><rect x="591" y="788" width="4" height="15" fill="rgb(221,208,24)"/><text x="594.00" y="798.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.75%)</title><rect x="657" y="180" width="9" height="15" fill="rgb(251,174,50)"/><text x="660.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.75%)</title><rect x="657" y="196" width="9" height="15" fill="rgb(205,100,5)"/><text x="660.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.38%)</title><rect x="662" y="212" width="4" height="15" fill="rgb(252,38,20)"/><text x="665.00" y="222.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.38%)</title><rect x="662" y="228" width="4" height="15" fill="rgb(249,61,30)"/><text x="665.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.50%)</title><rect x="670" y="244" width="18" height="15" fill="rgb(233,74,14)"/><text x="673.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.13%)</title><rect x="675" y="260" width="13" height="15" fill="rgb(224,96,49)"/><text x="678.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.75%)</title><rect x="679" y="276" width="9" height="15" fill="rgb(209,172,2)"/><text x="682.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.75%)</title><rect x="679" y="292" width="9" height="15" fill="rgb(240,64,41)"/><text x="682.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.75%)</title><rect x="679" y="308" width="9" height="15" fill="rgb(240,4,47)"/><text x="682.00" y="318.50"></text></g><g><title>0x7f75a2deee50 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="684" y="324" width="4" height="15" fill="rgb(251,6,31)"/><text x="687.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.75%)</title><rect x="697" y="292" width="9" height="15" fill="rgb(225,42,19)"/><text x="700.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.38%)</title><rect x="702" y="308" width="4" height="15" fill="rgb(207,62,31)"/><text x="705.00" y="318.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.38%)</title><rect x="715" y="340" width="4" height="15" fill="rgb(240,229,23)"/><text x="718.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.38%)</title><rect x="715" y="356" width="4" height="15" fill="rgb(224,166,18)"/><text x="718.00" y="366.50"></text></g><g><title>0x7f75a2d90a74 (libc-2.29.so) (1 samples, 0.38%)</title><rect x="715" y="372" width="4" height="15" fill="rgb(206,175,42)"/><text x="718.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 2.26%)</title><rect x="697" y="276" width="27" height="15" fill="rgb(249,120,6)"/><text x="700.00" y="286.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 1.50%)</title><rect x="706" y="292" width="18" height="15" fill="rgb(229,150,5)"/><text x="709.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 1.50%)</title><rect x="706" y="308" width="18" height="15" fill="rgb(215,55,36)"/><text x="709.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (4 samples, 1.50%)</title><rect x="706" y="324" width="18" height="15" fill="rgb(242,176,51)"/><text x="709.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.38%)</title><rect x="719" y="340" width="5" height="15" fill="rgb(249,140,37)"/><text x="722.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.38%)</title><rect x="719" y="356" width="5" height="15" fill="rgb(235,225,49)"/><text x="722.00" y="366.50"></text></g><g><title>array_sum (methods.c) (14 samples, 5.26%)</title><rect x="666" y="180" width="62" height="15" fill="rgb(210,118,21)"/><text x="669.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 5.26%)</title><rect x="666" y="196" width="62" height="15" fill="rgb(232,14,25)"/><text x="669.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 5.26%)</title><rect x="666" y="212" width="62" height="15" fill="rgb(219,58,27)"/><text x="669.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.89%)</title><rect x="670" y="228" width="58" height="15" fill="rgb(240,197,41)"/><text x="673.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 3.38%)</title><rect x="688" y="244" width="40" height="15" fill="rgb(222,167,8)"/><text x="691.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 2.63%)</title><rect x="697" y="260" width="31" height="15" fill="rgb(246,138,47)"/><text x="700.00" y="270.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.38%)</title><rect x="724" y="276" width="4" height="15" fill="rgb(251,222,20)"/><text x="727.00" y="286.50"></text></g><g><title>try_binary_elide (temp_elide.c) (3 samples, 1.13%)</title><rect x="746" y="212" width="13" height="15" fill="rgb(212,189,11)"/><text x="749.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.38%)</title><rect x="755" y="228" width="4" height="15" fill="rgb(249,1,1)"/><text x="758.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.38%)</title><rect x="755" y="244" width="4" height="15" fill="rgb(244,63,34)"/><text x="758.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.38%)</title><rect x="759" y="228" width="5" height="15" fill="rgb(226,63,19)"/><text x="762.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.38%)</title><rect x="759" y="244" width="5" height="15" fill="rgb(217,153,53)"/><text x="762.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.38%)</title><rect x="759" y="260" width="5" height="15" fill="rgb(245,155,51)"/><text x="762.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.38%)</title><rect x="768" y="276" width="5" height="15" fill="rgb(215,116,47)"/><text x="771.00" y="286.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.38%)</title><rect x="773" y="276" width="4" height="15" fill="rgb(218,29,49)"/><text x="776.00" y="286.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.38%)</title><rect x="777" y="276" width="4" height="15" fill="rgb(232,113,29)"/><text x="780.00" y="286.50"></text></g><g><title>array_add (number.c) (9 samples, 3.38%)</title><rect x="746" y="196" width="40" height="15" fill="rgb(236,97,30)"/><text x="749.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.26%)</title><rect x="759" y="212" width="27" height="15" fill="rgb(212,129,6)"/><text x="762.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.88%)</title><rect x="764" y="228" width="22" height="15" fill="rgb(212,69,32)"/><text x="767.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.50%)</title><rect x="768" y="244" width="18" height="15" fill="rgb(247,114,29)"/><text x="771.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.50%)</title><rect x="768" y="260" width="18" height="15" fill="rgb(228,138,17)"/><text x="771.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.38%)</title><rect x="781" y="276" width="5" height="15" fill="rgb(227,19,54)"/><text x="784.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.38%)</title><rect x="781" y="292" width="5" height="15" fill="rgb(209,122,13)"/><text x="784.00" y="302.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 1.88%)</title><rect x="870" y="212" width="22" height="15" fill="rgb(249,162,29)"/><text x="873.00" y="222.50">_..</text></g><g><title>__exit__ (warnings.py) (1 samples, 0.38%)</title><rect x="892" y="212" width="5" height="15" fill="rgb(243,193,28)"/><text x="895.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.38%)</title><rect x="897" y="212" width="4" height="15" fill="rgb(245,47,52)"/><text x="900.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 3.01%)</title><rect x="901" y="212" width="36" height="15" fill="rgb(253,102,48)"/><text x="904.00" y="222.50">_as..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.75%)</title><rect x="928" y="228" width="9" height="15" fill="rgb(207,97,9)"/><text x="931.00" y="238.50"></text></g><g><title>0x7f75a2deee7a (libc-2.29.so) (1 samples, 0.38%)</title><rect x="932" y="244" width="5" height="15" fill="rgb(240,147,44)"/><text x="935.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.38%)</title><rect x="937" y="212" width="4" height="15" fill="rgb(237,64,33)"/><text x="940.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.38%)</title><rect x="977" y="228" width="4" height="15" fill="rgb(219,206,46)"/><text x="980.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.50%)</title><rect x="981" y="228" width="18" height="15" fill="rgb(225,203,47)"/><text x="984.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.75%)</title><rect x="990" y="244" width="9" height="15" fill="rgb(227,42,19)"/><text x="993.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 5.26%)</title><rect x="941" y="212" width="62" height="15" fill="rgb(249,39,50)"/><text x="944.00" y="222.50">_num_s..</text></g><g><title>array_shape_get (getset.c) (1 samples, 0.38%)</title><rect x="999" y="228" width="4" height="15" fill="rgb(207,229,37)"/><text x="1002.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.75%)</title><rect x="1003" y="212" width="9" height="15" fill="rgb(243,133,22)"/><text x="1006.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.38%)</title><rect x="1008" y="228" width="4" height="15" fill="rgb(211,213,30)"/><text x="1011.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.88%)</title><rect x="1012" y="212" width="22" height="15" fill="rgb(238,39,45)"/><text x="1015.00" y="222.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.75%)</title><rect x="1025" y="228" width="9" height="15" fill="rgb(229,65,6)"/><text x="1028.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (58 samples, 21.80%)</title><rect x="786" y="196" width="257" height="15" fill="rgb(208,146,54)"/><text x="789.00" y="206.50">check_array (sklearn/utils/validat..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.75%)</title><rect x="1034" y="212" width="9" height="15" fill="rgb(242,2,1)"/><text x="1037.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.38%)</title><rect x="1039" y="228" width="4" height="15" fill="rgb(217,228,33)"/><text x="1042.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 2.26%)</title><rect x="1043" y="196" width="27" height="15" fill="rgb(225,80,10)"/><text x="1046.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 1.88%)</title><rect x="1048" y="212" width="22" height="15" fill="rgb(246,82,30)"/><text x="1051.00" y="222.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.38%)</title><rect x="1065" y="228" width="5" height="15" fill="rgb(235,163,39)"/><text x="1068.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.75%)</title><rect x="1074" y="276" width="9" height="15" fill="rgb(217,53,13)"/><text x="1077.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.38%)</title><rect x="1079" y="292" width="4" height="15" fill="rgb(236,140,45)"/><text x="1082.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.38%)</title><rect x="1079" y="308" width="4" height="15" fill="rgb(242,21,33)"/><text x="1082.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.13%)</title><rect x="1074" y="260" width="13" height="15" fill="rgb(229,149,54)"/><text x="1077.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1083" y="276" width="4" height="15" fill="rgb(251,202,28)"/><text x="1086.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1083" y="292" width="4" height="15" fill="rgb(214,62,15)"/><text x="1086.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.38%)</title><rect x="1083" y="308" width="4" height="15" fill="rgb(214,102,50)"/><text x="1086.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.38%)</title><rect x="1083" y="324" width="4" height="15" fill="rgb(207,116,45)"/><text x="1086.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.38%)</title><rect x="1087" y="260" width="5" height="15" fill="rgb(239,219,50)"/><text x="1090.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1087" y="276" width="5" height="15" fill="rgb(223,202,43)"/><text x="1090.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1087" y="292" width="5" height="15" fill="rgb(246,143,21)"/><text x="1090.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.38%)</title><rect x="1087" y="308" width="5" height="15" fill="rgb(212,92,50)"/><text x="1090.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1092" y="260" width="4" height="15" fill="rgb(227,203,52)"/><text x="1095.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.38%)</title><rect x="1092" y="276" width="4" height="15" fill="rgb(237,186,40)"/><text x="1095.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.26%)</title><rect x="1074" y="228" width="27" height="15" fill="rgb(214,150,18)"/><text x="1077.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (6 samples, 2.26%)</title><rect x="1074" y="244" width="27" height="15" fill="rgb(218,162,18)"/><text x="1077.00" y="254.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1096" y="260" width="5" height="15" fill="rgb(216,175,22)"/><text x="1099.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (85 samples, 31.95%)</title><rect x="728" y="180" width="377" height="15" fill="rgb(251,101,22)"/><text x="731.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (8 samples, 3.01%)</title><rect x="1070" y="196" width="35" height="15" fill="rgb(218,184,5)"/><text x="1073.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.63%)</title><rect x="1074" y="212" width="31" height="15" fill="rgb(216,74,45)"/><text x="1077.00" y="222.50">uf..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1101" y="228" width="4" height="15" fill="rgb(239,83,6)"/><text x="1104.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.75%)</title><rect x="1105" y="196" width="9" height="15" fill="rgb(230,178,9)"/><text x="1108.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.38%)</title><rect x="1110" y="212" width="4" height="15" fill="rgb(212,49,0)"/><text x="1113.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.38%)</title><rect x="1110" y="228" width="4" height="15" fill="rgb(253,154,32)"/><text x="1113.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.75%)</title><rect x="1119" y="212" width="8" height="15" fill="rgb(215,75,28)"/><text x="1122.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.38%)</title><rect x="1127" y="228" width="5" height="15" fill="rgb(212,86,20)"/><text x="1130.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.38%)</title><rect x="1127" y="244" width="5" height="15" fill="rgb(223,110,23)"/><text x="1130.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.38%)</title><rect x="1127" y="260" width="5" height="15" fill="rgb(232,48,30)"/><text x="1130.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.38%)</title><rect x="1127" y="276" width="5" height="15" fill="rgb(211,103,50)"/><text x="1130.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.38%)</title><rect x="1132" y="244" width="4" height="15" fill="rgb(248,199,43)"/><text x="1135.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1136" y="244" width="5" height="15" fill="rgb(226,129,23)"/><text x="1139.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.38%)</title><rect x="1136" y="260" width="5" height="15" fill="rgb(249,76,18)"/><text x="1139.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.50%)</title><rect x="1127" y="212" width="18" height="15" fill="rgb(253,131,1)"/><text x="1130.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.13%)</title><rect x="1132" y="228" width="13" height="15" fill="rgb(235,209,26)"/><text x="1135.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.38%)</title><rect x="1141" y="244" width="4" height="15" fill="rgb(233,147,53)"/><text x="1144.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.38%)</title><rect x="1141" y="260" width="4" height="15" fill="rgb(211,74,44)"/><text x="1144.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 3.01%)</title><rect x="1114" y="196" width="36" height="15" fill="rgb(219,215,54)"/><text x="1117.00" y="206.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1145" y="212" width="5" height="15" fill="rgb(237,166,10)"/><text x="1148.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (112 samples, 42.11%)</title><rect x="657" y="164" width="497" height="15" fill="rgb(247,111,51)"/><text x="660.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 4.14%)</title><rect x="1105" y="180" width="49" height="15" fill="rgb(248,114,5)"/><text x="1108.00" y="190.50">ufun..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.38%)</title><rect x="1150" y="196" width="4" height="15" fill="rgb(228,56,26)"/><text x="1153.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 47.37%)</title><rect x="626" y="132" width="559" height="15" fill="rgb(229,74,18)"/><text x="629.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (125 samples, 46.99%)</title><rect x="631" y="148" width="554" height="15" fill="rgb(206,199,14)"/><text x="634.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 2.63%)</title><rect x="1154" y="164" width="31" height="15" fill="rgb(224,218,3)"/><text x="1157.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 2.26%)</title><rect x="1158" y="180" width="27" height="15" fill="rgb(244,104,40)"/><text x="1161.00" y="190.50">&lt;..</text></g><g><title>all (266 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(230,123,47)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (266 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(243,84,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (134 samples, 50.38%)</title><rect x="595" y="68" width="595" height="15" fill="rgb(248,21,43)"/><text x="598.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_do..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (134 samples, 50.38%)</title><rect x="595" y="84" width="595" height="15" fill="rgb(216,51,33)"/><text x="598.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double_.py) (134 samples, 50.38%)</title><rect x="595" y="100" width="595" height="15" fill="rgb(214,215,51)"/><text x="598.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_double..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 48.87%)</title><rect x="613" y="116" width="577" height="15" fill="rgb(254,50,4)"/><text x="616.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.38%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(206,22,13)"/><text x="1188.00" y="142.50"></text></g><g><title>0x7f75a2eb6e8b (libc-2.29.so) (1 samples, 0.38%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(216,218,12)"/><text x="1188.00" y="158.50"></text></g></g></svg>