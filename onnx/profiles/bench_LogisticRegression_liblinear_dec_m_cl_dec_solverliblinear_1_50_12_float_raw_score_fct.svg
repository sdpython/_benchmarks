<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(219,145,2)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(223,62,45)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(221,102,43)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(238,185,28)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(222,216,5)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(228,175,53)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(254,212,47)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(224,168,45)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(254,224,39)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(238,87,40)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.40%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(229,7,5)"/><text x="13.00" y="1038.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.40%)</title><rect x="10" y="1044" width="4" height="15" fill="rgb(223,95,1)"/><text x="13.00" y="1054.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.40%)</title><rect x="10" y="1060" width="4" height="15" fill="rgb(245,41,35)"/><text x="13.00" y="1070.50"></text></g><g><title>0x7fa8695bf6c2 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="10" y="1076" width="4" height="15" fill="rgb(250,46,15)"/><text x="13.00" y="1086.50"></text></g><g><title>0x7fa86962b383 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="10" y="1092" width="4" height="15" fill="rgb(248,83,25)"/><text x="13.00" y="1102.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="14" y="868" width="10" height="15" fill="rgb(228,25,40)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="14" y="884" width="10" height="15" fill="rgb(243,112,17)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="14" y="900" width="10" height="15" fill="rgb(218,95,33)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(209,41,27)"/><text x="22.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(250,29,40)"/><text x="22.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(215,195,7)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(241,206,15)"/><text x="22.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(212,8,3)"/><text x="22.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(208,152,40)"/><text x="22.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.40%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(205,223,16)"/><text x="22.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.40%)</title><rect x="19" y="1028" width="5" height="15" fill="rgb(212,42,36)"/><text x="22.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="19" y="1044" width="5" height="15" fill="rgb(210,5,23)"/><text x="22.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.40%)</title><rect x="19" y="1060" width="5" height="15" fill="rgb(241,19,31)"/><text x="22.00" y="1070.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(230,69,1)"/><text x="27.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(230,66,16)"/><text x="27.00" y="910.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="29" y="900" width="9" height="15" fill="rgb(239,59,50)"/><text x="32.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="29" y="916" width="9" height="15" fill="rgb(247,197,46)"/><text x="32.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.81%)</title><rect x="29" y="932" width="9" height="15" fill="rgb(208,141,9)"/><text x="32.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.81%)</title><rect x="29" y="948" width="9" height="15" fill="rgb(236,112,11)"/><text x="32.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="33" y="964" width="5" height="15" fill="rgb(240,182,23)"/><text x="36.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="33" y="980" width="5" height="15" fill="rgb(229,178,10)"/><text x="36.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 2.83%)</title><rect x="10" y="836" width="33" height="15" fill="rgb(230,108,23)"/><text x="13.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 2.83%)</title><rect x="10" y="852" width="33" height="15" fill="rgb(218,25,25)"/><text x="13.00" y="862.50">_i..</text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.62%)</title><rect x="24" y="868" width="19" height="15" fill="rgb(228,121,0)"/><text x="27.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.21%)</title><rect x="29" y="884" width="14" height="15" fill="rgb(237,140,34)"/><text x="32.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="38" y="900" width="5" height="15" fill="rgb(217,147,51)"/><text x="41.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.40%)</title><rect x="38" y="916" width="5" height="15" fill="rgb(222,157,0)"/><text x="41.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="38" y="932" width="5" height="15" fill="rgb(205,18,31)"/><text x="41.00" y="942.50"></text></g><g><title>0x7fa86964e237 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="38" y="948" width="5" height="15" fill="rgb(246,201,15)"/><text x="41.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 3.24%)</title><rect x="10" y="292" width="38" height="15" fill="rgb(239,122,20)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="308" width="38" height="15" fill="rgb(252,192,29)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="324" width="38" height="15" fill="rgb(220,136,22)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="340" width="38" height="15" fill="rgb(239,12,53)"/><text x="13.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.24%)</title><rect x="10" y="356" width="38" height="15" fill="rgb(231,187,25)"/><text x="13.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="372" width="38" height="15" fill="rgb(243,43,11)"/><text x="13.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 3.24%)</title><rect x="10" y="388" width="38" height="15" fill="rgb(225,181,4)"/><text x="13.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="404" width="38" height="15" fill="rgb(250,106,51)"/><text x="13.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="420" width="38" height="15" fill="rgb(252,186,48)"/><text x="13.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="436" width="38" height="15" fill="rgb(213,5,43)"/><text x="13.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.24%)</title><rect x="10" y="452" width="38" height="15" fill="rgb(227,123,49)"/><text x="13.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="468" width="38" height="15" fill="rgb(251,152,37)"/><text x="13.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 3.24%)</title><rect x="10" y="484" width="38" height="15" fill="rgb(212,30,4)"/><text x="13.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="500" width="38" height="15" fill="rgb(235,204,0)"/><text x="13.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="516" width="38" height="15" fill="rgb(219,128,5)"/><text x="13.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="532" width="38" height="15" fill="rgb(230,108,46)"/><text x="13.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.24%)</title><rect x="10" y="548" width="38" height="15" fill="rgb(241,148,16)"/><text x="13.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="564" width="38" height="15" fill="rgb(234,42,44)"/><text x="13.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 3.24%)</title><rect x="10" y="580" width="38" height="15" fill="rgb(213,184,19)"/><text x="13.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="596" width="38" height="15" fill="rgb(252,127,11)"/><text x="13.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="612" width="38" height="15" fill="rgb(211,51,36)"/><text x="13.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="628" width="38" height="15" fill="rgb(224,44,39)"/><text x="13.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="644" width="38" height="15" fill="rgb(235,194,25)"/><text x="13.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="660" width="38" height="15" fill="rgb(214,4,53)"/><text x="13.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="676" width="38" height="15" fill="rgb(231,126,40)"/><text x="13.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.24%)</title><rect x="10" y="692" width="38" height="15" fill="rgb(253,1,39)"/><text x="13.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="708" width="38" height="15" fill="rgb(214,73,7)"/><text x="13.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 3.24%)</title><rect x="10" y="724" width="38" height="15" fill="rgb(252,213,0)"/><text x="13.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="740" width="38" height="15" fill="rgb(235,127,47)"/><text x="13.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="756" width="38" height="15" fill="rgb(221,64,2)"/><text x="13.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="772" width="38" height="15" fill="rgb(205,196,17)"/><text x="13.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.24%)</title><rect x="10" y="788" width="38" height="15" fill="rgb(221,69,27)"/><text x="13.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.24%)</title><rect x="10" y="804" width="38" height="15" fill="rgb(241,193,19)"/><text x="13.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 3.24%)</title><rect x="10" y="820" width="38" height="15" fill="rgb(210,228,6)"/><text x="13.00" y="830.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="836" width="5" height="15" fill="rgb(222,20,41)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="852" width="5" height="15" fill="rgb(220,176,24)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="868" width="5" height="15" fill="rgb(215,0,51)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="43" y="884" width="5" height="15" fill="rgb(223,99,12)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="900" width="5" height="15" fill="rgb(207,33,3)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.40%)</title><rect x="43" y="916" width="5" height="15" fill="rgb(241,61,42)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="932" width="5" height="15" fill="rgb(254,74,3)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="948" width="5" height="15" fill="rgb(240,202,3)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="964" width="5" height="15" fill="rgb(222,95,24)"/><text x="46.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="980" width="5" height="15" fill="rgb(254,155,28)"/><text x="46.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.40%)</title><rect x="43" y="996" width="5" height="15" fill="rgb(232,94,30)"/><text x="46.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1012" width="5" height="15" fill="rgb(248,168,41)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1028" width="5" height="15" fill="rgb(227,75,40)"/><text x="46.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1044" width="5" height="15" fill="rgb(227,134,16)"/><text x="46.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="43" y="1060" width="5" height="15" fill="rgb(224,7,7)"/><text x="46.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="1076" width="5" height="15" fill="rgb(252,2,54)"/><text x="46.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="43" y="1092" width="5" height="15" fill="rgb(249,19,9)"/><text x="46.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.40%)</title><rect x="43" y="1108" width="5" height="15" fill="rgb(249,181,33)"/><text x="46.00" y="1118.50"></text></g><g><title>compile (re.py) (1 samples, 0.40%)</title><rect x="43" y="1124" width="5" height="15" fill="rgb(251,16,22)"/><text x="46.00" y="1134.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="43" y="1140" width="5" height="15" fill="rgb(248,101,45)"/><text x="46.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="43" y="1156" width="5" height="15" fill="rgb(250,48,8)"/><text x="46.00" y="1166.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="43" y="1172" width="5" height="15" fill="rgb(226,226,53)"/><text x="46.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="43" y="1188" width="5" height="15" fill="rgb(232,171,0)"/><text x="46.00" y="1198.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="43" y="1204" width="5" height="15" fill="rgb(251,52,8)"/><text x="46.00" y="1214.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="43" y="1220" width="5" height="15" fill="rgb(225,135,1)"/><text x="46.00" y="1230.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="43" y="1236" width="5" height="15" fill="rgb(225,11,10)"/><text x="46.00" y="1246.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.40%)</title><rect x="43" y="1252" width="5" height="15" fill="rgb(253,172,42)"/><text x="46.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="48" y="1012" width="9" height="15" fill="rgb(225,195,14)"/><text x="51.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.81%)</title><rect x="48" y="1028" width="9" height="15" fill="rgb(211,221,50)"/><text x="51.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.81%)</title><rect x="48" y="1044" width="9" height="15" fill="rgb(218,107,18)"/><text x="51.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (2 samples, 0.81%)</title><rect x="48" y="1060" width="9" height="15" fill="rgb(245,72,48)"/><text x="51.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (2 samples, 0.81%)</title><rect x="48" y="1076" width="9" height="15" fill="rgb(213,65,52)"/><text x="51.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.40%)</title><rect x="52" y="1092" width="5" height="15" fill="rgb(251,18,53)"/><text x="55.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="308" width="14" height="15" fill="rgb(215,77,40)"/><text x="51.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="324" width="14" height="15" fill="rgb(231,153,40)"/><text x="51.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="340" width="14" height="15" fill="rgb(241,91,4)"/><text x="51.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="356" width="14" height="15" fill="rgb(243,30,18)"/><text x="51.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="372" width="14" height="15" fill="rgb(212,106,53)"/><text x="51.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 1.21%)</title><rect x="48" y="388" width="14" height="15" fill="rgb(211,89,50)"/><text x="51.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="404" width="14" height="15" fill="rgb(252,64,37)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="420" width="14" height="15" fill="rgb(250,74,43)"/><text x="51.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="436" width="14" height="15" fill="rgb(252,14,3)"/><text x="51.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="452" width="14" height="15" fill="rgb(209,93,37)"/><text x="51.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="468" width="14" height="15" fill="rgb(212,154,48)"/><text x="51.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 1.21%)</title><rect x="48" y="484" width="14" height="15" fill="rgb(246,112,29)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="500" width="14" height="15" fill="rgb(236,122,9)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="516" width="14" height="15" fill="rgb(216,8,32)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="532" width="14" height="15" fill="rgb(247,121,18)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="548" width="14" height="15" fill="rgb(229,39,7)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="564" width="14" height="15" fill="rgb(205,228,14)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 1.21%)</title><rect x="48" y="580" width="14" height="15" fill="rgb(221,31,1)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="596" width="14" height="15" fill="rgb(214,207,14)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="612" width="14" height="15" fill="rgb(250,169,3)"/><text x="51.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="628" width="14" height="15" fill="rgb(253,177,10)"/><text x="51.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="644" width="14" height="15" fill="rgb(227,52,10)"/><text x="51.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="660" width="14" height="15" fill="rgb(224,9,4)"/><text x="51.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 1.21%)</title><rect x="48" y="676" width="14" height="15" fill="rgb(252,181,18)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="692" width="14" height="15" fill="rgb(210,209,10)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="708" width="14" height="15" fill="rgb(245,47,37)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="724" width="14" height="15" fill="rgb(205,152,35)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="740" width="14" height="15" fill="rgb(247,178,51)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="756" width="14" height="15" fill="rgb(247,135,33)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 1.21%)</title><rect x="48" y="772" width="14" height="15" fill="rgb(244,0,10)"/><text x="51.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="788" width="14" height="15" fill="rgb(251,21,12)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="804" width="14" height="15" fill="rgb(229,201,42)"/><text x="51.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="820" width="14" height="15" fill="rgb(245,2,49)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="836" width="14" height="15" fill="rgb(233,192,47)"/><text x="51.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="852" width="14" height="15" fill="rgb(234,92,31)"/><text x="51.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="868" width="14" height="15" fill="rgb(214,108,42)"/><text x="51.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="884" width="14" height="15" fill="rgb(207,10,17)"/><text x="51.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 1.21%)</title><rect x="48" y="900" width="14" height="15" fill="rgb(241,22,18)"/><text x="51.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="916" width="14" height="15" fill="rgb(224,111,47)"/><text x="51.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="932" width="14" height="15" fill="rgb(225,110,15)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="948" width="14" height="15" fill="rgb(216,173,31)"/><text x="51.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="964" width="14" height="15" fill="rgb(223,163,43)"/><text x="51.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="48" y="980" width="14" height="15" fill="rgb(229,5,19)"/><text x="51.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="48" y="996" width="14" height="15" fill="rgb(250,209,10)"/><text x="51.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1012" width="5" height="15" fill="rgb(209,71,46)"/><text x="60.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1028" width="5" height="15" fill="rgb(218,188,24)"/><text x="60.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="10" y="196" width="57" height="15" fill="rgb(237,189,54)"/><text x="13.00" y="206.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="10" y="212" width="57" height="15" fill="rgb(254,37,23)"/><text x="13.00" y="222.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="10" y="228" width="57" height="15" fill="rgb(214,151,36)"/><text x="13.00" y="238.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="10" y="244" width="57" height="15" fill="rgb(210,92,7)"/><text x="13.00" y="254.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.86%)</title><rect x="10" y="260" width="57" height="15" fill="rgb(227,140,49)"/><text x="13.00" y="270.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.86%)</title><rect x="10" y="276" width="57" height="15" fill="rgb(253,192,39)"/><text x="13.00" y="286.50">_call_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.62%)</title><rect x="48" y="292" width="19" height="15" fill="rgb(248,212,24)"/><text x="51.00" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="308" width="5" height="15" fill="rgb(249,82,9)"/><text x="65.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="324" width="5" height="15" fill="rgb(247,132,14)"/><text x="65.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="340" width="5" height="15" fill="rgb(237,125,30)"/><text x="65.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="356" width="5" height="15" fill="rgb(239,222,42)"/><text x="65.00" y="366.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="372" width="5" height="15" fill="rgb(206,199,38)"/><text x="65.00" y="382.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="388" width="5" height="15" fill="rgb(212,169,44)"/><text x="65.00" y="398.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="404" width="5" height="15" fill="rgb(242,179,7)"/><text x="65.00" y="414.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="420" width="5" height="15" fill="rgb(208,197,12)"/><text x="65.00" y="430.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="436" width="5" height="15" fill="rgb(238,196,48)"/><text x="65.00" y="446.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="452" width="5" height="15" fill="rgb(221,61,43)"/><text x="65.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="484" width="5" height="15" fill="rgb(215,104,39)"/><text x="70.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="500" width="5" height="15" fill="rgb(224,186,46)"/><text x="70.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="516" width="5" height="15" fill="rgb(235,212,31)"/><text x="70.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="532" width="5" height="15" fill="rgb(213,77,40)"/><text x="70.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="548" width="5" height="15" fill="rgb(210,153,38)"/><text x="70.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="564" width="5" height="15" fill="rgb(210,23,25)"/><text x="70.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.40%)</title><rect x="67" y="580" width="5" height="15" fill="rgb(217,167,12)"/><text x="70.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="596" width="5" height="15" fill="rgb(250,46,11)"/><text x="70.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="612" width="5" height="15" fill="rgb(221,140,52)"/><text x="70.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="628" width="5" height="15" fill="rgb(241,64,26)"/><text x="70.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="644" width="5" height="15" fill="rgb(212,171,51)"/><text x="70.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="660" width="5" height="15" fill="rgb(240,47,20)"/><text x="70.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.40%)</title><rect x="67" y="676" width="5" height="15" fill="rgb(207,99,38)"/><text x="70.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="692" width="5" height="15" fill="rgb(252,18,43)"/><text x="70.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="708" width="5" height="15" fill="rgb(227,36,39)"/><text x="70.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="724" width="5" height="15" fill="rgb(219,205,28)"/><text x="70.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="740" width="5" height="15" fill="rgb(224,48,13)"/><text x="70.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="756" width="5" height="15" fill="rgb(248,152,46)"/><text x="70.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.40%)</title><rect x="67" y="772" width="5" height="15" fill="rgb(216,126,45)"/><text x="70.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="788" width="5" height="15" fill="rgb(247,170,52)"/><text x="70.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="804" width="5" height="15" fill="rgb(237,167,7)"/><text x="70.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="820" width="5" height="15" fill="rgb(234,120,5)"/><text x="70.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="836" width="5" height="15" fill="rgb(229,9,0)"/><text x="70.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="852" width="5" height="15" fill="rgb(207,40,23)"/><text x="70.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.40%)</title><rect x="67" y="868" width="5" height="15" fill="rgb(231,3,17)"/><text x="70.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="884" width="5" height="15" fill="rgb(253,13,22)"/><text x="70.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="900" width="5" height="15" fill="rgb(208,96,27)"/><text x="70.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="916" width="5" height="15" fill="rgb(240,199,54)"/><text x="70.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="932" width="5" height="15" fill="rgb(242,69,38)"/><text x="70.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="948" width="5" height="15" fill="rgb(239,161,7)"/><text x="70.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="964" width="5" height="15" fill="rgb(212,224,53)"/><text x="70.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="980" width="5" height="15" fill="rgb(248,87,31)"/><text x="70.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="996" width="5" height="15" fill="rgb(248,173,2)"/><text x="70.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.40%)</title><rect x="67" y="1012" width="5" height="15" fill="rgb(232,177,10)"/><text x="70.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1028" width="5" height="15" fill="rgb(249,166,12)"/><text x="70.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1044" width="5" height="15" fill="rgb(247,84,16)"/><text x="70.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1060" width="5" height="15" fill="rgb(214,172,25)"/><text x="70.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="1076" width="5" height="15" fill="rgb(249,92,4)"/><text x="70.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1092" width="5" height="15" fill="rgb(210,76,22)"/><text x="70.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.40%)</title><rect x="67" y="1108" width="5" height="15" fill="rgb(210,218,46)"/><text x="70.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1124" width="5" height="15" fill="rgb(224,9,26)"/><text x="70.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1140" width="5" height="15" fill="rgb(206,140,9)"/><text x="70.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1156" width="5" height="15" fill="rgb(249,209,43)"/><text x="70.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1172" width="5" height="15" fill="rgb(220,31,5)"/><text x="70.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1188" width="5" height="15" fill="rgb(205,6,13)"/><text x="70.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="1204" width="5" height="15" fill="rgb(212,144,5)"/><text x="70.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1220" width="5" height="15" fill="rgb(244,125,32)"/><text x="70.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.40%)</title><rect x="67" y="1236" width="5" height="15" fill="rgb(206,125,10)"/><text x="70.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1252" width="5" height="15" fill="rgb(209,81,23)"/><text x="70.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1268" width="5" height="15" fill="rgb(253,11,17)"/><text x="70.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1284" width="5" height="15" fill="rgb(236,182,7)"/><text x="70.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1300" width="5" height="15" fill="rgb(207,19,41)"/><text x="70.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1316" width="5" height="15" fill="rgb(207,94,2)"/><text x="70.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="1332" width="5" height="15" fill="rgb(244,228,29)"/><text x="70.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1348" width="5" height="15" fill="rgb(220,7,34)"/><text x="70.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.40%)</title><rect x="67" y="1364" width="5" height="15" fill="rgb(248,189,44)"/><text x="70.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1380" width="5" height="15" fill="rgb(254,203,24)"/><text x="70.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1396" width="5" height="15" fill="rgb(246,117,27)"/><text x="70.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1412" width="5" height="15" fill="rgb(220,97,1)"/><text x="70.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="67" y="1428" width="5" height="15" fill="rgb(227,218,40)"/><text x="70.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="67" y="1444" width="5" height="15" fill="rgb(219,225,18)"/><text x="70.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.40%)</title><rect x="67" y="1460" width="5" height="15" fill="rgb(244,62,2)"/><text x="70.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.40%)</title><rect x="67" y="1476" width="5" height="15" fill="rgb(250,142,20)"/><text x="70.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.40%)</title><rect x="67" y="1492" width="5" height="15" fill="rgb(223,116,25)"/><text x="70.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.40%)</title><rect x="67" y="1508" width="5" height="15" fill="rgb(218,194,51)"/><text x="70.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.40%)</title><rect x="67" y="1524" width="5" height="15" fill="rgb(239,41,42)"/><text x="70.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.40%)</title><rect x="67" y="1540" width="5" height="15" fill="rgb(231,123,1)"/><text x="70.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.40%)</title><rect x="67" y="1556" width="5" height="15" fill="rgb(222,13,5)"/><text x="70.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.40%)</title><rect x="67" y="1572" width="5" height="15" fill="rgb(235,117,3)"/><text x="70.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.40%)</title><rect x="67" y="1588" width="5" height="15" fill="rgb(252,148,49)"/><text x="70.00" y="1598.50"></text></g><g><title>build_doc_url (skl2onnx/algebra/automation.py) (1 samples, 0.40%)</title><rect x="67" y="1604" width="5" height="15" fill="rgb(227,109,24)"/><text x="70.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="772" width="4" height="15" fill="rgb(237,118,2)"/><text x="75.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="788" width="4" height="15" fill="rgb(243,35,25)"/><text x="75.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="804" width="4" height="15" fill="rgb(228,219,28)"/><text x="75.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="820" width="4" height="15" fill="rgb(208,117,0)"/><text x="75.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="72" y="836" width="4" height="15" fill="rgb(213,26,41)"/><text x="75.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="852" width="4" height="15" fill="rgb(222,68,2)"/><text x="75.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.40%)</title><rect x="72" y="868" width="4" height="15" fill="rgb(222,178,10)"/><text x="75.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="884" width="4" height="15" fill="rgb(211,59,44)"/><text x="75.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="900" width="4" height="15" fill="rgb(209,31,28)"/><text x="75.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="916" width="4" height="15" fill="rgb(245,13,16)"/><text x="75.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="72" y="932" width="4" height="15" fill="rgb(235,59,46)"/><text x="75.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="948" width="4" height="15" fill="rgb(231,83,47)"/><text x="75.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.40%)</title><rect x="72" y="964" width="4" height="15" fill="rgb(207,30,10)"/><text x="75.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="980" width="4" height="15" fill="rgb(231,108,0)"/><text x="75.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="996" width="4" height="15" fill="rgb(240,193,2)"/><text x="75.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1012" width="4" height="15" fill="rgb(205,54,24)"/><text x="75.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="72" y="1028" width="4" height="15" fill="rgb(227,78,40)"/><text x="75.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1044" width="4" height="15" fill="rgb(228,22,4)"/><text x="75.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.40%)</title><rect x="72" y="1060" width="4" height="15" fill="rgb(238,216,39)"/><text x="75.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1076" width="4" height="15" fill="rgb(219,27,45)"/><text x="75.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1092" width="4" height="15" fill="rgb(254,19,16)"/><text x="75.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1108" width="4" height="15" fill="rgb(206,77,46)"/><text x="75.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="72" y="1124" width="4" height="15" fill="rgb(233,95,1)"/><text x="75.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1140" width="4" height="15" fill="rgb(214,168,36)"/><text x="75.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py) (1 samples, 0.40%)</title><rect x="72" y="1156" width="4" height="15" fill="rgb(247,84,2)"/><text x="75.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1172" width="4" height="15" fill="rgb(231,180,7)"/><text x="75.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1188" width="4" height="15" fill="rgb(216,191,24)"/><text x="75.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1204" width="4" height="15" fill="rgb(206,98,49)"/><text x="75.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="72" y="1220" width="4" height="15" fill="rgb(215,85,13)"/><text x="75.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="72" y="1236" width="4" height="15" fill="rgb(227,210,47)"/><text x="75.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/generic.py) (1 samples, 0.40%)</title><rect x="72" y="1252" width="4" height="15" fill="rgb(243,13,4)"/><text x="75.00" y="1262.50"></text></g><g><title>create_pandas_abc_type (pandas/core/dtypes/generic.py) (1 samples, 0.40%)</title><rect x="72" y="1268" width="4" height="15" fill="rgb(207,76,30)"/><text x="75.00" y="1278.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.21%)</title><rect x="67" y="340" width="14" height="15" fill="rgb(208,111,39)"/><text x="70.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="67" y="356" width="14" height="15" fill="rgb(211,226,7)"/><text x="70.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="67" y="372" width="14" height="15" fill="rgb(244,61,34)"/><text x="70.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="67" y="388" width="14" height="15" fill="rgb(220,156,45)"/><text x="70.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="67" y="404" width="14" height="15" fill="rgb(242,208,23)"/><text x="70.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="67" y="420" width="14" height="15" fill="rgb(254,41,14)"/><text x="70.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 1.21%)</title><rect x="67" y="436" width="14" height="15" fill="rgb(250,146,32)"/><text x="70.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="67" y="452" width="14" height="15" fill="rgb(208,33,41)"/><text x="70.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="67" y="468" width="14" height="15" fill="rgb(242,140,13)"/><text x="70.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="484" width="9" height="15" fill="rgb(212,149,52)"/><text x="75.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="72" y="500" width="9" height="15" fill="rgb(245,193,26)"/><text x="75.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="516" width="9" height="15" fill="rgb(224,80,24)"/><text x="75.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.81%)</title><rect x="72" y="532" width="9" height="15" fill="rgb(219,113,49)"/><text x="75.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="548" width="9" height="15" fill="rgb(249,27,50)"/><text x="75.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="564" width="9" height="15" fill="rgb(232,222,2)"/><text x="75.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="580" width="9" height="15" fill="rgb(242,179,50)"/><text x="75.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="72" y="596" width="9" height="15" fill="rgb(232,75,51)"/><text x="75.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="612" width="9" height="15" fill="rgb(220,201,44)"/><text x="75.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.81%)</title><rect x="72" y="628" width="9" height="15" fill="rgb(211,35,11)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="644" width="9" height="15" fill="rgb(210,225,35)"/><text x="75.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="660" width="9" height="15" fill="rgb(226,150,51)"/><text x="75.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="676" width="9" height="15" fill="rgb(252,29,5)"/><text x="75.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="72" y="692" width="9" height="15" fill="rgb(214,152,38)"/><text x="75.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="708" width="9" height="15" fill="rgb(231,139,28)"/><text x="75.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.81%)</title><rect x="72" y="724" width="9" height="15" fill="rgb(217,61,27)"/><text x="75.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="740" width="9" height="15" fill="rgb(244,173,50)"/><text x="75.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="72" y="756" width="9" height="15" fill="rgb(247,107,15)"/><text x="75.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="772" width="5" height="15" fill="rgb(205,168,16)"/><text x="79.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="788" width="5" height="15" fill="rgb(221,184,27)"/><text x="79.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="804" width="5" height="15" fill="rgb(238,194,28)"/><text x="79.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="820" width="5" height="15" fill="rgb(250,46,1)"/><text x="79.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="836" width="5" height="15" fill="rgb(208,56,34)"/><text x="79.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="852" width="5" height="15" fill="rgb(236,217,34)"/><text x="79.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="868" width="5" height="15" fill="rgb(244,4,26)"/><text x="79.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="884" width="5" height="15" fill="rgb(254,86,8)"/><text x="79.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="900" width="5" height="15" fill="rgb(218,180,21)"/><text x="79.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.40%)</title><rect x="76" y="916" width="5" height="15" fill="rgb(219,4,39)"/><text x="79.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="932" width="5" height="15" fill="rgb(224,225,10)"/><text x="79.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="948" width="5" height="15" fill="rgb(229,139,49)"/><text x="79.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="964" width="5" height="15" fill="rgb(252,126,17)"/><text x="79.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="980" width="5" height="15" fill="rgb(224,159,49)"/><text x="79.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="996" width="5" height="15" fill="rgb(246,127,47)"/><text x="79.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.40%)</title><rect x="76" y="1012" width="5" height="15" fill="rgb(230,90,0)"/><text x="79.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1028" width="5" height="15" fill="rgb(229,64,54)"/><text x="79.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1044" width="5" height="15" fill="rgb(206,220,54)"/><text x="79.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1060" width="5" height="15" fill="rgb(234,103,46)"/><text x="79.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1076" width="5" height="15" fill="rgb(219,68,46)"/><text x="79.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1092" width="5" height="15" fill="rgb(212,150,32)"/><text x="79.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.40%)</title><rect x="76" y="1108" width="5" height="15" fill="rgb(206,111,29)"/><text x="79.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1124" width="5" height="15" fill="rgb(218,179,17)"/><text x="79.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1140" width="5" height="15" fill="rgb(206,224,20)"/><text x="79.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1156" width="5" height="15" fill="rgb(205,192,53)"/><text x="79.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1172" width="5" height="15" fill="rgb(216,119,30)"/><text x="79.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1188" width="5" height="15" fill="rgb(245,124,39)"/><text x="79.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="1204" width="5" height="15" fill="rgb(210,8,2)"/><text x="79.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1220" width="5" height="15" fill="rgb(240,179,11)"/><text x="79.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1236" width="5" height="15" fill="rgb(251,224,44)"/><text x="79.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1252" width="5" height="15" fill="rgb(221,97,19)"/><text x="79.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1268" width="5" height="15" fill="rgb(210,195,25)"/><text x="79.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1284" width="5" height="15" fill="rgb(225,146,50)"/><text x="79.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.40%)</title><rect x="76" y="1300" width="5" height="15" fill="rgb(232,125,11)"/><text x="79.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1316" width="5" height="15" fill="rgb(211,27,38)"/><text x="79.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1332" width="5" height="15" fill="rgb(248,188,20)"/><text x="79.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1348" width="5" height="15" fill="rgb(246,33,43)"/><text x="79.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1364" width="5" height="15" fill="rgb(213,158,54)"/><text x="79.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1380" width="5" height="15" fill="rgb(212,148,48)"/><text x="79.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="1396" width="5" height="15" fill="rgb(249,109,18)"/><text x="79.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1412" width="5" height="15" fill="rgb(254,107,49)"/><text x="79.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1428" width="5" height="15" fill="rgb(214,155,7)"/><text x="79.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1444" width="5" height="15" fill="rgb(235,83,4)"/><text x="79.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1460" width="5" height="15" fill="rgb(246,207,51)"/><text x="79.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1476" width="5" height="15" fill="rgb(210,164,37)"/><text x="79.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.40%)</title><rect x="76" y="1492" width="5" height="15" fill="rgb(219,86,53)"/><text x="79.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1508" width="5" height="15" fill="rgb(205,223,45)"/><text x="79.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1524" width="5" height="15" fill="rgb(238,42,17)"/><text x="79.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1540" width="5" height="15" fill="rgb(222,36,50)"/><text x="79.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1556" width="5" height="15" fill="rgb(245,183,11)"/><text x="79.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1572" width="5" height="15" fill="rgb(214,177,2)"/><text x="79.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.40%)</title><rect x="76" y="1588" width="5" height="15" fill="rgb(214,101,40)"/><text x="79.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1604" width="5" height="15" fill="rgb(231,169,19)"/><text x="79.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1620" width="5" height="15" fill="rgb(221,204,23)"/><text x="79.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1636" width="5" height="15" fill="rgb(213,189,40)"/><text x="79.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1652" width="5" height="15" fill="rgb(228,107,26)"/><text x="79.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1668" width="5" height="15" fill="rgb(250,111,32)"/><text x="79.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.40%)</title><rect x="76" y="1684" width="5" height="15" fill="rgb(207,113,45)"/><text x="79.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1700" width="5" height="15" fill="rgb(228,61,18)"/><text x="79.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1716" width="5" height="15" fill="rgb(219,128,29)"/><text x="79.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1732" width="5" height="15" fill="rgb(245,68,6)"/><text x="79.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1748" width="5" height="15" fill="rgb(231,141,35)"/><text x="79.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1764" width="5" height="15" fill="rgb(209,210,44)"/><text x="79.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.40%)</title><rect x="76" y="1780" width="5" height="15" fill="rgb(222,225,52)"/><text x="79.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1796" width="5" height="15" fill="rgb(228,183,4)"/><text x="79.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1812" width="5" height="15" fill="rgb(209,129,12)"/><text x="79.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1828" width="5" height="15" fill="rgb(235,199,36)"/><text x="79.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1844" width="5" height="15" fill="rgb(235,153,51)"/><text x="79.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1860" width="5" height="15" fill="rgb(211,119,43)"/><text x="79.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.40%)</title><rect x="76" y="1876" width="5" height="15" fill="rgb(247,144,29)"/><text x="79.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1892" width="5" height="15" fill="rgb(238,27,20)"/><text x="79.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1908" width="5" height="15" fill="rgb(246,79,54)"/><text x="79.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1924" width="5" height="15" fill="rgb(234,112,8)"/><text x="79.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1940" width="5" height="15" fill="rgb(215,108,10)"/><text x="79.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1956" width="5" height="15" fill="rgb(215,213,41)"/><text x="79.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="1972" width="5" height="15" fill="rgb(209,215,20)"/><text x="79.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="1988" width="5" height="15" fill="rgb(239,199,31)"/><text x="79.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.40%)</title><rect x="76" y="2004" width="5" height="15" fill="rgb(245,100,15)"/><text x="79.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="76" y="2020" width="5" height="15" fill="rgb(239,115,37)"/><text x="79.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="76" y="2036" width="5" height="15" fill="rgb(222,40,0)"/><text x="79.00" y="2046.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="76" y="2052" width="5" height="15" fill="rgb(217,8,4)"/><text x="79.00" y="2062.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.40%)</title><rect x="76" y="2068" width="5" height="15" fill="rgb(219,120,52)"/><text x="79.00" y="2078.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.40%)</title><rect x="76" y="2084" width="5" height="15" fill="rgb(240,15,19)"/><text x="79.00" y="2094.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.40%)</title><rect x="76" y="2100" width="5" height="15" fill="rgb(213,151,14)"/><text x="79.00" y="2110.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.40%)</title><rect x="76" y="2116" width="5" height="15" fill="rgb(239,117,38)"/><text x="79.00" y="2126.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.40%)</title><rect x="81" y="580" width="5" height="15" fill="rgb(252,37,34)"/><text x="84.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="596" width="5" height="15" fill="rgb(223,167,8)"/><text x="84.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="612" width="5" height="15" fill="rgb(221,186,17)"/><text x="84.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="628" width="5" height="15" fill="rgb(229,220,5)"/><text x="84.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="81" y="644" width="5" height="15" fill="rgb(225,132,34)"/><text x="84.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="660" width="5" height="15" fill="rgb(232,90,21)"/><text x="84.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.40%)</title><rect x="81" y="676" width="5" height="15" fill="rgb(246,71,38)"/><text x="84.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="692" width="5" height="15" fill="rgb(244,110,28)"/><text x="84.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="708" width="5" height="15" fill="rgb(224,38,35)"/><text x="84.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="724" width="5" height="15" fill="rgb(232,62,34)"/><text x="84.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="81" y="740" width="5" height="15" fill="rgb(227,89,19)"/><text x="84.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="81" y="756" width="5" height="15" fill="rgb(241,154,7)"/><text x="84.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.40%)</title><rect x="81" y="772" width="5" height="15" fill="rgb(205,74,1)"/><text x="84.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.40%)</title><rect x="81" y="788" width="5" height="15" fill="rgb(207,208,49)"/><text x="84.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="81" y="804" width="5" height="15" fill="rgb(233,104,38)"/><text x="84.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="81" y="820" width="5" height="15" fill="rgb(211,87,34)"/><text x="84.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="81" y="836" width="5" height="15" fill="rgb(205,207,29)"/><text x="84.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="81" y="852" width="5" height="15" fill="rgb(218,29,21)"/><text x="84.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="81" y="868" width="5" height="15" fill="rgb(224,171,10)"/><text x="84.00" y="878.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 2.02%)</title><rect x="67" y="244" width="24" height="15" fill="rgb(237,137,20)"/><text x="70.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="67" y="260" width="24" height="15" fill="rgb(250,105,13)"/><text x="70.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="67" y="276" width="24" height="15" fill="rgb(239,42,12)"/><text x="70.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="67" y="292" width="24" height="15" fill="rgb(237,2,6)"/><text x="70.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.02%)</title><rect x="67" y="308" width="24" height="15" fill="rgb(241,191,48)"/><text x="70.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="67" y="324" width="24" height="15" fill="rgb(254,194,4)"/><text x="70.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.81%)</title><rect x="81" y="340" width="10" height="15" fill="rgb(213,213,13)"/><text x="84.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="356" width="10" height="15" fill="rgb(238,196,9)"/><text x="84.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="372" width="10" height="15" fill="rgb(219,108,24)"/><text x="84.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="388" width="10" height="15" fill="rgb(253,203,18)"/><text x="84.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="404" width="10" height="15" fill="rgb(229,197,0)"/><text x="84.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="420" width="10" height="15" fill="rgb(226,51,45)"/><text x="84.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="436" width="10" height="15" fill="rgb(215,37,10)"/><text x="84.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="81" y="452" width="10" height="15" fill="rgb(238,41,40)"/><text x="84.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="468" width="10" height="15" fill="rgb(228,127,20)"/><text x="84.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.81%)</title><rect x="81" y="484" width="10" height="15" fill="rgb(214,196,31)"/><text x="84.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="500" width="10" height="15" fill="rgb(237,50,23)"/><text x="84.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="516" width="10" height="15" fill="rgb(231,13,22)"/><text x="84.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="532" width="10" height="15" fill="rgb(210,114,48)"/><text x="84.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="81" y="548" width="10" height="15" fill="rgb(227,192,18)"/><text x="84.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="81" y="564" width="10" height="15" fill="rgb(244,166,18)"/><text x="84.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.40%)</title><rect x="86" y="580" width="5" height="15" fill="rgb(220,165,33)"/><text x="89.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="86" y="596" width="5" height="15" fill="rgb(230,88,19)"/><text x="89.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="86" y="612" width="5" height="15" fill="rgb(227,27,11)"/><text x="89.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="86" y="628" width="5" height="15" fill="rgb(226,98,9)"/><text x="89.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="86" y="644" width="5" height="15" fill="rgb(225,208,46)"/><text x="89.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="86" y="660" width="5" height="15" fill="rgb(247,196,27)"/><text x="89.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.40%)</title><rect x="86" y="676" width="5" height="15" fill="rgb(212,92,0)"/><text x="89.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py) (1 samples, 0.40%)</title><rect x="86" y="692" width="5" height="15" fill="rgb(212,7,13)"/><text x="89.00" y="702.50"></text></g><g><title>&lt;listcomp&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.40%)</title><rect x="86" y="708" width="5" height="15" fill="rgb(214,53,36)"/><text x="89.00" y="718.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.40%)</title><rect x="86" y="724" width="5" height="15" fill="rgb(211,17,40)"/><text x="89.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.29%)</title><rect x="10" y="68" width="85" height="15" fill="rgb(211,179,14)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.29%)</title><rect x="10" y="84" width="85" height="15" fill="rgb(222,202,35)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.29%)</title><rect x="10" y="100" width="85" height="15" fill="rgb(225,136,3)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 7.29%)</title><rect x="10" y="116" width="85" height="15" fill="rgb(218,13,18)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.29%)</title><rect x="10" y="132" width="85" height="15" fill="rgb(230,160,17)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py) (18 samples, 7.29%)</title><rect x="10" y="148" width="85" height="15" fill="rgb(222,15,11)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.29%)</title><rect x="10" y="164" width="85" height="15" fill="rgb(244,0,45)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 7.29%)</title><rect x="10" y="180" width="85" height="15" fill="rgb(209,181,45)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="67" y="196" width="28" height="15" fill="rgb(245,55,6)"/><text x="70.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.43%)</title><rect x="67" y="212" width="28" height="15" fill="rgb(210,222,41)"/><text x="70.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.43%)</title><rect x="67" y="228" width="28" height="15" fill="rgb(210,162,2)"/><text x="70.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.40%)</title><rect x="91" y="244" width="4" height="15" fill="rgb(225,99,28)"/><text x="94.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="260" width="4" height="15" fill="rgb(232,177,53)"/><text x="94.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="276" width="4" height="15" fill="rgb(225,218,34)"/><text x="94.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="292" width="4" height="15" fill="rgb(253,104,23)"/><text x="94.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="308" width="4" height="15" fill="rgb(245,100,15)"/><text x="94.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="324" width="4" height="15" fill="rgb(241,157,24)"/><text x="94.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="340" width="4" height="15" fill="rgb(209,201,20)"/><text x="94.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="356" width="4" height="15" fill="rgb(232,65,37)"/><text x="94.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/polynomial/__init__.py) (1 samples, 0.40%)</title><rect x="91" y="372" width="4" height="15" fill="rgb(213,164,12)"/><text x="94.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="388" width="4" height="15" fill="rgb(215,212,52)"/><text x="94.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="404" width="4" height="15" fill="rgb(226,196,44)"/><text x="94.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="91" y="420" width="4" height="15" fill="rgb(212,113,6)"/><text x="94.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="436" width="4" height="15" fill="rgb(232,172,26)"/><text x="94.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="452" width="4" height="15" fill="rgb(249,203,19)"/><text x="94.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="91" y="468" width="4" height="15" fill="rgb(247,57,34)"/><text x="94.00" y="478.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="91" y="484" width="4" height="15" fill="rgb(253,66,7)"/><text x="94.00" y="494.50"></text></g><g><title>0x7fa82967eff9 (?) (1 samples, 0.40%)</title><rect x="167" y="212" width="5" height="15" fill="rgb(226,68,47)"/><text x="170.00" y="222.50"></text></g><g><title>0x7fa829679ef6 (?) (1 samples, 0.40%)</title><rect x="167" y="228" width="5" height="15" fill="rgb(230,80,4)"/><text x="170.00" y="238.50"></text></g><g><title>0x7fa82966e962 (?) (1 samples, 0.40%)</title><rect x="167" y="244" width="5" height="15" fill="rgb(247,114,29)"/><text x="170.00" y="254.50"></text></g><g><title>0x7fa8296a27a7 (?) (1 samples, 0.40%)</title><rect x="167" y="260" width="5" height="15" fill="rgb(245,187,32)"/><text x="170.00" y="270.50"></text></g><g><title>0x7fa8296a1f8a (?) (1 samples, 0.40%)</title><rect x="167" y="276" width="5" height="15" fill="rgb(248,207,18)"/><text x="170.00" y="286.50"></text></g><g><title>0x7fa82969af11 (?) (1 samples, 0.40%)</title><rect x="167" y="292" width="5" height="15" fill="rgb(248,153,38)"/><text x="170.00" y="302.50"></text></g><g><title>0x7fa829abbeb2 (?) (1 samples, 0.40%)</title><rect x="167" y="308" width="5" height="15" fill="rgb(227,112,7)"/><text x="170.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.40%)</title><rect x="172" y="212" width="5" height="15" fill="rgb(213,111,13)"/><text x="175.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="172" y="228" width="5" height="15" fill="rgb(205,199,36)"/><text x="175.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="172" y="244" width="5" height="15" fill="rgb(249,45,31)"/><text x="175.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="172" y="260" width="5" height="15" fill="rgb(240,120,18)"/><text x="175.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="172" y="276" width="5" height="15" fill="rgb(207,82,21)"/><text x="175.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="177" y="260" width="4" height="15" fill="rgb(223,153,29)"/><text x="180.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="196" y="292" width="9" height="15" fill="rgb(228,22,3)"/><text x="199.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="201" y="308" width="4" height="15" fill="rgb(240,156,35)"/><text x="204.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="205" y="292" width="5" height="15" fill="rgb(254,179,42)"/><text x="208.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="229" y="356" width="5" height="15" fill="rgb(248,7,21)"/><text x="232.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="229" y="372" width="5" height="15" fill="rgb(221,54,52)"/><text x="232.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="229" y="388" width="5" height="15" fill="rgb(234,53,48)"/><text x="232.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.02%)</title><rect x="215" y="340" width="24" height="15" fill="rgb(208,115,3)"/><text x="218.00" y="350.50">o..</text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="234" y="356" width="5" height="15" fill="rgb(236,195,7)"/><text x="237.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="239" y="340" width="5" height="15" fill="rgb(223,166,36)"/><text x="242.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="244" y="340" width="4" height="15" fill="rgb(211,190,19)"/><text x="247.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="244" y="356" width="4" height="15" fill="rgb(214,229,22)"/><text x="247.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="244" y="372" width="4" height="15" fill="rgb(226,154,20)"/><text x="247.00" y="382.50"></text></g><g><title>onnxruntime::SessionState::Profiler (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="248" y="340" width="5" height="15" fill="rgb(213,150,11)"/><text x="251.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.88%)</title><rect x="181" y="260" width="82" height="15" fill="rgb(254,41,45)"/><text x="184.00" y="270.50">onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.07%)</title><rect x="191" y="276" width="72" height="15" fill="rgb(243,163,30)"/><text x="194.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.45%)</title><rect x="210" y="292" width="53" height="15" fill="rgb(247,173,12)"/><text x="213.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.45%)</title><rect x="210" y="308" width="53" height="15" fill="rgb(251,13,38)"/><text x="213.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.45%)</title><rect x="210" y="324" width="53" height="15" fill="rgb(218,14,34)"/><text x="213.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="253" y="340" width="10" height="15" fill="rgb(221,52,42)"/><text x="256.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="263" y="260" width="4" height="15" fill="rgb(240,209,12)"/><text x="266.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.10%)</title><rect x="177" y="244" width="95" height="15" fill="rgb(239,179,22)"/><text x="180.00" y="254.50">onnxruntime..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="267" y="260" width="5" height="15" fill="rgb(205,166,52)"/><text x="270.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.40%)</title><rect x="267" y="276" width="5" height="15" fill="rgb(209,207,19)"/><text x="270.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="267" y="292" width="5" height="15" fill="rgb(254,22,1)"/><text x="270.00" y="302.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="272" y="244" width="10" height="15" fill="rgb(214,176,42)"/><text x="275.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="272" y="260" width="10" height="15" fill="rgb(212,102,31)"/><text x="275.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="277" y="276" width="5" height="15" fill="rgb(216,45,25)"/><text x="280.00" y="286.50"></text></g><g><title>0x7fa86962ed50 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="277" y="292" width="5" height="15" fill="rgb(248,184,40)"/><text x="280.00" y="302.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (40 samples, 16.19%)</title><rect x="95" y="68" width="192" height="15" fill="rgb(254,228,1)"/><text x="98.00" y="78.50">profile_ort (bench_Logist..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (40 samples, 16.19%)</title><rect x="95" y="84" width="192" height="15" fill="rgb(247,193,11)"/><text x="98.00" y="94.50">setup_profile (bench_Logi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (40 samples, 16.19%)</title><rect x="95" y="100" width="192" height="15" fill="rgb(245,213,41)"/><text x="98.00" y="110.50">profile (bench_LogisticRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 16.19%)</title><rect x="95" y="116" width="192" height="15" fill="rgb(215,26,41)"/><text x="98.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (38 samples, 15.38%)</title><rect x="105" y="132" width="182" height="15" fill="rgb(231,120,37)"/><text x="108.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (37 samples, 14.98%)</title><rect x="110" y="148" width="177" height="15" fill="rgb(237,92,51)"/><text x="113.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (35 samples, 14.17%)</title><rect x="119" y="164" width="168" height="15" fill="rgb(240,217,5)"/><text x="122.00" y="174.50">_run_whole_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (31 samples, 12.55%)</title><rect x="138" y="180" width="149" height="15" fill="rgb(244,36,12)"/><text x="141.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (onnxruntime/capi/session.py) (31 samples, 12.55%)</title><rect x="138" y="196" width="149" height="15" fill="rgb(228,174,46)"/><text x="141.00" y="206.50">run (onnxruntime/ca..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 9.31%)</title><rect x="177" y="212" width="110" height="15" fill="rgb(209,17,51)"/><text x="180.00" y="222.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 9.31%)</title><rect x="177" y="228" width="110" height="15" fill="rgb(237,51,20)"/><text x="180.00" y="238.50">void pybind11..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="282" y="244" width="5" height="15" fill="rgb(245,23,35)"/><text x="285.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.81%)</title><rect x="368" y="180" width="9" height="15" fill="rgb(225,74,2)"/><text x="371.00" y="190.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.40%)</title><rect x="430" y="212" width="5" height="15" fill="rgb(227,148,31)"/><text x="433.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.40%)</title><rect x="430" y="228" width="5" height="15" fill="rgb(227,47,31)"/><text x="433.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.40%)</title><rect x="430" y="244" width="5" height="15" fill="rgb(245,38,37)"/><text x="433.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="430" y="260" width="5" height="15" fill="rgb(221,213,25)"/><text x="433.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="430" y="276" width="5" height="15" fill="rgb(211,33,18)"/><text x="433.00" y="286.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.40%)</title><rect x="473" y="324" width="5" height="15" fill="rgb(221,9,41)"/><text x="476.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.40%)</title><rect x="473" y="340" width="5" height="15" fill="rgb(227,142,49)"/><text x="476.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="473" y="356" width="5" height="15" fill="rgb(215,71,22)"/><text x="476.00" y="366.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.40%)</title><rect x="473" y="372" width="5" height="15" fill="rgb(248,134,41)"/><text x="476.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 2.43%)</title><rect x="454" y="244" width="28" height="15" fill="rgb(208,7,1)"/><text x="457.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.43%)</title><rect x="454" y="260" width="28" height="15" fill="rgb(205,217,1)"/><text x="457.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 2.02%)</title><rect x="459" y="276" width="23" height="15" fill="rgb(210,41,24)"/><text x="462.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="468" y="292" width="14" height="15" fill="rgb(206,163,44)"/><text x="471.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 1.21%)</title><rect x="468" y="308" width="14" height="15" fill="rgb(245,143,36)"/><text x="471.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.40%)</title><rect x="478" y="324" width="4" height="15" fill="rgb(243,221,3)"/><text x="481.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.40%)</title><rect x="478" y="340" width="4" height="15" fill="rgb(233,82,26)"/><text x="481.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.40%)</title><rect x="478" y="356" width="4" height="15" fill="rgb(214,169,39)"/><text x="481.00" y="366.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.40%)</title><rect x="482" y="244" width="5" height="15" fill="rgb(223,43,43)"/><text x="485.00" y="254.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c) (1 samples, 0.40%)</title><rect x="482" y="260" width="5" height="15" fill="rgb(246,6,40)"/><text x="485.00" y="270.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="497" y="324" width="5" height="15" fill="rgb(244,19,48)"/><text x="500.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.40%)</title><rect x="497" y="340" width="5" height="15" fill="rgb(245,28,29)"/><text x="500.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.40%)</title><rect x="497" y="356" width="5" height="15" fill="rgb(249,30,20)"/><text x="500.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.40%)</title><rect x="497" y="372" width="5" height="15" fill="rgb(222,181,13)"/><text x="500.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="506" y="340" width="5" height="15" fill="rgb(219,43,20)"/><text x="509.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="511" y="340" width="5" height="15" fill="rgb(249,190,52)"/><text x="514.00" y="350.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 2.02%)</title><rect x="497" y="292" width="24" height="15" fill="rgb(218,180,35)"/><text x="500.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 2.02%)</title><rect x="497" y="308" width="24" height="15" fill="rgb(229,199,35)"/><text x="500.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.62%)</title><rect x="502" y="324" width="19" height="15" fill="rgb(225,8,18)"/><text x="505.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.40%)</title><rect x="516" y="340" width="5" height="15" fill="rgb(240,179,28)"/><text x="519.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.40%)</title><rect x="516" y="356" width="5" height="15" fill="rgb(214,189,1)"/><text x="519.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="516" y="372" width="5" height="15" fill="rgb(233,66,7)"/><text x="519.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="516" y="388" width="5" height="15" fill="rgb(244,13,45)"/><text x="519.00" y="398.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (8 samples, 3.24%)</title><rect x="487" y="244" width="38" height="15" fill="rgb(254,102,9)"/><text x="490.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (7 samples, 2.83%)</title><rect x="492" y="260" width="33" height="15" fill="rgb(247,115,5)"/><text x="495.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.43%)</title><rect x="497" y="276" width="28" height="15" fill="rgb(233,163,11)"/><text x="500.00" y="286.50">a..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="521" y="292" width="4" height="15" fill="rgb(243,38,20)"/><text x="524.00" y="302.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="521" y="308" width="4" height="15" fill="rgb(219,55,53)"/><text x="524.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.40%)</title><rect x="521" y="324" width="4" height="15" fill="rgb(249,165,45)"/><text x="524.00" y="334.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.40%)</title><rect x="521" y="340" width="4" height="15" fill="rgb(240,164,39)"/><text x="524.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="540" y="324" width="5" height="15" fill="rgb(246,102,10)"/><text x="543.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.21%)</title><rect x="535" y="308" width="14" height="15" fill="rgb(223,215,31)"/><text x="538.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.40%)</title><rect x="545" y="324" width="4" height="15" fill="rgb(247,28,46)"/><text x="548.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.81%)</title><rect x="549" y="308" width="10" height="15" fill="rgb(229,39,32)"/><text x="552.00" y="318.50"></text></g><g><title>0x7fa86960e93b (libc-2.29.so) (1 samples, 0.40%)</title><rect x="554" y="324" width="5" height="15" fill="rgb(214,93,34)"/><text x="557.00" y="334.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.40%)</title><rect x="559" y="308" width="5" height="15" fill="rgb(216,201,36)"/><text x="562.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 3.24%)</title><rect x="530" y="276" width="38" height="15" fill="rgb(230,32,27)"/><text x="533.00" y="286.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 3.24%)</title><rect x="530" y="292" width="38" height="15" fill="rgb(211,206,17)"/><text x="533.00" y="302.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.40%)</title><rect x="564" y="308" width="4" height="15" fill="rgb(217,121,0)"/><text x="567.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.40%)</title><rect x="564" y="324" width="4" height="15" fill="rgb(208,88,28)"/><text x="567.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (60 samples, 24.29%)</title><rect x="287" y="68" width="286" height="15" fill="rgb(241,138,3)"/><text x="290.00" y="78.50">profile_pyrt (bench_LogisticRegression..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (60 samples, 24.29%)</title><rect x="287" y="84" width="286" height="15" fill="rgb(237,2,38)"/><text x="290.00" y="94.50">setup_profile (bench_LogisticRegressio..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (60 samples, 24.29%)</title><rect x="287" y="100" width="286" height="15" fill="rgb(212,164,27)"/><text x="290.00" y="110.50">profile (bench_LogisticRegression_libl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (57 samples, 23.08%)</title><rect x="301" y="116" width="272" height="15" fill="rgb(251,153,13)"/><text x="304.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (53 samples, 21.46%)</title><rect x="320" y="132" width="253" height="15" fill="rgb(235,224,17)"/><text x="323.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (52 samples, 21.05%)</title><rect x="325" y="148" width="248" height="15" fill="rgb(254,28,13)"/><text x="328.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (50 samples, 20.24%)</title><rect x="334" y="164" width="239" height="15" fill="rgb(223,90,27)"/><text x="337.00" y="174.50">_run_sequence_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (41 samples, 16.60%)</title><rect x="377" y="180" width="196" height="15" fill="rgb(205,39,10)"/><text x="380.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (33 samples, 13.36%)</title><rect x="416" y="196" width="157" height="15" fill="rgb(205,182,30)"/><text x="419.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (29 samples, 11.74%)</title><rect x="435" y="212" width="138" height="15" fill="rgb(216,166,4)"/><text x="438.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (29 samples, 11.74%)</title><rect x="435" y="228" width="138" height="15" fill="rgb(252,198,40)"/><text x="438.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 4.05%)</title><rect x="525" y="244" width="48" height="15" fill="rgb(248,88,50)"/><text x="528.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 3.64%)</title><rect x="530" y="260" width="43" height="15" fill="rgb(216,163,20)"/><text x="533.00" y="270.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.40%)</title><rect x="568" y="276" width="5" height="15" fill="rgb(249,153,6)"/><text x="571.00" y="286.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.40%)</title><rect x="650" y="180" width="4" height="15" fill="rgb(254,12,37)"/><text x="653.00" y="190.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.40%)</title><rect x="650" y="196" width="4" height="15" fill="rgb(237,68,48)"/><text x="653.00" y="206.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.40%)</title><rect x="654" y="212" width="5" height="15" fill="rgb(209,179,45)"/><text x="657.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="654" y="228" width="5" height="15" fill="rgb(250,105,44)"/><text x="657.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.81%)</title><rect x="659" y="260" width="10" height="15" fill="rgb(253,127,32)"/><text x="662.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.40%)</title><rect x="664" y="276" width="5" height="15" fill="rgb(229,158,29)"/><text x="667.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.21%)</title><rect x="659" y="244" width="15" height="15" fill="rgb(242,176,8)"/><text x="662.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.40%)</title><rect x="669" y="260" width="5" height="15" fill="rgb(239,16,17)"/><text x="672.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.62%)</title><rect x="659" y="212" width="19" height="15" fill="rgb(209,39,20)"/><text x="662.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.62%)</title><rect x="659" y="228" width="19" height="15" fill="rgb(218,206,10)"/><text x="662.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.40%)</title><rect x="674" y="244" width="4" height="15" fill="rgb(218,177,2)"/><text x="677.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.40%)</title><rect x="674" y="260" width="4" height="15" fill="rgb(218,39,45)"/><text x="677.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.40%)</title><rect x="678" y="212" width="5" height="15" fill="rgb(231,99,38)"/><text x="681.00" y="222.50"></text></g><g><title>array_add (number.c) (8 samples, 3.24%)</title><rect x="650" y="164" width="38" height="15" fill="rgb(252,130,3)"/><text x="653.00" y="174.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.83%)</title><rect x="654" y="180" width="34" height="15" fill="rgb(227,29,27)"/><text x="657.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.83%)</title><rect x="654" y="196" width="34" height="15" fill="rgb(242,208,26)"/><text x="657.00" y="206.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.40%)</title><rect x="683" y="212" width="5" height="15" fill="rgb(252,138,26)"/><text x="686.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="688" y="164" width="5" height="15" fill="rgb(207,22,32)"/><text x="691.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="688" y="180" width="5" height="15" fill="rgb(230,145,38)"/><text x="691.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="688" y="196" width="5" height="15" fill="rgb(207,57,46)"/><text x="691.00" y="206.50"></text></g><g><title>array_transpose_get (getset.c) (1 samples, 0.40%)</title><rect x="693" y="164" width="4" height="15" fill="rgb(249,13,32)"/><text x="696.00" y="174.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.21%)</title><rect x="740" y="180" width="15" height="15" fill="rgb(224,99,16)"/><text x="743.00" y="190.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 1.21%)</title><rect x="755" y="180" width="14" height="15" fill="rgb(252,189,27)"/><text x="758.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="817" y="196" width="24" height="15" fill="rgb(224,152,21)"/><text x="820.00" y="206.50">_..</text></g><g><title>0x7fa869624e7a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="836" y="212" width="5" height="15" fill="rgb(205,223,28)"/><text x="839.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.81%)</title><rect x="841" y="196" width="9" height="15" fill="rgb(233,100,51)"/><text x="844.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (18 samples, 7.29%)</title><rect x="769" y="180" width="86" height="15" fill="rgb(205,223,51)"/><text x="772.00" y="190.50">_assert_al..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="850" y="196" width="5" height="15" fill="rgb(233,148,16)"/><text x="853.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.81%)</title><rect x="855" y="180" width="10" height="15" fill="rgb(213,16,11)"/><text x="858.00" y="190.50"></text></g><g><title>0x7fa8696ecdf0 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="879" y="196" width="5" height="15" fill="rgb(251,226,51)"/><text x="882.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.40%)</title><rect x="884" y="196" width="5" height="15" fill="rgb(241,73,40)"/><text x="887.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 4.05%)</title><rect x="865" y="180" width="47" height="15" fill="rgb(239,25,9)"/><text x="868.00" y="190.50">_num..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 2.02%)</title><rect x="889" y="196" width="23" height="15" fill="rgb(208,22,25)"/><text x="892.00" y="206.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (4 samples, 1.62%)</title><rect x="893" y="212" width="19" height="15" fill="rgb(241,154,19)"/><text x="896.00" y="222.50"></text></g><g><title>0x7fa86962f124 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="908" y="228" width="4" height="15" fill="rgb(240,10,43)"/><text x="911.00" y="238.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.40%)</title><rect x="912" y="180" width="5" height="15" fill="rgb(218,2,21)"/><text x="915.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 1.21%)</title><rect x="917" y="180" width="15" height="15" fill="rgb(238,66,23)"/><text x="920.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="927" y="196" width="5" height="15" fill="rgb(234,175,26)"/><text x="930.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.40%)</title><rect x="932" y="180" width="4" height="15" fill="rgb(213,43,8)"/><text x="935.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.40%)</title><rect x="932" y="196" width="4" height="15" fill="rgb(205,224,46)"/><text x="935.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.40%)</title><rect x="932" y="212" width="4" height="15" fill="rgb(222,68,46)"/><text x="935.00" y="222.50"></text></g><g><title>simplefilter (warnings.py) (8 samples, 3.24%)</title><rect x="936" y="180" width="39" height="15" fill="rgb(241,221,0)"/><text x="939.00" y="190.50">sim..</text></g><g><title>_add_filter (warnings.py) (5 samples, 2.02%)</title><rect x="951" y="196" width="24" height="15" fill="rgb(241,152,5)"/><text x="954.00" y="206.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py) (59 samples, 23.89%)</title><rect x="697" y="164" width="282" height="15" fill="rgb(214,174,24)"/><text x="700.00" y="174.50">check_array (sklearn/utils/validation..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="975" y="180" width="4" height="15" fill="rgb(251,201,1)"/><text x="978.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (18 samples, 7.29%)</title><rect x="994" y="180" width="86" height="15" fill="rgb(233,208,13)"/><text x="997.00" y="190.50">&lt;listcomp&gt;..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.62%)</title><rect x="1061" y="196" width="19" height="15" fill="rgb(236,68,34)"/><text x="1064.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (24 samples, 9.72%)</title><rect x="979" y="164" width="115" height="15" fill="rgb(229,125,8)"/><text x="982.00" y="174.50">check_is_fitte..</text></g><g><title>isclass (inspect.py) (3 samples, 1.21%)</title><rect x="1080" y="180" width="14" height="15" fill="rgb(237,57,36)"/><text x="1083.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.40%)</title><rect x="1104" y="180" width="4" height="15" fill="rgb(218,6,51)"/><text x="1107.00" y="190.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 1.21%)</title><rect x="1108" y="228" width="15" height="15" fill="rgb(241,144,9)"/><text x="1111.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (3 samples, 1.21%)</title><rect x="1108" y="244" width="15" height="15" fill="rgb(231,80,36)"/><text x="1111.00" y="254.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.21%)</title><rect x="1108" y="260" width="15" height="15" fill="rgb(247,118,23)"/><text x="1111.00" y="270.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="1118" y="276" width="5" height="15" fill="rgb(214,97,6)"/><text x="1121.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.40%)</title><rect x="1127" y="260" width="5" height="15" fill="rgb(237,109,1)"/><text x="1130.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.40%)</title><rect x="1127" y="276" width="5" height="15" fill="rgb(224,92,26)"/><text x="1130.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.40%)</title><rect x="1127" y="292" width="5" height="15" fill="rgb(249,165,42)"/><text x="1130.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1127" y="308" width="5" height="15" fill="rgb(222,54,28)"/><text x="1130.00" y="318.50"></text></g><g><title>0x7fa86962ed50 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1127" y="324" width="5" height="15" fill="rgb(247,66,38)"/><text x="1130.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.40%)</title><rect x="1132" y="308" width="5" height="15" fill="rgb(250,187,10)"/><text x="1135.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.40%)</title><rect x="1132" y="324" width="5" height="15" fill="rgb(217,198,10)"/><text x="1135.00" y="334.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.40%)</title><rect x="1132" y="340" width="5" height="15" fill="rgb(223,229,52)"/><text x="1135.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.62%)</title><rect x="1123" y="228" width="19" height="15" fill="rgb(219,213,18)"/><text x="1126.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.62%)</title><rect x="1123" y="244" width="19" height="15" fill="rgb(249,135,52)"/><text x="1126.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.81%)</title><rect x="1132" y="260" width="10" height="15" fill="rgb(207,49,9)"/><text x="1135.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.81%)</title><rect x="1132" y="276" width="10" height="15" fill="rgb(223,184,38)"/><text x="1135.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.81%)</title><rect x="1132" y="292" width="10" height="15" fill="rgb(232,100,13)"/><text x="1135.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1137" y="308" width="5" height="15" fill="rgb(229,17,53)"/><text x="1140.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1142" y="228" width="5" height="15" fill="rgb(222,22,17)"/><text x="1145.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="1142" y="244" width="5" height="15" fill="rgb(251,117,47)"/><text x="1145.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="1142" y="260" width="5" height="15" fill="rgb(254,170,23)"/><text x="1145.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="1142" y="276" width="5" height="15" fill="rgb(229,175,34)"/><text x="1145.00" y="286.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (2 samples, 0.81%)</title><rect x="1147" y="228" width="9" height="15" fill="rgb(208,138,52)"/><text x="1150.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.81%)</title><rect x="1156" y="228" width="10" height="15" fill="rgb(231,135,43)"/><text x="1159.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="1161" y="244" width="5" height="15" fill="rgb(245,55,44)"/><text x="1164.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.40%)</title><rect x="1161" y="260" width="5" height="15" fill="rgb(226,188,18)"/><text x="1164.00" y="270.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.40%)</title><rect x="1161" y="276" width="5" height="15" fill="rgb(229,83,43)"/><text x="1164.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.40%)</title><rect x="1166" y="228" width="4" height="15" fill="rgb(251,227,0)"/><text x="1169.00" y="238.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (122 samples, 49.39%)</title><rect x="592" y="132" width="583" height="15" fill="rgb(220,125,50)"/><text x="595.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (120 samples, 48.58%)</title><rect x="602" y="148" width="573" height="15" fill="rgb(225,228,30)"/><text x="605.00" y="158.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (17 samples, 6.88%)</title><rect x="1094" y="164" width="81" height="15" fill="rgb(250,172,14)"/><text x="1097.00" y="174.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 5.67%)</title><rect x="1108" y="180" width="67" height="15" fill="rgb(209,98,22)"/><text x="1111.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 5.67%)</title><rect x="1108" y="196" width="67" height="15" fill="rgb(218,0,34)"/><text x="1111.00" y="206.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (14 samples, 5.67%)</title><rect x="1108" y="212" width="67" height="15" fill="rgb(249,215,3)"/><text x="1111.00" y="222.50">PyUFunc..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.40%)</title><rect x="1170" y="228" width="5" height="15" fill="rgb(247,55,34)"/><text x="1173.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.40%)</title><rect x="1170" y="244" width="5" height="15" fill="rgb(244,172,3)"/><text x="1173.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="1175" y="132" width="5" height="15" fill="rgb(216,7,14)"/><text x="1178.00" y="142.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (128 samples, 51.82%)</title><rect x="573" y="68" width="612" height="15" fill="rgb(226,85,48)"/><text x="576.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (128 samples, 51.82%)</title><rect x="573" y="84" width="612" height="15" fill="rgb(211,5,17)"/><text x="576.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (128 samples, 51.82%)</title><rect x="573" y="100" width="612" height="15" fill="rgb(207,36,13)"/><text x="576.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 51.01%)</title><rect x="583" y="116" width="602" height="15" fill="rgb(233,198,21)"/><text x="586.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="1180" y="132" width="5" height="15" fill="rgb(241,25,50)"/><text x="1183.00" y="142.50"></text></g><g><title>all (247 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,24,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (247 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(225,120,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1_50_12_float_raw_score.py) (1 samples, 0.40%)</title><rect x="1185" y="68" width="5" height="15" fill="rgb(219,2,11)"/><text x="1188.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py) (1 samples, 0.40%)</title><rect x="1185" y="84" width="5" height="15" fill="rgb(232,6,11)"/><text x="1188.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="1185" y="100" width="5" height="15" fill="rgb(219,25,15)"/><text x="1188.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py) (1 samples, 0.40%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(212,119,17)"/><text x="1188.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py) (1 samples, 0.40%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(228,170,1)"/><text x="1188.00" y="142.50"></text></g><g><title>0x7fa85343a55e (?) (1 samples, 0.40%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(241,106,47)"/><text x="1188.00" y="158.50"></text></g></g></svg>