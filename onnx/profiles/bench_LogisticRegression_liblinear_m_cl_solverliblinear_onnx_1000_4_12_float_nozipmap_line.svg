<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.31%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(228,147,23)"/><text x="16.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.31%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(241,168,23)"/><text x="16.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.31%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(216,38,1)"/><text x="16.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (2 samples, 0.62%)</title><rect x="13" y="164" width="7" height="15" fill="rgb(205,188,17)"/><text x="16.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.31%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(222,200,4)"/><text x="20.00" y="190.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.31%)</title><rect x="17" y="196" width="3" height="15" fill="rgb(206,110,25)"/><text x="20.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="17" y="212" width="3" height="15" fill="rgb(236,116,5)"/><text x="20.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="17" y="228" width="3" height="15" fill="rgb(213,108,1)"/><text x="20.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.31%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(243,168,11)"/><text x="20.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.31%)</title><rect x="17" y="260" width="3" height="15" fill="rgb(215,220,0)"/><text x="20.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.31%)</title><rect x="17" y="276" width="3" height="15" fill="rgb(206,211,9)"/><text x="20.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.31%)</title><rect x="17" y="292" width="3" height="15" fill="rgb(253,174,4)"/><text x="20.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.31%)</title><rect x="17" y="308" width="3" height="15" fill="rgb(233,196,49)"/><text x="20.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.31%)</title><rect x="17" y="324" width="3" height="15" fill="rgb(205,148,44)"/><text x="20.00" y="334.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.31%)</title><rect x="20" y="164" width="4" height="15" fill="rgb(248,77,1)"/><text x="23.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="20" y="180" width="4" height="15" fill="rgb(246,211,20)"/><text x="23.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="20" y="196" width="4" height="15" fill="rgb(219,13,0)"/><text x="23.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.31%)</title><rect x="20" y="212" width="4" height="15" fill="rgb(227,142,39)"/><text x="23.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.31%)</title><rect x="20" y="228" width="4" height="15" fill="rgb(249,71,1)"/><text x="23.00" y="238.50"></text></g><g><title>0x7ff38b2e29dd (?) (1 samples, 0.31%)</title><rect x="20" y="244" width="4" height="15" fill="rgb(208,53,38)"/><text x="23.00" y="254.50"></text></g><g><title>0x7ff38b303265 (?) (1 samples, 0.31%)</title><rect x="20" y="260" width="4" height="15" fill="rgb(221,42,26)"/><text x="23.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="276" width="4" height="15" fill="rgb(223,132,12)"/><text x="23.00" y="286.50"></text></g><g><title>0x7ff3a90aebe7 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="20" y="292" width="4" height="15" fill="rgb(205,223,32)"/><text x="23.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:18) (5 samples, 1.54%)</title><rect x="10" y="100" width="18" height="15" fill="rgb(232,53,32)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 1.54%)</title><rect x="10" y="116" width="18" height="15" fill="rgb(205,190,40)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 1.23%)</title><rect x="13" y="132" width="15" height="15" fill="rgb(242,206,17)"/><text x="16.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (4 samples, 1.23%)</title><rect x="13" y="148" width="15" height="15" fill="rgb(229,15,45)"/><text x="16.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.31%)</title><rect x="24" y="164" width="4" height="15" fill="rgb(225,61,32)"/><text x="27.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.31%)</title><rect x="24" y="180" width="4" height="15" fill="rgb(219,2,54)"/><text x="27.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.31%)</title><rect x="24" y="196" width="4" height="15" fill="rgb(214,214,25)"/><text x="27.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.31%)</title><rect x="24" y="212" width="4" height="15" fill="rgb(207,74,39)"/><text x="27.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.31%)</title><rect x="24" y="228" width="4" height="15" fill="rgb(229,194,7)"/><text x="27.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.31%)</title><rect x="24" y="244" width="4" height="15" fill="rgb(209,138,18)"/><text x="27.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.31%)</title><rect x="24" y="260" width="4" height="15" fill="rgb(212,164,14)"/><text x="27.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.31%)</title><rect x="24" y="276" width="4" height="15" fill="rgb(240,190,29)"/><text x="27.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.31%)</title><rect x="28" y="164" width="3" height="15" fill="rgb(234,3,14)"/><text x="31.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.31%)</title><rect x="31" y="180" width="4" height="15" fill="rgb(216,189,47)"/><text x="34.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.31%)</title><rect x="39" y="196" width="3" height="15" fill="rgb(216,46,21)"/><text x="42.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 1.85%)</title><rect x="28" y="148" width="22" height="15" fill="rgb(244,107,22)"/><text x="31.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.54%)</title><rect x="31" y="164" width="19" height="15" fill="rgb(245,112,25)"/><text x="34.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.23%)</title><rect x="35" y="180" width="15" height="15" fill="rgb(249,68,12)"/><text x="38.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="42" y="196" width="8" height="15" fill="rgb(212,151,31)"/><text x="45.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1647) (1 samples, 0.31%)</title><rect x="50" y="148" width="3" height="15" fill="rgb(219,102,24)"/><text x="53.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.31%)</title><rect x="53" y="196" width="4" height="15" fill="rgb(217,140,46)"/><text x="56.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.93%)</title><rect x="53" y="180" width="11" height="15" fill="rgb(215,165,51)"/><text x="56.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.62%)</title><rect x="57" y="196" width="7" height="15" fill="rgb(245,122,4)"/><text x="60.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.31%)</title><rect x="60" y="212" width="4" height="15" fill="rgb(249,22,24)"/><text x="63.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.31%)</title><rect x="64" y="196" width="4" height="15" fill="rgb(250,228,38)"/><text x="67.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.31%)</title><rect x="68" y="196" width="3" height="15" fill="rgb(220,35,25)"/><text x="71.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.31%)</title><rect x="71" y="196" width="4" height="15" fill="rgb(224,8,7)"/><text x="74.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.62%)</title><rect x="79" y="228" width="7" height="15" fill="rgb(208,140,53)"/><text x="82.00" y="238.50"></text></g><g><title>0x7ff3a8ef2e50 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="82" y="244" width="4" height="15" fill="rgb(215,119,24)"/><text x="85.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.54%)</title><rect x="75" y="196" width="18" height="15" fill="rgb(249,135,29)"/><text x="78.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.23%)</title><rect x="79" y="212" width="14" height="15" fill="rgb(231,162,37)"/><text x="82.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.62%)</title><rect x="86" y="228" width="7" height="15" fill="rgb(212,153,27)"/><text x="89.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.31%)</title><rect x="93" y="196" width="4" height="15" fill="rgb(241,73,27)"/><text x="96.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.31%)</title><rect x="93" y="212" width="4" height="15" fill="rgb(225,139,51)"/><text x="96.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.31%)</title><rect x="93" y="228" width="4" height="15" fill="rgb(242,87,20)"/><text x="96.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.31%)</title><rect x="93" y="244" width="4" height="15" fill="rgb(245,5,42)"/><text x="96.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.23%)</title><rect x="97" y="212" width="14" height="15" fill="rgb(238,120,18)"/><text x="100.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.62%)</title><rect x="104" y="228" width="7" height="15" fill="rgb(225,95,33)"/><text x="107.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.16%)</title><rect x="97" y="196" width="25" height="15" fill="rgb(241,63,36)"/><text x="100.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 0.93%)</title><rect x="111" y="212" width="11" height="15" fill="rgb(216,157,31)"/><text x="114.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (2 samples, 0.62%)</title><rect x="115" y="228" width="7" height="15" fill="rgb(239,224,14)"/><text x="118.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.31%)</title><rect x="122" y="212" width="4" height="15" fill="rgb(249,115,18)"/><text x="125.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.62%)</title><rect x="122" y="196" width="8" height="15" fill="rgb(229,195,20)"/><text x="125.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.31%)</title><rect x="126" y="212" width="4" height="15" fill="rgb(248,156,11)"/><text x="129.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (19 samples, 5.86%)</title><rect x="64" y="180" width="69" height="15" fill="rgb(231,68,45)"/><text x="67.00" y="190.50">decisio..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.31%)</title><rect x="130" y="196" width="3" height="15" fill="rgb(209,225,2)"/><text x="133.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.31%)</title><rect x="133" y="260" width="4" height="15" fill="rgb(205,161,19)"/><text x="136.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.31%)</title><rect x="133" y="276" width="4" height="15" fill="rgb(232,213,54)"/><text x="136.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.31%)</title><rect x="133" y="292" width="4" height="15" fill="rgb(223,165,47)"/><text x="136.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.31%)</title><rect x="133" y="308" width="4" height="15" fill="rgb(222,171,17)"/><text x="136.00" y="318.50"></text></g><g><title>0x7ff3a8efcd62 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="133" y="324" width="4" height="15" fill="rgb(232,68,50)"/><text x="136.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.31%)</title><rect x="137" y="308" width="4" height="15" fill="rgb(229,205,47)"/><text x="140.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.93%)</title><rect x="137" y="260" width="11" height="15" fill="rgb(244,105,27)"/><text x="140.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.93%)</title><rect x="137" y="276" width="11" height="15" fill="rgb(246,215,46)"/><text x="140.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.93%)</title><rect x="137" y="292" width="11" height="15" fill="rgb(236,162,49)"/><text x="140.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.62%)</title><rect x="141" y="308" width="7" height="15" fill="rgb(243,166,28)"/><text x="144.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.62%)</title><rect x="141" y="324" width="7" height="15" fill="rgb(237,184,27)"/><text x="144.00" y="334.50"></text></g><g><title>array_add (number.c:330) (5 samples, 1.54%)</title><rect x="133" y="196" width="19" height="15" fill="rgb(223,164,39)"/><text x="136.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.54%)</title><rect x="133" y="212" width="19" height="15" fill="rgb(243,209,51)"/><text x="136.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.54%)</title><rect x="133" y="228" width="19" height="15" fill="rgb(241,129,19)"/><text x="136.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.54%)</title><rect x="133" y="244" width="19" height="15" fill="rgb(210,177,44)"/><text x="136.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="148" y="260" width="4" height="15" fill="rgb(236,216,22)"/><text x="151.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.31%)</title><rect x="148" y="276" width="4" height="15" fill="rgb(226,6,0)"/><text x="151.00" y="286.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.62%)</title><rect x="152" y="212" width="7" height="15" fill="rgb(219,177,42)"/><text x="155.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.54%)</title><rect x="159" y="212" width="18" height="15" fill="rgb(245,216,5)"/><text x="162.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.31%)</title><rect x="177" y="244" width="4" height="15" fill="rgb(243,205,37)"/><text x="180.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.31%)</title><rect x="177" y="260" width="4" height="15" fill="rgb(244,67,12)"/><text x="180.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.31%)</title><rect x="177" y="276" width="4" height="15" fill="rgb(235,19,30)"/><text x="180.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.31%)</title><rect x="177" y="292" width="4" height="15" fill="rgb(242,147,14)"/><text x="180.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2872) (1 samples, 0.31%)</title><rect x="181" y="276" width="3" height="15" fill="rgb(230,217,24)"/><text x="184.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.31%)</title><rect x="184" y="292" width="4" height="15" fill="rgb(243,61,35)"/><text x="187.00" y="302.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.31%)</title><rect x="184" y="308" width="4" height="15" fill="rgb(206,126,11)"/><text x="187.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.31%)</title><rect x="184" y="324" width="4" height="15" fill="rgb(237,23,8)"/><text x="187.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.31%)</title><rect x="184" y="340" width="4" height="15" fill="rgb(234,16,3)"/><text x="187.00" y="350.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.31%)</title><rect x="184" y="356" width="4" height="15" fill="rgb(241,121,20)"/><text x="187.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.31%)</title><rect x="188" y="308" width="4" height="15" fill="rgb(213,95,53)"/><text x="191.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="188" y="324" width="4" height="15" fill="rgb(252,105,0)"/><text x="191.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (4 samples, 1.23%)</title><rect x="181" y="244" width="14" height="15" fill="rgb(232,190,9)"/><text x="184.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (4 samples, 1.23%)</title><rect x="181" y="260" width="14" height="15" fill="rgb(222,198,12)"/><text x="184.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.93%)</title><rect x="184" y="276" width="11" height="15" fill="rgb(223,142,14)"/><text x="187.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.62%)</title><rect x="188" y="292" width="7" height="15" fill="rgb(215,54,1)"/><text x="191.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.31%)</title><rect x="192" y="308" width="3" height="15" fill="rgb(237,79,46)"/><text x="195.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.31%)</title><rect x="192" y="324" width="3" height="15" fill="rgb(247,114,46)"/><text x="195.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.31%)</title><rect x="195" y="244" width="4" height="15" fill="rgb(249,104,4)"/><text x="198.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:132) (1 samples, 0.31%)</title><rect x="195" y="260" width="4" height="15" fill="rgb(237,215,47)"/><text x="198.00" y="270.50"></text></g><g><title>0x7ff3a8efcd53 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="195" y="276" width="4" height="15" fill="rgb(251,212,21)"/><text x="198.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.31%)</title><rect x="199" y="244" width="4" height="15" fill="rgb(220,31,18)"/><text x="202.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.31%)</title><rect x="199" y="260" width="4" height="15" fill="rgb(230,26,51)"/><text x="202.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.31%)</title><rect x="199" y="276" width="4" height="15" fill="rgb(252,58,42)"/><text x="202.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.47%)</title><rect x="177" y="212" width="29" height="15" fill="rgb(213,19,42)"/><text x="180.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 2.47%)</title><rect x="177" y="228" width="29" height="15" fill="rgb(238,125,7)"/><text x="180.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.31%)</title><rect x="203" y="244" width="3" height="15" fill="rgb(249,178,47)"/><text x="206.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.31%)</title><rect x="203" y="260" width="3" height="15" fill="rgb(239,218,20)"/><text x="206.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="203" y="276" width="3" height="15" fill="rgb(253,31,21)"/><text x="206.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="203" y="292" width="3" height="15" fill="rgb(247,175,21)"/><text x="206.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="203" y="308" width="3" height="15" fill="rgb(237,160,24)"/><text x="206.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.31%)</title><rect x="206" y="212" width="4" height="15" fill="rgb(243,196,19)"/><text x="209.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2029) (1 samples, 0.31%)</title><rect x="206" y="228" width="4" height="15" fill="rgb(234,152,4)"/><text x="209.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (17 samples, 5.25%)</title><rect x="152" y="196" width="61" height="15" fill="rgb(223,24,12)"/><text x="155.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.31%)</title><rect x="210" y="212" width="3" height="15" fill="rgb(230,89,22)"/><text x="213.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c:861) (1 samples, 0.31%)</title><rect x="210" y="228" width="3" height="15" fill="rgb(239,72,1)"/><text x="213.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (24 samples, 7.41%)</title><rect x="133" y="180" width="88" height="15" fill="rgb(245,41,53)"/><text x="136.00" y="190.50">decision_f..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.62%)</title><rect x="213" y="196" width="8" height="15" fill="rgb(252,153,33)"/><text x="216.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (47 samples, 14.51%)</title><rect x="53" y="164" width="171" height="15" fill="rgb(242,61,50)"/><text x="56.00" y="174.50">_predict_proba_lr (skl..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.31%)</title><rect x="221" y="180" width="3" height="15" fill="rgb(228,4,36)"/><text x="224.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="228" y="180" width="4" height="15" fill="rgb(217,169,34)"/><text x="231.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="228" y="196" width="4" height="15" fill="rgb(242,161,9)"/><text x="231.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.31%)</title><rect x="228" y="212" width="4" height="15" fill="rgb(217,59,33)"/><text x="231.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.31%)</title><rect x="228" y="228" width="4" height="15" fill="rgb(207,13,50)"/><text x="231.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.31%)</title><rect x="232" y="212" width="3" height="15" fill="rgb(241,121,9)"/><text x="235.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.62%)</title><rect x="232" y="196" width="7" height="15" fill="rgb(213,90,11)"/><text x="235.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1191) (1 samples, 0.31%)</title><rect x="235" y="212" width="4" height="15" fill="rgb(232,23,45)"/><text x="238.00" y="222.50"></text></g><g><title>_set_out_array (ufunc_object.c:824) (1 samples, 0.31%)</title><rect x="235" y="228" width="4" height="15" fill="rgb(213,43,51)"/><text x="238.00" y="238.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.31%)</title><rect x="235" y="244" width="4" height="15" fill="rgb(223,219,1)"/><text x="238.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.31%)</title><rect x="239" y="212" width="4" height="15" fill="rgb(228,179,39)"/><text x="242.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.31%)</title><rect x="239" y="228" width="4" height="15" fill="rgb(217,92,3)"/><text x="242.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.31%)</title><rect x="239" y="244" width="4" height="15" fill="rgb(239,41,13)"/><text x="242.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.31%)</title><rect x="239" y="260" width="4" height="15" fill="rgb(236,127,35)"/><text x="242.00" y="270.50"></text></g><g><title>0x7ff38b2e29da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="243" y="244" width="3" height="15" fill="rgb(242,87,48)"/><text x="246.00" y="254.50"></text></g><g><title>0x7ff38b2c0fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="246" y="276" width="8" height="15" fill="rgb(231,114,30)"/><text x="249.00" y="286.50"></text></g><g><title>0x7ff38b40c9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="254" y="276" width="3" height="15" fill="rgb(214,81,28)"/><text x="257.00" y="286.50"></text></g><g><title>0x7ff3a90aeba0 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="272" y="292" width="7" height="15" fill="rgb(221,105,51)"/><text x="275.00" y="302.50"></text></g><g><title>0x7ff3a90aebd3 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="279" y="292" width="4" height="15" fill="rgb(236,83,46)"/><text x="282.00" y="302.50"></text></g><g><title>0x7ff3a90aebe7 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="283" y="292" width="3" height="15" fill="rgb(247,156,24)"/><text x="286.00" y="302.50"></text></g><g><title>0x7ff3a90aebf9 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="286" y="292" width="4" height="15" fill="rgb(212,9,28)"/><text x="289.00" y="302.50"></text></g><g><title>0x7ff3a90aec3e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="290" y="292" width="4" height="15" fill="rgb(235,67,7)"/><text x="293.00" y="302.50"></text></g><g><title>0x7ff3a90aec56 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="294" y="292" width="3" height="15" fill="rgb(208,168,52)"/><text x="297.00" y="302.50"></text></g><g><title>0x7ff38b303265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.94%)</title><rect x="246" y="260" width="59" height="15" fill="rgb(231,99,50)"/><text x="249.00" y="270.50">0x7ff3..</text></g><g><title>exp (libm-2.29.so) (13 samples, 4.01%)</title><rect x="257" y="276" width="48" height="15" fill="rgb(252,193,48)"/><text x="260.00" y="286.50">exp ..</text></g><g><title>0x7ff3a90aec7b (libm-2.29.so) (2 samples, 0.62%)</title><rect x="297" y="292" width="8" height="15" fill="rgb(248,181,50)"/><text x="300.00" y="302.50"></text></g><g><title>0x7ff38b303275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="305" y="260" width="3" height="15" fill="rgb(214,98,53)"/><text x="308.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (29 samples, 8.95%)</title><rect x="224" y="164" width="106" height="15" fill="rgb(208,139,11)"/><text x="227.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (27 samples, 8.33%)</title><rect x="232" y="180" width="98" height="15" fill="rgb(245,220,41)"/><text x="235.00" y="190.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (25 samples, 7.72%)</title><rect x="239" y="196" width="91" height="15" fill="rgb(243,145,35)"/><text x="242.00" y="206.50">PyUFunc_Ge..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (24 samples, 7.41%)</title><rect x="243" y="212" width="87" height="15" fill="rgb(253,23,44)"/><text x="246.00" y="222.50">execute_le..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (24 samples, 7.41%)</title><rect x="243" y="228" width="87" height="15" fill="rgb(222,25,13)"/><text x="246.00" y="238.50">trivial_tw..</text></g><g><title>0x7ff38b2e29dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 7.10%)</title><rect x="246" y="244" width="84" height="15" fill="rgb(239,214,24)"/><text x="249.00" y="254.50">0x7ff38b2..</text></g><g><title>0x7ff38b303279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.85%)</title><rect x="308" y="260" width="22" height="15" fill="rgb(253,226,37)"/><text x="311.00" y="270.50">0..</text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.62%)</title><rect x="341" y="228" width="7" height="15" fill="rgb(250,92,16)"/><text x="344.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.62%)</title><rect x="341" y="244" width="7" height="15" fill="rgb(227,200,9)"/><text x="344.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.62%)</title><rect x="341" y="260" width="7" height="15" fill="rgb(213,95,10)"/><text x="344.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.62%)</title><rect x="341" y="276" width="7" height="15" fill="rgb(208,102,19)"/><text x="344.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.62%)</title><rect x="341" y="292" width="7" height="15" fill="rgb(242,226,28)"/><text x="344.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.62%)</title><rect x="341" y="308" width="7" height="15" fill="rgb(206,149,41)"/><text x="344.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.62%)</title><rect x="348" y="244" width="7" height="15" fill="rgb(233,223,7)"/><text x="351.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.31%)</title><rect x="355" y="260" width="4" height="15" fill="rgb(224,188,2)"/><text x="358.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.31%)</title><rect x="355" y="276" width="4" height="15" fill="rgb(239,154,0)"/><text x="358.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.31%)</title><rect x="355" y="292" width="4" height="15" fill="rgb(236,73,36)"/><text x="358.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.31%)</title><rect x="355" y="308" width="4" height="15" fill="rgb(234,81,31)"/><text x="358.00" y="318.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1775) (1 samples, 0.31%)</title><rect x="355" y="324" width="4" height="15" fill="rgb(253,158,35)"/><text x="358.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.31%)</title><rect x="359" y="292" width="4" height="15" fill="rgb(218,32,30)"/><text x="362.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.31%)</title><rect x="363" y="308" width="3" height="15" fill="rgb(215,141,8)"/><text x="366.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.93%)</title><rect x="359" y="276" width="11" height="15" fill="rgb(228,94,9)"/><text x="362.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.62%)</title><rect x="363" y="292" width="7" height="15" fill="rgb(248,147,2)"/><text x="366.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.31%)</title><rect x="366" y="308" width="4" height="15" fill="rgb(252,139,20)"/><text x="369.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.54%)</title><rect x="355" y="244" width="19" height="15" fill="rgb(226,77,1)"/><text x="358.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.23%)</title><rect x="359" y="260" width="15" height="15" fill="rgb(235,1,24)"/><text x="362.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.31%)</title><rect x="370" y="276" width="4" height="15" fill="rgb(243,86,8)"/><text x="373.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.31%)</title><rect x="370" y="292" width="4" height="15" fill="rgb(235,106,20)"/><text x="373.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="370" y="308" width="4" height="15" fill="rgb(233,28,16)"/><text x="373.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 3.40%)</title><rect x="337" y="196" width="40" height="15" fill="rgb(242,49,4)"/><text x="340.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 3.09%)</title><rect x="341" y="212" width="36" height="15" fill="rgb(210,228,26)"/><text x="344.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.47%)</title><rect x="348" y="228" width="29" height="15" fill="rgb(227,174,24)"/><text x="351.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4681) (1 samples, 0.31%)</title><rect x="374" y="244" width="3" height="15" fill="rgb(238,29,31)"/><text x="377.00" y="254.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 3.70%)</title><rect x="337" y="180" width="44" height="15" fill="rgb(251,3,2)"/><text x="340.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.31%)</title><rect x="377" y="196" width="4" height="15" fill="rgb(218,1,52)"/><text x="380.00" y="206.50"></text></g><g><title>0x7ff3a8efd1ef (libc-2.29.so) (1 samples, 0.31%)</title><rect x="377" y="212" width="4" height="15" fill="rgb(235,28,21)"/><text x="380.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="381" y="180" width="4" height="15" fill="rgb(240,67,41)"/><text x="384.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="381" y="196" width="4" height="15" fill="rgb(229,156,52)"/><text x="384.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="381" y="212" width="4" height="15" fill="rgb(224,209,38)"/><text x="384.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.31%)</title><rect x="381" y="228" width="4" height="15" fill="rgb(242,36,14)"/><text x="384.00" y="238.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.31%)</title><rect x="385" y="276" width="3" height="15" fill="rgb(211,48,26)"/><text x="388.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.31%)</title><rect x="388" y="276" width="4" height="15" fill="rgb(223,167,51)"/><text x="391.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.23%)</title><rect x="385" y="228" width="14" height="15" fill="rgb(247,98,8)"/><text x="388.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.23%)</title><rect x="385" y="244" width="14" height="15" fill="rgb(207,41,48)"/><text x="388.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 1.23%)</title><rect x="385" y="260" width="14" height="15" fill="rgb(228,117,11)"/><text x="388.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.62%)</title><rect x="392" y="276" width="7" height="15" fill="rgb(247,204,54)"/><text x="395.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.31%)</title><rect x="396" y="292" width="3" height="15" fill="rgb(206,56,51)"/><text x="399.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:38) (109 samples, 33.64%)</title><rect x="10" y="52" width="396" height="15" fill="rgb(220,217,11)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_sol..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:37) (109 samples, 33.64%)</title><rect x="10" y="68" width="396" height="15" fill="rgb(250,35,28)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (109 samples, 33.64%)</title><rect x="10" y="84" width="396" height="15" fill="rgb(239,205,54)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (104 samples, 32.10%)</title><rect x="28" y="100" width="378" height="15" fill="rgb(245,16,25)"/><text x="31.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (104 samples, 32.10%)</title><rect x="28" y="116" width="378" height="15" fill="rgb(218,68,37)"/><text x="31.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (104 samples, 32.10%)</title><rect x="28" y="132" width="378" height="15" fill="rgb(209,82,26)"/><text x="31.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (97 samples, 29.94%)</title><rect x="53" y="148" width="353" height="15" fill="rgb(249,42,17)"/><text x="56.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.p..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 6.48%)</title><rect x="330" y="164" width="76" height="15" fill="rgb(232,74,33)"/><text x="333.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.85%)</title><rect x="385" y="180" width="21" height="15" fill="rgb(248,98,48)"/><text x="388.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.85%)</title><rect x="385" y="196" width="21" height="15" fill="rgb(223,213,11)"/><text x="388.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.85%)</title><rect x="385" y="212" width="21" height="15" fill="rgb(244,173,40)"/><text x="388.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.62%)</title><rect x="399" y="228" width="7" height="15" fill="rgb(251,79,38)"/><text x="402.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (2 samples, 0.62%)</title><rect x="399" y="244" width="7" height="15" fill="rgb(236,162,25)"/><text x="402.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (2 samples, 0.62%)</title><rect x="399" y="260" width="7" height="15" fill="rgb(246,61,6)"/><text x="402.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.62%)</title><rect x="399" y="276" width="7" height="15" fill="rgb(248,115,35)"/><text x="402.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.62%)</title><rect x="399" y="292" width="7" height="15" fill="rgb(211,50,28)"/><text x="402.00" y="302.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:1) (1 samples, 0.31%)</title><rect x="406" y="148" width="4" height="15" fill="rgb(225,148,17)"/><text x="409.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="406" y="164" width="4" height="15" fill="rgb(207,122,16)"/><text x="409.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="406" y="180" width="4" height="15" fill="rgb(235,112,13)"/><text x="409.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="406" y="196" width="4" height="15" fill="rgb(236,4,14)"/><text x="409.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="406" y="212" width="4" height="15" fill="rgb(237,156,54)"/><text x="409.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="406" y="228" width="4" height="15" fill="rgb(250,174,1)"/><text x="409.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.31%)</title><rect x="406" y="244" width="4" height="15" fill="rgb(244,28,9)"/><text x="409.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="406" y="260" width="4" height="15" fill="rgb(213,48,13)"/><text x="409.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="406" y="276" width="4" height="15" fill="rgb(248,168,32)"/><text x="409.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="406" y="292" width="4" height="15" fill="rgb(242,182,52)"/><text x="409.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="406" y="308" width="4" height="15" fill="rgb(226,127,30)"/><text x="409.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="406" y="324" width="4" height="15" fill="rgb(250,173,26)"/><text x="409.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(206,222,36)"/><text x="409.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="406" y="356" width="4" height="15" fill="rgb(219,222,8)"/><text x="409.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.31%)</title><rect x="406" y="372" width="4" height="15" fill="rgb(207,199,39)"/><text x="409.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="406" y="388" width="4" height="15" fill="rgb(208,149,18)"/><text x="409.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="406" y="404" width="4" height="15" fill="rgb(244,102,30)"/><text x="409.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="406" y="420" width="4" height="15" fill="rgb(230,40,19)"/><text x="409.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="406" y="436" width="4" height="15" fill="rgb(242,51,23)"/><text x="409.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="406" y="452" width="4" height="15" fill="rgb(241,10,48)"/><text x="409.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="406" y="468" width="4" height="15" fill="rgb(227,156,18)"/><text x="409.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="406" y="484" width="4" height="15" fill="rgb(213,15,17)"/><text x="409.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.31%)</title><rect x="406" y="500" width="4" height="15" fill="rgb(234,47,13)"/><text x="409.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="406" y="516" width="4" height="15" fill="rgb(254,150,53)"/><text x="409.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="406" y="532" width="4" height="15" fill="rgb(223,46,15)"/><text x="409.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="406" y="548" width="4" height="15" fill="rgb(239,99,10)"/><text x="409.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="406" y="564" width="4" height="15" fill="rgb(234,111,9)"/><text x="409.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="406" y="580" width="4" height="15" fill="rgb(239,153,31)"/><text x="409.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.31%)</title><rect x="406" y="596" width="4" height="15" fill="rgb(209,41,46)"/><text x="409.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="406" y="612" width="4" height="15" fill="rgb(243,99,32)"/><text x="409.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="406" y="628" width="4" height="15" fill="rgb(215,17,40)"/><text x="409.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="406" y="644" width="4" height="15" fill="rgb(234,135,6)"/><text x="409.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="406" y="660" width="4" height="15" fill="rgb(251,192,0)"/><text x="409.00" y="670.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="406" y="676" width="4" height="15" fill="rgb(219,114,5)"/><text x="409.00" y="686.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="406" y="692" width="4" height="15" fill="rgb(249,100,38)"/><text x="409.00" y="702.50"></text></g><g><title>0x7ff3a8fbae76 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="406" y="708" width="4" height="15" fill="rgb(225,207,4)"/><text x="409.00" y="718.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.31%)</title><rect x="410" y="852" width="4" height="15" fill="rgb(216,52,35)"/><text x="413.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.31%)</title><rect x="410" y="868" width="4" height="15" fill="rgb(231,171,43)"/><text x="413.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.31%)</title><rect x="410" y="884" width="4" height="15" fill="rgb(207,125,44)"/><text x="413.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="410" y="900" width="4" height="15" fill="rgb(207,57,34)"/><text x="413.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="410" y="916" width="4" height="15" fill="rgb(224,222,39)"/><text x="413.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.31%)</title><rect x="410" y="932" width="4" height="15" fill="rgb(241,194,29)"/><text x="413.00" y="942.50"></text></g><g><title>dirname (posixpath.py:162) (1 samples, 0.31%)</title><rect x="410" y="948" width="4" height="15" fill="rgb(245,69,32)"/><text x="413.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="414" y="852" width="3" height="15" fill="rgb(234,97,38)"/><text x="417.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.31%)</title><rect x="414" y="868" width="3" height="15" fill="rgb(238,36,6)"/><text x="417.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.31%)</title><rect x="414" y="884" width="3" height="15" fill="rgb(210,126,37)"/><text x="417.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.31%)</title><rect x="414" y="900" width="3" height="15" fill="rgb(248,71,3)"/><text x="417.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.31%)</title><rect x="414" y="916" width="3" height="15" fill="rgb(221,57,48)"/><text x="417.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.31%)</title><rect x="414" y="932" width="3" height="15" fill="rgb(245,150,54)"/><text x="417.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.31%)</title><rect x="414" y="948" width="3" height="15" fill="rgb(211,41,8)"/><text x="417.00" y="958.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.31%)</title><rect x="417" y="948" width="4" height="15" fill="rgb(227,169,26)"/><text x="420.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.31%)</title><rect x="417" y="964" width="4" height="15" fill="rgb(224,78,14)"/><text x="420.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.31%)</title><rect x="417" y="980" width="4" height="15" fill="rgb(207,105,46)"/><text x="420.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.62%)</title><rect x="417" y="884" width="8" height="15" fill="rgb(253,13,53)"/><text x="420.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.62%)</title><rect x="417" y="900" width="8" height="15" fill="rgb(250,145,34)"/><text x="420.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.62%)</title><rect x="417" y="916" width="8" height="15" fill="rgb(219,44,29)"/><text x="420.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.62%)</title><rect x="417" y="932" width="8" height="15" fill="rgb(213,54,16)"/><text x="420.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.31%)</title><rect x="421" y="948" width="4" height="15" fill="rgb(223,152,30)"/><text x="424.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.31%)</title><rect x="421" y="964" width="4" height="15" fill="rgb(205,30,19)"/><text x="424.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.31%)</title><rect x="421" y="980" width="4" height="15" fill="rgb(205,32,19)"/><text x="424.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.31%)</title><rect x="421" y="996" width="4" height="15" fill="rgb(239,8,43)"/><text x="424.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (6 samples, 1.85%)</title><rect x="410" y="148" width="22" height="15" fill="rgb(213,165,21)"/><text x="413.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="164" width="22" height="15" fill="rgb(224,44,52)"/><text x="413.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.85%)</title><rect x="410" y="180" width="22" height="15" fill="rgb(240,58,7)"/><text x="413.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="196" width="22" height="15" fill="rgb(217,228,10)"/><text x="413.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="212" width="22" height="15" fill="rgb(247,102,12)"/><text x="413.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.85%)</title><rect x="410" y="228" width="22" height="15" fill="rgb(253,186,8)"/><text x="413.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.85%)</title><rect x="410" y="244" width="22" height="15" fill="rgb(248,46,16)"/><text x="413.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.85%)</title><rect x="410" y="260" width="22" height="15" fill="rgb(230,86,50)"/><text x="413.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="276" width="22" height="15" fill="rgb(235,147,0)"/><text x="413.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.85%)</title><rect x="410" y="292" width="22" height="15" fill="rgb(234,202,53)"/><text x="413.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="308" width="22" height="15" fill="rgb(222,154,30)"/><text x="413.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.85%)</title><rect x="410" y="324" width="22" height="15" fill="rgb(215,184,12)"/><text x="413.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.85%)</title><rect x="410" y="340" width="22" height="15" fill="rgb(235,186,44)"/><text x="413.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.85%)</title><rect x="410" y="356" width="22" height="15" fill="rgb(245,175,20)"/><text x="413.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="372" width="22" height="15" fill="rgb(245,114,3)"/><text x="413.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.85%)</title><rect x="410" y="388" width="22" height="15" fill="rgb(225,120,11)"/><text x="413.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="404" width="22" height="15" fill="rgb(221,149,27)"/><text x="413.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.85%)</title><rect x="410" y="420" width="22" height="15" fill="rgb(238,68,52)"/><text x="413.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.85%)</title><rect x="410" y="436" width="22" height="15" fill="rgb(206,175,21)"/><text x="413.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.85%)</title><rect x="410" y="452" width="22" height="15" fill="rgb(205,84,23)"/><text x="413.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="468" width="22" height="15" fill="rgb(250,52,52)"/><text x="413.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.85%)</title><rect x="410" y="484" width="22" height="15" fill="rgb(220,142,25)"/><text x="413.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="500" width="22" height="15" fill="rgb(248,57,27)"/><text x="413.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.85%)</title><rect x="410" y="516" width="22" height="15" fill="rgb(247,40,51)"/><text x="413.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.85%)</title><rect x="410" y="532" width="22" height="15" fill="rgb(226,91,35)"/><text x="413.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.85%)</title><rect x="410" y="548" width="22" height="15" fill="rgb(220,49,32)"/><text x="413.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="564" width="22" height="15" fill="rgb(231,27,24)"/><text x="413.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.85%)</title><rect x="410" y="580" width="22" height="15" fill="rgb(245,198,47)"/><text x="413.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="596" width="22" height="15" fill="rgb(236,130,15)"/><text x="413.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.85%)</title><rect x="410" y="612" width="22" height="15" fill="rgb(218,214,54)"/><text x="413.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="628" width="22" height="15" fill="rgb(241,181,18)"/><text x="413.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="644" width="22" height="15" fill="rgb(217,128,9)"/><text x="413.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.85%)</title><rect x="410" y="660" width="22" height="15" fill="rgb(249,153,23)"/><text x="413.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.85%)</title><rect x="410" y="676" width="22" height="15" fill="rgb(229,182,30)"/><text x="413.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.85%)</title><rect x="410" y="692" width="22" height="15" fill="rgb(231,95,16)"/><text x="413.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="708" width="22" height="15" fill="rgb(223,35,17)"/><text x="413.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.85%)</title><rect x="410" y="724" width="22" height="15" fill="rgb(239,80,43)"/><text x="413.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.85%)</title><rect x="410" y="740" width="22" height="15" fill="rgb(249,17,28)"/><text x="413.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.85%)</title><rect x="410" y="756" width="22" height="15" fill="rgb(224,187,14)"/><text x="413.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.85%)</title><rect x="410" y="772" width="22" height="15" fill="rgb(225,8,11)"/><text x="413.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.85%)</title><rect x="410" y="788" width="22" height="15" fill="rgb(223,14,41)"/><text x="413.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.85%)</title><rect x="410" y="804" width="22" height="15" fill="rgb(212,105,43)"/><text x="413.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 1.85%)</title><rect x="410" y="820" width="22" height="15" fill="rgb(207,72,37)"/><text x="413.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 1.85%)</title><rect x="410" y="836" width="22" height="15" fill="rgb(233,72,52)"/><text x="413.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (4 samples, 1.23%)</title><rect x="417" y="852" width="15" height="15" fill="rgb(244,104,23)"/><text x="420.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 1.23%)</title><rect x="417" y="868" width="15" height="15" fill="rgb(224,103,27)"/><text x="420.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.62%)</title><rect x="425" y="884" width="7" height="15" fill="rgb(231,83,54)"/><text x="428.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.62%)</title><rect x="425" y="900" width="7" height="15" fill="rgb(234,166,0)"/><text x="428.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.62%)</title><rect x="425" y="916" width="7" height="15" fill="rgb(239,184,20)"/><text x="428.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.31%)</title><rect x="428" y="932" width="4" height="15" fill="rgb(232,131,8)"/><text x="431.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.31%)</title><rect x="428" y="948" width="4" height="15" fill="rgb(220,21,26)"/><text x="431.00" y="958.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.31%)</title><rect x="428" y="964" width="4" height="15" fill="rgb(219,192,25)"/><text x="431.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="428" y="980" width="4" height="15" fill="rgb(223,109,31)"/><text x="431.00" y="990.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:11) (1 samples, 0.31%)</title><rect x="432" y="388" width="4" height="15" fill="rgb(230,27,50)"/><text x="435.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="432" y="404" width="4" height="15" fill="rgb(209,68,35)"/><text x="435.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="432" y="420" width="4" height="15" fill="rgb(237,131,54)"/><text x="435.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="432" y="436" width="4" height="15" fill="rgb(224,48,52)"/><text x="435.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="432" y="452" width="4" height="15" fill="rgb(234,72,9)"/><text x="435.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="432" y="468" width="4" height="15" fill="rgb(251,201,46)"/><text x="435.00" y="478.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:247) (1 samples, 0.31%)</title><rect x="432" y="484" width="4" height="15" fill="rgb(223,102,25)"/><text x="435.00" y="494.50"></text></g><g><title>filterwarnings (warnings.py:155) (1 samples, 0.31%)</title><rect x="432" y="500" width="4" height="15" fill="rgb(235,192,23)"/><text x="435.00" y="510.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="432" y="516" width="4" height="15" fill="rgb(205,177,21)"/><text x="435.00" y="526.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="432" y="532" width="4" height="15" fill="rgb(247,85,43)"/><text x="435.00" y="542.50"></text></g><g><title>compile (sre_compile.py:783) (1 samples, 0.31%)</title><rect x="432" y="548" width="4" height="15" fill="rgb(213,214,15)"/><text x="435.00" y="558.50"></text></g><g><title>_sre_compile (python3.7) (1 samples, 0.31%)</title><rect x="432" y="564" width="4" height="15" fill="rgb(232,81,39)"/><text x="435.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.31%)</title><rect x="439" y="1444" width="4" height="15" fill="rgb(249,46,48)"/><text x="442.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="439" y="1460" width="4" height="15" fill="rgb(236,120,37)"/><text x="442.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="439" y="1476" width="4" height="15" fill="rgb(240,130,52)"/><text x="442.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="439" y="1492" width="4" height="15" fill="rgb(253,229,39)"/><text x="442.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="439" y="1508" width="4" height="15" fill="rgb(253,197,15)"/><text x="442.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="439" y="1524" width="4" height="15" fill="rgb(251,99,23)"/><text x="442.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.31%)</title><rect x="439" y="1540" width="4" height="15" fill="rgb(241,62,41)"/><text x="442.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="439" y="1556" width="4" height="15" fill="rgb(216,34,48)"/><text x="442.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="439" y="1572" width="4" height="15" fill="rgb(230,208,32)"/><text x="442.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="439" y="1588" width="4" height="15" fill="rgb(207,183,23)"/><text x="442.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="439" y="1604" width="4" height="15" fill="rgb(247,188,52)"/><text x="442.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="439" y="1620" width="4" height="15" fill="rgb(215,119,6)"/><text x="442.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.31%)</title><rect x="439" y="1636" width="4" height="15" fill="rgb(226,180,39)"/><text x="442.00" y="1646.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.31%)</title><rect x="439" y="1652" width="4" height="15" fill="rgb(254,201,16)"/><text x="442.00" y="1662.50"></text></g><g><title>from_list (matplotlib/colors.py:743) (1 samples, 0.31%)</title><rect x="439" y="1668" width="4" height="15" fill="rgb(208,69,23)"/><text x="442.00" y="1678.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.31%)</title><rect x="439" y="1684" width="4" height="15" fill="rgb(221,181,46)"/><text x="442.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.62%)</title><rect x="439" y="1348" width="8" height="15" fill="rgb(245,70,11)"/><text x="442.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="439" y="1364" width="8" height="15" fill="rgb(219,134,15)"/><text x="442.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="439" y="1380" width="8" height="15" fill="rgb(236,54,40)"/><text x="442.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="439" y="1396" width="8" height="15" fill="rgb(253,120,9)"/><text x="442.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="439" y="1412" width="8" height="15" fill="rgb(249,111,20)"/><text x="442.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="439" y="1428" width="8" height="15" fill="rgb(247,1,27)"/><text x="442.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.31%)</title><rect x="443" y="1444" width="4" height="15" fill="rgb(246,173,52)"/><text x="446.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="443" y="1460" width="4" height="15" fill="rgb(242,161,40)"/><text x="446.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="443" y="1476" width="4" height="15" fill="rgb(216,91,18)"/><text x="446.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="443" y="1492" width="4" height="15" fill="rgb(223,98,1)"/><text x="446.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="443" y="1508" width="4" height="15" fill="rgb(218,5,16)"/><text x="446.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="443" y="1524" width="4" height="15" fill="rgb(249,92,54)"/><text x="446.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.31%)</title><rect x="443" y="1540" width="4" height="15" fill="rgb(208,71,24)"/><text x="446.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="443" y="1556" width="4" height="15" fill="rgb(209,102,13)"/><text x="446.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="443" y="1572" width="4" height="15" fill="rgb(217,100,46)"/><text x="446.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="443" y="1588" width="4" height="15" fill="rgb(242,44,5)"/><text x="446.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="443" y="1604" width="4" height="15" fill="rgb(213,2,29)"/><text x="446.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="443" y="1620" width="4" height="15" fill="rgb(225,59,7)"/><text x="446.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.31%)</title><rect x="443" y="1636" width="4" height="15" fill="rgb(219,95,41)"/><text x="446.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="443" y="1652" width="4" height="15" fill="rgb(217,74,39)"/><text x="446.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="443" y="1668" width="4" height="15" fill="rgb(225,122,31)"/><text x="446.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="443" y="1684" width="4" height="15" fill="rgb(237,171,54)"/><text x="446.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="443" y="1700" width="4" height="15" fill="rgb(222,100,28)"/><text x="446.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="443" y="1716" width="4" height="15" fill="rgb(250,92,7)"/><text x="446.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.31%)</title><rect x="443" y="1732" width="4" height="15" fill="rgb(224,112,52)"/><text x="446.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="443" y="1748" width="4" height="15" fill="rgb(242,54,51)"/><text x="446.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="443" y="1764" width="4" height="15" fill="rgb(247,154,41)"/><text x="446.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="443" y="1780" width="4" height="15" fill="rgb(253,171,25)"/><text x="446.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="443" y="1796" width="4" height="15" fill="rgb(236,163,38)"/><text x="446.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="443" y="1812" width="4" height="15" fill="rgb(242,174,17)"/><text x="446.00" y="1822.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:40) (1 samples, 0.31%)</title><rect x="443" y="1828" width="4" height="15" fill="rgb(235,186,15)"/><text x="446.00" y="1838.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="443" y="1844" width="4" height="15" fill="rgb(215,122,15)"/><text x="446.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="443" y="1860" width="4" height="15" fill="rgb(228,152,19)"/><text x="446.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="443" y="1876" width="4" height="15" fill="rgb(235,190,1)"/><text x="446.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="443" y="1892" width="4" height="15" fill="rgb(246,213,46)"/><text x="446.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="443" y="1908" width="4" height="15" fill="rgb(251,150,31)"/><text x="446.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="443" y="1924" width="4" height="15" fill="rgb(208,100,18)"/><text x="446.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="443" y="1940" width="4" height="15" fill="rgb(212,141,41)"/><text x="446.00" y="1950.50"></text></g><g><title>&lt;module&gt; (matplotlib/afm.py:45) (1 samples, 0.31%)</title><rect x="443" y="1956" width="4" height="15" fill="rgb(245,91,13)"/><text x="446.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="443" y="1972" width="4" height="15" fill="rgb(236,187,21)"/><text x="446.00" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="443" y="1988" width="4" height="15" fill="rgb(228,113,23)"/><text x="446.00" y="1998.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="443" y="2004" width="4" height="15" fill="rgb(206,57,47)"/><text x="446.00" y="2014.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="443" y="2020" width="4" height="15" fill="rgb(220,196,34)"/><text x="446.00" y="2030.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 1.54%)</title><rect x="432" y="292" width="18" height="15" fill="rgb(208,96,23)"/><text x="435.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.54%)</title><rect x="432" y="308" width="18" height="15" fill="rgb(214,29,28)"/><text x="435.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.54%)</title><rect x="432" y="324" width="18" height="15" fill="rgb(251,162,39)"/><text x="435.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.54%)</title><rect x="432" y="340" width="18" height="15" fill="rgb(241,183,50)"/><text x="435.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.54%)</title><rect x="432" y="356" width="18" height="15" fill="rgb(214,98,40)"/><text x="435.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.54%)</title><rect x="432" y="372" width="18" height="15" fill="rgb(248,224,54)"/><text x="435.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.23%)</title><rect x="436" y="388" width="14" height="15" fill="rgb(205,23,35)"/><text x="439.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="436" y="404" width="14" height="15" fill="rgb(220,190,10)"/><text x="439.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.23%)</title><rect x="436" y="420" width="14" height="15" fill="rgb(230,34,49)"/><text x="439.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.23%)</title><rect x="436" y="436" width="14" height="15" fill="rgb(222,223,8)"/><text x="439.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.23%)</title><rect x="436" y="452" width="14" height="15" fill="rgb(242,188,24)"/><text x="439.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.23%)</title><rect x="436" y="468" width="14" height="15" fill="rgb(219,100,39)"/><text x="439.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.23%)</title><rect x="436" y="484" width="14" height="15" fill="rgb(214,69,21)"/><text x="439.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="436" y="500" width="14" height="15" fill="rgb(214,21,35)"/><text x="439.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.23%)</title><rect x="436" y="516" width="14" height="15" fill="rgb(245,218,4)"/><text x="439.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.23%)</title><rect x="436" y="532" width="14" height="15" fill="rgb(244,13,7)"/><text x="439.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.23%)</title><rect x="436" y="548" width="14" height="15" fill="rgb(212,215,50)"/><text x="439.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.23%)</title><rect x="436" y="564" width="14" height="15" fill="rgb(210,116,21)"/><text x="439.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 1.23%)</title><rect x="436" y="580" width="14" height="15" fill="rgb(238,79,42)"/><text x="439.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="436" y="596" width="14" height="15" fill="rgb(232,211,21)"/><text x="439.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="612" width="11" height="15" fill="rgb(228,125,21)"/><text x="442.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="628" width="11" height="15" fill="rgb(229,114,23)"/><text x="442.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="644" width="11" height="15" fill="rgb(205,106,19)"/><text x="442.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="660" width="11" height="15" fill="rgb(235,209,24)"/><text x="442.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.93%)</title><rect x="439" y="676" width="11" height="15" fill="rgb(209,163,35)"/><text x="442.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="692" width="11" height="15" fill="rgb(231,51,14)"/><text x="442.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="708" width="11" height="15" fill="rgb(217,137,7)"/><text x="442.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="724" width="11" height="15" fill="rgb(232,120,3)"/><text x="442.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="740" width="11" height="15" fill="rgb(209,29,16)"/><text x="442.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="756" width="11" height="15" fill="rgb(249,119,27)"/><text x="442.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.93%)</title><rect x="439" y="772" width="11" height="15" fill="rgb(240,10,20)"/><text x="442.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="788" width="11" height="15" fill="rgb(237,214,18)"/><text x="442.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="804" width="11" height="15" fill="rgb(238,121,44)"/><text x="442.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="820" width="11" height="15" fill="rgb(239,169,32)"/><text x="442.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="836" width="11" height="15" fill="rgb(251,221,44)"/><text x="442.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="852" width="11" height="15" fill="rgb(224,176,48)"/><text x="442.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 0.93%)</title><rect x="439" y="868" width="11" height="15" fill="rgb(240,132,9)"/><text x="442.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="884" width="11" height="15" fill="rgb(253,41,35)"/><text x="442.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="900" width="11" height="15" fill="rgb(219,177,18)"/><text x="442.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="916" width="11" height="15" fill="rgb(248,195,7)"/><text x="442.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="932" width="11" height="15" fill="rgb(241,134,32)"/><text x="442.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="948" width="11" height="15" fill="rgb(217,15,10)"/><text x="442.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 0.93%)</title><rect x="439" y="964" width="11" height="15" fill="rgb(228,112,50)"/><text x="442.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="980" width="11" height="15" fill="rgb(249,131,34)"/><text x="442.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="996" width="11" height="15" fill="rgb(235,60,12)"/><text x="442.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="1012" width="11" height="15" fill="rgb(214,118,41)"/><text x="442.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="1028" width="11" height="15" fill="rgb(211,171,20)"/><text x="442.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="1044" width="11" height="15" fill="rgb(247,186,44)"/><text x="442.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 0.93%)</title><rect x="439" y="1060" width="11" height="15" fill="rgb(237,153,49)"/><text x="442.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="1076" width="11" height="15" fill="rgb(248,169,7)"/><text x="442.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="1092" width="11" height="15" fill="rgb(212,76,19)"/><text x="442.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="1108" width="11" height="15" fill="rgb(240,90,26)"/><text x="442.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="1124" width="11" height="15" fill="rgb(221,134,4)"/><text x="442.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="1140" width="11" height="15" fill="rgb(205,47,45)"/><text x="442.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 0.93%)</title><rect x="439" y="1156" width="11" height="15" fill="rgb(246,147,33)"/><text x="442.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="1172" width="11" height="15" fill="rgb(232,60,54)"/><text x="442.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="1188" width="11" height="15" fill="rgb(245,216,23)"/><text x="442.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="1204" width="11" height="15" fill="rgb(229,6,20)"/><text x="442.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="1220" width="11" height="15" fill="rgb(208,102,51)"/><text x="442.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="1236" width="11" height="15" fill="rgb(217,179,48)"/><text x="442.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 0.93%)</title><rect x="439" y="1252" width="11" height="15" fill="rgb(239,164,2)"/><text x="442.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.93%)</title><rect x="439" y="1268" width="11" height="15" fill="rgb(212,110,9)"/><text x="442.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.93%)</title><rect x="439" y="1284" width="11" height="15" fill="rgb(209,194,9)"/><text x="442.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.93%)</title><rect x="439" y="1300" width="11" height="15" fill="rgb(205,54,37)"/><text x="442.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.93%)</title><rect x="439" y="1316" width="11" height="15" fill="rgb(230,0,46)"/><text x="442.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.93%)</title><rect x="439" y="1332" width="11" height="15" fill="rgb(228,36,45)"/><text x="442.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.31%)</title><rect x="447" y="1348" width="3" height="15" fill="rgb(219,18,8)"/><text x="450.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="447" y="1364" width="3" height="15" fill="rgb(207,157,49)"/><text x="450.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="447" y="1380" width="3" height="15" fill="rgb(234,33,54)"/><text x="450.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="447" y="1396" width="3" height="15" fill="rgb(252,121,26)"/><text x="450.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="447" y="1412" width="3" height="15" fill="rgb(234,190,50)"/><text x="450.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="447" y="1428" width="3" height="15" fill="rgb(241,36,25)"/><text x="450.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="447" y="1444" width="3" height="15" fill="rgb(239,227,25)"/><text x="450.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="447" y="1460" width="3" height="15" fill="rgb(249,43,49)"/><text x="450.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="447" y="1476" width="3" height="15" fill="rgb(242,170,30)"/><text x="450.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.31%)</title><rect x="447" y="1492" width="3" height="15" fill="rgb(252,120,11)"/><text x="450.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="447" y="1508" width="3" height="15" fill="rgb(230,174,11)"/><text x="450.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="447" y="1524" width="3" height="15" fill="rgb(234,100,38)"/><text x="450.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="447" y="1540" width="3" height="15" fill="rgb(219,147,36)"/><text x="450.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="447" y="1556" width="3" height="15" fill="rgb(232,151,42)"/><text x="450.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="447" y="1572" width="3" height="15" fill="rgb(211,131,37)"/><text x="450.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="447" y="1588" width="3" height="15" fill="rgb(207,19,42)"/><text x="450.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="447" y="1604" width="3" height="15" fill="rgb(241,128,8)"/><text x="450.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.31%)</title><rect x="447" y="1620" width="3" height="15" fill="rgb(252,67,16)"/><text x="450.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="447" y="1636" width="3" height="15" fill="rgb(245,26,40)"/><text x="450.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="447" y="1652" width="3" height="15" fill="rgb(247,169,16)"/><text x="450.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="447" y="1668" width="3" height="15" fill="rgb(245,24,24)"/><text x="450.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="447" y="1684" width="3" height="15" fill="rgb(221,167,37)"/><text x="450.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="447" y="1700" width="3" height="15" fill="rgb(251,114,17)"/><text x="450.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.31%)</title><rect x="447" y="1716" width="3" height="15" fill="rgb(209,160,34)"/><text x="450.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="447" y="1732" width="3" height="15" fill="rgb(246,106,1)"/><text x="450.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="447" y="1748" width="3" height="15" fill="rgb(226,105,19)"/><text x="450.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="447" y="1764" width="3" height="15" fill="rgb(254,176,40)"/><text x="450.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="447" y="1780" width="3" height="15" fill="rgb(251,219,22)"/><text x="450.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="447" y="1796" width="3" height="15" fill="rgb(242,92,15)"/><text x="450.00" y="1806.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.31%)</title><rect x="447" y="1812" width="3" height="15" fill="rgb(217,87,23)"/><text x="450.00" y="1822.50"></text></g><g><title>pyparsing_common (pyparsing.py:6666) (1 samples, 0.31%)</title><rect x="447" y="1828" width="3" height="15" fill="rgb(238,153,47)"/><text x="450.00" y="1838.50"></text></g><g><title>__init__ (pyparsing.py:5105) (1 samples, 0.31%)</title><rect x="447" y="1844" width="3" height="15" fill="rgb(247,152,49)"/><text x="450.00" y="1854.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.31%)</title><rect x="447" y="1860" width="3" height="15" fill="rgb(234,226,18)"/><text x="450.00" y="1870.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4449) (1 samples, 0.31%)</title><rect x="447" y="1876" width="3" height="15" fill="rgb(215,187,40)"/><text x="450.00" y="1886.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.31%)</title><rect x="447" y="1892" width="3" height="15" fill="rgb(211,216,5)"/><text x="450.00" y="1902.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.31%)</title><rect x="447" y="1908" width="3" height="15" fill="rgb(217,120,39)"/><text x="450.00" y="1918.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.31%)</title><rect x="447" y="1924" width="3" height="15" fill="rgb(214,43,36)"/><text x="450.00" y="1934.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.31%)</title><rect x="447" y="1940" width="3" height="15" fill="rgb(223,76,47)"/><text x="450.00" y="1950.50"></text></g><g><title>copy (pyparsing.py:3951) (1 samples, 0.31%)</title><rect x="447" y="1956" width="3" height="15" fill="rgb(254,196,24)"/><text x="450.00" y="1966.50"></text></g><g><title>copy (pyparsing.py:1437) (1 samples, 0.31%)</title><rect x="447" y="1972" width="3" height="15" fill="rgb(242,176,24)"/><text x="450.00" y="1982.50"></text></g><g><title>copy (copy.py:96) (1 samples, 0.31%)</title><rect x="447" y="1988" width="3" height="15" fill="rgb(246,75,46)"/><text x="450.00" y="1998.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.31%)</title><rect x="450" y="1012" width="4" height="15" fill="rgb(232,144,19)"/><text x="453.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="450" y="1028" width="4" height="15" fill="rgb(251,52,17)"/><text x="453.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="450" y="1044" width="4" height="15" fill="rgb(220,19,33)"/><text x="453.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="450" y="1060" width="4" height="15" fill="rgb(253,173,12)"/><text x="453.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="450" y="1076" width="4" height="15" fill="rgb(218,29,21)"/><text x="453.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="450" y="1092" width="4" height="15" fill="rgb(208,46,53)"/><text x="453.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.31%)</title><rect x="450" y="1108" width="4" height="15" fill="rgb(247,64,7)"/><text x="453.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="450" y="1124" width="4" height="15" fill="rgb(222,22,46)"/><text x="453.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="450" y="1140" width="4" height="15" fill="rgb(241,86,21)"/><text x="453.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="450" y="1156" width="4" height="15" fill="rgb(252,175,18)"/><text x="453.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="450" y="1172" width="4" height="15" fill="rgb(222,88,6)"/><text x="453.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="450" y="1188" width="4" height="15" fill="rgb(219,227,17)"/><text x="453.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="450" y="1204" width="4" height="15" fill="rgb(209,88,28)"/><text x="453.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="450" y="1220" width="4" height="15" fill="rgb(241,111,37)"/><text x="453.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.31%)</title><rect x="450" y="1236" width="4" height="15" fill="rgb(206,64,21)"/><text x="453.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="450" y="1252" width="4" height="15" fill="rgb(252,54,2)"/><text x="453.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="450" y="1268" width="4" height="15" fill="rgb(237,219,21)"/><text x="453.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="450" y="1284" width="4" height="15" fill="rgb(226,219,13)"/><text x="453.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="450" y="1300" width="4" height="15" fill="rgb(236,77,35)"/><text x="453.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="450" y="1316" width="4" height="15" fill="rgb(248,224,30)"/><text x="453.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.31%)</title><rect x="450" y="1332" width="4" height="15" fill="rgb(253,109,50)"/><text x="453.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.31%)</title><rect x="450" y="1348" width="4" height="15" fill="rgb(228,143,53)"/><text x="453.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.31%)</title><rect x="450" y="1364" width="4" height="15" fill="rgb(234,68,44)"/><text x="453.00" y="1374.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (2 samples, 0.62%)</title><rect x="450" y="532" width="7" height="15" fill="rgb(239,160,19)"/><text x="453.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="450" y="548" width="7" height="15" fill="rgb(214,224,6)"/><text x="453.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="450" y="564" width="7" height="15" fill="rgb(254,198,49)"/><text x="453.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="450" y="580" width="7" height="15" fill="rgb(205,86,44)"/><text x="453.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="450" y="596" width="7" height="15" fill="rgb(239,216,41)"/><text x="453.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="450" y="612" width="7" height="15" fill="rgb(243,170,3)"/><text x="453.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.62%)</title><rect x="450" y="628" width="7" height="15" fill="rgb(248,107,32)"/><text x="453.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="450" y="644" width="7" height="15" fill="rgb(236,142,7)"/><text x="453.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="450" y="660" width="7" height="15" fill="rgb(230,125,28)"/><text x="453.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="450" y="676" width="7" height="15" fill="rgb(215,44,20)"/><text x="453.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="450" y="692" width="7" height="15" fill="rgb(226,121,2)"/><text x="453.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="450" y="708" width="7" height="15" fill="rgb(232,126,0)"/><text x="453.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.62%)</title><rect x="450" y="724" width="7" height="15" fill="rgb(210,163,28)"/><text x="453.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="450" y="740" width="7" height="15" fill="rgb(244,62,27)"/><text x="453.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="450" y="756" width="7" height="15" fill="rgb(243,83,15)"/><text x="453.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="450" y="772" width="7" height="15" fill="rgb(230,173,4)"/><text x="453.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="450" y="788" width="7" height="15" fill="rgb(237,15,24)"/><text x="453.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="450" y="804" width="7" height="15" fill="rgb(206,193,18)"/><text x="453.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.62%)</title><rect x="450" y="820" width="7" height="15" fill="rgb(249,119,49)"/><text x="453.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="450" y="836" width="7" height="15" fill="rgb(205,225,51)"/><text x="453.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="450" y="852" width="7" height="15" fill="rgb(223,76,15)"/><text x="453.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="450" y="868" width="7" height="15" fill="rgb(208,140,45)"/><text x="453.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="450" y="884" width="7" height="15" fill="rgb(223,84,9)"/><text x="453.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="450" y="900" width="7" height="15" fill="rgb(209,108,22)"/><text x="453.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.62%)</title><rect x="450" y="916" width="7" height="15" fill="rgb(233,75,26)"/><text x="453.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="450" y="932" width="7" height="15" fill="rgb(216,116,12)"/><text x="453.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="450" y="948" width="7" height="15" fill="rgb(209,85,2)"/><text x="453.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="450" y="964" width="7" height="15" fill="rgb(240,129,17)"/><text x="453.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="450" y="980" width="7" height="15" fill="rgb(221,20,14)"/><text x="453.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="450" y="996" width="7" height="15" fill="rgb(216,61,25)"/><text x="453.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:381) (1 samples, 0.31%)</title><rect x="454" y="1012" width="3" height="15" fill="rgb(224,181,11)"/><text x="457.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:981) (1 samples, 0.31%)</title><rect x="454" y="1028" width="3" height="15" fill="rgb(227,30,43)"/><text x="457.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.31%)</title><rect x="457" y="1316" width="4" height="15" fill="rgb(223,124,43)"/><text x="460.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.31%)</title><rect x="457" y="1332" width="4" height="15" fill="rgb(210,117,22)"/><text x="460.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.31%)</title><rect x="457" y="1348" width="4" height="15" fill="rgb(249,147,7)"/><text x="460.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.31%)</title><rect x="457" y="1364" width="4" height="15" fill="rgb(224,71,44)"/><text x="460.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.31%)</title><rect x="457" y="1380" width="4" height="15" fill="rgb(253,80,5)"/><text x="460.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.31%)</title><rect x="457" y="1396" width="4" height="15" fill="rgb(231,101,21)"/><text x="460.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="457" y="1412" width="4" height="15" fill="rgb(246,229,26)"/><text x="460.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:47) (1 samples, 0.31%)</title><rect x="457" y="1428" width="4" height="15" fill="rgb(246,179,25)"/><text x="460.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py:254) (1 samples, 0.31%)</title><rect x="457" y="1444" width="4" height="15" fill="rgb(209,21,7)"/><text x="460.00" y="1454.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (9 samples, 2.78%)</title><rect x="432" y="148" width="33" height="15" fill="rgb(228,78,8)"/><text x="435.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.78%)</title><rect x="432" y="164" width="33" height="15" fill="rgb(245,69,1)"/><text x="435.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.78%)</title><rect x="432" y="180" width="33" height="15" fill="rgb(206,123,19)"/><text x="435.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.78%)</title><rect x="432" y="196" width="33" height="15" fill="rgb(231,38,7)"/><text x="435.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.78%)</title><rect x="432" y="212" width="33" height="15" fill="rgb(225,182,36)"/><text x="435.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.78%)</title><rect x="432" y="228" width="33" height="15" fill="rgb(227,127,34)"/><text x="435.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.78%)</title><rect x="432" y="244" width="33" height="15" fill="rgb(211,189,36)"/><text x="435.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.78%)</title><rect x="432" y="260" width="33" height="15" fill="rgb(212,172,8)"/><text x="435.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.78%)</title><rect x="432" y="276" width="33" height="15" fill="rgb(206,139,16)"/><text x="435.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.23%)</title><rect x="450" y="292" width="15" height="15" fill="rgb(253,169,9)"/><text x="453.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="450" y="308" width="15" height="15" fill="rgb(232,170,20)"/><text x="453.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.23%)</title><rect x="450" y="324" width="15" height="15" fill="rgb(233,54,20)"/><text x="453.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.23%)</title><rect x="450" y="340" width="15" height="15" fill="rgb(218,9,9)"/><text x="453.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="450" y="356" width="15" height="15" fill="rgb(231,24,53)"/><text x="453.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.23%)</title><rect x="450" y="372" width="15" height="15" fill="rgb(249,57,31)"/><text x="453.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.23%)</title><rect x="450" y="388" width="15" height="15" fill="rgb(209,117,24)"/><text x="453.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.23%)</title><rect x="450" y="404" width="15" height="15" fill="rgb(230,201,44)"/><text x="453.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.23%)</title><rect x="450" y="420" width="15" height="15" fill="rgb(233,24,27)"/><text x="453.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.23%)</title><rect x="450" y="436" width="15" height="15" fill="rgb(251,215,4)"/><text x="453.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.23%)</title><rect x="450" y="452" width="15" height="15" fill="rgb(251,141,51)"/><text x="453.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.23%)</title><rect x="450" y="468" width="15" height="15" fill="rgb(237,32,18)"/><text x="453.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.23%)</title><rect x="450" y="484" width="15" height="15" fill="rgb(230,207,27)"/><text x="453.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.23%)</title><rect x="450" y="500" width="15" height="15" fill="rgb(230,74,26)"/><text x="453.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.23%)</title><rect x="450" y="516" width="15" height="15" fill="rgb(237,148,15)"/><text x="453.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.62%)</title><rect x="457" y="532" width="8" height="15" fill="rgb(252,176,46)"/><text x="460.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="548" width="8" height="15" fill="rgb(246,183,52)"/><text x="460.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="564" width="8" height="15" fill="rgb(220,135,7)"/><text x="460.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="580" width="8" height="15" fill="rgb(214,201,42)"/><text x="460.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="596" width="8" height="15" fill="rgb(235,117,17)"/><text x="460.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="612" width="8" height="15" fill="rgb(208,217,0)"/><text x="460.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.62%)</title><rect x="457" y="628" width="8" height="15" fill="rgb(215,33,25)"/><text x="460.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="644" width="8" height="15" fill="rgb(253,193,1)"/><text x="460.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="660" width="8" height="15" fill="rgb(227,144,31)"/><text x="460.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="676" width="8" height="15" fill="rgb(226,172,24)"/><text x="460.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="692" width="8" height="15" fill="rgb(208,86,2)"/><text x="460.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="708" width="8" height="15" fill="rgb(247,218,54)"/><text x="460.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.62%)</title><rect x="457" y="724" width="8" height="15" fill="rgb(226,35,16)"/><text x="460.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="740" width="8" height="15" fill="rgb(224,189,40)"/><text x="460.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.62%)</title><rect x="457" y="756" width="8" height="15" fill="rgb(227,225,0)"/><text x="460.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="772" width="8" height="15" fill="rgb(218,47,45)"/><text x="460.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="788" width="8" height="15" fill="rgb(219,90,29)"/><text x="460.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="804" width="8" height="15" fill="rgb(222,197,37)"/><text x="460.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="820" width="8" height="15" fill="rgb(240,101,26)"/><text x="460.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="836" width="8" height="15" fill="rgb(242,210,47)"/><text x="460.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="852" width="8" height="15" fill="rgb(238,1,43)"/><text x="460.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.62%)</title><rect x="457" y="868" width="8" height="15" fill="rgb(249,218,52)"/><text x="460.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="884" width="8" height="15" fill="rgb(250,166,2)"/><text x="460.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="900" width="8" height="15" fill="rgb(223,36,19)"/><text x="460.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="916" width="8" height="15" fill="rgb(213,60,24)"/><text x="460.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="932" width="8" height="15" fill="rgb(208,41,26)"/><text x="460.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="948" width="8" height="15" fill="rgb(219,169,30)"/><text x="460.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.62%)</title><rect x="457" y="964" width="8" height="15" fill="rgb(214,226,14)"/><text x="460.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.62%)</title><rect x="457" y="980" width="8" height="15" fill="rgb(221,110,51)"/><text x="460.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="996" width="8" height="15" fill="rgb(211,57,6)"/><text x="460.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="1012" width="8" height="15" fill="rgb(220,206,18)"/><text x="460.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="1028" width="8" height="15" fill="rgb(237,159,13)"/><text x="460.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="1044" width="8" height="15" fill="rgb(244,207,53)"/><text x="460.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="1060" width="8" height="15" fill="rgb(212,62,6)"/><text x="460.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="1076" width="8" height="15" fill="rgb(216,102,21)"/><text x="460.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.62%)</title><rect x="457" y="1092" width="8" height="15" fill="rgb(239,88,47)"/><text x="460.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.62%)</title><rect x="457" y="1108" width="8" height="15" fill="rgb(216,13,4)"/><text x="460.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="1124" width="8" height="15" fill="rgb(209,37,38)"/><text x="460.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="1140" width="8" height="15" fill="rgb(216,71,22)"/><text x="460.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="1156" width="8" height="15" fill="rgb(239,67,30)"/><text x="460.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="1172" width="8" height="15" fill="rgb(207,42,36)"/><text x="460.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="1188" width="8" height="15" fill="rgb(219,1,48)"/><text x="460.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="1204" width="8" height="15" fill="rgb(216,17,50)"/><text x="460.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.62%)</title><rect x="457" y="1220" width="8" height="15" fill="rgb(231,72,17)"/><text x="460.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="457" y="1236" width="8" height="15" fill="rgb(237,228,54)"/><text x="460.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="457" y="1252" width="8" height="15" fill="rgb(211,39,30)"/><text x="460.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="457" y="1268" width="8" height="15" fill="rgb(226,80,47)"/><text x="460.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="457" y="1284" width="8" height="15" fill="rgb(217,21,1)"/><text x="460.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="457" y="1300" width="8" height="15" fill="rgb(205,25,24)"/><text x="460.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.31%)</title><rect x="461" y="1316" width="4" height="15" fill="rgb(227,102,26)"/><text x="464.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="461" y="1332" width="4" height="15" fill="rgb(253,114,8)"/><text x="464.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="461" y="1348" width="4" height="15" fill="rgb(228,156,36)"/><text x="464.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="461" y="1364" width="4" height="15" fill="rgb(218,92,54)"/><text x="464.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="461" y="1380" width="4" height="15" fill="rgb(229,207,34)"/><text x="464.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="461" y="1396" width="4" height="15" fill="rgb(207,228,34)"/><text x="464.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:281) (1 samples, 0.31%)</title><rect x="461" y="1412" width="4" height="15" fill="rgb(222,35,26)"/><text x="464.00" y="1422.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py:278) (1 samples, 0.31%)</title><rect x="461" y="1428" width="4" height="15" fill="rgb(244,144,13)"/><text x="464.00" y="1438.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.31%)</title><rect x="461" y="1444" width="4" height="15" fill="rgb(208,224,29)"/><text x="464.00" y="1454.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.31%)</title><rect x="461" y="1460" width="4" height="15" fill="rgb(241,207,28)"/><text x="464.00" y="1470.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.31%)</title><rect x="461" y="1476" width="4" height="15" fill="rgb(217,178,23)"/><text x="464.00" y="1486.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.31%)</title><rect x="461" y="1492" width="4" height="15" fill="rgb(235,53,33)"/><text x="464.00" y="1502.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.31%)</title><rect x="461" y="1508" width="4" height="15" fill="rgb(217,29,12)"/><text x="464.00" y="1518.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.31%)</title><rect x="461" y="1524" width="4" height="15" fill="rgb(247,97,46)"/><text x="464.00" y="1534.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.31%)</title><rect x="461" y="1540" width="4" height="15" fill="rgb(247,25,17)"/><text x="464.00" y="1550.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.31%)</title><rect x="461" y="1556" width="4" height="15" fill="rgb(210,118,22)"/><text x="464.00" y="1566.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.31%)</title><rect x="461" y="1572" width="4" height="15" fill="rgb(232,161,45)"/><text x="464.00" y="1582.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.31%)</title><rect x="461" y="1588" width="4" height="15" fill="rgb(221,92,50)"/><text x="464.00" y="1598.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.31%)</title><rect x="461" y="1604" width="4" height="15" fill="rgb(234,170,29)"/><text x="464.00" y="1614.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.31%)</title><rect x="461" y="1620" width="4" height="15" fill="rgb(230,197,15)"/><text x="464.00" y="1630.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.31%)</title><rect x="461" y="1636" width="4" height="15" fill="rgb(207,67,2)"/><text x="464.00" y="1646.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.31%)</title><rect x="461" y="1652" width="4" height="15" fill="rgb(213,109,8)"/><text x="464.00" y="1662.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.31%)</title><rect x="461" y="1668" width="4" height="15" fill="rgb(221,183,18)"/><text x="464.00" y="1678.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.31%)</title><rect x="461" y="1684" width="4" height="15" fill="rgb(254,193,51)"/><text x="464.00" y="1694.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.31%)</title><rect x="461" y="1700" width="4" height="15" fill="rgb(230,108,17)"/><text x="464.00" y="1710.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.31%)</title><rect x="461" y="1716" width="4" height="15" fill="rgb(229,175,8)"/><text x="464.00" y="1726.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.31%)</title><rect x="461" y="1732" width="4" height="15" fill="rgb(254,19,4)"/><text x="464.00" y="1742.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.31%)</title><rect x="461" y="1748" width="4" height="15" fill="rgb(233,157,37)"/><text x="464.00" y="1758.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.31%)</title><rect x="461" y="1764" width="4" height="15" fill="rgb(215,14,5)"/><text x="464.00" y="1774.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.31%)</title><rect x="461" y="1780" width="4" height="15" fill="rgb(207,25,39)"/><text x="464.00" y="1790.50"></text></g><g><title>parse_postfix (jinja2/parser.py:672) (1 samples, 0.31%)</title><rect x="461" y="1796" width="4" height="15" fill="rgb(224,75,33)"/><text x="464.00" y="1806.50"></text></g><g><title>parse_subscript (jinja2/parser.py:697) (1 samples, 0.31%)</title><rect x="461" y="1812" width="4" height="15" fill="rgb(238,156,35)"/><text x="464.00" y="1822.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.31%)</title><rect x="461" y="1828" width="4" height="15" fill="rgb(228,218,19)"/><text x="464.00" y="1838.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.31%)</title><rect x="461" y="1844" width="4" height="15" fill="rgb(228,53,49)"/><text x="464.00" y="1854.50"></text></g><g><title>tokeniter (jinja2/lexer.py:692) (1 samples, 0.31%)</title><rect x="461" y="1860" width="4" height="15" fill="rgb(253,208,50)"/><text x="464.00" y="1870.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:4) (17 samples, 5.25%)</title><rect x="406" y="52" width="62" height="15" fill="rgb(243,89,9)"/><text x="409.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 5.25%)</title><rect x="406" y="68" width="62" height="15" fill="rgb(246,138,26)"/><text x="409.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 5.25%)</title><rect x="406" y="84" width="62" height="15" fill="rgb(232,74,15)"/><text x="409.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 5.25%)</title><rect x="406" y="100" width="62" height="15" fill="rgb(216,139,19)"/><text x="409.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 5.25%)</title><rect x="406" y="116" width="62" height="15" fill="rgb(229,173,45)"/><text x="409.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 5.25%)</title><rect x="406" y="132" width="62" height="15" fill="rgb(238,10,39)"/><text x="409.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (1 samples, 0.31%)</title><rect x="465" y="148" width="3" height="15" fill="rgb(246,178,15)"/><text x="468.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="164" width="3" height="15" fill="rgb(216,91,10)"/><text x="468.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="465" y="180" width="3" height="15" fill="rgb(212,226,43)"/><text x="468.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="465" y="196" width="3" height="15" fill="rgb(231,80,27)"/><text x="468.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="465" y="212" width="3" height="15" fill="rgb(210,137,15)"/><text x="468.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="228" width="3" height="15" fill="rgb(229,131,51)"/><text x="468.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.31%)</title><rect x="465" y="244" width="3" height="15" fill="rgb(231,222,45)"/><text x="468.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="260" width="3" height="15" fill="rgb(214,102,9)"/><text x="468.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="465" y="276" width="3" height="15" fill="rgb(254,106,3)"/><text x="468.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="465" y="292" width="3" height="15" fill="rgb(223,46,17)"/><text x="468.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="465" y="308" width="3" height="15" fill="rgb(206,136,49)"/><text x="468.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="324" width="3" height="15" fill="rgb(253,122,49)"/><text x="468.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.31%)</title><rect x="465" y="340" width="3" height="15" fill="rgb(230,220,14)"/><text x="468.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="356" width="3" height="15" fill="rgb(212,97,32)"/><text x="468.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="465" y="372" width="3" height="15" fill="rgb(223,107,0)"/><text x="468.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="388" width="3" height="15" fill="rgb(245,153,33)"/><text x="468.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="404" width="3" height="15" fill="rgb(243,36,10)"/><text x="468.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="465" y="420" width="3" height="15" fill="rgb(234,18,30)"/><text x="468.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="465" y="436" width="3" height="15" fill="rgb(229,94,45)"/><text x="468.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="465" y="452" width="3" height="15" fill="rgb(216,137,51)"/><text x="468.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="468" width="3" height="15" fill="rgb(254,135,8)"/><text x="468.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.31%)</title><rect x="465" y="484" width="3" height="15" fill="rgb(242,145,37)"/><text x="468.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="500" width="3" height="15" fill="rgb(214,45,45)"/><text x="468.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="465" y="516" width="3" height="15" fill="rgb(228,171,32)"/><text x="468.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="465" y="532" width="3" height="15" fill="rgb(205,194,47)"/><text x="468.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="465" y="548" width="3" height="15" fill="rgb(220,43,26)"/><text x="468.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="564" width="3" height="15" fill="rgb(230,14,4)"/><text x="468.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.31%)</title><rect x="465" y="580" width="3" height="15" fill="rgb(245,225,41)"/><text x="468.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="596" width="3" height="15" fill="rgb(220,176,23)"/><text x="468.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="465" y="612" width="3" height="15" fill="rgb(237,66,16)"/><text x="468.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="465" y="628" width="3" height="15" fill="rgb(224,185,18)"/><text x="468.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="465" y="644" width="3" height="15" fill="rgb(220,115,21)"/><text x="468.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="660" width="3" height="15" fill="rgb(224,201,24)"/><text x="468.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.31%)</title><rect x="465" y="676" width="3" height="15" fill="rgb(211,150,39)"/><text x="468.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="465" y="692" width="3" height="15" fill="rgb(205,160,8)"/><text x="468.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="465" y="708" width="3" height="15" fill="rgb(230,24,29)"/><text x="468.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="465" y="724" width="3" height="15" fill="rgb(205,202,37)"/><text x="468.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="465" y="740" width="3" height="15" fill="rgb(234,36,51)"/><text x="468.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="465" y="756" width="3" height="15" fill="rgb(239,96,21)"/><text x="468.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.31%)</title><rect x="465" y="772" width="3" height="15" fill="rgb(218,57,45)"/><text x="468.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.31%)</title><rect x="465" y="788" width="3" height="15" fill="rgb(235,227,10)"/><text x="468.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.31%)</title><rect x="465" y="804" width="3" height="15" fill="rgb(254,12,27)"/><text x="468.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.31%)</title><rect x="465" y="820" width="3" height="15" fill="rgb(223,51,48)"/><text x="468.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.31%)</title><rect x="465" y="836" width="3" height="15" fill="rgb(209,126,40)"/><text x="468.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="465" y="852" width="3" height="15" fill="rgb(240,34,24)"/><text x="468.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.31%)</title><rect x="465" y="868" width="3" height="15" fill="rgb(246,103,21)"/><text x="468.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.31%)</title><rect x="465" y="884" width="3" height="15" fill="rgb(222,162,5)"/><text x="468.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:511) (1 samples, 0.31%)</title><rect x="465" y="900" width="3" height="15" fill="rgb(231,161,11)"/><text x="468.00" y="910.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:18) (1 samples, 0.31%)</title><rect x="468" y="100" width="4" height="15" fill="rgb(232,111,2)"/><text x="471.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.31%)</title><rect x="468" y="116" width="4" height="15" fill="rgb(210,190,6)"/><text x="471.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.31%)</title><rect x="468" y="132" width="4" height="15" fill="rgb(227,51,27)"/><text x="471.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.31%)</title><rect x="468" y="148" width="4" height="15" fill="rgb(214,198,44)"/><text x="471.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.31%)</title><rect x="468" y="164" width="4" height="15" fill="rgb(241,99,44)"/><text x="471.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.31%)</title><rect x="468" y="180" width="4" height="15" fill="rgb(244,139,43)"/><text x="471.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.31%)</title><rect x="468" y="196" width="4" height="15" fill="rgb(241,163,21)"/><text x="471.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.31%)</title><rect x="468" y="212" width="4" height="15" fill="rgb(241,41,31)"/><text x="471.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.31%)</title><rect x="468" y="228" width="4" height="15" fill="rgb(213,66,54)"/><text x="471.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (1 samples, 0.31%)</title><rect x="468" y="244" width="4" height="15" fill="rgb(214,216,16)"/><text x="471.00" y="254.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.31%)</title><rect x="468" y="260" width="4" height="15" fill="rgb(236,99,0)"/><text x="471.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.31%)</title><rect x="468" y="276" width="4" height="15" fill="rgb(228,180,22)"/><text x="471.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.31%)</title><rect x="468" y="292" width="4" height="15" fill="rgb(207,197,7)"/><text x="471.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="472" y="116" width="4" height="15" fill="rgb(231,47,19)"/><text x="475.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="472" y="132" width="4" height="15" fill="rgb(226,219,20)"/><text x="475.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="472" y="148" width="4" height="15" fill="rgb(251,154,23)"/><text x="475.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.31%)</title><rect x="479" y="148" width="4" height="15" fill="rgb(238,138,0)"/><text x="482.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.31%)</title><rect x="483" y="164" width="4" height="15" fill="rgb(235,82,39)"/><text x="486.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.62%)</title><rect x="490" y="180" width="8" height="15" fill="rgb(218,60,41)"/><text x="493.00" y="190.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.62%)</title><rect x="530" y="340" width="8" height="15" fill="rgb(246,106,49)"/><text x="533.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.62%)</title><rect x="530" y="356" width="8" height="15" fill="rgb(246,201,28)"/><text x="533.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.31%)</title><rect x="534" y="372" width="4" height="15" fill="rgb(220,5,49)"/><text x="537.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2200) (1 samples, 0.31%)</title><rect x="534" y="388" width="4" height="15" fill="rgb(213,217,2)"/><text x="537.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.31%)</title><rect x="538" y="356" width="3" height="15" fill="rgb(253,108,8)"/><text x="541.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.31%)</title><rect x="538" y="372" width="3" height="15" fill="rgb(205,3,44)"/><text x="541.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.31%)</title><rect x="538" y="388" width="3" height="15" fill="rgb(232,164,54)"/><text x="541.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.31%)</title><rect x="538" y="404" width="3" height="15" fill="rgb(227,36,52)"/><text x="541.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.31%)</title><rect x="538" y="420" width="3" height="15" fill="rgb(209,162,12)"/><text x="541.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:234) (1 samples, 0.31%)</title><rect x="541" y="372" width="4" height="15" fill="rgb(226,165,37)"/><text x="544.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.62%)</title><rect x="541" y="356" width="8" height="15" fill="rgb(217,89,8)"/><text x="544.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.31%)</title><rect x="545" y="372" width="4" height="15" fill="rgb(241,65,26)"/><text x="548.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.31%)</title><rect x="545" y="388" width="4" height="15" fill="rgb(243,134,46)"/><text x="548.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="545" y="404" width="4" height="15" fill="rgb(240,110,42)"/><text x="548.00" y="414.50"></text></g><g><title>0x7ff3a8ede6df (libc-2.29.so) (1 samples, 0.31%)</title><rect x="545" y="420" width="4" height="15" fill="rgb(207,149,40)"/><text x="548.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.31%)</title><rect x="549" y="372" width="3" height="15" fill="rgb(207,57,8)"/><text x="552.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.31%)</title><rect x="549" y="388" width="3" height="15" fill="rgb(230,167,42)"/><text x="552.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.31%)</title><rect x="552" y="372" width="4" height="15" fill="rgb(206,199,15)"/><text x="555.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.31%)</title><rect x="556" y="372" width="3" height="15" fill="rgb(251,182,23)"/><text x="559.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.31%)</title><rect x="559" y="372" width="4" height="15" fill="rgb(205,181,20)"/><text x="562.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.31%)</title><rect x="563" y="372" width="4" height="15" fill="rgb(213,20,15)"/><text x="566.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.62%)</title><rect x="567" y="388" width="7" height="15" fill="rgb(222,73,21)"/><text x="570.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1668) (1 samples, 0.31%)</title><rect x="578" y="404" width="3" height="15" fill="rgb(227,219,35)"/><text x="581.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (3 samples, 0.93%)</title><rect x="574" y="388" width="11" height="15" fill="rgb(243,103,54)"/><text x="577.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1721) (1 samples, 0.31%)</title><rect x="581" y="404" width="4" height="15" fill="rgb(242,92,38)"/><text x="584.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.31%)</title><rect x="585" y="388" width="4" height="15" fill="rgb(251,28,3)"/><text x="588.00" y="398.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 5.25%)</title><rect x="530" y="276" width="62" height="15" fill="rgb(218,4,23)"/><text x="533.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 5.25%)</title><rect x="530" y="292" width="62" height="15" fill="rgb(220,227,0)"/><text x="533.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 5.25%)</title><rect x="530" y="308" width="62" height="15" fill="rgb(242,23,23)"/><text x="533.00" y="318.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (17 samples, 5.25%)</title><rect x="530" y="324" width="62" height="15" fill="rgb(220,132,11)"/><text x="533.00" y="334.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (15 samples, 4.63%)</title><rect x="538" y="340" width="54" height="15" fill="rgb(208,80,35)"/><text x="541.00" y="350.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (12 samples, 3.70%)</title><rect x="549" y="356" width="43" height="15" fill="rgb(252,159,11)"/><text x="552.00" y="366.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 2.16%)</title><rect x="567" y="372" width="25" height="15" fill="rgb(250,103,45)"/><text x="570.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.31%)</title><rect x="589" y="388" width="3" height="15" fill="rgb(226,7,35)"/><text x="592.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 5.56%)</title><rect x="530" y="260" width="66" height="15" fill="rgb(235,23,35)"/><text x="533.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.31%)</title><rect x="592" y="276" width="4" height="15" fill="rgb(231,51,43)"/><text x="595.00" y="286.50"></text></g><g><title>0x7ff3a8efd124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="592" y="292" width="4" height="15" fill="rgb(253,164,44)"/><text x="595.00" y="302.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1055) (1 samples, 0.31%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(228,191,3)"/><text x="599.00" y="366.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (24 samples, 7.41%)</title><rect x="516" y="244" width="87" height="15" fill="rgb(245,228,8)"/><text x="519.00" y="254.50">norm_l1 (m..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.62%)</title><rect x="596" y="260" width="7" height="15" fill="rgb(231,106,18)"/><text x="599.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.62%)</title><rect x="596" y="276" width="7" height="15" fill="rgb(220,35,30)"/><text x="599.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.62%)</title><rect x="596" y="292" width="7" height="15" fill="rgb(216,60,1)"/><text x="599.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.62%)</title><rect x="596" y="308" width="7" height="15" fill="rgb(225,218,38)"/><text x="599.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (2 samples, 0.62%)</title><rect x="596" y="324" width="7" height="15" fill="rgb(250,163,18)"/><text x="599.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (2 samples, 0.62%)</title><rect x="596" y="340" width="7" height="15" fill="rgb(241,100,46)"/><text x="599.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.31%)</title><rect x="600" y="356" width="3" height="15" fill="rgb(211,117,18)"/><text x="603.00" y="366.50"></text></g><g><title>_mm_andnot_ps (xmmintrin.h:219) (1 samples, 0.31%)</title><rect x="600" y="372" width="3" height="15" fill="rgb(219,130,3)"/><text x="603.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.62%)</title><rect x="603" y="356" width="7" height="15" fill="rgb(234,227,5)"/><text x="606.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:212) (2 samples, 0.62%)</title><rect x="610" y="372" width="8" height="15" fill="rgb(245,143,0)"/><text x="613.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.85%)</title><rect x="603" y="308" width="22" height="15" fill="rgb(230,159,44)"/><text x="606.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.85%)</title><rect x="603" y="324" width="22" height="15" fill="rgb(211,84,38)"/><text x="606.00" y="334.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.85%)</title><rect x="603" y="340" width="22" height="15" fill="rgb(227,62,15)"/><text x="606.00" y="350.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 1.23%)</title><rect x="610" y="356" width="15" height="15" fill="rgb(235,172,13)"/><text x="613.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.62%)</title><rect x="618" y="372" width="7" height="15" fill="rgb(239,160,33)"/><text x="621.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.31%)</title><rect x="625" y="308" width="4" height="15" fill="rgb(208,158,5)"/><text x="628.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.31%)</title><rect x="625" y="324" width="4" height="15" fill="rgb(215,160,26)"/><text x="628.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (1 samples, 0.31%)</title><rect x="625" y="340" width="4" height="15" fill="rgb(237,54,11)"/><text x="628.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:603) (1 samples, 0.31%)</title><rect x="625" y="356" width="4" height="15" fill="rgb(222,227,3)"/><text x="628.00" y="366.50"></text></g><g><title>_mm_div_ps (xmmintrin.h:175) (1 samples, 0.31%)</title><rect x="625" y="372" width="4" height="15" fill="rgb(212,137,2)"/><text x="628.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (35 samples, 10.80%)</title><rect x="505" y="196" width="127" height="15" fill="rgb(240,150,42)"/><text x="508.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 10.80%)</title><rect x="505" y="212" width="127" height="15" fill="rgb(246,120,51)"/><text x="508.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (35 samples, 10.80%)</title><rect x="505" y="228" width="127" height="15" fill="rgb(215,141,17)"/><text x="508.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 2.47%)</title><rect x="603" y="244" width="29" height="15" fill="rgb(225,37,22)"/><text x="606.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.47%)</title><rect x="603" y="260" width="29" height="15" fill="rgb(216,152,27)"/><text x="606.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 2.47%)</title><rect x="603" y="276" width="29" height="15" fill="rgb(246,156,37)"/><text x="606.00" y="286.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.47%)</title><rect x="603" y="292" width="29" height="15" fill="rgb(239,163,49)"/><text x="606.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="629" y="308" width="3" height="15" fill="rgb(229,97,34)"/><text x="632.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.31%)</title><rect x="629" y="324" width="3" height="15" fill="rgb(212,47,0)"/><text x="632.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="629" y="340" width="3" height="15" fill="rgb(253,228,2)"/><text x="632.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.31%)</title><rect x="636" y="244" width="4" height="15" fill="rgb(242,112,8)"/><text x="639.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:5) (1 samples, 0.31%)</title><rect x="643" y="260" width="4" height="15" fill="rgb(227,104,25)"/><text x="646.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.31%)</title><rect x="647" y="292" width="3" height="15" fill="rgb(248,203,6)"/><text x="650.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.31%)</title><rect x="650" y="308" width="4" height="15" fill="rgb(222,27,32)"/><text x="653.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.31%)</title><rect x="650" y="324" width="4" height="15" fill="rgb(237,198,39)"/><text x="653.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.31%)</title><rect x="650" y="340" width="4" height="15" fill="rgb(209,204,32)"/><text x="653.00" y="350.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.31%)</title><rect x="650" y="356" width="4" height="15" fill="rgb(250,174,20)"/><text x="653.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.31%)</title><rect x="654" y="324" width="4" height="15" fill="rgb(252,141,47)"/><text x="657.00" y="334.50"></text></g><g><title>0x7ff3a8efd103 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="654" y="340" width="4" height="15" fill="rgb(242,41,20)"/><text x="657.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.85%)</title><rect x="647" y="276" width="22" height="15" fill="rgb(229,204,28)"/><text x="650.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.54%)</title><rect x="650" y="292" width="19" height="15" fill="rgb(246,127,22)"/><text x="653.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 1.23%)</title><rect x="654" y="308" width="15" height="15" fill="rgb(224,141,13)"/><text x="657.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 0.93%)</title><rect x="658" y="324" width="11" height="15" fill="rgb(248,63,33)"/><text x="661.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 0.93%)</title><rect x="658" y="340" width="11" height="15" fill="rgb(243,41,41)"/><text x="661.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="658" y="356" width="11" height="15" fill="rgb(238,207,8)"/><text x="661.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="658" y="372" width="11" height="15" fill="rgb(225,191,31)"/><text x="661.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="658" y="388" width="11" height="15" fill="rgb(212,201,16)"/><text x="661.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="669" y="276" width="11" height="15" fill="rgb(235,228,18)"/><text x="672.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (21 samples, 6.48%)</title><rect x="632" y="228" width="77" height="15" fill="rgb(248,19,38)"/><text x="635.00" y="238.50">_run (ml..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (19 samples, 5.86%)</title><rect x="640" y="244" width="69" height="15" fill="rgb(207,35,33)"/><text x="643.00" y="254.50">numpy_d..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (17 samples, 5.25%)</title><rect x="647" y="260" width="62" height="15" fill="rgb(240,84,29)"/><text x="650.00" y="270.50">dot (&lt;..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 2.47%)</title><rect x="680" y="276" width="29" height="15" fill="rgb(236,223,0)"/><text x="683.00" y="286.50">sg..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2457) (1 samples, 0.31%)</title><rect x="709" y="324" width="3" height="15" fill="rgb(231,45,33)"/><text x="712.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.62%)</title><rect x="712" y="340" width="8" height="15" fill="rgb(207,50,41)"/><text x="715.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (4 samples, 1.23%)</title><rect x="709" y="228" width="14" height="15" fill="rgb(246,152,7)"/><text x="712.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.23%)</title><rect x="709" y="244" width="14" height="15" fill="rgb(240,106,44)"/><text x="712.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.23%)</title><rect x="709" y="260" width="14" height="15" fill="rgb(229,8,23)"/><text x="712.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.23%)</title><rect x="709" y="276" width="14" height="15" fill="rgb(228,24,38)"/><text x="712.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 1.23%)</title><rect x="709" y="292" width="14" height="15" fill="rgb(233,136,31)"/><text x="712.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 1.23%)</title><rect x="709" y="308" width="14" height="15" fill="rgb(252,137,1)"/><text x="712.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.93%)</title><rect x="712" y="324" width="11" height="15" fill="rgb(207,181,36)"/><text x="715.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.31%)</title><rect x="720" y="340" width="3" height="15" fill="rgb(238,43,9)"/><text x="723.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.31%)</title><rect x="720" y="356" width="3" height="15" fill="rgb(224,35,17)"/><text x="723.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.62%)</title><rect x="723" y="244" width="8" height="15" fill="rgb(211,40,16)"/><text x="726.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.62%)</title><rect x="723" y="260" width="8" height="15" fill="rgb(234,213,43)"/><text x="726.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.62%)</title><rect x="723" y="276" width="8" height="15" fill="rgb(252,26,1)"/><text x="726.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.62%)</title><rect x="723" y="292" width="8" height="15" fill="rgb(233,97,40)"/><text x="726.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.62%)</title><rect x="723" y="308" width="8" height="15" fill="rgb(249,195,32)"/><text x="726.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.31%)</title><rect x="731" y="260" width="3" height="15" fill="rgb(222,110,20)"/><text x="734.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.31%)</title><rect x="731" y="276" width="3" height="15" fill="rgb(237,135,7)"/><text x="734.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.31%)</title><rect x="731" y="292" width="3" height="15" fill="rgb(208,122,23)"/><text x="734.00" y="302.50"></text></g><g><title>0x7ff38b2e1302 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="734" y="308" width="4" height="15" fill="rgb(233,40,17)"/><text x="737.00" y="318.50"></text></g><g><title>0x7ff38b2e133a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="738" y="308" width="7" height="15" fill="rgb(251,160,14)"/><text x="741.00" y="318.50"></text></g><g><title>0x7ff38b2c1890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="745" y="340" width="4" height="15" fill="rgb(215,144,50)"/><text x="748.00" y="350.50"></text></g><g><title>0x7ff38b40cc70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="749" y="340" width="3" height="15" fill="rgb(222,62,38)"/><text x="752.00" y="350.50"></text></g><g><title>0x7ff3a905be17 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="793" y="356" width="3" height="15" fill="rgb(244,223,50)"/><text x="796.00" y="366.50"></text></g><g><title>0x7ff3a905be37 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="796" y="356" width="4" height="15" fill="rgb(210,226,46)"/><text x="799.00" y="366.50"></text></g><g><title>0x7ff3a905be4e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="800" y="356" width="3" height="15" fill="rgb(248,154,45)"/><text x="803.00" y="366.50"></text></g><g><title>0x7ff3a905be62 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="803" y="356" width="4" height="15" fill="rgb(206,63,52)"/><text x="806.00" y="366.50"></text></g><g><title>0x7ff3a905be71 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="807" y="356" width="7" height="15" fill="rgb(248,130,52)"/><text x="810.00" y="366.50"></text></g><g><title>0x7ff3a905be96 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="814" y="356" width="4" height="15" fill="rgb(221,189,49)"/><text x="817.00" y="366.50"></text></g><g><title>0x7ff38b303214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 6.79%)</title><rect x="745" y="324" width="80" height="15" fill="rgb(240,26,48)"/><text x="748.00" y="334.50">0x7ff38b3..</text></g><g><title>expf (libm-2.29.so) (20 samples, 6.17%)</title><rect x="752" y="340" width="73" height="15" fill="rgb(246,107,30)"/><text x="755.00" y="350.50">expf (li..</text></g><g><title>0x7ff3a905bea6 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="818" y="356" width="7" height="15" fill="rgb(228,12,20)"/><text x="821.00" y="366.50"></text></g><g><title>0x7ff38b2e133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 8.64%)</title><rect x="745" y="308" width="102" height="15" fill="rgb(230,108,38)"/><text x="748.00" y="318.50">0x7ff38b2e13..</text></g><g><title>0x7ff38b303228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.85%)</title><rect x="825" y="324" width="22" height="15" fill="rgb(239,167,36)"/><text x="828.00" y="334.50">0..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (35 samples, 10.80%)</title><rect x="723" y="228" width="128" height="15" fill="rgb(214,92,24)"/><text x="726.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (33 samples, 10.19%)</title><rect x="731" y="244" width="120" height="15" fill="rgb(219,148,4)"/><text x="734.00" y="254.50">ufunc_generic_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (32 samples, 9.88%)</title><rect x="734" y="260" width="117" height="15" fill="rgb(209,72,21)"/><text x="737.00" y="270.50">PyUFunc_Generi..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (32 samples, 9.88%)</title><rect x="734" y="276" width="117" height="15" fill="rgb(225,20,5)"/><text x="737.00" y="286.50">execute_legacy..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (32 samples, 9.88%)</title><rect x="734" y="292" width="117" height="15" fill="rgb(232,27,21)"/><text x="737.00" y="302.50">trivial_two_op..</text></g><g><title>0x7ff38b2e1345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="847" y="308" width="4" height="15" fill="rgb(209,9,10)"/><text x="850.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.31%)</title><rect x="854" y="292" width="4" height="15" fill="rgb(239,151,27)"/><text x="857.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.31%)</title><rect x="862" y="324" width="3" height="15" fill="rgb(241,175,45)"/><text x="865.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="862" y="340" width="3" height="15" fill="rgb(244,4,29)"/><text x="865.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.31%)</title><rect x="862" y="356" width="3" height="15" fill="rgb(210,193,6)"/><text x="865.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.31%)</title><rect x="862" y="372" width="3" height="15" fill="rgb(251,142,45)"/><text x="865.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.31%)</title><rect x="862" y="388" width="3" height="15" fill="rgb(241,222,50)"/><text x="865.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.31%)</title><rect x="862" y="404" width="3" height="15" fill="rgb(234,144,48)"/><text x="865.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="862" y="420" width="3" height="15" fill="rgb(220,6,29)"/><text x="865.00" y="430.50"></text></g><g><title>0x7ff3a8ede700 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="862" y="436" width="3" height="15" fill="rgb(213,71,45)"/><text x="865.00" y="446.50"></text></g><g><title>0x7ff3a8edbab9 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="862" y="452" width="3" height="15" fill="rgb(230,215,31)"/><text x="865.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (102 samples, 31.48%)</title><rect x="498" y="180" width="371" height="15" fill="rgb(228,110,5)"/><text x="501.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (65 samples, 20.06%)</title><rect x="632" y="196" width="237" height="15" fill="rgb(232,163,39)"/><text x="635.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (65 samples, 20.06%)</title><rect x="632" y="212" width="237" height="15" fill="rgb(253,64,10)"/><text x="635.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (5 samples, 1.54%)</title><rect x="851" y="228" width="18" height="15" fill="rgb(218,42,13)"/><text x="854.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 1.23%)</title><rect x="854" y="244" width="15" height="15" fill="rgb(215,146,26)"/><text x="857.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.23%)</title><rect x="854" y="260" width="15" height="15" fill="rgb(239,219,49)"/><text x="857.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (4 samples, 1.23%)</title><rect x="854" y="276" width="15" height="15" fill="rgb(227,8,12)"/><text x="857.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.93%)</title><rect x="858" y="292" width="11" height="15" fill="rgb(238,151,15)"/><text x="861.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.62%)</title><rect x="862" y="308" width="7" height="15" fill="rgb(246,172,48)"/><text x="865.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.31%)</title><rect x="865" y="324" width="4" height="15" fill="rgb(234,195,41)"/><text x="868.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.31%)</title><rect x="865" y="340" width="4" height="15" fill="rgb(213,228,24)"/><text x="868.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.93%)</title><rect x="869" y="180" width="11" height="15" fill="rgb(206,47,8)"/><text x="872.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (110 samples, 33.95%)</title><rect x="487" y="164" width="400" height="15" fill="rgb(208,169,5)"/><text x="490.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.62%)</title><rect x="880" y="180" width="7" height="15" fill="rgb(225,174,50)"/><text x="883.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (114 samples, 35.19%)</title><rect x="476" y="132" width="415" height="15" fill="rgb(238,77,0)"/><text x="479.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (112 samples, 34.57%)</title><rect x="483" y="148" width="408" height="15" fill="rgb(208,172,40)"/><text x="486.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.31%)</title><rect x="887" y="164" width="4" height="15" fill="rgb(217,78,16)"/><text x="890.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:45) (117 samples, 36.11%)</title><rect x="468" y="52" width="427" height="15" fill="rgb(242,47,33)"/><text x="471.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverli..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:44) (117 samples, 36.11%)</title><rect x="468" y="68" width="427" height="15" fill="rgb(239,104,22)"/><text x="471.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (117 samples, 36.11%)</title><rect x="468" y="84" width="427" height="15" fill="rgb(242,37,26)"/><text x="471.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_sol..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (116 samples, 35.80%)</title><rect x="472" y="100" width="423" height="15" fill="rgb(237,83,51)"/><text x="475.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (115 samples, 35.49%)</title><rect x="476" y="116" width="419" height="15" fill="rgb(208,127,54)"/><text x="479.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="891" y="132" width="4" height="15" fill="rgb(254,31,51)"/><text x="894.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="902" y="116" width="3" height="15" fill="rgb(224,225,25)"/><text x="905.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.31%)</title><rect x="902" y="132" width="3" height="15" fill="rgb(247,58,18)"/><text x="905.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.31%)</title><rect x="916" y="196" width="4" height="15" fill="rgb(205,77,44)"/><text x="919.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.31%)</title><rect x="916" y="212" width="4" height="15" fill="rgb(216,6,10)"/><text x="919.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="916" y="228" width="4" height="15" fill="rgb(222,215,15)"/><text x="919.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="916" y="244" width="4" height="15" fill="rgb(234,206,31)"/><text x="919.00" y="254.50"></text></g><g><title>0x7ff3a8edc906 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="916" y="260" width="4" height="15" fill="rgb(242,176,11)"/><text x="919.00" y="270.50"></text></g><g><title>0x7ff369785ff9 (?) (1 samples, 0.31%)</title><rect x="924" y="212" width="3" height="15" fill="rgb(215,202,52)"/><text x="927.00" y="222.50"></text></g><g><title>0x7ff369780ef6 (?) (1 samples, 0.31%)</title><rect x="924" y="228" width="3" height="15" fill="rgb(229,188,41)"/><text x="927.00" y="238.50"></text></g><g><title>0x7ff369775962 (?) (1 samples, 0.31%)</title><rect x="924" y="244" width="3" height="15" fill="rgb(243,226,24)"/><text x="927.00" y="254.50"></text></g><g><title>0x7ff3697a97a7 (?) (1 samples, 0.31%)</title><rect x="924" y="260" width="3" height="15" fill="rgb(254,120,54)"/><text x="927.00" y="270.50"></text></g><g><title>0x7ff3697a9379 (?) (1 samples, 0.31%)</title><rect x="924" y="276" width="3" height="15" fill="rgb(217,42,35)"/><text x="927.00" y="286.50"></text></g><g><title>0x7ff369c078b8 (?) (1 samples, 0.31%)</title><rect x="924" y="292" width="3" height="15" fill="rgb(241,111,29)"/><text x="927.00" y="302.50"></text></g><g><title>0x7ff369c05c7f (?) (1 samples, 0.31%)</title><rect x="924" y="308" width="3" height="15" fill="rgb(246,22,19)"/><text x="927.00" y="318.50"></text></g><g><title>0x7ff369c1899c (?) (1 samples, 0.31%)</title><rect x="924" y="324" width="3" height="15" fill="rgb(215,151,6)"/><text x="927.00" y="334.50"></text></g><g><title>0x7ff3698fdd39 (?) (1 samples, 0.31%)</title><rect x="924" y="340" width="3" height="15" fill="rgb(215,84,27)"/><text x="927.00" y="350.50"></text></g><g><title>0x7ff3698f8439 (?) (1 samples, 0.31%)</title><rect x="924" y="356" width="3" height="15" fill="rgb(252,147,45)"/><text x="927.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="927" y="292" width="4" height="15" fill="rgb(211,149,30)"/><text x="930.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="927" y="308" width="4" height="15" fill="rgb(207,10,8)"/><text x="930.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="927" y="324" width="4" height="15" fill="rgb(210,180,46)"/><text x="930.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="931" y="292" width="7" height="15" fill="rgb(242,180,41)"/><text x="934.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="938" y="340" width="4" height="15" fill="rgb(209,12,53)"/><text x="941.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="938" y="356" width="4" height="15" fill="rgb(235,21,3)"/><text x="941.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="938" y="372" width="4" height="15" fill="rgb(232,157,20)"/><text x="941.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="942" y="340" width="3" height="15" fill="rgb(244,147,37)"/><text x="945.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1018" y="356" width="4" height="15" fill="rgb(238,174,9)"/><text x="1021.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1018" y="372" width="4" height="15" fill="rgb(228,122,18)"/><text x="1021.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1018" y="388" width="4" height="15" fill="rgb(229,144,40)"/><text x="1021.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1018" y="404" width="4" height="15" fill="rgb(230,78,39)"/><text x="1021.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1018" y="420" width="4" height="15" fill="rgb(232,52,45)"/><text x="1021.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1018" y="436" width="4" height="15" fill="rgb(224,74,33)"/><text x="1021.00" y="446.50"></text></g><g><title>0x7ff3a8efcdb3 (libc-2.29.so) (2 samples, 0.62%)</title><rect x="1073" y="372" width="7" height="15" fill="rgb(238,73,0)"/><text x="1076.00" y="382.50"></text></g><g><title>0x7ff3a905be0a (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1080" y="372" width="4" height="15" fill="rgb(208,28,38)"/><text x="1083.00" y="382.50"></text></g><g><title>0x7ff3a905be4a (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1084" y="372" width="4" height="15" fill="rgb(242,132,5)"/><text x="1087.00" y="382.50"></text></g><g><title>0x7ff3a905be4e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1088" y="372" width="3" height="15" fill="rgb(238,134,52)"/><text x="1091.00" y="382.50"></text></g><g><title>0x7ff3a905be62 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1091" y="372" width="4" height="15" fill="rgb(220,1,23)"/><text x="1094.00" y="382.50"></text></g><g><title>0x7ff3a905be71 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="1095" y="372" width="7" height="15" fill="rgb(222,136,15)"/><text x="1098.00" y="382.50"></text></g><g><title>0x7ff3a905be7a (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1102" y="372" width="4" height="15" fill="rgb(246,21,32)"/><text x="1105.00" y="382.50"></text></g><g><title>0x7ff3a905be7e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1106" y="372" width="3" height="15" fill="rgb(238,186,31)"/><text x="1109.00" y="382.50"></text></g><g><title>0x7ff3a905be86 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1109" y="372" width="4" height="15" fill="rgb(245,173,44)"/><text x="1112.00" y="382.50"></text></g><g><title>0x7ff3a905be96 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="1113" y="372" width="7" height="15" fill="rgb(250,208,37)"/><text x="1116.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 15.12%)</title><rect x="945" y="340" width="179" height="15" fill="rgb(237,146,31)"/><text x="948.00" y="350.50">onnxruntime::ml::Linear..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 8.64%)</title><rect x="1022" y="356" width="102" height="15" fill="rgb(228,12,39)"/><text x="1025.00" y="366.50">onnxruntime:..</text></g><g><title>0x7ff3a905bea6 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1120" y="372" width="4" height="15" fill="rgb(228,98,20)"/><text x="1123.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 20.99%)</title><rect x="927" y="260" width="248" height="15" fill="rgb(230,69,4)"/><text x="930.00" y="270.50">onnxruntime::InferenceSession::Ru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 20.99%)</title><rect x="927" y="276" width="248" height="15" fill="rgb(239,145,53)"/><text x="930.00" y="286.50">onnxruntime::InferenceSession::Ru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 20.06%)</title><rect x="938" y="292" width="237" height="15" fill="rgb(221,139,40)"/><text x="941.00" y="302.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 20.06%)</title><rect x="938" y="308" width="237" height="15" fill="rgb(251,24,19)"/><text x="941.00" y="318.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (65 samples, 20.06%)</title><rect x="938" y="324" width="237" height="15" fill="rgb(207,155,34)"/><text x="941.00" y="334.50">onnxruntime::SequentialExecutor..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.32%)</title><rect x="1124" y="340" width="51" height="15" fill="rgb(207,139,17)"/><text x="1127.00" y="350.50">onnxr..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 4.01%)</title><rect x="1128" y="356" width="47" height="15" fill="rgb(234,114,31)"/><text x="1131.00" y="366.50">onnx..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(226,66,51)"/><text x="1178.00" y="270.50"></text></g><g><title>0x7ff3a8efcd94 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(240,178,0)"/><text x="1182.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (74 samples, 22.84%)</title><rect x="916" y="164" width="270" height="15" fill="rgb(228,140,22)"/><text x="919.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (74 samples, 22.84%)</title><rect x="916" y="180" width="270" height="15" fill="rgb(251,135,52)"/><text x="919.00" y="190.50">run (mlprodict/onnxrt/ops_whole/sess..</text></g><g><title>run (onnxruntime/capi/session.py:136) (73 samples, 22.53%)</title><rect x="920" y="196" width="266" height="15" fill="rgb(212,39,33)"/><text x="923.00" y="206.50">run (onnxruntime/capi/session.py:13..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (71 samples, 21.91%)</title><rect x="927" y="212" width="259" height="15" fill="rgb(211,183,5)"/><text x="930.00" y="222.50">pybind11::cpp_function::dispatcher..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (71 samples, 21.91%)</title><rect x="927" y="228" width="259" height="15" fill="rgb(236,46,21)"/><text x="930.00" y="238.50">void pybind11::cpp_function::initi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (71 samples, 21.91%)</title><rect x="927" y="244" width="259" height="15" fill="rgb(241,90,14)"/><text x="930.00" y="254.50">onnxruntime::python::addObjectMeth..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1179" y="260" width="7" height="15" fill="rgb(249,140,21)"/><text x="1182.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.31%)</title><rect x="1182" y="276" width="4" height="15" fill="rgb(250,191,7)"/><text x="1185.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.31%)</title><rect x="1182" y="292" width="4" height="15" fill="rgb(213,89,17)"/><text x="1185.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.31%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(226,96,49)"/><text x="1185.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.31%)</title><rect x="1182" y="324" width="4" height="15" fill="rgb(230,131,3)"/><text x="1185.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.31%)</title><rect x="1182" y="340" width="4" height="15" fill="rgb(222,37,0)"/><text x="1185.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1182" y="356" width="4" height="15" fill="rgb(248,59,7)"/><text x="1185.00" y="366.50"></text></g><g><title>all (324 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,161,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:52) (81 samples, 25.00%)</title><rect x="895" y="52" width="295" height="15" fill="rgb(253,142,52)"/><text x="898.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_libl..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:51) (81 samples, 25.00%)</title><rect x="895" y="68" width="295" height="15" fill="rgb(248,16,45)"/><text x="898.00" y="78.50">profile_ort (bench_LogisticRegression_l..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:29) (81 samples, 25.00%)</title><rect x="895" y="84" width="295" height="15" fill="rgb(253,218,45)"/><text x="898.00" y="94.50">setup_profile (bench_LogisticRegression..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py:23) (81 samples, 25.00%)</title><rect x="895" y="100" width="295" height="15" fill="rgb(252,152,52)"/><text x="898.00" y="110.50">profile (bench_LogisticRegression_libli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (78 samples, 24.07%)</title><rect x="905" y="116" width="285" height="15" fill="rgb(208,119,2)"/><text x="908.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (78 samples, 24.07%)</title><rect x="905" y="132" width="285" height="15" fill="rgb(248,189,29)"/><text x="908.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (76 samples, 23.46%)</title><rect x="913" y="148" width="277" height="15" fill="rgb(251,28,31)"/><text x="916.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.31%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(243,31,4)"/><text x="1189.00" y="174.50"></text></g></g></svg>