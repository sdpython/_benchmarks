<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>0x7f933aa76be2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="20" y="276" width="2" height="15" fill="rgb(227,159,33)"/><text x="23.00" y="286.50"></text></g><g><title>0x7f933aa76c52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="22" y="276" width="1" height="15" fill="rgb(228,96,19)"/><text x="25.00" y="286.50"></text></g><g><title>0x7f933aa76c5a (libm-2.29.so) (1 samples, 0.13%)</title><rect x="23" y="276" width="2" height="15" fill="rgb(209,111,28)"/><text x="26.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (5 samples, 0.66%)</title><rect x="19" y="260" width="8" height="15" fill="rgb(211,40,12)"/><text x="22.00" y="270.50"></text></g><g><title>0x7f933aa76c6e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="25" y="276" width="2" height="15" fill="rgb(217,30,10)"/><text x="28.00" y="286.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:18) (15 samples, 1.98%)</title><rect x="10" y="100" width="23" height="15" fill="rgb(244,133,14)"/><text x="13.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (15 samples, 1.98%)</title><rect x="10" y="116" width="23" height="15" fill="rgb(233,218,3)"/><text x="13.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (15 samples, 1.98%)</title><rect x="10" y="132" width="23" height="15" fill="rgb(248,148,43)"/><text x="13.00" y="142.50">&lt;..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (15 samples, 1.98%)</title><rect x="10" y="148" width="23" height="15" fill="rgb(215,139,17)"/><text x="13.00" y="158.50">_..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (15 samples, 1.98%)</title><rect x="10" y="164" width="23" height="15" fill="rgb(232,228,20)"/><text x="13.00" y="174.50">_..</text></g><g><title>0x7f93153953fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.98%)</title><rect x="10" y="180" width="23" height="15" fill="rgb(242,47,25)"/><text x="13.00" y="190.50">0..</text></g><g><title>0x7f9315393553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.98%)</title><rect x="10" y="196" width="23" height="15" fill="rgb(230,40,10)"/><text x="13.00" y="206.50">0..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.98%)</title><rect x="10" y="212" width="23" height="15" fill="rgb(224,188,16)"/><text x="13.00" y="222.50">c..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.98%)</title><rect x="10" y="228" width="23" height="15" fill="rgb(213,152,7)"/><text x="13.00" y="238.50">s..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.45%)</title><rect x="16" y="244" width="17" height="15" fill="rgb(236,98,26)"/><text x="19.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="27" y="260" width="6" height="15" fill="rgb(232,120,18)"/><text x="30.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.40%)</title><rect x="36" y="196" width="5" height="15" fill="rgb(225,105,15)"/><text x="39.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.13%)</title><rect x="39" y="212" width="2" height="15" fill="rgb(231,168,25)"/><text x="42.00" y="222.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (4 samples, 0.53%)</title><rect x="36" y="164" width="6" height="15" fill="rgb(232,155,42)"/><text x="39.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.53%)</title><rect x="36" y="180" width="6" height="15" fill="rgb(254,29,3)"/><text x="39.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.13%)</title><rect x="41" y="196" width="1" height="15" fill="rgb(225,189,38)"/><text x="44.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.13%)</title><rect x="42" y="212" width="2" height="15" fill="rgb(207,67,23)"/><text x="45.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.26%)</title><rect x="42" y="180" width="3" height="15" fill="rgb(223,135,48)"/><text x="45.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.26%)</title><rect x="42" y="196" width="3" height="15" fill="rgb(238,28,20)"/><text x="45.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.13%)</title><rect x="44" y="212" width="1" height="15" fill="rgb(249,72,51)"/><text x="47.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.13%)</title><rect x="44" y="228" width="1" height="15" fill="rgb(218,110,52)"/><text x="47.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.13%)</title><rect x="44" y="244" width="1" height="15" fill="rgb(248,6,1)"/><text x="47.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.13%)</title><rect x="44" y="260" width="1" height="15" fill="rgb(230,174,25)"/><text x="47.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.13%)</title><rect x="44" y="276" width="1" height="15" fill="rgb(246,192,10)"/><text x="47.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.13%)</title><rect x="44" y="292" width="1" height="15" fill="rgb(247,186,22)"/><text x="47.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.13%)</title><rect x="44" y="308" width="1" height="15" fill="rgb(254,20,32)"/><text x="47.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.13%)</title><rect x="45" y="180" width="2" height="15" fill="rgb(223,27,30)"/><text x="48.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.13%)</title><rect x="45" y="196" width="2" height="15" fill="rgb(237,149,42)"/><text x="48.00" y="206.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (8 samples, 1.05%)</title><rect x="36" y="148" width="12" height="15" fill="rgb(222,137,47)"/><text x="39.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (4 samples, 0.53%)</title><rect x="42" y="164" width="6" height="15" fill="rgb(242,162,36)"/><text x="45.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.13%)</title><rect x="47" y="180" width="1" height="15" fill="rgb(237,143,5)"/><text x="50.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.13%)</title><rect x="47" y="196" width="1" height="15" fill="rgb(246,199,9)"/><text x="50.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.13%)</title><rect x="47" y="212" width="1" height="15" fill="rgb(209,0,27)"/><text x="50.00" y="222.50"></text></g><g><title>0x7f9315392d58 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="48" y="196" width="2" height="15" fill="rgb(213,37,25)"/><text x="51.00" y="206.50"></text></g><g><title>0x7f931537c5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="48" y="212" width="2" height="15" fill="rgb(250,156,24)"/><text x="51.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.13%)</title><rect x="48" y="228" width="2" height="15" fill="rgb(242,105,54)"/><text x="51.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.13%)</title><rect x="48" y="244" width="2" height="15" fill="rgb(247,150,44)"/><text x="51.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.13%)</title><rect x="48" y="260" width="2" height="15" fill="rgb(219,132,19)"/><text x="51.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="48" y="276" width="2" height="15" fill="rgb(245,60,26)"/><text x="51.00" y="286.50"></text></g><g><title>0x7f931539312f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="50" y="196" width="1" height="15" fill="rgb(243,3,16)"/><text x="53.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.13%)</title><rect x="50" y="212" width="1" height="15" fill="rgb(236,168,13)"/><text x="53.00" y="222.50"></text></g><g><title>0x7f9315393237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="51" y="196" width="2" height="15" fill="rgb(239,26,53)"/><text x="54.00" y="206.50"></text></g><g><title>0x7f931537dce3 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="51" y="212" width="2" height="15" fill="rgb(242,24,11)"/><text x="54.00" y="222.50"></text></g><g><title>0x7f933a8a4a47 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="115" y="244" width="2" height="15" fill="rgb(227,52,20)"/><text x="118.00" y="254.50"></text></g><g><title>0x7f933a8a4a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="117" y="244" width="1" height="15" fill="rgb(216,53,43)"/><text x="120.00" y="254.50"></text></g><g><title>0x7f933a8a4a51 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="118" y="244" width="2" height="15" fill="rgb(243,201,36)"/><text x="121.00" y="254.50"></text></g><g><title>0x7f933a8a4bd4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="120" y="244" width="1" height="15" fill="rgb(230,185,38)"/><text x="123.00" y="254.50"></text></g><g><title>0x7f933a8a4d07 (libc-2.29.so) (4 samples, 0.53%)</title><rect x="121" y="244" width="7" height="15" fill="rgb(209,154,46)"/><text x="124.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (3 samples, 0.40%)</title><rect x="128" y="244" width="4" height="15" fill="rgb(231,112,11)"/><text x="131.00" y="254.50"></text></g><g><title>0x7f933a8a5b61 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="142" y="260" width="1" height="15" fill="rgb(228,117,1)"/><text x="145.00" y="270.50"></text></g><g><title>0x7f933a8a5c38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="143" y="260" width="2" height="15" fill="rgb(223,166,42)"/><text x="146.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.19%)</title><rect x="132" y="244" width="14" height="15" fill="rgb(246,139,53)"/><text x="135.00" y="254.50"></text></g><g><title>0x7f933a8a600a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="145" y="260" width="1" height="15" fill="rgb(253,156,1)"/><text x="148.00" y="270.50"></text></g><g><title>0x7f933aa76bb4 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="205" y="276" width="3" height="15" fill="rgb(243,183,41)"/><text x="208.00" y="286.50"></text></g><g><title>0x7f933aa76bd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="208" y="276" width="2" height="15" fill="rgb(221,218,48)"/><text x="211.00" y="286.50"></text></g><g><title>0x7f933aa76be7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="210" y="276" width="2" height="15" fill="rgb(207,16,21)"/><text x="213.00" y="286.50"></text></g><g><title>0x7f933aa76bf9 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="212" y="276" width="4" height="15" fill="rgb(222,8,38)"/><text x="215.00" y="286.50"></text></g><g><title>0x7f933aa76c07 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(232,209,54)"/><text x="219.00" y="286.50"></text></g><g><title>0x7f933aa76c18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="218" y="276" width="1" height="15" fill="rgb(244,6,15)"/><text x="221.00" y="286.50"></text></g><g><title>0x7f933aa76c46 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="219" y="276" width="5" height="15" fill="rgb(223,75,11)"/><text x="222.00" y="286.50"></text></g><g><title>0x7f933aa76c52 (libm-2.29.so) (10 samples, 1.32%)</title><rect x="224" y="276" width="16" height="15" fill="rgb(247,129,49)"/><text x="227.00" y="286.50"></text></g><g><title>0x7f933aa76c5a (libm-2.29.so) (4 samples, 0.53%)</title><rect x="240" y="276" width="6" height="15" fill="rgb(239,30,53)"/><text x="243.00" y="286.50"></text></g><g><title>0x7f933aa76c6e (libm-2.29.so) (10 samples, 1.32%)</title><rect x="246" y="276" width="15" height="15" fill="rgb(228,105,53)"/><text x="249.00" y="286.50"></text></g><g><title>0x7f933aa76c7b (libm-2.29.so) (8 samples, 1.05%)</title><rect x="261" y="276" width="13" height="15" fill="rgb(237,178,24)"/><text x="264.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (64 samples, 8.43%)</title><rect x="181" y="260" width="99" height="15" fill="rgb(236,64,22)"/><text x="184.00" y="270.50">exp (libm-2..</text></g><g><title>0x7f933aa76c7f (libm-2.29.so) (4 samples, 0.53%)</title><rect x="274" y="276" width="6" height="15" fill="rgb(242,166,39)"/><text x="277.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.26%)</title><rect x="280" y="260" width="3" height="15" fill="rgb(253,198,48)"/><text x="283.00" y="270.50"></text></g><g><title>0x7f9315393553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (178 samples, 23.45%)</title><rect x="53" y="196" width="277" height="15" fill="rgb(234,214,47)"/><text x="56.00" y="206.50">0x7f9315393553 (sklearn/svm/_libsvm.c..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (178 samples, 23.45%)</title><rect x="53" y="212" width="277" height="15" fill="rgb(240,115,36)"/><text x="56.00" y="222.50">copy_predict_proba (sklearn/svm/_libs..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (178 samples, 23.45%)</title><rect x="53" y="228" width="277" height="15" fill="rgb(238,111,1)"/><text x="56.00" y="238.50">svm_predict_probability (sklearn/svm/..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (118 samples, 15.55%)</title><rect x="146" y="244" width="184" height="15" fill="rgb(230,97,27)"/><text x="149.00" y="254.50">svm_predict_values (skl..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (30 samples, 3.95%)</title><rect x="283" y="260" width="47" height="15" fill="rgb(216,157,28)"/><text x="286.00" y="270.50">svm:..</text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:38) (207 samples, 27.27%)</title><rect x="10" y="52" width="321" height="15" fill="rgb(247,57,6)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTru..</text></g><g><title>profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:37) (207 samples, 27.27%)</title><rect x="10" y="68" width="321" height="15" fill="rgb(212,72,15)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_rbf_b_cl_probability..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:29) (207 samples, 27.27%)</title><rect x="10" y="84" width="321" height="15" fill="rgb(220,85,33)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabili..</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:23) (192 samples, 25.30%)</title><rect x="33" y="100" width="298" height="15" fill="rgb(206,90,27)"/><text x="36.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityT..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (192 samples, 25.30%)</title><rect x="33" y="116" width="298" height="15" fill="rgb(214,135,19)"/><text x="36.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (191 samples, 25.16%)</title><rect x="34" y="132" width="297" height="15" fill="rgb(219,197,32)"/><text x="37.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (182 samples, 23.98%)</title><rect x="48" y="148" width="283" height="15" fill="rgb(213,199,25)"/><text x="51.00" y="158.50">_predict_proba (sklearn/svm/_base.py:..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (182 samples, 23.98%)</title><rect x="48" y="164" width="283" height="15" fill="rgb(253,76,50)"/><text x="51.00" y="174.50">_dense_predict_proba (sklearn/svm/_ba..</text></g><g><title>0x7f93153953fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (182 samples, 23.98%)</title><rect x="48" y="180" width="283" height="15" fill="rgb(208,15,23)"/><text x="51.00" y="190.50">0x7f93153953fd (sklearn/svm/_libsvm.c..</text></g><g><title>0x7f9315393c20 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="330" y="196" width="1" height="15" fill="rgb(222,221,51)"/><text x="333.00" y="206.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:1) (1 samples, 0.13%)</title><rect x="331" y="148" width="2" height="15" fill="rgb(219,117,48)"/><text x="334.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="331" y="164" width="2" height="15" fill="rgb(215,168,24)"/><text x="334.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="331" y="180" width="2" height="15" fill="rgb(218,99,3)"/><text x="334.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="331" y="196" width="2" height="15" fill="rgb(243,144,1)"/><text x="334.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="331" y="212" width="2" height="15" fill="rgb(215,172,47)"/><text x="334.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="228" width="2" height="15" fill="rgb(240,127,10)"/><text x="334.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.13%)</title><rect x="331" y="244" width="2" height="15" fill="rgb(234,122,7)"/><text x="334.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="331" y="260" width="2" height="15" fill="rgb(248,214,41)"/><text x="334.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="276" width="2" height="15" fill="rgb(223,41,4)"/><text x="334.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="331" y="292" width="2" height="15" fill="rgb(233,172,22)"/><text x="334.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="331" y="308" width="2" height="15" fill="rgb(215,51,38)"/><text x="334.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="331" y="324" width="2" height="15" fill="rgb(220,9,4)"/><text x="334.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="331" y="340" width="2" height="15" fill="rgb(213,20,23)"/><text x="334.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="356" width="2" height="15" fill="rgb(232,144,18)"/><text x="334.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.13%)</title><rect x="331" y="372" width="2" height="15" fill="rgb(228,13,9)"/><text x="334.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="331" y="388" width="2" height="15" fill="rgb(210,126,17)"/><text x="334.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="404" width="2" height="15" fill="rgb(253,31,9)"/><text x="334.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="331" y="420" width="2" height="15" fill="rgb(249,174,9)"/><text x="334.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="331" y="436" width="2" height="15" fill="rgb(253,36,30)"/><text x="334.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="331" y="452" width="2" height="15" fill="rgb(231,182,35)"/><text x="334.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="331" y="468" width="2" height="15" fill="rgb(252,171,3)"/><text x="334.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="484" width="2" height="15" fill="rgb(226,65,43)"/><text x="334.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2412) (1 samples, 0.13%)</title><rect x="331" y="500" width="2" height="15" fill="rgb(232,70,29)"/><text x="334.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="331" y="516" width="2" height="15" fill="rgb(211,183,43)"/><text x="334.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="532" width="2" height="15" fill="rgb(209,192,23)"/><text x="334.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="331" y="548" width="2" height="15" fill="rgb(222,56,15)"/><text x="334.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="331" y="564" width="2" height="15" fill="rgb(210,143,37)"/><text x="334.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="331" y="580" width="2" height="15" fill="rgb(220,86,13)"/><text x="334.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="331" y="596" width="2" height="15" fill="rgb(244,10,37)"/><text x="334.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="331" y="612" width="2" height="15" fill="rgb(240,61,17)"/><text x="334.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/arrayprint.py:1538) (1 samples, 0.13%)</title><rect x="331" y="628" width="2" height="15" fill="rgb(214,59,50)"/><text x="334.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.13%)</title><rect x="331" y="644" width="2" height="15" fill="rgb(235,178,54)"/><text x="334.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.13%)</title><rect x="333" y="228" width="1" height="15" fill="rgb(239,2,46)"/><text x="336.00" y="238.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.13%)</title><rect x="333" y="244" width="1" height="15" fill="rgb(245,148,15)"/><text x="336.00" y="254.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap&gt;:723) (1 samples, 0.13%)</title><rect x="333" y="260" width="1" height="15" fill="rgb(212,138,10)"/><text x="336.00" y="270.50"></text></g><g><title>0x7f933a983765 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="333" y="276" width="1" height="15" fill="rgb(250,37,9)"/><text x="336.00" y="286.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (1 samples, 0.13%)</title><rect x="334" y="820" width="2" height="15" fill="rgb(229,210,38)"/><text x="337.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (1 samples, 0.13%)</title><rect x="334" y="836" width="2" height="15" fill="rgb(228,201,4)"/><text x="337.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.13%)</title><rect x="334" y="852" width="2" height="15" fill="rgb(221,73,16)"/><text x="337.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.13%)</title><rect x="334" y="868" width="2" height="15" fill="rgb(223,58,31)"/><text x="337.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.13%)</title><rect x="334" y="884" width="2" height="15" fill="rgb(238,78,24)"/><text x="337.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.13%)</title><rect x="334" y="900" width="2" height="15" fill="rgb(222,31,51)"/><text x="337.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.13%)</title><rect x="334" y="916" width="2" height="15" fill="rgb(242,83,53)"/><text x="337.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.13%)</title><rect x="334" y="932" width="2" height="15" fill="rgb(252,221,24)"/><text x="337.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.13%)</title><rect x="334" y="948" width="2" height="15" fill="rgb(220,42,39)"/><text x="337.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.13%)</title><rect x="334" y="964" width="2" height="15" fill="rgb(229,105,7)"/><text x="337.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.13%)</title><rect x="334" y="980" width="2" height="15" fill="rgb(240,33,49)"/><text x="337.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.13%)</title><rect x="334" y="996" width="2" height="15" fill="rgb(220,88,30)"/><text x="337.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.13%)</title><rect x="334" y="1012" width="2" height="15" fill="rgb(216,36,0)"/><text x="337.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.13%)</title><rect x="334" y="1028" width="2" height="15" fill="rgb(231,74,48)"/><text x="337.00" y="1038.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="334" y="1044" width="2" height="15" fill="rgb(205,20,29)"/><text x="337.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:2) (3 samples, 0.40%)</title><rect x="333" y="148" width="5" height="15" fill="rgb(250,43,16)"/><text x="336.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="333" y="164" width="5" height="15" fill="rgb(212,62,31)"/><text x="336.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.40%)</title><rect x="333" y="180" width="5" height="15" fill="rgb(229,199,27)"/><text x="336.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="333" y="196" width="5" height="15" fill="rgb(242,147,27)"/><text x="336.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="333" y="212" width="5" height="15" fill="rgb(213,177,49)"/><text x="336.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="334" y="228" width="4" height="15" fill="rgb(233,167,54)"/><text x="337.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="334" y="244" width="4" height="15" fill="rgb(232,92,0)"/><text x="337.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="334" y="260" width="4" height="15" fill="rgb(207,155,31)"/><text x="337.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="276" width="4" height="15" fill="rgb(241,68,48)"/><text x="337.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.26%)</title><rect x="334" y="292" width="4" height="15" fill="rgb(218,98,27)"/><text x="337.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="334" y="308" width="4" height="15" fill="rgb(225,9,19)"/><text x="337.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="334" y="324" width="4" height="15" fill="rgb(237,71,27)"/><text x="337.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="334" y="340" width="4" height="15" fill="rgb(205,198,40)"/><text x="337.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="334" y="356" width="4" height="15" fill="rgb(236,106,7)"/><text x="337.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="372" width="4" height="15" fill="rgb(247,79,51)"/><text x="337.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.26%)</title><rect x="334" y="388" width="4" height="15" fill="rgb(229,58,42)"/><text x="337.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="334" y="404" width="4" height="15" fill="rgb(220,39,17)"/><text x="337.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="334" y="420" width="4" height="15" fill="rgb(238,160,42)"/><text x="337.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="334" y="436" width="4" height="15" fill="rgb(220,152,26)"/><text x="337.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="334" y="452" width="4" height="15" fill="rgb(243,133,18)"/><text x="337.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="468" width="4" height="15" fill="rgb(245,164,7)"/><text x="337.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.26%)</title><rect x="334" y="484" width="4" height="15" fill="rgb(225,99,11)"/><text x="337.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="334" y="500" width="4" height="15" fill="rgb(216,4,4)"/><text x="337.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="334" y="516" width="4" height="15" fill="rgb(216,41,5)"/><text x="337.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="334" y="532" width="4" height="15" fill="rgb(238,47,47)"/><text x="337.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="334" y="548" width="4" height="15" fill="rgb(222,155,27)"/><text x="337.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="564" width="4" height="15" fill="rgb(251,192,7)"/><text x="337.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.26%)</title><rect x="334" y="580" width="4" height="15" fill="rgb(219,48,30)"/><text x="337.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="334" y="596" width="4" height="15" fill="rgb(220,89,44)"/><text x="337.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.26%)</title><rect x="334" y="612" width="4" height="15" fill="rgb(245,97,40)"/><text x="337.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="628" width="4" height="15" fill="rgb(253,12,7)"/><text x="337.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="334" y="644" width="4" height="15" fill="rgb(226,226,2)"/><text x="337.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="334" y="660" width="4" height="15" fill="rgb(228,164,3)"/><text x="337.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="334" y="676" width="4" height="15" fill="rgb(239,222,5)"/><text x="337.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="334" y="692" width="4" height="15" fill="rgb(227,161,10)"/><text x="337.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="708" width="4" height="15" fill="rgb(230,188,47)"/><text x="337.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.26%)</title><rect x="334" y="724" width="4" height="15" fill="rgb(219,155,46)"/><text x="337.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="334" y="740" width="4" height="15" fill="rgb(232,53,18)"/><text x="337.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="334" y="756" width="4" height="15" fill="rgb(216,31,31)"/><text x="337.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="334" y="772" width="4" height="15" fill="rgb(219,41,49)"/><text x="337.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="334" y="788" width="4" height="15" fill="rgb(214,32,53)"/><text x="337.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="334" y="804" width="4" height="15" fill="rgb(205,190,22)"/><text x="337.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.13%)</title><rect x="336" y="820" width="2" height="15" fill="rgb(237,164,37)"/><text x="339.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="336" y="836" width="2" height="15" fill="rgb(244,120,22)"/><text x="339.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="336" y="852" width="2" height="15" fill="rgb(221,112,28)"/><text x="339.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="336" y="868" width="2" height="15" fill="rgb(220,126,37)"/><text x="339.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="336" y="884" width="2" height="15" fill="rgb(238,88,34)"/><text x="339.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="336" y="900" width="2" height="15" fill="rgb(251,158,42)"/><text x="339.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.13%)</title><rect x="336" y="916" width="2" height="15" fill="rgb(236,152,46)"/><text x="339.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.13%)</title><rect x="336" y="932" width="2" height="15" fill="rgb(219,29,10)"/><text x="339.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="336" y="948" width="2" height="15" fill="rgb(239,147,7)"/><text x="339.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="336" y="964" width="2" height="15" fill="rgb(234,59,11)"/><text x="339.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.13%)</title><rect x="336" y="980" width="2" height="15" fill="rgb(242,80,33)"/><text x="339.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.13%)</title><rect x="336" y="996" width="2" height="15" fill="rgb(218,178,18)"/><text x="339.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.13%)</title><rect x="336" y="1012" width="2" height="15" fill="rgb(230,136,54)"/><text x="339.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.13%)</title><rect x="336" y="1028" width="2" height="15" fill="rgb(238,74,44)"/><text x="339.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.13%)</title><rect x="336" y="1044" width="2" height="15" fill="rgb(222,145,44)"/><text x="339.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:98) (1 samples, 0.13%)</title><rect x="336" y="1060" width="2" height="15" fill="rgb(221,218,5)"/><text x="339.00" y="1070.50"></text></g><g><title>_sre_unicode_iscased (python3.7) (1 samples, 0.13%)</title><rect x="336" y="1076" width="2" height="15" fill="rgb(242,170,44)"/><text x="339.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:4) (1 samples, 0.13%)</title><rect x="338" y="148" width="1" height="15" fill="rgb(230,51,49)"/><text x="341.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="164" width="1" height="15" fill="rgb(221,138,41)"/><text x="341.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="338" y="180" width="1" height="15" fill="rgb(205,105,27)"/><text x="341.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="196" width="1" height="15" fill="rgb(245,12,20)"/><text x="341.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="212" width="1" height="15" fill="rgb(228,139,14)"/><text x="341.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="228" width="1" height="15" fill="rgb(225,180,30)"/><text x="341.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="244" width="1" height="15" fill="rgb(250,35,52)"/><text x="341.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="260" width="1" height="15" fill="rgb(215,144,48)"/><text x="341.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="276" width="1" height="15" fill="rgb(247,179,11)"/><text x="341.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.13%)</title><rect x="338" y="292" width="1" height="15" fill="rgb(246,70,37)"/><text x="341.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="308" width="1" height="15" fill="rgb(252,183,45)"/><text x="341.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="324" width="1" height="15" fill="rgb(236,183,11)"/><text x="341.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="340" width="1" height="15" fill="rgb(225,206,18)"/><text x="341.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="356" width="1" height="15" fill="rgb(221,138,39)"/><text x="341.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="372" width="1" height="15" fill="rgb(221,224,26)"/><text x="341.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.13%)</title><rect x="338" y="388" width="1" height="15" fill="rgb(248,124,3)"/><text x="341.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="404" width="1" height="15" fill="rgb(239,3,7)"/><text x="341.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="420" width="1" height="15" fill="rgb(251,195,51)"/><text x="341.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="436" width="1" height="15" fill="rgb(222,173,25)"/><text x="341.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="452" width="1" height="15" fill="rgb(220,62,16)"/><text x="341.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="468" width="1" height="15" fill="rgb(226,13,7)"/><text x="341.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.13%)</title><rect x="338" y="484" width="1" height="15" fill="rgb(205,227,25)"/><text x="341.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="500" width="1" height="15" fill="rgb(209,153,12)"/><text x="341.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="516" width="1" height="15" fill="rgb(206,191,51)"/><text x="341.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="532" width="1" height="15" fill="rgb(217,17,30)"/><text x="341.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="548" width="1" height="15" fill="rgb(216,210,36)"/><text x="341.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="564" width="1" height="15" fill="rgb(221,211,54)"/><text x="341.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.13%)</title><rect x="338" y="580" width="1" height="15" fill="rgb(250,216,50)"/><text x="341.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="596" width="1" height="15" fill="rgb(213,34,22)"/><text x="341.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="612" width="1" height="15" fill="rgb(212,120,10)"/><text x="341.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="628" width="1" height="15" fill="rgb(249,125,3)"/><text x="341.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="644" width="1" height="15" fill="rgb(230,95,8)"/><text x="341.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="660" width="1" height="15" fill="rgb(233,62,52)"/><text x="341.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.13%)</title><rect x="338" y="676" width="1" height="15" fill="rgb(247,201,10)"/><text x="341.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="692" width="1" height="15" fill="rgb(241,116,11)"/><text x="341.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="708" width="1" height="15" fill="rgb(228,113,8)"/><text x="341.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="724" width="1" height="15" fill="rgb(229,82,38)"/><text x="341.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="740" width="1" height="15" fill="rgb(237,48,42)"/><text x="341.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="756" width="1" height="15" fill="rgb(232,31,41)"/><text x="341.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.13%)</title><rect x="338" y="772" width="1" height="15" fill="rgb(218,158,3)"/><text x="341.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="338" y="788" width="1" height="15" fill="rgb(225,19,22)"/><text x="341.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="804" width="1" height="15" fill="rgb(243,10,33)"/><text x="341.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="820" width="1" height="15" fill="rgb(224,35,43)"/><text x="341.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="836" width="1" height="15" fill="rgb(221,147,5)"/><text x="341.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="852" width="1" height="15" fill="rgb(236,105,8)"/><text x="341.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="868" width="1" height="15" fill="rgb(205,145,49)"/><text x="341.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="884" width="1" height="15" fill="rgb(229,158,52)"/><text x="341.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.13%)</title><rect x="338" y="900" width="1" height="15" fill="rgb(234,174,36)"/><text x="341.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="338" y="916" width="1" height="15" fill="rgb(240,7,16)"/><text x="341.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="932" width="1" height="15" fill="rgb(235,60,29)"/><text x="341.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="338" y="948" width="1" height="15" fill="rgb(230,46,25)"/><text x="341.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="338" y="964" width="1" height="15" fill="rgb(224,186,49)"/><text x="341.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="338" y="980" width="1" height="15" fill="rgb(209,53,17)"/><text x="341.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="338" y="996" width="1" height="15" fill="rgb(220,148,15)"/><text x="341.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="338" y="1012" width="1" height="15" fill="rgb(225,37,17)"/><text x="341.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1096) (1 samples, 0.13%)</title><rect x="338" y="1028" width="1" height="15" fill="rgb(216,65,39)"/><text x="341.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.13%)</title><rect x="338" y="1044" width="1" height="15" fill="rgb(206,209,50)"/><text x="341.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.13%)</title><rect x="338" y="1060" width="1" height="15" fill="rgb(246,9,46)"/><text x="341.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.13%)</title><rect x="338" y="1076" width="1" height="15" fill="rgb(212,86,13)"/><text x="341.00" y="1086.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.13%)</title><rect x="338" y="1092" width="1" height="15" fill="rgb(227,156,1)"/><text x="341.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.13%)</title><rect x="339" y="244" width="2" height="15" fill="rgb(208,175,47)"/><text x="342.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="260" width="2" height="15" fill="rgb(240,226,37)"/><text x="342.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="276" width="2" height="15" fill="rgb(209,42,20)"/><text x="342.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="292" width="2" height="15" fill="rgb(209,114,18)"/><text x="342.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="308" width="2" height="15" fill="rgb(240,134,37)"/><text x="342.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="324" width="2" height="15" fill="rgb(212,218,50)"/><text x="342.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.13%)</title><rect x="339" y="340" width="2" height="15" fill="rgb(208,152,45)"/><text x="342.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="356" width="2" height="15" fill="rgb(244,2,54)"/><text x="342.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="339" y="372" width="2" height="15" fill="rgb(252,66,7)"/><text x="342.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="388" width="2" height="15" fill="rgb(233,42,19)"/><text x="342.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="404" width="2" height="15" fill="rgb(232,39,22)"/><text x="342.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="420" width="2" height="15" fill="rgb(244,206,29)"/><text x="342.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="436" width="2" height="15" fill="rgb(218,188,30)"/><text x="342.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="452" width="2" height="15" fill="rgb(238,210,25)"/><text x="342.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="468" width="2" height="15" fill="rgb(236,229,20)"/><text x="342.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.13%)</title><rect x="339" y="484" width="2" height="15" fill="rgb(217,85,32)"/><text x="342.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="500" width="2" height="15" fill="rgb(253,221,5)"/><text x="342.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="516" width="2" height="15" fill="rgb(237,86,24)"/><text x="342.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="532" width="2" height="15" fill="rgb(220,172,51)"/><text x="342.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="548" width="2" height="15" fill="rgb(208,164,28)"/><text x="342.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="564" width="2" height="15" fill="rgb(253,228,31)"/><text x="342.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.13%)</title><rect x="339" y="580" width="2" height="15" fill="rgb(248,225,40)"/><text x="342.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="596" width="2" height="15" fill="rgb(248,8,16)"/><text x="342.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="612" width="2" height="15" fill="rgb(244,48,49)"/><text x="342.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="628" width="2" height="15" fill="rgb(222,215,3)"/><text x="342.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="644" width="2" height="15" fill="rgb(241,126,25)"/><text x="342.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="660" width="2" height="15" fill="rgb(211,10,5)"/><text x="342.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.13%)</title><rect x="339" y="676" width="2" height="15" fill="rgb(241,84,39)"/><text x="342.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="692" width="2" height="15" fill="rgb(216,23,28)"/><text x="342.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="708" width="2" height="15" fill="rgb(240,36,44)"/><text x="342.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="724" width="2" height="15" fill="rgb(229,201,8)"/><text x="342.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="740" width="2" height="15" fill="rgb(226,16,26)"/><text x="342.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="756" width="2" height="15" fill="rgb(233,122,29)"/><text x="342.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:46) (1 samples, 0.13%)</title><rect x="339" y="772" width="2" height="15" fill="rgb(207,209,46)"/><text x="342.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="339" y="788" width="2" height="15" fill="rgb(240,222,10)"/><text x="342.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="339" y="804" width="2" height="15" fill="rgb(245,88,54)"/><text x="342.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="339" y="820" width="2" height="15" fill="rgb(215,43,11)"/><text x="342.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="339" y="836" width="2" height="15" fill="rgb(245,9,31)"/><text x="342.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="339" y="852" width="2" height="15" fill="rgb(237,194,8)"/><text x="342.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.40%)</title><rect x="341" y="724" width="4" height="15" fill="rgb(241,227,25)"/><text x="344.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="341" y="740" width="4" height="15" fill="rgb(218,117,23)"/><text x="344.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="341" y="756" width="4" height="15" fill="rgb(216,170,29)"/><text x="344.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="341" y="772" width="4" height="15" fill="rgb(214,149,10)"/><text x="344.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="341" y="788" width="4" height="15" fill="rgb(245,119,43)"/><text x="344.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="341" y="804" width="4" height="15" fill="rgb(239,41,49)"/><text x="344.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.40%)</title><rect x="341" y="820" width="4" height="15" fill="rgb(208,80,46)"/><text x="344.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="341" y="836" width="4" height="15" fill="rgb(224,78,46)"/><text x="344.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="341" y="852" width="4" height="15" fill="rgb(207,190,44)"/><text x="344.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="341" y="868" width="4" height="15" fill="rgb(245,215,16)"/><text x="344.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="341" y="884" width="4" height="15" fill="rgb(231,4,25)"/><text x="344.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="341" y="900" width="4" height="15" fill="rgb(230,97,26)"/><text x="344.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.40%)</title><rect x="341" y="916" width="4" height="15" fill="rgb(212,164,18)"/><text x="344.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="341" y="932" width="4" height="15" fill="rgb(254,38,48)"/><text x="344.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="341" y="948" width="4" height="15" fill="rgb(209,45,54)"/><text x="344.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="341" y="964" width="4" height="15" fill="rgb(240,117,39)"/><text x="344.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="341" y="980" width="4" height="15" fill="rgb(207,154,23)"/><text x="344.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="341" y="996" width="4" height="15" fill="rgb(225,191,43)"/><text x="344.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (3 samples, 0.40%)</title><rect x="341" y="1012" width="4" height="15" fill="rgb(254,155,39)"/><text x="344.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="341" y="1028" width="4" height="15" fill="rgb(222,105,47)"/><text x="344.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="341" y="1044" width="4" height="15" fill="rgb(245,190,32)"/><text x="344.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="341" y="1060" width="4" height="15" fill="rgb(236,102,32)"/><text x="344.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (3 samples, 0.40%)</title><rect x="341" y="1076" width="4" height="15" fill="rgb(251,66,6)"/><text x="344.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (3 samples, 0.40%)</title><rect x="341" y="1092" width="4" height="15" fill="rgb(253,79,15)"/><text x="344.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (3 samples, 0.40%)</title><rect x="341" y="1108" width="4" height="15" fill="rgb(213,201,4)"/><text x="344.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 0.53%)</title><rect x="341" y="436" width="6" height="15" fill="rgb(243,113,5)"/><text x="344.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="341" y="452" width="6" height="15" fill="rgb(248,70,0)"/><text x="344.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="341" y="468" width="6" height="15" fill="rgb(236,138,42)"/><text x="344.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="341" y="484" width="6" height="15" fill="rgb(216,150,17)"/><text x="344.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="341" y="500" width="6" height="15" fill="rgb(208,176,35)"/><text x="344.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="341" y="516" width="6" height="15" fill="rgb(206,195,44)"/><text x="344.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.53%)</title><rect x="341" y="532" width="6" height="15" fill="rgb(243,138,41)"/><text x="344.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="341" y="548" width="6" height="15" fill="rgb(235,75,7)"/><text x="344.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="341" y="564" width="6" height="15" fill="rgb(242,194,11)"/><text x="344.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="341" y="580" width="6" height="15" fill="rgb(230,17,36)"/><text x="344.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="341" y="596" width="6" height="15" fill="rgb(231,16,40)"/><text x="344.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="341" y="612" width="6" height="15" fill="rgb(231,81,27)"/><text x="344.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 0.53%)</title><rect x="341" y="628" width="6" height="15" fill="rgb(249,73,25)"/><text x="344.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.53%)</title><rect x="341" y="644" width="6" height="15" fill="rgb(248,154,14)"/><text x="344.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.53%)</title><rect x="341" y="660" width="6" height="15" fill="rgb(211,115,36)"/><text x="344.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.53%)</title><rect x="341" y="676" width="6" height="15" fill="rgb(215,73,17)"/><text x="344.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.53%)</title><rect x="341" y="692" width="6" height="15" fill="rgb(237,0,43)"/><text x="344.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.53%)</title><rect x="341" y="708" width="6" height="15" fill="rgb(221,107,23)"/><text x="344.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.13%)</title><rect x="345" y="724" width="2" height="15" fill="rgb(230,103,32)"/><text x="348.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="740" width="2" height="15" fill="rgb(247,29,6)"/><text x="348.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="345" y="756" width="2" height="15" fill="rgb(248,152,10)"/><text x="348.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="772" width="2" height="15" fill="rgb(232,138,47)"/><text x="348.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="788" width="2" height="15" fill="rgb(249,225,8)"/><text x="348.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="345" y="804" width="2" height="15" fill="rgb(207,144,33)"/><text x="348.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="345" y="820" width="2" height="15" fill="rgb(254,80,12)"/><text x="348.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="345" y="836" width="2" height="15" fill="rgb(240,107,39)"/><text x="348.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="852" width="2" height="15" fill="rgb(237,8,20)"/><text x="348.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.13%)</title><rect x="345" y="868" width="2" height="15" fill="rgb(212,32,52)"/><text x="348.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="884" width="2" height="15" fill="rgb(215,117,43)"/><text x="348.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="345" y="900" width="2" height="15" fill="rgb(212,127,34)"/><text x="348.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="345" y="916" width="2" height="15" fill="rgb(239,153,13)"/><text x="348.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="345" y="932" width="2" height="15" fill="rgb(233,94,0)"/><text x="348.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="948" width="2" height="15" fill="rgb(243,58,25)"/><text x="348.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:14) (1 samples, 0.13%)</title><rect x="345" y="964" width="2" height="15" fill="rgb(218,187,37)"/><text x="348.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="345" y="980" width="2" height="15" fill="rgb(223,46,54)"/><text x="348.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="996" width="2" height="15" fill="rgb(234,118,33)"/><text x="348.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="1012" width="2" height="15" fill="rgb(237,13,36)"/><text x="348.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="345" y="1028" width="2" height="15" fill="rgb(232,134,30)"/><text x="348.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="345" y="1044" width="2" height="15" fill="rgb(238,42,39)"/><text x="348.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="345" y="1060" width="2" height="15" fill="rgb(218,25,32)"/><text x="348.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="1076" width="2" height="15" fill="rgb(218,225,28)"/><text x="348.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py:28) (1 samples, 0.13%)</title><rect x="345" y="1092" width="2" height="15" fill="rgb(224,99,31)"/><text x="348.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="1108" width="2" height="15" fill="rgb(214,200,15)"/><text x="348.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="345" y="1124" width="2" height="15" fill="rgb(240,171,14)"/><text x="348.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="1140" width="2" height="15" fill="rgb(223,85,35)"/><text x="348.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="1156" width="2" height="15" fill="rgb(206,13,10)"/><text x="348.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="345" y="1172" width="2" height="15" fill="rgb(225,116,40)"/><text x="348.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="345" y="1188" width="2" height="15" fill="rgb(248,54,13)"/><text x="348.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="345" y="1204" width="2" height="15" fill="rgb(233,78,4)"/><text x="348.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="1220" width="2" height="15" fill="rgb(247,154,33)"/><text x="348.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py:3) (1 samples, 0.13%)</title><rect x="345" y="1236" width="2" height="15" fill="rgb(210,69,47)"/><text x="348.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="345" y="1252" width="2" height="15" fill="rgb(235,77,12)"/><text x="348.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="345" y="1268" width="2" height="15" fill="rgb(226,227,22)"/><text x="348.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="345" y="1284" width="2" height="15" fill="rgb(213,122,43)"/><text x="348.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="345" y="1300" width="2" height="15" fill="rgb(236,43,11)"/><text x="348.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="345" y="1316" width="2" height="15" fill="rgb(230,128,27)"/><text x="348.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/core/util/hashing.py:17) (1 samples, 0.13%)</title><rect x="345" y="1332" width="2" height="15" fill="rgb(237,46,5)"/><text x="348.00" y="1342.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.13%)</title><rect x="347" y="1108" width="1" height="15" fill="rgb(210,145,17)"/><text x="350.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="347" y="1124" width="1" height="15" fill="rgb(235,194,14)"/><text x="350.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="347" y="1140" width="1" height="15" fill="rgb(211,3,45)"/><text x="350.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="347" y="1156" width="1" height="15" fill="rgb(242,90,47)"/><text x="350.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="347" y="1172" width="1" height="15" fill="rgb(237,228,28)"/><text x="350.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="347" y="1188" width="1" height="15" fill="rgb(244,82,5)"/><text x="350.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.13%)</title><rect x="347" y="1204" width="1" height="15" fill="rgb(253,82,27)"/><text x="350.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="347" y="1220" width="1" height="15" fill="rgb(214,145,49)"/><text x="350.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="347" y="1236" width="1" height="15" fill="rgb(212,116,19)"/><text x="350.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="347" y="1252" width="1" height="15" fill="rgb(223,220,19)"/><text x="350.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="347" y="1268" width="1" height="15" fill="rgb(252,191,26)"/><text x="350.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="347" y="1284" width="1" height="15" fill="rgb(213,81,42)"/><text x="350.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.13%)</title><rect x="347" y="1300" width="1" height="15" fill="rgb(236,9,32)"/><text x="350.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.13%)</title><rect x="347" y="1316" width="1" height="15" fill="rgb(244,64,23)"/><text x="350.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.13%)</title><rect x="347" y="1332" width="1" height="15" fill="rgb(238,119,1)"/><text x="350.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.13%)</title><rect x="347" y="1348" width="1" height="15" fill="rgb(246,108,50)"/><text x="350.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.13%)</title><rect x="347" y="1364" width="1" height="15" fill="rgb(212,96,18)"/><text x="350.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:543) (1 samples, 0.13%)</title><rect x="347" y="1380" width="1" height="15" fill="rgb(237,35,18)"/><text x="350.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.13%)</title><rect x="348" y="1204" width="2" height="15" fill="rgb(231,228,38)"/><text x="351.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1220" width="2" height="15" fill="rgb(205,206,48)"/><text x="351.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1236" width="2" height="15" fill="rgb(211,1,14)"/><text x="351.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1252" width="2" height="15" fill="rgb(220,202,14)"/><text x="351.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1268" width="2" height="15" fill="rgb(231,186,31)"/><text x="351.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1284" width="2" height="15" fill="rgb(205,107,34)"/><text x="351.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.13%)</title><rect x="348" y="1300" width="2" height="15" fill="rgb(234,154,50)"/><text x="351.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1316" width="2" height="15" fill="rgb(231,114,48)"/><text x="351.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1332" width="2" height="15" fill="rgb(210,150,30)"/><text x="351.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1348" width="2" height="15" fill="rgb(238,152,14)"/><text x="351.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1364" width="2" height="15" fill="rgb(210,138,24)"/><text x="351.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1380" width="2" height="15" fill="rgb(227,125,29)"/><text x="351.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.13%)</title><rect x="348" y="1396" width="2" height="15" fill="rgb(227,127,6)"/><text x="351.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1412" width="2" height="15" fill="rgb(206,206,9)"/><text x="351.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1428" width="2" height="15" fill="rgb(223,128,50)"/><text x="351.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1444" width="2" height="15" fill="rgb(225,190,6)"/><text x="351.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1460" width="2" height="15" fill="rgb(215,134,31)"/><text x="351.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1476" width="2" height="15" fill="rgb(253,111,19)"/><text x="351.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.13%)</title><rect x="348" y="1492" width="2" height="15" fill="rgb(251,75,54)"/><text x="351.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="348" y="1508" width="2" height="15" fill="rgb(222,78,26)"/><text x="351.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1524" width="2" height="15" fill="rgb(235,154,51)"/><text x="351.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1540" width="2" height="15" fill="rgb(247,84,20)"/><text x="351.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1556" width="2" height="15" fill="rgb(242,228,37)"/><text x="351.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1572" width="2" height="15" fill="rgb(248,15,48)"/><text x="351.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1588" width="2" height="15" fill="rgb(239,30,10)"/><text x="351.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1604" width="2" height="15" fill="rgb(238,190,51)"/><text x="351.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.13%)</title><rect x="348" y="1620" width="2" height="15" fill="rgb(215,119,6)"/><text x="351.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1636" width="2" height="15" fill="rgb(222,150,35)"/><text x="351.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1652" width="2" height="15" fill="rgb(207,137,53)"/><text x="351.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1668" width="2" height="15" fill="rgb(235,31,7)"/><text x="351.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1684" width="2" height="15" fill="rgb(217,207,35)"/><text x="351.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1700" width="2" height="15" fill="rgb(242,170,37)"/><text x="351.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.13%)</title><rect x="348" y="1716" width="2" height="15" fill="rgb(228,92,12)"/><text x="351.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1732" width="2" height="15" fill="rgb(239,185,0)"/><text x="351.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1748" width="2" height="15" fill="rgb(207,42,1)"/><text x="351.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1764" width="2" height="15" fill="rgb(234,5,48)"/><text x="351.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1780" width="2" height="15" fill="rgb(235,193,0)"/><text x="351.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1796" width="2" height="15" fill="rgb(228,6,12)"/><text x="351.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.13%)</title><rect x="348" y="1812" width="2" height="15" fill="rgb(242,125,52)"/><text x="351.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1828" width="2" height="15" fill="rgb(225,89,35)"/><text x="351.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1844" width="2" height="15" fill="rgb(217,25,25)"/><text x="351.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1860" width="2" height="15" fill="rgb(243,145,34)"/><text x="351.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="348" y="1876" width="2" height="15" fill="rgb(225,137,46)"/><text x="351.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1892" width="2" height="15" fill="rgb(244,68,3)"/><text x="351.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py:26) (1 samples, 0.13%)</title><rect x="348" y="1908" width="2" height="15" fill="rgb(227,43,31)"/><text x="351.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="348" y="1924" width="2" height="15" fill="rgb(227,189,52)"/><text x="351.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="1940" width="2" height="15" fill="rgb(237,9,53)"/><text x="351.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="1956" width="2" height="15" fill="rgb(252,52,46)"/><text x="351.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="348" y="1972" width="2" height="15" fill="rgb(240,77,49)"/><text x="351.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="348" y="1988" width="2" height="15" fill="rgb(229,198,34)"/><text x="351.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.13%)</title><rect x="348" y="2004" width="2" height="15" fill="rgb(246,225,21)"/><text x="351.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="348" y="2020" width="2" height="15" fill="rgb(253,94,50)"/><text x="351.00" y="2030.50"></text></g><g><title>0x7f9308caad1a (?) (1 samples, 0.13%)</title><rect x="348" y="2036" width="2" height="15" fill="rgb(254,36,34)"/><text x="351.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="348" y="2052" width="2" height="15" fill="rgb(242,135,1)"/><text x="351.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.13%)</title><rect x="348" y="2068" width="2" height="15" fill="rgb(252,55,6)"/><text x="351.00" y="2078.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.13%)</title><rect x="348" y="2084" width="2" height="15" fill="rgb(244,21,3)"/><text x="351.00" y="2094.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.13%)</title><rect x="348" y="2100" width="2" height="15" fill="rgb(216,217,38)"/><text x="351.00" y="2110.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.13%)</title><rect x="348" y="2116" width="2" height="15" fill="rgb(227,93,2)"/><text x="351.00" y="2126.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.13%)</title><rect x="348" y="2132" width="2" height="15" fill="rgb(231,140,32)"/><text x="351.00" y="2142.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.13%)</title><rect x="348" y="2148" width="2" height="15" fill="rgb(249,193,38)"/><text x="351.00" y="2158.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="348" y="2164" width="2" height="15" fill="rgb(239,147,1)"/><text x="351.00" y="2174.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:4) (13 samples, 1.71%)</title><rect x="331" y="52" width="21" height="15" fill="rgb(237,38,4)"/><text x="334.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 1.71%)</title><rect x="331" y="68" width="21" height="15" fill="rgb(220,25,41)"/><text x="334.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 1.71%)</title><rect x="331" y="84" width="21" height="15" fill="rgb(237,5,43)"/><text x="334.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 1.71%)</title><rect x="331" y="100" width="21" height="15" fill="rgb(247,86,20)"/><text x="334.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 1.71%)</title><rect x="331" y="116" width="21" height="15" fill="rgb(243,186,31)"/><text x="334.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 1.71%)</title><rect x="331" y="132" width="21" height="15" fill="rgb(235,126,1)"/><text x="334.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py:7) (8 samples, 1.05%)</title><rect x="339" y="148" width="13" height="15" fill="rgb(248,184,54)"/><text x="342.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.05%)</title><rect x="339" y="164" width="13" height="15" fill="rgb(247,101,5)"/><text x="342.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.05%)</title><rect x="339" y="180" width="13" height="15" fill="rgb(222,58,50)"/><text x="342.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.05%)</title><rect x="339" y="196" width="13" height="15" fill="rgb(211,179,38)"/><text x="342.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.05%)</title><rect x="339" y="212" width="13" height="15" fill="rgb(253,17,48)"/><text x="342.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.05%)</title><rect x="339" y="228" width="13" height="15" fill="rgb(223,89,9)"/><text x="342.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 0.92%)</title><rect x="341" y="244" width="11" height="15" fill="rgb(231,196,54)"/><text x="344.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.92%)</title><rect x="341" y="260" width="11" height="15" fill="rgb(211,127,49)"/><text x="344.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.92%)</title><rect x="341" y="276" width="11" height="15" fill="rgb(229,196,12)"/><text x="344.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.92%)</title><rect x="341" y="292" width="11" height="15" fill="rgb(212,136,47)"/><text x="344.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.92%)</title><rect x="341" y="308" width="11" height="15" fill="rgb(220,193,31)"/><text x="344.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.92%)</title><rect x="341" y="324" width="11" height="15" fill="rgb(238,147,27)"/><text x="344.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 0.92%)</title><rect x="341" y="340" width="11" height="15" fill="rgb(216,223,7)"/><text x="344.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.92%)</title><rect x="341" y="356" width="11" height="15" fill="rgb(233,99,54)"/><text x="344.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.92%)</title><rect x="341" y="372" width="11" height="15" fill="rgb(223,28,6)"/><text x="344.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.92%)</title><rect x="341" y="388" width="11" height="15" fill="rgb(235,110,49)"/><text x="344.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.92%)</title><rect x="341" y="404" width="11" height="15" fill="rgb(241,113,37)"/><text x="344.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.92%)</title><rect x="341" y="420" width="11" height="15" fill="rgb(243,210,3)"/><text x="344.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.40%)</title><rect x="347" y="436" width="5" height="15" fill="rgb(206,187,24)"/><text x="350.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="452" width="5" height="15" fill="rgb(251,137,0)"/><text x="350.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.40%)</title><rect x="347" y="468" width="5" height="15" fill="rgb(241,141,23)"/><text x="350.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="484" width="5" height="15" fill="rgb(254,140,12)"/><text x="350.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="500" width="5" height="15" fill="rgb(245,51,42)"/><text x="350.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="347" y="516" width="5" height="15" fill="rgb(253,26,45)"/><text x="350.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="347" y="532" width="5" height="15" fill="rgb(243,35,13)"/><text x="350.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="347" y="548" width="5" height="15" fill="rgb(251,94,27)"/><text x="350.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="564" width="5" height="15" fill="rgb(207,188,27)"/><text x="350.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.40%)</title><rect x="347" y="580" width="5" height="15" fill="rgb(238,119,33)"/><text x="350.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="596" width="5" height="15" fill="rgb(247,188,34)"/><text x="350.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="347" y="612" width="5" height="15" fill="rgb(230,203,27)"/><text x="350.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="347" y="628" width="5" height="15" fill="rgb(245,6,7)"/><text x="350.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="347" y="644" width="5" height="15" fill="rgb(222,157,14)"/><text x="350.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="660" width="5" height="15" fill="rgb(244,210,44)"/><text x="350.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.40%)</title><rect x="347" y="676" width="5" height="15" fill="rgb(241,128,22)"/><text x="350.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="692" width="5" height="15" fill="rgb(213,13,14)"/><text x="350.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="347" y="708" width="5" height="15" fill="rgb(244,147,27)"/><text x="350.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="347" y="724" width="5" height="15" fill="rgb(241,52,44)"/><text x="350.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="347" y="740" width="5" height="15" fill="rgb(226,126,45)"/><text x="350.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="756" width="5" height="15" fill="rgb(238,54,24)"/><text x="350.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.40%)</title><rect x="347" y="772" width="5" height="15" fill="rgb(246,194,18)"/><text x="350.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="788" width="5" height="15" fill="rgb(233,116,53)"/><text x="350.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="347" y="804" width="5" height="15" fill="rgb(235,164,54)"/><text x="350.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="347" y="820" width="5" height="15" fill="rgb(214,171,22)"/><text x="350.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="347" y="836" width="5" height="15" fill="rgb(228,201,13)"/><text x="350.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="852" width="5" height="15" fill="rgb(237,36,32)"/><text x="350.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.40%)</title><rect x="347" y="868" width="5" height="15" fill="rgb(208,178,49)"/><text x="350.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="884" width="5" height="15" fill="rgb(242,97,54)"/><text x="350.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.40%)</title><rect x="347" y="900" width="5" height="15" fill="rgb(211,81,50)"/><text x="350.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="916" width="5" height="15" fill="rgb(225,123,13)"/><text x="350.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="932" width="5" height="15" fill="rgb(242,146,32)"/><text x="350.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="347" y="948" width="5" height="15" fill="rgb(224,112,44)"/><text x="350.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="347" y="964" width="5" height="15" fill="rgb(222,161,52)"/><text x="350.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="347" y="980" width="5" height="15" fill="rgb(223,224,35)"/><text x="350.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="996" width="5" height="15" fill="rgb(221,206,0)"/><text x="350.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.40%)</title><rect x="347" y="1012" width="5" height="15" fill="rgb(215,217,40)"/><text x="350.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.40%)</title><rect x="347" y="1028" width="5" height="15" fill="rgb(223,4,15)"/><text x="350.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.40%)</title><rect x="347" y="1044" width="5" height="15" fill="rgb(251,163,24)"/><text x="350.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.40%)</title><rect x="347" y="1060" width="5" height="15" fill="rgb(254,83,21)"/><text x="350.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.40%)</title><rect x="347" y="1076" width="5" height="15" fill="rgb(233,85,35)"/><text x="350.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.40%)</title><rect x="347" y="1092" width="5" height="15" fill="rgb(235,111,20)"/><text x="350.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.26%)</title><rect x="348" y="1108" width="4" height="15" fill="rgb(253,121,45)"/><text x="351.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="348" y="1124" width="4" height="15" fill="rgb(219,93,21)"/><text x="351.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="348" y="1140" width="4" height="15" fill="rgb(253,66,13)"/><text x="351.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="348" y="1156" width="4" height="15" fill="rgb(215,225,15)"/><text x="351.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="348" y="1172" width="4" height="15" fill="rgb(214,160,32)"/><text x="351.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="348" y="1188" width="4" height="15" fill="rgb(216,61,16)"/><text x="351.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.13%)</title><rect x="350" y="1204" width="2" height="15" fill="rgb(243,66,46)"/><text x="353.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="350" y="1220" width="2" height="15" fill="rgb(222,112,15)"/><text x="353.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="350" y="1236" width="2" height="15" fill="rgb(245,157,27)"/><text x="353.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="350" y="1252" width="2" height="15" fill="rgb(219,156,2)"/><text x="353.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="350" y="1268" width="2" height="15" fill="rgb(252,13,30)"/><text x="353.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="350" y="1284" width="2" height="15" fill="rgb(222,22,43)"/><text x="353.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:42) (1 samples, 0.13%)</title><rect x="350" y="1300" width="2" height="15" fill="rgb(210,52,4)"/><text x="353.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="350" y="1316" width="2" height="15" fill="rgb(220,190,33)"/><text x="353.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="350" y="1332" width="2" height="15" fill="rgb(231,78,40)"/><text x="353.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="350" y="1348" width="2" height="15" fill="rgb(243,66,31)"/><text x="353.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="350" y="1364" width="2" height="15" fill="rgb(227,151,21)"/><text x="353.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="350" y="1380" width="2" height="15" fill="rgb(230,187,9)"/><text x="353.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/discriminant_analysis.py:20) (1 samples, 0.13%)</title><rect x="350" y="1396" width="2" height="15" fill="rgb(219,5,21)"/><text x="353.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="350" y="1412" width="2" height="15" fill="rgb(237,20,10)"/><text x="353.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="350" y="1428" width="2" height="15" fill="rgb(245,197,35)"/><text x="353.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="350" y="1444" width="2" height="15" fill="rgb(238,146,28)"/><text x="353.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="350" y="1460" width="2" height="15" fill="rgb(227,72,52)"/><text x="353.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="350" y="1476" width="2" height="15" fill="rgb(232,76,11)"/><text x="353.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/covariance/__init__.py:12) (1 samples, 0.13%)</title><rect x="350" y="1492" width="2" height="15" fill="rgb(220,44,14)"/><text x="353.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="350" y="1508" width="2" height="15" fill="rgb(242,13,6)"/><text x="353.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="350" y="1524" width="2" height="15" fill="rgb(236,183,18)"/><text x="353.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="350" y="1540" width="2" height="15" fill="rgb(207,199,13)"/><text x="353.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="350" y="1556" width="2" height="15" fill="rgb(238,201,19)"/><text x="353.00" y="1566.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.13%)</title><rect x="350" y="1572" width="2" height="15" fill="rgb(236,34,26)"/><text x="353.00" y="1582.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.13%)</title><rect x="350" y="1588" width="2" height="15" fill="rgb(239,60,39)"/><text x="353.00" y="1598.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.13%)</title><rect x="350" y="1604" width="2" height="15" fill="rgb(205,133,5)"/><text x="353.00" y="1614.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:73) (1 samples, 0.13%)</title><rect x="352" y="388" width="1" height="15" fill="rgb(235,88,24)"/><text x="355.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="352" y="404" width="1" height="15" fill="rgb(210,170,0)"/><text x="355.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="352" y="420" width="1" height="15" fill="rgb(208,152,48)"/><text x="355.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="352" y="436" width="1" height="15" fill="rgb(206,55,2)"/><text x="355.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="352" y="452" width="1" height="15" fill="rgb(254,20,21)"/><text x="355.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.13%)</title><rect x="352" y="468" width="1" height="15" fill="rgb(244,129,53)"/><text x="355.00" y="478.50"></text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:28) (2 samples, 0.26%)</title><rect x="352" y="84" width="3" height="15" fill="rgb(213,189,31)"/><text x="355.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.26%)</title><rect x="352" y="100" width="3" height="15" fill="rgb(243,45,26)"/><text x="355.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.26%)</title><rect x="352" y="116" width="3" height="15" fill="rgb(234,156,54)"/><text x="355.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.26%)</title><rect x="352" y="132" width="3" height="15" fill="rgb(217,115,31)"/><text x="355.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.26%)</title><rect x="352" y="148" width="3" height="15" fill="rgb(241,182,42)"/><text x="355.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.26%)</title><rect x="352" y="164" width="3" height="15" fill="rgb(243,38,36)"/><text x="355.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.26%)</title><rect x="352" y="180" width="3" height="15" fill="rgb(235,183,11)"/><text x="355.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.26%)</title><rect x="352" y="196" width="3" height="15" fill="rgb(223,200,20)"/><text x="355.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="352" y="212" width="3" height="15" fill="rgb(253,82,41)"/><text x="355.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="352" y="228" width="3" height="15" fill="rgb(211,141,27)"/><text x="355.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="352" y="244" width="3" height="15" fill="rgb(205,206,28)"/><text x="355.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="352" y="260" width="3" height="15" fill="rgb(239,203,7)"/><text x="355.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="352" y="276" width="3" height="15" fill="rgb(218,145,27)"/><text x="355.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.26%)</title><rect x="352" y="292" width="3" height="15" fill="rgb(251,14,14)"/><text x="355.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="352" y="308" width="3" height="15" fill="rgb(226,79,20)"/><text x="355.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="352" y="324" width="3" height="15" fill="rgb(238,13,25)"/><text x="355.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="352" y="340" width="3" height="15" fill="rgb(246,9,6)"/><text x="355.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="352" y="356" width="3" height="15" fill="rgb(224,20,29)"/><text x="355.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="352" y="372" width="3" height="15" fill="rgb(211,115,19)"/><text x="355.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.13%)</title><rect x="353" y="388" width="2" height="15" fill="rgb(244,82,13)"/><text x="356.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="353" y="404" width="2" height="15" fill="rgb(238,16,7)"/><text x="356.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="353" y="420" width="2" height="15" fill="rgb(217,42,16)"/><text x="356.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="353" y="436" width="2" height="15" fill="rgb(232,28,47)"/><text x="356.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="353" y="452" width="2" height="15" fill="rgb(236,54,21)"/><text x="356.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="353" y="468" width="2" height="15" fill="rgb(233,49,24)"/><text x="356.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.13%)</title><rect x="353" y="484" width="2" height="15" fill="rgb(240,135,32)"/><text x="356.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.13%)</title><rect x="353" y="500" width="2" height="15" fill="rgb(215,6,25)"/><text x="356.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.13%)</title><rect x="353" y="516" width="2" height="15" fill="rgb(235,214,19)"/><text x="356.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.13%)</title><rect x="353" y="532" width="2" height="15" fill="rgb(225,141,25)"/><text x="356.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.13%)</title><rect x="353" y="548" width="2" height="15" fill="rgb(246,113,39)"/><text x="356.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.13%)</title><rect x="353" y="564" width="2" height="15" fill="rgb(219,8,24)"/><text x="356.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.13%)</title><rect x="353" y="580" width="2" height="15" fill="rgb(232,129,47)"/><text x="356.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="353" y="596" width="2" height="15" fill="rgb(211,194,43)"/><text x="356.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.13%)</title><rect x="353" y="612" width="2" height="15" fill="rgb(233,99,21)"/><text x="356.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="353" y="628" width="2" height="15" fill="rgb(244,150,17)"/><text x="356.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="353" y="644" width="2" height="15" fill="rgb(236,119,22)"/><text x="356.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.13%)</title><rect x="353" y="660" width="2" height="15" fill="rgb(210,27,20)"/><text x="356.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="353" y="676" width="2" height="15" fill="rgb(234,25,6)"/><text x="356.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="353" y="692" width="2" height="15" fill="rgb(232,74,25)"/><text x="356.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.13%)</title><rect x="353" y="708" width="2" height="15" fill="rgb(247,210,3)"/><text x="356.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="353" y="724" width="2" height="15" fill="rgb(250,116,5)"/><text x="356.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="353" y="740" width="2" height="15" fill="rgb(228,2,26)"/><text x="356.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1108) (1 samples, 0.13%)</title><rect x="353" y="756" width="2" height="15" fill="rgb(226,45,24)"/><text x="356.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="353" y="772" width="2" height="15" fill="rgb(233,168,24)"/><text x="356.00" y="782.50"></text></g><g><title>new_func (jinja2/compiler.py:68) (1 samples, 0.13%)</title><rect x="353" y="788" width="2" height="15" fill="rgb(225,112,13)"/><text x="356.00" y="798.50"></text></g><g><title>__ne__ (jinja2/nodes.py:233) (1 samples, 0.13%)</title><rect x="353" y="804" width="2" height="15" fill="rgb(225,177,19)"/><text x="356.00" y="814.50"></text></g><g><title>__eq__ (jinja2/nodes.py:230) (1 samples, 0.13%)</title><rect x="353" y="820" width="2" height="15" fill="rgb(209,184,18)"/><text x="356.00" y="830.50"></text></g><g><title>iter_fields (jinja2/nodes.py:156) (1 samples, 0.13%)</title><rect x="353" y="836" width="2" height="15" fill="rgb(249,227,5)"/><text x="356.00" y="846.50"></text></g><g><title>0x7f92fba13c29 (?) (1 samples, 0.13%)</title><rect x="355" y="244" width="1" height="15" fill="rgb(222,163,45)"/><text x="358.00" y="254.50"></text></g><g><title>0x7f92fba1ad9e (?) (1 samples, 0.13%)</title><rect x="355" y="260" width="1" height="15" fill="rgb(253,38,42)"/><text x="358.00" y="270.50"></text></g><g><title>0x7f92fba1ac56 (?) (1 samples, 0.13%)</title><rect x="355" y="276" width="1" height="15" fill="rgb(228,172,46)"/><text x="358.00" y="286.50"></text></g><g><title>0x7f92fba20ac7 (?) (1 samples, 0.13%)</title><rect x="355" y="292" width="1" height="15" fill="rgb(225,18,29)"/><text x="358.00" y="302.50"></text></g><g><title>0x7f92fba1fc5c (?) (1 samples, 0.13%)</title><rect x="355" y="308" width="1" height="15" fill="rgb(244,23,3)"/><text x="358.00" y="318.50"></text></g><g><title>0x7f92fba09338 (?) (1 samples, 0.13%)</title><rect x="355" y="324" width="1" height="15" fill="rgb(210,87,52)"/><text x="358.00" y="334.50"></text></g><g><title>expf32x (libm-2.29.so) (1 samples, 0.13%)</title><rect x="355" y="340" width="1" height="15" fill="rgb(229,176,20)"/><text x="358.00" y="350.50"></text></g><g><title>0x7f933aa76c32 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="355" y="356" width="1" height="15" fill="rgb(229,220,10)"/><text x="358.00" y="366.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (1 samples, 0.13%)</title><rect x="356" y="452" width="2" height="15" fill="rgb(249,116,19)"/><text x="359.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="356" y="468" width="2" height="15" fill="rgb(248,62,29)"/><text x="359.00" y="478.50"></text></g><g><title>0x7f933a8c4ddd (libc-2.29.so) (1 samples, 0.13%)</title><rect x="356" y="484" width="2" height="15" fill="rgb(251,5,22)"/><text x="359.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.13%)</title><rect x="358" y="468" width="1" height="15" fill="rgb(230,34,14)"/><text x="361.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (1 samples, 0.13%)</title><rect x="359" y="468" width="2" height="15" fill="rgb(223,40,14)"/><text x="362.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (1 samples, 0.13%)</title><rect x="361" y="468" width="1" height="15" fill="rgb(215,214,14)"/><text x="364.00" y="478.50"></text></g><g><title>0x7f933aa76ba0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="364" y="500" width="2" height="15" fill="rgb(221,41,25)"/><text x="367.00" y="510.50"></text></g><g><title>0x7f933aa76bde (libm-2.29.so) (1 samples, 0.13%)</title><rect x="366" y="500" width="1" height="15" fill="rgb(233,118,17)"/><text x="369.00" y="510.50"></text></g><g><title>0x7f933aa76c32 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="367" y="500" width="2" height="15" fill="rgb(207,38,21)"/><text x="370.00" y="510.50"></text></g><g><title>0x7f933aa76c46 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="369" y="500" width="1" height="15" fill="rgb(209,92,51)"/><text x="372.00" y="510.50"></text></g><g><title>0x7f933aa76c52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="370" y="500" width="2" height="15" fill="rgb(206,171,13)"/><text x="373.00" y="510.50"></text></g><g><title>0x7f933aa76c5a (libm-2.29.so) (1 samples, 0.13%)</title><rect x="372" y="500" width="1" height="15" fill="rgb(219,112,53)"/><text x="375.00" y="510.50"></text></g><g><title>0x7f933aa76c6e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="373" y="500" width="2" height="15" fill="rgb(208,159,26)"/><text x="376.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (13 samples, 1.71%)</title><rect x="358" y="452" width="20" height="15" fill="rgb(244,96,38)"/><text x="361.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (10 samples, 1.32%)</title><rect x="362" y="468" width="16" height="15" fill="rgb(231,68,5)"/><text x="365.00" y="478.50"></text></g><g><title>expf32x (libm-2.29.so) (10 samples, 1.32%)</title><rect x="362" y="484" width="16" height="15" fill="rgb(240,216,20)"/><text x="365.00" y="494.50"></text></g><g><title>0x7f933aa76c7b (libm-2.29.so) (2 samples, 0.26%)</title><rect x="375" y="500" width="3" height="15" fill="rgb(221,2,34)"/><text x="378.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (1 samples, 0.13%)</title><rect x="378" y="452" width="2" height="15" fill="rgb(243,171,5)"/><text x="381.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (1 samples, 0.13%)</title><rect x="378" y="468" width="2" height="15" fill="rgb(220,178,40)"/><text x="381.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (1 samples, 0.13%)</title><rect x="378" y="484" width="2" height="15" fill="rgb(223,79,5)"/><text x="381.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (1 samples, 0.13%)</title><rect x="378" y="500" width="2" height="15" fill="rgb(239,102,32)"/><text x="381.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.13%)</title><rect x="378" y="516" width="2" height="15" fill="rgb(251,96,36)"/><text x="381.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.13%)</title><rect x="378" y="532" width="2" height="15" fill="rgb(208,27,46)"/><text x="381.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.13%)</title><rect x="378" y="548" width="2" height="15" fill="rgb(225,18,21)"/><text x="381.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="378" y="564" width="2" height="15" fill="rgb(253,108,15)"/><text x="381.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="378" y="580" width="2" height="15" fill="rgb(212,124,40)"/><text x="381.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:423) (1 samples, 0.13%)</title><rect x="380" y="452" width="1" height="15" fill="rgb(248,25,36)"/><text x="383.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (2 samples, 0.26%)</title><rect x="381" y="452" width="3" height="15" fill="rgb(244,228,12)"/><text x="384.00" y="462.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.13%)</title><rect x="384" y="484" width="2" height="15" fill="rgb(214,103,34)"/><text x="387.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.13%)</title><rect x="384" y="500" width="2" height="15" fill="rgb(226,195,20)"/><text x="387.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.13%)</title><rect x="384" y="516" width="2" height="15" fill="rgb(236,86,49)"/><text x="387.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.13%)</title><rect x="384" y="532" width="2" height="15" fill="rgb(236,141,48)"/><text x="387.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.13%)</title><rect x="384" y="548" width="2" height="15" fill="rgb(225,217,45)"/><text x="387.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="384" y="564" width="2" height="15" fill="rgb(247,165,15)"/><text x="387.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="384" y="580" width="2" height="15" fill="rgb(216,220,9)"/><text x="387.00" y="590.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (1 samples, 0.13%)</title><rect x="386" y="484" width="1" height="15" fill="rgb(244,157,46)"/><text x="389.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.13%)</title><rect x="386" y="500" width="1" height="15" fill="rgb(236,143,9)"/><text x="389.00" y="510.50"></text></g><g><title>0x7f933a8a4a41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="386" y="516" width="1" height="15" fill="rgb(216,65,13)"/><text x="389.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (1 samples, 0.13%)</title><rect x="387" y="484" width="2" height="15" fill="rgb(205,214,23)"/><text x="390.00" y="494.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:18) (23 samples, 3.03%)</title><rect x="355" y="100" width="35" height="15" fill="rgb(213,153,24)"/><text x="358.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (23 samples, 3.03%)</title><rect x="355" y="116" width="35" height="15" fill="rgb(244,183,17)"/><text x="358.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (23 samples, 3.03%)</title><rect x="355" y="132" width="35" height="15" fill="rgb(207,33,30)"/><text x="358.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (23 samples, 3.03%)</title><rect x="355" y="148" width="35" height="15" fill="rgb(205,130,52)"/><text x="358.00" y="158.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (23 samples, 3.03%)</title><rect x="355" y="164" width="35" height="15" fill="rgb(213,165,47)"/><text x="358.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (23 samples, 3.03%)</title><rect x="355" y="180" width="35" height="15" fill="rgb(244,37,6)"/><text x="358.00" y="190.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (23 samples, 3.03%)</title><rect x="355" y="196" width="35" height="15" fill="rgb(234,219,8)"/><text x="358.00" y="206.50">ru..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (23 samples, 3.03%)</title><rect x="355" y="212" width="35" height="15" fill="rgb(215,216,45)"/><text x="358.00" y="222.50">ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (23 samples, 3.03%)</title><rect x="355" y="228" width="35" height="15" fill="rgb(245,14,0)"/><text x="358.00" y="238.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (22 samples, 2.90%)</title><rect x="356" y="244" width="34" height="15" fill="rgb(244,111,33)"/><text x="359.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (22 samples, 2.90%)</title><rect x="356" y="260" width="34" height="15" fill="rgb(235,221,3)"/><text x="359.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (22 samples, 2.90%)</title><rect x="356" y="276" width="34" height="15" fill="rgb(234,208,49)"/><text x="359.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (22 samples, 2.90%)</title><rect x="356" y="292" width="34" height="15" fill="rgb(248,39,12)"/><text x="359.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (22 samples, 2.90%)</title><rect x="356" y="308" width="34" height="15" fill="rgb(254,26,3)"/><text x="359.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (22 samples, 2.90%)</title><rect x="356" y="324" width="34" height="15" fill="rgb(232,173,11)"/><text x="359.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (22 samples, 2.90%)</title><rect x="356" y="340" width="34" height="15" fill="rgb(211,39,0)"/><text x="359.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (22 samples, 2.90%)</title><rect x="356" y="356" width="34" height="15" fill="rgb(245,27,30)"/><text x="359.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (22 samples, 2.90%)</title><rect x="356" y="372" width="34" height="15" fill="rgb(234,227,6)"/><text x="359.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (22 samples, 2.90%)</title><rect x="356" y="388" width="34" height="15" fill="rgb(222,88,53)"/><text x="359.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (22 samples, 2.90%)</title><rect x="356" y="404" width="34" height="15" fill="rgb(215,194,18)"/><text x="359.00" y="414.50">py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (22 samples, 2.90%)</title><rect x="356" y="420" width="34" height="15" fill="rgb(213,153,52)"/><text x="359.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (22 samples, 2.90%)</title><rect x="356" y="436" width="34" height="15" fill="rgb(250,107,39)"/><text x="359.00" y="446.50">py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (4 samples, 0.53%)</title><rect x="384" y="452" width="6" height="15" fill="rgb(252,71,5)"/><text x="387.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (4 samples, 0.53%)</title><rect x="384" y="468" width="6" height="15" fill="rgb(242,48,35)"/><text x="387.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.13%)</title><rect x="389" y="484" width="1" height="15" fill="rgb(223,39,54)"/><text x="392.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:384) (2 samples, 0.26%)</title><rect x="392" y="452" width="3" height="15" fill="rgb(223,26,6)"/><text x="395.00" y="462.50"></text></g><g><title>0x7f933a8a497c (libc-2.29.so) (2 samples, 0.26%)</title><rect x="392" y="468" width="3" height="15" fill="rgb(240,41,50)"/><text x="395.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (3 samples, 0.40%)</title><rect x="406" y="468" width="5" height="15" fill="rgb(210,85,47)"/><text x="409.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (3 samples, 0.40%)</title><rect x="406" y="484" width="5" height="15" fill="rgb(238,197,18)"/><text x="409.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.40%)</title><rect x="406" y="500" width="5" height="15" fill="rgb(214,182,28)"/><text x="409.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (3 samples, 0.40%)</title><rect x="406" y="516" width="5" height="15" fill="rgb(228,197,19)"/><text x="409.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="407" y="532" width="4" height="15" fill="rgb(215,206,3)"/><text x="410.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="407" y="548" width="4" height="15" fill="rgb(220,113,27)"/><text x="410.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.13%)</title><rect x="411" y="468" width="1" height="15" fill="rgb(218,104,47)"/><text x="414.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.13%)</title><rect x="411" y="484" width="1" height="15" fill="rgb(216,158,5)"/><text x="414.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.13%)</title><rect x="411" y="500" width="1" height="15" fill="rgb(232,11,2)"/><text x="414.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.13%)</title><rect x="411" y="516" width="1" height="15" fill="rgb(237,159,35)"/><text x="414.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.13%)</title><rect x="411" y="532" width="1" height="15" fill="rgb(240,65,47)"/><text x="414.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.13%)</title><rect x="411" y="548" width="1" height="15" fill="rgb(223,16,16)"/><text x="414.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.13%)</title><rect x="411" y="564" width="1" height="15" fill="rgb(245,94,11)"/><text x="414.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.13%)</title><rect x="411" y="580" width="1" height="15" fill="rgb(236,137,21)"/><text x="414.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:367) (1 samples, 0.13%)</title><rect x="411" y="596" width="1" height="15" fill="rgb(210,77,4)"/><text x="414.00" y="606.50"></text></g><g><title>0x7f933a8c4d67 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="414" y="484" width="1" height="15" fill="rgb(228,45,25)"/><text x="417.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (3 samples, 0.40%)</title><rect x="412" y="468" width="5" height="15" fill="rgb(226,15,46)"/><text x="415.00" y="478.50"></text></g><g><title>0x7f933a8c4df8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="415" y="484" width="2" height="15" fill="rgb(229,161,54)"/><text x="418.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.13%)</title><rect x="417" y="468" width="1" height="15" fill="rgb(214,95,29)"/><text x="420.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.13%)</title><rect x="417" y="484" width="1" height="15" fill="rgb(246,100,11)"/><text x="420.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.13%)</title><rect x="417" y="500" width="1" height="15" fill="rgb(205,31,43)"/><text x="420.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.13%)</title><rect x="417" y="516" width="1" height="15" fill="rgb(216,80,28)"/><text x="420.00" y="526.50"></text></g><g><title>0x7f932a3717a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="418" y="484" width="2" height="15" fill="rgb(241,104,0)"/><text x="421.00" y="494.50"></text></g><g><title>0x7f933a8a4998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="420" y="484" width="1" height="15" fill="rgb(217,5,2)"/><text x="423.00" y="494.50"></text></g><g><title>0x7f933a8a4a55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="421" y="484" width="2" height="15" fill="rgb(220,143,28)"/><text x="424.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (4 samples, 0.53%)</title><rect x="418" y="468" width="7" height="15" fill="rgb(241,158,41)"/><text x="421.00" y="478.50"></text></g><g><title>0x7f933a8a4bc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="423" y="484" width="2" height="15" fill="rgb(226,38,38)"/><text x="426.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (20 samples, 2.64%)</title><rect x="395" y="452" width="31" height="15" fill="rgb(228,67,38)"/><text x="398.00" y="462.50">Ru..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:442) (1 samples, 0.13%)</title><rect x="425" y="468" width="1" height="15" fill="rgb(225,40,20)"/><text x="428.00" y="478.50"></text></g><g><title>0x7f92fba03440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="445" y="468" width="4" height="15" fill="rgb(215,5,54)"/><text x="448.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (1 samples, 0.13%)</title><rect x="449" y="468" width="2" height="15" fill="rgb(235,70,41)"/><text x="452.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (3 samples, 0.40%)</title><rect x="451" y="468" width="5" height="15" fill="rgb(213,222,13)"/><text x="454.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.13%)</title><rect x="456" y="468" width="1" height="15" fill="rgb(234,217,50)"/><text x="459.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:292) (5 samples, 0.66%)</title><rect x="457" y="468" width="8" height="15" fill="rgb(233,92,38)"/><text x="460.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:293) (12 samples, 1.58%)</title><rect x="465" y="468" width="19" height="15" fill="rgb(205,31,49)"/><text x="468.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:294) (4 samples, 0.53%)</title><rect x="484" y="468" width="6" height="15" fill="rgb(243,11,9)"/><text x="487.00" y="478.50"></text></g><g><title>0x7f92fba03830 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="491" y="484" width="2" height="15" fill="rgb(244,225,34)"/><text x="494.00" y="494.50"></text></g><g><title>0x7f933a9f01b0 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="512" y="500" width="4" height="15" fill="rgb(241,82,37)"/><text x="515.00" y="510.50"></text></g><g><title>0x7f933aa76ba0 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="516" y="500" width="5" height="15" fill="rgb(254,46,32)"/><text x="519.00" y="510.50"></text></g><g><title>0x7f933aa76bb4 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="521" y="500" width="5" height="15" fill="rgb(240,36,10)"/><text x="524.00" y="510.50"></text></g><g><title>0x7f933aa76bc3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="526" y="500" width="1" height="15" fill="rgb(209,34,41)"/><text x="529.00" y="510.50"></text></g><g><title>0x7f933aa76bd3 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="527" y="500" width="3" height="15" fill="rgb(205,165,38)"/><text x="530.00" y="510.50"></text></g><g><title>0x7f933aa76be7 (libm-2.29.so) (6 samples, 0.79%)</title><rect x="530" y="500" width="10" height="15" fill="rgb(231,218,4)"/><text x="533.00" y="510.50"></text></g><g><title>0x7f933aa76beb (libm-2.29.so) (1 samples, 0.13%)</title><rect x="540" y="500" width="1" height="15" fill="rgb(248,8,40)"/><text x="543.00" y="510.50"></text></g><g><title>0x7f933aa76bf9 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="541" y="500" width="3" height="15" fill="rgb(237,225,5)"/><text x="544.00" y="510.50"></text></g><g><title>0x7f933aa76c04 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="544" y="500" width="3" height="15" fill="rgb(248,81,2)"/><text x="547.00" y="510.50"></text></g><g><title>0x7f933aa76c28 (libm-2.29.so) (4 samples, 0.53%)</title><rect x="547" y="500" width="7" height="15" fill="rgb(247,103,18)"/><text x="550.00" y="510.50"></text></g><g><title>0x7f933aa76c2e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="554" y="500" width="1" height="15" fill="rgb(226,98,45)"/><text x="557.00" y="510.50"></text></g><g><title>0x7f933aa76c32 (libm-2.29.so) (10 samples, 1.32%)</title><rect x="555" y="500" width="16" height="15" fill="rgb(231,169,20)"/><text x="558.00" y="510.50"></text></g><g><title>0x7f933aa76c3e (libm-2.29.so) (3 samples, 0.40%)</title><rect x="571" y="500" width="4" height="15" fill="rgb(244,38,53)"/><text x="574.00" y="510.50"></text></g><g><title>0x7f933aa76c52 (libm-2.29.so) (7 samples, 0.92%)</title><rect x="575" y="500" width="11" height="15" fill="rgb(246,166,23)"/><text x="578.00" y="510.50"></text></g><g><title>0x7f933aa76c5a (libm-2.29.so) (4 samples, 0.53%)</title><rect x="586" y="500" width="7" height="15" fill="rgb(240,137,35)"/><text x="589.00" y="510.50"></text></g><g><title>0x7f933aa76c6e (libm-2.29.so) (7 samples, 0.92%)</title><rect x="593" y="500" width="10" height="15" fill="rgb(206,163,44)"/><text x="596.00" y="510.50"></text></g><g><title>0x7f933aa76c7b (libm-2.29.so) (6 samples, 0.79%)</title><rect x="603" y="500" width="10" height="15" fill="rgb(227,10,10)"/><text x="606.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (126 samples, 16.60%)</title><rect x="426" y="452" width="196" height="15" fill="rgb(241,19,9)"/><text x="429.00" y="462.50">RuntimeSVMClassifier&lt;floa..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:296) (85 samples, 11.20%)</title><rect x="490" y="468" width="132" height="15" fill="rgb(223,5,16)"/><text x="493.00" y="478.50">RuntimeSVMClassi..</text></g><g><title>expf32x (libm-2.29.so) (83 samples, 10.94%)</title><rect x="493" y="484" width="129" height="15" fill="rgb(242,65,52)"/><text x="496.00" y="494.50">expf32x (libm-2...</text></g><g><title>0x7f933aa76c7f (libm-2.29.so) (6 samples, 0.79%)</title><rect x="613" y="500" width="9" height="15" fill="rgb(205,65,16)"/><text x="616.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (3 samples, 0.40%)</title><rect x="622" y="452" width="5" height="15" fill="rgb(217,149,41)"/><text x="625.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:920) (3 samples, 0.40%)</title><rect x="622" y="468" width="5" height="15" fill="rgb(209,206,17)"/><text x="625.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (3 samples, 0.40%)</title><rect x="627" y="452" width="4" height="15" fill="rgb(225,3,44)"/><text x="630.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (3 samples, 0.40%)</title><rect x="627" y="468" width="4" height="15" fill="rgb(225,136,48)"/><text x="630.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (3 samples, 0.40%)</title><rect x="627" y="484" width="4" height="15" fill="rgb(206,215,51)"/><text x="630.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (2 samples, 0.26%)</title><rect x="628" y="500" width="3" height="15" fill="rgb(206,221,42)"/><text x="631.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.26%)</title><rect x="628" y="516" width="3" height="15" fill="rgb(221,88,32)"/><text x="631.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.26%)</title><rect x="628" y="532" width="3" height="15" fill="rgb(205,221,28)"/><text x="631.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (2 samples, 0.26%)</title><rect x="628" y="548" width="3" height="15" fill="rgb(243,207,18)"/><text x="631.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="628" y="564" width="3" height="15" fill="rgb(223,101,10)"/><text x="631.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="628" y="580" width="3" height="15" fill="rgb(209,38,13)"/><text x="631.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (7 samples, 0.92%)</title><rect x="631" y="452" width="11" height="15" fill="rgb(234,10,29)"/><text x="634.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (10 samples, 1.32%)</title><rect x="642" y="452" width="16" height="15" fill="rgb(240,147,21)"/><text x="645.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.13%)</title><rect x="658" y="500" width="1" height="15" fill="rgb(214,190,24)"/><text x="661.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.26%)</title><rect x="659" y="500" width="3" height="15" fill="rgb(254,87,48)"/><text x="662.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.26%)</title><rect x="659" y="516" width="3" height="15" fill="rgb(219,80,42)"/><text x="662.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.26%)</title><rect x="659" y="532" width="3" height="15" fill="rgb(213,10,53)"/><text x="662.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.26%)</title><rect x="659" y="548" width="3" height="15" fill="rgb(237,187,12)"/><text x="662.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="659" y="564" width="3" height="15" fill="rgb(229,12,43)"/><text x="662.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="659" y="580" width="3" height="15" fill="rgb(244,206,9)"/><text x="662.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.13%)</title><rect x="662" y="500" width="2" height="15" fill="rgb(225,182,26)"/><text x="665.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h:475) (1 samples, 0.13%)</title><rect x="662" y="516" width="2" height="15" fill="rgb(205,114,9)"/><text x="665.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h:120) (1 samples, 0.13%)</title><rect x="662" y="532" width="2" height="15" fill="rgb(248,215,21)"/><text x="665.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="664" y="500" width="2" height="15" fill="rgb(249,72,0)"/><text x="667.00" y="510.50"></text></g><g><title>0x7f933a8c4dc9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="664" y="516" width="2" height="15" fill="rgb(241,8,2)"/><text x="667.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (6 samples, 0.79%)</title><rect x="658" y="452" width="9" height="15" fill="rgb(241,174,25)"/><text x="661.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (6 samples, 0.79%)</title><rect x="658" y="468" width="9" height="15" fill="rgb(224,96,50)"/><text x="661.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (6 samples, 0.79%)</title><rect x="658" y="484" width="9" height="15" fill="rgb(210,6,22)"/><text x="661.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.13%)</title><rect x="666" y="500" width="1" height="15" fill="rgb(226,149,12)"/><text x="669.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="666" y="516" width="1" height="15" fill="rgb(247,228,23)"/><text x="669.00" y="526.50"></text></g><g><title>0x7f933a8a4945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="667" y="484" width="2" height="15" fill="rgb(237,131,26)"/><text x="670.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (2 samples, 0.26%)</title><rect x="667" y="452" width="3" height="15" fill="rgb(239,228,39)"/><text x="670.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.26%)</title><rect x="667" y="468" width="3" height="15" fill="rgb(225,51,30)"/><text x="670.00" y="478.50"></text></g><g><title>0x7f933a8a4971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="669" y="484" width="1" height="15" fill="rgb(248,174,4)"/><text x="672.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (1 samples, 0.13%)</title><rect x="670" y="452" width="2" height="15" fill="rgb(252,28,25)"/><text x="673.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (1 samples, 0.13%)</title><rect x="670" y="468" width="2" height="15" fill="rgb(214,24,9)"/><text x="673.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (1 samples, 0.13%)</title><rect x="670" y="484" width="2" height="15" fill="rgb(214,25,10)"/><text x="673.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (1 samples, 0.13%)</title><rect x="670" y="500" width="2" height="15" fill="rgb(235,139,21)"/><text x="673.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="670" y="516" width="2" height="15" fill="rgb(230,21,14)"/><text x="673.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="670" y="532" width="2" height="15" fill="rgb(244,211,5)"/><text x="673.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:453) (1 samples, 0.13%)</title><rect x="672" y="452" width="1" height="15" fill="rgb(252,208,52)"/><text x="675.00" y="462.50"></text></g><g><title>std::max&lt;float&gt; (stl_algobase.h:224) (1 samples, 0.13%)</title><rect x="672" y="468" width="1" height="15" fill="rgb(216,55,9)"/><text x="675.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:454) (1 samples, 0.13%)</title><rect x="673" y="452" width="2" height="15" fill="rgb(217,195,37)"/><text x="676.00" y="462.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h:201) (1 samples, 0.13%)</title><rect x="673" y="468" width="2" height="15" fill="rgb(244,7,29)"/><text x="676.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::resize (stl_vector.h:676) (1 samples, 0.13%)</title><rect x="675" y="468" width="1" height="15" fill="rgb(242,58,2)"/><text x="678.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:308) (1 samples, 0.13%)</title><rect x="676" y="484" width="2" height="15" fill="rgb(236,48,23)"/><text x="679.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.13%)</title><rect x="676" y="500" width="2" height="15" fill="rgb(243,145,26)"/><text x="679.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="676" y="516" width="2" height="15" fill="rgb(251,170,29)"/><text x="679.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:309) (1 samples, 0.13%)</title><rect x="678" y="484" width="2" height="15" fill="rgb(208,111,29)"/><text x="681.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:427) (1 samples, 0.13%)</title><rect x="678" y="500" width="2" height="15" fill="rgb(243,221,53)"/><text x="681.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h:160) (1 samples, 0.13%)</title><rect x="678" y="516" width="2" height="15" fill="rgb(213,91,3)"/><text x="681.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.13%)</title><rect x="678" y="532" width="2" height="15" fill="rgb(248,214,50)"/><text x="681.00" y="542.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.13%)</title><rect x="678" y="548" width="2" height="15" fill="rgb(223,109,3)"/><text x="681.00" y="558.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.13%)</title><rect x="678" y="564" width="2" height="15" fill="rgb(227,106,6)"/><text x="681.00" y="574.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.26%)</title><rect x="681" y="500" width="3" height="15" fill="rgb(228,215,17)"/><text x="684.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.26%)</title><rect x="681" y="516" width="3" height="15" fill="rgb(233,213,17)"/><text x="684.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.26%)</title><rect x="681" y="532" width="3" height="15" fill="rgb(205,85,36)"/><text x="684.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.26%)</title><rect x="681" y="548" width="3" height="15" fill="rgb(243,148,35)"/><text x="684.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="681" y="564" width="3" height="15" fill="rgb(246,88,27)"/><text x="684.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="681" y="580" width="3" height="15" fill="rgb(242,50,24)"/><text x="684.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.13%)</title><rect x="684" y="500" width="2" height="15" fill="rgb(213,141,36)"/><text x="687.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float&gt; (alloc_traits.h:475) (1 samples, 0.13%)</title><rect x="684" y="516" width="2" height="15" fill="rgb(226,195,8)"/><text x="687.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float&gt; (new_allocator.h:120) (1 samples, 0.13%)</title><rect x="684" y="532" width="2" height="15" fill="rgb(208,154,45)"/><text x="687.00" y="542.50"></text></g><g><title>0x7f933a8a491e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="686" y="516" width="1" height="15" fill="rgb(220,155,47)"/><text x="689.00" y="526.50"></text></g><g><title>0x7f933a8a4929 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="687" y="516" width="3" height="15" fill="rgb(232,169,41)"/><text x="690.00" y="526.50"></text></g><g><title>0x7f933a8a4a4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="690" y="516" width="2" height="15" fill="rgb(235,155,51)"/><text x="693.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="692" y="516" width="2" height="15" fill="rgb(214,142,36)"/><text x="695.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (10 samples, 1.32%)</title><rect x="680" y="484" width="15" height="15" fill="rgb(244,220,14)"/><text x="683.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (6 samples, 0.79%)</title><rect x="686" y="500" width="9" height="15" fill="rgb(219,29,24)"/><text x="689.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="694" y="516" width="1" height="15" fill="rgb(231,218,36)"/><text x="697.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:311) (1 samples, 0.13%)</title><rect x="695" y="484" width="2" height="15" fill="rgb(226,166,54)"/><text x="698.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.13%)</title><rect x="695" y="500" width="2" height="15" fill="rgb(244,50,3)"/><text x="698.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.13%)</title><rect x="695" y="516" width="2" height="15" fill="rgb(221,147,47)"/><text x="698.00" y="526.50"></text></g><g><title>0x7f92fba032d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="697" y="564" width="1" height="15" fill="rgb(240,133,49)"/><text x="700.00" y="574.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (2 samples, 0.26%)</title><rect x="697" y="500" width="3" height="15" fill="rgb(246,69,52)"/><text x="700.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (2 samples, 0.26%)</title><rect x="697" y="516" width="3" height="15" fill="rgb(226,25,27)"/><text x="700.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (2 samples, 0.26%)</title><rect x="697" y="532" width="3" height="15" fill="rgb(242,111,2)"/><text x="700.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (2 samples, 0.26%)</title><rect x="697" y="548" width="3" height="15" fill="rgb(231,81,38)"/><text x="700.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="698" y="564" width="2" height="15" fill="rgb(222,51,14)"/><text x="701.00" y="574.50"></text></g><g><title>0x7f932a370d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="698" y="580" width="2" height="15" fill="rgb(253,29,20)"/><text x="701.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.13%)</title><rect x="700" y="500" width="1" height="15" fill="rgb(227,87,52)"/><text x="703.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.13%)</title><rect x="701" y="500" width="2" height="15" fill="rgb(205,160,2)"/><text x="704.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="701" y="516" width="2" height="15" fill="rgb(237,221,6)"/><text x="704.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (6 samples, 0.79%)</title><rect x="697" y="484" width="9" height="15" fill="rgb(253,91,11)"/><text x="700.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (2 samples, 0.26%)</title><rect x="703" y="500" width="3" height="15" fill="rgb(245,15,38)"/><text x="706.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:316) (1 samples, 0.13%)</title><rect x="706" y="484" width="2" height="15" fill="rgb(241,25,19)"/><text x="709.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:331) (4 samples, 0.53%)</title><rect x="708" y="484" width="6" height="15" fill="rgb(247,26,49)"/><text x="711.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:332) (2 samples, 0.26%)</title><rect x="714" y="484" width="3" height="15" fill="rgb(244,195,5)"/><text x="717.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (1 samples, 0.13%)</title><rect x="717" y="484" width="1" height="15" fill="rgb(226,174,5)"/><text x="720.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:334) (1 samples, 0.13%)</title><rect x="718" y="484" width="2" height="15" fill="rgb(253,33,9)"/><text x="721.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:336) (1 samples, 0.13%)</title><rect x="720" y="484" width="2" height="15" fill="rgb(241,195,5)"/><text x="723.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:345) (1 samples, 0.13%)</title><rect x="722" y="484" width="1" height="15" fill="rgb(236,19,25)"/><text x="725.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (2 samples, 0.26%)</title><rect x="723" y="484" width="3" height="15" fill="rgb(209,131,12)"/><text x="726.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (13 samples, 1.71%)</title><rect x="726" y="484" width="20" height="15" fill="rgb(232,144,5)"/><text x="729.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (3 samples, 0.40%)</title><rect x="746" y="484" width="5" height="15" fill="rgb(248,29,51)"/><text x="749.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (50 samples, 6.59%)</title><rect x="675" y="452" width="78" height="15" fill="rgb(229,30,50)"/><text x="678.00" y="462.50">RuntimeSV..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (49 samples, 6.46%)</title><rect x="676" y="468" width="77" height="15" fill="rgb(216,149,50)"/><text x="679.00" y="478.50">std::vec..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (1 samples, 0.13%)</title><rect x="751" y="484" width="2" height="15" fill="rgb(217,153,15)"/><text x="754.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:469) (1 samples, 0.13%)</title><rect x="753" y="452" width="1" height="15" fill="rgb(230,115,29)"/><text x="756.00" y="462.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h:5549) (1 samples, 0.13%)</title><rect x="753" y="468" width="1" height="15" fill="rgb(244,125,15)"/><text x="756.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h:5523) (1 samples, 0.13%)</title><rect x="753" y="484" width="1" height="15" fill="rgb(249,213,27)"/><text x="756.00" y="494.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::operator++ (stl_iterator.h:799) (1 samples, 0.13%)</title><rect x="753" y="500" width="1" height="15" fill="rgb(208,202,25)"/><text x="756.00" y="510.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:149) (2 samples, 0.26%)</title><rect x="754" y="484" width="3" height="15" fill="rgb(223,185,17)"/><text x="757.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.26%)</title><rect x="754" y="500" width="3" height="15" fill="rgb(242,136,49)"/><text x="757.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:491) (3 samples, 0.40%)</title><rect x="754" y="452" width="5" height="15" fill="rgb(237,54,40)"/><text x="757.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (3 samples, 0.40%)</title><rect x="754" y="468" width="5" height="15" fill="rgb(247,204,27)"/><text x="757.00" y="478.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:206) (1 samples, 0.13%)</title><rect x="757" y="484" width="2" height="15" fill="rgb(212,29,10)"/><text x="760.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:45) (263 samples, 34.65%)</title><rect x="352" y="52" width="408" height="15" fill="rgb(211,15,2)"/><text x="355.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_..</text></g><g><title>profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:44) (263 samples, 34.65%)</title><rect x="352" y="68" width="408" height="15" fill="rgb(220,227,21)"/><text x="355.00" y="78.50">profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kernel..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:29) (261 samples, 34.39%)</title><rect x="355" y="84" width="405" height="15" fill="rgb(251,20,0)"/><text x="358.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kerne..</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:23) (238 samples, 31.36%)</title><rect x="390" y="100" width="370" height="15" fill="rgb(226,91,50)"/><text x="393.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernel..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (238 samples, 31.36%)</title><rect x="390" y="116" width="370" height="15" fill="rgb(231,33,48)"/><text x="393.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (238 samples, 31.36%)</title><rect x="390" y="132" width="370" height="15" fill="rgb(205,166,54)"/><text x="393.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (238 samples, 31.36%)</title><rect x="390" y="148" width="370" height="15" fill="rgb(243,32,24)"/><text x="393.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (238 samples, 31.36%)</title><rect x="390" y="164" width="370" height="15" fill="rgb(210,218,8)"/><text x="393.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (238 samples, 31.36%)</title><rect x="390" y="180" width="370" height="15" fill="rgb(248,159,37)"/><text x="393.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (238 samples, 31.36%)</title><rect x="390" y="196" width="370" height="15" fill="rgb(242,138,41)"/><text x="393.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:381)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (237 samples, 31.23%)</title><rect x="392" y="212" width="368" height="15" fill="rgb(245,164,27)"/><text x="395.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:269)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (237 samples, 31.23%)</title><rect x="392" y="228" width="368" height="15" fill="rgb(248,133,33)"/><text x="395.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier...</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (237 samples, 31.23%)</title><rect x="392" y="244" width="368" height="15" fill="rgb(254,67,17)"/><text x="395.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h:62..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (237 samples, 31.23%)</title><rect x="392" y="260" width="368" height="15" fill="rgb(214,198,2)"/><text x="395.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (237 samples, 31.23%)</title><rect x="392" y="276" width="368" height="15" fill="rgb(239,75,21)"/><text x="395.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (237 samples, 31.23%)</title><rect x="392" y="292" width="368" height="15" fill="rgb(232,195,52)"/><text x="395.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClass..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (237 samples, 31.23%)</title><rect x="392" y="308" width="368" height="15" fill="rgb(238,91,29)"/><text x="395.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClass..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (237 samples, 31.23%)</title><rect x="392" y="324" width="368" height="15" fill="rgb(245,145,14)"/><text x="395.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tu..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (237 samples, 31.23%)</title><rect x="392" y="340" width="368" height="15" fill="rgb(244,157,43)"/><text x="395.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:8..</text></g><g><title>pybind11::array::~array (numpy.h:538) (237 samples, 31.23%)</title><rect x="392" y="356" width="368" height="15" fill="rgb(226,133,9)"/><text x="395.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (237 samples, 31.23%)</title><rect x="392" y="372" width="368" height="15" fill="rgb(222,45,46)"/><text x="395.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1311)</text></g><g><title>pybind11::object::~object (pytypes.h:240) (237 samples, 31.23%)</title><rect x="392" y="388" width="368" height="15" fill="rgb(231,105,15)"/><text x="395.00" y="398.50">pybind11::object::~object (pytypes.h:240)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (237 samples, 31.23%)</title><rect x="392" y="404" width="368" height="15" fill="rgb(223,170,51)"/><text x="395.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h:197)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (237 samples, 31.23%)</title><rect x="392" y="420" width="368" height="15" fill="rgb(205,13,34)"/><text x="395.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/o..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (237 samples, 31.23%)</title><rect x="392" y="436" width="368" height="15" fill="rgb(218,168,42)"/><text x="395.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (vector.tcc:98) (1 samples, 0.13%)</title><rect x="759" y="452" width="1" height="15" fill="rgb(253,139,41)"/><text x="762.00" y="462.50"></text></g><g><title>0x7f933a8a4eb0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="762" y="116" width="2" height="15" fill="rgb(243,173,31)"/><text x="765.00" y="126.50"></text></g><g><title>0x7f933a8a3bcc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="762" y="132" width="2" height="15" fill="rgb(229,153,34)"/><text x="765.00" y="142.50"></text></g><g><title>0x7f92fa8d4ff9 (?) (1 samples, 0.13%)</title><rect x="764" y="212" width="1" height="15" fill="rgb(239,148,28)"/><text x="767.00" y="222.50"></text></g><g><title>0x7f92fa8cfef6 (?) (1 samples, 0.13%)</title><rect x="764" y="228" width="1" height="15" fill="rgb(249,110,51)"/><text x="767.00" y="238.50"></text></g><g><title>0x7f92fa8c4962 (?) (1 samples, 0.13%)</title><rect x="764" y="244" width="1" height="15" fill="rgb(225,48,28)"/><text x="767.00" y="254.50"></text></g><g><title>0x7f92fa8f87a7 (?) (1 samples, 0.13%)</title><rect x="764" y="260" width="1" height="15" fill="rgb(205,198,42)"/><text x="767.00" y="270.50"></text></g><g><title>0x7f92fa8f8379 (?) (1 samples, 0.13%)</title><rect x="764" y="276" width="1" height="15" fill="rgb(250,162,4)"/><text x="767.00" y="286.50"></text></g><g><title>0x7f92fad568b8 (?) (1 samples, 0.13%)</title><rect x="764" y="292" width="1" height="15" fill="rgb(248,206,10)"/><text x="767.00" y="302.50"></text></g><g><title>0x7f92fad54c7f (?) (1 samples, 0.13%)</title><rect x="764" y="308" width="1" height="15" fill="rgb(238,91,16)"/><text x="767.00" y="318.50"></text></g><g><title>0x7f92fad6799c (?) (1 samples, 0.13%)</title><rect x="764" y="324" width="1" height="15" fill="rgb(253,159,45)"/><text x="767.00" y="334.50"></text></g><g><title>0x7f92faa6d40d (?) (1 samples, 0.13%)</title><rect x="764" y="340" width="1" height="15" fill="rgb(243,3,39)"/><text x="767.00" y="350.50"></text></g><g><title>0x7f92fa9b2e79 (?) (1 samples, 0.13%)</title><rect x="764" y="356" width="1" height="15" fill="rgb(235,181,48)"/><text x="767.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="764" y="372" width="1" height="15" fill="rgb(249,142,51)"/><text x="767.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="764" y="388" width="1" height="15" fill="rgb(209,205,1)"/><text x="767.00" y="398.50"></text></g><g><title>0x7f933aa76bc3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="776" y="372" width="2" height="15" fill="rgb(207,111,45)"/><text x="779.00" y="382.50"></text></g><g><title>0x7f933aa76bd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="778" y="372" width="1" height="15" fill="rgb(243,26,46)"/><text x="781.00" y="382.50"></text></g><g><title>0x7f933aa76be7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="779" y="372" width="2" height="15" fill="rgb(242,63,22)"/><text x="782.00" y="382.50"></text></g><g><title>0x7f933aa76c18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="781" y="372" width="1" height="15" fill="rgb(218,218,9)"/><text x="784.00" y="382.50"></text></g><g><title>0x7f933aa76c28 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="782" y="372" width="3" height="15" fill="rgb(250,5,41)"/><text x="785.00" y="382.50"></text></g><g><title>0x7f933aa76c46 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="785" y="372" width="2" height="15" fill="rgb(254,128,21)"/><text x="788.00" y="382.50"></text></g><g><title>0x7f933aa76c52 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="787" y="372" width="5" height="15" fill="rgb(230,72,38)"/><text x="790.00" y="382.50"></text></g><g><title>0x7f933aa76c7b (libm-2.29.so) (1 samples, 0.13%)</title><rect x="792" y="372" width="1" height="15" fill="rgb(225,168,19)"/><text x="795.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (12 samples, 1.58%)</title><rect x="776" y="356" width="19" height="15" fill="rgb(230,20,37)"/><text x="779.00" y="366.50"></text></g><g><title>0x7f933aa76c7f (libm-2.29.so) (1 samples, 0.13%)</title><rect x="793" y="372" width="2" height="15" fill="rgb(242,115,1)"/><text x="796.00" y="382.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.66%)</title><rect x="795" y="356" width="7" height="15" fill="rgb(247,222,31)"/><text x="798.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="799" y="372" width="3" height="15" fill="rgb(228,12,13)"/><text x="802.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="801" y="388" width="1" height="15" fill="rgb(247,140,34)"/><text x="804.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 3.43%)</title><rect x="765" y="340" width="40" height="15" fill="rgb(240,165,45)"/><text x="768.00" y="350.50">onn..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="802" y="356" width="3" height="15" fill="rgb(214,159,31)"/><text x="805.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="804" y="372" width="1" height="15" fill="rgb(236,122,45)"/><text x="807.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.56%)</title><rect x="765" y="260" width="42" height="15" fill="rgb(250,101,17)"/><text x="768.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.56%)</title><rect x="765" y="276" width="42" height="15" fill="rgb(226,180,54)"/><text x="768.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.56%)</title><rect x="765" y="292" width="42" height="15" fill="rgb(212,5,27)"/><text x="768.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.56%)</title><rect x="765" y="308" width="42" height="15" fill="rgb(215,187,8)"/><text x="768.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.56%)</title><rect x="765" y="324" width="42" height="15" fill="rgb(241,186,20)"/><text x="768.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="805" y="340" width="2" height="15" fill="rgb(218,30,19)"/><text x="808.00" y="350.50"></text></g><g><title>0x7f92fa89cba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="805" y="356" width="2" height="15" fill="rgb(230,217,48)"/><text x="808.00" y="366.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:18) (31 samples, 4.08%)</title><rect x="760" y="100" width="49" height="15" fill="rgb(250,151,50)"/><text x="763.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (29 samples, 3.82%)</title><rect x="764" y="116" width="45" height="15" fill="rgb(207,204,16)"/><text x="767.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (29 samples, 3.82%)</title><rect x="764" y="132" width="45" height="15" fill="rgb(208,174,17)"/><text x="767.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (29 samples, 3.82%)</title><rect x="764" y="148" width="45" height="15" fill="rgb(251,89,41)"/><text x="767.00" y="158.50">run ..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (29 samples, 3.82%)</title><rect x="764" y="164" width="45" height="15" fill="rgb(247,145,43)"/><text x="767.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (29 samples, 3.82%)</title><rect x="764" y="180" width="45" height="15" fill="rgb(236,48,7)"/><text x="767.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py:136) (29 samples, 3.82%)</title><rect x="764" y="196" width="45" height="15" fill="rgb(233,6,24)"/><text x="767.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.69%)</title><rect x="765" y="212" width="44" height="15" fill="rgb(206,191,28)"/><text x="768.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.69%)</title><rect x="765" y="228" width="44" height="15" fill="rgb(224,158,16)"/><text x="768.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.69%)</title><rect x="765" y="244" width="44" height="15" fill="rgb(247,43,18)"/><text x="768.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="807" y="260" width="2" height="15" fill="rgb(239,18,38)"/><text x="810.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="807" y="276" width="2" height="15" fill="rgb(211,147,23)"/><text x="810.00" y="286.50"></text></g><g><title>0x7f933a8a4d07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="807" y="292" width="2" height="15" fill="rgb(240,221,26)"/><text x="810.00" y="302.50"></text></g><g><title>0x7f933a8a3bc6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="816" y="132" width="2" height="15" fill="rgb(237,123,35)"/><text x="819.00" y="142.50"></text></g><g><title>0x7f933a8a3bcc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="818" y="132" width="1" height="15" fill="rgb(206,179,12)"/><text x="821.00" y="142.50"></text></g><g><title>0x7f933a8a3c2d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="819" y="132" width="2" height="15" fill="rgb(238,97,26)"/><text x="822.00" y="142.50"></text></g><g><title>0x7f933a8a4eb0 (libc-2.29.so) (4 samples, 0.53%)</title><rect x="816" y="116" width="7" height="15" fill="rgb(209,100,30)"/><text x="819.00" y="126.50"></text></g><g><title>0x7f933a8a3c49 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="821" y="132" width="2" height="15" fill="rgb(234,181,38)"/><text x="824.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.13%)</title><rect x="823" y="148" width="1" height="15" fill="rgb(239,19,38)"/><text x="826.00" y="158.50"></text></g><g><title>0x7f933a8a4965 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="930" y="356" width="1" height="15" fill="rgb(221,226,32)"/><text x="933.00" y="366.50"></text></g><g><title>0x7f933aa23e2f (libm-2.29.so) (1 samples, 0.13%)</title><rect x="931" y="356" width="2" height="15" fill="rgb(211,216,34)"/><text x="934.00" y="366.50"></text></g><g><title>0x7f933aa23e96 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="933" y="356" width="2" height="15" fill="rgb(233,143,33)"/><text x="936.00" y="366.50"></text></g><g><title>0x7f933aa23ea2 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="935" y="356" width="3" height="15" fill="rgb(238,205,22)"/><text x="938.00" y="366.50"></text></g><g><title>0x7f933aa23ea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="938" y="356" width="1" height="15" fill="rgb(245,0,17)"/><text x="941.00" y="366.50"></text></g><g><title>0x7f933aa76ba0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="958" y="372" width="1" height="15" fill="rgb(251,0,52)"/><text x="961.00" y="382.50"></text></g><g><title>0x7f933aa76bb4 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="959" y="372" width="4" height="15" fill="rgb(233,178,30)"/><text x="962.00" y="382.50"></text></g><g><title>0x7f933aa76bde (libm-2.29.so) (1 samples, 0.13%)</title><rect x="963" y="372" width="1" height="15" fill="rgb(236,109,38)"/><text x="966.00" y="382.50"></text></g><g><title>0x7f933aa76be7 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="964" y="372" width="5" height="15" fill="rgb(220,80,48)"/><text x="967.00" y="382.50"></text></g><g><title>0x7f933aa76beb (libm-2.29.so) (1 samples, 0.13%)</title><rect x="969" y="372" width="1" height="15" fill="rgb(235,144,32)"/><text x="972.00" y="382.50"></text></g><g><title>0x7f933aa76bf9 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="970" y="372" width="2" height="15" fill="rgb(207,137,2)"/><text x="973.00" y="382.50"></text></g><g><title>0x7f933aa76c04 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="972" y="372" width="3" height="15" fill="rgb(207,19,29)"/><text x="975.00" y="382.50"></text></g><g><title>0x7f933aa76c07 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="975" y="372" width="3" height="15" fill="rgb(243,208,10)"/><text x="978.00" y="382.50"></text></g><g><title>0x7f933aa76c18 (libm-2.29.so) (3 samples, 0.40%)</title><rect x="978" y="372" width="5" height="15" fill="rgb(243,106,31)"/><text x="981.00" y="382.50"></text></g><g><title>0x7f933aa76c28 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="983" y="372" width="3" height="15" fill="rgb(248,52,6)"/><text x="986.00" y="382.50"></text></g><g><title>0x7f933aa76c2e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="986" y="372" width="1" height="15" fill="rgb(226,48,8)"/><text x="989.00" y="382.50"></text></g><g><title>0x7f933aa76c32 (libm-2.29.so) (9 samples, 1.19%)</title><rect x="987" y="372" width="14" height="15" fill="rgb(220,81,49)"/><text x="990.00" y="382.50"></text></g><g><title>0x7f933aa76c3e (libm-2.29.so) (2 samples, 0.26%)</title><rect x="1001" y="372" width="3" height="15" fill="rgb(244,120,42)"/><text x="1004.00" y="382.50"></text></g><g><title>0x7f933aa76c46 (libm-2.29.so) (4 samples, 0.53%)</title><rect x="1004" y="372" width="7" height="15" fill="rgb(211,165,39)"/><text x="1007.00" y="382.50"></text></g><g><title>0x7f933aa76c52 (libm-2.29.so) (5 samples, 0.66%)</title><rect x="1011" y="372" width="7" height="15" fill="rgb(210,18,10)"/><text x="1014.00" y="382.50"></text></g><g><title>0x7f933aa76c5a (libm-2.29.so) (5 samples, 0.66%)</title><rect x="1018" y="372" width="8" height="15" fill="rgb(206,176,40)"/><text x="1021.00" y="382.50"></text></g><g><title>0x7f933aa76c6e (libm-2.29.so) (7 samples, 0.92%)</title><rect x="1026" y="372" width="11" height="15" fill="rgb(253,101,6)"/><text x="1029.00" y="382.50"></text></g><g><title>0x7f933aa76c7b (libm-2.29.so) (6 samples, 0.79%)</title><rect x="1037" y="372" width="9" height="15" fill="rgb(248,46,35)"/><text x="1040.00" y="382.50"></text></g><g><title>expf32x (libm-2.29.so) (74 samples, 9.75%)</title><rect x="939" y="356" width="115" height="15" fill="rgb(254,42,48)"/><text x="942.00" y="366.50">expf32x (libm-..</text></g><g><title>0x7f933aa76c7f (libm-2.29.so) (5 samples, 0.66%)</title><rect x="1046" y="372" width="8" height="15" fill="rgb(205,67,1)"/><text x="1049.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1054" y="356" width="2" height="15" fill="rgb(245,218,45)"/><text x="1057.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1088" y="372" width="2" height="15" fill="rgb(241,200,7)"/><text x="1091.00" y="382.50"></text></g><g><title>0x7f92fa89c0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1092" y="388" width="1" height="15" fill="rgb(217,62,35)"/><text x="1095.00" y="398.50"></text></g><g><title>0x7f933a8a490e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1093" y="388" width="2" height="15" fill="rgb(243,158,24)"/><text x="1096.00" y="398.50"></text></g><g><title>0x7f933a8a4998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1095" y="388" width="1" height="15" fill="rgb(243,157,21)"/><text x="1098.00" y="398.50"></text></g><g><title>0x7f933a8c4d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1096" y="388" width="2" height="15" fill="rgb(248,42,17)"/><text x="1099.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1098" y="388" width="1" height="15" fill="rgb(228,36,26)"/><text x="1101.00" y="398.50"></text></g><g><title>0x7f932a370d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1101" y="404" width="1" height="15" fill="rgb(222,95,0)"/><text x="1104.00" y="414.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 4.48%)</title><rect x="1056" y="356" width="53" height="15" fill="rgb(230,186,11)"/><text x="1059.00" y="366.50">onnxr..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.58%)</title><rect x="1090" y="372" width="19" height="15" fill="rgb(215,142,42)"/><text x="1093.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.79%)</title><rect x="1099" y="388" width="10" height="15" fill="rgb(228,206,54)"/><text x="1102.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.53%)</title><rect x="1102" y="404" width="7" height="15" fill="rgb(220,207,22)"/><text x="1105.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="1109" y="356" width="3" height="15" fill="rgb(227,205,49)"/><text x="1112.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1109" y="372" width="3" height="15" fill="rgb(205,59,25)"/><text x="1112.00" y="382.50"></text></g><g><title>0x7f933a8a4945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1113" y="372" width="2" height="15" fill="rgb(243,121,44)"/><text x="1116.00" y="382.50"></text></g><g><title>0x7f933a8a495e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1115" y="372" width="1" height="15" fill="rgb(232,224,28)"/><text x="1118.00" y="382.50"></text></g><g><title>0x7f933a8a4a4d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1116" y="372" width="2" height="15" fill="rgb(212,218,46)"/><text x="1119.00" y="382.50"></text></g><g><title>0x7f933a8a4a55 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1118" y="372" width="3" height="15" fill="rgb(235,88,22)"/><text x="1121.00" y="382.50"></text></g><g><title>0x7f933a8c4d62 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1121" y="372" width="2" height="15" fill="rgb(223,13,50)"/><text x="1124.00" y="382.50"></text></g><g><title>0x7f933a8c4e09 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1123" y="372" width="1" height="15" fill="rgb(253,216,25)"/><text x="1126.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1124" y="372" width="2" height="15" fill="rgb(237,174,46)"/><text x="1127.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (197 samples, 25.96%)</title><rect x="824" y="340" width="306" height="15" fill="rgb(240,183,4)"/><text x="827.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Co..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.58%)</title><rect x="1112" y="356" width="18" height="15" fill="rgb(243,82,36)"/><text x="1115.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="1126" y="372" width="4" height="15" fill="rgb(238,57,45)"/><text x="1129.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1127" y="388" width="3" height="15" fill="rgb(233,82,51)"/><text x="1130.00" y="398.50"></text></g><g><title>0x7f92fa89b930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1135" y="356" width="2" height="15" fill="rgb(212,5,46)"/><text x="1138.00" y="366.50"></text></g><g><title>0x7f933a8a5d8d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1146" y="388" width="2" height="15" fill="rgb(247,89,50)"/><text x="1149.00" y="398.50"></text></g><g><title>0x7f933a8a5dec (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1148" y="388" width="1" height="15" fill="rgb(218,71,7)"/><text x="1151.00" y="398.50"></text></g><g><title>0x7f933a8a5fde (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1149" y="388" width="2" height="15" fill="rgb(214,55,32)"/><text x="1152.00" y="398.50"></text></g><g><title>0x7f933a8a6368 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1151" y="388" width="1" height="15" fill="rgb(225,100,41)"/><text x="1154.00" y="398.50"></text></g><g><title>0x7f933a8a63ae (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1152" y="388" width="2" height="15" fill="rgb(224,180,20)"/><text x="1155.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.58%)</title><rect x="1137" y="356" width="18" height="15" fill="rgb(214,169,19)"/><text x="1140.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (12 samples, 1.58%)</title><rect x="1137" y="372" width="18" height="15" fill="rgb(243,140,30)"/><text x="1140.00" y="382.50"></text></g><g><title>0x7f933a8a63e0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1154" y="388" width="1" height="15" fill="rgb(253,145,49)"/><text x="1157.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1155" y="356" width="2" height="15" fill="rgb(227,172,16)"/><text x="1158.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (216 samples, 28.46%)</title><rect x="824" y="260" width="336" height="15" fill="rgb(205,17,15)"/><text x="827.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (216 samples, 28.46%)</title><rect x="824" y="276" width="336" height="15" fill="rgb(247,88,40)"/><text x="827.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (216 samples, 28.46%)</title><rect x="824" y="292" width="336" height="15" fill="rgb(242,181,14)"/><text x="827.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (216 samples, 28.46%)</title><rect x="824" y="308" width="336" height="15" fill="rgb(229,68,30)"/><text x="827.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (216 samples, 28.46%)</title><rect x="824" y="324" width="336" height="15" fill="rgb(246,21,20)"/><text x="827.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.50%)</title><rect x="1130" y="340" width="30" height="15" fill="rgb(247,194,41)"/><text x="1133.00" y="350.50">on..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="1157" y="356" width="3" height="15" fill="rgb(254,179,16)"/><text x="1160.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.32%)</title><rect x="1160" y="260" width="16" height="15" fill="rgb(208,187,52)"/><text x="1163.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1172" y="276" width="4" height="15" fill="rgb(215,2,4)"/><text x="1175.00" y="286.50"></text></g><g><title>0x7f933a8a4d07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1176" y="292" width="1" height="15" fill="rgb(227,210,47)"/><text x="1179.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1177" y="292" width="3" height="15" fill="rgb(206,213,15)"/><text x="1180.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (231 samples, 30.43%)</title><rect x="824" y="244" width="359" height="15" fill="rgb(218,225,41)"/><text x="827.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.66%)</title><rect x="1176" y="260" width="7" height="15" fill="rgb(214,137,44)"/><text x="1179.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.66%)</title><rect x="1176" y="276" width="7" height="15" fill="rgb(231,181,37)"/><text x="1179.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1180" y="292" width="3" height="15" fill="rgb(250,178,20)"/><text x="1183.00" y="302.50"></text></g><g><title>0x7f933a8a4d07 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1180" y="308" width="3" height="15" fill="rgb(209,185,8)"/><text x="1183.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (232 samples, 30.57%)</title><rect x="824" y="164" width="361" height="15" fill="rgb(209,102,33)"/><text x="827.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (232 samples, 30.57%)</title><rect x="824" y="180" width="361" height="15" fill="rgb(228,119,2)"/><text x="827.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (232 samples, 30.57%)</title><rect x="824" y="196" width="361" height="15" fill="rgb(214,169,53)"/><text x="827.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (232 samples, 30.57%)</title><rect x="824" y="212" width="361" height="15" fill="rgb(239,14,2)"/><text x="827.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (232 samples, 30.57%)</title><rect x="824" y="228" width="361" height="15" fill="rgb(211,29,22)"/><text x="827.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrunt..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(238,89,47)"/><text x="1186.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(236,126,43)"/><text x="1186.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:52) (275 samples, 36.23%)</title><rect x="760" y="52" width="428" height="15" fill="rgb(220,182,2)"/><text x="763.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_100..</text></g><g><title>profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:51) (275 samples, 36.23%)</title><rect x="760" y="68" width="428" height="15" fill="rgb(219,110,5)"/><text x="763.00" y="78.50">profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:29) (275 samples, 36.23%)</title><rect x="760" y="84" width="428" height="15" fill="rgb(234,168,44)"/><text x="763.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrb..</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py:23) (244 samples, 32.15%)</title><rect x="809" y="100" width="379" height="15" fill="rgb(212,187,39)"/><text x="812.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (235 samples, 30.96%)</title><rect x="823" y="116" width="365" height="15" fill="rgb(247,141,22)"/><text x="826.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (235 samples, 30.96%)</title><rect x="823" y="132" width="365" height="15" fill="rgb(232,143,18)"/><text x="826.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (234 samples, 30.83%)</title><rect x="824" y="148" width="364" height="15" fill="rgb(214,53,35)"/><text x="827.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.26%)</title><rect x="1185" y="164" width="3" height="15" fill="rgb(245,145,12)"/><text x="1188.00" y="174.50"></text></g><g><title>all (759 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,84,46)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.13%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(241,16,20)"/><text x="1191.00" y="62.50"></text></g></g></svg>