<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>0x7f0ab8d353c0 (sklearn/utils/sparsefuncs_fast.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(244,28,6)"/><text x="13.00" y="62.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (1 samples, 0.13%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(236,73,37)"/><text x="14.00" y="174.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (1 samples, 0.13%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(211,100,34)"/><text x="14.00" y="190.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (1 samples, 0.13%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(246,0,23)"/><text x="14.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.13%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(244,196,13)"/><text x="14.00" y="222.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2918) (1 samples, 0.13%)</title><rect x="13" y="276" width="1" height="15" fill="rgb(244,104,10)"/><text x="16.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (2 samples, 0.26%)</title><rect x="13" y="164" width="3" height="15" fill="rgb(226,82,21)"/><text x="16.00" y="174.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (2 samples, 0.26%)</title><rect x="13" y="180" width="3" height="15" fill="rgb(216,7,3)"/><text x="16.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.26%)</title><rect x="13" y="196" width="3" height="15" fill="rgb(248,174,52)"/><text x="16.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.26%)</title><rect x="13" y="212" width="3" height="15" fill="rgb(209,164,6)"/><text x="16.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (2 samples, 0.26%)</title><rect x="13" y="228" width="3" height="15" fill="rgb(226,123,11)"/><text x="16.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.26%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(235,226,7)"/><text x="16.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.26%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(234,11,49)"/><text x="16.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.13%)</title><rect x="14" y="276" width="2" height="15" fill="rgb(229,170,7)"/><text x="17.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.13%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(211,193,52)"/><text x="17.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.13%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(217,201,33)"/><text x="17.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.13%)</title><rect x="14" y="324" width="2" height="15" fill="rgb(239,55,24)"/><text x="17.00" y="334.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:18) (4 samples, 0.52%)</title><rect x="11" y="100" width="6" height="15" fill="rgb(243,131,52)"/><text x="14.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.52%)</title><rect x="11" y="116" width="6" height="15" fill="rgb(207,21,18)"/><text x="14.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 0.52%)</title><rect x="11" y="132" width="6" height="15" fill="rgb(228,142,0)"/><text x="14.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (4 samples, 0.52%)</title><rect x="11" y="148" width="6" height="15" fill="rgb(210,40,33)"/><text x="14.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (1 samples, 0.13%)</title><rect x="16" y="164" width="1" height="15" fill="rgb(235,50,42)"/><text x="19.00" y="174.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (1 samples, 0.13%)</title><rect x="16" y="180" width="1" height="15" fill="rgb(247,12,29)"/><text x="19.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:239) (1 samples, 0.13%)</title><rect x="16" y="196" width="1" height="15" fill="rgb(223,209,46)"/><text x="19.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:16) (1 samples, 0.13%)</title><rect x="16" y="212" width="1" height="15" fill="rgb(228,64,30)"/><text x="19.00" y="222.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (1 samples, 0.13%)</title><rect x="19" y="164" width="1" height="15" fill="rgb(240,215,33)"/><text x="22.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.13%)</title><rect x="19" y="180" width="1" height="15" fill="rgb(205,168,6)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.13%)</title><rect x="19" y="196" width="1" height="15" fill="rgb(227,168,36)"/><text x="22.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.13%)</title><rect x="20" y="212" width="2" height="15" fill="rgb(229,4,29)"/><text x="23.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.13%)</title><rect x="22" y="212" width="1" height="15" fill="rgb(234,195,31)"/><text x="25.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.13%)</title><rect x="23" y="212" width="2" height="15" fill="rgb(218,32,3)"/><text x="26.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.13%)</title><rect x="23" y="228" width="2" height="15" fill="rgb(222,89,1)"/><text x="26.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.13%)</title><rect x="25" y="228" width="1" height="15" fill="rgb(212,12,42)"/><text x="28.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.26%)</title><rect x="25" y="212" width="3" height="15" fill="rgb(208,153,2)"/><text x="28.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.13%)</title><rect x="26" y="228" width="2" height="15" fill="rgb(223,125,37)"/><text x="29.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.13%)</title><rect x="26" y="244" width="2" height="15" fill="rgb(238,224,4)"/><text x="29.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.13%)</title><rect x="28" y="212" width="2" height="15" fill="rgb(208,98,51)"/><text x="31.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.13%)</title><rect x="28" y="228" width="2" height="15" fill="rgb(235,181,32)"/><text x="31.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.26%)</title><rect x="31" y="228" width="3" height="15" fill="rgb(245,222,9)"/><text x="34.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.26%)</title><rect x="31" y="244" width="3" height="15" fill="rgb(240,219,1)"/><text x="34.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.52%)</title><rect x="30" y="212" width="6" height="15" fill="rgb(212,117,32)"/><text x="33.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.13%)</title><rect x="34" y="228" width="2" height="15" fill="rgb(230,138,42)"/><text x="37.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.13%)</title><rect x="34" y="244" width="2" height="15" fill="rgb(209,228,36)"/><text x="37.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.13%)</title><rect x="34" y="260" width="2" height="15" fill="rgb(252,101,40)"/><text x="37.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.13%)</title><rect x="36" y="228" width="1" height="15" fill="rgb(207,168,13)"/><text x="39.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (15 samples, 1.96%)</title><rect x="20" y="180" width="23" height="15" fill="rgb(233,97,13)"/><text x="23.00" y="190.50">_..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (15 samples, 1.96%)</title><rect x="20" y="196" width="23" height="15" fill="rgb(216,160,27)"/><text x="23.00" y="206.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.65%)</title><rect x="36" y="212" width="7" height="15" fill="rgb(225,109,11)"/><text x="39.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.52%)</title><rect x="37" y="228" width="6" height="15" fill="rgb(236,148,45)"/><text x="40.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.13%)</title><rect x="42" y="244" width="1" height="15" fill="rgb(229,175,37)"/><text x="45.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.13%)</title><rect x="42" y="260" width="1" height="15" fill="rgb(250,219,54)"/><text x="45.00" y="270.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:986) (1 samples, 0.13%)</title><rect x="43" y="180" width="2" height="15" fill="rgb(220,24,32)"/><text x="46.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.13%)</title><rect x="45" y="196" width="2" height="15" fill="rgb(215,224,47)"/><text x="48.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.13%)</title><rect x="45" y="212" width="2" height="15" fill="rgb(239,194,31)"/><text x="48.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.13%)</title><rect x="45" y="228" width="2" height="15" fill="rgb(218,64,30)"/><text x="48.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.13%)</title><rect x="48" y="212" width="2" height="15" fill="rgb(244,88,6)"/><text x="51.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.13%)</title><rect x="50" y="212" width="1" height="15" fill="rgb(235,64,40)"/><text x="53.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.13%)</title><rect x="51" y="212" width="2" height="15" fill="rgb(252,137,37)"/><text x="54.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.13%)</title><rect x="53" y="212" width="1" height="15" fill="rgb(218,131,33)"/><text x="56.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.13%)</title><rect x="53" y="228" width="1" height="15" fill="rgb(254,43,32)"/><text x="56.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.26%)</title><rect x="54" y="244" width="3" height="15" fill="rgb(242,172,12)"/><text x="57.00" y="254.50"></text></g><g><title>0x7f0ade535120 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="56" y="260" width="1" height="15" fill="rgb(206,116,7)"/><text x="59.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (3 samples, 0.39%)</title><rect x="54" y="212" width="5" height="15" fill="rgb(219,56,15)"/><text x="57.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.39%)</title><rect x="54" y="228" width="5" height="15" fill="rgb(223,187,53)"/><text x="57.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.13%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(244,69,11)"/><text x="60.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.39%)</title><rect x="59" y="212" width="5" height="15" fill="rgb(228,198,6)"/><text x="62.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.39%)</title><rect x="59" y="228" width="5" height="15" fill="rgb(225,177,4)"/><text x="62.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.13%)</title><rect x="62" y="244" width="2" height="15" fill="rgb(219,211,10)"/><text x="65.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.13%)</title><rect x="64" y="212" width="1" height="15" fill="rgb(228,149,29)"/><text x="67.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.13%)</title><rect x="64" y="228" width="1" height="15" fill="rgb(243,210,27)"/><text x="67.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.13%)</title><rect x="64" y="244" width="1" height="15" fill="rgb(254,214,13)"/><text x="67.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.13%)</title><rect x="64" y="260" width="1" height="15" fill="rgb(253,64,18)"/><text x="67.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:585) (1 samples, 0.13%)</title><rect x="65" y="212" width="2" height="15" fill="rgb(218,195,31)"/><text x="68.00" y="222.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;:6) (1 samples, 0.13%)</title><rect x="65" y="228" width="2" height="15" fill="rgb(223,206,40)"/><text x="68.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.13%)</title><rect x="65" y="244" width="2" height="15" fill="rgb(232,150,3)"/><text x="68.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.13%)</title><rect x="68" y="228" width="2" height="15" fill="rgb(244,41,53)"/><text x="71.00" y="238.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (23 samples, 3.01%)</title><rect x="47" y="196" width="35" height="15" fill="rgb(211,5,35)"/><text x="50.00" y="206.50">bi..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (10 samples, 1.31%)</title><rect x="67" y="212" width="15" height="15" fill="rgb(249,188,36)"/><text x="70.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (8 samples, 1.05%)</title><rect x="70" y="228" width="12" height="15" fill="rgb(216,168,27)"/><text x="73.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (8 samples, 1.05%)</title><rect x="70" y="244" width="12" height="15" fill="rgb(252,164,20)"/><text x="73.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (8 samples, 1.05%)</title><rect x="70" y="260" width="12" height="15" fill="rgb(225,48,24)"/><text x="73.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (8 samples, 1.05%)</title><rect x="70" y="276" width="12" height="15" fill="rgb(234,29,4)"/><text x="73.00" y="286.50"></text></g><g><title>0x7f0ade534d94 (libc-2.29.so) (8 samples, 1.05%)</title><rect x="70" y="292" width="12" height="15" fill="rgb(242,200,23)"/><text x="73.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1501) (1 samples, 0.13%)</title><rect x="84" y="212" width="1" height="15" fill="rgb(231,209,24)"/><text x="87.00" y="222.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.13%)</title><rect x="84" y="228" width="1" height="15" fill="rgb(217,212,14)"/><text x="87.00" y="238.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:108) (1 samples, 0.13%)</title><rect x="84" y="244" width="1" height="15" fill="rgb(215,59,51)"/><text x="87.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.13%)</title><rect x="87" y="244" width="1" height="15" fill="rgb(253,4,48)"/><text x="90.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.13%)</title><rect x="87" y="260" width="1" height="15" fill="rgb(244,218,31)"/><text x="90.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.13%)</title><rect x="87" y="276" width="1" height="15" fill="rgb(251,187,39)"/><text x="90.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.13%)</title><rect x="87" y="292" width="1" height="15" fill="rgb(209,165,47)"/><text x="90.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.13%)</title><rect x="87" y="308" width="1" height="15" fill="rgb(253,72,45)"/><text x="90.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.13%)</title><rect x="87" y="324" width="1" height="15" fill="rgb(228,3,41)"/><text x="90.00" y="334.50"></text></g><g><title>_aligned_cast_double_to_float (lowlevel_strided_loops.c.src:816) (1 samples, 0.13%)</title><rect x="87" y="340" width="1" height="15" fill="rgb(227,195,43)"/><text x="90.00" y="350.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:981) (1 samples, 0.13%)</title><rect x="88" y="324" width="2" height="15" fill="rgb(211,51,6)"/><text x="91.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.13%)</title><rect x="88" y="340" width="2" height="15" fill="rgb(242,122,42)"/><text x="91.00" y="350.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:982) (1 samples, 0.13%)</title><rect x="90" y="324" width="1" height="15" fill="rgb(210,26,47)"/><text x="93.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.13%)</title><rect x="90" y="340" width="1" height="15" fill="rgb(219,205,7)"/><text x="93.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:795) (1 samples, 0.13%)</title><rect x="91" y="340" width="2" height="15" fill="rgb(224,62,52)"/><text x="94.00" y="350.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h:931) (1 samples, 0.13%)</title><rect x="91" y="356" width="2" height="15" fill="rgb(206,70,17)"/><text x="94.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.52%)</title><rect x="88" y="260" width="6" height="15" fill="rgb(245,39,36)"/><text x="91.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (4 samples, 0.52%)</title><rect x="88" y="276" width="6" height="15" fill="rgb(236,87,47)"/><text x="91.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (4 samples, 0.52%)</title><rect x="88" y="292" width="6" height="15" fill="rgb(205,57,36)"/><text x="91.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (4 samples, 0.52%)</title><rect x="88" y="308" width="6" height="15" fill="rgb(254,222,54)"/><text x="91.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:985) (2 samples, 0.26%)</title><rect x="91" y="324" width="3" height="15" fill="rgb(244,110,4)"/><text x="94.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:803) (1 samples, 0.13%)</title><rect x="93" y="340" width="1" height="15" fill="rgb(215,70,41)"/><text x="96.00" y="350.50"></text></g><g><title>_mm_storeu_si128 (emmintrin.h:702) (1 samples, 0.13%)</title><rect x="93" y="356" width="1" height="15" fill="rgb(250,61,12)"/><text x="96.00" y="366.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (9 samples, 1.18%)</title><rect x="82" y="196" width="14" height="15" fill="rgb(206,180,47)"/><text x="85.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (7 samples, 0.92%)</title><rect x="85" y="212" width="11" height="15" fill="rgb(232,206,10)"/><text x="88.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.79%)</title><rect x="87" y="228" width="9" height="15" fill="rgb(227,68,41)"/><text x="90.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.65%)</title><rect x="88" y="244" width="8" height="15" fill="rgb(238,163,35)"/><text x="91.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.13%)</title><rect x="94" y="260" width="2" height="15" fill="rgb(237,35,16)"/><text x="97.00" y="270.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c:1982) (1 samples, 0.13%)</title><rect x="96" y="260" width="2" height="15" fill="rgb(211,192,44)"/><text x="99.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (2 samples, 0.26%)</title><rect x="96" y="228" width="3" height="15" fill="rgb(254,119,25)"/><text x="99.00" y="238.50"></text></g><g><title>count_boolean_trues (item_selection.c:2061) (2 samples, 0.26%)</title><rect x="96" y="244" width="3" height="15" fill="rgb(232,94,20)"/><text x="99.00" y="254.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c:2006) (1 samples, 0.13%)</title><rect x="98" y="260" width="1" height="15" fill="rgb(242,149,18)"/><text x="101.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1246) (1 samples, 0.13%)</title><rect x="99" y="228" width="2" height="15" fill="rgb(240,89,21)"/><text x="102.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.13%)</title><rect x="99" y="244" width="2" height="15" fill="rgb(209,58,45)"/><text x="102.00" y="254.50"></text></g><g><title>npy_memchr (common.h:262) (13 samples, 1.70%)</title><rect x="101" y="244" width="20" height="15" fill="rgb(227,133,31)"/><text x="104.00" y="254.50"></text></g><g><title>npy_memchr (common.h:263) (3 samples, 0.39%)</title><rect x="121" y="244" width="4" height="15" fill="rgb(217,9,3)"/><text x="124.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1287) (18 samples, 2.36%)</title><rect x="101" y="228" width="27" height="15" fill="rgb(206,9,12)"/><text x="104.00" y="238.50">a..</text></g><g><title>npy_memchr (common.h:264) (2 samples, 0.26%)</title><rect x="125" y="244" width="3" height="15" fill="rgb(216,226,18)"/><text x="128.00" y="254.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (22 samples, 2.88%)</title><rect x="96" y="196" width="34" height="15" fill="rgb(236,217,22)"/><text x="99.00" y="206.50">bi..</text></g><g><title>array_assign_subscript (mapping.c:1859) (22 samples, 2.88%)</title><rect x="96" y="212" width="34" height="15" fill="rgb(218,64,14)"/><text x="99.00" y="222.50">ar..</text></g><g><title>array_assign_boolean_subscript (mapping.c:1289) (1 samples, 0.13%)</title><rect x="128" y="228" width="2" height="15" fill="rgb(228,92,6)"/><text x="131.00" y="238.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.13%)</title><rect x="130" y="212" width="2" height="15" fill="rgb(229,217,48)"/><text x="133.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1881) (1 samples, 0.13%)</title><rect x="130" y="228" width="2" height="15" fill="rgb(215,211,40)"/><text x="133.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1240) (1 samples, 0.13%)</title><rect x="132" y="228" width="1" height="15" fill="rgb(215,153,54)"/><text x="135.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.13%)</title><rect x="132" y="244" width="1" height="15" fill="rgb(219,158,10)"/><text x="135.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.13%)</title><rect x="132" y="260" width="1" height="15" fill="rgb(213,65,29)"/><text x="135.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.13%)</title><rect x="132" y="276" width="1" height="15" fill="rgb(220,225,9)"/><text x="135.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.13%)</title><rect x="132" y="292" width="1" height="15" fill="rgb(218,69,25)"/><text x="135.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.13%)</title><rect x="132" y="308" width="1" height="15" fill="rgb(224,153,7)"/><text x="135.00" y="318.50"></text></g><g><title>npy_memchr (common.h:274) (2 samples, 0.26%)</title><rect x="133" y="244" width="3" height="15" fill="rgb(247,3,21)"/><text x="136.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1282) (5 samples, 0.65%)</title><rect x="133" y="228" width="8" height="15" fill="rgb(239,24,8)"/><text x="136.00" y="238.50"></text></g><g><title>npy_memchr (common.h:277) (3 samples, 0.39%)</title><rect x="136" y="244" width="5" height="15" fill="rgb(236,65,23)"/><text x="139.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1287) (3 samples, 0.39%)</title><rect x="141" y="228" width="4" height="15" fill="rgb(238,118,0)"/><text x="144.00" y="238.50"></text></g><g><title>npy_memchr (common.h:262) (3 samples, 0.39%)</title><rect x="141" y="244" width="4" height="15" fill="rgb(249,108,52)"/><text x="144.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1289) (1 samples, 0.13%)</title><rect x="145" y="228" width="2" height="15" fill="rgb(211,71,30)"/><text x="148.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (83 samples, 10.86%)</title><rect x="20" y="164" width="129" height="15" fill="rgb(246,40,50)"/><text x="23.00" y="174.50">predict_log_prob..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (67 samples, 8.77%)</title><rect x="45" y="180" width="104" height="15" fill="rgb(216,47,38)"/><text x="48.00" y="190.50">_check_X (sk..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1876) (12 samples, 1.57%)</title><rect x="130" y="196" width="19" height="15" fill="rgb(251,9,3)"/><text x="133.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (11 samples, 1.44%)</title><rect x="132" y="212" width="17" height="15" fill="rgb(219,96,43)"/><text x="135.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1291) (1 samples, 0.13%)</title><rect x="147" y="228" width="2" height="15" fill="rgb(226,158,24)"/><text x="150.00" y="238.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.13%)</title><rect x="147" y="244" width="2" height="15" fill="rgb(217,190,11)"/><text x="150.00" y="254.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1011) (1 samples, 0.13%)</title><rect x="150" y="180" width="2" height="15" fill="rgb(244,29,4)"/><text x="153.00" y="190.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1014) (2 samples, 0.26%)</title><rect x="152" y="180" width="3" height="15" fill="rgb(254,58,48)"/><text x="155.00" y="190.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.13%)</title><rect x="156" y="196" width="2" height="15" fill="rgb(246,40,3)"/><text x="159.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.13%)</title><rect x="156" y="212" width="2" height="15" fill="rgb(252,111,0)"/><text x="159.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.13%)</title><rect x="156" y="228" width="2" height="15" fill="rgb(211,213,31)"/><text x="159.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.13%)</title><rect x="156" y="244" width="2" height="15" fill="rgb(215,108,3)"/><text x="159.00" y="254.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.13%)</title><rect x="156" y="260" width="2" height="15" fill="rgb(242,8,19)"/><text x="159.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.13%)</title><rect x="156" y="276" width="2" height="15" fill="rgb(206,105,15)"/><text x="159.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:241) (1 samples, 0.13%)</title><rect x="156" y="292" width="2" height="15" fill="rgb(220,75,51)"/><text x="159.00" y="302.50"></text></g><g><title>sse2_binary_scalar1_subtract_DOUBLE (simd.inc.src:699) (1 samples, 0.13%)</title><rect x="156" y="308" width="2" height="15" fill="rgb(217,223,10)"/><text x="159.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.13%)</title><rect x="156" y="324" width="2" height="15" fill="rgb(207,4,28)"/><text x="159.00" y="334.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.13%)</title><rect x="158" y="276" width="1" height="15" fill="rgb(225,152,12)"/><text x="161.00" y="286.50"></text></g><g><title>0x7f0ade6e6c18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="158" y="292" width="1" height="15" fill="rgb(241,16,48)"/><text x="161.00" y="302.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (4 samples, 0.52%)</title><rect x="155" y="180" width="6" height="15" fill="rgb(213,108,23)"/><text x="158.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.26%)</title><rect x="158" y="196" width="3" height="15" fill="rgb(211,134,2)"/><text x="161.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.26%)</title><rect x="158" y="212" width="3" height="15" fill="rgb(239,128,10)"/><text x="161.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.26%)</title><rect x="158" y="228" width="3" height="15" fill="rgb(214,40,13)"/><text x="161.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.26%)</title><rect x="158" y="244" width="3" height="15" fill="rgb(247,106,37)"/><text x="161.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (2 samples, 0.26%)</title><rect x="158" y="260" width="3" height="15" fill="rgb(245,179,40)"/><text x="161.00" y="270.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.13%)</title><rect x="159" y="276" width="2" height="15" fill="rgb(211,229,15)"/><text x="162.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.13%)</title><rect x="161" y="228" width="1" height="15" fill="rgb(234,15,35)"/><text x="164.00" y="238.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.26%)</title><rect x="161" y="196" width="3" height="15" fill="rgb(221,70,14)"/><text x="164.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.26%)</title><rect x="161" y="212" width="3" height="15" fill="rgb(222,177,24)"/><text x="164.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.13%)</title><rect x="162" y="228" width="2" height="15" fill="rgb(239,170,25)"/><text x="165.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.13%)</title><rect x="162" y="244" width="2" height="15" fill="rgb(225,19,6)"/><text x="165.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.13%)</title><rect x="162" y="260" width="2" height="15" fill="rgb(242,59,51)"/><text x="165.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.13%)</title><rect x="162" y="276" width="2" height="15" fill="rgb(239,181,5)"/><text x="165.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.13%)</title><rect x="162" y="292" width="2" height="15" fill="rgb(243,137,9)"/><text x="165.00" y="302.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (2 samples, 0.26%)</title><rect x="164" y="196" width="3" height="15" fill="rgb(218,37,30)"/><text x="167.00" y="206.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.44%)</title><rect x="167" y="212" width="17" height="15" fill="rgb(213,90,15)"/><text x="170.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (10 samples, 1.31%)</title><rect x="184" y="244" width="15" height="15" fill="rgb(242,140,33)"/><text x="187.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (10 samples, 1.31%)</title><rect x="184" y="260" width="15" height="15" fill="rgb(252,133,40)"/><text x="187.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (10 samples, 1.31%)</title><rect x="184" y="276" width="15" height="15" fill="rgb(239,4,52)"/><text x="187.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (10 samples, 1.31%)</title><rect x="184" y="292" width="15" height="15" fill="rgb(234,33,46)"/><text x="187.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (10 samples, 1.31%)</title><rect x="184" y="308" width="15" height="15" fill="rgb(210,18,1)"/><text x="187.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (10 samples, 1.31%)</title><rect x="184" y="324" width="15" height="15" fill="rgb(227,0,20)"/><text x="187.00" y="334.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (26 samples, 3.40%)</title><rect x="167" y="196" width="40" height="15" fill="rgb(229,200,9)"/><text x="170.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 1.96%)</title><rect x="184" y="212" width="23" height="15" fill="rgb(229,79,11)"/><text x="187.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (15 samples, 1.96%)</title><rect x="184" y="228" width="23" height="15" fill="rgb(231,63,30)"/><text x="187.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (5 samples, 0.65%)</title><rect x="199" y="244" width="8" height="15" fill="rgb(246,66,41)"/><text x="202.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (5 samples, 0.65%)</title><rect x="199" y="260" width="8" height="15" fill="rgb(231,168,15)"/><text x="202.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.65%)</title><rect x="199" y="276" width="8" height="15" fill="rgb(241,126,30)"/><text x="202.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.65%)</title><rect x="199" y="292" width="8" height="15" fill="rgb(223,102,5)"/><text x="202.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.65%)</title><rect x="199" y="308" width="8" height="15" fill="rgb(241,130,0)"/><text x="202.00" y="318.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (31 samples, 4.06%)</title><rect x="161" y="180" width="48" height="15" fill="rgb(209,120,0)"/><text x="164.00" y="190.50">_joi..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.13%)</title><rect x="207" y="196" width="2" height="15" fill="rgb(249,138,37)"/><text x="210.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.13%)</title><rect x="207" y="212" width="2" height="15" fill="rgb(212,200,18)"/><text x="210.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.13%)</title><rect x="209" y="196" width="1" height="15" fill="rgb(226,34,47)"/><text x="212.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.13%)</title><rect x="209" y="212" width="1" height="15" fill="rgb(209,224,33)"/><text x="212.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.13%)</title><rect x="209" y="228" width="1" height="15" fill="rgb(214,111,24)"/><text x="212.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.13%)</title><rect x="209" y="244" width="1" height="15" fill="rgb(228,33,37)"/><text x="212.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.13%)</title><rect x="209" y="260" width="1" height="15" fill="rgb(247,81,49)"/><text x="212.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.13%)</title><rect x="212" y="260" width="1" height="15" fill="rgb(230,203,38)"/><text x="215.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.39%)</title><rect x="212" y="244" width="4" height="15" fill="rgb(245,85,32)"/><text x="215.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.26%)</title><rect x="213" y="260" width="3" height="15" fill="rgb(250,51,19)"/><text x="216.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.26%)</title><rect x="213" y="276" width="3" height="15" fill="rgb(218,25,2)"/><text x="216.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.26%)</title><rect x="213" y="292" width="3" height="15" fill="rgb(242,123,43)"/><text x="216.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.26%)</title><rect x="213" y="308" width="3" height="15" fill="rgb(236,167,15)"/><text x="216.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.26%)</title><rect x="213" y="324" width="3" height="15" fill="rgb(232,59,3)"/><text x="216.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.13%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(231,91,3)"/><text x="219.00" y="270.50"></text></g><g><title>0x7f0ade52a757 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(240,212,14)"/><text x="219.00" y="286.50"></text></g><g><title>array_sum (methods.c:2215) (6 samples, 0.79%)</title><rect x="210" y="196" width="10" height="15" fill="rgb(206,21,39)"/><text x="213.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (6 samples, 0.79%)</title><rect x="210" y="212" width="10" height="15" fill="rgb(238,221,9)"/><text x="213.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 0.65%)</title><rect x="212" y="228" width="8" height="15" fill="rgb(247,35,9)"/><text x="215.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.26%)</title><rect x="216" y="244" width="4" height="15" fill="rgb(222,111,11)"/><text x="219.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.13%)</title><rect x="218" y="260" width="2" height="15" fill="rgb(215,81,48)"/><text x="221.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.13%)</title><rect x="218" y="276" width="2" height="15" fill="rgb(228,186,37)"/><text x="221.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.13%)</title><rect x="218" y="292" width="2" height="15" fill="rgb(206,84,15)"/><text x="221.00" y="302.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.13%)</title><rect x="218" y="308" width="2" height="15" fill="rgb(237,66,39)"/><text x="221.00" y="318.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (47 samples, 6.15%)</title><rect x="149" y="164" width="72" height="15" fill="rgb(224,50,37)"/><text x="152.00" y="174.50">predict_..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (8 samples, 1.05%)</title><rect x="209" y="180" width="12" height="15" fill="rgb(248,143,34)"/><text x="212.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.13%)</title><rect x="220" y="196" width="1" height="15" fill="rgb(227,64,52)"/><text x="223.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.13%)</title><rect x="220" y="212" width="1" height="15" fill="rgb(235,129,49)"/><text x="223.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.13%)</title><rect x="220" y="228" width="1" height="15" fill="rgb(222,61,50)"/><text x="223.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.13%)</title><rect x="220" y="244" width="1" height="15" fill="rgb(213,207,10)"/><text x="223.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.13%)</title><rect x="220" y="260" width="1" height="15" fill="rgb(244,217,17)"/><text x="223.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.13%)</title><rect x="224" y="244" width="2" height="15" fill="rgb(224,195,22)"/><text x="227.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.13%)</title><rect x="224" y="260" width="2" height="15" fill="rgb(241,14,25)"/><text x="227.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.13%)</title><rect x="226" y="244" width="1" height="15" fill="rgb(225,136,13)"/><text x="229.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.13%)</title><rect x="227" y="260" width="2" height="15" fill="rgb(230,171,9)"/><text x="230.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.13%)</title><rect x="227" y="276" width="2" height="15" fill="rgb(232,37,31)"/><text x="230.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:59) (1 samples, 0.13%)</title><rect x="227" y="292" width="2" height="15" fill="rgb(212,98,37)"/><text x="230.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.13%)</title><rect x="229" y="356" width="1" height="15" fill="rgb(239,24,26)"/><text x="232.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (1 samples, 0.13%)</title><rect x="229" y="372" width="1" height="15" fill="rgb(207,222,46)"/><text x="232.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (2 samples, 0.26%)</title><rect x="229" y="308" width="3" height="15" fill="rgb(252,197,47)"/><text x="232.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (2 samples, 0.26%)</title><rect x="229" y="324" width="3" height="15" fill="rgb(228,0,39)"/><text x="232.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.26%)</title><rect x="229" y="340" width="3" height="15" fill="rgb(251,195,15)"/><text x="232.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.13%)</title><rect x="230" y="356" width="2" height="15" fill="rgb(218,143,49)"/><text x="233.00" y="366.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:38) (1 samples, 0.13%)</title><rect x="230" y="372" width="2" height="15" fill="rgb(225,84,49)"/><text x="233.00" y="382.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.13%)</title><rect x="230" y="388" width="2" height="15" fill="rgb(244,99,10)"/><text x="233.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.13%)</title><rect x="232" y="308" width="1" height="15" fill="rgb(218,42,29)"/><text x="235.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.13%)</title><rect x="232" y="324" width="1" height="15" fill="rgb(242,21,6)"/><text x="235.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1629) (1 samples, 0.13%)</title><rect x="232" y="340" width="1" height="15" fill="rgb(247,183,53)"/><text x="235.00" y="350.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1856) (1 samples, 0.13%)</title><rect x="233" y="340" width="2" height="15" fill="rgb(209,106,19)"/><text x="236.00" y="350.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1115) (1 samples, 0.13%)</title><rect x="237" y="372" width="1" height="15" fill="rgb(219,223,24)"/><text x="240.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (3 samples, 0.39%)</title><rect x="240" y="404" width="4" height="15" fill="rgb(231,153,31)"/><text x="243.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (3 samples, 0.39%)</title><rect x="240" y="420" width="4" height="15" fill="rgb(247,29,13)"/><text x="243.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:806) (1 samples, 0.13%)</title><rect x="244" y="404" width="2" height="15" fill="rgb(239,226,41)"/><text x="247.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (5 samples, 0.65%)</title><rect x="240" y="388" width="7" height="15" fill="rgb(252,214,45)"/><text x="243.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:807) (1 samples, 0.13%)</title><rect x="246" y="404" width="1" height="15" fill="rgb(213,91,44)"/><text x="249.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (9 samples, 1.18%)</title><rect x="235" y="340" width="14" height="15" fill="rgb(240,223,10)"/><text x="238.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (9 samples, 1.18%)</title><rect x="235" y="356" width="14" height="15" fill="rgb(227,88,44)"/><text x="238.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (7 samples, 0.92%)</title><rect x="238" y="372" width="11" height="15" fill="rgb(248,67,28)"/><text x="241.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:819) (1 samples, 0.13%)</title><rect x="247" y="388" width="2" height="15" fill="rgb(249,202,0)"/><text x="250.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1875) (1 samples, 0.13%)</title><rect x="249" y="340" width="1" height="15" fill="rgb(229,47,38)"/><text x="252.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.13%)</title><rect x="252" y="356" width="2" height="15" fill="rgb(236,163,47)"/><text x="255.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.13%)</title><rect x="252" y="372" width="2" height="15" fill="rgb(247,35,53)"/><text x="255.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.13%)</title><rect x="252" y="388" width="2" height="15" fill="rgb(216,89,41)"/><text x="255.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (15 samples, 1.96%)</title><rect x="233" y="308" width="24" height="15" fill="rgb(223,52,2)"/><text x="236.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 1.96%)</title><rect x="233" y="324" width="24" height="15" fill="rgb(250,93,16)"/><text x="236.00" y="334.50">r..</text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (4 samples, 0.52%)</title><rect x="250" y="340" width="7" height="15" fill="rgb(230,18,43)"/><text x="253.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:819) (2 samples, 0.26%)</title><rect x="254" y="356" width="3" height="15" fill="rgb(247,121,54)"/><text x="257.00" y="366.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (23 samples, 3.01%)</title><rect x="223" y="180" width="35" height="15" fill="rgb(228,36,54)"/><text x="226.00" y="190.50">lo..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (23 samples, 3.01%)</title><rect x="223" y="196" width="35" height="15" fill="rgb(213,204,17)"/><text x="226.00" y="206.50">am..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 3.01%)</title><rect x="223" y="212" width="35" height="15" fill="rgb(223,159,33)"/><text x="226.00" y="222.50">ar..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (23 samples, 3.01%)</title><rect x="223" y="228" width="35" height="15" fill="rgb(212,103,6)"/><text x="226.00" y="238.50">am..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (20 samples, 2.62%)</title><rect x="227" y="244" width="31" height="15" fill="rgb(251,10,28)"/><text x="230.00" y="254.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (19 samples, 2.49%)</title><rect x="229" y="260" width="29" height="15" fill="rgb(213,7,4)"/><text x="232.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (19 samples, 2.49%)</title><rect x="229" y="276" width="29" height="15" fill="rgb(234,183,6)"/><text x="232.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (19 samples, 2.49%)</title><rect x="229" y="292" width="29" height="15" fill="rgb(228,38,4)"/><text x="232.00" y="302.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.13%)</title><rect x="257" y="308" width="1" height="15" fill="rgb(225,186,9)"/><text x="260.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.13%)</title><rect x="257" y="324" width="1" height="15" fill="rgb(233,37,53)"/><text x="260.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.13%)</title><rect x="257" y="340" width="1" height="15" fill="rgb(227,51,38)"/><text x="260.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.13%)</title><rect x="257" y="356" width="1" height="15" fill="rgb(233,99,12)"/><text x="260.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.13%)</title><rect x="258" y="196" width="2" height="15" fill="rgb(208,28,31)"/><text x="261.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.13%)</title><rect x="258" y="212" width="2" height="15" fill="rgb(218,1,21)"/><text x="261.00" y="222.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.13%)</title><rect x="258" y="228" width="2" height="15" fill="rgb(222,85,24)"/><text x="261.00" y="238.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.13%)</title><rect x="258" y="244" width="2" height="15" fill="rgb(211,186,11)"/><text x="261.00" y="254.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.13%)</title><rect x="258" y="260" width="2" height="15" fill="rgb(218,138,26)"/><text x="261.00" y="270.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (2 samples, 0.26%)</title><rect x="258" y="180" width="3" height="15" fill="rgb(236,180,29)"/><text x="261.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.13%)</title><rect x="260" y="196" width="1" height="15" fill="rgb(227,215,32)"/><text x="263.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3155) (1 samples, 0.13%)</title><rect x="260" y="212" width="1" height="15" fill="rgb(223,140,38)"/><text x="263.00" y="222.50"></text></g><g><title>0x7f0ade535120 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="260" y="228" width="1" height="15" fill="rgb(228,89,6)"/><text x="263.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.13%)</title><rect x="263" y="212" width="1" height="15" fill="rgb(218,125,18)"/><text x="266.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.13%)</title><rect x="263" y="228" width="1" height="15" fill="rgb(211,29,27)"/><text x="266.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.13%)</title><rect x="263" y="244" width="1" height="15" fill="rgb(228,175,18)"/><text x="266.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.13%)</title><rect x="263" y="260" width="1" height="15" fill="rgb(235,136,39)"/><text x="266.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.52%)</title><rect x="264" y="260" width="7" height="15" fill="rgb(225,206,40)"/><text x="267.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.52%)</title><rect x="264" y="276" width="7" height="15" fill="rgb(238,105,22)"/><text x="267.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.52%)</title><rect x="264" y="292" width="7" height="15" fill="rgb(209,169,24)"/><text x="267.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.39%)</title><rect x="266" y="308" width="5" height="15" fill="rgb(220,151,47)"/><text x="269.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (3 samples, 0.39%)</title><rect x="266" y="324" width="5" height="15" fill="rgb(224,52,35)"/><text x="269.00" y="334.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:603) (1 samples, 0.13%)</title><rect x="271" y="308" width="1" height="15" fill="rgb(209,38,15)"/><text x="274.00" y="318.50"></text></g><g><title>_mm_sub_pd (emmintrin.h:241) (1 samples, 0.13%)</title><rect x="271" y="324" width="1" height="15" fill="rgb(205,181,43)"/><text x="274.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (7 samples, 0.92%)</title><rect x="263" y="196" width="11" height="15" fill="rgb(231,61,9)"/><text x="266.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.79%)</title><rect x="264" y="212" width="10" height="15" fill="rgb(243,174,5)"/><text x="267.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.79%)</title><rect x="264" y="228" width="10" height="15" fill="rgb(237,26,3)"/><text x="267.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.79%)</title><rect x="264" y="244" width="10" height="15" fill="rgb(211,206,21)"/><text x="267.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.26%)</title><rect x="271" y="260" width="3" height="15" fill="rgb(214,160,15)"/><text x="274.00" y="270.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (2 samples, 0.26%)</title><rect x="271" y="276" width="3" height="15" fill="rgb(253,96,48)"/><text x="274.00" y="286.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (2 samples, 0.26%)</title><rect x="271" y="292" width="3" height="15" fill="rgb(253,45,36)"/><text x="274.00" y="302.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.13%)</title><rect x="272" y="308" width="2" height="15" fill="rgb(227,206,15)"/><text x="275.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.13%)</title><rect x="272" y="324" width="2" height="15" fill="rgb(217,98,53)"/><text x="275.00" y="334.50"></text></g><g><title>0x7f0add735b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="274" y="276" width="1" height="15" fill="rgb(216,187,46)"/><text x="277.00" y="286.50"></text></g><g><title>0x7f0ade6e6c0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="281" y="292" width="2" height="15" fill="rgb(216,18,37)"/><text x="284.00" y="302.50"></text></g><g><title>0x7f0ade6e6c52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="283" y="292" width="1" height="15" fill="rgb(235,164,36)"/><text x="286.00" y="302.50"></text></g><g><title>0x7f0ade6e6c6e (libm-2.29.so) (3 samples, 0.39%)</title><rect x="284" y="292" width="5" height="15" fill="rgb(249,37,34)"/><text x="287.00" y="302.50"></text></g><g><title>0x7f0ade6e6c7b (libm-2.29.so) (1 samples, 0.13%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(241,150,32)"/><text x="292.00" y="302.50"></text></g><g><title>exp (libm-2.29.so) (11 samples, 1.44%)</title><rect x="275" y="276" width="17" height="15" fill="rgb(234,103,48)"/><text x="278.00" y="286.50"></text></g><g><title>0x7f0ade6e6d70 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="291" y="292" width="1" height="15" fill="rgb(253,224,18)"/><text x="294.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (21 samples, 2.75%)</title><rect x="261" y="180" width="33" height="15" fill="rgb(249,203,29)"/><text x="264.00" y="190.50">lo..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 1.70%)</title><rect x="274" y="196" width="20" height="15" fill="rgb(207,4,38)"/><text x="277.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 1.70%)</title><rect x="274" y="212" width="20" height="15" fill="rgb(248,24,43)"/><text x="277.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (13 samples, 1.70%)</title><rect x="274" y="228" width="20" height="15" fill="rgb(242,119,42)"/><text x="277.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (13 samples, 1.70%)</title><rect x="274" y="244" width="20" height="15" fill="rgb(234,227,52)"/><text x="277.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (13 samples, 1.70%)</title><rect x="274" y="260" width="20" height="15" fill="rgb(238,25,37)"/><text x="277.00" y="270.50"></text></g><g><title>npy_exp (npy_math_internal.h.src:469) (1 samples, 0.13%)</title><rect x="292" y="276" width="2" height="15" fill="rgb(254,190,2)"/><text x="295.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (2 samples, 0.26%)</title><rect x="294" y="180" width="3" height="15" fill="rgb(205,32,52)"/><text x="297.00" y="190.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.13%)</title><rect x="295" y="196" width="2" height="15" fill="rgb(227,93,37)"/><text x="298.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.13%)</title><rect x="295" y="212" width="2" height="15" fill="rgb(229,73,18)"/><text x="298.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (1 samples, 0.13%)</title><rect x="295" y="228" width="2" height="15" fill="rgb(242,175,25)"/><text x="298.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (1 samples, 0.13%)</title><rect x="295" y="244" width="2" height="15" fill="rgb(239,132,16)"/><text x="298.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c:261) (1 samples, 0.13%)</title><rect x="295" y="260" width="2" height="15" fill="rgb(233,57,22)"/><text x="298.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.13%)</title><rect x="297" y="212" width="1" height="15" fill="rgb(230,117,38)"/><text x="300.00" y="222.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.13%)</title><rect x="297" y="228" width="1" height="15" fill="rgb(226,210,19)"/><text x="300.00" y="238.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.13%)</title><rect x="297" y="244" width="1" height="15" fill="rgb(232,156,40)"/><text x="300.00" y="254.50"></text></g><g><title>0x7f0ade5f2130 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="298" y="244" width="2" height="15" fill="rgb(234,80,6)"/><text x="301.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.13%)</title><rect x="300" y="292" width="1" height="15" fill="rgb(218,117,25)"/><text x="303.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.13%)</title><rect x="300" y="308" width="1" height="15" fill="rgb(215,53,47)"/><text x="303.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c:208) (1 samples, 0.13%)</title><rect x="300" y="324" width="1" height="15" fill="rgb(251,138,15)"/><text x="303.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.13%)</title><rect x="301" y="292" width="2" height="15" fill="rgb(251,180,6)"/><text x="304.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.13%)</title><rect x="301" y="308" width="2" height="15" fill="rgb(207,106,31)"/><text x="304.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:488) (1 samples, 0.13%)</title><rect x="301" y="324" width="2" height="15" fill="rgb(236,208,12)"/><text x="304.00" y="334.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.13%)</title><rect x="301" y="340" width="2" height="15" fill="rgb(247,130,13)"/><text x="304.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.13%)</title><rect x="303" y="308" width="2" height="15" fill="rgb(240,200,15)"/><text x="306.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.13%)</title><rect x="303" y="324" width="2" height="15" fill="rgb(236,154,37)"/><text x="306.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.13%)</title><rect x="303" y="340" width="2" height="15" fill="rgb(231,182,8)"/><text x="306.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.13%)</title><rect x="303" y="356" width="2" height="15" fill="rgb(249,223,40)"/><text x="306.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.13%)</title><rect x="303" y="372" width="2" height="15" fill="rgb(225,13,47)"/><text x="306.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.13%)</title><rect x="305" y="308" width="1" height="15" fill="rgb(246,47,27)"/><text x="308.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.13%)</title><rect x="305" y="324" width="1" height="15" fill="rgb(245,5,16)"/><text x="308.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.13%)</title><rect x="305" y="340" width="1" height="15" fill="rgb(249,101,28)"/><text x="308.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1064) (1 samples, 0.13%)</title><rect x="305" y="356" width="1" height="15" fill="rgb(206,80,29)"/><text x="308.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.13%)</title><rect x="306" y="324" width="2" height="15" fill="rgb(215,36,6)"/><text x="309.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.13%)</title><rect x="308" y="340" width="1" height="15" fill="rgb(229,114,40)"/><text x="311.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.13%)</title><rect x="309" y="340" width="2" height="15" fill="rgb(246,129,27)"/><text x="312.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.26%)</title><rect x="311" y="340" width="3" height="15" fill="rgb(216,208,6)"/><text x="314.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.79%)</title><rect x="306" y="308" width="9" height="15" fill="rgb(215,24,36)"/><text x="309.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.65%)</title><rect x="308" y="324" width="7" height="15" fill="rgb(231,41,5)"/><text x="311.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.13%)</title><rect x="314" y="340" width="1" height="15" fill="rgb(236,47,30)"/><text x="317.00" y="350.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (13 samples, 1.70%)</title><rect x="297" y="180" width="20" height="15" fill="rgb(248,85,7)"/><text x="300.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (13 samples, 1.70%)</title><rect x="297" y="196" width="20" height="15" fill="rgb(246,160,25)"/><text x="300.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.57%)</title><rect x="298" y="212" width="19" height="15" fill="rgb(219,45,37)"/><text x="301.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 1.57%)</title><rect x="298" y="228" width="19" height="15" fill="rgb(252,95,46)"/><text x="301.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (11 samples, 1.44%)</title><rect x="300" y="244" width="17" height="15" fill="rgb(254,203,3)"/><text x="303.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 1.44%)</title><rect x="300" y="260" width="17" height="15" fill="rgb(227,172,14)"/><text x="303.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.44%)</title><rect x="300" y="276" width="17" height="15" fill="rgb(231,99,17)"/><text x="303.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.18%)</title><rect x="303" y="292" width="14" height="15" fill="rgb(242,150,52)"/><text x="306.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.13%)</title><rect x="315" y="308" width="2" height="15" fill="rgb(246,191,40)"/><text x="318.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.13%)</title><rect x="315" y="324" width="2" height="15" fill="rgb(207,148,7)"/><text x="318.00" y="334.50"></text></g><g><title>0x7f0ade514ca0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="315" y="340" width="2" height="15" fill="rgb(211,156,48)"/><text x="318.00" y="350.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.13%)</title><rect x="317" y="196" width="1" height="15" fill="rgb(245,153,14)"/><text x="320.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.13%)</title><rect x="317" y="212" width="1" height="15" fill="rgb(231,221,17)"/><text x="320.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:180) (1 samples, 0.13%)</title><rect x="317" y="228" width="1" height="15" fill="rgb(227,44,11)"/><text x="320.00" y="238.50"></text></g><g><title>0x7f0add7380c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="318" y="276" width="2" height="15" fill="rgb(228,7,19)"/><text x="321.00" y="286.50"></text></g><g><title>0x7f0ade6e6ef6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="320" y="276" width="1" height="15" fill="rgb(227,38,6)"/><text x="323.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (4 samples, 0.52%)</title><rect x="317" y="180" width="6" height="15" fill="rgb(246,116,22)"/><text x="320.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.39%)</title><rect x="318" y="196" width="5" height="15" fill="rgb(214,107,22)"/><text x="321.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.39%)</title><rect x="318" y="212" width="5" height="15" fill="rgb(229,137,41)"/><text x="321.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.39%)</title><rect x="318" y="228" width="5" height="15" fill="rgb(222,82,17)"/><text x="321.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (3 samples, 0.39%)</title><rect x="318" y="244" width="5" height="15" fill="rgb(233,86,33)"/><text x="321.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (3 samples, 0.39%)</title><rect x="318" y="260" width="5" height="15" fill="rgb(232,178,53)"/><text x="321.00" y="270.50"></text></g><g><title>0x7f0ade6e6f6b (libm-2.29.so) (1 samples, 0.13%)</title><rect x="321" y="276" width="2" height="15" fill="rgb(232,69,45)"/><text x="324.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (1 samples, 0.13%)</title><rect x="323" y="180" width="2" height="15" fill="rgb(236,64,3)"/><text x="326.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:6) (1 samples, 0.13%)</title><rect x="323" y="196" width="2" height="15" fill="rgb(221,153,33)"/><text x="326.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.13%)</title><rect x="325" y="212" width="1" height="15" fill="rgb(206,54,41)"/><text x="328.00" y="222.50"></text></g><g><title>0x7f0ade52a757 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="325" y="228" width="1" height="15" fill="rgb(233,190,14)"/><text x="328.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (69 samples, 9.03%)</title><rect x="221" y="164" width="107" height="15" fill="rgb(234,122,12)"/><text x="224.00" y="174.50">predict_log_p..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (2 samples, 0.26%)</title><rect x="325" y="180" width="3" height="15" fill="rgb(254,111,3)"/><text x="328.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:241) (2 samples, 0.26%)</title><rect x="325" y="196" width="3" height="15" fill="rgb(233,139,6)"/><text x="328.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.13%)</title><rect x="326" y="212" width="2" height="15" fill="rgb(220,92,9)"/><text x="329.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1476) (1 samples, 0.13%)</title><rect x="326" y="228" width="2" height="15" fill="rgb(217,144,19)"/><text x="329.00" y="238.50"></text></g><g><title>0x7f0add736d20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="326" y="244" width="2" height="15" fill="rgb(251,41,41)"/><text x="329.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c:726) (1 samples, 0.13%)</title><rect x="329" y="180" width="2" height="15" fill="rgb(227,199,38)"/><text x="332.00" y="190.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.13%)</title><rect x="329" y="196" width="2" height="15" fill="rgb(232,26,9)"/><text x="332.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.26%)</title><rect x="331" y="244" width="3" height="15" fill="rgb(227,44,35)"/><text x="334.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (2 samples, 0.26%)</title><rect x="331" y="260" width="3" height="15" fill="rgb(224,14,42)"/><text x="334.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (2 samples, 0.26%)</title><rect x="331" y="276" width="3" height="15" fill="rgb(250,48,16)"/><text x="334.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (2 samples, 0.26%)</title><rect x="331" y="292" width="3" height="15" fill="rgb(250,17,22)"/><text x="334.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.26%)</title><rect x="331" y="308" width="3" height="15" fill="rgb(223,221,4)"/><text x="334.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.39%)</title><rect x="331" y="180" width="4" height="15" fill="rgb(212,177,15)"/><text x="334.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.39%)</title><rect x="331" y="196" width="4" height="15" fill="rgb(250,15,1)"/><text x="334.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.39%)</title><rect x="331" y="212" width="4" height="15" fill="rgb(212,35,44)"/><text x="334.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.39%)</title><rect x="331" y="228" width="4" height="15" fill="rgb(207,64,34)"/><text x="334.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.13%)</title><rect x="334" y="244" width="1" height="15" fill="rgb(237,223,30)"/><text x="337.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:668) (1 samples, 0.13%)</title><rect x="334" y="260" width="1" height="15" fill="rgb(240,97,33)"/><text x="337.00" y="270.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:4) (1 samples, 0.13%)</title><rect x="335" y="180" width="2" height="15" fill="rgb(214,36,38)"/><text x="338.00" y="190.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:121) (2 samples, 0.26%)</title><rect x="337" y="212" width="3" height="15" fill="rgb(206,63,18)"/><text x="340.00" y="222.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (9 samples, 1.18%)</title><rect x="328" y="164" width="14" height="15" fill="rgb(250,56,33)"/><text x="331.00" y="174.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (3 samples, 0.39%)</title><rect x="337" y="180" width="5" height="15" fill="rgb(227,159,13)"/><text x="340.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.39%)</title><rect x="337" y="196" width="5" height="15" fill="rgb(221,5,1)"/><text x="340.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:122) (1 samples, 0.13%)</title><rect x="340" y="212" width="2" height="15" fill="rgb(241,170,24)"/><text x="343.00" y="222.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.13%)</title><rect x="340" y="228" width="2" height="15" fill="rgb(222,155,13)"/><text x="343.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.13%)</title><rect x="342" y="180" width="1" height="15" fill="rgb(219,56,18)"/><text x="345.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.13%)</title><rect x="342" y="196" width="1" height="15" fill="rgb(235,15,46)"/><text x="345.00" y="206.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.13%)</title><rect x="342" y="212" width="1" height="15" fill="rgb(249,51,32)"/><text x="345.00" y="222.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.13%)</title><rect x="342" y="228" width="1" height="15" fill="rgb(251,99,20)"/><text x="345.00" y="238.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.13%)</title><rect x="343" y="228" width="2" height="15" fill="rgb(217,135,20)"/><text x="346.00" y="238.50"></text></g><g><title>0x7f0add735b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="345" y="244" width="1" height="15" fill="rgb(230,109,29)"/><text x="348.00" y="254.50"></text></g><g><title>0x7f0ade6e6be7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="351" y="260" width="1" height="15" fill="rgb(229,165,1)"/><text x="354.00" y="270.50"></text></g><g><title>0x7f0ade6e6c18 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="352" y="260" width="3" height="15" fill="rgb(247,46,14)"/><text x="355.00" y="270.50"></text></g><g><title>0x7f0ade6e6c6e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="355" y="260" width="2" height="15" fill="rgb(219,98,34)"/><text x="358.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (11 samples, 1.44%)</title><rect x="346" y="244" width="17" height="15" fill="rgb(223,164,8)"/><text x="349.00" y="254.50"></text></g><g><title>0x7f0ade6e6c7b (libm-2.29.so) (4 samples, 0.52%)</title><rect x="357" y="260" width="6" height="15" fill="rgb(240,184,52)"/><text x="360.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:38) (229 samples, 29.97%)</title><rect x="11" y="52" width="354" height="15" fill="rgb(208,118,24)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50..</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:37) (229 samples, 29.97%)</title><rect x="11" y="68" width="354" height="15" fill="rgb(224,2,15)"/><text x="14.00" y="78.50">profile_skl (bench_BernoulliNB_default_m_cl_1000..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:29) (229 samples, 29.97%)</title><rect x="11" y="84" width="354" height="15" fill="rgb(244,106,51)"/><text x="14.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_10..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:23) (225 samples, 29.45%)</title><rect x="17" y="100" width="348" height="15" fill="rgb(223,85,54)"/><text x="20.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (225 samples, 29.45%)</title><rect x="17" y="116" width="348" height="15" fill="rgb(236,214,54)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (225 samples, 29.45%)</title><rect x="17" y="132" width="348" height="15" fill="rgb(213,84,15)"/><text x="20.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (224 samples, 29.32%)</title><rect x="19" y="148" width="346" height="15" fill="rgb(208,135,25)"/><text x="22.00" y="158.50">predict_proba (sklearn/naive_bayes.py:115)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 1.96%)</title><rect x="342" y="164" width="23" height="15" fill="rgb(241,3,37)"/><text x="345.00" y="174.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 1.83%)</title><rect x="343" y="180" width="22" height="15" fill="rgb(242,157,44)"/><text x="346.00" y="190.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (14 samples, 1.83%)</title><rect x="343" y="196" width="22" height="15" fill="rgb(217,226,9)"/><text x="346.00" y="206.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (14 samples, 1.83%)</title><rect x="343" y="212" width="22" height="15" fill="rgb(223,178,35)"/><text x="346.00" y="222.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (13 samples, 1.70%)</title><rect x="345" y="228" width="20" height="15" fill="rgb(222,95,42)"/><text x="348.00" y="238.50"></text></g><g><title>npy_exp (npy_math_internal.h.src:469) (1 samples, 0.13%)</title><rect x="363" y="244" width="2" height="15" fill="rgb(233,187,46)"/><text x="366.00" y="254.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:11) (1 samples, 0.13%)</title><rect x="365" y="580" width="1" height="15" fill="rgb(249,98,33)"/><text x="368.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="365" y="596" width="1" height="15" fill="rgb(251,134,44)"/><text x="368.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="365" y="612" width="1" height="15" fill="rgb(229,171,27)"/><text x="368.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="365" y="628" width="1" height="15" fill="rgb(234,65,43)"/><text x="368.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="365" y="644" width="1" height="15" fill="rgb(220,97,39)"/><text x="368.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="365" y="660" width="1" height="15" fill="rgb(249,124,45)"/><text x="368.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="365" y="676" width="1" height="15" fill="rgb(241,38,51)"/><text x="368.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="365" y="692" width="1" height="15" fill="rgb(250,126,40)"/><text x="368.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py:779) (1 samples, 0.13%)</title><rect x="365" y="708" width="1" height="15" fill="rgb(245,49,31)"/><text x="368.00" y="718.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.13%)</title><rect x="366" y="884" width="2" height="15" fill="rgb(221,224,17)"/><text x="369.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2896) (1 samples, 0.13%)</title><rect x="366" y="900" width="2" height="15" fill="rgb(224,8,36)"/><text x="369.00" y="910.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2896) (1 samples, 0.13%)</title><rect x="366" y="916" width="2" height="15" fill="rgb(209,101,49)"/><text x="369.00" y="926.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.26%)</title><rect x="366" y="852" width="3" height="15" fill="rgb(218,218,33)"/><text x="369.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.26%)</title><rect x="366" y="868" width="3" height="15" fill="rgb(207,72,38)"/><text x="369.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.13%)</title><rect x="368" y="884" width="1" height="15" fill="rgb(232,11,18)"/><text x="371.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.13%)</title><rect x="368" y="900" width="1" height="15" fill="rgb(239,47,13)"/><text x="371.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.13%)</title><rect x="368" y="916" width="1" height="15" fill="rgb(229,34,6)"/><text x="371.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.13%)</title><rect x="368" y="932" width="1" height="15" fill="rgb(228,96,13)"/><text x="371.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.13%)</title><rect x="368" y="948" width="1" height="15" fill="rgb(240,196,28)"/><text x="371.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.13%)</title><rect x="368" y="964" width="1" height="15" fill="rgb(234,156,51)"/><text x="371.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.13%)</title><rect x="368" y="980" width="1" height="15" fill="rgb(215,95,39)"/><text x="371.00" y="990.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.13%)</title><rect x="369" y="868" width="2" height="15" fill="rgb(250,28,44)"/><text x="372.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.13%)</title><rect x="369" y="884" width="2" height="15" fill="rgb(216,31,11)"/><text x="372.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.13%)</title><rect x="369" y="900" width="2" height="15" fill="rgb(231,55,30)"/><text x="372.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.13%)</title><rect x="369" y="916" width="2" height="15" fill="rgb(253,46,51)"/><text x="372.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.13%)</title><rect x="369" y="932" width="2" height="15" fill="rgb(211,67,5)"/><text x="372.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.13%)</title><rect x="369" y="948" width="2" height="15" fill="rgb(230,140,14)"/><text x="372.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.13%)</title><rect x="369" y="964" width="2" height="15" fill="rgb(226,204,0)"/><text x="372.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.52%)</title><rect x="366" y="580" width="6" height="15" fill="rgb(248,106,27)"/><text x="369.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.52%)</title><rect x="366" y="596" width="6" height="15" fill="rgb(231,210,22)"/><text x="369.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.52%)</title><rect x="366" y="612" width="6" height="15" fill="rgb(231,3,47)"/><text x="369.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.52%)</title><rect x="366" y="628" width="6" height="15" fill="rgb(240,106,27)"/><text x="369.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.52%)</title><rect x="366" y="644" width="6" height="15" fill="rgb(235,32,23)"/><text x="369.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.52%)</title><rect x="366" y="660" width="6" height="15" fill="rgb(214,114,50)"/><text x="369.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.52%)</title><rect x="366" y="676" width="6" height="15" fill="rgb(208,43,27)"/><text x="369.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.52%)</title><rect x="366" y="692" width="6" height="15" fill="rgb(247,145,4)"/><text x="369.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.52%)</title><rect x="366" y="708" width="6" height="15" fill="rgb(241,89,50)"/><text x="369.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.52%)</title><rect x="366" y="724" width="6" height="15" fill="rgb(213,137,52)"/><text x="369.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.52%)</title><rect x="366" y="740" width="6" height="15" fill="rgb(218,164,10)"/><text x="369.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.52%)</title><rect x="366" y="756" width="6" height="15" fill="rgb(210,82,33)"/><text x="369.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.52%)</title><rect x="366" y="772" width="6" height="15" fill="rgb(235,34,29)"/><text x="369.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.52%)</title><rect x="366" y="788" width="6" height="15" fill="rgb(206,168,39)"/><text x="369.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.52%)</title><rect x="366" y="804" width="6" height="15" fill="rgb(230,176,45)"/><text x="369.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.52%)</title><rect x="366" y="820" width="6" height="15" fill="rgb(211,58,49)"/><text x="369.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.52%)</title><rect x="366" y="836" width="6" height="15" fill="rgb(236,166,12)"/><text x="369.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.26%)</title><rect x="369" y="852" width="3" height="15" fill="rgb(245,56,25)"/><text x="372.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.13%)</title><rect x="371" y="868" width="1" height="15" fill="rgb(243,197,37)"/><text x="374.00" y="878.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:2) (6 samples, 0.79%)</title><rect x="365" y="148" width="9" height="15" fill="rgb(232,172,43)"/><text x="368.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.79%)</title><rect x="365" y="164" width="9" height="15" fill="rgb(207,100,42)"/><text x="368.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 0.79%)</title><rect x="365" y="180" width="9" height="15" fill="rgb(217,38,12)"/><text x="368.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.79%)</title><rect x="365" y="196" width="9" height="15" fill="rgb(221,141,15)"/><text x="368.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.79%)</title><rect x="365" y="212" width="9" height="15" fill="rgb(234,104,31)"/><text x="368.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.79%)</title><rect x="365" y="228" width="9" height="15" fill="rgb(217,33,14)"/><text x="368.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.79%)</title><rect x="365" y="244" width="9" height="15" fill="rgb(216,101,39)"/><text x="368.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.79%)</title><rect x="365" y="260" width="9" height="15" fill="rgb(254,106,26)"/><text x="368.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.79%)</title><rect x="365" y="276" width="9" height="15" fill="rgb(248,104,13)"/><text x="368.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 0.79%)</title><rect x="365" y="292" width="9" height="15" fill="rgb(246,34,20)"/><text x="368.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.79%)</title><rect x="365" y="308" width="9" height="15" fill="rgb(244,78,31)"/><text x="368.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.79%)</title><rect x="365" y="324" width="9" height="15" fill="rgb(251,127,36)"/><text x="368.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.79%)</title><rect x="365" y="340" width="9" height="15" fill="rgb(235,86,27)"/><text x="368.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.79%)</title><rect x="365" y="356" width="9" height="15" fill="rgb(243,137,36)"/><text x="368.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.79%)</title><rect x="365" y="372" width="9" height="15" fill="rgb(227,116,38)"/><text x="368.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 0.79%)</title><rect x="365" y="388" width="9" height="15" fill="rgb(252,97,52)"/><text x="368.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.79%)</title><rect x="365" y="404" width="9" height="15" fill="rgb(225,143,41)"/><text x="368.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.79%)</title><rect x="365" y="420" width="9" height="15" fill="rgb(231,142,35)"/><text x="368.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.79%)</title><rect x="365" y="436" width="9" height="15" fill="rgb(250,191,21)"/><text x="368.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.79%)</title><rect x="365" y="452" width="9" height="15" fill="rgb(230,94,4)"/><text x="368.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.79%)</title><rect x="365" y="468" width="9" height="15" fill="rgb(232,167,46)"/><text x="368.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 0.79%)</title><rect x="365" y="484" width="9" height="15" fill="rgb(232,93,18)"/><text x="368.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.79%)</title><rect x="365" y="500" width="9" height="15" fill="rgb(219,162,29)"/><text x="368.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.79%)</title><rect x="365" y="516" width="9" height="15" fill="rgb(218,92,12)"/><text x="368.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.79%)</title><rect x="365" y="532" width="9" height="15" fill="rgb(221,67,28)"/><text x="368.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.79%)</title><rect x="365" y="548" width="9" height="15" fill="rgb(222,3,36)"/><text x="368.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.79%)</title><rect x="365" y="564" width="9" height="15" fill="rgb(205,60,34)"/><text x="368.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:7) (1 samples, 0.13%)</title><rect x="372" y="580" width="2" height="15" fill="rgb(211,154,43)"/><text x="375.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="372" y="596" width="2" height="15" fill="rgb(228,41,46)"/><text x="375.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="372" y="612" width="2" height="15" fill="rgb(246,46,3)"/><text x="375.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="372" y="628" width="2" height="15" fill="rgb(220,127,44)"/><text x="375.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="372" y="644" width="2" height="15" fill="rgb(240,101,40)"/><text x="375.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="372" y="660" width="2" height="15" fill="rgb(243,108,11)"/><text x="375.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="372" y="676" width="2" height="15" fill="rgb(253,157,25)"/><text x="375.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="372" y="692" width="2" height="15" fill="rgb(235,70,5)"/><text x="375.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py:47) (1 samples, 0.13%)</title><rect x="372" y="708" width="2" height="15" fill="rgb(239,202,18)"/><text x="375.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="372" y="724" width="2" height="15" fill="rgb(229,65,52)"/><text x="375.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="372" y="740" width="2" height="15" fill="rgb(216,188,36)"/><text x="375.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="372" y="756" width="2" height="15" fill="rgb(220,165,35)"/><text x="375.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="372" y="772" width="2" height="15" fill="rgb(231,138,1)"/><text x="375.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.13%)</title><rect x="372" y="788" width="2" height="15" fill="rgb(251,115,9)"/><text x="375.00" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.13%)</title><rect x="372" y="804" width="2" height="15" fill="rgb(254,114,1)"/><text x="375.00" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.13%)</title><rect x="372" y="820" width="2" height="15" fill="rgb(236,68,11)"/><text x="375.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="372" y="836" width="2" height="15" fill="rgb(251,125,43)"/><text x="375.00" y="846.50"></text></g><g><title>0x7f0acc85e652 (?) (1 samples, 0.13%)</title><rect x="372" y="852" width="2" height="15" fill="rgb(205,117,33)"/><text x="375.00" y="862.50"></text></g><g><title>0x7f0acc863ad0 (?) (1 samples, 0.13%)</title><rect x="372" y="868" width="2" height="15" fill="rgb(244,83,6)"/><text x="375.00" y="878.50"></text></g><g><title>0x7f0acc86d3d2 (?) (1 samples, 0.13%)</title><rect x="372" y="884" width="2" height="15" fill="rgb(207,49,49)"/><text x="375.00" y="894.50"></text></g><g><title>0x7f0acc8dff40 (?) (1 samples, 0.13%)</title><rect x="372" y="900" width="2" height="15" fill="rgb(212,172,27)"/><text x="375.00" y="910.50"></text></g><g><title>0x7f0acc9115bf (?) (1 samples, 0.13%)</title><rect x="372" y="916" width="2" height="15" fill="rgb(254,115,35)"/><text x="375.00" y="926.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="372" y="932" width="2" height="15" fill="rgb(242,193,44)"/><text x="375.00" y="942.50"></text></g><g><title>0x7f0acc917ec0 (?) (1 samples, 0.13%)</title><rect x="372" y="948" width="2" height="15" fill="rgb(227,154,1)"/><text x="375.00" y="958.50"></text></g><g><title>0x7f0acc8bc704 (?) (1 samples, 0.13%)</title><rect x="372" y="964" width="2" height="15" fill="rgb(246,168,24)"/><text x="375.00" y="974.50"></text></g><g><title>0x7f0acc8bc5d3 (?) (1 samples, 0.13%)</title><rect x="372" y="980" width="2" height="15" fill="rgb(224,19,33)"/><text x="375.00" y="990.50"></text></g><g><title>0x7f0acc8bc4cf (?) (1 samples, 0.13%)</title><rect x="372" y="996" width="2" height="15" fill="rgb(206,66,18)"/><text x="375.00" y="1006.50"></text></g><g><title>0x7f0acc8bbf85 (?) (1 samples, 0.13%)</title><rect x="372" y="1012" width="2" height="15" fill="rgb(223,163,42)"/><text x="375.00" y="1022.50"></text></g><g><title>0x7f0acc8bad5b (?) (1 samples, 0.13%)</title><rect x="372" y="1028" width="2" height="15" fill="rgb(218,74,25)"/><text x="375.00" y="1038.50"></text></g><g><title>0x7f0acc8c8f5f (?) (1 samples, 0.13%)</title><rect x="372" y="1044" width="2" height="15" fill="rgb(206,15,2)"/><text x="375.00" y="1054.50"></text></g><g><title>0x7f0acc8c8490 (?) (1 samples, 0.13%)</title><rect x="372" y="1060" width="2" height="15" fill="rgb(220,104,44)"/><text x="375.00" y="1070.50"></text></g><g><title>0x7f0acc8c8656 (?) (1 samples, 0.13%)</title><rect x="372" y="1076" width="2" height="15" fill="rgb(233,203,11)"/><text x="375.00" y="1086.50"></text></g><g><title>0x7f0acc8c7644 (?) (1 samples, 0.13%)</title><rect x="372" y="1092" width="2" height="15" fill="rgb(229,50,44)"/><text x="375.00" y="1102.50"></text></g><g><title>0x7f0acc8a3e9b (?) (1 samples, 0.13%)</title><rect x="372" y="1108" width="2" height="15" fill="rgb(241,40,50)"/><text x="375.00" y="1118.50"></text></g><g><title>0x7f0acc8a17f5 (?) (1 samples, 0.13%)</title><rect x="372" y="1124" width="2" height="15" fill="rgb(252,115,28)"/><text x="375.00" y="1134.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.13%)</title><rect x="374" y="484" width="2" height="15" fill="rgb(229,33,19)"/><text x="377.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="374" y="500" width="2" height="15" fill="rgb(229,149,54)"/><text x="377.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="516" width="2" height="15" fill="rgb(235,220,30)"/><text x="377.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="532" width="2" height="15" fill="rgb(226,108,34)"/><text x="377.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="548" width="2" height="15" fill="rgb(206,220,46)"/><text x="377.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="564" width="2" height="15" fill="rgb(207,190,46)"/><text x="377.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="580" width="2" height="15" fill="rgb(236,188,52)"/><text x="377.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="596" width="2" height="15" fill="rgb(250,4,7)"/><text x="377.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.13%)</title><rect x="374" y="612" width="2" height="15" fill="rgb(252,156,18)"/><text x="377.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="628" width="2" height="15" fill="rgb(214,13,16)"/><text x="377.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="644" width="2" height="15" fill="rgb(253,185,14)"/><text x="377.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="660" width="2" height="15" fill="rgb(246,57,42)"/><text x="377.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="676" width="2" height="15" fill="rgb(244,101,50)"/><text x="377.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="692" width="2" height="15" fill="rgb(252,169,23)"/><text x="377.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.13%)</title><rect x="374" y="708" width="2" height="15" fill="rgb(254,8,42)"/><text x="377.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="724" width="2" height="15" fill="rgb(223,8,1)"/><text x="377.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="740" width="2" height="15" fill="rgb(244,58,2)"/><text x="377.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="756" width="2" height="15" fill="rgb(227,220,13)"/><text x="377.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="772" width="2" height="15" fill="rgb(253,76,37)"/><text x="377.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="788" width="2" height="15" fill="rgb(246,110,42)"/><text x="377.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.13%)</title><rect x="374" y="804" width="2" height="15" fill="rgb(227,53,23)"/><text x="377.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="820" width="2" height="15" fill="rgb(234,113,52)"/><text x="377.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="836" width="2" height="15" fill="rgb(215,94,3)"/><text x="377.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="852" width="2" height="15" fill="rgb(228,127,24)"/><text x="377.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="868" width="2" height="15" fill="rgb(214,220,12)"/><text x="377.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="884" width="2" height="15" fill="rgb(227,148,41)"/><text x="377.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:7) (1 samples, 0.13%)</title><rect x="374" y="900" width="2" height="15" fill="rgb(220,56,49)"/><text x="377.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="916" width="2" height="15" fill="rgb(228,39,9)"/><text x="377.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="932" width="2" height="15" fill="rgb(209,156,11)"/><text x="377.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="948" width="2" height="15" fill="rgb(228,204,10)"/><text x="377.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="964" width="2" height="15" fill="rgb(217,122,33)"/><text x="377.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="980" width="2" height="15" fill="rgb(224,211,33)"/><text x="377.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py:106) (1 samples, 0.13%)</title><rect x="374" y="996" width="2" height="15" fill="rgb(241,167,10)"/><text x="377.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="1012" width="2" height="15" fill="rgb(238,122,34)"/><text x="377.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="1028" width="2" height="15" fill="rgb(246,190,29)"/><text x="377.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="1044" width="2" height="15" fill="rgb(231,188,20)"/><text x="377.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="1060" width="2" height="15" fill="rgb(228,193,13)"/><text x="377.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="1076" width="2" height="15" fill="rgb(223,16,45)"/><text x="377.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/decoder.py:5) (1 samples, 0.13%)</title><rect x="374" y="1092" width="2" height="15" fill="rgb(238,28,44)"/><text x="377.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="374" y="1108" width="2" height="15" fill="rgb(241,119,34)"/><text x="377.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="1124" width="2" height="15" fill="rgb(215,206,1)"/><text x="377.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="374" y="1140" width="2" height="15" fill="rgb(221,55,32)"/><text x="377.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="374" y="1156" width="2" height="15" fill="rgb(220,97,41)"/><text x="377.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="374" y="1172" width="2" height="15" fill="rgb(247,0,2)"/><text x="377.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="374" y="1188" width="2" height="15" fill="rgb(206,106,48)"/><text x="377.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="374" y="1204" width="2" height="15" fill="rgb(233,75,53)"/><text x="377.00" y="1214.50"></text></g><g><title>&lt;module&gt; (json/scanner.py:13) (1 samples, 0.13%)</title><rect x="374" y="1220" width="2" height="15" fill="rgb(209,83,27)"/><text x="377.00" y="1230.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="374" y="1236" width="2" height="15" fill="rgb(215,83,35)"/><text x="377.00" y="1246.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="374" y="1252" width="2" height="15" fill="rgb(233,27,27)"/><text x="377.00" y="1262.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.13%)</title><rect x="374" y="1268" width="2" height="15" fill="rgb(220,65,25)"/><text x="377.00" y="1278.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.13%)</title><rect x="374" y="1284" width="2" height="15" fill="rgb(233,15,19)"/><text x="377.00" y="1294.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.13%)</title><rect x="374" y="1300" width="2" height="15" fill="rgb(245,72,8)"/><text x="377.00" y="1310.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.13%)</title><rect x="374" y="1316" width="2" height="15" fill="rgb(253,111,12)"/><text x="377.00" y="1326.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.13%)</title><rect x="374" y="1332" width="2" height="15" fill="rgb(253,179,13)"/><text x="377.00" y="1342.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="374" y="1348" width="2" height="15" fill="rgb(243,38,34)"/><text x="377.00" y="1358.50"></text></g><g><title>0x7f0ade517271 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="374" y="1364" width="2" height="15" fill="rgb(209,86,54)"/><text x="377.00" y="1374.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.13%)</title><rect x="376" y="900" width="1" height="15" fill="rgb(212,142,1)"/><text x="379.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="376" y="916" width="1" height="15" fill="rgb(224,37,52)"/><text x="379.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="376" y="932" width="1" height="15" fill="rgb(222,12,25)"/><text x="379.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="376" y="948" width="1" height="15" fill="rgb(242,180,27)"/><text x="379.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="376" y="964" width="1" height="15" fill="rgb(205,83,49)"/><text x="379.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="376" y="980" width="1" height="15" fill="rgb(252,178,6)"/><text x="379.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.13%)</title><rect x="376" y="996" width="1" height="15" fill="rgb(253,68,42)"/><text x="379.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="376" y="1012" width="1" height="15" fill="rgb(241,214,17)"/><text x="379.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="376" y="1028" width="1" height="15" fill="rgb(224,49,50)"/><text x="379.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="376" y="1044" width="1" height="15" fill="rgb(232,192,49)"/><text x="379.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="376" y="1060" width="1" height="15" fill="rgb(250,119,45)"/><text x="379.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="376" y="1076" width="1" height="15" fill="rgb(206,215,22)"/><text x="379.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="376" y="1092" width="1" height="15" fill="rgb(239,209,11)"/><text x="379.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="376" y="1108" width="1" height="15" fill="rgb(224,36,23)"/><text x="379.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:403) (1 samples, 0.13%)</title><rect x="376" y="1124" width="1" height="15" fill="rgb(236,14,48)"/><text x="379.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="376" y="1140" width="1" height="15" fill="rgb(235,40,5)"/><text x="379.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="376" y="1156" width="1" height="15" fill="rgb(218,69,53)"/><text x="379.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="376" y="1172" width="1" height="15" fill="rgb(226,63,43)"/><text x="379.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="376" y="1188" width="1" height="15" fill="rgb(228,40,31)"/><text x="379.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="376" y="1204" width="1" height="15" fill="rgb(208,59,39)"/><text x="379.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog.py:24) (1 samples, 0.13%)</title><rect x="376" y="1220" width="1" height="15" fill="rgb(228,101,20)"/><text x="379.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="376" y="1236" width="1" height="15" fill="rgb(209,66,16)"/><text x="379.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="376" y="1252" width="1" height="15" fill="rgb(225,219,32)"/><text x="379.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.13%)</title><rect x="376" y="1268" width="1" height="15" fill="rgb(216,14,20)"/><text x="379.00" y="1278.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.13%)</title><rect x="376" y="1284" width="1" height="15" fill="rgb(243,170,34)"/><text x="379.00" y="1294.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.13%)</title><rect x="376" y="1300" width="1" height="15" fill="rgb(235,12,5)"/><text x="379.00" y="1310.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.13%)</title><rect x="376" y="1316" width="1" height="15" fill="rgb(205,196,44)"/><text x="379.00" y="1326.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.13%)</title><rect x="376" y="1332" width="1" height="15" fill="rgb(218,108,14)"/><text x="379.00" y="1342.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:302) (1 samples, 0.13%)</title><rect x="376" y="1348" width="1" height="15" fill="rgb(236,24,49)"/><text x="379.00" y="1358.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:4) (3 samples, 0.39%)</title><rect x="374" y="148" width="5" height="15" fill="rgb(245,9,14)"/><text x="377.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="374" y="164" width="5" height="15" fill="rgb(236,57,3)"/><text x="377.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.39%)</title><rect x="374" y="180" width="5" height="15" fill="rgb(239,144,37)"/><text x="377.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="374" y="196" width="5" height="15" fill="rgb(226,187,35)"/><text x="377.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="374" y="212" width="5" height="15" fill="rgb(227,64,27)"/><text x="377.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="374" y="228" width="5" height="15" fill="rgb(218,212,17)"/><text x="377.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="374" y="244" width="5" height="15" fill="rgb(205,17,42)"/><text x="377.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="374" y="260" width="5" height="15" fill="rgb(239,29,22)"/><text x="377.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="374" y="276" width="5" height="15" fill="rgb(237,1,24)"/><text x="377.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.39%)</title><rect x="374" y="292" width="5" height="15" fill="rgb(225,29,6)"/><text x="377.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="374" y="308" width="5" height="15" fill="rgb(229,44,29)"/><text x="377.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="374" y="324" width="5" height="15" fill="rgb(211,106,40)"/><text x="377.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="374" y="340" width="5" height="15" fill="rgb(226,182,0)"/><text x="377.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="374" y="356" width="5" height="15" fill="rgb(242,111,11)"/><text x="377.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="374" y="372" width="5" height="15" fill="rgb(253,184,12)"/><text x="377.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.39%)</title><rect x="374" y="388" width="5" height="15" fill="rgb(224,130,12)"/><text x="377.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="374" y="404" width="5" height="15" fill="rgb(243,28,41)"/><text x="377.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="374" y="420" width="5" height="15" fill="rgb(207,198,7)"/><text x="377.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="374" y="436" width="5" height="15" fill="rgb(225,59,52)"/><text x="377.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="374" y="452" width="5" height="15" fill="rgb(254,12,12)"/><text x="377.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="374" y="468" width="5" height="15" fill="rgb(227,114,21)"/><text x="377.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.26%)</title><rect x="376" y="484" width="3" height="15" fill="rgb(209,35,27)"/><text x="379.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="376" y="500" width="3" height="15" fill="rgb(207,208,52)"/><text x="379.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="376" y="516" width="3" height="15" fill="rgb(248,108,17)"/><text x="379.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="376" y="532" width="3" height="15" fill="rgb(243,222,9)"/><text x="379.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="376" y="548" width="3" height="15" fill="rgb(244,25,22)"/><text x="379.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="376" y="564" width="3" height="15" fill="rgb(217,22,12)"/><text x="379.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.26%)</title><rect x="376" y="580" width="3" height="15" fill="rgb(232,72,3)"/><text x="379.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="376" y="596" width="3" height="15" fill="rgb(245,212,0)"/><text x="379.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="376" y="612" width="3" height="15" fill="rgb(242,38,5)"/><text x="379.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="376" y="628" width="3" height="15" fill="rgb(245,167,29)"/><text x="379.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="376" y="644" width="3" height="15" fill="rgb(229,76,11)"/><text x="379.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="376" y="660" width="3" height="15" fill="rgb(239,94,5)"/><text x="379.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.26%)</title><rect x="376" y="676" width="3" height="15" fill="rgb(247,2,23)"/><text x="379.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="376" y="692" width="3" height="15" fill="rgb(217,104,4)"/><text x="379.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="376" y="708" width="3" height="15" fill="rgb(225,48,9)"/><text x="379.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="376" y="724" width="3" height="15" fill="rgb(244,221,54)"/><text x="379.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="376" y="740" width="3" height="15" fill="rgb(247,53,34)"/><text x="379.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="376" y="756" width="3" height="15" fill="rgb(227,110,8)"/><text x="379.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.26%)</title><rect x="376" y="772" width="3" height="15" fill="rgb(212,175,53)"/><text x="379.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.26%)</title><rect x="376" y="788" width="3" height="15" fill="rgb(237,141,30)"/><text x="379.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="376" y="804" width="3" height="15" fill="rgb(214,199,50)"/><text x="379.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="376" y="820" width="3" height="15" fill="rgb(250,13,40)"/><text x="379.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="376" y="836" width="3" height="15" fill="rgb(228,5,4)"/><text x="379.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="376" y="852" width="3" height="15" fill="rgb(223,8,26)"/><text x="379.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="376" y="868" width="3" height="15" fill="rgb(249,211,17)"/><text x="379.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="376" y="884" width="3" height="15" fill="rgb(227,114,20)"/><text x="379.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.13%)</title><rect x="377" y="900" width="2" height="15" fill="rgb(250,138,42)"/><text x="380.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="377" y="916" width="2" height="15" fill="rgb(247,37,5)"/><text x="380.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="377" y="932" width="2" height="15" fill="rgb(224,48,5)"/><text x="380.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="377" y="948" width="2" height="15" fill="rgb(233,146,46)"/><text x="380.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="377" y="964" width="2" height="15" fill="rgb(224,120,47)"/><text x="380.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="377" y="980" width="2" height="15" fill="rgb(205,227,9)"/><text x="380.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="377" y="996" width="2" height="15" fill="rgb(212,195,5)"/><text x="380.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="377" y="1012" width="2" height="15" fill="rgb(241,94,41)"/><text x="380.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2150) (1 samples, 0.13%)</title><rect x="377" y="1028" width="2" height="15" fill="rgb(231,36,47)"/><text x="380.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.13%)</title><rect x="377" y="1044" width="2" height="15" fill="rgb(209,164,10)"/><text x="380.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.13%)</title><rect x="377" y="1060" width="2" height="15" fill="rgb(242,118,30)"/><text x="380.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.13%)</title><rect x="379" y="580" width="1" height="15" fill="rgb(244,183,44)"/><text x="382.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="379" y="596" width="1" height="15" fill="rgb(251,161,0)"/><text x="382.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="379" y="612" width="1" height="15" fill="rgb(214,36,30)"/><text x="382.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="379" y="628" width="1" height="15" fill="rgb(237,35,24)"/><text x="382.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="379" y="644" width="1" height="15" fill="rgb(250,184,45)"/><text x="382.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="379" y="660" width="1" height="15" fill="rgb(243,116,48)"/><text x="382.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:201) (1 samples, 0.13%)</title><rect x="379" y="676" width="1" height="15" fill="rgb(237,189,27)"/><text x="382.00" y="686.50"></text></g><g><title>register_check (pycodestyle.py:186) (1 samples, 0.13%)</title><rect x="379" y="692" width="1" height="15" fill="rgb(221,117,8)"/><text x="382.00" y="702.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.13%)</title><rect x="380" y="1060" width="2" height="15" fill="rgb(244,124,32)"/><text x="383.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="380" y="1076" width="2" height="15" fill="rgb(219,28,43)"/><text x="383.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="380" y="1092" width="2" height="15" fill="rgb(222,4,53)"/><text x="383.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="380" y="1108" width="2" height="15" fill="rgb(232,14,26)"/><text x="383.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="380" y="1124" width="2" height="15" fill="rgb(248,162,44)"/><text x="383.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="380" y="1140" width="2" height="15" fill="rgb(216,47,39)"/><text x="383.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:6) (1 samples, 0.13%)</title><rect x="380" y="1156" width="2" height="15" fill="rgb(222,153,26)"/><text x="383.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="380" y="1172" width="2" height="15" fill="rgb(206,52,37)"/><text x="383.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="380" y="1188" width="2" height="15" fill="rgb(237,97,39)"/><text x="383.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="380" y="1204" width="2" height="15" fill="rgb(254,157,31)"/><text x="383.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="380" y="1220" width="2" height="15" fill="rgb(207,52,31)"/><text x="383.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="380" y="1236" width="2" height="15" fill="rgb(247,0,33)"/><text x="383.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="380" y="1252" width="2" height="15" fill="rgb(254,195,41)"/><text x="383.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="380" y="1268" width="2" height="15" fill="rgb(228,43,9)"/><text x="383.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pysvn_helper.py:12) (1 samples, 0.13%)</title><rect x="380" y="1284" width="2" height="15" fill="rgb(206,83,3)"/><text x="383.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="380" y="1300" width="2" height="15" fill="rgb(246,182,34)"/><text x="383.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="380" y="1316" width="2" height="15" fill="rgb(233,217,2)"/><text x="383.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="380" y="1332" width="2" height="15" fill="rgb(229,146,31)"/><text x="383.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="380" y="1348" width="2" height="15" fill="rgb(245,105,36)"/><text x="383.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="380" y="1364" width="2" height="15" fill="rgb(211,117,10)"/><text x="383.00" y="1374.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementTree.py:102) (1 samples, 0.13%)</title><rect x="380" y="1380" width="2" height="15" fill="rgb(207,191,8)"/><text x="383.00" y="1390.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="380" y="1396" width="2" height="15" fill="rgb(232,178,51)"/><text x="383.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="380" y="1412" width="2" height="15" fill="rgb(206,85,3)"/><text x="383.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="380" y="1428" width="2" height="15" fill="rgb(222,202,34)"/><text x="383.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="380" y="1444" width="2" height="15" fill="rgb(242,77,3)"/><text x="383.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="380" y="1460" width="2" height="15" fill="rgb(206,146,45)"/><text x="383.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="380" y="1476" width="2" height="15" fill="rgb(216,199,42)"/><text x="383.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="380" y="1492" width="2" height="15" fill="rgb(232,68,14)"/><text x="383.00" y="1502.50"></text></g><g><title>&lt;module&gt; (xml/etree/ElementPath.py:62) (1 samples, 0.13%)</title><rect x="380" y="1508" width="2" height="15" fill="rgb(221,30,30)"/><text x="383.00" y="1518.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="380" y="1524" width="2" height="15" fill="rgb(253,10,12)"/><text x="383.00" y="1534.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="380" y="1540" width="2" height="15" fill="rgb(219,161,17)"/><text x="383.00" y="1550.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.13%)</title><rect x="380" y="1556" width="2" height="15" fill="rgb(226,41,45)"/><text x="383.00" y="1566.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.13%)</title><rect x="380" y="1572" width="2" height="15" fill="rgb(220,22,8)"/><text x="383.00" y="1582.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="380" y="1588" width="2" height="15" fill="rgb(219,128,13)"/><text x="383.00" y="1598.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="380" y="1604" width="2" height="15" fill="rgb(238,94,44)"/><text x="383.00" y="1614.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="380" y="1620" width="2" height="15" fill="rgb(225,70,5)"/><text x="383.00" y="1630.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.13%)</title><rect x="380" y="1636" width="2" height="15" fill="rgb(249,28,2)"/><text x="383.00" y="1646.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.13%)</title><rect x="380" y="1652" width="2" height="15" fill="rgb(229,89,34)"/><text x="383.00" y="1662.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.39%)</title><rect x="379" y="244" width="4" height="15" fill="rgb(231,172,20)"/><text x="382.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="379" y="260" width="4" height="15" fill="rgb(226,184,1)"/><text x="382.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="379" y="276" width="4" height="15" fill="rgb(241,187,30)"/><text x="382.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="379" y="292" width="4" height="15" fill="rgb(212,127,33)"/><text x="382.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="379" y="308" width="4" height="15" fill="rgb(213,149,46)"/><text x="382.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="379" y="324" width="4" height="15" fill="rgb(212,68,42)"/><text x="382.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.39%)</title><rect x="379" y="340" width="4" height="15" fill="rgb(234,180,53)"/><text x="382.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="379" y="356" width="4" height="15" fill="rgb(212,226,27)"/><text x="382.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.39%)</title><rect x="379" y="372" width="4" height="15" fill="rgb(224,26,1)"/><text x="382.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="379" y="388" width="4" height="15" fill="rgb(217,113,36)"/><text x="382.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="379" y="404" width="4" height="15" fill="rgb(221,78,49)"/><text x="382.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="379" y="420" width="4" height="15" fill="rgb(214,185,15)"/><text x="382.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="379" y="436" width="4" height="15" fill="rgb(239,115,21)"/><text x="382.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="379" y="452" width="4" height="15" fill="rgb(241,93,53)"/><text x="382.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="379" y="468" width="4" height="15" fill="rgb(229,112,41)"/><text x="382.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (3 samples, 0.39%)</title><rect x="379" y="484" width="4" height="15" fill="rgb(241,137,8)"/><text x="382.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="379" y="500" width="4" height="15" fill="rgb(209,2,12)"/><text x="382.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="379" y="516" width="4" height="15" fill="rgb(250,167,2)"/><text x="382.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="379" y="532" width="4" height="15" fill="rgb(251,103,38)"/><text x="382.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="379" y="548" width="4" height="15" fill="rgb(222,212,23)"/><text x="382.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="379" y="564" width="4" height="15" fill="rgb(215,41,21)"/><text x="382.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.26%)</title><rect x="380" y="580" width="3" height="15" fill="rgb(240,130,9)"/><text x="383.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="380" y="596" width="3" height="15" fill="rgb(247,104,50)"/><text x="383.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.26%)</title><rect x="380" y="612" width="3" height="15" fill="rgb(217,30,40)"/><text x="383.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="380" y="628" width="3" height="15" fill="rgb(222,227,53)"/><text x="383.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="380" y="644" width="3" height="15" fill="rgb(226,7,45)"/><text x="383.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="380" y="660" width="3" height="15" fill="rgb(209,200,43)"/><text x="383.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="380" y="676" width="3" height="15" fill="rgb(233,151,40)"/><text x="383.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="380" y="692" width="3" height="15" fill="rgb(252,123,5)"/><text x="383.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="380" y="708" width="3" height="15" fill="rgb(239,36,49)"/><text x="383.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.26%)</title><rect x="380" y="724" width="3" height="15" fill="rgb(212,164,52)"/><text x="383.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="380" y="740" width="3" height="15" fill="rgb(234,43,46)"/><text x="383.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="380" y="756" width="3" height="15" fill="rgb(220,109,22)"/><text x="383.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="380" y="772" width="3" height="15" fill="rgb(231,10,16)"/><text x="383.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="380" y="788" width="3" height="15" fill="rgb(218,171,38)"/><text x="383.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="380" y="804" width="3" height="15" fill="rgb(212,168,13)"/><text x="383.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.26%)</title><rect x="380" y="820" width="3" height="15" fill="rgb(227,77,31)"/><text x="383.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="380" y="836" width="3" height="15" fill="rgb(215,56,30)"/><text x="383.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="380" y="852" width="3" height="15" fill="rgb(240,132,28)"/><text x="383.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="380" y="868" width="3" height="15" fill="rgb(218,4,52)"/><text x="383.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="380" y="884" width="3" height="15" fill="rgb(221,226,32)"/><text x="383.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="380" y="900" width="3" height="15" fill="rgb(248,53,53)"/><text x="383.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.26%)</title><rect x="380" y="916" width="3" height="15" fill="rgb(236,118,11)"/><text x="383.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="380" y="932" width="3" height="15" fill="rgb(205,65,53)"/><text x="383.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.26%)</title><rect x="380" y="948" width="3" height="15" fill="rgb(217,211,35)"/><text x="383.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="380" y="964" width="3" height="15" fill="rgb(237,2,13)"/><text x="383.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="380" y="980" width="3" height="15" fill="rgb(244,195,46)"/><text x="383.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="380" y="996" width="3" height="15" fill="rgb(239,30,12)"/><text x="383.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="380" y="1012" width="3" height="15" fill="rgb(251,106,41)"/><text x="383.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="380" y="1028" width="3" height="15" fill="rgb(234,61,3)"/><text x="383.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="380" y="1044" width="3" height="15" fill="rgb(211,74,14)"/><text x="383.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:5) (1 samples, 0.13%)</title><rect x="382" y="1060" width="1" height="15" fill="rgb(245,11,42)"/><text x="385.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="382" y="1076" width="1" height="15" fill="rgb(222,166,14)"/><text x="385.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="382" y="1092" width="1" height="15" fill="rgb(240,195,26)"/><text x="385.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="382" y="1108" width="1" height="15" fill="rgb(239,207,2)"/><text x="385.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="382" y="1124" width="1" height="15" fill="rgb(239,207,30)"/><text x="385.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (1 samples, 0.13%)</title><rect x="382" y="1140" width="1" height="15" fill="rgb(215,102,0)"/><text x="385.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.13%)</title><rect x="383" y="628" width="2" height="15" fill="rgb(240,75,49)"/><text x="386.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="383" y="644" width="2" height="15" fill="rgb(223,15,19)"/><text x="386.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="383" y="660" width="2" height="15" fill="rgb(208,124,13)"/><text x="386.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="383" y="676" width="2" height="15" fill="rgb(243,154,18)"/><text x="386.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="383" y="692" width="2" height="15" fill="rgb(220,111,50)"/><text x="386.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="383" y="708" width="2" height="15" fill="rgb(209,130,34)"/><text x="386.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:13) (1 samples, 0.13%)</title><rect x="383" y="724" width="2" height="15" fill="rgb(213,85,46)"/><text x="386.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="383" y="740" width="2" height="15" fill="rgb(237,93,7)"/><text x="386.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="383" y="756" width="2" height="15" fill="rgb(226,66,53)"/><text x="386.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="383" y="772" width="2" height="15" fill="rgb(252,69,17)"/><text x="386.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.13%)</title><rect x="383" y="788" width="2" height="15" fill="rgb(222,212,40)"/><text x="386.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.13%)</title><rect x="383" y="804" width="2" height="15" fill="rgb(206,181,26)"/><text x="386.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.13%)</title><rect x="383" y="820" width="2" height="15" fill="rgb(226,210,3)"/><text x="386.00" y="830.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.13%)</title><rect x="383" y="836" width="2" height="15" fill="rgb(250,154,4)"/><text x="386.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.39%)</title><rect x="383" y="436" width="5" height="15" fill="rgb(248,16,31)"/><text x="386.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="383" y="452" width="5" height="15" fill="rgb(235,183,47)"/><text x="386.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="383" y="468" width="5" height="15" fill="rgb(249,67,38)"/><text x="386.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="383" y="484" width="5" height="15" fill="rgb(250,122,14)"/><text x="386.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="383" y="500" width="5" height="15" fill="rgb(225,70,24)"/><text x="386.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="383" y="516" width="5" height="15" fill="rgb(253,2,18)"/><text x="386.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.39%)</title><rect x="383" y="532" width="5" height="15" fill="rgb(242,140,33)"/><text x="386.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="383" y="548" width="5" height="15" fill="rgb(208,94,50)"/><text x="386.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="383" y="564" width="5" height="15" fill="rgb(226,104,30)"/><text x="386.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="383" y="580" width="5" height="15" fill="rgb(216,127,32)"/><text x="386.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="383" y="596" width="5" height="15" fill="rgb(223,134,18)"/><text x="386.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="383" y="612" width="5" height="15" fill="rgb(225,2,0)"/><text x="386.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.26%)</title><rect x="385" y="628" width="3" height="15" fill="rgb(229,10,38)"/><text x="388.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="644" width="3" height="15" fill="rgb(219,123,38)"/><text x="388.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="660" width="3" height="15" fill="rgb(214,58,15)"/><text x="388.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="676" width="3" height="15" fill="rgb(242,171,28)"/><text x="388.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="692" width="3" height="15" fill="rgb(250,189,49)"/><text x="388.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="708" width="3" height="15" fill="rgb(240,142,12)"/><text x="388.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.26%)</title><rect x="385" y="724" width="3" height="15" fill="rgb(212,158,31)"/><text x="388.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="740" width="3" height="15" fill="rgb(222,45,45)"/><text x="388.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="756" width="3" height="15" fill="rgb(233,193,33)"/><text x="388.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="772" width="3" height="15" fill="rgb(244,131,9)"/><text x="388.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="788" width="3" height="15" fill="rgb(229,156,38)"/><text x="388.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="804" width="3" height="15" fill="rgb(218,162,45)"/><text x="388.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.26%)</title><rect x="385" y="820" width="3" height="15" fill="rgb(217,128,35)"/><text x="388.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="836" width="3" height="15" fill="rgb(228,78,27)"/><text x="388.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="852" width="3" height="15" fill="rgb(219,0,11)"/><text x="388.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="868" width="3" height="15" fill="rgb(241,48,17)"/><text x="388.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="884" width="3" height="15" fill="rgb(218,54,17)"/><text x="388.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="900" width="3" height="15" fill="rgb(235,229,7)"/><text x="388.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.26%)</title><rect x="385" y="916" width="3" height="15" fill="rgb(210,171,13)"/><text x="388.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="932" width="3" height="15" fill="rgb(226,213,14)"/><text x="388.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="948" width="3" height="15" fill="rgb(215,56,18)"/><text x="388.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="964" width="3" height="15" fill="rgb(254,175,52)"/><text x="388.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="980" width="3" height="15" fill="rgb(210,6,2)"/><text x="388.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="996" width="3" height="15" fill="rgb(251,147,11)"/><text x="388.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.26%)</title><rect x="385" y="1012" width="3" height="15" fill="rgb(212,29,4)"/><text x="388.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1028" width="3" height="15" fill="rgb(208,6,53)"/><text x="388.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1044" width="3" height="15" fill="rgb(236,139,28)"/><text x="388.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1060" width="3" height="15" fill="rgb(250,5,12)"/><text x="388.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1076" width="3" height="15" fill="rgb(236,15,13)"/><text x="388.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1092" width="3" height="15" fill="rgb(225,115,52)"/><text x="388.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.26%)</title><rect x="385" y="1108" width="3" height="15" fill="rgb(222,221,17)"/><text x="388.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1124" width="3" height="15" fill="rgb(215,52,29)"/><text x="388.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1140" width="3" height="15" fill="rgb(219,75,54)"/><text x="388.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1156" width="3" height="15" fill="rgb(246,104,49)"/><text x="388.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1172" width="3" height="15" fill="rgb(232,51,44)"/><text x="388.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1188" width="3" height="15" fill="rgb(243,198,33)"/><text x="388.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.26%)</title><rect x="385" y="1204" width="3" height="15" fill="rgb(221,169,36)"/><text x="388.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1220" width="3" height="15" fill="rgb(254,129,44)"/><text x="388.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1236" width="3" height="15" fill="rgb(232,127,4)"/><text x="388.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1252" width="3" height="15" fill="rgb(238,59,34)"/><text x="388.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1268" width="3" height="15" fill="rgb(213,48,14)"/><text x="388.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1284" width="3" height="15" fill="rgb(206,191,48)"/><text x="388.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.26%)</title><rect x="385" y="1300" width="3" height="15" fill="rgb(248,119,7)"/><text x="388.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1316" width="3" height="15" fill="rgb(253,103,34)"/><text x="388.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1332" width="3" height="15" fill="rgb(208,9,36)"/><text x="388.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1348" width="3" height="15" fill="rgb(226,33,17)"/><text x="388.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1364" width="3" height="15" fill="rgb(225,20,29)"/><text x="388.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1380" width="3" height="15" fill="rgb(240,105,54)"/><text x="388.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.26%)</title><rect x="385" y="1396" width="3" height="15" fill="rgb(213,219,26)"/><text x="388.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1412" width="3" height="15" fill="rgb(229,67,13)"/><text x="388.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1428" width="3" height="15" fill="rgb(235,101,27)"/><text x="388.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1444" width="3" height="15" fill="rgb(222,221,42)"/><text x="388.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1460" width="3" height="15" fill="rgb(218,225,16)"/><text x="388.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1476" width="3" height="15" fill="rgb(244,202,43)"/><text x="388.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (2 samples, 0.26%)</title><rect x="385" y="1492" width="3" height="15" fill="rgb(229,227,46)"/><text x="388.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1508" width="3" height="15" fill="rgb(252,216,1)"/><text x="388.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.26%)</title><rect x="385" y="1524" width="3" height="15" fill="rgb(206,119,50)"/><text x="388.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1540" width="3" height="15" fill="rgb(251,81,42)"/><text x="388.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1556" width="3" height="15" fill="rgb(232,71,51)"/><text x="388.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1572" width="3" height="15" fill="rgb(211,53,33)"/><text x="388.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1588" width="3" height="15" fill="rgb(206,20,14)"/><text x="388.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1604" width="3" height="15" fill="rgb(215,77,15)"/><text x="388.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1620" width="3" height="15" fill="rgb(241,184,22)"/><text x="388.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (2 samples, 0.26%)</title><rect x="385" y="1636" width="3" height="15" fill="rgb(218,225,11)"/><text x="388.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.26%)</title><rect x="385" y="1652" width="3" height="15" fill="rgb(250,94,22)"/><text x="388.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1668" width="3" height="15" fill="rgb(249,224,43)"/><text x="388.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.26%)</title><rect x="385" y="1684" width="3" height="15" fill="rgb(251,69,26)"/><text x="388.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="385" y="1700" width="3" height="15" fill="rgb(238,68,44)"/><text x="388.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="385" y="1716" width="3" height="15" fill="rgb(214,1,32)"/><text x="388.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="385" y="1732" width="3" height="15" fill="rgb(253,112,48)"/><text x="388.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="385" y="1748" width="3" height="15" fill="rgb(234,78,18)"/><text x="388.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py:560) (2 samples, 0.26%)</title><rect x="385" y="1764" width="3" height="15" fill="rgb(211,131,19)"/><text x="388.00" y="1774.50"></text></g><g><title>compile (re.py:234) (2 samples, 0.26%)</title><rect x="385" y="1780" width="3" height="15" fill="rgb(213,18,5)"/><text x="388.00" y="1790.50"></text></g><g><title>_compile (re.py:286) (2 samples, 0.26%)</title><rect x="385" y="1796" width="3" height="15" fill="rgb(217,108,46)"/><text x="388.00" y="1806.50"></text></g><g><title>compile (sre_compile.py:764) (2 samples, 0.26%)</title><rect x="385" y="1812" width="3" height="15" fill="rgb(224,172,28)"/><text x="388.00" y="1822.50"></text></g><g><title>parse (sre_parse.py:930) (2 samples, 0.26%)</title><rect x="385" y="1828" width="3" height="15" fill="rgb(251,133,45)"/><text x="388.00" y="1838.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.26%)</title><rect x="385" y="1844" width="3" height="15" fill="rgb(206,155,4)"/><text x="388.00" y="1854.50"></text></g><g><title>_parse (sre_parse.py:816) (2 samples, 0.26%)</title><rect x="385" y="1860" width="3" height="15" fill="rgb(235,123,36)"/><text x="388.00" y="1870.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (2 samples, 0.26%)</title><rect x="385" y="1876" width="3" height="15" fill="rgb(241,178,44)"/><text x="388.00" y="1886.50"></text></g><g><title>_parse (sre_parse.py:646) (2 samples, 0.26%)</title><rect x="385" y="1892" width="3" height="15" fill="rgb(248,107,37)"/><text x="388.00" y="1902.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (2 samples, 0.26%)</title><rect x="385" y="1908" width="3" height="15" fill="rgb(214,20,5)"/><text x="388.00" y="1918.50"></text></g><g><title>__init__ (sre_parse.py:112) (2 samples, 0.26%)</title><rect x="385" y="1924" width="3" height="15" fill="rgb(253,132,10)"/><text x="388.00" y="1934.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.13%)</title><rect x="388" y="1108" width="1" height="15" fill="rgb(242,168,17)"/><text x="391.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="388" y="1124" width="1" height="15" fill="rgb(220,98,29)"/><text x="391.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="388" y="1140" width="1" height="15" fill="rgb(210,171,40)"/><text x="391.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="388" y="1156" width="1" height="15" fill="rgb(244,223,17)"/><text x="391.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="388" y="1172" width="1" height="15" fill="rgb(237,115,0)"/><text x="391.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="388" y="1188" width="1" height="15" fill="rgb(241,1,4)"/><text x="391.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.13%)</title><rect x="388" y="1204" width="1" height="15" fill="rgb(245,26,15)"/><text x="391.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="388" y="1220" width="1" height="15" fill="rgb(236,122,20)"/><text x="391.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="388" y="1236" width="1" height="15" fill="rgb(234,94,18)"/><text x="391.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="388" y="1252" width="1" height="15" fill="rgb(210,152,35)"/><text x="391.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="388" y="1268" width="1" height="15" fill="rgb(211,88,15)"/><text x="391.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="388" y="1284" width="1" height="15" fill="rgb(219,177,37)"/><text x="391.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.13%)</title><rect x="388" y="1300" width="1" height="15" fill="rgb(210,107,4)"/><text x="391.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.13%)</title><rect x="388" y="1316" width="1" height="15" fill="rgb(221,182,8)"/><text x="391.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.13%)</title><rect x="388" y="1332" width="1" height="15" fill="rgb(253,116,25)"/><text x="391.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.13%)</title><rect x="388" y="1348" width="1" height="15" fill="rgb(211,89,31)"/><text x="391.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.13%)</title><rect x="388" y="1364" width="1" height="15" fill="rgb(224,76,13)"/><text x="391.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.13%)</title><rect x="388" y="1380" width="1" height="15" fill="rgb(215,187,13)"/><text x="391.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.13%)</title><rect x="388" y="1396" width="1" height="15" fill="rgb(245,42,36)"/><text x="391.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="388" y="1412" width="1" height="15" fill="rgb(230,91,15)"/><text x="391.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="388" y="1428" width="1" height="15" fill="rgb(208,49,29)"/><text x="391.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.13%)</title><rect x="388" y="1444" width="1" height="15" fill="rgb(210,209,15)"/><text x="391.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.13%)</title><rect x="388" y="1460" width="1" height="15" fill="rgb(222,225,19)"/><text x="391.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="388" y="1476" width="1" height="15" fill="rgb(238,89,49)"/><text x="391.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="388" y="1492" width="1" height="15" fill="rgb(247,142,7)"/><text x="391.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="388" y="1508" width="1" height="15" fill="rgb(241,18,29)"/><text x="391.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.13%)</title><rect x="388" y="1524" width="1" height="15" fill="rgb(225,77,25)"/><text x="391.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="388" y="1540" width="1" height="15" fill="rgb(218,135,0)"/><text x="391.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.13%)</title><rect x="388" y="1556" width="1" height="15" fill="rgb(240,62,54)"/><text x="391.00" y="1566.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.13%)</title><rect x="388" y="1572" width="1" height="15" fill="rgb(222,210,36)"/><text x="391.00" y="1582.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.13%)</title><rect x="389" y="1108" width="2" height="15" fill="rgb(249,114,41)"/><text x="392.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="389" y="1124" width="2" height="15" fill="rgb(219,142,45)"/><text x="392.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="389" y="1140" width="2" height="15" fill="rgb(215,219,47)"/><text x="392.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="389" y="1156" width="2" height="15" fill="rgb(221,88,18)"/><text x="392.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="389" y="1172" width="2" height="15" fill="rgb(213,114,28)"/><text x="392.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="389" y="1188" width="2" height="15" fill="rgb(223,7,0)"/><text x="392.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="389" y="1204" width="2" height="15" fill="rgb(224,26,26)"/><text x="392.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="389" y="1220" width="2" height="15" fill="rgb(233,134,33)"/><text x="392.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:18) (1 samples, 0.13%)</title><rect x="389" y="1236" width="2" height="15" fill="rgb(224,101,34)"/><text x="392.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.13%)</title><rect x="389" y="1252" width="2" height="15" fill="rgb(217,172,7)"/><text x="392.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="389" y="1268" width="2" height="15" fill="rgb(205,203,52)"/><text x="392.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="389" y="1284" width="2" height="15" fill="rgb(205,67,45)"/><text x="392.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.13%)</title><rect x="389" y="1300" width="2" height="15" fill="rgb(235,32,31)"/><text x="392.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.13%)</title><rect x="389" y="1316" width="2" height="15" fill="rgb(251,19,27)"/><text x="392.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.13%)</title><rect x="389" y="1332" width="2" height="15" fill="rgb(222,219,23)"/><text x="392.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.13%)</title><rect x="389" y="1348" width="2" height="15" fill="rgb(214,208,34)"/><text x="392.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.13%)</title><rect x="389" y="1364" width="2" height="15" fill="rgb(224,3,48)"/><text x="392.00" y="1374.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.13%)</title><rect x="391" y="1572" width="2" height="15" fill="rgb(251,217,2)"/><text x="394.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.13%)</title><rect x="391" y="1588" width="2" height="15" fill="rgb(241,25,37)"/><text x="394.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.13%)</title><rect x="391" y="1604" width="2" height="15" fill="rgb(215,192,10)"/><text x="394.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.13%)</title><rect x="391" y="1620" width="2" height="15" fill="rgb(227,215,47)"/><text x="394.00" y="1630.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.13%)</title><rect x="391" y="1636" width="2" height="15" fill="rgb(232,10,37)"/><text x="394.00" y="1646.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.13%)</title><rect x="391" y="1652" width="2" height="15" fill="rgb(246,28,24)"/><text x="394.00" y="1662.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.13%)</title><rect x="391" y="1668" width="2" height="15" fill="rgb(242,133,16)"/><text x="394.00" y="1678.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.13%)</title><rect x="391" y="1684" width="2" height="15" fill="rgb(232,191,53)"/><text x="394.00" y="1694.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.26%)</title><rect x="391" y="1460" width="3" height="15" fill="rgb(238,203,34)"/><text x="394.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.26%)</title><rect x="391" y="1476" width="3" height="15" fill="rgb(237,22,46)"/><text x="394.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.26%)</title><rect x="391" y="1492" width="3" height="15" fill="rgb(231,30,13)"/><text x="394.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.26%)</title><rect x="391" y="1508" width="3" height="15" fill="rgb(228,146,34)"/><text x="394.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.26%)</title><rect x="391" y="1524" width="3" height="15" fill="rgb(232,114,53)"/><text x="394.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.26%)</title><rect x="391" y="1540" width="3" height="15" fill="rgb(210,228,30)"/><text x="394.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.26%)</title><rect x="391" y="1556" width="3" height="15" fill="rgb(238,20,13)"/><text x="394.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:61) (1 samples, 0.13%)</title><rect x="393" y="1572" width="1" height="15" fill="rgb(241,26,9)"/><text x="396.00" y="1582.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="393" y="1588" width="1" height="15" fill="rgb(222,211,35)"/><text x="396.00" y="1598.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="393" y="1604" width="1" height="15" fill="rgb(247,97,24)"/><text x="396.00" y="1614.50"></text></g><g><title>pybind11::detail::all_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="393" y="1620" width="1" height="15" fill="rgb(230,175,36)"/><text x="396.00" y="1630.50"></text></g><g><title>0x7f0ade51490e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="393" y="1636" width="1" height="15" fill="rgb(215,199,51)"/><text x="396.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:4) (20 samples, 2.62%)</title><rect x="365" y="52" width="31" height="15" fill="rgb(236,229,1)"/><text x="368.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 2.62%)</title><rect x="365" y="68" width="31" height="15" fill="rgb(207,220,48)"/><text x="368.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 2.62%)</title><rect x="365" y="84" width="31" height="15" fill="rgb(224,117,6)"/><text x="368.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 2.62%)</title><rect x="365" y="100" width="31" height="15" fill="rgb(217,20,28)"/><text x="368.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 2.62%)</title><rect x="365" y="116" width="31" height="15" fill="rgb(228,109,7)"/><text x="368.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 2.62%)</title><rect x="365" y="132" width="31" height="15" fill="rgb(218,43,25)"/><text x="368.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:7) (11 samples, 1.44%)</title><rect x="379" y="148" width="17" height="15" fill="rgb(217,143,6)"/><text x="382.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 1.44%)</title><rect x="379" y="164" width="17" height="15" fill="rgb(216,145,42)"/><text x="382.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 1.44%)</title><rect x="379" y="180" width="17" height="15" fill="rgb(233,219,53)"/><text x="382.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 1.44%)</title><rect x="379" y="196" width="17" height="15" fill="rgb(247,190,15)"/><text x="382.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 1.44%)</title><rect x="379" y="212" width="17" height="15" fill="rgb(244,108,37)"/><text x="382.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 1.44%)</title><rect x="379" y="228" width="17" height="15" fill="rgb(247,25,23)"/><text x="382.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.05%)</title><rect x="383" y="244" width="13" height="15" fill="rgb(253,30,50)"/><text x="386.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.05%)</title><rect x="383" y="260" width="13" height="15" fill="rgb(242,168,12)"/><text x="386.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.05%)</title><rect x="383" y="276" width="13" height="15" fill="rgb(236,108,37)"/><text x="386.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.05%)</title><rect x="383" y="292" width="13" height="15" fill="rgb(253,225,44)"/><text x="386.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.05%)</title><rect x="383" y="308" width="13" height="15" fill="rgb(233,122,9)"/><text x="386.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.05%)</title><rect x="383" y="324" width="13" height="15" fill="rgb(249,11,14)"/><text x="386.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.05%)</title><rect x="383" y="340" width="13" height="15" fill="rgb(214,118,6)"/><text x="386.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.05%)</title><rect x="383" y="356" width="13" height="15" fill="rgb(245,209,36)"/><text x="386.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.05%)</title><rect x="383" y="372" width="13" height="15" fill="rgb(230,10,46)"/><text x="386.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.05%)</title><rect x="383" y="388" width="13" height="15" fill="rgb(206,41,45)"/><text x="386.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.05%)</title><rect x="383" y="404" width="13" height="15" fill="rgb(235,124,37)"/><text x="386.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.05%)</title><rect x="383" y="420" width="13" height="15" fill="rgb(247,137,40)"/><text x="386.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.65%)</title><rect x="388" y="436" width="8" height="15" fill="rgb(205,218,23)"/><text x="391.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="452" width="8" height="15" fill="rgb(220,57,30)"/><text x="391.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.65%)</title><rect x="388" y="468" width="8" height="15" fill="rgb(232,4,1)"/><text x="391.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="484" width="8" height="15" fill="rgb(214,199,28)"/><text x="391.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="500" width="8" height="15" fill="rgb(222,167,36)"/><text x="391.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.65%)</title><rect x="388" y="516" width="8" height="15" fill="rgb(234,125,45)"/><text x="391.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.65%)</title><rect x="388" y="532" width="8" height="15" fill="rgb(242,77,3)"/><text x="391.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.65%)</title><rect x="388" y="548" width="8" height="15" fill="rgb(212,120,3)"/><text x="391.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="564" width="8" height="15" fill="rgb(223,206,42)"/><text x="391.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.65%)</title><rect x="388" y="580" width="8" height="15" fill="rgb(234,80,52)"/><text x="391.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="596" width="8" height="15" fill="rgb(248,32,0)"/><text x="391.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.65%)</title><rect x="388" y="612" width="8" height="15" fill="rgb(223,150,33)"/><text x="391.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.65%)</title><rect x="388" y="628" width="8" height="15" fill="rgb(237,133,39)"/><text x="391.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.65%)</title><rect x="388" y="644" width="8" height="15" fill="rgb(250,225,43)"/><text x="391.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="660" width="8" height="15" fill="rgb(245,185,4)"/><text x="391.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.65%)</title><rect x="388" y="676" width="8" height="15" fill="rgb(249,180,4)"/><text x="391.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="692" width="8" height="15" fill="rgb(225,70,20)"/><text x="391.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.65%)</title><rect x="388" y="708" width="8" height="15" fill="rgb(220,114,42)"/><text x="391.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.65%)</title><rect x="388" y="724" width="8" height="15" fill="rgb(205,198,34)"/><text x="391.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.65%)</title><rect x="388" y="740" width="8" height="15" fill="rgb(239,65,27)"/><text x="391.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="756" width="8" height="15" fill="rgb(248,43,36)"/><text x="391.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.65%)</title><rect x="388" y="772" width="8" height="15" fill="rgb(252,145,41)"/><text x="391.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="788" width="8" height="15" fill="rgb(243,201,1)"/><text x="391.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.65%)</title><rect x="388" y="804" width="8" height="15" fill="rgb(214,72,25)"/><text x="391.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.65%)</title><rect x="388" y="820" width="8" height="15" fill="rgb(235,73,4)"/><text x="391.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.65%)</title><rect x="388" y="836" width="8" height="15" fill="rgb(215,227,11)"/><text x="391.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="852" width="8" height="15" fill="rgb(243,222,13)"/><text x="391.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.65%)</title><rect x="388" y="868" width="8" height="15" fill="rgb(223,110,52)"/><text x="391.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="884" width="8" height="15" fill="rgb(230,73,19)"/><text x="391.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.65%)</title><rect x="388" y="900" width="8" height="15" fill="rgb(244,207,48)"/><text x="391.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="916" width="8" height="15" fill="rgb(224,158,43)"/><text x="391.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="932" width="8" height="15" fill="rgb(228,184,16)"/><text x="391.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.65%)</title><rect x="388" y="948" width="8" height="15" fill="rgb(208,80,15)"/><text x="391.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.65%)</title><rect x="388" y="964" width="8" height="15" fill="rgb(214,218,21)"/><text x="391.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.65%)</title><rect x="388" y="980" width="8" height="15" fill="rgb(224,52,49)"/><text x="391.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="996" width="8" height="15" fill="rgb(214,51,30)"/><text x="391.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.65%)</title><rect x="388" y="1012" width="8" height="15" fill="rgb(210,229,15)"/><text x="391.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.65%)</title><rect x="388" y="1028" width="8" height="15" fill="rgb(225,66,48)"/><text x="391.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.65%)</title><rect x="388" y="1044" width="8" height="15" fill="rgb(235,221,54)"/><text x="391.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.65%)</title><rect x="388" y="1060" width="8" height="15" fill="rgb(240,74,5)"/><text x="391.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.65%)</title><rect x="388" y="1076" width="8" height="15" fill="rgb(254,222,14)"/><text x="391.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.65%)</title><rect x="388" y="1092" width="8" height="15" fill="rgb(207,71,8)"/><text x="391.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.39%)</title><rect x="391" y="1108" width="5" height="15" fill="rgb(231,57,51)"/><text x="394.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.39%)</title><rect x="391" y="1124" width="5" height="15" fill="rgb(231,159,41)"/><text x="394.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="391" y="1140" width="5" height="15" fill="rgb(209,161,36)"/><text x="394.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="391" y="1156" width="5" height="15" fill="rgb(247,98,29)"/><text x="394.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="391" y="1172" width="5" height="15" fill="rgb(243,164,35)"/><text x="394.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="391" y="1188" width="5" height="15" fill="rgb(215,82,19)"/><text x="394.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="391" y="1204" width="5" height="15" fill="rgb(231,126,23)"/><text x="394.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="391" y="1220" width="5" height="15" fill="rgb(231,191,17)"/><text x="394.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.39%)</title><rect x="391" y="1236" width="5" height="15" fill="rgb(236,102,16)"/><text x="394.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.39%)</title><rect x="391" y="1252" width="5" height="15" fill="rgb(222,89,18)"/><text x="394.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="391" y="1268" width="5" height="15" fill="rgb(250,118,26)"/><text x="394.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="391" y="1284" width="5" height="15" fill="rgb(220,150,2)"/><text x="394.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="391" y="1300" width="5" height="15" fill="rgb(250,32,46)"/><text x="394.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="391" y="1316" width="5" height="15" fill="rgb(210,2,11)"/><text x="394.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="391" y="1332" width="5" height="15" fill="rgb(225,186,40)"/><text x="394.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="391" y="1348" width="5" height="15" fill="rgb(233,173,45)"/><text x="394.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.39%)</title><rect x="391" y="1364" width="5" height="15" fill="rgb(249,44,15)"/><text x="394.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="391" y="1380" width="5" height="15" fill="rgb(229,46,3)"/><text x="394.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="391" y="1396" width="5" height="15" fill="rgb(244,198,49)"/><text x="394.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="391" y="1412" width="5" height="15" fill="rgb(243,169,22)"/><text x="394.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="391" y="1428" width="5" height="15" fill="rgb(228,144,46)"/><text x="394.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="391" y="1444" width="5" height="15" fill="rgb(244,223,27)"/><text x="394.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.13%)</title><rect x="394" y="1460" width="2" height="15" fill="rgb(228,89,5)"/><text x="397.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="394" y="1476" width="2" height="15" fill="rgb(205,118,41)"/><text x="397.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="394" y="1492" width="2" height="15" fill="rgb(254,161,6)"/><text x="397.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="394" y="1508" width="2" height="15" fill="rgb(218,30,11)"/><text x="397.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="394" y="1524" width="2" height="15" fill="rgb(232,82,12)"/><text x="397.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="394" y="1540" width="2" height="15" fill="rgb(227,145,52)"/><text x="397.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.13%)</title><rect x="394" y="1556" width="2" height="15" fill="rgb(236,143,26)"/><text x="397.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.13%)</title><rect x="394" y="1572" width="2" height="15" fill="rgb(245,29,22)"/><text x="397.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="394" y="1588" width="2" height="15" fill="rgb(231,58,19)"/><text x="397.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="394" y="1604" width="2" height="15" fill="rgb(205,183,53)"/><text x="397.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="394" y="1620" width="2" height="15" fill="rgb(212,118,38)"/><text x="397.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="394" y="1636" width="2" height="15" fill="rgb(222,150,22)"/><text x="397.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="394" y="1652" width="2" height="15" fill="rgb(221,67,17)"/><text x="397.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.13%)</title><rect x="394" y="1668" width="2" height="15" fill="rgb(251,149,7)"/><text x="397.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="394" y="1684" width="2" height="15" fill="rgb(236,227,22)"/><text x="397.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="394" y="1700" width="2" height="15" fill="rgb(220,174,33)"/><text x="397.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="394" y="1716" width="2" height="15" fill="rgb(251,175,35)"/><text x="397.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="394" y="1732" width="2" height="15" fill="rgb(236,110,14)"/><text x="397.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="394" y="1748" width="2" height="15" fill="rgb(238,157,9)"/><text x="397.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:22) (1 samples, 0.13%)</title><rect x="394" y="1764" width="2" height="15" fill="rgb(229,9,22)"/><text x="397.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="394" y="1780" width="2" height="15" fill="rgb(215,165,50)"/><text x="397.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="394" y="1796" width="2" height="15" fill="rgb(219,177,22)"/><text x="397.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.13%)</title><rect x="394" y="1812" width="2" height="15" fill="rgb(223,102,26)"/><text x="397.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.13%)</title><rect x="394" y="1828" width="2" height="15" fill="rgb(220,186,7)"/><text x="397.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="394" y="1844" width="2" height="15" fill="rgb(230,39,40)"/><text x="397.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py:46) (1 samples, 0.13%)</title><rect x="394" y="1860" width="2" height="15" fill="rgb(230,5,14)"/><text x="397.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.13%)</title><rect x="394" y="1876" width="2" height="15" fill="rgb(251,184,28)"/><text x="397.00" y="1886.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.13%)</title><rect x="394" y="1892" width="2" height="15" fill="rgb(250,14,50)"/><text x="397.00" y="1902.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.13%)</title><rect x="394" y="1908" width="2" height="15" fill="rgb(227,95,53)"/><text x="397.00" y="1918.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.13%)</title><rect x="394" y="1924" width="2" height="15" fill="rgb(221,146,49)"/><text x="397.00" y="1934.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.13%)</title><rect x="394" y="1940" width="2" height="15" fill="rgb(248,152,8)"/><text x="397.00" y="1950.50"></text></g><g><title>_parse (sre_parse.py:549) (1 samples, 0.13%)</title><rect x="394" y="1956" width="2" height="15" fill="rgb(226,142,10)"/><text x="397.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.13%)</title><rect x="396" y="420" width="1" height="15" fill="rgb(207,84,26)"/><text x="399.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.13%)</title><rect x="396" y="436" width="1" height="15" fill="rgb(245,100,31)"/><text x="399.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.13%)</title><rect x="396" y="452" width="1" height="15" fill="rgb(235,196,10)"/><text x="399.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.13%)</title><rect x="396" y="468" width="1" height="15" fill="rgb(215,89,49)"/><text x="399.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.13%)</title><rect x="396" y="484" width="1" height="15" fill="rgb(242,116,40)"/><text x="399.00" y="494.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.13%)</title><rect x="396" y="500" width="1" height="15" fill="rgb(219,120,39)"/><text x="399.00" y="510.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:561) (1 samples, 0.13%)</title><rect x="396" y="516" width="1" height="15" fill="rgb(214,33,33)"/><text x="399.00" y="526.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.13%)</title><rect x="397" y="548" width="2" height="15" fill="rgb(230,82,49)"/><text x="400.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.13%)</title><rect x="397" y="564" width="2" height="15" fill="rgb(221,150,37)"/><text x="400.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.13%)</title><rect x="397" y="580" width="2" height="15" fill="rgb(230,78,31)"/><text x="400.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.13%)</title><rect x="397" y="596" width="2" height="15" fill="rgb(249,109,50)"/><text x="400.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.13%)</title><rect x="397" y="612" width="2" height="15" fill="rgb(228,141,15)"/><text x="400.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.13%)</title><rect x="397" y="628" width="2" height="15" fill="rgb(243,166,43)"/><text x="400.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.13%)</title><rect x="397" y="644" width="2" height="15" fill="rgb(215,139,37)"/><text x="400.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.13%)</title><rect x="397" y="660" width="2" height="15" fill="rgb(235,219,44)"/><text x="400.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.13%)</title><rect x="397" y="676" width="2" height="15" fill="rgb(220,205,22)"/><text x="400.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.13%)</title><rect x="397" y="692" width="2" height="15" fill="rgb(206,58,9)"/><text x="400.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.13%)</title><rect x="397" y="708" width="2" height="15" fill="rgb(214,138,29)"/><text x="400.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.13%)</title><rect x="397" y="724" width="2" height="15" fill="rgb(236,122,36)"/><text x="400.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.13%)</title><rect x="397" y="740" width="2" height="15" fill="rgb(229,186,52)"/><text x="400.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.13%)</title><rect x="397" y="756" width="2" height="15" fill="rgb(253,106,41)"/><text x="400.00" y="766.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.13%)</title><rect x="397" y="772" width="2" height="15" fill="rgb(217,173,23)"/><text x="400.00" y="782.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.13%)</title><rect x="397" y="788" width="2" height="15" fill="rgb(242,112,49)"/><text x="400.00" y="798.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.13%)</title><rect x="397" y="804" width="2" height="15" fill="rgb(218,81,40)"/><text x="400.00" y="814.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.13%)</title><rect x="397" y="820" width="2" height="15" fill="rgb(210,90,1)"/><text x="400.00" y="830.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.13%)</title><rect x="397" y="836" width="2" height="15" fill="rgb(208,201,35)"/><text x="400.00" y="846.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.13%)</title><rect x="397" y="852" width="2" height="15" fill="rgb(242,174,24)"/><text x="400.00" y="862.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.13%)</title><rect x="397" y="868" width="2" height="15" fill="rgb(244,83,7)"/><text x="400.00" y="878.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.13%)</title><rect x="397" y="884" width="2" height="15" fill="rgb(208,60,32)"/><text x="400.00" y="894.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.13%)</title><rect x="397" y="900" width="2" height="15" fill="rgb(242,4,28)"/><text x="400.00" y="910.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.13%)</title><rect x="397" y="916" width="2" height="15" fill="rgb(207,158,22)"/><text x="400.00" y="926.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.13%)</title><rect x="397" y="932" width="2" height="15" fill="rgb(208,214,8)"/><text x="400.00" y="942.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.13%)</title><rect x="397" y="948" width="2" height="15" fill="rgb(230,49,3)"/><text x="400.00" y="958.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.13%)</title><rect x="397" y="964" width="2" height="15" fill="rgb(253,84,38)"/><text x="400.00" y="974.50"></text></g><g><title>parse_unary (jinja2/parser.py:547) (1 samples, 0.13%)</title><rect x="397" y="980" width="2" height="15" fill="rgb(220,57,48)"/><text x="400.00" y="990.50"></text></g><g><title>parse_postfix (jinja2/parser.py:676) (1 samples, 0.13%)</title><rect x="397" y="996" width="2" height="15" fill="rgb(214,63,18)"/><text x="400.00" y="1006.50"></text></g><g><title>parse_call (jinja2/parser.py:754) (1 samples, 0.13%)</title><rect x="397" y="1012" width="2" height="15" fill="rgb(241,34,9)"/><text x="400.00" y="1022.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.13%)</title><rect x="397" y="1028" width="2" height="15" fill="rgb(252,218,47)"/><text x="400.00" y="1038.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.13%)</title><rect x="397" y="1044" width="2" height="15" fill="rgb(220,71,19)"/><text x="400.00" y="1054.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.13%)</title><rect x="397" y="1060" width="2" height="15" fill="rgb(212,21,35)"/><text x="400.00" y="1070.50"></text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.39%)</title><rect x="396" y="84" width="4" height="15" fill="rgb(245,126,18)"/><text x="399.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.39%)</title><rect x="396" y="100" width="4" height="15" fill="rgb(227,155,39)"/><text x="399.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (3 samples, 0.39%)</title><rect x="396" y="116" width="4" height="15" fill="rgb(245,179,38)"/><text x="399.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (3 samples, 0.39%)</title><rect x="396" y="132" width="4" height="15" fill="rgb(224,27,35)"/><text x="399.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (3 samples, 0.39%)</title><rect x="396" y="148" width="4" height="15" fill="rgb(208,222,35)"/><text x="399.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (3 samples, 0.39%)</title><rect x="396" y="164" width="4" height="15" fill="rgb(213,64,0)"/><text x="399.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (3 samples, 0.39%)</title><rect x="396" y="180" width="4" height="15" fill="rgb(219,110,21)"/><text x="399.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (3 samples, 0.39%)</title><rect x="396" y="196" width="4" height="15" fill="rgb(214,189,39)"/><text x="399.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="396" y="212" width="4" height="15" fill="rgb(245,7,46)"/><text x="399.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="396" y="228" width="4" height="15" fill="rgb(208,89,26)"/><text x="399.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="396" y="244" width="4" height="15" fill="rgb(232,178,35)"/><text x="399.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="396" y="260" width="4" height="15" fill="rgb(208,202,15)"/><text x="399.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="396" y="276" width="4" height="15" fill="rgb(216,48,2)"/><text x="399.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (3 samples, 0.39%)</title><rect x="396" y="292" width="4" height="15" fill="rgb(222,221,3)"/><text x="399.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="396" y="308" width="4" height="15" fill="rgb(207,114,21)"/><text x="399.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.39%)</title><rect x="396" y="324" width="4" height="15" fill="rgb(250,38,0)"/><text x="399.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.39%)</title><rect x="396" y="340" width="4" height="15" fill="rgb(254,77,5)"/><text x="399.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.39%)</title><rect x="396" y="356" width="4" height="15" fill="rgb(212,166,45)"/><text x="399.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.39%)</title><rect x="396" y="372" width="4" height="15" fill="rgb(247,83,19)"/><text x="399.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (3 samples, 0.39%)</title><rect x="396" y="388" width="4" height="15" fill="rgb(209,60,32)"/><text x="399.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.39%)</title><rect x="396" y="404" width="4" height="15" fill="rgb(209,79,32)"/><text x="399.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.26%)</title><rect x="397" y="420" width="3" height="15" fill="rgb(237,115,38)"/><text x="400.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.26%)</title><rect x="397" y="436" width="3" height="15" fill="rgb(240,11,26)"/><text x="400.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.26%)</title><rect x="397" y="452" width="3" height="15" fill="rgb(216,89,32)"/><text x="400.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.26%)</title><rect x="397" y="468" width="3" height="15" fill="rgb(220,170,22)"/><text x="400.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (2 samples, 0.26%)</title><rect x="397" y="484" width="3" height="15" fill="rgb(237,207,16)"/><text x="400.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (2 samples, 0.26%)</title><rect x="397" y="500" width="3" height="15" fill="rgb(219,42,18)"/><text x="400.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.26%)</title><rect x="397" y="516" width="3" height="15" fill="rgb(248,103,12)"/><text x="400.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.26%)</title><rect x="397" y="532" width="3" height="15" fill="rgb(226,153,41)"/><text x="400.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.13%)</title><rect x="399" y="548" width="1" height="15" fill="rgb(253,68,19)"/><text x="402.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.13%)</title><rect x="399" y="564" width="1" height="15" fill="rgb(253,95,11)"/><text x="402.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.13%)</title><rect x="399" y="580" width="1" height="15" fill="rgb(216,103,37)"/><text x="402.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="399" y="596" width="1" height="15" fill="rgb(227,67,35)"/><text x="402.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.13%)</title><rect x="399" y="612" width="1" height="15" fill="rgb(242,22,31)"/><text x="402.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="399" y="628" width="1" height="15" fill="rgb(243,114,5)"/><text x="402.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="399" y="644" width="1" height="15" fill="rgb(218,14,50)"/><text x="402.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.13%)</title><rect x="399" y="660" width="1" height="15" fill="rgb(208,81,24)"/><text x="402.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="399" y="676" width="1" height="15" fill="rgb(245,8,46)"/><text x="402.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="399" y="692" width="1" height="15" fill="rgb(225,201,22)"/><text x="402.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1172) (1 samples, 0.13%)</title><rect x="399" y="708" width="1" height="15" fill="rgb(219,20,1)"/><text x="402.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="399" y="724" width="1" height="15" fill="rgb(205,185,10)"/><text x="402.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="399" y="740" width="1" height="15" fill="rgb(235,212,23)"/><text x="402.00" y="750.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.13%)</title><rect x="399" y="756" width="1" height="15" fill="rgb(232,210,3)"/><text x="402.00" y="766.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.13%)</title><rect x="399" y="772" width="1" height="15" fill="rgb(247,141,45)"/><text x="402.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.13%)</title><rect x="399" y="788" width="1" height="15" fill="rgb(247,177,5)"/><text x="402.00" y="798.50"></text></g><g><title>visit_For (jinja2/compiler.py:1082) (1 samples, 0.13%)</title><rect x="399" y="804" width="1" height="15" fill="rgb(246,147,28)"/><text x="402.00" y="814.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.13%)</title><rect x="399" y="820" width="1" height="15" fill="rgb(217,192,48)"/><text x="402.00" y="830.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.13%)</title><rect x="399" y="836" width="1" height="15" fill="rgb(234,20,22)"/><text x="402.00" y="846.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.13%)</title><rect x="399" y="852" width="1" height="15" fill="rgb(241,54,14)"/><text x="402.00" y="862.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.13%)</title><rect x="399" y="868" width="1" height="15" fill="rgb(228,11,53)"/><text x="402.00" y="878.50"></text></g><g><title>iter_fields (jinja2/nodes.py:160) (1 samples, 0.13%)</title><rect x="399" y="884" width="1" height="15" fill="rgb(230,41,40)"/><text x="402.00" y="894.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.13%)</title><rect x="400" y="212" width="2" height="15" fill="rgb(227,55,35)"/><text x="403.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.13%)</title><rect x="400" y="228" width="2" height="15" fill="rgb(250,222,45)"/><text x="403.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.13%)</title><rect x="400" y="244" width="2" height="15" fill="rgb(225,197,40)"/><text x="403.00" y="254.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.13%)</title><rect x="402" y="244" width="1" height="15" fill="rgb(227,44,41)"/><text x="405.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.13%)</title><rect x="402" y="260" width="1" height="15" fill="rgb(230,43,23)"/><text x="405.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.13%)</title><rect x="402" y="276" width="1" height="15" fill="rgb(209,24,47)"/><text x="405.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.13%)</title><rect x="402" y="292" width="1" height="15" fill="rgb(238,49,38)"/><text x="405.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.13%)</title><rect x="402" y="308" width="1" height="15" fill="rgb(219,223,8)"/><text x="405.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.13%)</title><rect x="402" y="324" width="1" height="15" fill="rgb(208,209,22)"/><text x="405.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.13%)</title><rect x="402" y="340" width="1" height="15" fill="rgb(207,150,4)"/><text x="405.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.13%)</title><rect x="402" y="356" width="1" height="15" fill="rgb(212,141,2)"/><text x="405.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="402" y="372" width="1" height="15" fill="rgb(242,78,46)"/><text x="405.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.26%)</title><rect x="402" y="212" width="3" height="15" fill="rgb(244,222,31)"/><text x="405.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.26%)</title><rect x="402" y="228" width="3" height="15" fill="rgb(239,85,45)"/><text x="405.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.13%)</title><rect x="403" y="244" width="2" height="15" fill="rgb(206,43,28)"/><text x="406.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.13%)</title><rect x="403" y="260" width="2" height="15" fill="rgb(219,40,47)"/><text x="406.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.13%)</title><rect x="403" y="276" width="2" height="15" fill="rgb(235,164,49)"/><text x="406.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (1 samples, 0.13%)</title><rect x="403" y="292" width="2" height="15" fill="rgb(244,80,40)"/><text x="406.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 0.52%)</title><rect x="400" y="196" width="6" height="15" fill="rgb(242,134,52)"/><text x="403.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (1 samples, 0.13%)</title><rect x="405" y="212" width="1" height="15" fill="rgb(218,218,13)"/><text x="408.00" y="222.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.13%)</title><rect x="405" y="228" width="1" height="15" fill="rgb(244,25,3)"/><text x="408.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.13%)</title><rect x="405" y="244" width="1" height="15" fill="rgb(247,80,15)"/><text x="408.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.13%)</title><rect x="405" y="260" width="1" height="15" fill="rgb(239,131,43)"/><text x="408.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.13%)</title><rect x="405" y="276" width="1" height="15" fill="rgb(237,53,14)"/><text x="408.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.13%)</title><rect x="405" y="292" width="1" height="15" fill="rgb(236,59,25)"/><text x="408.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.13%)</title><rect x="405" y="308" width="1" height="15" fill="rgb(220,152,54)"/><text x="408.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.13%)</title><rect x="405" y="324" width="1" height="15" fill="rgb(227,146,51)"/><text x="408.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.13%)</title><rect x="405" y="340" width="1" height="15" fill="rgb(252,10,17)"/><text x="408.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.13%)</title><rect x="406" y="196" width="2" height="15" fill="rgb(232,113,40)"/><text x="409.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.13%)</title><rect x="406" y="212" width="2" height="15" fill="rgb(212,102,29)"/><text x="409.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (1 samples, 0.13%)</title><rect x="406" y="228" width="2" height="15" fill="rgb(231,111,44)"/><text x="409.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.13%)</title><rect x="406" y="244" width="2" height="15" fill="rgb(207,216,2)"/><text x="409.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.13%)</title><rect x="406" y="260" width="2" height="15" fill="rgb(241,80,35)"/><text x="409.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.13%)</title><rect x="406" y="276" width="2" height="15" fill="rgb(207,181,8)"/><text x="409.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.13%)</title><rect x="406" y="292" width="2" height="15" fill="rgb(239,205,15)"/><text x="409.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (6 samples, 0.79%)</title><rect x="400" y="180" width="10" height="15" fill="rgb(216,174,41)"/><text x="403.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (1 samples, 0.13%)</title><rect x="408" y="196" width="2" height="15" fill="rgb(240,109,36)"/><text x="411.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.13%)</title><rect x="408" y="212" width="2" height="15" fill="rgb(230,140,32)"/><text x="411.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (1 samples, 0.13%)</title><rect x="408" y="228" width="2" height="15" fill="rgb(212,128,41)"/><text x="411.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.13%)</title><rect x="408" y="244" width="2" height="15" fill="rgb(232,64,19)"/><text x="411.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.13%)</title><rect x="408" y="260" width="2" height="15" fill="rgb(244,101,18)"/><text x="411.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="408" y="276" width="2" height="15" fill="rgb(224,97,9)"/><text x="411.00" y="286.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:18) (7 samples, 0.92%)</title><rect x="400" y="100" width="11" height="15" fill="rgb(209,23,34)"/><text x="403.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 0.92%)</title><rect x="400" y="116" width="11" height="15" fill="rgb(231,103,30)"/><text x="403.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (7 samples, 0.92%)</title><rect x="400" y="132" width="11" height="15" fill="rgb(223,195,42)"/><text x="403.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (7 samples, 0.92%)</title><rect x="400" y="148" width="11" height="15" fill="rgb(210,178,4)"/><text x="403.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (7 samples, 0.92%)</title><rect x="400" y="164" width="11" height="15" fill="rgb(229,21,39)"/><text x="403.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.13%)</title><rect x="410" y="180" width="1" height="15" fill="rgb(225,207,8)"/><text x="413.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.13%)</title><rect x="413" y="164" width="1" height="15" fill="rgb(249,169,35)"/><text x="416.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (12 samples, 1.57%)</title><rect x="423" y="180" width="19" height="15" fill="rgb(218,219,27)"/><text x="426.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.39%)</title><rect x="437" y="196" width="5" height="15" fill="rgb(207,99,37)"/><text x="440.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:32) (1 samples, 0.13%)</title><rect x="448" y="212" width="2" height="15" fill="rgb(254,89,19)"/><text x="451.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:38) (1 samples, 0.13%)</title><rect x="450" y="212" width="1" height="15" fill="rgb(247,129,10)"/><text x="453.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.13%)</title><rect x="451" y="228" width="2" height="15" fill="rgb(209,76,53)"/><text x="454.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.13%)</title><rect x="451" y="244" width="2" height="15" fill="rgb(206,59,1)"/><text x="454.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (1 samples, 0.13%)</title><rect x="451" y="260" width="2" height="15" fill="rgb(216,167,33)"/><text x="454.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (2 samples, 0.26%)</title><rect x="451" y="212" width="3" height="15" fill="rgb(217,34,24)"/><text x="454.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.13%)</title><rect x="453" y="228" width="1" height="15" fill="rgb(234,56,39)"/><text x="456.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.13%)</title><rect x="453" y="244" width="1" height="15" fill="rgb(226,74,18)"/><text x="456.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.13%)</title><rect x="453" y="260" width="1" height="15" fill="rgb(252,41,4)"/><text x="456.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.13%)</title><rect x="454" y="244" width="2" height="15" fill="rgb(237,123,17)"/><text x="457.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.13%)</title><rect x="454" y="260" width="2" height="15" fill="rgb(231,196,52)"/><text x="457.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.13%)</title><rect x="454" y="276" width="2" height="15" fill="rgb(246,104,6)"/><text x="457.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (1 samples, 0.13%)</title><rect x="456" y="308" width="1" height="15" fill="rgb(212,101,26)"/><text x="459.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:478) (2 samples, 0.26%)</title><rect x="457" y="308" width="3" height="15" fill="rgb(247,86,2)"/><text x="460.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.13%)</title><rect x="460" y="324" width="2" height="15" fill="rgb(216,154,34)"/><text x="463.00" y="334.50"></text></g><g><title>0x7f0add7370a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(243,198,39)"/><text x="463.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (2 samples, 0.26%)</title><rect x="462" y="340" width="3" height="15" fill="rgb(248,56,5)"/><text x="465.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.13%)</title><rect x="465" y="340" width="2" height="15" fill="rgb(228,43,54)"/><text x="468.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (4 samples, 0.52%)</title><rect x="462" y="324" width="6" height="15" fill="rgb(209,44,50)"/><text x="465.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.13%)</title><rect x="467" y="340" width="1" height="15" fill="rgb(242,195,16)"/><text x="470.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (3 samples, 0.39%)</title><rect x="468" y="324" width="5" height="15" fill="rgb(228,229,19)"/><text x="471.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (2 samples, 0.26%)</title><rect x="470" y="340" width="3" height="15" fill="rgb(252,41,9)"/><text x="473.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (13 samples, 1.70%)</title><rect x="456" y="276" width="20" height="15" fill="rgb(230,34,9)"/><text x="459.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (13 samples, 1.70%)</title><rect x="456" y="292" width="20" height="15" fill="rgb(210,92,7)"/><text x="459.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (10 samples, 1.31%)</title><rect x="460" y="308" width="16" height="15" fill="rgb(213,86,54)"/><text x="463.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (2 samples, 0.26%)</title><rect x="473" y="324" width="3" height="15" fill="rgb(206,186,52)"/><text x="476.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:878) (1 samples, 0.13%)</title><rect x="476" y="292" width="1" height="15" fill="rgb(219,30,0)"/><text x="479.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:679) (1 samples, 0.13%)</title><rect x="477" y="308" width="2" height="15" fill="rgb(238,52,24)"/><text x="480.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (2 samples, 0.26%)</title><rect x="479" y="308" width="3" height="15" fill="rgb(210,196,13)"/><text x="482.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.13%)</title><rect x="482" y="308" width="2" height="15" fill="rgb(239,218,10)"/><text x="485.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:701) (1 samples, 0.13%)</title><rect x="484" y="308" width="1" height="15" fill="rgb(250,78,21)"/><text x="487.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (20 samples, 2.62%)</title><rect x="456" y="260" width="31" height="15" fill="rgb(243,26,15)"/><text x="459.00" y="270.50">Py..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (7 samples, 0.92%)</title><rect x="476" y="276" width="11" height="15" fill="rgb(233,152,26)"/><text x="479.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:884) (6 samples, 0.79%)</title><rect x="477" y="292" width="10" height="15" fill="rgb(207,39,23)"/><text x="480.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:703) (1 samples, 0.13%)</title><rect x="485" y="308" width="2" height="15" fill="rgb(216,112,31)"/><text x="488.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.13%)</title><rect x="487" y="292" width="1" height="15" fill="rgb(208,160,6)"/><text x="490.00" y="302.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:117) (2 samples, 0.26%)</title><rect x="488" y="340" width="3" height="15" fill="rgb(213,212,35)"/><text x="491.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (1 samples, 0.13%)</title><rect x="491" y="340" width="2" height="15" fill="rgb(210,157,14)"/><text x="494.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (26 samples, 3.40%)</title><rect x="454" y="228" width="40" height="15" fill="rgb(224,119,7)"/><text x="457.00" y="238.50">arr..</text></g><g><title>prepare_index (mapping.c:516) (25 samples, 3.27%)</title><rect x="456" y="244" width="38" height="15" fill="rgb(225,183,3)"/><text x="459.00" y="254.50">pre..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (5 samples, 0.65%)</title><rect x="487" y="260" width="7" height="15" fill="rgb(224,155,3)"/><text x="490.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (5 samples, 0.65%)</title><rect x="487" y="276" width="7" height="15" fill="rgb(205,118,51)"/><text x="490.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (4 samples, 0.52%)</title><rect x="488" y="292" width="6" height="15" fill="rgb(244,99,42)"/><text x="491.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (4 samples, 0.52%)</title><rect x="488" y="308" width="6" height="15" fill="rgb(240,110,40)"/><text x="491.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (4 samples, 0.52%)</title><rect x="488" y="324" width="6" height="15" fill="rgb(213,106,20)"/><text x="491.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.13%)</title><rect x="493" y="340" width="1" height="15" fill="rgb(252,102,36)"/><text x="496.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.13%)</title><rect x="494" y="228" width="2" height="15" fill="rgb(205,54,22)"/><text x="497.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.13%)</title><rect x="494" y="244" width="2" height="15" fill="rgb(219,169,38)"/><text x="497.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (28 samples, 3.66%)</title><rect x="454" y="212" width="44" height="15" fill="rgb(207,25,23)"/><text x="457.00" y="222.50">_run..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.13%)</title><rect x="496" y="228" width="2" height="15" fill="rgb(224,7,8)"/><text x="499.00" y="238.50"></text></g><g><title>0x7f0ade514dfb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="496" y="244" width="2" height="15" fill="rgb(226,83,5)"/><text x="499.00" y="254.50"></text></g><g><title>0x7f0ade513aa4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="496" y="260" width="2" height="15" fill="rgb(205,190,6)"/><text x="499.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.13%)</title><rect x="498" y="212" width="1" height="15" fill="rgb(212,41,46)"/><text x="501.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.13%)</title><rect x="498" y="228" width="1" height="15" fill="rgb(205,104,32)"/><text x="501.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.13%)</title><rect x="498" y="244" width="1" height="15" fill="rgb(205,143,26)"/><text x="501.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.13%)</title><rect x="498" y="260" width="1" height="15" fill="rgb(214,133,51)"/><text x="501.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1035) (1 samples, 0.13%)</title><rect x="498" y="276" width="1" height="15" fill="rgb(233,54,21)"/><text x="501.00" y="286.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.13%)</title><rect x="502" y="244" width="2" height="15" fill="rgb(226,229,32)"/><text x="505.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.13%)</title><rect x="502" y="260" width="2" height="15" fill="rgb(237,11,30)"/><text x="505.00" y="270.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (14 samples, 1.83%)</title><rect x="504" y="292" width="21" height="15" fill="rgb(220,65,20)"/><text x="507.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (16 samples, 2.09%)</title><rect x="504" y="276" width="24" height="15" fill="rgb(228,100,52)"/><text x="507.00" y="286.50">r..</text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:855) (2 samples, 0.26%)</title><rect x="525" y="292" width="3" height="15" fill="rgb(243,169,37)"/><text x="528.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:90) (1 samples, 0.13%)</title><rect x="528" y="276" width="2" height="15" fill="rgb(238,142,49)"/><text x="531.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (21 samples, 2.75%)</title><rect x="499" y="212" width="33" height="15" fill="rgb(207,83,41)"/><text x="502.00" y="222.50">_r..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (21 samples, 2.75%)</title><rect x="499" y="228" width="33" height="15" fill="rgb(217,111,33)"/><text x="502.00" y="238.50">&lt;l..</text></g><g><title>array_astype (methods.c:845) (18 samples, 2.36%)</title><rect x="504" y="244" width="28" height="15" fill="rgb(237,85,25)"/><text x="507.00" y="254.50">a..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (18 samples, 2.36%)</title><rect x="504" y="260" width="28" height="15" fill="rgb(238,144,24)"/><text x="507.00" y="270.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.13%)</title><rect x="530" y="276" width="2" height="15" fill="rgb(221,102,28)"/><text x="533.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:61) (1 samples, 0.13%)</title><rect x="530" y="292" width="2" height="15" fill="rgb(224,108,0)"/><text x="533.00" y="302.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.13%)</title><rect x="532" y="228" width="1" height="15" fill="rgb(218,115,49)"/><text x="535.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.13%)</title><rect x="532" y="244" width="1" height="15" fill="rgb(249,192,54)"/><text x="535.00" y="254.50"></text></g><g><title>0x7f0ade52a734 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="532" y="260" width="1" height="15" fill="rgb(247,175,37)"/><text x="535.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.13%)</title><rect x="533" y="260" width="2" height="15" fill="rgb(208,210,14)"/><text x="536.00" y="270.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.13%)</title><rect x="533" y="276" width="2" height="15" fill="rgb(232,171,45)"/><text x="536.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:623) (1 samples, 0.13%)</title><rect x="533" y="292" width="2" height="15" fill="rgb(250,85,7)"/><text x="536.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.26%)</title><rect x="533" y="228" width="3" height="15" fill="rgb(214,110,24)"/><text x="536.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.26%)</title><rect x="533" y="244" width="3" height="15" fill="rgb(206,149,22)"/><text x="536.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.13%)</title><rect x="535" y="260" width="1" height="15" fill="rgb(215,162,44)"/><text x="538.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.13%)</title><rect x="535" y="276" width="1" height="15" fill="rgb(254,229,1)"/><text x="538.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.13%)</title><rect x="535" y="292" width="1" height="15" fill="rgb(223,126,0)"/><text x="538.00" y="302.50"></text></g><g><title>0x7f0add736600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="535" y="308" width="1" height="15" fill="rgb(254,18,8)"/><text x="538.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (4 samples, 0.52%)</title><rect x="532" y="212" width="6" height="15" fill="rgb(231,38,5)"/><text x="535.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.13%)</title><rect x="536" y="228" width="2" height="15" fill="rgb(237,111,30)"/><text x="539.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.13%)</title><rect x="536" y="244" width="2" height="15" fill="rgb(237,215,34)"/><text x="539.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.13%)</title><rect x="536" y="260" width="2" height="15" fill="rgb(221,120,39)"/><text x="539.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.13%)</title><rect x="536" y="276" width="2" height="15" fill="rgb(210,161,47)"/><text x="539.00" y="286.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:196) (1 samples, 0.13%)</title><rect x="536" y="292" width="2" height="15" fill="rgb(222,159,32)"/><text x="539.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.13%)</title><rect x="538" y="260" width="1" height="15" fill="rgb(226,62,25)"/><text x="541.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.13%)</title><rect x="538" y="276" width="1" height="15" fill="rgb(214,215,13)"/><text x="541.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.13%)</title><rect x="538" y="292" width="1" height="15" fill="rgb(236,24,46)"/><text x="541.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.13%)</title><rect x="539" y="260" width="2" height="15" fill="rgb(246,19,46)"/><text x="542.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.13%)</title><rect x="539" y="276" width="2" height="15" fill="rgb(240,208,7)"/><text x="542.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.13%)</title><rect x="539" y="292" width="2" height="15" fill="rgb(252,171,29)"/><text x="542.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.13%)</title><rect x="539" y="308" width="2" height="15" fill="rgb(206,117,40)"/><text x="542.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.13%)</title><rect x="539" y="324" width="2" height="15" fill="rgb(224,194,37)"/><text x="542.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.13%)</title><rect x="539" y="340" width="2" height="15" fill="rgb(252,94,34)"/><text x="542.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.13%)</title><rect x="539" y="356" width="2" height="15" fill="rgb(223,45,7)"/><text x="542.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.13%)</title><rect x="541" y="292" width="1" height="15" fill="rgb(254,153,37)"/><text x="544.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.13%)</title><rect x="541" y="308" width="1" height="15" fill="rgb(253,192,37)"/><text x="544.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2832) (1 samples, 0.13%)</title><rect x="541" y="324" width="1" height="15" fill="rgb(232,225,8)"/><text x="544.00" y="334.50"></text></g><g><title>0x7f0ade534dae (libc-2.29.so) (1 samples, 0.13%)</title><rect x="542" y="356" width="2" height="15" fill="rgb(221,185,26)"/><text x="545.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.26%)</title><rect x="542" y="292" width="3" height="15" fill="rgb(250,47,36)"/><text x="545.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.26%)</title><rect x="542" y="308" width="3" height="15" fill="rgb(218,171,14)"/><text x="545.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.26%)</title><rect x="542" y="324" width="3" height="15" fill="rgb(239,134,38)"/><text x="545.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.26%)</title><rect x="542" y="340" width="3" height="15" fill="rgb(245,69,46)"/><text x="545.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.13%)</title><rect x="544" y="356" width="1" height="15" fill="rgb(215,99,49)"/><text x="547.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 0.79%)</title><rect x="538" y="244" width="9" height="15" fill="rgb(251,172,46)"/><text x="541.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.52%)</title><rect x="541" y="260" width="6" height="15" fill="rgb(245,90,27)"/><text x="544.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.52%)</title><rect x="541" y="276" width="6" height="15" fill="rgb(242,184,43)"/><text x="544.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.13%)</title><rect x="545" y="292" width="2" height="15" fill="rgb(231,129,9)"/><text x="548.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.13%)</title><rect x="545" y="308" width="2" height="15" fill="rgb(218,109,5)"/><text x="548.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.13%)</title><rect x="545" y="324" width="2" height="15" fill="rgb(215,227,2)"/><text x="548.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.13%)</title><rect x="545" y="340" width="2" height="15" fill="rgb(248,33,7)"/><text x="548.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.13%)</title><rect x="545" y="356" width="2" height="15" fill="rgb(226,223,40)"/><text x="548.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.13%)</title><rect x="547" y="244" width="2" height="15" fill="rgb(212,107,47)"/><text x="550.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.13%)</title><rect x="547" y="260" width="2" height="15" fill="rgb(240,22,4)"/><text x="550.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.13%)</title><rect x="547" y="276" width="2" height="15" fill="rgb(223,48,9)"/><text x="550.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (66 samples, 8.64%)</title><rect x="448" y="196" width="102" height="15" fill="rgb(224,185,33)"/><text x="451.00" y="206.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (8 samples, 1.05%)</title><rect x="538" y="212" width="12" height="15" fill="rgb(206,223,33)"/><text x="541.00" y="222.50"></text></g><g><title>array_add (number.c:330) (8 samples, 1.05%)</title><rect x="538" y="228" width="12" height="15" fill="rgb(205,91,46)"/><text x="541.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.13%)</title><rect x="549" y="244" width="1" height="15" fill="rgb(245,193,35)"/><text x="552.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:65) (1 samples, 0.13%)</title><rect x="550" y="228" width="2" height="15" fill="rgb(213,58,46)"/><text x="553.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.13%)</title><rect x="562" y="340" width="2" height="15" fill="rgb(216,49,47)"/><text x="565.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.13%)</title><rect x="564" y="356" width="2" height="15" fill="rgb(233,141,8)"/><text x="567.00" y="366.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.13%)</title><rect x="564" y="372" width="2" height="15" fill="rgb(214,146,41)"/><text x="567.00" y="382.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (9 samples, 1.18%)</title><rect x="553" y="260" width="14" height="15" fill="rgb(241,160,7)"/><text x="556.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (5 samples, 0.65%)</title><rect x="559" y="276" width="8" height="15" fill="rgb(222,3,45)"/><text x="562.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.52%)</title><rect x="561" y="292" width="6" height="15" fill="rgb(215,156,45)"/><text x="564.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (4 samples, 0.52%)</title><rect x="561" y="308" width="6" height="15" fill="rgb(239,6,11)"/><text x="564.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.39%)</title><rect x="562" y="324" width="5" height="15" fill="rgb(213,107,48)"/><text x="565.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.26%)</title><rect x="564" y="340" width="3" height="15" fill="rgb(216,176,46)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.13%)</title><rect x="566" y="356" width="1" height="15" fill="rgb(232,90,48)"/><text x="569.00" y="366.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.13%)</title><rect x="567" y="308" width="2" height="15" fill="rgb(219,40,36)"/><text x="570.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (13 samples, 1.70%)</title><rect x="550" y="196" width="20" height="15" fill="rgb(217,143,16)"/><text x="553.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (13 samples, 1.70%)</title><rect x="550" y="212" width="20" height="15" fill="rgb(236,191,18)"/><text x="553.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (12 samples, 1.57%)</title><rect x="552" y="228" width="18" height="15" fill="rgb(236,99,51)"/><text x="555.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (11 samples, 1.44%)</title><rect x="553" y="244" width="17" height="15" fill="rgb(236,10,32)"/><text x="556.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (2 samples, 0.26%)</title><rect x="567" y="260" width="3" height="15" fill="rgb(206,117,11)"/><text x="570.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (2 samples, 0.26%)</title><rect x="567" y="276" width="3" height="15" fill="rgb(216,71,23)"/><text x="570.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.26%)</title><rect x="567" y="292" width="3" height="15" fill="rgb(225,193,23)"/><text x="570.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.13%)</title><rect x="569" y="308" width="1" height="15" fill="rgb(242,39,4)"/><text x="572.00" y="318.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.13%)</title><rect x="569" y="324" width="1" height="15" fill="rgb(207,141,22)"/><text x="572.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.13%)</title><rect x="569" y="340" width="1" height="15" fill="rgb(250,10,51)"/><text x="572.00" y="350.50"></text></g><g><title>0x7f0add737020 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="569" y="356" width="1" height="15" fill="rgb(227,154,26)"/><text x="572.00" y="366.50"></text></g><g><title>0x7f0add7372e0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="570" y="324" width="2" height="15" fill="rgb(243,136,36)"/><text x="573.00" y="334.50"></text></g><g><title>0x7f0ade6601a0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="573" y="340" width="2" height="15" fill="rgb(250,23,34)"/><text x="576.00" y="350.50"></text></g><g><title>0x7f0ade693e71 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="575" y="340" width="3" height="15" fill="rgb(217,187,26)"/><text x="578.00" y="350.50"></text></g><g><title>0x7f0ade693e7e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="578" y="340" width="1" height="15" fill="rgb(226,222,17)"/><text x="581.00" y="350.50"></text></g><g><title>0x7f0ade693e9e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="579" y="340" width="2" height="15" fill="rgb(218,205,18)"/><text x="582.00" y="350.50"></text></g><g><title>0x7f0ade693ea2 (libm-2.29.so) (3 samples, 0.39%)</title><rect x="581" y="340" width="5" height="15" fill="rgb(219,165,25)"/><text x="584.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (12 samples, 1.57%)</title><rect x="570" y="228" width="19" height="15" fill="rgb(214,98,37)"/><text x="573.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.57%)</title><rect x="570" y="244" width="19" height="15" fill="rgb(227,38,24)"/><text x="573.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 1.57%)</title><rect x="570" y="260" width="19" height="15" fill="rgb(227,101,30)"/><text x="573.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 1.57%)</title><rect x="570" y="276" width="19" height="15" fill="rgb(249,108,7)"/><text x="573.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 1.57%)</title><rect x="570" y="292" width="19" height="15" fill="rgb(205,15,21)"/><text x="573.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (12 samples, 1.57%)</title><rect x="570" y="308" width="19" height="15" fill="rgb(216,104,5)"/><text x="573.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (11 samples, 1.44%)</title><rect x="572" y="324" width="17" height="15" fill="rgb(234,81,34)"/><text x="575.00" y="334.50"></text></g><g><title>0x7f0ade693ea6 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="586" y="340" width="3" height="15" fill="rgb(214,82,0)"/><text x="589.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.13%)</title><rect x="589" y="260" width="1" height="15" fill="rgb(248,57,1)"/><text x="592.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.13%)</title><rect x="589" y="276" width="1" height="15" fill="rgb(210,9,49)"/><text x="592.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:20) (2 samples, 0.26%)</title><rect x="589" y="228" width="3" height="15" fill="rgb(229,227,1)"/><text x="592.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.26%)</title><rect x="589" y="244" width="3" height="15" fill="rgb(235,190,21)"/><text x="592.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.13%)</title><rect x="590" y="260" width="2" height="15" fill="rgb(236,103,37)"/><text x="593.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.13%)</title><rect x="590" y="276" width="2" height="15" fill="rgb(213,212,18)"/><text x="593.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (1 samples, 0.13%)</title><rect x="592" y="228" width="1" height="15" fill="rgb(248,154,11)"/><text x="595.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.13%)</title><rect x="592" y="244" width="1" height="15" fill="rgb(241,71,23)"/><text x="595.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.13%)</title><rect x="592" y="260" width="1" height="15" fill="rgb(244,204,30)"/><text x="595.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.13%)</title><rect x="592" y="276" width="1" height="15" fill="rgb(214,23,27)"/><text x="595.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.13%)</title><rect x="592" y="292" width="1" height="15" fill="rgb(253,80,27)"/><text x="595.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.13%)</title><rect x="592" y="308" width="1" height="15" fill="rgb(254,203,6)"/><text x="595.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.13%)</title><rect x="592" y="324" width="1" height="15" fill="rgb(237,218,16)"/><text x="595.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.13%)</title><rect x="592" y="340" width="1" height="15" fill="rgb(212,190,47)"/><text x="595.00" y="350.50"></text></g><g><title>to_128 (npy_extint128.h:65) (1 samples, 0.13%)</title><rect x="592" y="356" width="1" height="15" fill="rgb(215,151,44)"/><text x="595.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.13%)</title><rect x="595" y="260" width="1" height="15" fill="rgb(205,10,49)"/><text x="598.00" y="270.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.13%)</title><rect x="595" y="276" width="1" height="15" fill="rgb(207,93,20)"/><text x="598.00" y="286.50"></text></g><g><title>0x7f0ade693e00 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="603" y="340" width="1" height="15" fill="rgb(248,118,50)"/><text x="606.00" y="350.50"></text></g><g><title>0x7f0ade693e37 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="604" y="340" width="2" height="15" fill="rgb(218,132,54)"/><text x="607.00" y="350.50"></text></g><g><title>0x7f0ade693e4e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="606" y="340" width="1" height="15" fill="rgb(214,182,34)"/><text x="609.00" y="350.50"></text></g><g><title>0x7f0ade693e62 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="607" y="340" width="3" height="15" fill="rgb(219,111,25)"/><text x="610.00" y="350.50"></text></g><g><title>0x7f0ade693ea2 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="610" y="340" width="3" height="15" fill="rgb(226,106,33)"/><text x="613.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (15 samples, 1.96%)</title><rect x="593" y="228" width="23" height="15" fill="rgb(223,18,14)"/><text x="596.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 1.83%)</title><rect x="595" y="244" width="21" height="15" fill="rgb(207,153,32)"/><text x="598.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 1.70%)</title><rect x="596" y="260" width="20" height="15" fill="rgb(254,39,18)"/><text x="599.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (13 samples, 1.70%)</title><rect x="596" y="276" width="20" height="15" fill="rgb(231,113,19)"/><text x="599.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (13 samples, 1.70%)</title><rect x="596" y="292" width="20" height="15" fill="rgb(239,78,52)"/><text x="599.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src:1602) (13 samples, 1.70%)</title><rect x="596" y="308" width="20" height="15" fill="rgb(235,14,36)"/><text x="599.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (13 samples, 1.70%)</title><rect x="596" y="324" width="20" height="15" fill="rgb(206,107,44)"/><text x="599.00" y="334.50"></text></g><g><title>0x7f0ade693ea6 (libm-2.29.so) (2 samples, 0.26%)</title><rect x="613" y="340" width="3" height="15" fill="rgb(234,157,28)"/><text x="616.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.13%)</title><rect x="616" y="308" width="2" height="15" fill="rgb(227,164,12)"/><text x="619.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.13%)</title><rect x="616" y="324" width="2" height="15" fill="rgb(216,131,14)"/><text x="619.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.13%)</title><rect x="616" y="340" width="2" height="15" fill="rgb(221,178,2)"/><text x="619.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.13%)</title><rect x="616" y="356" width="2" height="15" fill="rgb(216,106,32)"/><text x="619.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.13%)</title><rect x="616" y="372" width="2" height="15" fill="rgb(251,16,31)"/><text x="619.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.13%)</title><rect x="616" y="388" width="2" height="15" fill="rgb(236,225,47)"/><text x="619.00" y="398.50"></text></g><g><title>0x7f0ade5f2fa0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="616" y="404" width="2" height="15" fill="rgb(235,50,30)"/><text x="619.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.13%)</title><rect x="618" y="356" width="2" height="15" fill="rgb(232,174,48)"/><text x="621.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.13%)</title><rect x="618" y="372" width="2" height="15" fill="rgb(206,80,37)"/><text x="621.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.13%)</title><rect x="618" y="388" width="2" height="15" fill="rgb(253,26,46)"/><text x="621.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:52) (1 samples, 0.13%)</title><rect x="618" y="404" width="2" height="15" fill="rgb(210,67,41)"/><text x="621.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.13%)</title><rect x="618" y="420" width="2" height="15" fill="rgb(243,99,38)"/><text x="621.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.13%)</title><rect x="620" y="372" width="1" height="15" fill="rgb(245,4,45)"/><text x="623.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1178) (1 samples, 0.13%)</title><rect x="620" y="388" width="1" height="15" fill="rgb(244,50,52)"/><text x="623.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.26%)</title><rect x="620" y="356" width="3" height="15" fill="rgb(254,199,28)"/><text x="623.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.13%)</title><rect x="621" y="372" width="2" height="15" fill="rgb(235,14,18)"/><text x="624.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1698) (1 samples, 0.13%)</title><rect x="621" y="388" width="2" height="15" fill="rgb(247,187,40)"/><text x="624.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:568) (1 samples, 0.13%)</title><rect x="623" y="356" width="1" height="15" fill="rgb(217,104,0)"/><text x="626.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.26%)</title><rect x="624" y="388" width="3" height="15" fill="rgb(254,95,35)"/><text x="627.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.13%)</title><rect x="626" y="404" width="1" height="15" fill="rgb(248,15,1)"/><text x="629.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:195) (1 samples, 0.13%)</title><rect x="627" y="388" width="2" height="15" fill="rgb(233,114,36)"/><text x="630.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.13%)</title><rect x="629" y="388" width="1" height="15" fill="rgb(225,67,41)"/><text x="632.00" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 1.31%)</title><rect x="616" y="244" width="16" height="15" fill="rgb(249,32,49)"/><text x="619.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 1.31%)</title><rect x="616" y="260" width="16" height="15" fill="rgb(231,39,47)"/><text x="619.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (10 samples, 1.31%)</title><rect x="616" y="276" width="16" height="15" fill="rgb(217,90,42)"/><text x="619.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (10 samples, 1.31%)</title><rect x="616" y="292" width="16" height="15" fill="rgb(223,193,31)"/><text x="619.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.18%)</title><rect x="618" y="308" width="14" height="15" fill="rgb(234,136,12)"/><text x="621.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.18%)</title><rect x="618" y="324" width="14" height="15" fill="rgb(249,85,21)"/><text x="621.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.18%)</title><rect x="618" y="340" width="14" height="15" fill="rgb(253,96,29)"/><text x="621.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.65%)</title><rect x="624" y="356" width="8" height="15" fill="rgb(221,131,47)"/><text x="627.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 0.65%)</title><rect x="624" y="372" width="8" height="15" fill="rgb(214,149,42)"/><text x="627.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.13%)</title><rect x="630" y="388" width="2" height="15" fill="rgb(222,119,30)"/><text x="633.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.13%)</title><rect x="632" y="276" width="1" height="15" fill="rgb(238,195,24)"/><text x="635.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.13%)</title><rect x="632" y="292" width="1" height="15" fill="rgb(217,106,53)"/><text x="635.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.13%)</title><rect x="632" y="308" width="1" height="15" fill="rgb(216,58,43)"/><text x="635.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.13%)</title><rect x="632" y="324" width="1" height="15" fill="rgb(244,32,19)"/><text x="635.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.13%)</title><rect x="632" y="340" width="1" height="15" fill="rgb(236,174,7)"/><text x="635.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.13%)</title><rect x="632" y="356" width="1" height="15" fill="rgb(245,32,31)"/><text x="635.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="632" y="372" width="1" height="15" fill="rgb(253,127,1)"/><text x="635.00" y="382.50"></text></g><g><title>0x7f0ade515d8a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="632" y="388" width="1" height="15" fill="rgb(205,88,31)"/><text x="635.00" y="398.50"></text></g><g><title>0x7f0ade696964 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="635" y="324" width="2" height="15" fill="rgb(220,85,3)"/><text x="638.00" y="334.50"></text></g><g><title>0x7f0ade696979 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="637" y="324" width="1" height="15" fill="rgb(229,167,7)"/><text x="640.00" y="334.50"></text></g><g><title>0x7f0ade696a04 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="638" y="324" width="2" height="15" fill="rgb(224,25,31)"/><text x="641.00" y="334.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (5 samples, 0.65%)</title><rect x="633" y="308" width="8" height="15" fill="rgb(225,35,1)"/><text x="636.00" y="318.50"></text></g><g><title>0x7f0ade696a21 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="640" y="324" width="1" height="15" fill="rgb(242,140,8)"/><text x="643.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (17 samples, 2.23%)</title><rect x="616" y="228" width="27" height="15" fill="rgb(238,111,37)"/><text x="619.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.92%)</title><rect x="632" y="244" width="11" height="15" fill="rgb(211,129,1)"/><text x="635.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 0.92%)</title><rect x="632" y="260" width="11" height="15" fill="rgb(240,33,51)"/><text x="635.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (6 samples, 0.79%)</title><rect x="633" y="276" width="10" height="15" fill="rgb(229,49,10)"/><text x="636.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (6 samples, 0.79%)</title><rect x="633" y="292" width="10" height="15" fill="rgb(232,78,21)"/><text x="636.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1604) (1 samples, 0.13%)</title><rect x="641" y="308" width="2" height="15" fill="rgb(219,8,31)"/><text x="644.00" y="318.50"></text></g><g><title>npy_logf (npy_math_internal.h.src:469) (1 samples, 0.13%)</title><rect x="641" y="324" width="2" height="15" fill="rgb(209,190,12)"/><text x="644.00" y="334.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.13%)</title><rect x="644" y="276" width="2" height="15" fill="rgb(251,54,10)"/><text x="647.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.13%)</title><rect x="646" y="308" width="1" height="15" fill="rgb(241,156,22)"/><text x="649.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.13%)</title><rect x="646" y="324" width="1" height="15" fill="rgb(221,5,32)"/><text x="649.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.13%)</title><rect x="646" y="340" width="1" height="15" fill="rgb(232,84,4)"/><text x="649.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.13%)</title><rect x="646" y="356" width="1" height="15" fill="rgb(247,154,30)"/><text x="649.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.13%)</title><rect x="646" y="372" width="1" height="15" fill="rgb(251,102,10)"/><text x="649.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.13%)</title><rect x="646" y="388" width="1" height="15" fill="rgb(209,21,2)"/><text x="649.00" y="398.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.13%)</title><rect x="647" y="324" width="2" height="15" fill="rgb(247,71,43)"/><text x="650.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (52 samples, 6.81%)</title><rect x="570" y="196" width="80" height="15" fill="rgb(231,62,2)"/><text x="573.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (52 samples, 6.81%)</title><rect x="570" y="212" width="80" height="15" fill="rgb(241,2,30)"/><text x="573.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (5 samples, 0.65%)</title><rect x="643" y="228" width="7" height="15" fill="rgb(240,205,37)"/><text x="646.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 0.52%)</title><rect x="644" y="244" width="6" height="15" fill="rgb(227,89,1)"/><text x="647.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.52%)</title><rect x="644" y="260" width="6" height="15" fill="rgb(231,171,54)"/><text x="647.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 0.39%)</title><rect x="646" y="276" width="4" height="15" fill="rgb(218,140,24)"/><text x="649.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.39%)</title><rect x="646" y="292" width="4" height="15" fill="rgb(252,164,10)"/><text x="649.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.26%)</title><rect x="647" y="308" width="3" height="15" fill="rgb(208,207,3)"/><text x="650.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.13%)</title><rect x="649" y="324" width="1" height="15" fill="rgb(212,147,16)"/><text x="652.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.13%)</title><rect x="649" y="340" width="1" height="15" fill="rgb(229,168,23)"/><text x="652.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.13%)</title><rect x="649" y="356" width="1" height="15" fill="rgb(210,153,28)"/><text x="652.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.13%)</title><rect x="649" y="372" width="1" height="15" fill="rgb(230,113,26)"/><text x="652.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.13%)</title><rect x="649" y="388" width="1" height="15" fill="rgb(241,136,17)"/><text x="652.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2732) (1 samples, 0.13%)</title><rect x="649" y="404" width="1" height="15" fill="rgb(243,63,48)"/><text x="652.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.13%)</title><rect x="650" y="228" width="2" height="15" fill="rgb(248,177,48)"/><text x="653.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.13%)</title><rect x="650" y="244" width="2" height="15" fill="rgb(235,162,36)"/><text x="653.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.13%)</title><rect x="650" y="260" width="2" height="15" fill="rgb(217,78,50)"/><text x="653.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.13%)</title><rect x="650" y="276" width="2" height="15" fill="rgb(218,153,33)"/><text x="653.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.13%)</title><rect x="652" y="292" width="2" height="15" fill="rgb(212,81,28)"/><text x="655.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.13%)</title><rect x="652" y="308" width="2" height="15" fill="rgb(239,207,41)"/><text x="655.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.13%)</title><rect x="654" y="356" width="1" height="15" fill="rgb(224,25,47)"/><text x="657.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.13%)</title><rect x="654" y="372" width="1" height="15" fill="rgb(223,86,31)"/><text x="657.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (2 samples, 0.26%)</title><rect x="654" y="308" width="3" height="15" fill="rgb(209,70,37)"/><text x="657.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (2 samples, 0.26%)</title><rect x="654" y="324" width="3" height="15" fill="rgb(223,195,28)"/><text x="657.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.26%)</title><rect x="654" y="340" width="3" height="15" fill="rgb(210,47,20)"/><text x="657.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.13%)</title><rect x="655" y="356" width="2" height="15" fill="rgb(232,123,47)"/><text x="658.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.13%)</title><rect x="655" y="372" width="2" height="15" fill="rgb(242,130,18)"/><text x="658.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.13%)</title><rect x="655" y="388" width="2" height="15" fill="rgb(205,126,42)"/><text x="658.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.13%)</title><rect x="655" y="404" width="2" height="15" fill="rgb(232,28,24)"/><text x="658.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="655" y="420" width="2" height="15" fill="rgb(253,132,30)"/><text x="658.00" y="430.50"></text></g><g><title>0x7f0ade515dd6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="655" y="436" width="2" height="15" fill="rgb(207,193,29)"/><text x="658.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 0.52%)</title><rect x="652" y="276" width="6" height="15" fill="rgb(232,192,22)"/><text x="655.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.39%)</title><rect x="654" y="292" width="4" height="15" fill="rgb(240,202,24)"/><text x="657.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.13%)</title><rect x="657" y="308" width="1" height="15" fill="rgb(227,93,24)"/><text x="660.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.13%)</title><rect x="657" y="324" width="1" height="15" fill="rgb(213,188,29)"/><text x="660.00" y="334.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.13%)</title><rect x="657" y="340" width="1" height="15" fill="rgb(254,155,25)"/><text x="660.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.13%)</title><rect x="658" y="276" width="2" height="15" fill="rgb(212,62,2)"/><text x="661.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.13%)</title><rect x="658" y="292" width="2" height="15" fill="rgb(243,60,46)"/><text x="661.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:981) (1 samples, 0.13%)</title><rect x="660" y="324" width="1" height="15" fill="rgb(223,46,42)"/><text x="663.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.13%)</title><rect x="660" y="340" width="1" height="15" fill="rgb(244,102,47)"/><text x="663.00" y="350.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:983) (1 samples, 0.13%)</title><rect x="661" y="324" width="2" height="15" fill="rgb(220,25,42)"/><text x="664.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.13%)</title><rect x="661" y="340" width="2" height="15" fill="rgb(254,117,25)"/><text x="664.00" y="350.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:795) (1 samples, 0.13%)</title><rect x="663" y="340" width="1" height="15" fill="rgb(224,228,17)"/><text x="666.00" y="350.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h:931) (1 samples, 0.13%)</title><rect x="663" y="356" width="1" height="15" fill="rgb(226,229,10)"/><text x="666.00" y="366.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:796) (1 samples, 0.13%)</title><rect x="664" y="340" width="2" height="15" fill="rgb(241,126,14)"/><text x="667.00" y="350.50"></text></g><g><title>_mm_packs_epi16 (emmintrin.h:925) (1 samples, 0.13%)</title><rect x="664" y="356" width="2" height="15" fill="rgb(229,98,0)"/><text x="667.00" y="366.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (5 samples, 0.65%)</title><rect x="660" y="292" width="7" height="15" fill="rgb(218,170,45)"/><text x="663.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (5 samples, 0.65%)</title><rect x="660" y="308" width="7" height="15" fill="rgb(253,10,46)"/><text x="663.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:985) (3 samples, 0.39%)</title><rect x="663" y="324" width="4" height="15" fill="rgb(229,46,16)"/><text x="666.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:802) (1 samples, 0.13%)</title><rect x="666" y="340" width="1" height="15" fill="rgb(231,223,18)"/><text x="669.00" y="350.50"></text></g><g><title>_mm_and_si128 (emmintrin.h:1232) (1 samples, 0.13%)</title><rect x="666" y="356" width="1" height="15" fill="rgb(205,68,43)"/><text x="669.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (12 samples, 1.57%)</title><rect x="650" y="196" width="19" height="15" fill="rgb(213,177,2)"/><text x="653.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (12 samples, 1.57%)</title><rect x="650" y="212" width="19" height="15" fill="rgb(236,19,7)"/><text x="653.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.44%)</title><rect x="652" y="228" width="17" height="15" fill="rgb(224,176,50)"/><text x="655.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.44%)</title><rect x="652" y="244" width="17" height="15" fill="rgb(236,92,32)"/><text x="655.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.44%)</title><rect x="652" y="260" width="17" height="15" fill="rgb(248,87,8)"/><text x="655.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 0.79%)</title><rect x="660" y="276" width="9" height="15" fill="rgb(226,75,2)"/><text x="663.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.13%)</title><rect x="667" y="292" width="2" height="15" fill="rgb(208,137,44)"/><text x="670.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.13%)</title><rect x="667" y="308" width="2" height="15" fill="rgb(243,106,12)"/><text x="670.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (1 samples, 0.13%)</title><rect x="669" y="228" width="2" height="15" fill="rgb(237,147,9)"/><text x="672.00" y="238.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2424) (1 samples, 0.13%)</title><rect x="671" y="324" width="1" height="15" fill="rgb(205,29,12)"/><text x="674.00" y="334.50"></text></g><g><title>0x7f0ade534de6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="672" y="356" width="2" height="15" fill="rgb(216,177,34)"/><text x="675.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.39%)</title><rect x="671" y="292" width="4" height="15" fill="rgb(210,116,21)"/><text x="674.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.39%)</title><rect x="671" y="308" width="4" height="15" fill="rgb(215,166,44)"/><text x="674.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.26%)</title><rect x="672" y="324" width="3" height="15" fill="rgb(237,6,38)"/><text x="675.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.26%)</title><rect x="672" y="340" width="3" height="15" fill="rgb(237,77,48)"/><text x="675.00" y="350.50"></text></g><g><title>0x7f0ade534ef4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="674" y="356" width="1" height="15" fill="rgb(211,111,2)"/><text x="677.00" y="366.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:600) (1 samples, 0.13%)</title><rect x="675" y="340" width="2" height="15" fill="rgb(242,43,29)"/><text x="678.00" y="350.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:603) (2 samples, 0.26%)</title><rect x="677" y="340" width="3" height="15" fill="rgb(251,228,21)"/><text x="680.00" y="350.50"></text></g><g><title>_mm_add_ps (xmmintrin.h:157) (2 samples, 0.26%)</title><rect x="677" y="356" width="3" height="15" fill="rgb(222,34,15)"/><text x="680.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (6 samples, 0.79%)</title><rect x="675" y="308" width="9" height="15" fill="rgb(221,29,46)"/><text x="678.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (6 samples, 0.79%)</title><rect x="675" y="324" width="9" height="15" fill="rgb(233,13,7)"/><text x="678.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (3 samples, 0.39%)</title><rect x="680" y="340" width="4" height="15" fill="rgb(225,196,13)"/><text x="683.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (3 samples, 0.39%)</title><rect x="680" y="356" width="4" height="15" fill="rgb(233,92,44)"/><text x="683.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2247) (1 samples, 0.13%)</title><rect x="684" y="324" width="2" height="15" fill="rgb(229,132,12)"/><text x="687.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (11 samples, 1.44%)</title><rect x="671" y="228" width="17" height="15" fill="rgb(217,1,1)"/><text x="674.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.44%)</title><rect x="671" y="244" width="17" height="15" fill="rgb(249,158,27)"/><text x="674.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 1.44%)</title><rect x="671" y="260" width="17" height="15" fill="rgb(217,84,5)"/><text x="674.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 1.44%)</title><rect x="671" y="276" width="17" height="15" fill="rgb(254,162,26)"/><text x="674.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 1.05%)</title><rect x="675" y="292" width="13" height="15" fill="rgb(252,6,50)"/><text x="678.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:322) (2 samples, 0.26%)</title><rect x="684" y="308" width="4" height="15" fill="rgb(225,112,47)"/><text x="687.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.13%)</title><rect x="686" y="324" width="2" height="15" fill="rgb(229,67,3)"/><text x="689.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.13%)</title><rect x="686" y="340" width="2" height="15" fill="rgb(209,54,49)"/><text x="689.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.13%)</title><rect x="688" y="276" width="1" height="15" fill="rgb(242,52,29)"/><text x="691.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.13%)</title><rect x="688" y="292" width="1" height="15" fill="rgb(233,226,51)"/><text x="691.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.13%)</title><rect x="688" y="308" width="1" height="15" fill="rgb(219,126,4)"/><text x="691.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.13%)</title><rect x="688" y="324" width="1" height="15" fill="rgb(235,100,41)"/><text x="691.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.13%)</title><rect x="689" y="276" width="2" height="15" fill="rgb(224,210,29)"/><text x="692.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.13%)</title><rect x="689" y="292" width="2" height="15" fill="rgb(205,117,18)"/><text x="692.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src:1755) (1 samples, 0.13%)</title><rect x="689" y="308" width="2" height="15" fill="rgb(207,2,0)"/><text x="692.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src:250) (1 samples, 0.13%)</title><rect x="689" y="324" width="2" height="15" fill="rgb(239,24,51)"/><text x="692.00" y="334.50"></text></g><g><title>sse2_binary_subtract_FLOAT (simd.inc.src:591) (1 samples, 0.13%)</title><rect x="689" y="340" width="2" height="15" fill="rgb(221,218,29)"/><text x="692.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.13%)</title><rect x="691" y="308" width="1" height="15" fill="rgb(235,40,11)"/><text x="694.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:775) (1 samples, 0.13%)</title><rect x="691" y="324" width="1" height="15" fill="rgb(221,127,2)"/><text x="694.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.26%)</title><rect x="691" y="292" width="3" height="15" fill="rgb(238,107,34)"/><text x="694.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.13%)</title><rect x="692" y="308" width="2" height="15" fill="rgb(215,38,10)"/><text x="695.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.13%)</title><rect x="692" y="324" width="2" height="15" fill="rgb(213,3,35)"/><text x="695.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2482) (1 samples, 0.13%)</title><rect x="692" y="340" width="2" height="15" fill="rgb(208,116,31)"/><text x="695.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1559) (1 samples, 0.13%)</title><rect x="694" y="292" width="1" height="15" fill="rgb(247,197,16)"/><text x="697.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.13%)</title><rect x="695" y="340" width="2" height="15" fill="rgb(218,132,22)"/><text x="698.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.26%)</title><rect x="695" y="292" width="3" height="15" fill="rgb(248,24,50)"/><text x="698.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.26%)</title><rect x="695" y="308" width="3" height="15" fill="rgb(229,102,39)"/><text x="698.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.26%)</title><rect x="695" y="324" width="3" height="15" fill="rgb(230,176,41)"/><text x="698.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.13%)</title><rect x="697" y="340" width="1" height="15" fill="rgb(252,40,11)"/><text x="700.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (9 samples, 1.18%)</title><rect x="688" y="228" width="13" height="15" fill="rgb(211,136,49)"/><text x="691.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.18%)</title><rect x="688" y="244" width="13" height="15" fill="rgb(232,190,0)"/><text x="691.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.18%)</title><rect x="688" y="260" width="13" height="15" fill="rgb(216,138,31)"/><text x="691.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 0.92%)</title><rect x="691" y="276" width="10" height="15" fill="rgb(217,146,0)"/><text x="694.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.26%)</title><rect x="698" y="292" width="3" height="15" fill="rgb(234,21,6)"/><text x="701.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="700" y="308" width="1" height="15" fill="rgb(207,183,47)"/><text x="703.00" y="318.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.13%)</title><rect x="701" y="244" width="2" height="15" fill="rgb(243,141,34)"/><text x="704.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:28) (1 samples, 0.13%)</title><rect x="703" y="244" width="2" height="15" fill="rgb(240,223,17)"/><text x="706.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (16 samples, 2.09%)</title><rect x="705" y="276" width="24" height="15" fill="rgb(220,158,18)"/><text x="708.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (16 samples, 2.09%)</title><rect x="705" y="292" width="24" height="15" fill="rgb(249,119,1)"/><text x="708.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (16 samples, 2.09%)</title><rect x="705" y="308" width="24" height="15" fill="rgb(217,64,39)"/><text x="708.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (16 samples, 2.09%)</title><rect x="705" y="324" width="24" height="15" fill="rgb(252,24,45)"/><text x="708.00" y="334.50">c..</text></g><g><title>gemm (cblasfuncs.c:40) (16 samples, 2.09%)</title><rect x="705" y="340" width="24" height="15" fill="rgb(246,133,42)"/><text x="708.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.09%)</title><rect x="705" y="356" width="24" height="15" fill="rgb(244,182,19)"/><text x="708.00" y="366.50">c..</text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.09%)</title><rect x="705" y="372" width="24" height="15" fill="rgb(252,77,52)"/><text x="708.00" y="382.50">s..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 1.83%)</title><rect x="708" y="388" width="21" height="15" fill="rgb(232,192,18)"/><text x="711.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.26%)</title><rect x="729" y="276" width="3" height="15" fill="rgb(249,16,3)"/><text x="732.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (207 samples, 27.09%)</title><rect x="442" y="180" width="320" height="15" fill="rgb(218,126,6)"/><text x="445.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (60 samples, 7.85%)</title><rect x="669" y="196" width="93" height="15" fill="rgb(230,97,0)"/><text x="672.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (60 samples, 7.85%)</title><rect x="669" y="212" width="93" height="15" fill="rgb(213,127,24)"/><text x="672.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (39 samples, 5.10%)</title><rect x="701" y="228" width="61" height="15" fill="rgb(214,95,51)"/><text x="704.00" y="238.50">_run (..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (37 samples, 4.84%)</title><rect x="705" y="244" width="57" height="15" fill="rgb(253,227,44)"/><text x="708.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (37 samples, 4.84%)</title><rect x="705" y="260" width="57" height="15" fill="rgb(228,92,0)"/><text x="708.00" y="270.50">dot (&lt;..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 2.49%)</title><rect x="732" y="276" width="30" height="15" fill="rgb(211,83,13)"/><text x="735.00" y="286.50">sg..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.39%)</title><rect x="762" y="180" width="4" height="15" fill="rgb(229,223,23)"/><text x="765.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.39%)</title><rect x="766" y="180" width="5" height="15" fill="rgb(232,137,21)"/><text x="769.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.13%)</title><rect x="771" y="180" width="1" height="15" fill="rgb(244,78,26)"/><text x="774.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 0.65%)</title><rect x="772" y="180" width="8" height="15" fill="rgb(239,170,42)"/><text x="775.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (238 samples, 31.15%)</title><rect x="414" y="164" width="368" height="15" fill="rgb(244,159,39)"/><text x="417.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.13%)</title><rect x="780" y="180" width="2" height="15" fill="rgb(221,102,22)"/><text x="783.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:45) (251 samples, 32.85%)</title><rect x="396" y="52" width="387" height="15" fill="rgb(217,201,51)"/><text x="399.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_..</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:44) (251 samples, 32.85%)</title><rect x="396" y="68" width="387" height="15" fill="rgb(232,199,27)"/><text x="399.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1000_50..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:29) (248 samples, 32.46%)</title><rect x="400" y="84" width="383" height="15" fill="rgb(237,79,12)"/><text x="403.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000_5..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:23) (241 samples, 31.54%)</title><rect x="411" y="100" width="372" height="15" fill="rgb(227,5,38)"/><text x="414.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_50_12..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (241 samples, 31.54%)</title><rect x="411" y="116" width="372" height="15" fill="rgb(224,169,36)"/><text x="414.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (241 samples, 31.54%)</title><rect x="411" y="132" width="372" height="15" fill="rgb(217,120,53)"/><text x="414.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (240 samples, 31.41%)</title><rect x="413" y="148" width="370" height="15" fill="rgb(225,99,30)"/><text x="416.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.13%)</title><rect x="782" y="164" width="1" height="15" fill="rgb(208,40,2)"/><text x="785.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.13%)</title><rect x="782" y="180" width="1" height="15" fill="rgb(251,17,39)"/><text x="785.00" y="190.50"></text></g><g><title>0x7f0a9e557ff9 (?) (1 samples, 0.13%)</title><rect x="785" y="212" width="1" height="15" fill="rgb(211,19,24)"/><text x="788.00" y="222.50"></text></g><g><title>0x7f0a9e552ef6 (?) (1 samples, 0.13%)</title><rect x="785" y="228" width="1" height="15" fill="rgb(251,145,12)"/><text x="788.00" y="238.50"></text></g><g><title>0x7f0a9e547962 (?) (1 samples, 0.13%)</title><rect x="785" y="244" width="1" height="15" fill="rgb(237,132,52)"/><text x="788.00" y="254.50"></text></g><g><title>0x7f0a9e57b7a7 (?) (1 samples, 0.13%)</title><rect x="785" y="260" width="1" height="15" fill="rgb(235,198,26)"/><text x="788.00" y="270.50"></text></g><g><title>0x7f0a9e57b379 (?) (1 samples, 0.13%)</title><rect x="785" y="276" width="1" height="15" fill="rgb(212,111,46)"/><text x="788.00" y="286.50"></text></g><g><title>0x7f0a9e9d98b8 (?) (1 samples, 0.13%)</title><rect x="785" y="292" width="1" height="15" fill="rgb(248,82,16)"/><text x="788.00" y="302.50"></text></g><g><title>0x7f0a9e9d7c7f (?) (1 samples, 0.13%)</title><rect x="785" y="308" width="1" height="15" fill="rgb(241,79,27)"/><text x="788.00" y="318.50"></text></g><g><title>0x7f0a9e9ea99c (?) (1 samples, 0.13%)</title><rect x="785" y="324" width="1" height="15" fill="rgb(219,43,21)"/><text x="788.00" y="334.50"></text></g><g><title>0x7f0a9e71545c (?) (1 samples, 0.13%)</title><rect x="785" y="340" width="1" height="15" fill="rgb(242,158,36)"/><text x="788.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="786" y="340" width="2" height="15" fill="rgb(212,161,46)"/><text x="789.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="786" y="356" width="2" height="15" fill="rgb(254,161,50)"/><text x="789.00" y="366.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="788" y="340" width="1" height="15" fill="rgb(234,97,1)"/><text x="791.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="788" y="356" width="1" height="15" fill="rgb(247,128,48)"/><text x="791.00" y="366.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="789" y="340" width="4" height="15" fill="rgb(241,100,8)"/><text x="792.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="789" y="356" width="4" height="15" fill="rgb(245,74,12)"/><text x="792.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="372" width="4" height="15" fill="rgb(254,136,39)"/><text x="792.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="388" width="4" height="15" fill="rgb(228,161,39)"/><text x="792.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="404" width="4" height="15" fill="rgb(216,145,36)"/><text x="792.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="420" width="4" height="15" fill="rgb(230,102,19)"/><text x="792.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="436" width="4" height="15" fill="rgb(231,21,13)"/><text x="792.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="452" width="4" height="15" fill="rgb(231,135,38)"/><text x="792.00" y="462.50"></text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.26%)</title><rect x="789" y="468" width="4" height="15" fill="rgb(254,26,31)"/><text x="792.00" y="478.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="793" y="340" width="1" height="15" fill="rgb(253,209,17)"/><text x="796.00" y="350.50"></text></g><g><title>onnxruntime::ReshapeHelper::ReshapeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="793" y="356" width="1" height="15" fill="rgb(222,145,16)"/><text x="796.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="794" y="340" width="2" height="15" fill="rgb(246,160,11)"/><text x="797.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="794" y="356" width="2" height="15" fill="rgb(241,94,34)"/><text x="797.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="794" y="372" width="2" height="15" fill="rgb(254,47,13)"/><text x="797.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="794" y="388" width="2" height="15" fill="rgb(246,158,50)"/><text x="797.00" y="398.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:18) (10 samples, 1.31%)</title><rect x="783" y="100" width="16" height="15" fill="rgb(211,21,22)"/><text x="786.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (9 samples, 1.18%)</title><rect x="785" y="116" width="14" height="15" fill="rgb(240,89,46)"/><text x="788.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (9 samples, 1.18%)</title><rect x="785" y="132" width="14" height="15" fill="rgb(253,0,54)"/><text x="788.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (9 samples, 1.18%)</title><rect x="785" y="148" width="14" height="15" fill="rgb(213,89,50)"/><text x="788.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (9 samples, 1.18%)</title><rect x="785" y="164" width="14" height="15" fill="rgb(208,71,21)"/><text x="788.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (9 samples, 1.18%)</title><rect x="785" y="180" width="14" height="15" fill="rgb(237,151,40)"/><text x="788.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (9 samples, 1.18%)</title><rect x="785" y="196" width="14" height="15" fill="rgb(214,134,25)"/><text x="788.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="212" width="13" height="15" fill="rgb(243,103,27)"/><text x="789.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="228" width="13" height="15" fill="rgb(229,35,43)"/><text x="789.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="244" width="13" height="15" fill="rgb(208,60,51)"/><text x="789.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="260" width="13" height="15" fill="rgb(207,45,54)"/><text x="789.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="276" width="13" height="15" fill="rgb(226,119,46)"/><text x="789.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="292" width="13" height="15" fill="rgb(240,99,3)"/><text x="789.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="308" width="13" height="15" fill="rgb(246,90,18)"/><text x="789.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="786" y="324" width="13" height="15" fill="rgb(243,61,14)"/><text x="789.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="796" y="340" width="3" height="15" fill="rgb(236,193,42)"/><text x="799.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="796" y="356" width="3" height="15" fill="rgb(251,213,30)"/><text x="799.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.26%)</title><rect x="796" y="372" width="3" height="15" fill="rgb(245,101,21)"/><text x="799.00" y="382.50"></text></g><g><title>0x7f0ade515d27 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="797" y="388" width="2" height="15" fill="rgb(224,109,1)"/><text x="800.00" y="398.50"></text></g><g><title>0x7f0ade513bc6 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="823" y="132" width="4" height="15" fill="rgb(215,214,0)"/><text x="826.00" y="142.50"></text></g><g><title>0x7f0ade513c20 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="827" y="132" width="1" height="15" fill="rgb(222,229,6)"/><text x="830.00" y="142.50"></text></g><g><title>0x7f0ade513c3d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="828" y="132" width="2" height="15" fill="rgb(214,205,52)"/><text x="831.00" y="142.50"></text></g><g><title>0x7f0ade513c49 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="830" y="132" width="1" height="15" fill="rgb(206,202,23)"/><text x="833.00" y="142.50"></text></g><g><title>0x7f0ade513c5a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="831" y="132" width="2" height="15" fill="rgb(219,130,3)"/><text x="834.00" y="142.50"></text></g><g><title>0x7f0ade514eb0 (libc-2.29.so) (7 samples, 0.92%)</title><rect x="823" y="116" width="11" height="15" fill="rgb(237,42,0)"/><text x="826.00" y="126.50"></text></g><g><title>0x7f0ade513c73 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="833" y="132" width="1" height="15" fill="rgb(245,83,29)"/><text x="836.00" y="142.50"></text></g><g><title>0x7f0ade513aaf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="833" y="148" width="1" height="15" fill="rgb(244,177,33)"/><text x="836.00" y="158.50"></text></g><g><title>onnxruntime::DataTypeImpl::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="839" y="260" width="1" height="15" fill="rgb(216,151,32)"/><text x="842.00" y="270.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="840" y="340" width="13" height="15" fill="rgb(208,15,22)"/><text x="843.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="840" y="356" width="13" height="15" fill="rgb(212,221,12)"/><text x="843.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="840" y="372" width="13" height="15" fill="rgb(234,75,0)"/><text x="843.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="851" y="388" width="2" height="15" fill="rgb(235,206,11)"/><text x="854.00" y="398.50"></text></g><g><title>0x7f0ade514eb0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="854" y="356" width="2" height="15" fill="rgb(230,214,42)"/><text x="857.00" y="366.50"></text></g><g><title>0x7f0ade513b9b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="854" y="372" width="2" height="15" fill="rgb(209,28,53)"/><text x="857.00" y="382.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.79%)</title><rect x="853" y="340" width="9" height="15" fill="rgb(226,202,17)"/><text x="856.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.52%)</title><rect x="856" y="356" width="6" height="15" fill="rgb(223,88,36)"/><text x="859.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.31%)</title><rect x="862" y="340" width="16" height="15" fill="rgb(209,87,37)"/><text x="865.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="356" width="2" height="15" fill="rgb(220,153,13)"/><text x="879.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="372" width="2" height="15" fill="rgb(231,29,38)"/><text x="879.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="388" width="2" height="15" fill="rgb(217,189,40)"/><text x="879.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="404" width="2" height="15" fill="rgb(215,9,25)"/><text x="879.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="420" width="2" height="15" fill="rgb(221,46,14)"/><text x="879.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="436" width="2" height="15" fill="rgb(218,47,26)"/><text x="879.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="876" y="452" width="2" height="15" fill="rgb(232,15,7)"/><text x="879.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="878" y="340" width="1" height="15" fill="rgb(241,67,7)"/><text x="881.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="879" y="356" width="2" height="15" fill="rgb(223,31,13)"/><text x="882.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="879" y="340" width="3" height="15" fill="rgb(221,12,50)"/><text x="882.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="881" y="356" width="1" height="15" fill="rgb(232,116,46)"/><text x="884.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="881" y="372" width="1" height="15" fill="rgb(207,166,37)"/><text x="884.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="340" width="2" height="15" fill="rgb(231,102,26)"/><text x="885.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="356" width="2" height="15" fill="rgb(221,63,4)"/><text x="885.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="372" width="2" height="15" fill="rgb(216,45,43)"/><text x="885.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="388" width="2" height="15" fill="rgb(244,73,50)"/><text x="885.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="404" width="2" height="15" fill="rgb(226,157,34)"/><text x="885.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="420" width="2" height="15" fill="rgb(212,45,24)"/><text x="885.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="436" width="2" height="15" fill="rgb(248,73,4)"/><text x="885.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="452" width="2" height="15" fill="rgb(251,52,21)"/><text x="885.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="882" y="468" width="2" height="15" fill="rgb(219,179,45)"/><text x="885.00" y="478.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.31%)</title><rect x="884" y="340" width="15" height="15" fill="rgb(207,194,19)"/><text x="887.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.31%)</title><rect x="884" y="356" width="15" height="15" fill="rgb(220,205,45)"/><text x="887.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceFree (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="899" y="372" width="2" height="15" fill="rgb(207,205,5)"/><text x="902.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="899" y="340" width="3" height="15" fill="rgb(211,124,23)"/><text x="902.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="899" y="356" width="3" height="15" fill="rgb(240,183,44)"/><text x="902.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="901" y="372" width="1" height="15" fill="rgb(216,204,28)"/><text x="904.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="901" y="388" width="1" height="15" fill="rgb(246,15,5)"/><text x="904.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="901" y="404" width="1" height="15" fill="rgb(238,5,2)"/><text x="904.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="901" y="420" width="1" height="15" fill="rgb(251,205,23)"/><text x="904.00" y="430.50"></text></g><g><title>onnxruntime::MatMulComputeHelper::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="902" y="356" width="2" height="15" fill="rgb(243,3,26)"/><text x="905.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="902" y="372" width="2" height="15" fill="rgb(215,181,1)"/><text x="905.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="902" y="388" width="2" height="15" fill="rgb(226,114,18)"/><text x="905.00" y="398.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 4.19%)</title><rect x="902" y="340" width="50" height="15" fill="rgb(231,19,43)"/><text x="905.00" y="350.50">onnxr..</text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 4.06%)</title><rect x="904" y="356" width="48" height="15" fill="rgb(224,36,2)"/><text x="907.00" y="366.50">onnx..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (31 samples, 4.06%)</title><rect x="904" y="372" width="48" height="15" fill="rgb(224,42,50)"/><text x="907.00" y="382.50">cbla..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (31 samples, 4.06%)</title><rect x="904" y="388" width="48" height="15" fill="rgb(246,8,48)"/><text x="907.00" y="398.50">sgem..</text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (30 samples, 3.93%)</title><rect x="905" y="404" width="47" height="15" fill="rgb(215,221,50)"/><text x="908.00" y="414.50">mkl_..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (30 samples, 3.93%)</title><rect x="905" y="420" width="47" height="15" fill="rgb(224,169,21)"/><text x="908.00" y="430.50">mkl_..</text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (30 samples, 3.93%)</title><rect x="905" y="436" width="47" height="15" fill="rgb(242,152,31)"/><text x="908.00" y="446.50">mkl_..</text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (30 samples, 3.93%)</title><rect x="905" y="452" width="47" height="15" fill="rgb(209,196,4)"/><text x="908.00" y="462.50">mkl_..</text></g><g><title>mkl_blas_avx_sgemm_pst (onnxruntime/capi/libmklml_intel.so) (30 samples, 3.93%)</title><rect x="905" y="468" width="47" height="15" fill="rgb(232,101,25)"/><text x="908.00" y="478.50">mkl_..</text></g><g><title>0x7f0ade693e0e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="955" y="356" width="1" height="15" fill="rgb(232,197,29)"/><text x="958.00" y="366.50"></text></g><g><title>0x7f0ade693e17 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="956" y="356" width="2" height="15" fill="rgb(240,152,18)"/><text x="959.00" y="366.50"></text></g><g><title>0x7f0ade693e53 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="958" y="356" width="1" height="15" fill="rgb(217,24,37)"/><text x="961.00" y="366.50"></text></g><g><title>0x7f0ade693e62 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="959" y="356" width="2" height="15" fill="rgb(212,89,1)"/><text x="962.00" y="366.50"></text></g><g><title>0x7f0ade693e86 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="961" y="356" width="1" height="15" fill="rgb(253,179,8)"/><text x="964.00" y="366.50"></text></g><g><title>0x7f0ade693e96 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="962" y="356" width="2" height="15" fill="rgb(239,153,35)"/><text x="965.00" y="366.50"></text></g><g><title>0x7f0ade6969a7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="964" y="356" width="2" height="15" fill="rgb(222,60,49)"/><text x="967.00" y="366.50"></text></g><g><title>0x7f0ade6969b9 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="966" y="356" width="1" height="15" fill="rgb(252,51,29)"/><text x="969.00" y="366.50"></text></g><g><title>0x7f0ade6969c8 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="967" y="356" width="2" height="15" fill="rgb(226,12,4)"/><text x="970.00" y="366.50"></text></g><g><title>0x7f0ade6969e0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="969" y="356" width="1" height="15" fill="rgb(245,123,38)"/><text x="972.00" y="366.50"></text></g><g><title>0x7f0ade6969f4 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="970" y="356" width="2" height="15" fill="rgb(219,81,38)"/><text x="973.00" y="366.50"></text></g><g><title>0x7f0ade696a21 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="972" y="356" width="1" height="15" fill="rgb(226,182,46)"/><text x="975.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.09%)</title><rect x="952" y="340" width="24" height="15" fill="rgb(226,92,40)"/><text x="955.00" y="350.50">o..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="973" y="356" width="3" height="15" fill="rgb(228,216,39)"/><text x="976.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.92%)</title><rect x="976" y="340" width="11" height="15" fill="rgb(228,218,7)"/><text x="979.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.92%)</title><rect x="976" y="356" width="11" height="15" fill="rgb(211,96,54)"/><text x="979.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.92%)</title><rect x="976" y="372" width="11" height="15" fill="rgb(225,210,5)"/><text x="979.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.39%)</title><rect x="983" y="388" width="4" height="15" fill="rgb(237,8,40)"/><text x="986.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.18%)</title><rect x="987" y="340" width="14" height="15" fill="rgb(229,166,46)"/><text x="990.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.18%)</title><rect x="987" y="356" width="14" height="15" fill="rgb(247,63,11)"/><text x="990.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.18%)</title><rect x="987" y="372" width="14" height="15" fill="rgb(230,111,2)"/><text x="990.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1000" y="388" width="1" height="15" fill="rgb(234,28,35)"/><text x="1003.00" y="398.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1001" y="340" width="3" height="15" fill="rgb(249,212,42)"/><text x="1004.00" y="350.50"></text></g><g><title>0x7f0acdfe0d50 (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="1009" y="372" width="3" height="15" fill="rgb(237,46,28)"/><text x="1012.00" y="382.50"></text></g><g><title>0x7f0ade515b12 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1052" y="388" width="2" height="15" fill="rgb(214,74,28)"/><text x="1055.00" y="398.50"></text></g><g><title>0x7f0ade515b1c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1054" y="388" width="1" height="15" fill="rgb(230,10,43)"/><text x="1057.00" y="398.50"></text></g><g><title>0x7f0ade515b24 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1055" y="388" width="2" height="15" fill="rgb(210,189,47)"/><text x="1058.00" y="398.50"></text></g><g><title>0x7f0ade515b39 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1057" y="388" width="1" height="15" fill="rgb(254,153,25)"/><text x="1060.00" y="398.50"></text></g><g><title>0x7f0ade515d67 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1058" y="388" width="2" height="15" fill="rgb(237,168,45)"/><text x="1061.00" y="398.50"></text></g><g><title>0x7f0ade515d8d (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1060" y="388" width="1" height="15" fill="rgb(224,197,48)"/><text x="1063.00" y="398.50"></text></g><g><title>0x7f0ade515db4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1061" y="388" width="2" height="15" fill="rgb(230,77,3)"/><text x="1064.00" y="398.50"></text></g><g><title>0x7f0ade515dd2 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1063" y="388" width="1" height="15" fill="rgb(211,173,16)"/><text x="1066.00" y="398.50"></text></g><g><title>0x7f0ade515fe6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1064" y="388" width="2" height="15" fill="rgb(250,70,28)"/><text x="1067.00" y="398.50"></text></g><g><title>0x7f0ade516033 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1066" y="388" width="1" height="15" fill="rgb(234,36,5)"/><text x="1069.00" y="398.50"></text></g><g><title>0x7f0ade516368 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1067" y="388" width="2" height="15" fill="rgb(213,207,34)"/><text x="1070.00" y="398.50"></text></g><g><title>0x7f0ade5163e0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1069" y="388" width="2" height="15" fill="rgb(240,210,19)"/><text x="1072.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (41 samples, 5.37%)</title><rect x="1009" y="356" width="63" height="15" fill="rgb(245,92,40)"/><text x="1012.00" y="366.50">operat..</text></g><g><title>malloc (libc-2.29.so) (39 samples, 5.10%)</title><rect x="1012" y="372" width="60" height="15" fill="rgb(219,64,1)"/><text x="1015.00" y="382.50">malloc..</text></g><g><title>0x7f0ade5166df (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1071" y="388" width="1" height="15" fill="rgb(231,15,22)"/><text x="1074.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1072" y="356" width="3" height="15" fill="rgb(228,104,23)"/><text x="1075.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.26%)</title><rect x="1075" y="356" width="3" height="15" fill="rgb(230,90,48)"/><text x="1078.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 20.42%)</title><rect x="840" y="260" width="241" height="15" fill="rgb(243,47,2)"/><text x="843.00" y="270.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 20.42%)</title><rect x="840" y="276" width="241" height="15" fill="rgb(232,68,3)"/><text x="843.00" y="286.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 20.42%)</title><rect x="840" y="292" width="241" height="15" fill="rgb(243,199,3)"/><text x="843.00" y="302.50">onnxruntime::utils::ExecuteGraph..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 20.42%)</title><rect x="840" y="308" width="241" height="15" fill="rgb(212,24,41)"/><text x="843.00" y="318.50">onnxruntime::utils::ExecuteGraph..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (156 samples, 20.42%)</title><rect x="840" y="324" width="241" height="15" fill="rgb(220,112,26)"/><text x="843.00" y="334.50">onnxruntime::SequentialExecutor:..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 6.54%)</title><rect x="1004" y="340" width="77" height="15" fill="rgb(250,43,49)"/><text x="1007.00" y="350.50">onnxrunt..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1078" y="356" width="3" height="15" fill="rgb(244,94,0)"/><text x="1081.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1080" y="372" width="1" height="15" fill="rgb(254,226,6)"/><text x="1083.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1080" y="388" width="1" height="15" fill="rgb(244,179,15)"/><text x="1083.00" y="398.50"></text></g><g><title>0x7f0ade516028 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1080" y="404" width="1" height="15" fill="rgb(243,155,37)"/><text x="1083.00" y="414.50"></text></g><g><title>0x7f0ade513bcc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1080" y="420" width="1" height="15" fill="rgb(208,206,40)"/><text x="1083.00" y="430.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1081" y="260" width="2" height="15" fill="rgb(221,87,19)"/><text x="1084.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.13%)</title><rect x="1081" y="276" width="2" height="15" fill="rgb(226,206,16)"/><text x="1084.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.13%)</title><rect x="1081" y="292" width="2" height="15" fill="rgb(250,0,16)"/><text x="1084.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.13%)</title><rect x="1081" y="308" width="2" height="15" fill="rgb(247,71,3)"/><text x="1084.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.13%)</title><rect x="1081" y="324" width="2" height="15" fill="rgb(218,88,3)"/><text x="1084.00" y="334.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.05%)</title><rect x="1143" y="276" width="13" height="15" fill="rgb(216,5,2)"/><text x="1146.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 6.28%)</title><rect x="1083" y="260" width="74" height="15" fill="rgb(240,131,47)"/><text x="1086.00" y="270.50">pybind11..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1156" y="276" width="1" height="15" fill="rgb(222,31,13)"/><text x="1159.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="1157" y="260" width="2" height="15" fill="rgb(216,132,46)"/><text x="1160.00" y="270.50"></text></g><g><title>0x7f0ade51492c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1159" y="292" width="1" height="15" fill="rgb(233,36,44)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7f0ade514971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(219,148,30)"/><text x="1163.00" y="302.50"></text></g><g><title>0x7f0ade5149ed (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1162" y="292" width="1" height="15" fill="rgb(221,200,21)"/><text x="1165.00" y="302.50"></text></g><g><title>0x7f0ade514d07 (libc-2.29.so) (2 samples, 0.26%)</title><rect x="1163" y="292" width="3" height="15" fill="rgb(234,121,10)"/><text x="1166.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(253,115,35)"/><text x="1169.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1168" y="292" width="1" height="15" fill="rgb(210,80,24)"/><text x="1171.00" y="302.50"></text></g><g><title>0x7f0ade51492c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1169" y="308" width="2" height="15" fill="rgb(216,161,26)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f0ade514998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(232,218,25)"/><text x="1174.00" y="318.50"></text></g><g><title>0x7f0ade5149d3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1173" y="308" width="1" height="15" fill="rgb(239,137,11)"/><text x="1176.00" y="318.50"></text></g><g><title>0x7f0ade514cf0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1174" y="308" width="2" height="15" fill="rgb(220,179,25)"/><text x="1177.00" y="318.50"></text></g><g><title>0x7f0ade514d07 (libc-2.29.so) (3 samples, 0.39%)</title><rect x="1176" y="308" width="4" height="15" fill="rgb(254,124,9)"/><text x="1179.00" y="318.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.09%)</title><rect x="1159" y="276" width="24" height="15" fill="rgb(246,212,8)"/><text x="1162.00" y="286.50">o..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.18%)</title><rect x="1169" y="292" width="14" height="15" fill="rgb(236,88,11)"/><text x="1172.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1180" y="308" width="3" height="15" fill="rgb(233,139,9)"/><text x="1183.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (224 samples, 29.32%)</title><rect x="839" y="244" width="346" height="15" fill="rgb(253,28,24)"/><text x="842.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.23%)</title><rect x="1159" y="260" width="26" height="15" fill="rgb(228,143,38)"/><text x="1162.00" y="270.50">s..</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(208,78,39)"/><text x="1186.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (227 samples, 29.71%)</title><rect x="837" y="164" width="351" height="15" fill="rgb(213,94,12)"/><text x="840.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (227 samples, 29.71%)</title><rect x="837" y="180" width="351" height="15" fill="rgb(227,42,10)"/><text x="840.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (227 samples, 29.71%)</title><rect x="837" y="196" width="351" height="15" fill="rgb(212,185,3)"/><text x="840.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (226 samples, 29.58%)</title><rect x="839" y="212" width="349" height="15" fill="rgb(251,198,22)"/><text x="842.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (226 samples, 29.58%)</title><rect x="839" y="228" width="349" height="15" fill="rgb(244,133,16)"/><text x="842.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxrun..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1185" y="244" width="3" height="15" fill="rgb(207,220,43)"/><text x="1188.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.26%)</title><rect x="1185" y="260" width="3" height="15" fill="rgb(230,143,23)"/><text x="1188.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="1186" y="276" width="2" height="15" fill="rgb(252,88,3)"/><text x="1189.00" y="286.50"></text></g><g><title>0x7f0ade534d50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(238,34,33)"/><text x="1189.00" y="302.50"></text></g><g><title>all (764 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(232,119,2)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:52) (263 samples, 34.42%)</title><rect x="783" y="52" width="407" height="15" fill="rgb(219,114,3)"/><text x="786.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_50_12_flo..</text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:51) (263 samples, 34.42%)</title><rect x="783" y="68" width="407" height="15" fill="rgb(213,220,27)"/><text x="786.00" y="78.50">profile_ort (bench_BernoulliNB_default_m_cl_1000_50_12_..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:29) (263 samples, 34.42%)</title><rect x="783" y="84" width="407" height="15" fill="rgb(222,128,17)"/><text x="786.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000_50_1..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_50_12_float_.py:23) (253 samples, 33.12%)</title><rect x="799" y="100" width="391" height="15" fill="rgb(248,62,15)"/><text x="802.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (230 samples, 30.10%)</title><rect x="834" y="116" width="356" height="15" fill="rgb(246,204,31)"/><text x="837.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (228 samples, 29.84%)</title><rect x="837" y="132" width="353" height="15" fill="rgb(246,229,45)"/><text x="840.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (228 samples, 29.84%)</title><rect x="837" y="148" width="353" height="15" fill="rgb(226,33,8)"/><text x="840.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.13%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(236,118,38)"/><text x="1191.00" y="174.50"></text></g></g></svg>