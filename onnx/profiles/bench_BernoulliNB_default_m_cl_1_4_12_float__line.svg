<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.34%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(206,196,8)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.34%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(236,217,45)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:383) (1 samples, 0.34%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(229,202,7)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:31) (2 samples, 0.68%)</title><rect x="10" y="52" width="8" height="15" fill="rgb(240,221,21)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:11) (2 samples, 0.68%)</title><rect x="10" y="68" width="8" height="15" fill="rgb(223,4,25)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:39) (2 samples, 0.68%)</title><rect x="10" y="84" width="8" height="15" fill="rgb(233,166,32)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:156) (1 samples, 0.34%)</title><rect x="14" y="100" width="4" height="15" fill="rgb(243,196,31)"/><text x="17.00" y="110.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.34%)</title><rect x="14" y="116" width="4" height="15" fill="rgb(242,63,21)"/><text x="17.00" y="126.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (1 samples, 0.34%)</title><rect x="18" y="180" width="4" height="15" fill="rgb(211,31,44)"/><text x="21.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.34%)</title><rect x="18" y="196" width="4" height="15" fill="rgb(234,218,17)"/><text x="21.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.34%)</title><rect x="18" y="212" width="4" height="15" fill="rgb(220,10,52)"/><text x="21.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.34%)</title><rect x="18" y="228" width="4" height="15" fill="rgb(236,197,5)"/><text x="21.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.34%)</title><rect x="18" y="244" width="4" height="15" fill="rgb(252,229,22)"/><text x="21.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.34%)</title><rect x="18" y="260" width="4" height="15" fill="rgb(243,87,10)"/><text x="21.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="18" y="276" width="4" height="15" fill="rgb(232,11,42)"/><text x="21.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:85) (1 samples, 0.34%)</title><rect x="18" y="292" width="4" height="15" fill="rgb(216,196,49)"/><text x="21.00" y="302.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:18) (2 samples, 0.68%)</title><rect x="18" y="100" width="8" height="15" fill="rgb(228,49,50)"/><text x="21.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.68%)</title><rect x="18" y="116" width="8" height="15" fill="rgb(215,72,7)"/><text x="21.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.68%)</title><rect x="18" y="132" width="8" height="15" fill="rgb(236,124,11)"/><text x="21.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (2 samples, 0.68%)</title><rect x="18" y="148" width="8" height="15" fill="rgb(216,194,6)"/><text x="21.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (2 samples, 0.68%)</title><rect x="18" y="164" width="8" height="15" fill="rgb(235,186,12)"/><text x="21.00" y="174.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (1 samples, 0.34%)</title><rect x="22" y="180" width="4" height="15" fill="rgb(232,60,50)"/><text x="25.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.34%)</title><rect x="22" y="196" width="4" height="15" fill="rgb(248,62,31)"/><text x="25.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.34%)</title><rect x="22" y="212" width="4" height="15" fill="rgb(252,210,2)"/><text x="25.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.34%)</title><rect x="22" y="228" width="4" height="15" fill="rgb(246,110,1)"/><text x="25.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.34%)</title><rect x="22" y="244" width="4" height="15" fill="rgb(239,75,51)"/><text x="25.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.34%)</title><rect x="22" y="260" width="4" height="15" fill="rgb(238,166,37)"/><text x="25.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4513) (1 samples, 0.34%)</title><rect x="22" y="276" width="4" height="15" fill="rgb(248,65,19)"/><text x="25.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.34%)</title><rect x="30" y="196" width="4" height="15" fill="rgb(231,169,17)"/><text x="33.00" y="206.50"></text></g><g><title>0x7f38a0ee412f (libc-2.29.so) (1 samples, 0.34%)</title><rect x="38" y="212" width="4" height="15" fill="rgb(243,194,25)"/><text x="41.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.37%)</title><rect x="34" y="196" width="16" height="15" fill="rgb(245,185,36)"/><text x="37.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.68%)</title><rect x="42" y="212" width="8" height="15" fill="rgb(207,47,20)"/><text x="45.00" y="222.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (7 samples, 2.40%)</title><rect x="26" y="164" width="28" height="15" fill="rgb(233,17,10)"/><text x="29.00" y="174.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 2.40%)</title><rect x="26" y="180" width="28" height="15" fill="rgb(237,109,51)"/><text x="29.00" y="190.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.34%)</title><rect x="50" y="196" width="4" height="15" fill="rgb(221,80,26)"/><text x="53.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.34%)</title><rect x="58" y="212" width="4" height="15" fill="rgb(230,76,6)"/><text x="61.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.34%)</title><rect x="58" y="228" width="4" height="15" fill="rgb(214,163,38)"/><text x="61.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.68%)</title><rect x="62" y="244" width="8" height="15" fill="rgb(227,114,8)"/><text x="65.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.34%)</title><rect x="70" y="244" width="4" height="15" fill="rgb(250,175,24)"/><text x="73.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.37%)</title><rect x="62" y="212" width="16" height="15" fill="rgb(248,3,41)"/><text x="65.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.37%)</title><rect x="62" y="228" width="16" height="15" fill="rgb(219,5,43)"/><text x="65.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.34%)</title><rect x="74" y="244" width="4" height="15" fill="rgb(221,64,31)"/><text x="77.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.34%)</title><rect x="78" y="212" width="4" height="15" fill="rgb(221,99,31)"/><text x="81.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.34%)</title><rect x="82" y="212" width="4" height="15" fill="rgb(225,204,23)"/><text x="85.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.34%)</title><rect x="86" y="212" width="4" height="15" fill="rgb(245,182,48)"/><text x="89.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.34%)</title><rect x="90" y="212" width="4" height="15" fill="rgb(230,93,12)"/><text x="93.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.34%)</title><rect x="90" y="228" width="4" height="15" fill="rgb(222,129,27)"/><text x="93.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.71%)</title><rect x="94" y="212" width="21" height="15" fill="rgb(218,175,18)"/><text x="97.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 1.71%)</title><rect x="94" y="228" width="21" height="15" fill="rgb(244,42,26)"/><text x="97.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.68%)</title><rect x="106" y="244" width="9" height="15" fill="rgb(230,164,29)"/><text x="109.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.34%)</title><rect x="115" y="228" width="4" height="15" fill="rgb(208,174,34)"/><text x="118.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.34%)</title><rect x="119" y="228" width="4" height="15" fill="rgb(242,168,28)"/><text x="122.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.34%)</title><rect x="119" y="244" width="4" height="15" fill="rgb(214,27,5)"/><text x="122.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 1.03%)</title><rect x="115" y="212" width="12" height="15" fill="rgb(215,187,34)"/><text x="118.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.34%)</title><rect x="123" y="228" width="4" height="15" fill="rgb(222,1,31)"/><text x="126.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.34%)</title><rect x="123" y="244" width="4" height="15" fill="rgb(207,33,28)"/><text x="126.00" y="254.50"></text></g><g><title>0x7f38a0ee4124 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="123" y="260" width="4" height="15" fill="rgb(243,126,29)"/><text x="126.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.34%)</title><rect x="127" y="212" width="4" height="15" fill="rgb(206,50,48)"/><text x="130.00" y="222.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (20 samples, 6.85%)</title><rect x="54" y="180" width="81" height="15" fill="rgb(229,132,51)"/><text x="57.00" y="190.50">_check_X ..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (20 samples, 6.85%)</title><rect x="54" y="196" width="81" height="15" fill="rgb(245,164,16)"/><text x="57.00" y="206.50">_check_X ..</text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.34%)</title><rect x="131" y="212" width="4" height="15" fill="rgb(233,194,33)"/><text x="134.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.34%)</title><rect x="135" y="212" width="4" height="15" fill="rgb(243,212,40)"/><text x="138.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.68%)</title><rect x="139" y="212" width="8" height="15" fill="rgb(223,180,49)"/><text x="142.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.34%)</title><rect x="143" y="228" width="4" height="15" fill="rgb(248,18,44)"/><text x="146.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.34%)</title><rect x="147" y="228" width="4" height="15" fill="rgb(206,21,20)"/><text x="150.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.68%)</title><rect x="147" y="212" width="8" height="15" fill="rgb(246,142,19)"/><text x="150.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.34%)</title><rect x="151" y="228" width="4" height="15" fill="rgb(241,45,18)"/><text x="154.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.34%)</title><rect x="151" y="244" width="4" height="15" fill="rgb(207,212,54)"/><text x="154.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.34%)</title><rect x="155" y="212" width="4" height="15" fill="rgb(219,223,49)"/><text x="158.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.34%)</title><rect x="155" y="228" width="4" height="15" fill="rgb(219,72,26)"/><text x="158.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.34%)</title><rect x="159" y="212" width="4" height="15" fill="rgb(216,30,5)"/><text x="162.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.34%)</title><rect x="159" y="228" width="4" height="15" fill="rgb(211,26,26)"/><text x="162.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.34%)</title><rect x="163" y="212" width="4" height="15" fill="rgb(227,58,43)"/><text x="166.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.34%)</title><rect x="163" y="228" width="4" height="15" fill="rgb(237,103,14)"/><text x="166.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.68%)</title><rect x="171" y="244" width="8" height="15" fill="rgb(234,198,46)"/><text x="174.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 1.37%)</title><rect x="167" y="212" width="16" height="15" fill="rgb(227,226,45)"/><text x="170.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.37%)</title><rect x="167" y="228" width="16" height="15" fill="rgb(235,36,9)"/><text x="170.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.34%)</title><rect x="179" y="244" width="4" height="15" fill="rgb(248,79,53)"/><text x="182.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.34%)</title><rect x="183" y="228" width="4" height="15" fill="rgb(210,176,33)"/><text x="186.00" y="238.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (14 samples, 4.79%)</title><rect x="135" y="196" width="56" height="15" fill="rgb(229,161,30)"/><text x="138.00" y="206.50">binar..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.68%)</title><rect x="183" y="212" width="8" height="15" fill="rgb(247,229,43)"/><text x="186.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.34%)</title><rect x="187" y="228" width="4" height="15" fill="rgb(212,200,23)"/><text x="190.00" y="238.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1863) (4 samples, 1.37%)</title><rect x="191" y="196" width="17" height="15" fill="rgb(226,133,46)"/><text x="194.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.68%)</title><rect x="199" y="212" width="9" height="15" fill="rgb(212,54,41)"/><text x="202.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="208" y="244" width="4" height="15" fill="rgb(233,216,40)"/><text x="211.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:336) (1 samples, 0.34%)</title><rect x="208" y="260" width="4" height="15" fill="rgb(244,162,9)"/><text x="211.00" y="270.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (2 samples, 0.68%)</title><rect x="208" y="196" width="8" height="15" fill="rgb(245,71,48)"/><text x="211.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (2 samples, 0.68%)</title><rect x="208" y="212" width="8" height="15" fill="rgb(248,164,43)"/><text x="211.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.68%)</title><rect x="208" y="228" width="8" height="15" fill="rgb(240,107,45)"/><text x="211.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="212" y="244" width="4" height="15" fill="rgb(243,125,32)"/><text x="215.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.34%)</title><rect x="212" y="260" width="4" height="15" fill="rgb(224,89,5)"/><text x="215.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.34%)</title><rect x="212" y="276" width="4" height="15" fill="rgb(210,57,41)"/><text x="215.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="212" y="292" width="4" height="15" fill="rgb(212,44,53)"/><text x="215.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="212" y="308" width="4" height="15" fill="rgb(227,172,43)"/><text x="215.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="212" y="324" width="4" height="15" fill="rgb(242,224,5)"/><text x="215.00" y="334.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1874) (1 samples, 0.34%)</title><rect x="216" y="196" width="4" height="15" fill="rgb(248,152,19)"/><text x="219.00" y="206.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (2 samples, 0.68%)</title><rect x="220" y="196" width="8" height="15" fill="rgb(237,222,24)"/><text x="223.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.34%)</title><rect x="224" y="212" width="4" height="15" fill="rgb(234,113,47)"/><text x="227.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1272) (1 samples, 0.34%)</title><rect x="224" y="228" width="4" height="15" fill="rgb(213,70,30)"/><text x="227.00" y="238.50"></text></g><g><title>NpyIter_IterationNeedsAPI (nditer_api.c:828) (1 samples, 0.34%)</title><rect x="224" y="244" width="4" height="15" fill="rgb(218,44,5)"/><text x="227.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (44 samples, 15.07%)</title><rect x="54" y="164" width="178" height="15" fill="rgb(233,96,9)"/><text x="57.00" y="174.50">predict_log_proba (skle..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (24 samples, 8.22%)</title><rect x="135" y="180" width="97" height="15" fill="rgb(240,145,51)"/><text x="138.00" y="190.50">_check_X (s..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1876) (1 samples, 0.34%)</title><rect x="228" y="196" width="4" height="15" fill="rgb(220,166,12)"/><text x="231.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.34%)</title><rect x="228" y="212" width="4" height="15" fill="rgb(208,86,25)"/><text x="231.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:545) (1 samples, 0.34%)</title><rect x="228" y="228" width="4" height="15" fill="rgb(237,188,23)"/><text x="231.00" y="238.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1011) (1 samples, 0.34%)</title><rect x="232" y="180" width="4" height="15" fill="rgb(240,60,49)"/><text x="235.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="236" y="196" width="4" height="15" fill="rgb(249,175,35)"/><text x="239.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="236" y="212" width="4" height="15" fill="rgb(238,228,26)"/><text x="239.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="236" y="228" width="4" height="15" fill="rgb(245,145,42)"/><text x="239.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.34%)</title><rect x="240" y="244" width="4" height="15" fill="rgb(222,96,7)"/><text x="243.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1929) (1 samples, 0.34%)</title><rect x="240" y="260" width="4" height="15" fill="rgb(214,220,18)"/><text x="243.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.34%)</title><rect x="240" y="276" width="4" height="15" fill="rgb(242,137,8)"/><text x="243.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.34%)</title><rect x="240" y="292" width="4" height="15" fill="rgb(215,1,10)"/><text x="243.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.68%)</title><rect x="240" y="228" width="8" height="15" fill="rgb(213,22,12)"/><text x="243.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.34%)</title><rect x="244" y="244" width="4" height="15" fill="rgb(211,81,45)"/><text x="247.00" y="254.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:53) (1 samples, 0.34%)</title><rect x="248" y="308" width="4" height="15" fill="rgb(245,89,43)"/><text x="251.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.34%)</title><rect x="248" y="324" width="4" height="15" fill="rgb(230,63,44)"/><text x="251.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 1.37%)</title><rect x="240" y="196" width="16" height="15" fill="rgb(240,133,44)"/><text x="243.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.37%)</title><rect x="240" y="212" width="16" height="15" fill="rgb(210,164,26)"/><text x="243.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (2 samples, 0.68%)</title><rect x="248" y="228" width="8" height="15" fill="rgb(234,106,46)"/><text x="251.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (2 samples, 0.68%)</title><rect x="248" y="244" width="8" height="15" fill="rgb(253,90,48)"/><text x="251.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (2 samples, 0.68%)</title><rect x="248" y="260" width="8" height="15" fill="rgb(245,162,26)"/><text x="251.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (2 samples, 0.68%)</title><rect x="248" y="276" width="8" height="15" fill="rgb(236,167,46)"/><text x="251.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.68%)</title><rect x="248" y="292" width="8" height="15" fill="rgb(247,54,45)"/><text x="251.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.34%)</title><rect x="252" y="308" width="4" height="15" fill="rgb(248,12,50)"/><text x="255.00" y="318.50"></text></g><g><title>_aligned_cast_long_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.34%)</title><rect x="252" y="324" width="4" height="15" fill="rgb(238,125,19)"/><text x="255.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="256" y="212" width="4" height="15" fill="rgb(215,200,11)"/><text x="259.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.34%)</title><rect x="256" y="228" width="4" height="15" fill="rgb(253,172,16)"/><text x="259.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.34%)</title><rect x="256" y="244" width="4" height="15" fill="rgb(207,156,3)"/><text x="259.00" y="254.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1018) (7 samples, 2.40%)</title><rect x="236" y="180" width="28" height="15" fill="rgb(207,83,44)"/><text x="239.00" y="190.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.68%)</title><rect x="256" y="196" width="8" height="15" fill="rgb(228,124,12)"/><text x="259.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="260" y="212" width="4" height="15" fill="rgb(251,163,51)"/><text x="263.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.34%)</title><rect x="260" y="228" width="4" height="15" fill="rgb(225,97,17)"/><text x="263.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.34%)</title><rect x="260" y="244" width="4" height="15" fill="rgb(208,102,7)"/><text x="263.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c:665) (1 samples, 0.34%)</title><rect x="268" y="196" width="4" height="15" fill="rgb(252,90,0)"/><text x="271.00" y="206.50"></text></g><g><title>PyArray_Transpose (shape.c:727) (1 samples, 0.34%)</title><rect x="272" y="196" width="4" height="15" fill="rgb(235,159,25)"/><text x="275.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.34%)</title><rect x="276" y="196" width="4" height="15" fill="rgb(243,210,3)"/><text x="279.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="276" y="212" width="4" height="15" fill="rgb(245,8,17)"/><text x="279.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.34%)</title><rect x="276" y="228" width="4" height="15" fill="rgb(247,191,48)"/><text x="279.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.34%)</title><rect x="280" y="196" width="4" height="15" fill="rgb(241,227,31)"/><text x="283.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="280" y="212" width="4" height="15" fill="rgb(214,194,16)"/><text x="283.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.34%)</title><rect x="280" y="228" width="4" height="15" fill="rgb(246,148,8)"/><text x="283.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.34%)</title><rect x="280" y="244" width="4" height="15" fill="rgb(226,112,38)"/><text x="283.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="280" y="260" width="4" height="15" fill="rgb(236,89,21)"/><text x="283.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.34%)</title><rect x="280" y="276" width="4" height="15" fill="rgb(205,179,42)"/><text x="283.00" y="286.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.34%)</title><rect x="280" y="292" width="4" height="15" fill="rgb(223,28,40)"/><text x="283.00" y="302.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (6 samples, 2.05%)</title><rect x="264" y="180" width="24" height="15" fill="rgb(230,43,11)"/><text x="267.00" y="190.50">_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.34%)</title><rect x="284" y="196" width="4" height="15" fill="rgb(237,103,8)"/><text x="287.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.34%)</title><rect x="288" y="228" width="4" height="15" fill="rgb(208,164,44)"/><text x="291.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.34%)</title><rect x="288" y="244" width="4" height="15" fill="rgb(234,221,37)"/><text x="291.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.34%)</title><rect x="292" y="228" width="4" height="15" fill="rgb(223,152,28)"/><text x="295.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:282) (1 samples, 0.34%)</title><rect x="292" y="244" width="4" height="15" fill="rgb(205,1,11)"/><text x="295.00" y="254.50"></text></g><g><title>array_add (number.c:330) (3 samples, 1.03%)</title><rect x="288" y="196" width="12" height="15" fill="rgb(238,80,43)"/><text x="291.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.03%)</title><rect x="288" y="212" width="12" height="15" fill="rgb(220,211,7)"/><text x="291.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="296" y="228" width="4" height="15" fill="rgb(243,42,12)"/><text x="299.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.34%)</title><rect x="296" y="244" width="4" height="15" fill="rgb(209,185,53)"/><text x="299.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.34%)</title><rect x="296" y="260" width="4" height="15" fill="rgb(253,157,31)"/><text x="299.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.34%)</title><rect x="300" y="244" width="5" height="15" fill="rgb(251,92,4)"/><text x="303.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="300" y="260" width="5" height="15" fill="rgb(215,63,25)"/><text x="303.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.34%)</title><rect x="300" y="276" width="5" height="15" fill="rgb(249,76,6)"/><text x="303.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.34%)</title><rect x="300" y="292" width="5" height="15" fill="rgb(240,99,0)"/><text x="303.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="305" y="292" width="4" height="15" fill="rgb(209,41,54)"/><text x="308.00" y="302.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="305" y="308" width="4" height="15" fill="rgb(232,129,10)"/><text x="308.00" y="318.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.34%)</title><rect x="305" y="324" width="4" height="15" fill="rgb(241,51,48)"/><text x="308.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.34%)</title><rect x="305" y="340" width="4" height="15" fill="rgb(229,114,40)"/><text x="308.00" y="350.50"></text></g><g><title>0x7f38a0e7ba19 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="305" y="356" width="4" height="15" fill="rgb(246,104,52)"/><text x="308.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:735) (1 samples, 0.34%)</title><rect x="305" y="372" width="4" height="15" fill="rgb(246,168,0)"/><text x="308.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (3 samples, 1.03%)</title><rect x="300" y="196" width="13" height="15" fill="rgb(214,220,42)"/><text x="303.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (3 samples, 1.03%)</title><rect x="300" y="212" width="13" height="15" fill="rgb(250,208,8)"/><text x="303.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (3 samples, 1.03%)</title><rect x="300" y="228" width="13" height="15" fill="rgb(254,128,5)"/><text x="303.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.68%)</title><rect x="305" y="244" width="8" height="15" fill="rgb(243,16,51)"/><text x="308.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.68%)</title><rect x="305" y="260" width="8" height="15" fill="rgb(241,60,48)"/><text x="308.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.68%)</title><rect x="305" y="276" width="8" height="15" fill="rgb(225,174,9)"/><text x="308.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:616) (1 samples, 0.34%)</title><rect x="309" y="292" width="4" height="15" fill="rgb(242,26,10)"/><text x="312.00" y="302.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (21 samples, 7.19%)</title><rect x="232" y="164" width="85" height="15" fill="rgb(225,214,49)"/><text x="235.00" y="174.50">predict_lo..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (7 samples, 2.40%)</title><rect x="288" y="180" width="29" height="15" fill="rgb(238,47,29)"/><text x="291.00" y="190.50">_j..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.34%)</title><rect x="313" y="196" width="4" height="15" fill="rgb(232,38,19)"/><text x="316.00" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.34%)</title><rect x="321" y="244" width="4" height="15" fill="rgb(223,125,28)"/><text x="324.00" y="254.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (4 samples, 1.37%)</title><rect x="317" y="180" width="16" height="15" fill="rgb(235,119,11)"/><text x="320.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (4 samples, 1.37%)</title><rect x="317" y="196" width="16" height="15" fill="rgb(235,213,33)"/><text x="320.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.03%)</title><rect x="321" y="212" width="12" height="15" fill="rgb(210,63,35)"/><text x="324.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (3 samples, 1.03%)</title><rect x="321" y="228" width="12" height="15" fill="rgb(224,58,0)"/><text x="324.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.68%)</title><rect x="325" y="244" width="8" height="15" fill="rgb(235,125,26)"/><text x="328.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c:1850) (1 samples, 0.34%)</title><rect x="333" y="196" width="4" height="15" fill="rgb(225,186,43)"/><text x="336.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.34%)</title><rect x="333" y="212" width="4" height="15" fill="rgb(206,55,39)"/><text x="336.00" y="222.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.34%)</title><rect x="333" y="228" width="4" height="15" fill="rgb(222,41,26)"/><text x="336.00" y="238.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.34%)</title><rect x="333" y="244" width="4" height="15" fill="rgb(226,131,35)"/><text x="336.00" y="254.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (1 samples, 0.34%)</title><rect x="333" y="260" width="4" height="15" fill="rgb(224,99,8)"/><text x="336.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c:2065) (1 samples, 0.34%)</title><rect x="337" y="196" width="4" height="15" fill="rgb(233,203,35)"/><text x="340.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="337" y="212" width="4" height="15" fill="rgb(210,155,15)"/><text x="340.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="337" y="228" width="4" height="15" fill="rgb(251,21,33)"/><text x="340.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="337" y="244" width="4" height="15" fill="rgb(243,43,33)"/><text x="340.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2002) (1 samples, 0.34%)</title><rect x="341" y="228" width="4" height="15" fill="rgb(235,98,48)"/><text x="344.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2007) (1 samples, 0.34%)</title><rect x="345" y="228" width="4" height="15" fill="rgb(222,84,51)"/><text x="348.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.34%)</title><rect x="349" y="260" width="4" height="15" fill="rgb(230,42,1)"/><text x="352.00" y="270.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:104) (6 samples, 2.05%)</title><rect x="333" y="180" width="24" height="15" fill="rgb(211,210,14)"/><text x="336.00" y="190.50">l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.37%)</title><rect x="341" y="196" width="16" height="15" fill="rgb(230,132,34)"/><text x="344.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (4 samples, 1.37%)</title><rect x="341" y="212" width="16" height="15" fill="rgb(214,46,15)"/><text x="344.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.68%)</title><rect x="349" y="228" width="8" height="15" fill="rgb(231,208,34)"/><text x="352.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (2 samples, 0.68%)</title><rect x="349" y="244" width="8" height="15" fill="rgb(213,166,12)"/><text x="352.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.34%)</title><rect x="353" y="260" width="4" height="15" fill="rgb(227,200,39)"/><text x="356.00" y="270.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.34%)</title><rect x="357" y="196" width="4" height="15" fill="rgb(211,108,15)"/><text x="360.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="357" y="212" width="4" height="15" fill="rgb(239,85,30)"/><text x="360.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="357" y="228" width="4" height="15" fill="rgb(234,221,31)"/><text x="360.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.34%)</title><rect x="357" y="244" width="4" height="15" fill="rgb(234,210,27)"/><text x="360.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.34%)</title><rect x="357" y="260" width="4" height="15" fill="rgb(244,40,16)"/><text x="360.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.34%)</title><rect x="357" y="276" width="4" height="15" fill="rgb(220,35,27)"/><text x="360.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (2 samples, 0.68%)</title><rect x="357" y="180" width="8" height="15" fill="rgb(208,205,12)"/><text x="360.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="361" y="196" width="4" height="15" fill="rgb(234,97,34)"/><text x="364.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="361" y="212" width="4" height="15" fill="rgb(211,148,51)"/><text x="364.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.34%)</title><rect x="361" y="228" width="4" height="15" fill="rgb(225,162,8)"/><text x="364.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 0.68%)</title><rect x="365" y="196" width="8" height="15" fill="rgb(214,167,5)"/><text x="368.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.34%)</title><rect x="369" y="212" width="4" height="15" fill="rgb(217,63,16)"/><text x="372.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:180) (1 samples, 0.34%)</title><rect x="369" y="228" width="4" height="15" fill="rgb(224,121,19)"/><text x="372.00" y="238.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (4 samples, 1.37%)</title><rect x="365" y="180" width="16" height="15" fill="rgb(250,128,43)"/><text x="368.00" y="190.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py:438) (2 samples, 0.68%)</title><rect x="373" y="196" width="8" height="15" fill="rgb(205,192,20)"/><text x="376.00" y="206.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.34%)</title><rect x="381" y="196" width="4" height="15" fill="rgb(251,16,29)"/><text x="384.00" y="206.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.34%)</title><rect x="385" y="308" width="4" height="15" fill="rgb(245,168,46)"/><text x="388.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.34%)</title><rect x="385" y="324" width="4" height="15" fill="rgb(228,207,46)"/><text x="388.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:301) (1 samples, 0.34%)</title><rect x="385" y="340" width="4" height="15" fill="rgb(252,192,8)"/><text x="388.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:231) (1 samples, 0.34%)</title><rect x="389" y="324" width="4" height="15" fill="rgb(222,80,48)"/><text x="392.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.03%)</title><rect x="385" y="292" width="12" height="15" fill="rgb(248,20,38)"/><text x="388.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.68%)</title><rect x="389" y="308" width="8" height="15" fill="rgb(240,220,31)"/><text x="392.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="393" y="324" width="4" height="15" fill="rgb(252,93,38)"/><text x="396.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1476) (1 samples, 0.34%)</title><rect x="393" y="340" width="4" height="15" fill="rgb(245,73,8)"/><text x="396.00" y="350.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (5 samples, 1.71%)</title><rect x="381" y="180" width="20" height="15" fill="rgb(251,52,39)"/><text x="384.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.37%)</title><rect x="385" y="196" width="16" height="15" fill="rgb(250,153,13)"/><text x="388.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.37%)</title><rect x="385" y="212" width="16" height="15" fill="rgb(223,117,24)"/><text x="388.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (4 samples, 1.37%)</title><rect x="385" y="228" width="16" height="15" fill="rgb(213,207,49)"/><text x="388.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (4 samples, 1.37%)</title><rect x="385" y="244" width="16" height="15" fill="rgb(206,192,5)"/><text x="388.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.37%)</title><rect x="385" y="260" width="16" height="15" fill="rgb(221,168,37)"/><text x="388.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.37%)</title><rect x="385" y="276" width="16" height="15" fill="rgb(229,220,11)"/><text x="388.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3672) (1 samples, 0.34%)</title><rect x="397" y="292" width="4" height="15" fill="rgb(209,58,42)"/><text x="400.00" y="302.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.34%)</title><rect x="401" y="212" width="5" height="15" fill="rgb(217,186,22)"/><text x="404.00" y="222.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (2 samples, 0.68%)</title><rect x="401" y="196" width="9" height="15" fill="rgb(253,206,43)"/><text x="404.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.34%)</title><rect x="406" y="212" width="4" height="15" fill="rgb(213,189,19)"/><text x="409.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (1 samples, 0.34%)</title><rect x="406" y="228" width="4" height="15" fill="rgb(233,111,44)"/><text x="409.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (1 samples, 0.34%)</title><rect x="406" y="244" width="4" height="15" fill="rgb(216,174,41)"/><text x="409.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c:261) (1 samples, 0.34%)</title><rect x="406" y="260" width="4" height="15" fill="rgb(216,144,3)"/><text x="409.00" y="270.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (3 samples, 1.03%)</title><rect x="401" y="180" width="13" height="15" fill="rgb(227,87,16)"/><text x="404.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="410" y="196" width="4" height="15" fill="rgb(246,13,20)"/><text x="413.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="410" y="212" width="4" height="15" fill="rgb(221,125,32)"/><text x="413.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1255) (1 samples, 0.34%)</title><rect x="410" y="228" width="4" height="15" fill="rgb(206,135,26)"/><text x="413.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.34%)</title><rect x="414" y="212" width="4" height="15" fill="rgb(226,227,53)"/><text x="417.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:123) (2 samples, 0.68%)</title><rect x="414" y="180" width="8" height="15" fill="rgb(228,174,7)"/><text x="417.00" y="190.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;:6) (2 samples, 0.68%)</title><rect x="414" y="196" width="8" height="15" fill="rgb(251,186,53)"/><text x="417.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.34%)</title><rect x="418" y="212" width="4" height="15" fill="rgb(245,195,1)"/><text x="421.00" y="222.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:236) (1 samples, 0.34%)</title><rect x="422" y="196" width="4" height="15" fill="rgb(210,160,49)"/><text x="425.00" y="206.50"></text></g><g><title>isMaskedArray (numpy/ma/core.py:6299) (1 samples, 0.34%)</title><rect x="422" y="212" width="4" height="15" fill="rgb(230,116,30)"/><text x="425.00" y="222.50"></text></g><g><title>0x7f38a0ee412f (libc-2.29.so) (1 samples, 0.34%)</title><rect x="430" y="212" width="4" height="15" fill="rgb(246,95,52)"/><text x="433.00" y="222.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (30 samples, 10.27%)</title><rect x="317" y="164" width="121" height="15" fill="rgb(205,155,24)"/><text x="320.00" y="174.50">predict_log_pro..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (4 samples, 1.37%)</title><rect x="422" y="180" width="16" height="15" fill="rgb(253,165,7)"/><text x="425.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:241) (3 samples, 1.03%)</title><rect x="426" y="196" width="12" height="15" fill="rgb(213,19,5)"/><text x="429.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.34%)</title><rect x="434" y="212" width="4" height="15" fill="rgb(216,206,8)"/><text x="437.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.34%)</title><rect x="434" y="228" width="4" height="15" fill="rgb(227,195,29)"/><text x="437.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1656) (1 samples, 0.34%)</title><rect x="434" y="244" width="4" height="15" fill="rgb(249,31,40)"/><text x="437.00" y="254.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.34%)</title><rect x="438" y="180" width="4" height="15" fill="rgb(233,65,3)"/><text x="441.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="438" y="196" width="4" height="15" fill="rgb(214,209,4)"/><text x="441.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="438" y="212" width="4" height="15" fill="rgb(236,0,41)"/><text x="441.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.34%)</title><rect x="438" y="228" width="4" height="15" fill="rgb(225,59,41)"/><text x="441.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.34%)</title><rect x="438" y="244" width="4" height="15" fill="rgb(215,27,46)"/><text x="441.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.34%)</title><rect x="438" y="260" width="4" height="15" fill="rgb(244,77,18)"/><text x="441.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.34%)</title><rect x="438" y="276" width="4" height="15" fill="rgb(208,21,48)"/><text x="441.00" y="286.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:120) (1 samples, 0.34%)</title><rect x="442" y="212" width="4" height="15" fill="rgb(219,2,24)"/><text x="445.00" y="222.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:122) (1 samples, 0.34%)</title><rect x="446" y="212" width="4" height="15" fill="rgb(221,65,6)"/><text x="449.00" y="222.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (4 samples, 1.37%)</title><rect x="438" y="164" width="16" height="15" fill="rgb(249,52,20)"/><text x="441.00" y="174.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (3 samples, 1.03%)</title><rect x="442" y="180" width="12" height="15" fill="rgb(229,146,31)"/><text x="445.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.03%)</title><rect x="442" y="196" width="12" height="15" fill="rgb(221,63,27)"/><text x="445.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:126) (1 samples, 0.34%)</title><rect x="450" y="212" width="4" height="15" fill="rgb(220,157,29)"/><text x="453.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.34%)</title><rect x="450" y="228" width="4" height="15" fill="rgb(209,180,19)"/><text x="453.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.34%)</title><rect x="450" y="244" width="4" height="15" fill="rgb(228,43,1)"/><text x="453.00" y="254.50"></text></g><g><title>multi_DECREF (mapping.c:148) (1 samples, 0.34%)</title><rect x="450" y="260" width="4" height="15" fill="rgb(241,136,46)"/><text x="453.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:38) (109 samples, 37.33%)</title><rect x="18" y="52" width="440" height="15" fill="rgb(252,85,14)"/><text x="21.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:37) (109 samples, 37.33%)</title><rect x="18" y="68" width="440" height="15" fill="rgb(241,157,6)"/><text x="21.00" y="78.50">profile_skl (bench_BernoulliNB_default_m_cl_1_4_12_float_.py..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:29) (109 samples, 37.33%)</title><rect x="18" y="84" width="440" height="15" fill="rgb(251,126,29)"/><text x="21.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_...</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:23) (107 samples, 36.64%)</title><rect x="26" y="100" width="432" height="15" fill="rgb(219,123,23)"/><text x="29.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (107 samples, 36.64%)</title><rect x="26" y="116" width="432" height="15" fill="rgb(226,32,32)"/><text x="29.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (107 samples, 36.64%)</title><rect x="26" y="132" width="432" height="15" fill="rgb(245,71,44)"/><text x="29.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (107 samples, 36.64%)</title><rect x="26" y="148" width="432" height="15" fill="rgb(251,61,6)"/><text x="29.00" y="158.50">predict_proba (sklearn/naive_bayes.py:115)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="454" y="164" width="4" height="15" fill="rgb(241,72,6)"/><text x="457.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="454" y="180" width="4" height="15" fill="rgb(208,189,22)"/><text x="457.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.34%)</title><rect x="454" y="196" width="4" height="15" fill="rgb(206,227,8)"/><text x="457.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="454" y="212" width="4" height="15" fill="rgb(218,11,24)"/><text x="457.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1039) (1 samples, 0.34%)</title><rect x="454" y="228" width="4" height="15" fill="rgb(236,32,41)"/><text x="457.00" y="238.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:1) (1 samples, 0.34%)</title><rect x="458" y="148" width="4" height="15" fill="rgb(214,125,7)"/><text x="461.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="458" y="164" width="4" height="15" fill="rgb(216,89,3)"/><text x="461.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="458" y="180" width="4" height="15" fill="rgb(247,217,9)"/><text x="461.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="458" y="196" width="4" height="15" fill="rgb(206,214,21)"/><text x="461.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="458" y="212" width="4" height="15" fill="rgb(212,168,25)"/><text x="461.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="458" y="228" width="4" height="15" fill="rgb(252,13,10)"/><text x="461.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.34%)</title><rect x="458" y="244" width="4" height="15" fill="rgb(236,15,42)"/><text x="461.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="458" y="260" width="4" height="15" fill="rgb(207,49,28)"/><text x="461.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="458" y="276" width="4" height="15" fill="rgb(236,129,5)"/><text x="461.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="458" y="292" width="4" height="15" fill="rgb(232,85,16)"/><text x="461.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="458" y="308" width="4" height="15" fill="rgb(225,105,11)"/><text x="461.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="458" y="324" width="4" height="15" fill="rgb(221,73,41)"/><text x="461.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="458" y="340" width="4" height="15" fill="rgb(242,161,2)"/><text x="461.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="458" y="356" width="4" height="15" fill="rgb(241,31,54)"/><text x="461.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:8) (1 samples, 0.34%)</title><rect x="458" y="372" width="4" height="15" fill="rgb(232,165,6)"/><text x="461.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="458" y="388" width="4" height="15" fill="rgb(248,26,27)"/><text x="461.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="458" y="404" width="4" height="15" fill="rgb(233,132,24)"/><text x="461.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="458" y="420" width="4" height="15" fill="rgb(212,186,8)"/><text x="461.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="458" y="436" width="4" height="15" fill="rgb(240,193,30)"/><text x="461.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="458" y="452" width="4" height="15" fill="rgb(239,182,20)"/><text x="461.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/type_check.py:17) (1 samples, 0.34%)</title><rect x="458" y="468" width="4" height="15" fill="rgb(244,52,27)"/><text x="461.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="458" y="484" width="4" height="15" fill="rgb(253,145,1)"/><text x="461.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="458" y="500" width="4" height="15" fill="rgb(224,15,48)"/><text x="461.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="458" y="516" width="4" height="15" fill="rgb(243,181,2)"/><text x="461.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="458" y="532" width="4" height="15" fill="rgb(207,202,18)"/><text x="461.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="458" y="548" width="4" height="15" fill="rgb(218,37,3)"/><text x="461.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/ufunclike.py:77) (1 samples, 0.34%)</title><rect x="458" y="564" width="4" height="15" fill="rgb(240,205,28)"/><text x="461.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.34%)</title><rect x="458" y="580" width="4" height="15" fill="rgb(214,68,27)"/><text x="461.00" y="590.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.34%)</title><rect x="462" y="852" width="4" height="15" fill="rgb(235,98,11)"/><text x="465.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.34%)</title><rect x="462" y="868" width="4" height="15" fill="rgb(220,88,19)"/><text x="465.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.34%)</title><rect x="462" y="884" width="4" height="15" fill="rgb(224,218,11)"/><text x="465.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.34%)</title><rect x="462" y="900" width="4" height="15" fill="rgb(221,81,21)"/><text x="465.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.34%)</title><rect x="462" y="916" width="4" height="15" fill="rgb(220,87,44)"/><text x="465.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.34%)</title><rect x="462" y="932" width="4" height="15" fill="rgb(235,98,54)"/><text x="465.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.34%)</title><rect x="462" y="948" width="4" height="15" fill="rgb(214,182,33)"/><text x="465.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.34%)</title><rect x="462" y="964" width="4" height="15" fill="rgb(241,178,48)"/><text x="465.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.34%)</title><rect x="462" y="980" width="4" height="15" fill="rgb(212,34,34)"/><text x="465.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:89) (1 samples, 0.34%)</title><rect x="462" y="996" width="4" height="15" fill="rgb(217,94,43)"/><text x="465.00" y="1006.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.34%)</title><rect x="466" y="884" width="4" height="15" fill="rgb(229,80,0)"/><text x="469.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.34%)</title><rect x="466" y="900" width="4" height="15" fill="rgb(207,16,13)"/><text x="469.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="466" y="916" width="4" height="15" fill="rgb(243,90,51)"/><text x="469.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.34%)</title><rect x="466" y="932" width="4" height="15" fill="rgb(210,155,0)"/><text x="469.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.34%)</title><rect x="466" y="948" width="4" height="15" fill="rgb(223,73,52)"/><text x="469.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.34%)</title><rect x="466" y="964" width="4" height="15" fill="rgb(215,30,40)"/><text x="469.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.34%)</title><rect x="466" y="980" width="4" height="15" fill="rgb(208,103,2)"/><text x="469.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.34%)</title><rect x="466" y="996" width="4" height="15" fill="rgb(241,168,21)"/><text x="469.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.34%)</title><rect x="466" y="1012" width="4" height="15" fill="rgb(249,27,47)"/><text x="469.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.03%)</title><rect x="462" y="820" width="12" height="15" fill="rgb(234,111,27)"/><text x="465.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.03%)</title><rect x="462" y="836" width="12" height="15" fill="rgb(241,43,18)"/><text x="465.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.68%)</title><rect x="466" y="852" width="8" height="15" fill="rgb(252,25,40)"/><text x="469.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.68%)</title><rect x="466" y="868" width="8" height="15" fill="rgb(239,220,34)"/><text x="469.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.34%)</title><rect x="470" y="884" width="4" height="15" fill="rgb(246,78,11)"/><text x="473.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.34%)</title><rect x="470" y="900" width="4" height="15" fill="rgb(207,191,22)"/><text x="473.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.34%)</title><rect x="470" y="916" width="4" height="15" fill="rgb(210,220,16)"/><text x="473.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="470" y="932" width="4" height="15" fill="rgb(253,59,0)"/><text x="473.00" y="942.50"></text></g><g><title>0x7f38a0f03237 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="470" y="948" width="4" height="15" fill="rgb(217,46,11)"/><text x="473.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:2) (4 samples, 1.37%)</title><rect x="462" y="148" width="16" height="15" fill="rgb(240,108,22)"/><text x="465.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="164" width="16" height="15" fill="rgb(220,119,32)"/><text x="465.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.37%)</title><rect x="462" y="180" width="16" height="15" fill="rgb(206,15,19)"/><text x="465.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="196" width="16" height="15" fill="rgb(251,94,9)"/><text x="465.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="212" width="16" height="15" fill="rgb(215,214,22)"/><text x="465.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="462" y="228" width="16" height="15" fill="rgb(233,74,13)"/><text x="465.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="462" y="244" width="16" height="15" fill="rgb(245,133,53)"/><text x="465.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="462" y="260" width="16" height="15" fill="rgb(249,140,53)"/><text x="465.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="276" width="16" height="15" fill="rgb(240,133,47)"/><text x="465.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.37%)</title><rect x="462" y="292" width="16" height="15" fill="rgb(209,115,34)"/><text x="465.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="308" width="16" height="15" fill="rgb(251,125,20)"/><text x="465.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="462" y="324" width="16" height="15" fill="rgb(214,1,2)"/><text x="465.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="462" y="340" width="16" height="15" fill="rgb(209,64,14)"/><text x="465.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="462" y="356" width="16" height="15" fill="rgb(205,115,11)"/><text x="465.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="372" width="16" height="15" fill="rgb(215,135,43)"/><text x="465.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.37%)</title><rect x="462" y="388" width="16" height="15" fill="rgb(239,203,15)"/><text x="465.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="404" width="16" height="15" fill="rgb(240,75,16)"/><text x="465.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="462" y="420" width="16" height="15" fill="rgb(253,131,5)"/><text x="465.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="462" y="436" width="16" height="15" fill="rgb(229,168,28)"/><text x="465.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="462" y="452" width="16" height="15" fill="rgb(242,37,46)"/><text x="465.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="468" width="16" height="15" fill="rgb(221,184,48)"/><text x="465.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.37%)</title><rect x="462" y="484" width="16" height="15" fill="rgb(216,89,15)"/><text x="465.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="500" width="16" height="15" fill="rgb(207,214,12)"/><text x="465.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="462" y="516" width="16" height="15" fill="rgb(237,150,47)"/><text x="465.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="462" y="532" width="16" height="15" fill="rgb(243,20,4)"/><text x="465.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="462" y="548" width="16" height="15" fill="rgb(212,115,50)"/><text x="465.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="564" width="16" height="15" fill="rgb(211,88,13)"/><text x="465.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.37%)</title><rect x="462" y="580" width="16" height="15" fill="rgb(254,155,34)"/><text x="465.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="596" width="16" height="15" fill="rgb(244,62,12)"/><text x="465.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.37%)</title><rect x="462" y="612" width="16" height="15" fill="rgb(238,142,20)"/><text x="465.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="628" width="16" height="15" fill="rgb(216,36,4)"/><text x="465.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="644" width="16" height="15" fill="rgb(216,198,26)"/><text x="465.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="462" y="660" width="16" height="15" fill="rgb(230,137,33)"/><text x="465.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="462" y="676" width="16" height="15" fill="rgb(224,50,12)"/><text x="465.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="462" y="692" width="16" height="15" fill="rgb(238,168,0)"/><text x="465.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="708" width="16" height="15" fill="rgb(228,211,20)"/><text x="465.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.37%)</title><rect x="462" y="724" width="16" height="15" fill="rgb(223,133,49)"/><text x="465.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="462" y="740" width="16" height="15" fill="rgb(224,181,18)"/><text x="465.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="462" y="756" width="16" height="15" fill="rgb(215,113,8)"/><text x="465.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="462" y="772" width="16" height="15" fill="rgb(226,6,15)"/><text x="465.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="462" y="788" width="16" height="15" fill="rgb(224,213,42)"/><text x="465.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="462" y="804" width="16" height="15" fill="rgb(245,39,18)"/><text x="465.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.34%)</title><rect x="474" y="820" width="4" height="15" fill="rgb(233,33,41)"/><text x="477.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="474" y="836" width="4" height="15" fill="rgb(235,18,23)"/><text x="477.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="474" y="852" width="4" height="15" fill="rgb(229,58,53)"/><text x="477.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="474" y="868" width="4" height="15" fill="rgb(214,190,42)"/><text x="477.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="474" y="884" width="4" height="15" fill="rgb(218,70,25)"/><text x="477.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="474" y="900" width="4" height="15" fill="rgb(238,62,17)"/><text x="477.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.34%)</title><rect x="474" y="916" width="4" height="15" fill="rgb(235,197,45)"/><text x="477.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="474" y="932" width="4" height="15" fill="rgb(251,66,1)"/><text x="477.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="474" y="948" width="4" height="15" fill="rgb(219,205,20)"/><text x="477.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.34%)</title><rect x="474" y="964" width="4" height="15" fill="rgb(225,82,2)"/><text x="477.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.34%)</title><rect x="474" y="980" width="4" height="15" fill="rgb(227,182,51)"/><text x="477.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.34%)</title><rect x="474" y="996" width="4" height="15" fill="rgb(237,196,17)"/><text x="477.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="474" y="1012" width="4" height="15" fill="rgb(223,33,43)"/><text x="477.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="474" y="1028" width="4" height="15" fill="rgb(205,203,15)"/><text x="477.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="474" y="1044" width="4" height="15" fill="rgb(246,68,49)"/><text x="477.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="474" y="1060" width="4" height="15" fill="rgb(212,199,21)"/><text x="477.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="474" y="1076" width="4" height="15" fill="rgb(208,78,49)"/><text x="477.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.34%)</title><rect x="474" y="1092" width="4" height="15" fill="rgb(232,154,42)"/><text x="477.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5589) (1 samples, 0.34%)</title><rect x="474" y="1108" width="4" height="15" fill="rgb(236,43,12)"/><text x="477.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.34%)</title><rect x="474" y="1124" width="4" height="15" fill="rgb(248,226,24)"/><text x="477.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.34%)</title><rect x="474" y="1140" width="4" height="15" fill="rgb(228,170,6)"/><text x="477.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.34%)</title><rect x="474" y="1156" width="4" height="15" fill="rgb(251,155,8)"/><text x="477.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.34%)</title><rect x="474" y="1172" width="4" height="15" fill="rgb(215,79,52)"/><text x="477.00" y="1182.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.34%)</title><rect x="474" y="1188" width="4" height="15" fill="rgb(227,219,38)"/><text x="477.00" y="1198.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.34%)</title><rect x="474" y="1204" width="4" height="15" fill="rgb(254,133,36)"/><text x="477.00" y="1214.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.34%)</title><rect x="474" y="1220" width="4" height="15" fill="rgb(211,67,51)"/><text x="477.00" y="1230.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.34%)</title><rect x="474" y="1236" width="4" height="15" fill="rgb(222,182,20)"/><text x="477.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.34%)</title><rect x="478" y="484" width="4" height="15" fill="rgb(244,16,45)"/><text x="481.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="478" y="500" width="4" height="15" fill="rgb(205,126,40)"/><text x="481.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="516" width="4" height="15" fill="rgb(216,26,33)"/><text x="481.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="478" y="532" width="4" height="15" fill="rgb(219,213,51)"/><text x="481.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="478" y="548" width="4" height="15" fill="rgb(241,27,15)"/><text x="481.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="478" y="564" width="4" height="15" fill="rgb(215,41,19)"/><text x="481.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="478" y="580" width="4" height="15" fill="rgb(227,26,40)"/><text x="481.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="596" width="4" height="15" fill="rgb(254,136,51)"/><text x="481.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.34%)</title><rect x="478" y="612" width="4" height="15" fill="rgb(238,22,2)"/><text x="481.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="478" y="628" width="4" height="15" fill="rgb(240,24,33)"/><text x="481.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="478" y="644" width="4" height="15" fill="rgb(246,180,45)"/><text x="481.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="478" y="660" width="4" height="15" fill="rgb(225,17,24)"/><text x="481.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="478" y="676" width="4" height="15" fill="rgb(224,28,4)"/><text x="481.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="692" width="4" height="15" fill="rgb(227,207,37)"/><text x="481.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.34%)</title><rect x="478" y="708" width="4" height="15" fill="rgb(225,156,28)"/><text x="481.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="478" y="724" width="4" height="15" fill="rgb(220,52,4)"/><text x="481.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="478" y="740" width="4" height="15" fill="rgb(205,97,3)"/><text x="481.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="478" y="756" width="4" height="15" fill="rgb(207,14,8)"/><text x="481.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="478" y="772" width="4" height="15" fill="rgb(248,7,27)"/><text x="481.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="788" width="4" height="15" fill="rgb(251,14,37)"/><text x="481.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.34%)</title><rect x="478" y="804" width="4" height="15" fill="rgb(209,148,35)"/><text x="481.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="478" y="820" width="4" height="15" fill="rgb(226,212,16)"/><text x="481.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="478" y="836" width="4" height="15" fill="rgb(241,193,17)"/><text x="481.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="478" y="852" width="4" height="15" fill="rgb(221,5,34)"/><text x="481.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="478" y="868" width="4" height="15" fill="rgb(241,29,30)"/><text x="481.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="884" width="4" height="15" fill="rgb(222,66,25)"/><text x="481.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:18) (1 samples, 0.34%)</title><rect x="478" y="900" width="4" height="15" fill="rgb(236,71,12)"/><text x="481.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="478" y="916" width="4" height="15" fill="rgb(249,98,53)"/><text x="481.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="932" width="4" height="15" fill="rgb(234,207,16)"/><text x="481.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="478" y="948" width="4" height="15" fill="rgb(225,206,5)"/><text x="481.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="478" y="964" width="4" height="15" fill="rgb(249,20,41)"/><text x="481.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="478" y="980" width="4" height="15" fill="rgb(215,220,15)"/><text x="481.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="478" y="996" width="4" height="15" fill="rgb(218,195,15)"/><text x="481.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="1012" width="4" height="15" fill="rgb(212,202,40)"/><text x="481.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py:16) (1 samples, 0.34%)</title><rect x="478" y="1028" width="4" height="15" fill="rgb(215,59,54)"/><text x="481.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="478" y="1044" width="4" height="15" fill="rgb(210,3,6)"/><text x="481.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="478" y="1060" width="4" height="15" fill="rgb(214,125,2)"/><text x="481.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="478" y="1076" width="4" height="15" fill="rgb(208,175,9)"/><text x="481.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="478" y="1092" width="4" height="15" fill="rgb(234,149,34)"/><text x="481.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="478" y="1108" width="4" height="15" fill="rgb(248,32,51)"/><text x="481.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py:213) (1 samples, 0.34%)</title><rect x="478" y="1124" width="4" height="15" fill="rgb(236,163,49)"/><text x="481.00" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.34%)</title><rect x="482" y="996" width="4" height="15" fill="rgb(229,35,7)"/><text x="485.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="482" y="1012" width="4" height="15" fill="rgb(246,206,7)"/><text x="485.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="482" y="1028" width="4" height="15" fill="rgb(227,86,8)"/><text x="485.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="482" y="1044" width="4" height="15" fill="rgb(218,71,12)"/><text x="485.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="482" y="1060" width="4" height="15" fill="rgb(228,126,43)"/><text x="485.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="482" y="1076" width="4" height="15" fill="rgb(211,124,54)"/><text x="485.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="482" y="1092" width="4" height="15" fill="rgb(249,170,33)"/><text x="485.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="482" y="1108" width="4" height="15" fill="rgb(208,16,27)"/><text x="485.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.34%)</title><rect x="482" y="1124" width="4" height="15" fill="rgb(236,91,53)"/><text x="485.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="482" y="1140" width="4" height="15" fill="rgb(206,86,18)"/><text x="485.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="482" y="1156" width="4" height="15" fill="rgb(248,90,36)"/><text x="485.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="482" y="1172" width="4" height="15" fill="rgb(218,212,14)"/><text x="485.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="482" y="1188" width="4" height="15" fill="rgb(228,74,50)"/><text x="485.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="482" y="1204" width="4" height="15" fill="rgb(242,156,0)"/><text x="485.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:26) (1 samples, 0.34%)</title><rect x="482" y="1220" width="4" height="15" fill="rgb(247,157,0)"/><text x="485.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="482" y="1236" width="4" height="15" fill="rgb(251,190,36)"/><text x="485.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="482" y="1252" width="4" height="15" fill="rgb(240,88,11)"/><text x="485.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="482" y="1268" width="4" height="15" fill="rgb(220,41,31)"/><text x="485.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="482" y="1284" width="4" height="15" fill="rgb(254,36,11)"/><text x="485.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="482" y="1300" width="4" height="15" fill="rgb(220,100,35)"/><text x="485.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_dogleg.py:6) (1 samples, 0.34%)</title><rect x="482" y="1316" width="4" height="15" fill="rgb(228,110,40)"/><text x="485.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="482" y="1332" width="4" height="15" fill="rgb(249,17,18)"/><text x="485.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.34%)</title><rect x="482" y="1348" width="4" height="15" fill="rgb(223,31,32)"/><text x="485.00" y="1358.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.34%)</title><rect x="482" y="1364" width="4" height="15" fill="rgb(233,47,1)"/><text x="485.00" y="1374.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.34%)</title><rect x="482" y="1380" width="4" height="15" fill="rgb(217,162,15)"/><text x="485.00" y="1390.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.34%)</title><rect x="482" y="1396" width="4" height="15" fill="rgb(245,87,31)"/><text x="485.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.34%)</title><rect x="482" y="1412" width="4" height="15" fill="rgb(236,19,0)"/><text x="485.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.68%)</title><rect x="482" y="676" width="8" height="15" fill="rgb(232,43,14)"/><text x="485.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="482" y="692" width="8" height="15" fill="rgb(222,68,2)"/><text x="485.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="482" y="708" width="8" height="15" fill="rgb(223,160,52)"/><text x="485.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="482" y="724" width="8" height="15" fill="rgb(227,106,51)"/><text x="485.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="482" y="740" width="8" height="15" fill="rgb(223,68,16)"/><text x="485.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="482" y="756" width="8" height="15" fill="rgb(248,97,46)"/><text x="485.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.68%)</title><rect x="482" y="772" width="8" height="15" fill="rgb(247,115,18)"/><text x="485.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.68%)</title><rect x="482" y="788" width="8" height="15" fill="rgb(219,2,37)"/><text x="485.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="482" y="804" width="8" height="15" fill="rgb(247,109,21)"/><text x="485.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="482" y="820" width="8" height="15" fill="rgb(207,124,15)"/><text x="485.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="482" y="836" width="8" height="15" fill="rgb(253,70,0)"/><text x="485.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="482" y="852" width="8" height="15" fill="rgb(235,177,38)"/><text x="485.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="482" y="868" width="8" height="15" fill="rgb(209,113,19)"/><text x="485.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="482" y="884" width="8" height="15" fill="rgb(246,32,33)"/><text x="485.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (2 samples, 0.68%)</title><rect x="482" y="900" width="8" height="15" fill="rgb(231,35,15)"/><text x="485.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="482" y="916" width="8" height="15" fill="rgb(253,177,23)"/><text x="485.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="482" y="932" width="8" height="15" fill="rgb(241,223,28)"/><text x="485.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="482" y="948" width="8" height="15" fill="rgb(235,44,23)"/><text x="485.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="482" y="964" width="8" height="15" fill="rgb(224,6,24)"/><text x="485.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="482" y="980" width="8" height="15" fill="rgb(250,216,12)"/><text x="485.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.34%)</title><rect x="486" y="996" width="4" height="15" fill="rgb(241,19,33)"/><text x="489.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="486" y="1012" width="4" height="15" fill="rgb(241,43,24)"/><text x="489.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="486" y="1028" width="4" height="15" fill="rgb(212,132,16)"/><text x="489.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="486" y="1044" width="4" height="15" fill="rgb(213,218,30)"/><text x="489.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="486" y="1060" width="4" height="15" fill="rgb(224,83,4)"/><text x="489.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="486" y="1076" width="4" height="15" fill="rgb(207,41,50)"/><text x="489.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="486" y="1092" width="4" height="15" fill="rgb(248,65,13)"/><text x="489.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="486" y="1108" width="4" height="15" fill="rgb(230,158,37)"/><text x="489.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:93) (1 samples, 0.34%)</title><rect x="486" y="1124" width="4" height="15" fill="rgb(229,75,20)"/><text x="489.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="486" y="1140" width="4" height="15" fill="rgb(223,36,3)"/><text x="489.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="486" y="1156" width="4" height="15" fill="rgb(249,21,9)"/><text x="489.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="486" y="1172" width="4" height="15" fill="rgb(244,111,54)"/><text x="489.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="486" y="1188" width="4" height="15" fill="rgb(231,97,16)"/><text x="489.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.34%)</title><rect x="486" y="1204" width="4" height="15" fill="rgb(219,122,37)"/><text x="489.00" y="1214.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.34%)</title><rect x="486" y="1220" width="4" height="15" fill="rgb(238,127,34)"/><text x="489.00" y="1230.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="486" y="1236" width="4" height="15" fill="rgb(250,81,54)"/><text x="489.00" y="1246.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:4) (4 samples, 1.37%)</title><rect x="478" y="148" width="16" height="15" fill="rgb(234,29,8)"/><text x="481.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="478" y="164" width="16" height="15" fill="rgb(215,89,13)"/><text x="481.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.37%)</title><rect x="478" y="180" width="16" height="15" fill="rgb(214,222,46)"/><text x="481.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="478" y="196" width="16" height="15" fill="rgb(214,51,18)"/><text x="481.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="478" y="212" width="16" height="15" fill="rgb(212,161,16)"/><text x="481.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="478" y="228" width="16" height="15" fill="rgb(234,172,27)"/><text x="481.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="478" y="244" width="16" height="15" fill="rgb(222,82,7)"/><text x="481.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="478" y="260" width="16" height="15" fill="rgb(246,123,34)"/><text x="481.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="478" y="276" width="16" height="15" fill="rgb(217,205,25)"/><text x="481.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (4 samples, 1.37%)</title><rect x="478" y="292" width="16" height="15" fill="rgb(250,11,40)"/><text x="481.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="478" y="308" width="16" height="15" fill="rgb(237,132,19)"/><text x="481.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="478" y="324" width="16" height="15" fill="rgb(236,29,6)"/><text x="481.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="478" y="340" width="16" height="15" fill="rgb(221,23,25)"/><text x="481.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="478" y="356" width="16" height="15" fill="rgb(245,28,52)"/><text x="481.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="478" y="372" width="16" height="15" fill="rgb(213,197,24)"/><text x="481.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (4 samples, 1.37%)</title><rect x="478" y="388" width="16" height="15" fill="rgb(207,90,20)"/><text x="481.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.37%)</title><rect x="478" y="404" width="16" height="15" fill="rgb(232,189,52)"/><text x="481.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.37%)</title><rect x="478" y="420" width="16" height="15" fill="rgb(250,114,15)"/><text x="481.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.37%)</title><rect x="478" y="436" width="16" height="15" fill="rgb(254,140,29)"/><text x="481.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.37%)</title><rect x="478" y="452" width="16" height="15" fill="rgb(214,90,25)"/><text x="481.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.37%)</title><rect x="478" y="468" width="16" height="15" fill="rgb(215,99,6)"/><text x="481.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 1.03%)</title><rect x="482" y="484" width="12" height="15" fill="rgb(226,23,33)"/><text x="485.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="482" y="500" width="12" height="15" fill="rgb(227,146,17)"/><text x="485.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="482" y="516" width="12" height="15" fill="rgb(214,210,49)"/><text x="485.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="482" y="532" width="12" height="15" fill="rgb(225,63,42)"/><text x="485.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="482" y="548" width="12" height="15" fill="rgb(229,190,47)"/><text x="485.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="482" y="564" width="12" height="15" fill="rgb(236,39,2)"/><text x="485.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 1.03%)</title><rect x="482" y="580" width="12" height="15" fill="rgb(220,150,14)"/><text x="485.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="482" y="596" width="12" height="15" fill="rgb(251,85,50)"/><text x="485.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="482" y="612" width="12" height="15" fill="rgb(236,38,31)"/><text x="485.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="482" y="628" width="12" height="15" fill="rgb(205,223,46)"/><text x="485.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="482" y="644" width="12" height="15" fill="rgb(235,155,30)"/><text x="485.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="482" y="660" width="12" height="15" fill="rgb(235,86,36)"/><text x="485.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:386) (1 samples, 0.34%)</title><rect x="490" y="676" width="4" height="15" fill="rgb(208,145,32)"/><text x="493.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="490" y="692" width="4" height="15" fill="rgb(244,100,19)"/><text x="493.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="490" y="708" width="4" height="15" fill="rgb(223,129,19)"/><text x="493.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="490" y="724" width="4" height="15" fill="rgb(232,118,20)"/><text x="493.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="490" y="740" width="4" height="15" fill="rgb(232,192,21)"/><text x="493.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="490" y="756" width="4" height="15" fill="rgb(249,126,22)"/><text x="493.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py:1145) (1 samples, 0.34%)</title><rect x="490" y="772" width="4" height="15" fill="rgb(240,193,13)"/><text x="493.00" y="782.50"></text></g><g><title>__init__ (scipy/stats/_multivariate.py:929) (1 samples, 0.34%)</title><rect x="490" y="788" width="4" height="15" fill="rgb(208,12,31)"/><text x="493.00" y="798.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:68) (1 samples, 0.34%)</title><rect x="490" y="804" width="4" height="15" fill="rgb(227,74,27)"/><text x="493.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:17) (1 samples, 0.34%)</title><rect x="494" y="580" width="4" height="15" fill="rgb(251,208,14)"/><text x="497.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="494" y="596" width="4" height="15" fill="rgb(217,169,2)"/><text x="497.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="494" y="612" width="4" height="15" fill="rgb(239,216,26)"/><text x="497.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="494" y="628" width="4" height="15" fill="rgb(215,200,8)"/><text x="497.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="494" y="644" width="4" height="15" fill="rgb(247,166,11)"/><text x="497.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="494" y="660" width="4" height="15" fill="rgb(250,141,15)"/><text x="497.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py:57) (1 samples, 0.34%)</title><rect x="494" y="676" width="4" height="15" fill="rgb(234,117,29)"/><text x="497.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py:36) (1 samples, 0.34%)</title><rect x="494" y="692" width="4" height="15" fill="rgb(212,181,26)"/><text x="497.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.68%)</title><rect x="494" y="244" width="9" height="15" fill="rgb(241,58,18)"/><text x="497.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="494" y="260" width="9" height="15" fill="rgb(205,35,49)"/><text x="497.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="494" y="276" width="9" height="15" fill="rgb(231,221,31)"/><text x="497.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="494" y="292" width="9" height="15" fill="rgb(212,79,16)"/><text x="497.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="494" y="308" width="9" height="15" fill="rgb(211,35,47)"/><text x="497.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="494" y="324" width="9" height="15" fill="rgb(238,53,32)"/><text x="497.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.68%)</title><rect x="494" y="340" width="9" height="15" fill="rgb(244,211,51)"/><text x="497.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="494" y="356" width="9" height="15" fill="rgb(234,150,49)"/><text x="497.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.68%)</title><rect x="494" y="372" width="9" height="15" fill="rgb(228,133,53)"/><text x="497.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="494" y="388" width="9" height="15" fill="rgb(240,201,10)"/><text x="497.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="494" y="404" width="9" height="15" fill="rgb(205,153,30)"/><text x="497.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="494" y="420" width="9" height="15" fill="rgb(212,23,24)"/><text x="497.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="494" y="436" width="9" height="15" fill="rgb(223,182,11)"/><text x="497.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="494" y="452" width="9" height="15" fill="rgb(248,227,19)"/><text x="497.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="494" y="468" width="9" height="15" fill="rgb(250,23,40)"/><text x="497.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.68%)</title><rect x="494" y="484" width="9" height="15" fill="rgb(232,17,8)"/><text x="497.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="494" y="500" width="9" height="15" fill="rgb(233,55,13)"/><text x="497.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="494" y="516" width="9" height="15" fill="rgb(217,221,17)"/><text x="497.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="494" y="532" width="9" height="15" fill="rgb(252,45,4)"/><text x="497.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="494" y="548" width="9" height="15" fill="rgb(248,21,53)"/><text x="497.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="494" y="564" width="9" height="15" fill="rgb(216,160,34)"/><text x="497.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.34%)</title><rect x="498" y="580" width="5" height="15" fill="rgb(205,10,6)"/><text x="501.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="596" width="5" height="15" fill="rgb(230,177,44)"/><text x="501.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="612" width="5" height="15" fill="rgb(231,4,7)"/><text x="501.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="628" width="5" height="15" fill="rgb(242,124,30)"/><text x="501.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="644" width="5" height="15" fill="rgb(217,118,53)"/><text x="501.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="660" width="5" height="15" fill="rgb(236,43,19)"/><text x="501.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.34%)</title><rect x="498" y="676" width="5" height="15" fill="rgb(220,154,40)"/><text x="501.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="692" width="5" height="15" fill="rgb(224,159,6)"/><text x="501.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="708" width="5" height="15" fill="rgb(246,5,47)"/><text x="501.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="724" width="5" height="15" fill="rgb(215,150,41)"/><text x="501.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="740" width="5" height="15" fill="rgb(236,167,20)"/><text x="501.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="756" width="5" height="15" fill="rgb(225,102,14)"/><text x="501.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.34%)</title><rect x="498" y="772" width="5" height="15" fill="rgb(248,177,36)"/><text x="501.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="498" y="788" width="5" height="15" fill="rgb(214,7,4)"/><text x="501.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="804" width="5" height="15" fill="rgb(217,65,6)"/><text x="501.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="820" width="5" height="15" fill="rgb(212,87,42)"/><text x="501.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="836" width="5" height="15" fill="rgb(224,42,17)"/><text x="501.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="852" width="5" height="15" fill="rgb(217,196,34)"/><text x="501.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="868" width="5" height="15" fill="rgb(253,61,18)"/><text x="501.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="884" width="5" height="15" fill="rgb(211,139,43)"/><text x="501.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.34%)</title><rect x="498" y="900" width="5" height="15" fill="rgb(220,91,47)"/><text x="501.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="916" width="5" height="15" fill="rgb(208,145,12)"/><text x="501.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.34%)</title><rect x="498" y="932" width="5" height="15" fill="rgb(242,14,1)"/><text x="501.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="948" width="5" height="15" fill="rgb(221,201,7)"/><text x="501.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="964" width="5" height="15" fill="rgb(246,228,22)"/><text x="501.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="980" width="5" height="15" fill="rgb(254,33,35)"/><text x="501.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="996" width="5" height="15" fill="rgb(245,152,36)"/><text x="501.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="1012" width="5" height="15" fill="rgb(217,141,25)"/><text x="501.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1028" width="5" height="15" fill="rgb(254,20,21)"/><text x="501.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.34%)</title><rect x="498" y="1044" width="5" height="15" fill="rgb(240,163,20)"/><text x="501.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="498" y="1060" width="5" height="15" fill="rgb(221,142,2)"/><text x="501.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1076" width="5" height="15" fill="rgb(235,108,20)"/><text x="501.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="1092" width="5" height="15" fill="rgb(246,110,36)"/><text x="501.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="1108" width="5" height="15" fill="rgb(218,42,29)"/><text x="501.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="1124" width="5" height="15" fill="rgb(209,116,38)"/><text x="501.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="1140" width="5" height="15" fill="rgb(228,131,46)"/><text x="501.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1156" width="5" height="15" fill="rgb(254,117,30)"/><text x="501.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.34%)</title><rect x="498" y="1172" width="5" height="15" fill="rgb(233,176,28)"/><text x="501.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="498" y="1188" width="5" height="15" fill="rgb(251,71,34)"/><text x="501.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1204" width="5" height="15" fill="rgb(208,68,12)"/><text x="501.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="1220" width="5" height="15" fill="rgb(219,131,20)"/><text x="501.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="1236" width="5" height="15" fill="rgb(205,87,28)"/><text x="501.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="1252" width="5" height="15" fill="rgb(221,92,54)"/><text x="501.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="1268" width="5" height="15" fill="rgb(231,20,31)"/><text x="501.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1284" width="5" height="15" fill="rgb(225,202,36)"/><text x="501.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.34%)</title><rect x="498" y="1300" width="5" height="15" fill="rgb(213,220,24)"/><text x="501.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="1316" width="5" height="15" fill="rgb(241,132,40)"/><text x="501.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="1332" width="5" height="15" fill="rgb(250,25,47)"/><text x="501.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="1348" width="5" height="15" fill="rgb(238,21,41)"/><text x="501.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="1364" width="5" height="15" fill="rgb(238,144,2)"/><text x="501.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1380" width="5" height="15" fill="rgb(231,115,13)"/><text x="501.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:14) (1 samples, 0.34%)</title><rect x="498" y="1396" width="5" height="15" fill="rgb(242,184,53)"/><text x="501.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="498" y="1412" width="5" height="15" fill="rgb(207,25,22)"/><text x="501.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1428" width="5" height="15" fill="rgb(248,114,32)"/><text x="501.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="498" y="1444" width="5" height="15" fill="rgb(247,73,25)"/><text x="501.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="498" y="1460" width="5" height="15" fill="rgb(241,208,4)"/><text x="501.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="498" y="1476" width="5" height="15" fill="rgb(217,108,30)"/><text x="501.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="498" y="1492" width="5" height="15" fill="rgb(244,92,9)"/><text x="501.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="498" y="1508" width="5" height="15" fill="rgb(245,49,4)"/><text x="501.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/utils.py:155) (1 samples, 0.34%)</title><rect x="498" y="1524" width="5" height="15" fill="rgb(243,196,44)"/><text x="501.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="503" y="644" width="4" height="15" fill="rgb(229,188,15)"/><text x="506.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="503" y="660" width="4" height="15" fill="rgb(246,80,1)"/><text x="506.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="503" y="676" width="4" height="15" fill="rgb(229,118,30)"/><text x="506.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="503" y="692" width="4" height="15" fill="rgb(207,36,33)"/><text x="506.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="503" y="708" width="4" height="15" fill="rgb(250,47,49)"/><text x="506.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.34%)</title><rect x="503" y="724" width="4" height="15" fill="rgb(232,43,25)"/><text x="506.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="503" y="740" width="4" height="15" fill="rgb(239,86,19)"/><text x="506.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="503" y="756" width="4" height="15" fill="rgb(232,5,50)"/><text x="506.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="503" y="772" width="4" height="15" fill="rgb(219,103,5)"/><text x="506.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="503" y="788" width="4" height="15" fill="rgb(230,207,31)"/><text x="506.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="503" y="804" width="4" height="15" fill="rgb(220,23,5)"/><text x="506.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.34%)</title><rect x="503" y="820" width="4" height="15" fill="rgb(237,173,12)"/><text x="506.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="503" y="836" width="4" height="15" fill="rgb(223,87,39)"/><text x="506.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="503" y="852" width="4" height="15" fill="rgb(236,12,1)"/><text x="506.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="503" y="868" width="4" height="15" fill="rgb(227,23,31)"/><text x="506.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="503" y="884" width="4" height="15" fill="rgb(253,228,41)"/><text x="506.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="503" y="900" width="4" height="15" fill="rgb(223,26,9)"/><text x="506.00" y="910.50"></text></g><g><title>0x7f387976c40e (?) (1 samples, 0.34%)</title><rect x="503" y="916" width="4" height="15" fill="rgb(241,108,5)"/><text x="506.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="503" y="932" width="4" height="15" fill="rgb(235,44,9)"/><text x="506.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="503" y="948" width="4" height="15" fill="rgb(240,208,12)"/><text x="506.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="503" y="964" width="4" height="15" fill="rgb(252,85,45)"/><text x="506.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="503" y="980" width="4" height="15" fill="rgb(238,77,2)"/><text x="506.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="503" y="996" width="4" height="15" fill="rgb(228,119,18)"/><text x="506.00" y="1006.50"></text></g><g><title>0x7f3879525cd2 (?) (1 samples, 0.34%)</title><rect x="503" y="1012" width="4" height="15" fill="rgb(231,65,54)"/><text x="506.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="503" y="1028" width="4" height="15" fill="rgb(237,92,19)"/><text x="506.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="503" y="1044" width="4" height="15" fill="rgb(231,6,50)"/><text x="506.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.34%)</title><rect x="503" y="1060" width="4" height="15" fill="rgb(225,175,1)"/><text x="506.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.34%)</title><rect x="503" y="1076" width="4" height="15" fill="rgb(226,199,10)"/><text x="506.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.34%)</title><rect x="503" y="1092" width="4" height="15" fill="rgb(228,130,17)"/><text x="506.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="503" y="1108" width="4" height="15" fill="rgb(236,124,15)"/><text x="506.00" y="1118.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1124" width="4" height="15" fill="rgb(238,19,51)"/><text x="506.00" y="1134.50"></text></g><g><title>0x7f38a114b995 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1140" width="4" height="15" fill="rgb(235,110,15)"/><text x="506.00" y="1150.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1156" width="4" height="15" fill="rgb(211,28,10)"/><text x="506.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1172" width="4" height="15" fill="rgb(239,144,3)"/><text x="506.00" y="1182.50"></text></g><g><title>0x7f38a114b258 (libdl-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1188" width="4" height="15" fill="rgb(231,111,3)"/><text x="506.00" y="1198.50"></text></g><g><title>0x7f38a1198d7a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1204" width="4" height="15" fill="rgb(226,37,27)"/><text x="506.00" y="1214.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1220" width="4" height="15" fill="rgb(220,19,50)"/><text x="506.00" y="1230.50"></text></g><g><title>0x7f38a119918b (ld-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1236" width="4" height="15" fill="rgb(225,162,45)"/><text x="506.00" y="1246.50"></text></g><g><title>0x7f38a118eb9a (ld-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1252" width="4" height="15" fill="rgb(211,103,19)"/><text x="506.00" y="1262.50"></text></g><g><title>0x7f38a11a0fbb (ld-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1268" width="4" height="15" fill="rgb(231,91,44)"/><text x="506.00" y="1278.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1284" width="4" height="15" fill="rgb(237,82,1)"/><text x="506.00" y="1294.50"></text></g><g><title>0x7f38a0ec56df (libc-2.29.so) (1 samples, 0.34%)</title><rect x="503" y="1300" width="4" height="15" fill="rgb(243,51,35)"/><text x="506.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.68%)</title><rect x="503" y="628" width="8" height="15" fill="rgb(213,182,14)"/><text x="506.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="507" y="644" width="4" height="15" fill="rgb(218,196,36)"/><text x="510.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="507" y="660" width="4" height="15" fill="rgb(214,63,52)"/><text x="510.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="507" y="676" width="4" height="15" fill="rgb(221,47,35)"/><text x="510.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="507" y="692" width="4" height="15" fill="rgb(205,213,23)"/><text x="510.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="507" y="708" width="4" height="15" fill="rgb(209,36,28)"/><text x="510.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.34%)</title><rect x="507" y="724" width="4" height="15" fill="rgb(229,148,2)"/><text x="510.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="507" y="740" width="4" height="15" fill="rgb(211,183,9)"/><text x="510.00" y="750.50"></text></g><g><title>0x7f3876d01ad1 (pandas/_libs/lib.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="507" y="756" width="4" height="15" fill="rgb(239,37,25)"/><text x="510.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.03%)</title><rect x="503" y="436" width="12" height="15" fill="rgb(223,166,36)"/><text x="506.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="503" y="452" width="12" height="15" fill="rgb(237,158,54)"/><text x="506.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="503" y="468" width="12" height="15" fill="rgb(232,18,49)"/><text x="506.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="503" y="484" width="12" height="15" fill="rgb(222,154,7)"/><text x="506.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="503" y="500" width="12" height="15" fill="rgb(222,145,25)"/><text x="506.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="503" y="516" width="12" height="15" fill="rgb(209,46,12)"/><text x="506.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.03%)</title><rect x="503" y="532" width="12" height="15" fill="rgb(219,100,30)"/><text x="506.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="503" y="548" width="12" height="15" fill="rgb(251,169,41)"/><text x="506.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="503" y="564" width="12" height="15" fill="rgb(236,159,0)"/><text x="506.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="503" y="580" width="12" height="15" fill="rgb(231,21,30)"/><text x="506.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="503" y="596" width="12" height="15" fill="rgb(220,165,15)"/><text x="506.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="503" y="612" width="12" height="15" fill="rgb(229,31,36)"/><text x="506.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.34%)</title><rect x="511" y="628" width="4" height="15" fill="rgb(240,70,25)"/><text x="514.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="644" width="4" height="15" fill="rgb(230,168,46)"/><text x="514.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="660" width="4" height="15" fill="rgb(235,117,12)"/><text x="514.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="676" width="4" height="15" fill="rgb(214,46,47)"/><text x="514.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="692" width="4" height="15" fill="rgb(211,123,31)"/><text x="514.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="708" width="4" height="15" fill="rgb(216,18,1)"/><text x="514.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.34%)</title><rect x="511" y="724" width="4" height="15" fill="rgb(227,177,37)"/><text x="514.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="740" width="4" height="15" fill="rgb(235,169,40)"/><text x="514.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="756" width="4" height="15" fill="rgb(246,46,53)"/><text x="514.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="772" width="4" height="15" fill="rgb(227,73,30)"/><text x="514.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="788" width="4" height="15" fill="rgb(245,153,32)"/><text x="514.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="804" width="4" height="15" fill="rgb(253,104,18)"/><text x="514.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.34%)</title><rect x="511" y="820" width="4" height="15" fill="rgb(234,78,8)"/><text x="514.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="836" width="4" height="15" fill="rgb(208,37,52)"/><text x="514.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="852" width="4" height="15" fill="rgb(251,105,16)"/><text x="514.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="868" width="4" height="15" fill="rgb(243,77,6)"/><text x="514.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="884" width="4" height="15" fill="rgb(238,21,10)"/><text x="514.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="900" width="4" height="15" fill="rgb(221,216,52)"/><text x="514.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.34%)</title><rect x="511" y="916" width="4" height="15" fill="rgb(253,36,43)"/><text x="514.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="932" width="4" height="15" fill="rgb(213,125,50)"/><text x="514.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="948" width="4" height="15" fill="rgb(239,39,27)"/><text x="514.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="964" width="4" height="15" fill="rgb(216,61,31)"/><text x="514.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="980" width="4" height="15" fill="rgb(212,77,52)"/><text x="514.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="996" width="4" height="15" fill="rgb(223,58,39)"/><text x="514.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.34%)</title><rect x="511" y="1012" width="4" height="15" fill="rgb(253,197,26)"/><text x="514.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1028" width="4" height="15" fill="rgb(222,69,41)"/><text x="514.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1044" width="4" height="15" fill="rgb(245,71,36)"/><text x="514.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1060" width="4" height="15" fill="rgb(244,32,26)"/><text x="514.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1076" width="4" height="15" fill="rgb(250,52,20)"/><text x="514.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1092" width="4" height="15" fill="rgb(253,77,51)"/><text x="514.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.34%)</title><rect x="511" y="1108" width="4" height="15" fill="rgb(248,229,44)"/><text x="514.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1124" width="4" height="15" fill="rgb(226,224,10)"/><text x="514.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1140" width="4" height="15" fill="rgb(240,176,21)"/><text x="514.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1156" width="4" height="15" fill="rgb(216,85,27)"/><text x="514.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1172" width="4" height="15" fill="rgb(216,195,3)"/><text x="514.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1188" width="4" height="15" fill="rgb(237,195,25)"/><text x="514.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.34%)</title><rect x="511" y="1204" width="4" height="15" fill="rgb(213,3,7)"/><text x="514.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1220" width="4" height="15" fill="rgb(205,72,22)"/><text x="514.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1236" width="4" height="15" fill="rgb(205,193,35)"/><text x="514.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1252" width="4" height="15" fill="rgb(238,21,5)"/><text x="514.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1268" width="4" height="15" fill="rgb(247,152,42)"/><text x="514.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1284" width="4" height="15" fill="rgb(218,203,0)"/><text x="514.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.34%)</title><rect x="511" y="1300" width="4" height="15" fill="rgb(236,65,43)"/><text x="514.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1316" width="4" height="15" fill="rgb(210,55,39)"/><text x="514.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1332" width="4" height="15" fill="rgb(229,20,4)"/><text x="514.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1348" width="4" height="15" fill="rgb(234,84,20)"/><text x="514.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1364" width="4" height="15" fill="rgb(225,15,4)"/><text x="514.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1380" width="4" height="15" fill="rgb(222,99,30)"/><text x="514.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.34%)</title><rect x="511" y="1396" width="4" height="15" fill="rgb(229,10,8)"/><text x="514.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1412" width="4" height="15" fill="rgb(219,21,49)"/><text x="514.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1428" width="4" height="15" fill="rgb(231,141,11)"/><text x="514.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1444" width="4" height="15" fill="rgb(217,16,37)"/><text x="514.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1460" width="4" height="15" fill="rgb(229,86,33)"/><text x="514.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1476" width="4" height="15" fill="rgb(209,46,32)"/><text x="514.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.34%)</title><rect x="511" y="1492" width="4" height="15" fill="rgb(219,144,46)"/><text x="514.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1508" width="4" height="15" fill="rgb(220,37,30)"/><text x="514.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1524" width="4" height="15" fill="rgb(233,90,30)"/><text x="514.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1540" width="4" height="15" fill="rgb(244,156,27)"/><text x="514.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1556" width="4" height="15" fill="rgb(235,39,23)"/><text x="514.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1572" width="4" height="15" fill="rgb(236,62,54)"/><text x="514.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.34%)</title><rect x="511" y="1588" width="4" height="15" fill="rgb(212,144,49)"/><text x="514.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1604" width="4" height="15" fill="rgb(241,178,24)"/><text x="514.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1620" width="4" height="15" fill="rgb(247,75,20)"/><text x="514.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1636" width="4" height="15" fill="rgb(233,102,50)"/><text x="514.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1652" width="4" height="15" fill="rgb(236,61,16)"/><text x="514.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1668" width="4" height="15" fill="rgb(214,50,46)"/><text x="514.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.34%)</title><rect x="511" y="1684" width="4" height="15" fill="rgb(249,102,50)"/><text x="514.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1700" width="4" height="15" fill="rgb(242,144,15)"/><text x="514.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1716" width="4" height="15" fill="rgb(236,217,32)"/><text x="514.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1732" width="4" height="15" fill="rgb(235,133,7)"/><text x="514.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="511" y="1748" width="4" height="15" fill="rgb(238,204,50)"/><text x="514.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="511" y="1764" width="4" height="15" fill="rgb(207,43,22)"/><text x="514.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.34%)</title><rect x="511" y="1780" width="4" height="15" fill="rgb(233,101,15)"/><text x="514.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="511" y="1796" width="4" height="15" fill="rgb(213,206,34)"/><text x="514.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="511" y="1812" width="4" height="15" fill="rgb(231,140,28)"/><text x="514.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="511" y="1828" width="4" height="15" fill="rgb(250,36,9)"/><text x="514.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="511" y="1844" width="4" height="15" fill="rgb(226,98,30)"/><text x="514.00" y="1854.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.34%)</title><rect x="511" y="1860" width="4" height="15" fill="rgb(230,101,53)"/><text x="514.00" y="1870.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.34%)</title><rect x="511" y="1876" width="4" height="15" fill="rgb(229,166,6)"/><text x="514.00" y="1886.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.34%)</title><rect x="515" y="1108" width="4" height="15" fill="rgb(254,28,9)"/><text x="518.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1124" width="4" height="15" fill="rgb(226,165,53)"/><text x="518.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1140" width="4" height="15" fill="rgb(249,171,16)"/><text x="518.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1156" width="4" height="15" fill="rgb(209,68,22)"/><text x="518.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1172" width="4" height="15" fill="rgb(214,223,50)"/><text x="518.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1188" width="4" height="15" fill="rgb(253,189,31)"/><text x="518.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.34%)</title><rect x="515" y="1204" width="4" height="15" fill="rgb(240,76,54)"/><text x="518.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1220" width="4" height="15" fill="rgb(251,53,30)"/><text x="518.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1236" width="4" height="15" fill="rgb(227,135,14)"/><text x="518.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1252" width="4" height="15" fill="rgb(225,140,6)"/><text x="518.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1268" width="4" height="15" fill="rgb(217,160,36)"/><text x="518.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1284" width="4" height="15" fill="rgb(245,72,52)"/><text x="518.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.34%)</title><rect x="515" y="1300" width="4" height="15" fill="rgb(249,151,27)"/><text x="518.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1316" width="4" height="15" fill="rgb(233,20,12)"/><text x="518.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1332" width="4" height="15" fill="rgb(221,157,40)"/><text x="518.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1348" width="4" height="15" fill="rgb(212,109,26)"/><text x="518.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1364" width="4" height="15" fill="rgb(236,177,25)"/><text x="518.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1380" width="4" height="15" fill="rgb(215,125,11)"/><text x="518.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.34%)</title><rect x="515" y="1396" width="4" height="15" fill="rgb(252,25,4)"/><text x="518.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1412" width="4" height="15" fill="rgb(239,51,43)"/><text x="518.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1428" width="4" height="15" fill="rgb(221,136,28)"/><text x="518.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1444" width="4" height="15" fill="rgb(250,223,29)"/><text x="518.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1460" width="4" height="15" fill="rgb(226,16,50)"/><text x="518.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1476" width="4" height="15" fill="rgb(210,78,24)"/><text x="518.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.34%)</title><rect x="515" y="1492" width="4" height="15" fill="rgb(221,57,0)"/><text x="518.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="515" y="1508" width="4" height="15" fill="rgb(209,27,33)"/><text x="518.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1524" width="4" height="15" fill="rgb(212,128,10)"/><text x="518.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1540" width="4" height="15" fill="rgb(247,17,22)"/><text x="518.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1556" width="4" height="15" fill="rgb(212,229,30)"/><text x="518.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1572" width="4" height="15" fill="rgb(220,219,11)"/><text x="518.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1588" width="4" height="15" fill="rgb(228,56,53)"/><text x="518.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1604" width="4" height="15" fill="rgb(243,72,12)"/><text x="518.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.34%)</title><rect x="515" y="1620" width="4" height="15" fill="rgb(206,222,29)"/><text x="518.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1636" width="4" height="15" fill="rgb(236,154,54)"/><text x="518.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1652" width="4" height="15" fill="rgb(236,14,31)"/><text x="518.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1668" width="4" height="15" fill="rgb(244,198,15)"/><text x="518.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1684" width="4" height="15" fill="rgb(253,175,4)"/><text x="518.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1700" width="4" height="15" fill="rgb(243,41,52)"/><text x="518.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.34%)</title><rect x="515" y="1716" width="4" height="15" fill="rgb(222,20,24)"/><text x="518.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1732" width="4" height="15" fill="rgb(221,201,3)"/><text x="518.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1748" width="4" height="15" fill="rgb(217,38,52)"/><text x="518.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1764" width="4" height="15" fill="rgb(220,217,14)"/><text x="518.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1780" width="4" height="15" fill="rgb(236,200,53)"/><text x="518.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1796" width="4" height="15" fill="rgb(227,52,54)"/><text x="518.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.34%)</title><rect x="515" y="1812" width="4" height="15" fill="rgb(211,90,11)"/><text x="518.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="515" y="1828" width="4" height="15" fill="rgb(222,31,40)"/><text x="518.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="515" y="1844" width="4" height="15" fill="rgb(222,193,0)"/><text x="518.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="515" y="1860" width="4" height="15" fill="rgb(237,74,30)"/><text x="518.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="515" y="1876" width="4" height="15" fill="rgb(221,45,50)"/><text x="518.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1892" width="4" height="15" fill="rgb(251,204,4)"/><text x="518.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py:26) (1 samples, 0.34%)</title><rect x="515" y="1908" width="4" height="15" fill="rgb(205,108,9)"/><text x="518.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.34%)</title><rect x="515" y="1924" width="4" height="15" fill="rgb(252,204,41)"/><text x="518.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="515" y="1940" width="4" height="15" fill="rgb(210,43,26)"/><text x="518.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.34%)</title><rect x="515" y="1956" width="4" height="15" fill="rgb(215,117,6)"/><text x="518.00" y="1966.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.34%)</title><rect x="515" y="1972" width="4" height="15" fill="rgb(231,135,50)"/><text x="518.00" y="1982.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:166) (1 samples, 0.34%)</title><rect x="515" y="1988" width="4" height="15" fill="rgb(245,92,32)"/><text x="518.00" y="1998.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.34%)</title><rect x="519" y="1492" width="4" height="15" fill="rgb(208,21,30)"/><text x="522.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.34%)</title><rect x="519" y="1508" width="4" height="15" fill="rgb(205,224,36)"/><text x="522.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.34%)</title><rect x="519" y="1524" width="4" height="15" fill="rgb(254,198,4)"/><text x="522.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.34%)</title><rect x="519" y="1540" width="4" height="15" fill="rgb(232,18,24)"/><text x="522.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.34%)</title><rect x="519" y="1556" width="4" height="15" fill="rgb(226,33,17)"/><text x="522.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:73) (1 samples, 0.34%)</title><rect x="519" y="1572" width="4" height="15" fill="rgb(210,59,14)"/><text x="522.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:4) (17 samples, 5.82%)</title><rect x="458" y="52" width="69" height="15" fill="rgb(253,169,41)"/><text x="461.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 5.82%)</title><rect x="458" y="68" width="69" height="15" fill="rgb(215,86,50)"/><text x="461.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 5.82%)</title><rect x="458" y="84" width="69" height="15" fill="rgb(234,80,19)"/><text x="461.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 5.82%)</title><rect x="458" y="100" width="69" height="15" fill="rgb(247,24,44)"/><text x="461.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 5.82%)</title><rect x="458" y="116" width="69" height="15" fill="rgb(227,215,42)"/><text x="461.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 5.82%)</title><rect x="458" y="132" width="69" height="15" fill="rgb(226,201,28)"/><text x="461.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:7) (8 samples, 2.74%)</title><rect x="494" y="148" width="33" height="15" fill="rgb(251,221,53)"/><text x="497.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.74%)</title><rect x="494" y="164" width="33" height="15" fill="rgb(208,71,2)"/><text x="497.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.74%)</title><rect x="494" y="180" width="33" height="15" fill="rgb(222,197,42)"/><text x="497.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.74%)</title><rect x="494" y="196" width="33" height="15" fill="rgb(234,202,50)"/><text x="497.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.74%)</title><rect x="494" y="212" width="33" height="15" fill="rgb(205,121,2)"/><text x="497.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.74%)</title><rect x="494" y="228" width="33" height="15" fill="rgb(229,197,51)"/><text x="497.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 2.05%)</title><rect x="503" y="244" width="24" height="15" fill="rgb(252,9,28)"/><text x="506.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.05%)</title><rect x="503" y="260" width="24" height="15" fill="rgb(231,150,13)"/><text x="506.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.05%)</title><rect x="503" y="276" width="24" height="15" fill="rgb(220,18,32)"/><text x="506.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.05%)</title><rect x="503" y="292" width="24" height="15" fill="rgb(223,35,48)"/><text x="506.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.05%)</title><rect x="503" y="308" width="24" height="15" fill="rgb(239,104,26)"/><text x="506.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.05%)</title><rect x="503" y="324" width="24" height="15" fill="rgb(247,19,51)"/><text x="506.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 2.05%)</title><rect x="503" y="340" width="24" height="15" fill="rgb(241,84,10)"/><text x="506.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.05%)</title><rect x="503" y="356" width="24" height="15" fill="rgb(211,62,20)"/><text x="506.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.05%)</title><rect x="503" y="372" width="24" height="15" fill="rgb(229,122,45)"/><text x="506.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.05%)</title><rect x="503" y="388" width="24" height="15" fill="rgb(230,198,48)"/><text x="506.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.05%)</title><rect x="503" y="404" width="24" height="15" fill="rgb(248,151,17)"/><text x="506.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.05%)</title><rect x="503" y="420" width="24" height="15" fill="rgb(250,195,24)"/><text x="506.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.03%)</title><rect x="515" y="436" width="12" height="15" fill="rgb(242,58,43)"/><text x="518.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="452" width="12" height="15" fill="rgb(221,162,53)"/><text x="518.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.03%)</title><rect x="515" y="468" width="12" height="15" fill="rgb(224,34,26)"/><text x="518.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="484" width="12" height="15" fill="rgb(246,152,2)"/><text x="518.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="500" width="12" height="15" fill="rgb(241,14,13)"/><text x="518.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="515" y="516" width="12" height="15" fill="rgb(207,137,48)"/><text x="518.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="515" y="532" width="12" height="15" fill="rgb(246,99,0)"/><text x="518.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="515" y="548" width="12" height="15" fill="rgb(250,163,0)"/><text x="518.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="564" width="12" height="15" fill="rgb(214,86,5)"/><text x="518.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.03%)</title><rect x="515" y="580" width="12" height="15" fill="rgb(236,24,26)"/><text x="518.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="596" width="12" height="15" fill="rgb(241,210,11)"/><text x="518.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="515" y="612" width="12" height="15" fill="rgb(243,144,15)"/><text x="518.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="515" y="628" width="12" height="15" fill="rgb(252,88,2)"/><text x="518.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="515" y="644" width="12" height="15" fill="rgb(242,156,10)"/><text x="518.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="660" width="12" height="15" fill="rgb(207,12,9)"/><text x="518.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.03%)</title><rect x="515" y="676" width="12" height="15" fill="rgb(245,111,7)"/><text x="518.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="692" width="12" height="15" fill="rgb(208,144,50)"/><text x="518.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="515" y="708" width="12" height="15" fill="rgb(239,153,4)"/><text x="518.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="515" y="724" width="12" height="15" fill="rgb(225,123,18)"/><text x="518.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="515" y="740" width="12" height="15" fill="rgb(235,142,50)"/><text x="518.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="756" width="12" height="15" fill="rgb(252,156,52)"/><text x="518.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.03%)</title><rect x="515" y="772" width="12" height="15" fill="rgb(249,67,22)"/><text x="518.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="788" width="12" height="15" fill="rgb(217,135,17)"/><text x="518.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="515" y="804" width="12" height="15" fill="rgb(205,178,29)"/><text x="518.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="515" y="820" width="12" height="15" fill="rgb(231,69,43)"/><text x="518.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="515" y="836" width="12" height="15" fill="rgb(234,186,6)"/><text x="518.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="852" width="12" height="15" fill="rgb(247,63,14)"/><text x="518.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.03%)</title><rect x="515" y="868" width="12" height="15" fill="rgb(234,184,48)"/><text x="518.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="884" width="12" height="15" fill="rgb(211,50,52)"/><text x="518.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.03%)</title><rect x="515" y="900" width="12" height="15" fill="rgb(250,35,14)"/><text x="518.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="916" width="12" height="15" fill="rgb(254,23,25)"/><text x="518.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="932" width="12" height="15" fill="rgb(214,119,15)"/><text x="518.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="515" y="948" width="12" height="15" fill="rgb(222,97,12)"/><text x="518.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="515" y="964" width="12" height="15" fill="rgb(235,146,19)"/><text x="518.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="515" y="980" width="12" height="15" fill="rgb(219,40,43)"/><text x="518.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="996" width="12" height="15" fill="rgb(254,151,44)"/><text x="518.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.03%)</title><rect x="515" y="1012" width="12" height="15" fill="rgb(220,147,27)"/><text x="518.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.03%)</title><rect x="515" y="1028" width="12" height="15" fill="rgb(207,195,48)"/><text x="518.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.03%)</title><rect x="515" y="1044" width="12" height="15" fill="rgb(225,160,36)"/><text x="518.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.03%)</title><rect x="515" y="1060" width="12" height="15" fill="rgb(216,196,23)"/><text x="518.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.03%)</title><rect x="515" y="1076" width="12" height="15" fill="rgb(232,55,16)"/><text x="518.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.03%)</title><rect x="515" y="1092" width="12" height="15" fill="rgb(221,98,21)"/><text x="518.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.68%)</title><rect x="519" y="1108" width="8" height="15" fill="rgb(221,11,14)"/><text x="522.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.68%)</title><rect x="519" y="1124" width="8" height="15" fill="rgb(249,34,36)"/><text x="522.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="519" y="1140" width="8" height="15" fill="rgb(223,50,46)"/><text x="522.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="519" y="1156" width="8" height="15" fill="rgb(209,74,51)"/><text x="522.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="519" y="1172" width="8" height="15" fill="rgb(219,29,39)"/><text x="522.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="519" y="1188" width="8" height="15" fill="rgb(247,192,31)"/><text x="522.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="519" y="1204" width="8" height="15" fill="rgb(208,113,34)"/><text x="522.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="519" y="1220" width="8" height="15" fill="rgb(236,166,0)"/><text x="522.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.68%)</title><rect x="519" y="1236" width="8" height="15" fill="rgb(218,208,32)"/><text x="522.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.68%)</title><rect x="519" y="1252" width="8" height="15" fill="rgb(243,196,5)"/><text x="522.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="519" y="1268" width="8" height="15" fill="rgb(245,61,23)"/><text x="522.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="519" y="1284" width="8" height="15" fill="rgb(219,60,10)"/><text x="522.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="519" y="1300" width="8" height="15" fill="rgb(241,125,40)"/><text x="522.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="519" y="1316" width="8" height="15" fill="rgb(218,227,0)"/><text x="522.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="519" y="1332" width="8" height="15" fill="rgb(225,89,1)"/><text x="522.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="519" y="1348" width="8" height="15" fill="rgb(225,198,37)"/><text x="522.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.68%)</title><rect x="519" y="1364" width="8" height="15" fill="rgb(228,137,44)"/><text x="522.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="519" y="1380" width="8" height="15" fill="rgb(215,195,33)"/><text x="522.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="519" y="1396" width="8" height="15" fill="rgb(252,162,54)"/><text x="522.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="519" y="1412" width="8" height="15" fill="rgb(215,208,19)"/><text x="522.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="519" y="1428" width="8" height="15" fill="rgb(235,191,4)"/><text x="522.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="519" y="1444" width="8" height="15" fill="rgb(221,0,0)"/><text x="522.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.68%)</title><rect x="519" y="1460" width="8" height="15" fill="rgb(235,121,37)"/><text x="522.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.68%)</title><rect x="519" y="1476" width="8" height="15" fill="rgb(221,187,51)"/><text x="522.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.34%)</title><rect x="523" y="1492" width="4" height="15" fill="rgb(205,95,20)"/><text x="526.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:14) (1 samples, 0.34%)</title><rect x="523" y="1508" width="4" height="15" fill="rgb(214,101,49)"/><text x="526.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:23) (1 samples, 0.34%)</title><rect x="527" y="388" width="4" height="15" fill="rgb(251,211,40)"/><text x="530.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="527" y="404" width="4" height="15" fill="rgb(217,131,31)"/><text x="530.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="527" y="420" width="4" height="15" fill="rgb(243,144,12)"/><text x="530.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="527" y="436" width="4" height="15" fill="rgb(210,180,45)"/><text x="530.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.34%)</title><rect x="527" y="452" width="4" height="15" fill="rgb(228,185,19)"/><text x="530.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.34%)</title><rect x="527" y="468" width="4" height="15" fill="rgb(218,163,0)"/><text x="530.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.34%)</title><rect x="527" y="484" width="4" height="15" fill="rgb(247,40,6)"/><text x="530.00" y="494.50"></text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:28) (2 samples, 0.68%)</title><rect x="527" y="84" width="8" height="15" fill="rgb(216,123,51)"/><text x="530.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.68%)</title><rect x="527" y="100" width="8" height="15" fill="rgb(237,181,38)"/><text x="530.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.68%)</title><rect x="527" y="116" width="8" height="15" fill="rgb(206,183,47)"/><text x="530.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.68%)</title><rect x="527" y="132" width="8" height="15" fill="rgb(240,224,18)"/><text x="530.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.68%)</title><rect x="527" y="148" width="8" height="15" fill="rgb(236,90,43)"/><text x="530.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.68%)</title><rect x="527" y="164" width="8" height="15" fill="rgb(218,52,23)"/><text x="530.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.68%)</title><rect x="527" y="180" width="8" height="15" fill="rgb(211,19,42)"/><text x="530.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.68%)</title><rect x="527" y="196" width="8" height="15" fill="rgb(216,208,45)"/><text x="530.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="527" y="212" width="8" height="15" fill="rgb(210,223,16)"/><text x="530.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="527" y="228" width="8" height="15" fill="rgb(228,177,2)"/><text x="530.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="527" y="244" width="8" height="15" fill="rgb(235,18,50)"/><text x="530.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="527" y="260" width="8" height="15" fill="rgb(228,111,43)"/><text x="530.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="527" y="276" width="8" height="15" fill="rgb(234,217,42)"/><text x="530.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.68%)</title><rect x="527" y="292" width="8" height="15" fill="rgb(211,104,36)"/><text x="530.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.68%)</title><rect x="527" y="308" width="8" height="15" fill="rgb(254,67,34)"/><text x="530.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.68%)</title><rect x="527" y="324" width="8" height="15" fill="rgb(208,208,38)"/><text x="530.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.68%)</title><rect x="527" y="340" width="8" height="15" fill="rgb(252,212,33)"/><text x="530.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.68%)</title><rect x="527" y="356" width="8" height="15" fill="rgb(252,37,15)"/><text x="530.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.68%)</title><rect x="527" y="372" width="8" height="15" fill="rgb(215,43,6)"/><text x="530.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.34%)</title><rect x="531" y="388" width="4" height="15" fill="rgb(227,163,10)"/><text x="534.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.34%)</title><rect x="531" y="404" width="4" height="15" fill="rgb(233,119,42)"/><text x="534.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.34%)</title><rect x="531" y="420" width="4" height="15" fill="rgb(227,124,14)"/><text x="534.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.34%)</title><rect x="531" y="436" width="4" height="15" fill="rgb(213,109,22)"/><text x="534.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.34%)</title><rect x="531" y="452" width="4" height="15" fill="rgb(245,226,22)"/><text x="534.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.34%)</title><rect x="531" y="468" width="4" height="15" fill="rgb(205,195,29)"/><text x="534.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.34%)</title><rect x="531" y="484" width="4" height="15" fill="rgb(249,146,14)"/><text x="534.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.34%)</title><rect x="531" y="500" width="4" height="15" fill="rgb(211,66,19)"/><text x="534.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.34%)</title><rect x="531" y="516" width="4" height="15" fill="rgb(233,132,32)"/><text x="534.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.34%)</title><rect x="531" y="532" width="4" height="15" fill="rgb(206,175,38)"/><text x="534.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.34%)</title><rect x="531" y="548" width="4" height="15" fill="rgb(228,73,2)"/><text x="534.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.34%)</title><rect x="531" y="564" width="4" height="15" fill="rgb(214,118,39)"/><text x="534.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.34%)</title><rect x="531" y="580" width="4" height="15" fill="rgb(221,44,22)"/><text x="534.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.34%)</title><rect x="531" y="596" width="4" height="15" fill="rgb(205,87,35)"/><text x="534.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.34%)</title><rect x="531" y="612" width="4" height="15" fill="rgb(253,45,14)"/><text x="534.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.34%)</title><rect x="531" y="628" width="4" height="15" fill="rgb(221,96,40)"/><text x="534.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.34%)</title><rect x="531" y="644" width="4" height="15" fill="rgb(223,99,47)"/><text x="534.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.34%)</title><rect x="531" y="660" width="4" height="15" fill="rgb(220,15,2)"/><text x="534.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.34%)</title><rect x="531" y="676" width="4" height="15" fill="rgb(222,40,14)"/><text x="534.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.34%)</title><rect x="531" y="692" width="4" height="15" fill="rgb(246,0,47)"/><text x="534.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.34%)</title><rect x="531" y="708" width="4" height="15" fill="rgb(244,161,42)"/><text x="534.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.34%)</title><rect x="531" y="724" width="4" height="15" fill="rgb(205,175,50)"/><text x="534.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.34%)</title><rect x="531" y="740" width="4" height="15" fill="rgb(244,38,19)"/><text x="534.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1082) (1 samples, 0.34%)</title><rect x="531" y="756" width="4" height="15" fill="rgb(240,172,2)"/><text x="534.00" y="766.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.34%)</title><rect x="531" y="772" width="4" height="15" fill="rgb(236,176,29)"/><text x="534.00" y="782.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.34%)</title><rect x="531" y="788" width="4" height="15" fill="rgb(206,85,38)"/><text x="534.00" y="798.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.34%)</title><rect x="531" y="804" width="4" height="15" fill="rgb(230,109,12)"/><text x="534.00" y="814.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.34%)</title><rect x="531" y="820" width="4" height="15" fill="rgb(215,208,14)"/><text x="534.00" y="830.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.34%)</title><rect x="531" y="836" width="4" height="15" fill="rgb(239,205,4)"/><text x="534.00" y="846.50"></text></g><g><title>iter_fields (jinja2/nodes.py:160) (1 samples, 0.34%)</title><rect x="531" y="852" width="4" height="15" fill="rgb(218,13,47)"/><text x="534.00" y="862.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.34%)</title><rect x="539" y="148" width="4" height="15" fill="rgb(252,74,53)"/><text x="542.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.34%)</title><rect x="543" y="164" width="4" height="15" fill="rgb(221,170,30)"/><text x="546.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.34%)</title><rect x="547" y="164" width="4" height="15" fill="rgb(243,184,43)"/><text x="550.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (4 samples, 1.37%)</title><rect x="571" y="180" width="16" height="15" fill="rgb(214,59,18)"/><text x="574.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (9 samples, 3.08%)</title><rect x="587" y="180" width="37" height="15" fill="rgb(248,195,8)"/><text x="590.00" y="190.50">run..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.68%)</title><rect x="616" y="196" width="8" height="15" fill="rgb(210,144,3)"/><text x="619.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.34%)</title><rect x="676" y="212" width="4" height="15" fill="rgb(244,18,52)"/><text x="679.00" y="222.50"></text></g><g><title>array_ravel (methods.c:2443) (1 samples, 0.34%)</title><rect x="676" y="228" width="4" height="15" fill="rgb(216,65,50)"/><text x="679.00" y="238.50"></text></g><g><title>PyArray_Ravel (shape.c:906) (1 samples, 0.34%)</title><rect x="676" y="244" width="4" height="15" fill="rgb(246,101,12)"/><text x="679.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.34%)</title><rect x="676" y="260" width="4" height="15" fill="rgb(219,68,17)"/><text x="679.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="676" y="276" width="4" height="15" fill="rgb(254,10,10)"/><text x="679.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="676" y="292" width="4" height="15" fill="rgb(211,57,18)"/><text x="679.00" y="302.50"></text></g><g><title>prepare_index (mapping.c:491) (2 samples, 0.68%)</title><rect x="680" y="244" width="8" height="15" fill="rgb(218,174,14)"/><text x="683.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.68%)</title><rect x="680" y="260" width="8" height="15" fill="rgb(219,104,19)"/><text x="683.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (2 samples, 0.68%)</title><rect x="680" y="276" width="8" height="15" fill="rgb(225,107,5)"/><text x="683.00" y="286.50"></text></g><g><title>0x7f38a0ed9e50 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="684" y="292" width="4" height="15" fill="rgb(218,12,38)"/><text x="687.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.34%)</title><rect x="688" y="276" width="4" height="15" fill="rgb(228,122,44)"/><text x="691.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1539) (4 samples, 1.37%)</title><rect x="680" y="228" width="16" height="15" fill="rgb(216,14,22)"/><text x="683.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.68%)</title><rect x="688" y="244" width="8" height="15" fill="rgb(229,112,24)"/><text x="691.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.68%)</title><rect x="688" y="260" width="8" height="15" fill="rgb(235,56,18)"/><text x="691.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.34%)</title><rect x="692" y="276" width="4" height="15" fill="rgb(245,33,7)"/><text x="695.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.34%)</title><rect x="692" y="292" width="4" height="15" fill="rgb(235,119,54)"/><text x="695.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:448) (1 samples, 0.34%)</title><rect x="692" y="308" width="4" height="15" fill="rgb(223,224,44)"/><text x="695.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.34%)</title><rect x="696" y="244" width="5" height="15" fill="rgb(210,154,8)"/><text x="699.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="696" y="260" width="5" height="15" fill="rgb(217,132,48)"/><text x="699.00" y="270.50"></text></g><g><title>0x7f38a0ec4dc9 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="696" y="276" width="5" height="15" fill="rgb(212,54,13)"/><text x="699.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.34%)</title><rect x="701" y="244" width="4" height="15" fill="rgb(229,98,36)"/><text x="704.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.34%)</title><rect x="701" y="260" width="4" height="15" fill="rgb(227,40,29)"/><text x="704.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="701" y="276" width="4" height="15" fill="rgb(227,170,51)"/><text x="704.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.34%)</title><rect x="701" y="292" width="4" height="15" fill="rgb(227,6,51)"/><text x="704.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 1.03%)</title><rect x="696" y="228" width="13" height="15" fill="rgb(223,41,18)"/><text x="699.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2839) (1 samples, 0.34%)</title><rect x="705" y="244" width="4" height="15" fill="rgb(217,32,9)"/><text x="708.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.34%)</title><rect x="705" y="260" width="4" height="15" fill="rgb(226,179,12)"/><text x="708.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (8 samples, 2.74%)</title><rect x="680" y="212" width="33" height="15" fill="rgb(206,204,7)"/><text x="683.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.34%)</title><rect x="709" y="228" width="4" height="15" fill="rgb(227,68,19)"/><text x="712.00" y="238.50"></text></g><g><title>0x7f38a0ec3ca8 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="709" y="244" width="4" height="15" fill="rgb(246,30,49)"/><text x="712.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.34%)</title><rect x="713" y="212" width="4" height="15" fill="rgb(213,223,49)"/><text x="716.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.34%)</title><rect x="713" y="228" width="4" height="15" fill="rgb(249,91,12)"/><text x="716.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.34%)</title><rect x="725" y="244" width="4" height="15" fill="rgb(234,18,52)"/><text x="728.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.34%)</title><rect x="725" y="260" width="4" height="15" fill="rgb(212,21,45)"/><text x="728.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.34%)</title><rect x="725" y="276" width="4" height="15" fill="rgb(226,13,11)"/><text x="728.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.34%)</title><rect x="725" y="292" width="4" height="15" fill="rgb(231,108,43)"/><text x="728.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:986) (1 samples, 0.34%)</title><rect x="725" y="308" width="4" height="15" fill="rgb(206,108,4)"/><text x="728.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.34%)</title><rect x="729" y="276" width="4" height="15" fill="rgb(246,207,44)"/><text x="732.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="729" y="292" width="4" height="15" fill="rgb(241,79,40)"/><text x="732.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.34%)</title><rect x="733" y="276" width="4" height="15" fill="rgb(212,40,38)"/><text x="736.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.34%)</title><rect x="733" y="292" width="4" height="15" fill="rgb(217,190,38)"/><text x="736.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.34%)</title><rect x="737" y="292" width="4" height="15" fill="rgb(240,93,39)"/><text x="740.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (7 samples, 2.40%)</title><rect x="717" y="212" width="28" height="15" fill="rgb(213,179,13)"/><text x="720.00" y="222.50">_..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (5 samples, 1.71%)</title><rect x="725" y="228" width="20" height="15" fill="rgb(243,168,29)"/><text x="728.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (4 samples, 1.37%)</title><rect x="729" y="244" width="16" height="15" fill="rgb(247,3,29)"/><text x="732.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (4 samples, 1.37%)</title><rect x="729" y="260" width="16" height="15" fill="rgb(242,152,11)"/><text x="732.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (2 samples, 0.68%)</title><rect x="737" y="276" width="8" height="15" fill="rgb(231,11,17)"/><text x="740.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.34%)</title><rect x="741" y="292" width="4" height="15" fill="rgb(209,138,23)"/><text x="744.00" y="302.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.34%)</title><rect x="741" y="308" width="4" height="15" fill="rgb(247,193,26)"/><text x="744.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.34%)</title><rect x="745" y="244" width="4" height="15" fill="rgb(224,62,14)"/><text x="748.00" y="254.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.68%)</title><rect x="745" y="228" width="8" height="15" fill="rgb(217,42,16)"/><text x="748.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.34%)</title><rect x="749" y="244" width="4" height="15" fill="rgb(254,153,49)"/><text x="752.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.34%)</title><rect x="749" y="260" width="4" height="15" fill="rgb(235,130,25)"/><text x="752.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.34%)</title><rect x="749" y="276" width="4" height="15" fill="rgb(238,114,0)"/><text x="752.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:874) (1 samples, 0.34%)</title><rect x="749" y="292" width="4" height="15" fill="rgb(225,181,19)"/><text x="752.00" y="302.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.34%)</title><rect x="753" y="228" width="4" height="15" fill="rgb(239,107,30)"/><text x="756.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.34%)</title><rect x="753" y="244" width="4" height="15" fill="rgb(253,116,28)"/><text x="756.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.34%)</title><rect x="753" y="260" width="4" height="15" fill="rgb(214,216,29)"/><text x="756.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="753" y="276" width="4" height="15" fill="rgb(241,61,18)"/><text x="756.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="753" y="292" width="4" height="15" fill="rgb(250,95,5)"/><text x="756.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (4 samples, 1.37%)</title><rect x="745" y="212" width="16" height="15" fill="rgb(234,50,17)"/><text x="748.00" y="222.50"></text></g><g><title>array_reshape (methods.c:211) (1 samples, 0.34%)</title><rect x="757" y="228" width="4" height="15" fill="rgb(224,175,10)"/><text x="760.00" y="238.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.34%)</title><rect x="757" y="244" width="4" height="15" fill="rgb(242,17,22)"/><text x="760.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:106) (1 samples, 0.34%)</title><rect x="757" y="260" width="4" height="15" fill="rgb(229,25,43)"/><text x="760.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="769" y="260" width="4" height="15" fill="rgb(223,211,43)"/><text x="772.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.34%)</title><rect x="769" y="276" width="4" height="15" fill="rgb(230,157,26)"/><text x="772.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.34%)</title><rect x="769" y="292" width="4" height="15" fill="rgb(250,136,44)"/><text x="772.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.34%)</title><rect x="769" y="308" width="4" height="15" fill="rgb(223,76,1)"/><text x="772.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.34%)</title><rect x="769" y="324" width="4" height="15" fill="rgb(205,17,19)"/><text x="772.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="773" y="260" width="4" height="15" fill="rgb(221,223,8)"/><text x="776.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.34%)</title><rect x="773" y="276" width="4" height="15" fill="rgb(253,150,23)"/><text x="776.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.34%)</title><rect x="773" y="292" width="4" height="15" fill="rgb(232,65,35)"/><text x="776.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:975) (1 samples, 0.34%)</title><rect x="773" y="308" width="4" height="15" fill="rgb(239,24,40)"/><text x="776.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.34%)</title><rect x="777" y="260" width="4" height="15" fill="rgb(219,214,1)"/><text x="780.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (1 samples, 0.34%)</title><rect x="777" y="276" width="4" height="15" fill="rgb(210,163,52)"/><text x="780.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.34%)</title><rect x="777" y="292" width="4" height="15" fill="rgb(252,2,6)"/><text x="780.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.34%)</title><rect x="777" y="308" width="4" height="15" fill="rgb(253,178,15)"/><text x="780.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.34%)</title><rect x="777" y="324" width="4" height="15" fill="rgb(253,135,19)"/><text x="780.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (6 samples, 2.05%)</title><rect x="761" y="212" width="24" height="15" fill="rgb(207,175,25)"/><text x="764.00" y="222.50">_..</text></g><g><title>array_add (number.c:330) (4 samples, 1.37%)</title><rect x="769" y="228" width="16" height="15" fill="rgb(248,195,12)"/><text x="772.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.37%)</title><rect x="769" y="244" width="16" height="15" fill="rgb(209,34,41)"/><text x="772.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="781" y="260" width="4" height="15" fill="rgb(220,124,6)"/><text x="784.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.34%)</title><rect x="781" y="276" width="4" height="15" fill="rgb(222,169,41)"/><text x="784.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="781" y="292" width="4" height="15" fill="rgb(208,163,47)"/><text x="784.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.34%)</title><rect x="781" y="308" width="4" height="15" fill="rgb(227,172,29)"/><text x="784.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (32 samples, 10.96%)</title><rect x="664" y="196" width="129" height="15" fill="rgb(246,123,12)"/><text x="667.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (2 samples, 0.68%)</title><rect x="785" y="212" width="8" height="15" fill="rgb(235,93,9)"/><text x="788.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (2 samples, 0.68%)</title><rect x="785" y="228" width="8" height="15" fill="rgb(225,214,40)"/><text x="788.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:65) (1 samples, 0.34%)</title><rect x="798" y="228" width="4" height="15" fill="rgb(235,12,39)"/><text x="801.00" y="238.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (1 samples, 0.34%)</title><rect x="806" y="260" width="4" height="15" fill="rgb(249,148,7)"/><text x="809.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.34%)</title><rect x="806" y="276" width="4" height="15" fill="rgb(248,186,0)"/><text x="809.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.34%)</title><rect x="806" y="292" width="4" height="15" fill="rgb(225,42,10)"/><text x="809.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.34%)</title><rect x="806" y="308" width="4" height="15" fill="rgb(214,227,50)"/><text x="809.00" y="318.50"></text></g><g><title>0x7f38a0ee412f (libc-2.29.so) (1 samples, 0.34%)</title><rect x="810" y="292" width="4" height="15" fill="rgb(239,132,13)"/><text x="813.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.34%)</title><rect x="814" y="308" width="4" height="15" fill="rgb(205,85,33)"/><text x="817.00" y="318.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (3 samples, 1.03%)</title><rect x="810" y="260" width="12" height="15" fill="rgb(254,88,11)"/><text x="813.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (3 samples, 1.03%)</title><rect x="810" y="276" width="12" height="15" fill="rgb(210,67,31)"/><text x="813.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.68%)</title><rect x="814" y="292" width="8" height="15" fill="rgb(226,167,33)"/><text x="817.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.34%)</title><rect x="818" y="308" width="4" height="15" fill="rgb(239,118,7)"/><text x="821.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.34%)</title><rect x="818" y="324" width="4" height="15" fill="rgb(235,202,11)"/><text x="821.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.34%)</title><rect x="818" y="340" width="4" height="15" fill="rgb(208,62,38)"/><text x="821.00" y="350.50"></text></g><g><title>array_astype (methods.c:834) (1 samples, 0.34%)</title><rect x="822" y="276" width="4" height="15" fill="rgb(248,203,28)"/><text x="825.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.34%)</title><rect x="822" y="292" width="4" height="15" fill="rgb(212,194,15)"/><text x="825.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.34%)</title><rect x="826" y="308" width="4" height="15" fill="rgb(210,3,11)"/><text x="829.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="826" y="324" width="4" height="15" fill="rgb(251,97,23)"/><text x="829.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (10 samples, 3.42%)</title><rect x="793" y="196" width="41" height="15" fill="rgb(242,139,47)"/><text x="796.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (10 samples, 3.42%)</title><rect x="793" y="212" width="41" height="15" fill="rgb(213,137,1)"/><text x="796.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (8 samples, 2.74%)</title><rect x="802" y="228" width="32" height="15" fill="rgb(225,212,47)"/><text x="805.00" y="238.50">_r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (8 samples, 2.74%)</title><rect x="802" y="244" width="32" height="15" fill="rgb(233,86,54)"/><text x="805.00" y="254.50">_r..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:16) (3 samples, 1.03%)</title><rect x="822" y="260" width="12" height="15" fill="rgb(230,101,49)"/><text x="825.00" y="270.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.68%)</title><rect x="826" y="276" width="8" height="15" fill="rgb(220,177,20)"/><text x="829.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.68%)</title><rect x="826" y="292" width="8" height="15" fill="rgb(228,87,22)"/><text x="829.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.34%)</title><rect x="830" y="308" width="4" height="15" fill="rgb(254,71,18)"/><text x="833.00" y="318.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.34%)</title><rect x="830" y="324" width="4" height="15" fill="rgb(253,1,38)"/><text x="833.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:20) (3 samples, 1.03%)</title><rect x="838" y="228" width="12" height="15" fill="rgb(228,89,18)"/><text x="841.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="846" y="244" width="4" height="15" fill="rgb(228,14,40)"/><text x="849.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="846" y="260" width="4" height="15" fill="rgb(237,213,23)"/><text x="849.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.34%)</title><rect x="846" y="276" width="4" height="15" fill="rgb(242,101,45)"/><text x="849.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.34%)</title><rect x="846" y="292" width="4" height="15" fill="rgb(226,31,18)"/><text x="849.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.34%)</title><rect x="846" y="308" width="4" height="15" fill="rgb(209,108,41)"/><text x="849.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="854" y="260" width="4" height="15" fill="rgb(242,180,28)"/><text x="857.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.34%)</title><rect x="854" y="276" width="4" height="15" fill="rgb(234,144,50)"/><text x="857.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.34%)</title><rect x="854" y="292" width="4" height="15" fill="rgb(241,129,42)"/><text x="857.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (4 samples, 1.37%)</title><rect x="850" y="228" width="16" height="15" fill="rgb(238,184,37)"/><text x="853.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.03%)</title><rect x="854" y="244" width="12" height="15" fill="rgb(225,164,3)"/><text x="857.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.68%)</title><rect x="858" y="260" width="8" height="15" fill="rgb(235,227,15)"/><text x="861.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.68%)</title><rect x="858" y="276" width="8" height="15" fill="rgb(220,190,2)"/><text x="861.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (2 samples, 0.68%)</title><rect x="858" y="292" width="8" height="15" fill="rgb(249,10,31)"/><text x="861.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (2 samples, 0.68%)</title><rect x="858" y="308" width="8" height="15" fill="rgb(222,84,34)"/><text x="861.00" y="318.50"></text></g><g><title>logf (libm-2.29.so) (1 samples, 0.34%)</title><rect x="862" y="324" width="4" height="15" fill="rgb(205,67,34)"/><text x="865.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="866" y="260" width="4" height="15" fill="rgb(248,92,2)"/><text x="869.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.34%)</title><rect x="866" y="276" width="4" height="15" fill="rgb(250,207,54)"/><text x="869.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="870" y="260" width="4" height="15" fill="rgb(252,14,11)"/><text x="873.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.34%)</title><rect x="870" y="276" width="4" height="15" fill="rgb(225,16,48)"/><text x="873.00" y="286.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1746) (1 samples, 0.34%)</title><rect x="870" y="292" width="4" height="15" fill="rgb(228,179,2)"/><text x="873.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.03%)</title><rect x="866" y="244" width="12" height="15" fill="rgb(246,129,23)"/><text x="869.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3283) (1 samples, 0.34%)</title><rect x="874" y="260" width="4" height="15" fill="rgb(223,88,11)"/><text x="877.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (4 samples, 1.37%)</title><rect x="866" y="228" width="16" height="15" fill="rgb(250,7,7)"/><text x="869.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.34%)</title><rect x="878" y="244" width="4" height="15" fill="rgb(214,42,30)"/><text x="881.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.34%)</title><rect x="878" y="260" width="4" height="15" fill="rgb(246,77,49)"/><text x="881.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.34%)</title><rect x="882" y="260" width="4" height="15" fill="rgb(228,12,28)"/><text x="885.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:94) (1 samples, 0.34%)</title><rect x="882" y="276" width="4" height="15" fill="rgb(215,133,15)"/><text x="885.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.34%)</title><rect x="886" y="308" width="4" height="15" fill="rgb(223,146,3)"/><text x="889.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="886" y="324" width="4" height="15" fill="rgb(207,95,30)"/><text x="889.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="886" y="340" width="4" height="15" fill="rgb(248,129,40)"/><text x="889.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.34%)</title><rect x="886" y="356" width="4" height="15" fill="rgb(234,76,54)"/><text x="889.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="886" y="372" width="4" height="15" fill="rgb(238,26,7)"/><text x="889.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.34%)</title><rect x="890" y="356" width="4" height="15" fill="rgb(234,71,12)"/><text x="893.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.34%)</title><rect x="890" y="372" width="4" height="15" fill="rgb(232,214,50)"/><text x="893.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.34%)</title><rect x="890" y="388" width="4" height="15" fill="rgb(235,132,44)"/><text x="893.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.34%)</title><rect x="890" y="404" width="4" height="15" fill="rgb(223,192,44)"/><text x="893.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.34%)</title><rect x="890" y="420" width="4" height="15" fill="rgb(239,5,44)"/><text x="893.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.34%)</title><rect x="890" y="436" width="4" height="15" fill="rgb(209,64,49)"/><text x="893.00" y="446.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.34%)</title><rect x="890" y="452" width="4" height="15" fill="rgb(222,58,11)"/><text x="893.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:106) (1 samples, 0.34%)</title><rect x="890" y="468" width="4" height="15" fill="rgb(242,146,35)"/><text x="893.00" y="478.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.37%)</title><rect x="882" y="244" width="17" height="15" fill="rgb(218,70,20)"/><text x="885.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.03%)</title><rect x="886" y="260" width="13" height="15" fill="rgb(226,200,11)"/><text x="889.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 1.03%)</title><rect x="886" y="276" width="13" height="15" fill="rgb(217,30,39)"/><text x="889.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.03%)</title><rect x="886" y="292" width="13" height="15" fill="rgb(253,217,6)"/><text x="889.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.68%)</title><rect x="890" y="308" width="9" height="15" fill="rgb(243,198,27)"/><text x="893.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.68%)</title><rect x="890" y="324" width="9" height="15" fill="rgb(210,137,14)"/><text x="893.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.68%)</title><rect x="890" y="340" width="9" height="15" fill="rgb(214,100,2)"/><text x="893.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.34%)</title><rect x="894" y="356" width="5" height="15" fill="rgb(206,97,13)"/><text x="897.00" y="366.50"></text></g><g><title>0x7f38a00e4f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="894" y="372" width="5" height="15" fill="rgb(253,74,48)"/><text x="897.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="899" y="244" width="4" height="15" fill="rgb(227,57,4)"/><text x="902.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="899" y="260" width="4" height="15" fill="rgb(240,95,47)"/><text x="902.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="899" y="276" width="4" height="15" fill="rgb(253,130,8)"/><text x="902.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.34%)</title><rect x="899" y="292" width="4" height="15" fill="rgb(219,63,3)"/><text x="902.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (6 samples, 2.05%)</title><rect x="882" y="228" width="25" height="15" fill="rgb(247,203,35)"/><text x="885.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="903" y="244" width="4" height="15" fill="rgb(225,88,5)"/><text x="906.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="903" y="260" width="4" height="15" fill="rgb(226,177,1)"/><text x="906.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.34%)</title><rect x="903" y="276" width="4" height="15" fill="rgb(232,176,19)"/><text x="906.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.34%)</title><rect x="903" y="292" width="4" height="15" fill="rgb(227,196,42)"/><text x="906.00" y="302.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.34%)</title><rect x="907" y="244" width="4" height="15" fill="rgb(242,157,46)"/><text x="910.00" y="254.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py:2042) (1 samples, 0.34%)</title><rect x="907" y="260" width="4" height="15" fill="rgb(225,116,47)"/><text x="910.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2168) (1 samples, 0.34%)</title><rect x="911" y="276" width="4" height="15" fill="rgb(252,150,43)"/><text x="914.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.34%)</title><rect x="927" y="324" width="4" height="15" fill="rgb(245,9,47)"/><text x="930.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (25 samples, 8.56%)</title><rect x="834" y="196" width="101" height="15" fill="rgb(249,191,25)"/><text x="837.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 8.56%)</title><rect x="834" y="212" width="101" height="15" fill="rgb(249,54,18)"/><text x="837.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (7 samples, 2.40%)</title><rect x="907" y="228" width="28" height="15" fill="rgb(229,34,7)"/><text x="910.00" y="238.50">_..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (6 samples, 2.05%)</title><rect x="911" y="244" width="24" height="15" fill="rgb(237,72,39)"/><text x="914.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.05%)</title><rect x="911" y="260" width="24" height="15" fill="rgb(247,156,40)"/><text x="914.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (5 samples, 1.71%)</title><rect x="915" y="276" width="20" height="15" fill="rgb(211,163,26)"/><text x="918.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.03%)</title><rect x="923" y="292" width="12" height="15" fill="rgb(251,223,4)"/><text x="926.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.68%)</title><rect x="927" y="308" width="8" height="15" fill="rgb(238,5,46)"/><text x="930.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.34%)</title><rect x="931" y="324" width="4" height="15" fill="rgb(249,134,22)"/><text x="934.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.34%)</title><rect x="931" y="340" width="4" height="15" fill="rgb(230,205,23)"/><text x="934.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.34%)</title><rect x="931" y="356" width="4" height="15" fill="rgb(209,13,11)"/><text x="934.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.34%)</title><rect x="931" y="372" width="4" height="15" fill="rgb(253,201,0)"/><text x="934.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.34%)</title><rect x="931" y="388" width="4" height="15" fill="rgb(252,218,47)"/><text x="934.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.34%)</title><rect x="943" y="244" width="4" height="15" fill="rgb(234,2,3)"/><text x="946.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.34%)</title><rect x="943" y="260" width="4" height="15" fill="rgb(216,222,4)"/><text x="946.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:403) (1 samples, 0.34%)</title><rect x="947" y="260" width="4" height="15" fill="rgb(230,41,47)"/><text x="950.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.34%)</title><rect x="947" y="276" width="4" height="15" fill="rgb(215,142,8)"/><text x="950.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.68%)</title><rect x="947" y="244" width="8" height="15" fill="rgb(210,215,34)"/><text x="950.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.34%)</title><rect x="951" y="260" width="4" height="15" fill="rgb(247,210,10)"/><text x="954.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.34%)</title><rect x="951" y="276" width="4" height="15" fill="rgb(241,157,31)"/><text x="954.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.34%)</title><rect x="955" y="292" width="4" height="15" fill="rgb(213,24,23)"/><text x="958.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.68%)</title><rect x="955" y="276" width="8" height="15" fill="rgb(234,123,1)"/><text x="958.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.34%)</title><rect x="959" y="292" width="4" height="15" fill="rgb(226,217,43)"/><text x="962.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.34%)</title><rect x="959" y="308" width="4" height="15" fill="rgb(253,115,20)"/><text x="962.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.05%)</title><rect x="943" y="228" width="24" height="15" fill="rgb(223,51,31)"/><text x="946.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.03%)</title><rect x="955" y="244" width="12" height="15" fill="rgb(208,197,11)"/><text x="958.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.03%)</title><rect x="955" y="260" width="12" height="15" fill="rgb(240,189,4)"/><text x="958.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.34%)</title><rect x="963" y="276" width="4" height="15" fill="rgb(221,151,38)"/><text x="966.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (9 samples, 3.08%)</title><rect x="935" y="196" width="36" height="15" fill="rgb(212,12,44)"/><text x="938.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (9 samples, 3.08%)</title><rect x="935" y="212" width="36" height="15" fill="rgb(235,12,6)"/><text x="938.00" y="222.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.34%)</title><rect x="967" y="228" width="4" height="15" fill="rgb(217,134,36)"/><text x="970.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (2 samples, 0.68%)</title><rect x="971" y="212" width="8" height="15" fill="rgb(205,212,14)"/><text x="974.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.34%)</title><rect x="975" y="228" width="4" height="15" fill="rgb(227,188,13)"/><text x="978.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:527) (2 samples, 0.68%)</title><rect x="979" y="228" width="8" height="15" fill="rgb(222,76,35)"/><text x="982.00" y="238.50"></text></g><g><title>array_size_get (getset.c:439) (1 samples, 0.34%)</title><rect x="983" y="244" width="4" height="15" fill="rgb(249,11,23)"/><text x="986.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="987" y="244" width="4" height="15" fill="rgb(238,167,23)"/><text x="990.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="987" y="260" width="4" height="15" fill="rgb(242,97,39)"/><text x="990.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.34%)</title><rect x="987" y="276" width="4" height="15" fill="rgb(218,7,46)"/><text x="990.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.34%)</title><rect x="987" y="292" width="4" height="15" fill="rgb(250,100,22)"/><text x="990.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.34%)</title><rect x="987" y="308" width="4" height="15" fill="rgb(241,22,18)"/><text x="990.00" y="318.50"></text></g><g><title>0x7f38a0fa1151 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="987" y="324" width="4" height="15" fill="rgb(213,170,46)"/><text x="990.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.34%)</title><rect x="991" y="260" width="5" height="15" fill="rgb(231,214,36)"/><text x="994.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.34%)</title><rect x="991" y="276" width="5" height="15" fill="rgb(206,95,28)"/><text x="994.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.34%)</title><rect x="996" y="260" width="4" height="15" fill="rgb(218,223,27)"/><text x="999.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.34%)</title><rect x="996" y="276" width="4" height="15" fill="rgb(232,26,42)"/><text x="999.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.34%)</title><rect x="996" y="292" width="4" height="15" fill="rgb(245,75,9)"/><text x="999.00" y="302.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:256) (1 samples, 0.34%)</title><rect x="996" y="308" width="4" height="15" fill="rgb(210,29,15)"/><text x="999.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.34%)</title><rect x="1000" y="308" width="4" height="15" fill="rgb(208,22,54)"/><text x="1003.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.34%)</title><rect x="1000" y="324" width="4" height="15" fill="rgb(220,46,53)"/><text x="1003.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (5 samples, 1.71%)</title><rect x="987" y="228" width="21" height="15" fill="rgb(250,27,8)"/><text x="990.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.37%)</title><rect x="991" y="244" width="17" height="15" fill="rgb(228,28,53)"/><text x="994.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.68%)</title><rect x="1000" y="260" width="8" height="15" fill="rgb(244,210,6)"/><text x="1003.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.68%)</title><rect x="1000" y="276" width="8" height="15" fill="rgb(249,200,41)"/><text x="1003.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.68%)</title><rect x="1000" y="292" width="8" height="15" fill="rgb(245,221,5)"/><text x="1003.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.34%)</title><rect x="1004" y="308" width="4" height="15" fill="rgb(216,140,22)"/><text x="1007.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.34%)</title><rect x="1008" y="244" width="4" height="15" fill="rgb(242,101,15)"/><text x="1011.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.34%)</title><rect x="1008" y="260" width="4" height="15" fill="rgb(224,40,17)"/><text x="1011.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.34%)</title><rect x="1008" y="276" width="4" height="15" fill="rgb(248,130,11)"/><text x="1011.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (2 samples, 0.68%)</title><rect x="1008" y="228" width="8" height="15" fill="rgb(248,218,21)"/><text x="1011.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.34%)</title><rect x="1012" y="244" width="4" height="15" fill="rgb(231,94,22)"/><text x="1015.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.34%)</title><rect x="1012" y="260" width="4" height="15" fill="rgb(229,208,34)"/><text x="1015.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.34%)</title><rect x="1012" y="276" width="4" height="15" fill="rgb(239,4,49)"/><text x="1015.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.34%)</title><rect x="1012" y="292" width="4" height="15" fill="rgb(220,196,20)"/><text x="1015.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.34%)</title><rect x="1012" y="308" width="4" height="15" fill="rgb(243,44,8)"/><text x="1015.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2044) (1 samples, 0.34%)</title><rect x="1012" y="324" width="4" height="15" fill="rgb(246,95,38)"/><text x="1015.00" y="334.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.34%)</title><rect x="1016" y="244" width="4" height="15" fill="rgb(208,2,49)"/><text x="1019.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:5) (1 samples, 0.34%)</title><rect x="1028" y="260" width="4" height="15" fill="rgb(253,139,12)"/><text x="1031.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.34%)</title><rect x="1032" y="308" width="4" height="15" fill="rgb(217,66,54)"/><text x="1035.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.34%)</title><rect x="1032" y="324" width="4" height="15" fill="rgb(207,140,50)"/><text x="1035.00" y="334.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (5 samples, 1.71%)</title><rect x="1020" y="244" width="20" height="15" fill="rgb(208,23,4)"/><text x="1023.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (2 samples, 0.68%)</title><rect x="1032" y="260" width="8" height="15" fill="rgb(205,20,41)"/><text x="1035.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.68%)</title><rect x="1032" y="276" width="8" height="15" fill="rgb(241,141,26)"/><text x="1035.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.68%)</title><rect x="1032" y="292" width="8" height="15" fill="rgb(233,109,47)"/><text x="1035.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.34%)</title><rect x="1036" y="308" width="4" height="15" fill="rgb(210,11,33)"/><text x="1039.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.34%)</title><rect x="1036" y="324" width="4" height="15" fill="rgb(207,187,26)"/><text x="1039.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="1036" y="340" width="4" height="15" fill="rgb(243,66,51)"/><text x="1039.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (104 samples, 35.62%)</title><rect x="624" y="180" width="420" height="15" fill="rgb(254,45,43)"/><text x="627.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (18 samples, 6.16%)</title><rect x="971" y="196" width="73" height="15" fill="rgb(213,77,7)"/><text x="974.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (16 samples, 5.48%)</title><rect x="979" y="212" width="65" height="15" fill="rgb(207,151,4)"/><text x="982.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (7 samples, 2.40%)</title><rect x="1016" y="228" width="28" height="15" fill="rgb(253,122,21)"/><text x="1019.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (1 samples, 0.34%)</title><rect x="1040" y="244" width="4" height="15" fill="rgb(244,93,27)"/><text x="1043.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.68%)</title><rect x="1044" y="180" width="8" height="15" fill="rgb(215,176,24)"/><text x="1047.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (6 samples, 2.05%)</title><rect x="1052" y="180" width="24" height="15" fill="rgb(226,98,22)"/><text x="1055.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (137 samples, 46.92%)</title><rect x="551" y="164" width="554" height="15" fill="rgb(212,57,13)"/><text x="554.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 2.40%)</title><rect x="1076" y="180" width="29" height="15" fill="rgb(206,135,9)"/><text x="1079.00" y="190.50">ru..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.34%)</title><rect x="1105" y="164" width="4" height="15" fill="rgb(219,170,28)"/><text x="1108.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.34%)</title><rect x="1105" y="180" width="4" height="15" fill="rgb(207,227,6)"/><text x="1108.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (142 samples, 48.63%)</title><rect x="539" y="132" width="574" height="15" fill="rgb(209,66,5)"/><text x="542.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (141 samples, 48.29%)</title><rect x="543" y="148" width="570" height="15" fill="rgb(211,89,45)"/><text x="546.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.34%)</title><rect x="1109" y="164" width="4" height="15" fill="rgb(206,153,8)"/><text x="1112.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:45) (146 samples, 50.00%)</title><rect x="527" y="52" width="590" height="15" fill="rgb(210,229,41)"/><text x="530.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:45)</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:44) (146 samples, 50.00%)</title><rect x="527" y="68" width="590" height="15" fill="rgb(228,12,43)"/><text x="530.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:44)</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:29) (144 samples, 49.32%)</title><rect x="535" y="84" width="582" height="15" fill="rgb(230,190,12)"/><text x="538.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:23) (144 samples, 49.32%)</title><rect x="535" y="100" width="582" height="15" fill="rgb(225,151,44)"/><text x="538.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (143 samples, 48.97%)</title><rect x="539" y="116" width="578" height="15" fill="rgb(243,85,31)"/><text x="542.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.34%)</title><rect x="1113" y="132" width="4" height="15" fill="rgb(238,67,35)"/><text x="1116.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.68%)</title><rect x="1117" y="196" width="8" height="15" fill="rgb(236,193,30)"/><text x="1120.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.68%)</title><rect x="1117" y="212" width="8" height="15" fill="rgb(231,177,33)"/><text x="1120.00" y="222.50"></text></g><g><title>0x7f3860f06ff9 (?) (1 samples, 0.34%)</title><rect x="1125" y="212" width="4" height="15" fill="rgb(227,82,26)"/><text x="1128.00" y="222.50"></text></g><g><title>0x7f3860f01ef6 (?) (1 samples, 0.34%)</title><rect x="1125" y="228" width="4" height="15" fill="rgb(212,70,21)"/><text x="1128.00" y="238.50"></text></g><g><title>0x7f3860ef6962 (?) (1 samples, 0.34%)</title><rect x="1125" y="244" width="4" height="15" fill="rgb(247,151,0)"/><text x="1128.00" y="254.50"></text></g><g><title>0x7f3860f2a7a7 (?) (1 samples, 0.34%)</title><rect x="1125" y="260" width="4" height="15" fill="rgb(205,66,54)"/><text x="1128.00" y="270.50"></text></g><g><title>0x7f3860f2a379 (?) (1 samples, 0.34%)</title><rect x="1125" y="276" width="4" height="15" fill="rgb(251,217,7)"/><text x="1128.00" y="286.50"></text></g><g><title>0x7f38613888b8 (?) (1 samples, 0.34%)</title><rect x="1125" y="292" width="4" height="15" fill="rgb(254,114,45)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7f3861386c7f (?) (1 samples, 0.34%)</title><rect x="1125" y="308" width="4" height="15" fill="rgb(207,15,15)"/><text x="1128.00" y="318.50"></text></g><g><title>0x7f386139999c (?) (1 samples, 0.34%)</title><rect x="1125" y="324" width="4" height="15" fill="rgb(251,37,13)"/><text x="1128.00" y="334.50"></text></g><g><title>0x7f38610020a6 (?) (1 samples, 0.34%)</title><rect x="1125" y="340" width="4" height="15" fill="rgb(214,182,20)"/><text x="1128.00" y="350.50"></text></g><g><title>0x7f3861000cbb (?) (1 samples, 0.34%)</title><rect x="1125" y="356" width="4" height="15" fill="rgb(219,106,4)"/><text x="1128.00" y="366.50"></text></g><g><title>0x7f38613555e6 (?) (1 samples, 0.34%)</title><rect x="1125" y="372" width="4" height="15" fill="rgb(247,129,30)"/><text x="1128.00" y="382.50"></text></g><g><title>0x7f3861355486 (?) (1 samples, 0.34%)</title><rect x="1125" y="388" width="4" height="15" fill="rgb(249,15,30)"/><text x="1128.00" y="398.50"></text></g><g><title>0x7f386133fc8d (?) (1 samples, 0.34%)</title><rect x="1125" y="404" width="4" height="15" fill="rgb(234,34,22)"/><text x="1128.00" y="414.50"></text></g><g><title>0x7f386133f202 (?) (1 samples, 0.34%)</title><rect x="1125" y="420" width="4" height="15" fill="rgb(240,181,41)"/><text x="1128.00" y="430.50"></text></g><g><title>0x7f386133e913 (?) (1 samples, 0.34%)</title><rect x="1125" y="436" width="4" height="15" fill="rgb(211,15,45)"/><text x="1128.00" y="446.50"></text></g><g><title>0x7f386133ddaf (?) (1 samples, 0.34%)</title><rect x="1125" y="452" width="4" height="15" fill="rgb(234,189,51)"/><text x="1128.00" y="462.50"></text></g><g><title>0x7f3861338771 (?) (1 samples, 0.34%)</title><rect x="1125" y="468" width="4" height="15" fill="rgb(247,146,24)"/><text x="1128.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="1125" y="484" width="4" height="15" fill="rgb(247,15,10)"/><text x="1128.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1125" y="500" width="4" height="15" fill="rgb(221,161,15)"/><text x="1128.00" y="510.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1141" y="340" width="4" height="15" fill="rgb(226,117,5)"/><text x="1144.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::Data&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1141" y="356" width="4" height="15" fill="rgb(250,208,29)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="340" width="4" height="15" fill="rgb(205,69,25)"/><text x="1148.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="356" width="4" height="15" fill="rgb(236,125,38)"/><text x="1148.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="372" width="4" height="15" fill="rgb(241,154,12)"/><text x="1148.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="388" width="4" height="15" fill="rgb(236,179,27)"/><text x="1148.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="404" width="4" height="15" fill="rgb(220,187,34)"/><text x="1148.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="420" width="4" height="15" fill="rgb(218,187,37)"/><text x="1148.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="436" width="4" height="15" fill="rgb(239,177,45)"/><text x="1148.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1145" y="452" width="4" height="15" fill="rgb(235,112,46)"/><text x="1148.00" y="462.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1149" y="340" width="4" height="15" fill="rgb(209,128,35)"/><text x="1152.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1149" y="356" width="4" height="15" fill="rgb(217,179,24)"/><text x="1152.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1149" y="372" width="4" height="15" fill="rgb(216,42,37)"/><text x="1152.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1149" y="388" width="4" height="15" fill="rgb(215,225,30)"/><text x="1152.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1149" y="404" width="4" height="15" fill="rgb(238,35,16)"/><text x="1152.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1149" y="420" width="4" height="15" fill="rgb(235,147,37)"/><text x="1152.00" y="430.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1153" y="340" width="4" height="15" fill="rgb(215,100,37)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::MatMulComputeHelper::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1153" y="356" width="4" height="15" fill="rgb(217,127,42)"/><text x="1156.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeToDimension (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1153" y="372" width="4" height="15" fill="rgb(247,115,42)"/><text x="1156.00" y="382.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1157" y="340" width="4" height="15" fill="rgb(231,139,16)"/><text x="1160.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1157" y="356" width="4" height="15" fill="rgb(208,216,1)"/><text x="1160.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1157" y="372" width="4" height="15" fill="rgb(207,66,17)"/><text x="1160.00" y="382.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="1161" y="340" width="8" height="15" fill="rgb(239,8,47)"/><text x="1164.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="356" width="4" height="15" fill="rgb(212,87,6)"/><text x="1168.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="372" width="4" height="15" fill="rgb(232,65,8)"/><text x="1168.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="388" width="4" height="15" fill="rgb(229,130,10)"/><text x="1168.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="404" width="4" height="15" fill="rgb(205,60,14)"/><text x="1168.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="420" width="4" height="15" fill="rgb(231,187,50)"/><text x="1168.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="436" width="4" height="15" fill="rgb(207,5,25)"/><text x="1168.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="452" width="4" height="15" fill="rgb(250,164,50)"/><text x="1168.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="468" width="4" height="15" fill="rgb(240,218,7)"/><text x="1168.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1165" y="484" width="4" height="15" fill="rgb(232,117,38)"/><text x="1168.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="1165" y="500" width="4" height="15" fill="rgb(225,24,36)"/><text x="1168.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1165" y="516" width="4" height="15" fill="rgb(213,154,54)"/><text x="1168.00" y="526.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1169" y="340" width="4" height="15" fill="rgb(253,46,21)"/><text x="1172.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1169" y="356" width="4" height="15" fill="rgb(226,75,13)"/><text x="1172.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.11%)</title><rect x="1133" y="260" width="48" height="15" fill="rgb(221,41,21)"/><text x="1136.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.11%)</title><rect x="1133" y="276" width="48" height="15" fill="rgb(239,61,10)"/><text x="1136.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.11%)</title><rect x="1133" y="292" width="48" height="15" fill="rgb(223,39,1)"/><text x="1136.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.11%)</title><rect x="1133" y="308" width="48" height="15" fill="rgb(234,139,23)"/><text x="1136.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.11%)</title><rect x="1133" y="324" width="48" height="15" fill="rgb(209,199,31)"/><text x="1136.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="1173" y="340" width="8" height="15" fill="rgb(232,188,51)"/><text x="1176.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.68%)</title><rect x="1173" y="356" width="8" height="15" fill="rgb(214,8,53)"/><text x="1176.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1177" y="372" width="4" height="15" fill="rgb(231,225,22)"/><text x="1180.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1177" y="388" width="4" height="15" fill="rgb(232,103,2)"/><text x="1180.00" y="398.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::GetCreateFunc() const::{lambda()#1}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1177" y="404" width="4" height="15" fill="rgb(232,87,14)"/><text x="1180.00" y="414.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1181" y="260" width="4" height="15" fill="rgb(253,4,40)"/><text x="1184.00" y="270.50"></text></g><g><title>all (292 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(206,189,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:52) (18 samples, 6.16%)</title><rect x="1117" y="52" width="73" height="15" fill="rgb(234,45,40)"/><text x="1120.00" y="62.50">&lt;module&gt;..</text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:51) (18 samples, 6.16%)</title><rect x="1117" y="68" width="73" height="15" fill="rgb(253,79,33)"/><text x="1120.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:29) (18 samples, 6.16%)</title><rect x="1117" y="84" width="73" height="15" fill="rgb(206,159,33)"/><text x="1120.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py:23) (18 samples, 6.16%)</title><rect x="1117" y="100" width="73" height="15" fill="rgb(227,114,18)"/><text x="1120.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (18 samples, 6.16%)</title><rect x="1117" y="116" width="73" height="15" fill="rgb(217,59,13)"/><text x="1120.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (18 samples, 6.16%)</title><rect x="1117" y="132" width="73" height="15" fill="rgb(227,204,37)"/><text x="1120.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (18 samples, 6.16%)</title><rect x="1117" y="148" width="73" height="15" fill="rgb(248,55,3)"/><text x="1120.00" y="158.50">run (mlp..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (18 samples, 6.16%)</title><rect x="1117" y="164" width="73" height="15" fill="rgb(223,61,22)"/><text x="1120.00" y="174.50">_run_who..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (18 samples, 6.16%)</title><rect x="1117" y="180" width="73" height="15" fill="rgb(214,148,36)"/><text x="1120.00" y="190.50">run (mlp..</text></g><g><title>run (onnxruntime/capi/session.py:136) (16 samples, 5.48%)</title><rect x="1125" y="196" width="65" height="15" fill="rgb(222,138,4)"/><text x="1128.00" y="206.50">run (on..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.14%)</title><rect x="1129" y="212" width="61" height="15" fill="rgb(206,200,8)"/><text x="1132.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.14%)</title><rect x="1129" y="228" width="61" height="15" fill="rgb(228,19,50)"/><text x="1132.00" y="238.50">void p..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.79%)</title><rect x="1133" y="244" width="57" height="15" fill="rgb(252,73,26)"/><text x="1136.00" y="254.50">onnxru..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(236,204,11)"/><text x="1188.00" y="270.50"></text></g></g></svg>