<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1926" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1909.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1909.00"> </text><g id="frames"><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(217,127,25)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(238,218,16)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(250,101,47)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(235,127,33)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(234,68,45)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.18%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(237,186,22)"/><text x="15.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.18%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(249,29,4)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(215,94,27)"/><text x="17.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(216,179,24)"/><text x="17.00" y="974.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(244,143,41)"/><text x="19.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(236,218,29)"/><text x="19.00" y="974.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.54%)</title><rect x="14" y="868" width="6" height="15" fill="rgb(241,173,52)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.54%)</title><rect x="14" y="884" width="6" height="15" fill="rgb(215,0,4)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.54%)</title><rect x="14" y="900" width="6" height="15" fill="rgb(206,187,18)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.54%)</title><rect x="14" y="916" width="6" height="15" fill="rgb(238,217,51)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 0.54%)</title><rect x="14" y="932" width="6" height="15" fill="rgb(213,71,48)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(237,100,46)"/><text x="21.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(230,44,13)"/><text x="21.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(227,17,17)"/><text x="21.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(230,216,23)"/><text x="21.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.18%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(213,43,25)"/><text x="21.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.18%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(218,215,51)"/><text x="21.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(217,183,27)"/><text x="21.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(234,111,8)"/><text x="23.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(246,220,0)"/><text x="23.00" y="942.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.27%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(227,72,46)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.27%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(238,89,23)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="20" y="868" width="4" height="15" fill="rgb(217,216,12)"/><text x="23.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="20" y="884" width="4" height="15" fill="rgb(209,39,43)"/><text x="23.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.36%)</title><rect x="20" y="900" width="4" height="15" fill="rgb(234,107,53)"/><text x="23.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(209,66,54)"/><text x="25.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.18%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(212,154,41)"/><text x="25.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(225,200,31)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.18%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(217,218,52)"/><text x="25.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.18%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(249,15,27)"/><text x="25.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.18%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(232,151,46)"/><text x="25.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.18%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(235,55,8)"/><text x="25.00" y="1022.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.18%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(231,183,3)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(234,167,21)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(237,61,31)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(251,4,41)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(229,36,10)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(250,62,25)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.18%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(250,101,48)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(236,128,22)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(223,118,37)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(222,127,46)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(208,219,45)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1092" width="3" height="15" fill="rgb(219,124,30)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.18%)</title><rect x="24" y="1108" width="3" height="15" fill="rgb(208,205,14)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1124" width="3" height="15" fill="rgb(246,222,18)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1140" width="3" height="15" fill="rgb(231,179,40)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1156" width="3" height="15" fill="rgb(224,148,6)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1172" width="3" height="15" fill="rgb(232,115,20)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1188" width="3" height="15" fill="rgb(242,87,33)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.18%)</title><rect x="24" y="1204" width="3" height="15" fill="rgb(235,159,37)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1220" width="3" height="15" fill="rgb(227,194,21)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1236" width="3" height="15" fill="rgb(227,166,38)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1252" width="3" height="15" fill="rgb(209,43,11)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="24" y="1268" width="3" height="15" fill="rgb(230,81,41)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="24" y="1284" width="3" height="15" fill="rgb(253,145,26)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py) (1 samples, 0.18%)</title><rect x="24" y="1300" width="3" height="15" fill="rgb(249,39,20)"/><text x="27.00" y="1310.50"></text></g><g><title>_convert (enum.py) (1 samples, 0.18%)</title><rect x="24" y="1316" width="3" height="15" fill="rgb(221,114,54)"/><text x="27.00" y="1326.50"></text></g><g><title>&lt;listcomp&gt; (enum.py) (1 samples, 0.18%)</title><rect x="24" y="1332" width="3" height="15" fill="rgb(209,52,5)"/><text x="27.00" y="1342.50"></text></g><g><title>&lt;lambda&gt; (socket.py) (1 samples, 0.18%)</title><rect x="24" y="1348" width="3" height="15" fill="rgb(229,147,16)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (9 samples, 1.63%)</title><rect x="10" y="292" width="19" height="15" fill="rgb(221,184,17)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="308" width="19" height="15" fill="rgb(230,41,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="324" width="19" height="15" fill="rgb(210,59,45)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="340" width="19" height="15" fill="rgb(246,160,36)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.63%)</title><rect x="10" y="356" width="19" height="15" fill="rgb(251,94,39)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="372" width="19" height="15" fill="rgb(254,10,47)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (9 samples, 1.63%)</title><rect x="10" y="388" width="19" height="15" fill="rgb(247,7,8)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="404" width="19" height="15" fill="rgb(242,110,8)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="420" width="19" height="15" fill="rgb(218,113,28)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="436" width="19" height="15" fill="rgb(252,222,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.63%)</title><rect x="10" y="452" width="19" height="15" fill="rgb(227,182,42)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="468" width="19" height="15" fill="rgb(252,167,36)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (9 samples, 1.63%)</title><rect x="10" y="484" width="19" height="15" fill="rgb(241,143,53)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="500" width="19" height="15" fill="rgb(211,87,23)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="516" width="19" height="15" fill="rgb(245,81,50)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="532" width="19" height="15" fill="rgb(230,45,29)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.63%)</title><rect x="10" y="548" width="19" height="15" fill="rgb(232,33,35)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="564" width="19" height="15" fill="rgb(206,27,28)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (9 samples, 1.63%)</title><rect x="10" y="580" width="19" height="15" fill="rgb(215,168,4)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(230,180,8)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(226,188,42)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="628" width="19" height="15" fill="rgb(206,117,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="644" width="19" height="15" fill="rgb(250,82,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="660" width="19" height="15" fill="rgb(226,100,51)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="676" width="19" height="15" fill="rgb(232,85,51)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.63%)</title><rect x="10" y="692" width="19" height="15" fill="rgb(245,222,3)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="708" width="19" height="15" fill="rgb(226,74,39)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (9 samples, 1.63%)</title><rect x="10" y="724" width="19" height="15" fill="rgb(250,28,28)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="740" width="19" height="15" fill="rgb(228,27,11)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="756" width="19" height="15" fill="rgb(250,171,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="772" width="19" height="15" fill="rgb(208,107,47)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.63%)</title><rect x="10" y="788" width="19" height="15" fill="rgb(216,182,43)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="10" y="804" width="19" height="15" fill="rgb(231,26,47)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (9 samples, 1.63%)</title><rect x="10" y="820" width="19" height="15" fill="rgb(254,83,50)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="24" y="836" width="5" height="15" fill="rgb(221,139,29)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="24" y="852" width="5" height="15" fill="rgb(212,159,26)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="24" y="868" width="5" height="15" fill="rgb(216,46,5)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(237,34,8)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(224,151,31)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.18%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(253,77,17)"/><text x="30.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.18%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(225,100,35)"/><text x="30.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(213,203,38)"/><text x="30.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(252,8,38)"/><text x="30.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(240,106,14)"/><text x="30.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(247,126,6)"/><text x="30.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(205,41,48)"/><text x="30.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(212,151,4)"/><text x="30.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1044" width="2" height="15" fill="rgb(237,64,43)"/><text x="30.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1060" width="2" height="15" fill="rgb(252,68,53)"/><text x="30.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1076" width="2" height="15" fill="rgb(206,78,9)"/><text x="30.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1092" width="2" height="15" fill="rgb(244,6,15)"/><text x="30.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1108" width="2" height="15" fill="rgb(241,208,13)"/><text x="30.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(242,198,13)"/><text x="30.00" y="1134.50"></text></g><g><title>tell (sre_parse.py) (1 samples, 0.18%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(220,188,34)"/><text x="30.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.81%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(232,15,28)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.81%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(208,132,29)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.81%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(249,130,1)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.81%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(234,102,21)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.81%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(253,15,47)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.81%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(247,113,3)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.18%)</title><rect x="29" y="292" width="2" height="15" fill="rgb(253,177,42)"/><text x="32.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="308" width="2" height="15" fill="rgb(231,94,0)"/><text x="32.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="324" width="2" height="15" fill="rgb(227,31,27)"/><text x="32.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="340" width="2" height="15" fill="rgb(209,1,41)"/><text x="32.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="356" width="2" height="15" fill="rgb(227,28,11)"/><text x="32.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="372" width="2" height="15" fill="rgb(252,212,12)"/><text x="32.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.18%)</title><rect x="29" y="388" width="2" height="15" fill="rgb(232,180,22)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="404" width="2" height="15" fill="rgb(215,132,43)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="420" width="2" height="15" fill="rgb(234,140,10)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="436" width="2" height="15" fill="rgb(232,25,21)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="452" width="2" height="15" fill="rgb(227,119,17)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(225,60,46)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.18%)</title><rect x="29" y="484" width="2" height="15" fill="rgb(238,116,35)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="500" width="2" height="15" fill="rgb(216,118,12)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="516" width="2" height="15" fill="rgb(235,55,0)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="532" width="2" height="15" fill="rgb(235,81,26)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="548" width="2" height="15" fill="rgb(246,128,42)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="564" width="2" height="15" fill="rgb(240,180,10)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.18%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(232,24,4)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(213,17,30)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(248,24,28)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(229,180,53)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(222,151,32)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(252,4,0)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.18%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(242,165,22)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(234,24,22)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(235,48,51)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(205,50,27)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(209,62,31)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(209,79,40)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.18%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(237,170,0)"/><text x="32.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(241,205,32)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(238,147,42)"/><text x="32.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(235,25,27)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(213,41,5)"/><text x="32.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(248,72,8)"/><text x="32.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(237,161,11)"/><text x="32.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(236,169,34)"/><text x="32.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.18%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(231,101,15)"/><text x="32.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(248,59,13)"/><text x="32.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(230,116,33)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(249,62,53)"/><text x="32.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(250,47,47)"/><text x="32.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(240,164,29)"/><text x="32.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(207,27,32)"/><text x="32.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="29" y="1012" width="2" height="15" fill="rgb(227,53,16)"/><text x="32.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.18%)</title><rect x="29" y="1028" width="2" height="15" fill="rgb(214,133,8)"/><text x="32.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(219,77,23)"/><text x="32.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.18%)</title><rect x="29" y="1060" width="2" height="15" fill="rgb(246,97,6)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="1476" width="2" height="15" fill="rgb(230,205,49)"/><text x="34.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="1492" width="2" height="15" fill="rgb(230,180,9)"/><text x="34.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="1508" width="2" height="15" fill="rgb(237,10,3)"/><text x="34.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="31" y="1524" width="2" height="15" fill="rgb(247,182,27)"/><text x="34.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="31" y="1540" width="2" height="15" fill="rgb(244,222,48)"/><text x="34.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.18%)</title><rect x="31" y="1556" width="2" height="15" fill="rgb(217,161,51)"/><text x="34.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.18%)</title><rect x="31" y="1572" width="2" height="15" fill="rgb(224,107,11)"/><text x="34.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="31" y="1588" width="2" height="15" fill="rgb(245,204,51)"/><text x="34.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="31" y="1604" width="2" height="15" fill="rgb(216,31,42)"/><text x="34.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="31" y="1620" width="2" height="15" fill="rgb(234,123,34)"/><text x="34.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="31" y="1636" width="2" height="15" fill="rgb(252,190,23)"/><text x="34.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py) (1 samples, 0.18%)</title><rect x="31" y="1652" width="2" height="15" fill="rgb(205,13,48)"/><text x="34.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="31" y="1668" width="2" height="15" fill="rgb(222,198,9)"/><text x="34.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py) (1 samples, 0.18%)</title><rect x="31" y="1684" width="2" height="15" fill="rgb(249,168,8)"/><text x="34.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py) (1 samples, 0.18%)</title><rect x="31" y="1700" width="2" height="15" fill="rgb(208,102,28)"/><text x="34.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py) (1 samples, 0.18%)</title><rect x="31" y="1716" width="2" height="15" fill="rgb(244,212,33)"/><text x="34.00" y="1726.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="31" y="1732" width="2" height="15" fill="rgb(236,184,51)"/><text x="34.00" y="1742.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="31" y="1748" width="2" height="15" fill="rgb(254,95,24)"/><text x="34.00" y="1758.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1764" width="2" height="15" fill="rgb(252,85,39)"/><text x="34.00" y="1774.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1780" width="2" height="15" fill="rgb(206,7,0)"/><text x="34.00" y="1790.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1796" width="2" height="15" fill="rgb(209,11,43)"/><text x="34.00" y="1806.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1812" width="2" height="15" fill="rgb(240,66,35)"/><text x="34.00" y="1822.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1828" width="2" height="15" fill="rgb(215,19,52)"/><text x="34.00" y="1838.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1844" width="2" height="15" fill="rgb(219,77,40)"/><text x="34.00" y="1854.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1860" width="2" height="15" fill="rgb(240,213,52)"/><text x="34.00" y="1870.50"></text></g><g><title>_compile_charset (sre_compile.py) (1 samples, 0.18%)</title><rect x="31" y="1876" width="2" height="15" fill="rgb(232,88,28)"/><text x="34.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="31" y="1348" width="8" height="15" fill="rgb(227,53,22)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.72%)</title><rect x="31" y="1364" width="8" height="15" fill="rgb(220,72,22)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="31" y="1380" width="8" height="15" fill="rgb(246,137,44)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="31" y="1396" width="8" height="15" fill="rgb(245,185,41)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="31" y="1412" width="8" height="15" fill="rgb(205,8,11)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.72%)</title><rect x="31" y="1428" width="8" height="15" fill="rgb(249,38,35)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="31" y="1444" width="8" height="15" fill="rgb(214,96,31)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.72%)</title><rect x="31" y="1460" width="8" height="15" fill="rgb(219,4,33)"/><text x="34.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.54%)</title><rect x="33" y="1476" width="6" height="15" fill="rgb(222,187,43)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.54%)</title><rect x="33" y="1492" width="6" height="15" fill="rgb(218,35,26)"/><text x="36.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.36%)</title><rect x="35" y="1508" width="4" height="15" fill="rgb(236,161,11)"/><text x="38.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.36%)</title><rect x="35" y="1524" width="4" height="15" fill="rgb(241,166,41)"/><text x="38.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.36%)</title><rect x="35" y="1540" width="4" height="15" fill="rgb(232,72,1)"/><text x="38.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.36%)</title><rect x="35" y="1556" width="4" height="15" fill="rgb(242,187,3)"/><text x="38.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.36%)</title><rect x="35" y="1572" width="4" height="15" fill="rgb(209,40,14)"/><text x="38.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.36%)</title><rect x="35" y="1588" width="4" height="15" fill="rgb(221,85,43)"/><text x="38.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.18%)</title><rect x="37" y="1604" width="2" height="15" fill="rgb(247,68,43)"/><text x="40.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.18%)</title><rect x="37" y="1620" width="2" height="15" fill="rgb(213,162,6)"/><text x="40.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.90%)</title><rect x="31" y="340" width="11" height="15" fill="rgb(209,87,9)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="356" width="11" height="15" fill="rgb(218,162,48)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="372" width="11" height="15" fill="rgb(234,190,0)"/><text x="34.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="388" width="11" height="15" fill="rgb(219,222,14)"/><text x="34.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="404" width="11" height="15" fill="rgb(247,24,24)"/><text x="34.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="420" width="11" height="15" fill="rgb(212,38,54)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.90%)</title><rect x="31" y="436" width="11" height="15" fill="rgb(218,11,10)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="452" width="11" height="15" fill="rgb(247,210,10)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="468" width="11" height="15" fill="rgb(245,51,51)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="484" width="11" height="15" fill="rgb(217,140,38)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="500" width="11" height="15" fill="rgb(209,120,33)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="516" width="11" height="15" fill="rgb(211,17,26)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="532" width="11" height="15" fill="rgb(224,84,22)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="548" width="11" height="15" fill="rgb(254,128,49)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="564" width="11" height="15" fill="rgb(210,67,50)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 0.90%)</title><rect x="31" y="580" width="11" height="15" fill="rgb(244,227,2)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="596" width="11" height="15" fill="rgb(250,183,17)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="612" width="11" height="15" fill="rgb(236,216,29)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="628" width="11" height="15" fill="rgb(250,152,51)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="644" width="11" height="15" fill="rgb(230,74,23)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="660" width="11" height="15" fill="rgb(224,104,25)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 0.90%)</title><rect x="31" y="676" width="11" height="15" fill="rgb(225,94,9)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="692" width="11" height="15" fill="rgb(239,89,34)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="708" width="11" height="15" fill="rgb(250,187,39)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="724" width="11" height="15" fill="rgb(210,63,21)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="740" width="11" height="15" fill="rgb(252,46,46)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="756" width="11" height="15" fill="rgb(208,193,1)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.90%)</title><rect x="31" y="772" width="11" height="15" fill="rgb(224,16,48)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="788" width="11" height="15" fill="rgb(216,206,12)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="804" width="11" height="15" fill="rgb(207,12,19)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="820" width="11" height="15" fill="rgb(216,114,14)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="836" width="11" height="15" fill="rgb(239,169,54)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="852" width="11" height="15" fill="rgb(234,136,2)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.90%)</title><rect x="31" y="868" width="11" height="15" fill="rgb(243,96,9)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="884" width="11" height="15" fill="rgb(240,42,6)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="900" width="11" height="15" fill="rgb(231,164,4)"/><text x="34.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="916" width="11" height="15" fill="rgb(228,57,20)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="932" width="11" height="15" fill="rgb(249,142,14)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="948" width="11" height="15" fill="rgb(209,15,46)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="964" width="11" height="15" fill="rgb(207,53,2)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="980" width="11" height="15" fill="rgb(215,207,15)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="996" width="11" height="15" fill="rgb(253,123,50)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.90%)</title><rect x="31" y="1012" width="11" height="15" fill="rgb(222,207,35)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1028" width="11" height="15" fill="rgb(227,72,32)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1044" width="11" height="15" fill="rgb(218,81,29)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1060" width="11" height="15" fill="rgb(250,84,10)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="1076" width="11" height="15" fill="rgb(254,224,24)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1092" width="11" height="15" fill="rgb(232,207,5)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.90%)</title><rect x="31" y="1108" width="11" height="15" fill="rgb(236,164,53)"/><text x="34.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1124" width="11" height="15" fill="rgb(250,81,49)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1140" width="11" height="15" fill="rgb(217,101,32)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1156" width="11" height="15" fill="rgb(218,3,22)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1172" width="11" height="15" fill="rgb(240,28,9)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1188" width="11" height="15" fill="rgb(235,207,2)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="1204" width="11" height="15" fill="rgb(242,37,10)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1220" width="11" height="15" fill="rgb(239,118,2)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 0.90%)</title><rect x="31" y="1236" width="11" height="15" fill="rgb(229,51,43)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1252" width="11" height="15" fill="rgb(207,37,51)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1268" width="11" height="15" fill="rgb(216,108,53)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1284" width="11" height="15" fill="rgb(241,103,20)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1300" width="11" height="15" fill="rgb(242,104,0)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="31" y="1316" width="11" height="15" fill="rgb(240,36,2)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.90%)</title><rect x="31" y="1332" width="11" height="15" fill="rgb(227,97,46)"/><text x="34.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(250,27,12)"/><text x="42.00" y="1358.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(237,57,5)"/><text x="42.00" y="1374.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="39" y="1380" width="3" height="15" fill="rgb(205,218,48)"/><text x="42.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.18%)</title><rect x="42" y="580" width="2" height="15" fill="rgb(241,137,34)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="596" width="2" height="15" fill="rgb(228,7,31)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="612" width="2" height="15" fill="rgb(221,85,0)"/><text x="45.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="628" width="2" height="15" fill="rgb(222,106,8)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="644" width="2" height="15" fill="rgb(238,56,37)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="660" width="2" height="15" fill="rgb(210,113,48)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="676" width="2" height="15" fill="rgb(250,140,29)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="692" width="2" height="15" fill="rgb(228,46,45)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="708" width="2" height="15" fill="rgb(234,64,3)"/><text x="45.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.18%)</title><rect x="42" y="724" width="2" height="15" fill="rgb(249,209,41)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="740" width="2" height="15" fill="rgb(219,28,24)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="756" width="2" height="15" fill="rgb(240,106,35)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="772" width="2" height="15" fill="rgb(230,206,18)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="788" width="2" height="15" fill="rgb(216,70,16)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="804" width="2" height="15" fill="rgb(228,90,7)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.18%)</title><rect x="42" y="820" width="2" height="15" fill="rgb(205,3,41)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="836" width="2" height="15" fill="rgb(240,35,16)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="852" width="2" height="15" fill="rgb(222,7,39)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="868" width="2" height="15" fill="rgb(226,136,18)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="884" width="2" height="15" fill="rgb(217,79,5)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="900" width="2" height="15" fill="rgb(249,185,12)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.18%)</title><rect x="42" y="916" width="2" height="15" fill="rgb(227,61,21)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="932" width="2" height="15" fill="rgb(233,75,35)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="948" width="2" height="15" fill="rgb(249,73,48)"/><text x="45.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="964" width="2" height="15" fill="rgb(239,10,21)"/><text x="45.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="980" width="2" height="15" fill="rgb(218,10,11)"/><text x="45.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="996" width="2" height="15" fill="rgb(229,137,35)"/><text x="45.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1012" width="2" height="15" fill="rgb(247,66,6)"/><text x="45.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="1028" width="2" height="15" fill="rgb(235,159,18)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1044" width="2" height="15" fill="rgb(221,186,18)"/><text x="45.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.18%)</title><rect x="42" y="1060" width="2" height="15" fill="rgb(241,180,33)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1076" width="2" height="15" fill="rgb(226,176,36)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1092" width="2" height="15" fill="rgb(253,98,2)"/><text x="45.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1108" width="2" height="15" fill="rgb(237,16,37)"/><text x="45.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="1124" width="2" height="15" fill="rgb(231,141,49)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1140" width="2" height="15" fill="rgb(251,60,20)"/><text x="45.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.18%)</title><rect x="42" y="1156" width="2" height="15" fill="rgb(252,66,53)"/><text x="45.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1172" width="2" height="15" fill="rgb(210,134,54)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1188" width="2" height="15" fill="rgb(244,203,17)"/><text x="45.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1204" width="2" height="15" fill="rgb(217,154,34)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1220" width="2" height="15" fill="rgb(238,116,45)"/><text x="45.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1236" width="2" height="15" fill="rgb(220,111,33)"/><text x="45.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="1252" width="2" height="15" fill="rgb(227,16,0)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1268" width="2" height="15" fill="rgb(249,215,38)"/><text x="45.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py) (1 samples, 0.18%)</title><rect x="42" y="1284" width="2" height="15" fill="rgb(241,101,0)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1300" width="2" height="15" fill="rgb(207,120,33)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1316" width="2" height="15" fill="rgb(206,32,44)"/><text x="45.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1332" width="2" height="15" fill="rgb(230,185,3)"/><text x="45.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1348" width="2" height="15" fill="rgb(244,213,28)"/><text x="45.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1364" width="2" height="15" fill="rgb(223,193,30)"/><text x="45.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1380" width="2" height="15" fill="rgb(232,39,15)"/><text x="45.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="1396" width="2" height="15" fill="rgb(234,183,8)"/><text x="45.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1412" width="2" height="15" fill="rgb(244,165,19)"/><text x="45.00" y="1422.50"></text></g><g><title>&lt;module&gt; (xml/sax/__init__.py) (1 samples, 0.18%)</title><rect x="42" y="1428" width="2" height="15" fill="rgb(240,173,42)"/><text x="45.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1444" width="2" height="15" fill="rgb(220,198,12)"/><text x="45.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1460" width="2" height="15" fill="rgb(243,184,24)"/><text x="45.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1476" width="2" height="15" fill="rgb(224,155,1)"/><text x="45.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="1492" width="2" height="15" fill="rgb(252,34,9)"/><text x="45.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1508" width="2" height="15" fill="rgb(210,209,18)"/><text x="45.00" y="1518.50"></text></g><g><title>&lt;module&gt; (xml/sax/xmlreader.py) (1 samples, 0.18%)</title><rect x="42" y="1524" width="2" height="15" fill="rgb(234,141,7)"/><text x="45.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1540" width="2" height="15" fill="rgb(248,10,46)"/><text x="45.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1556" width="2" height="15" fill="rgb(253,115,53)"/><text x="45.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1572" width="2" height="15" fill="rgb(237,209,40)"/><text x="45.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="42" y="1588" width="2" height="15" fill="rgb(231,9,5)"/><text x="45.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="42" y="1604" width="2" height="15" fill="rgb(253,10,26)"/><text x="45.00" y="1614.50"></text></g><g><title>&lt;module&gt; (xml/sax/_exceptions.py) (1 samples, 0.18%)</title><rect x="42" y="1620" width="2" height="15" fill="rgb(224,165,52)"/><text x="45.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.27%)</title><rect x="31" y="244" width="15" height="15" fill="rgb(239,27,13)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.27%)</title><rect x="31" y="260" width="15" height="15" fill="rgb(207,145,30)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.27%)</title><rect x="31" y="276" width="15" height="15" fill="rgb(220,85,49)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.27%)</title><rect x="31" y="292" width="15" height="15" fill="rgb(207,209,34)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.27%)</title><rect x="31" y="308" width="15" height="15" fill="rgb(228,83,25)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.27%)</title><rect x="31" y="324" width="15" height="15" fill="rgb(217,3,13)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.36%)</title><rect x="42" y="340" width="4" height="15" fill="rgb(212,142,23)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="356" width="4" height="15" fill="rgb(253,131,16)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="372" width="4" height="15" fill="rgb(250,119,3)"/><text x="45.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="388" width="4" height="15" fill="rgb(216,25,47)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="404" width="4" height="15" fill="rgb(242,50,24)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="420" width="4" height="15" fill="rgb(228,146,8)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="436" width="4" height="15" fill="rgb(251,159,28)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="42" y="452" width="4" height="15" fill="rgb(210,114,23)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="468" width="4" height="15" fill="rgb(229,23,34)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.36%)</title><rect x="42" y="484" width="4" height="15" fill="rgb(228,7,41)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="500" width="4" height="15" fill="rgb(251,73,24)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="516" width="4" height="15" fill="rgb(235,31,28)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="532" width="4" height="15" fill="rgb(219,157,13)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="42" y="548" width="4" height="15" fill="rgb(237,196,52)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="42" y="564" width="4" height="15" fill="rgb(207,55,29)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.18%)</title><rect x="44" y="580" width="2" height="15" fill="rgb(225,226,48)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="596" width="2" height="15" fill="rgb(250,189,2)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="612" width="2" height="15" fill="rgb(205,98,24)"/><text x="47.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="628" width="2" height="15" fill="rgb(233,159,10)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="644" width="2" height="15" fill="rgb(212,36,29)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="660" width="2" height="15" fill="rgb(223,4,7)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.18%)</title><rect x="44" y="676" width="2" height="15" fill="rgb(230,205,31)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="692" width="2" height="15" fill="rgb(249,149,1)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="708" width="2" height="15" fill="rgb(215,166,13)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="724" width="2" height="15" fill="rgb(245,200,18)"/><text x="47.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="740" width="2" height="15" fill="rgb(253,129,26)"/><text x="47.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="756" width="2" height="15" fill="rgb(207,28,52)"/><text x="47.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.18%)</title><rect x="44" y="772" width="2" height="15" fill="rgb(247,220,45)"/><text x="47.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(214,129,54)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(213,131,51)"/><text x="47.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(227,103,36)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(222,18,28)"/><text x="47.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(217,218,22)"/><text x="47.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(242,164,42)"/><text x="47.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(216,8,7)"/><text x="47.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.18%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(251,229,17)"/><text x="47.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(221,129,48)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(250,100,45)"/><text x="47.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(223,211,25)"/><text x="47.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(231,182,5)"/><text x="47.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="980" width="2" height="15" fill="rgb(247,3,45)"/><text x="47.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="996" width="2" height="15" fill="rgb(232,180,39)"/><text x="47.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="1012" width="2" height="15" fill="rgb(214,49,51)"/><text x="47.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1028" width="2" height="15" fill="rgb(209,123,35)"/><text x="47.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.18%)</title><rect x="44" y="1044" width="2" height="15" fill="rgb(222,34,17)"/><text x="47.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1060" width="2" height="15" fill="rgb(215,54,49)"/><text x="47.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1076" width="2" height="15" fill="rgb(240,144,30)"/><text x="47.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1092" width="2" height="15" fill="rgb(206,95,14)"/><text x="47.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1108" width="2" height="15" fill="rgb(211,59,53)"/><text x="47.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1124" width="2" height="15" fill="rgb(217,60,46)"/><text x="47.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="1140" width="2" height="15" fill="rgb(248,149,16)"/><text x="47.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1156" width="2" height="15" fill="rgb(223,65,13)"/><text x="47.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.18%)</title><rect x="44" y="1172" width="2" height="15" fill="rgb(216,76,5)"/><text x="47.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1188" width="2" height="15" fill="rgb(238,91,52)"/><text x="47.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1204" width="2" height="15" fill="rgb(217,3,15)"/><text x="47.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1220" width="2" height="15" fill="rgb(217,123,12)"/><text x="47.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="1236" width="2" height="15" fill="rgb(220,80,17)"/><text x="47.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1252" width="2" height="15" fill="rgb(241,10,41)"/><text x="47.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.18%)</title><rect x="44" y="1268" width="2" height="15" fill="rgb(228,183,7)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1284" width="2" height="15" fill="rgb(207,221,17)"/><text x="47.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1300" width="2" height="15" fill="rgb(233,54,14)"/><text x="47.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1316" width="2" height="15" fill="rgb(231,209,43)"/><text x="47.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="1332" width="2" height="15" fill="rgb(211,93,32)"/><text x="47.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1348" width="2" height="15" fill="rgb(222,106,39)"/><text x="47.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.18%)</title><rect x="44" y="1364" width="2" height="15" fill="rgb(208,87,19)"/><text x="47.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1380" width="2" height="15" fill="rgb(223,144,53)"/><text x="47.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1396" width="2" height="15" fill="rgb(208,114,44)"/><text x="47.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1412" width="2" height="15" fill="rgb(226,118,27)"/><text x="47.00" y="1422.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1428" width="2" height="15" fill="rgb(221,23,0)"/><text x="47.00" y="1438.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="44" y="1444" width="2" height="15" fill="rgb(229,66,32)"/><text x="47.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="44" y="1460" width="2" height="15" fill="rgb(224,30,24)"/><text x="47.00" y="1470.50"></text></g><g><title>0x7f3be5f56936 (?) (1 samples, 0.18%)</title><rect x="44" y="1476" width="2" height="15" fill="rgb(248,227,18)"/><text x="47.00" y="1486.50"></text></g><g><title>0x7f3be602159f (?) (1 samples, 0.18%)</title><rect x="44" y="1492" width="2" height="15" fill="rgb(235,168,39)"/><text x="47.00" y="1502.50"></text></g><g><title>0x7f3be60d79a0 (?) (1 samples, 0.18%)</title><rect x="44" y="1508" width="2" height="15" fill="rgb(210,139,39)"/><text x="47.00" y="1518.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.18%)</title><rect x="46" y="372" width="2" height="15" fill="rgb(242,60,34)"/><text x="49.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="388" width="2" height="15" fill="rgb(237,76,34)"/><text x="49.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="404" width="2" height="15" fill="rgb(254,8,1)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="420" width="2" height="15" fill="rgb(235,176,18)"/><text x="49.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="436" width="2" height="15" fill="rgb(206,173,28)"/><text x="49.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="452" width="2" height="15" fill="rgb(232,131,45)"/><text x="49.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="46" y="468" width="2" height="15" fill="rgb(209,53,26)"/><text x="49.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="484" width="2" height="15" fill="rgb(250,180,20)"/><text x="49.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.18%)</title><rect x="46" y="500" width="2" height="15" fill="rgb(223,187,10)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="516" width="2" height="15" fill="rgb(254,89,46)"/><text x="49.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="532" width="2" height="15" fill="rgb(218,79,47)"/><text x="49.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="548" width="2" height="15" fill="rgb(231,86,32)"/><text x="49.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="46" y="564" width="2" height="15" fill="rgb(225,102,17)"/><text x="49.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="46" y="580" width="2" height="15" fill="rgb(244,82,35)"/><text x="49.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.18%)</title><rect x="46" y="596" width="2" height="15" fill="rgb(218,148,51)"/><text x="49.00" y="606.50"></text></g><g><title>compile (re.py) (1 samples, 0.18%)</title><rect x="46" y="612" width="2" height="15" fill="rgb(234,94,18)"/><text x="49.00" y="622.50"></text></g><g><title>_compile (re.py) (1 samples, 0.18%)</title><rect x="46" y="628" width="2" height="15" fill="rgb(239,199,40)"/><text x="49.00" y="638.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.18%)</title><rect x="46" y="644" width="2" height="15" fill="rgb(249,213,16)"/><text x="49.00" y="654.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="46" y="660" width="2" height="15" fill="rgb(232,40,37)"/><text x="49.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.18%)</title><rect x="46" y="676" width="2" height="15" fill="rgb(232,11,46)"/><text x="49.00" y="686.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.18%)</title><rect x="46" y="692" width="2" height="15" fill="rgb(221,213,38)"/><text x="49.00" y="702.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.18%)</title><rect x="46" y="708" width="2" height="15" fill="rgb(224,4,17)"/><text x="49.00" y="718.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.18%)</title><rect x="46" y="724" width="2" height="15" fill="rgb(216,212,31)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.44%)</title><rect x="10" y="68" width="40" height="15" fill="rgb(205,221,34)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.44%)</title><rect x="10" y="84" width="40" height="15" fill="rgb(208,65,51)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.44%)</title><rect x="10" y="100" width="40" height="15" fill="rgb(221,56,52)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 3.44%)</title><rect x="10" y="116" width="40" height="15" fill="rgb(226,198,0)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.44%)</title><rect x="10" y="132" width="40" height="15" fill="rgb(246,223,26)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (19 samples, 3.44%)</title><rect x="10" y="148" width="40" height="15" fill="rgb(216,56,44)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.44%)</title><rect x="10" y="164" width="40" height="15" fill="rgb(222,16,5)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 3.44%)</title><rect x="10" y="180" width="40" height="15" fill="rgb(220,8,48)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="31" y="196" width="19" height="15" fill="rgb(243,112,39)"/><text x="34.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.63%)</title><rect x="31" y="212" width="19" height="15" fill="rgb(229,133,25)"/><text x="34.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.63%)</title><rect x="31" y="228" width="19" height="15" fill="rgb(243,228,42)"/><text x="34.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.36%)</title><rect x="46" y="244" width="4" height="15" fill="rgb(220,211,38)"/><text x="49.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="46" y="260" width="4" height="15" fill="rgb(214,95,35)"/><text x="49.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="46" y="276" width="4" height="15" fill="rgb(225,41,34)"/><text x="49.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="46" y="292" width="4" height="15" fill="rgb(250,38,38)"/><text x="49.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="46" y="308" width="4" height="15" fill="rgb(206,50,39)"/><text x="49.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="46" y="324" width="4" height="15" fill="rgb(253,224,4)"/><text x="49.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="46" y="340" width="4" height="15" fill="rgb(239,214,30)"/><text x="49.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="46" y="356" width="4" height="15" fill="rgb(209,78,26)"/><text x="49.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py) (1 samples, 0.18%)</title><rect x="48" y="372" width="2" height="15" fill="rgb(246,228,14)"/><text x="51.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="48" y="388" width="2" height="15" fill="rgb(249,1,31)"/><text x="51.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="48" y="404" width="2" height="15" fill="rgb(239,71,18)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="48" y="420" width="2" height="15" fill="rgb(252,93,48)"/><text x="51.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="48" y="436" width="2" height="15" fill="rgb(206,162,49)"/><text x="51.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="48" y="452" width="2" height="15" fill="rgb(225,85,36)"/><text x="51.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="48" y="468" width="2" height="15" fill="rgb(253,199,22)"/><text x="51.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="48" y="484" width="2" height="15" fill="rgb(237,27,48)"/><text x="51.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py) (1 samples, 0.18%)</title><rect x="48" y="500" width="2" height="15" fill="rgb(239,57,41)"/><text x="51.00" y="510.50"></text></g><g><title>0x7f3bdadc8ff9 (?) (1 samples, 0.18%)</title><rect x="50" y="212" width="2" height="15" fill="rgb(208,82,46)"/><text x="53.00" y="222.50"></text></g><g><title>0x7f3bdadc3ef6 (?) (1 samples, 0.18%)</title><rect x="50" y="228" width="2" height="15" fill="rgb(222,108,46)"/><text x="53.00" y="238.50"></text></g><g><title>0x7f3bdadb8962 (?) (1 samples, 0.18%)</title><rect x="50" y="244" width="2" height="15" fill="rgb(229,131,3)"/><text x="53.00" y="254.50"></text></g><g><title>0x7f3bdadec7a7 (?) (1 samples, 0.18%)</title><rect x="50" y="260" width="2" height="15" fill="rgb(247,91,43)"/><text x="53.00" y="270.50"></text></g><g><title>0x7f3bdadec379 (?) (1 samples, 0.18%)</title><rect x="50" y="276" width="2" height="15" fill="rgb(221,92,17)"/><text x="53.00" y="286.50"></text></g><g><title>0x7f3bdb24a8b8 (?) (1 samples, 0.18%)</title><rect x="50" y="292" width="2" height="15" fill="rgb(210,83,15)"/><text x="53.00" y="302.50"></text></g><g><title>0x7f3bdb248c7f (?) (1 samples, 0.18%)</title><rect x="50" y="308" width="2" height="15" fill="rgb(212,92,16)"/><text x="53.00" y="318.50"></text></g><g><title>0x7f3bdb25b99c (?) (1 samples, 0.18%)</title><rect x="50" y="324" width="2" height="15" fill="rgb(254,179,15)"/><text x="53.00" y="334.50"></text></g><g><title>0x7f3bdb09bbb6 (?) (1 samples, 0.18%)</title><rect x="50" y="340" width="2" height="15" fill="rgb(229,168,3)"/><text x="53.00" y="350.50"></text></g><g><title>0x7f3bdb099dd1 (?) (1 samples, 0.18%)</title><rect x="50" y="356" width="2" height="15" fill="rgb(223,117,38)"/><text x="53.00" y="366.50"></text></g><g><title>onnxruntime::Clip&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="52" y="340" width="2" height="15" fill="rgb(209,91,12)"/><text x="55.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="52" y="356" width="2" height="15" fill="rgb(237,51,35)"/><text x="55.00" y="366.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(252,30,54)"/><text x="57.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="56" y="340" width="3" height="15" fill="rgb(206,24,35)"/><text x="59.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="56" y="356" width="3" height="15" fill="rgb(211,59,51)"/><text x="59.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="56" y="372" width="3" height="15" fill="rgb(214,168,5)"/><text x="59.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="340" width="2" height="15" fill="rgb(206,111,53)"/><text x="62.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="356" width="2" height="15" fill="rgb(237,111,37)"/><text x="62.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="372" width="2" height="15" fill="rgb(240,119,5)"/><text x="62.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="388" width="2" height="15" fill="rgb(243,179,41)"/><text x="62.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="404" width="2" height="15" fill="rgb(224,73,51)"/><text x="62.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="420" width="2" height="15" fill="rgb(214,31,10)"/><text x="62.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="436" width="2" height="15" fill="rgb(222,153,1)"/><text x="62.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="452" width="2" height="15" fill="rgb(242,167,30)"/><text x="62.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="59" y="468" width="2" height="15" fill="rgb(224,27,18)"/><text x="62.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.18%)</title><rect x="59" y="484" width="2" height="15" fill="rgb(205,57,21)"/><text x="62.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="59" y="500" width="2" height="15" fill="rgb(222,95,19)"/><text x="62.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="61" y="340" width="2" height="15" fill="rgb(207,58,9)"/><text x="64.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="61" y="356" width="2" height="15" fill="rgb(250,149,23)"/><text x="64.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="63" y="356" width="2" height="15" fill="rgb(250,43,40)"/><text x="66.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="63" y="340" width="4" height="15" fill="rgb(220,45,37)"/><text x="66.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="65" y="356" width="2" height="15" fill="rgb(253,224,35)"/><text x="68.00" y="366.50"></text></g><g><title>0x7f3c1b10a998 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="65" y="372" width="2" height="15" fill="rgb(227,193,18)"/><text x="68.00" y="382.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="340" width="4" height="15" fill="rgb(234,119,35)"/><text x="70.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="356" width="4" height="15" fill="rgb(205,117,26)"/><text x="70.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="372" width="4" height="15" fill="rgb(225,50,25)"/><text x="70.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="388" width="4" height="15" fill="rgb(225,97,40)"/><text x="70.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="404" width="4" height="15" fill="rgb(250,100,45)"/><text x="70.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="420" width="4" height="15" fill="rgb(217,178,43)"/><text x="70.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="67" y="436" width="4" height="15" fill="rgb(241,6,19)"/><text x="70.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.36%)</title><rect x="67" y="452" width="4" height="15" fill="rgb(243,81,45)"/><text x="70.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="67" y="468" width="4" height="15" fill="rgb(212,142,28)"/><text x="70.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="71" y="372" width="3" height="15" fill="rgb(242,134,46)"/><text x="74.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="71" y="340" width="5" height="15" fill="rgb(249,89,16)"/><text x="74.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.36%)</title><rect x="71" y="356" width="5" height="15" fill="rgb(229,193,30)"/><text x="74.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="74" y="372" width="2" height="15" fill="rgb(243,155,7)"/><text x="77.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="74" y="388" width="2" height="15" fill="rgb(248,170,3)"/><text x="77.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (13 samples, 2.35%)</title><rect x="50" y="100" width="28" height="15" fill="rgb(224,124,6)"/><text x="53.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 2.35%)</title><rect x="50" y="116" width="28" height="15" fill="rgb(229,191,45)"/><text x="53.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 2.35%)</title><rect x="50" y="132" width="28" height="15" fill="rgb(227,149,34)"/><text x="53.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (13 samples, 2.35%)</title><rect x="50" y="148" width="28" height="15" fill="rgb(215,213,40)"/><text x="53.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (13 samples, 2.35%)</title><rect x="50" y="164" width="28" height="15" fill="rgb(245,185,48)"/><text x="53.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (13 samples, 2.35%)</title><rect x="50" y="180" width="28" height="15" fill="rgb(215,16,12)"/><text x="53.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py) (13 samples, 2.35%)</title><rect x="50" y="196" width="28" height="15" fill="rgb(253,218,25)"/><text x="53.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="212" width="26" height="15" fill="rgb(245,154,47)"/><text x="55.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="228" width="26" height="15" fill="rgb(216,212,35)"/><text x="55.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="244" width="26" height="15" fill="rgb(230,132,3)"/><text x="55.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="260" width="26" height="15" fill="rgb(207,180,48)"/><text x="55.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="276" width="26" height="15" fill="rgb(206,177,52)"/><text x="55.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="292" width="26" height="15" fill="rgb(243,50,50)"/><text x="55.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="308" width="26" height="15" fill="rgb(232,220,21)"/><text x="55.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.17%)</title><rect x="52" y="324" width="26" height="15" fill="rgb(210,3,3)"/><text x="55.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="76" y="340" width="2" height="15" fill="rgb(216,185,27)"/><text x="79.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="76" y="356" width="2" height="15" fill="rgb(226,54,19)"/><text x="79.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="76" y="372" width="2" height="15" fill="rgb(254,28,12)"/><text x="79.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.18%)</title><rect x="76" y="388" width="2" height="15" fill="rgb(237,153,28)"/><text x="79.00" y="398.50"></text></g><g><title>0x7f3c1b3d8f28 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="78" y="692" width="2" height="15" fill="rgb(245,38,49)"/><text x="81.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="180" width="4" height="15" fill="rgb(243,3,7)"/><text x="81.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="196" width="4" height="15" fill="rgb(252,13,9)"/><text x="81.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="212" width="4" height="15" fill="rgb(243,110,7)"/><text x="81.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="78" y="228" width="4" height="15" fill="rgb(207,185,17)"/><text x="81.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="244" width="4" height="15" fill="rgb(238,197,6)"/><text x="81.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.36%)</title><rect x="78" y="260" width="4" height="15" fill="rgb(211,71,10)"/><text x="81.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="276" width="4" height="15" fill="rgb(235,14,53)"/><text x="81.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="292" width="4" height="15" fill="rgb(205,161,6)"/><text x="81.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="308" width="4" height="15" fill="rgb(232,104,45)"/><text x="81.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="78" y="324" width="4" height="15" fill="rgb(236,75,32)"/><text x="81.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="340" width="4" height="15" fill="rgb(231,204,50)"/><text x="81.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.36%)</title><rect x="78" y="356" width="4" height="15" fill="rgb(253,96,20)"/><text x="81.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="372" width="4" height="15" fill="rgb(250,125,6)"/><text x="81.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="388" width="4" height="15" fill="rgb(225,36,2)"/><text x="81.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="404" width="4" height="15" fill="rgb(250,194,22)"/><text x="81.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="78" y="420" width="4" height="15" fill="rgb(228,123,36)"/><text x="81.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="436" width="4" height="15" fill="rgb(252,17,26)"/><text x="81.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.36%)</title><rect x="78" y="452" width="4" height="15" fill="rgb(244,213,42)"/><text x="81.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="468" width="4" height="15" fill="rgb(227,51,33)"/><text x="81.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="484" width="4" height="15" fill="rgb(245,150,4)"/><text x="81.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="500" width="4" height="15" fill="rgb(221,32,21)"/><text x="81.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="516" width="4" height="15" fill="rgb(243,208,24)"/><text x="81.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.36%)</title><rect x="78" y="532" width="4" height="15" fill="rgb(233,221,41)"/><text x="81.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="78" y="548" width="4" height="15" fill="rgb(229,138,9)"/><text x="81.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="564" width="4" height="15" fill="rgb(238,26,35)"/><text x="81.00" y="574.50"></text></g><g><title>0x7f3c1b392995 (libdl-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="580" width="4" height="15" fill="rgb(212,225,36)"/><text x="81.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="596" width="4" height="15" fill="rgb(254,11,49)"/><text x="81.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="612" width="4" height="15" fill="rgb(215,201,27)"/><text x="81.00" y="622.50"></text></g><g><title>0x7f3c1b392258 (libdl-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="628" width="4" height="15" fill="rgb(212,193,54)"/><text x="81.00" y="638.50"></text></g><g><title>0x7f3c1b3dfd7a (ld-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="644" width="4" height="15" fill="rgb(214,137,34)"/><text x="81.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="660" width="4" height="15" fill="rgb(248,135,4)"/><text x="81.00" y="670.50"></text></g><g><title>0x7f3c1b3e0345 (ld-2.29.so) (2 samples, 0.36%)</title><rect x="78" y="676" width="4" height="15" fill="rgb(231,21,24)"/><text x="81.00" y="686.50"></text></g><g><title>0x7f3c1b3d8fec (ld-2.29.so) (1 samples, 0.18%)</title><rect x="80" y="692" width="2" height="15" fill="rgb(214,36,53)"/><text x="83.00" y="702.50"></text></g><g><title>0x7f3c1b3d756b (ld-2.29.so) (1 samples, 0.18%)</title><rect x="80" y="708" width="2" height="15" fill="rgb(232,39,1)"/><text x="83.00" y="718.50"></text></g><g><title>0x7f3c1b3d70f4 (ld-2.29.so) (1 samples, 0.18%)</title><rect x="80" y="724" width="2" height="15" fill="rgb(244,133,6)"/><text x="83.00" y="734.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.54%)</title><rect x="78" y="132" width="6" height="15" fill="rgb(213,211,32)"/><text x="81.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.54%)</title><rect x="78" y="148" width="6" height="15" fill="rgb(246,65,36)"/><text x="81.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.54%)</title><rect x="78" y="164" width="6" height="15" fill="rgb(236,16,8)"/><text x="81.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="82" y="180" width="2" height="15" fill="rgb(236,56,22)"/><text x="85.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.18%)</title><rect x="82" y="196" width="2" height="15" fill="rgb(227,212,1)"/><text x="85.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.18%)</title><rect x="82" y="212" width="2" height="15" fill="rgb(241,113,49)"/><text x="85.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.18%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(210,52,10)"/><text x="85.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(220,220,2)"/><text x="85.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.18%)</title><rect x="82" y="260" width="2" height="15" fill="rgb(221,149,14)"/><text x="85.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="82" y="276" width="2" height="15" fill="rgb(229,136,6)"/><text x="85.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(250,11,53)"/><text x="85.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.18%)</title><rect x="82" y="308" width="2" height="15" fill="rgb(237,42,51)"/><text x="85.00" y="318.50"></text></g><g><title>0x7f3c094547c9 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="82" y="324" width="2" height="15" fill="rgb(227,162,22)"/><text x="85.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="82" y="340" width="2" height="15" fill="rgb(215,201,54)"/><text x="85.00" y="350.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="82" y="356" width="2" height="15" fill="rgb(226,148,22)"/><text x="85.00" y="366.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="82" y="372" width="2" height="15" fill="rgb(250,19,39)"/><text x="85.00" y="382.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="82" y="388" width="2" height="15" fill="rgb(235,128,25)"/><text x="85.00" y="398.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (17 samples, 3.07%)</title><rect x="50" y="68" width="36" height="15" fill="rgb(218,8,33)"/><text x="53.00" y="78.50">pro..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (17 samples, 3.07%)</title><rect x="50" y="84" width="36" height="15" fill="rgb(240,200,5)"/><text x="53.00" y="94.50">set..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.72%)</title><rect x="78" y="100" width="8" height="15" fill="rgb(254,144,8)"/><text x="81.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.72%)</title><rect x="78" y="116" width="8" height="15" fill="rgb(232,13,8)"/><text x="81.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="84" y="132" width="2" height="15" fill="rgb(238,0,49)"/><text x="87.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.18%)</title><rect x="84" y="148" width="2" height="15" fill="rgb(239,108,13)"/><text x="87.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.18%)</title><rect x="84" y="164" width="2" height="15" fill="rgb(227,104,24)"/><text x="87.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.18%)</title><rect x="84" y="180" width="2" height="15" fill="rgb(219,103,48)"/><text x="87.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.18%)</title><rect x="84" y="196" width="2" height="15" fill="rgb(239,152,44)"/><text x="87.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.18%)</title><rect x="84" y="212" width="2" height="15" fill="rgb(212,34,50)"/><text x="87.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.18%)</title><rect x="84" y="228" width="2" height="15" fill="rgb(235,224,15)"/><text x="87.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.18%)</title><rect x="84" y="244" width="2" height="15" fill="rgb(205,176,50)"/><text x="87.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.18%)</title><rect x="84" y="260" width="2" height="15" fill="rgb(248,165,6)"/><text x="87.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.18%)</title><rect x="84" y="276" width="2" height="15" fill="rgb(214,54,26)"/><text x="87.00" y="286.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="108" y="180" width="2" height="15" fill="rgb(207,195,30)"/><text x="111.00" y="190.50"></text></g><g><title>0x7f3c1b10c028 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="108" y="196" width="2" height="15" fill="rgb(252,199,40)"/><text x="111.00" y="206.50"></text></g><g><title>0x7f3c1b109c49 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="108" y="212" width="2" height="15" fill="rgb(208,119,15)"/><text x="111.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.36%)</title><rect x="202" y="196" width="4" height="15" fill="rgb(213,116,46)"/><text x="205.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (5 samples, 0.90%)</title><rect x="212" y="212" width="11" height="15" fill="rgb(223,196,37)"/><text x="215.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.72%)</title><rect x="214" y="228" width="9" height="15" fill="rgb(214,207,46)"/><text x="217.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.36%)</title><rect x="219" y="244" width="4" height="15" fill="rgb(252,45,1)"/><text x="222.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.18%)</title><rect x="221" y="260" width="2" height="15" fill="rgb(228,98,9)"/><text x="224.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.18%)</title><rect x="221" y="276" width="2" height="15" fill="rgb(246,118,23)"/><text x="224.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.18%)</title><rect x="221" y="292" width="2" height="15" fill="rgb(249,220,0)"/><text x="224.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (1 samples, 0.18%)</title><rect x="223" y="212" width="2" height="15" fill="rgb(206,84,34)"/><text x="226.00" y="222.50"></text></g><g><title>array_add (number.c) (1 samples, 0.18%)</title><rect x="223" y="228" width="2" height="15" fill="rgb(247,226,20)"/><text x="226.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="223" y="244" width="2" height="15" fill="rgb(214,25,54)"/><text x="226.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="223" y="260" width="2" height="15" fill="rgb(229,29,12)"/><text x="226.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="223" y="276" width="2" height="15" fill="rgb(210,29,5)"/><text x="226.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.18%)</title><rect x="225" y="212" width="2" height="15" fill="rgb(208,90,16)"/><text x="228.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.18%)</title><rect x="240" y="244" width="2" height="15" fill="rgb(245,178,31)"/><text x="243.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="244" y="292" width="2" height="15" fill="rgb(221,155,18)"/><text x="247.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.54%)</title><rect x="244" y="260" width="7" height="15" fill="rgb(248,170,24)"/><text x="247.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.54%)</title><rect x="244" y="276" width="7" height="15" fill="rgb(246,132,29)"/><text x="247.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.36%)</title><rect x="246" y="292" width="5" height="15" fill="rgb(212,19,43)"/><text x="249.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="253" y="276" width="2" height="15" fill="rgb(227,199,13)"/><text x="256.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="253" y="292" width="2" height="15" fill="rgb(236,97,30)"/><text x="256.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="253" y="308" width="2" height="15" fill="rgb(205,149,37)"/><text x="256.00" y="318.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (3 samples, 0.54%)</title><rect x="255" y="276" width="6" height="15" fill="rgb(215,153,0)"/><text x="258.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="257" y="292" width="4" height="15" fill="rgb(215,226,1)"/><text x="260.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.36%)</title><rect x="257" y="308" width="4" height="15" fill="rgb(253,217,2)"/><text x="260.00" y="318.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.18%)</title><rect x="259" y="324" width="2" height="15" fill="rgb(247,67,23)"/><text x="262.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.18%)</title><rect x="259" y="340" width="2" height="15" fill="rgb(250,89,19)"/><text x="262.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="259" y="356" width="2" height="15" fill="rgb(248,201,22)"/><text x="262.00" y="366.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.18%)</title><rect x="261" y="276" width="2" height="15" fill="rgb(245,148,26)"/><text x="264.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="263" y="324" width="3" height="15" fill="rgb(246,189,18)"/><text x="266.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.18%)</title><rect x="263" y="340" width="3" height="15" fill="rgb(229,15,9)"/><text x="266.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="263" y="356" width="3" height="15" fill="rgb(239,39,18)"/><text x="266.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="263" y="372" width="3" height="15" fill="rgb(213,99,26)"/><text x="266.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="263" y="388" width="3" height="15" fill="rgb(232,77,36)"/><text x="266.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="263" y="404" width="3" height="15" fill="rgb(220,226,20)"/><text x="266.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.18%)</title><rect x="263" y="420" width="3" height="15" fill="rgb(205,25,44)"/><text x="266.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="263" y="436" width="3" height="15" fill="rgb(233,2,35)"/><text x="266.00" y="446.50"></text></g><g><title>0x7f3c1b10bb12 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="263" y="452" width="3" height="15" fill="rgb(208,42,15)"/><text x="266.00" y="462.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.18%)</title><rect x="266" y="324" width="2" height="15" fill="rgb(244,139,45)"/><text x="269.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="266" y="340" width="2" height="15" fill="rgb(231,217,51)"/><text x="269.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="266" y="356" width="2" height="15" fill="rgb(247,195,0)"/><text x="269.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="266" y="372" width="2" height="15" fill="rgb(211,88,33)"/><text x="269.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="268" y="324" width="2" height="15" fill="rgb(213,181,7)"/><text x="271.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="270" y="340" width="2" height="15" fill="rgb(210,146,2)"/><text x="273.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.90%)</title><rect x="263" y="308" width="11" height="15" fill="rgb(228,134,18)"/><text x="266.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.36%)</title><rect x="270" y="324" width="4" height="15" fill="rgb(243,203,42)"/><text x="273.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.18%)</title><rect x="272" y="340" width="2" height="15" fill="rgb(210,123,36)"/><text x="275.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="272" y="356" width="2" height="15" fill="rgb(213,188,22)"/><text x="275.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (3 samples, 0.54%)</title><rect x="274" y="308" width="6" height="15" fill="rgb(216,109,14)"/><text x="277.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.36%)</title><rect x="276" y="324" width="4" height="15" fill="rgb(216,81,17)"/><text x="279.00" y="334.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.18%)</title><rect x="280" y="308" width="3" height="15" fill="rgb(254,138,0)"/><text x="283.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 2.89%)</title><rect x="251" y="260" width="34" height="15" fill="rgb(207,182,51)"/><text x="254.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.81%)</title><rect x="263" y="276" width="22" height="15" fill="rgb(219,179,4)"/><text x="266.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.81%)</title><rect x="263" y="292" width="22" height="15" fill="rgb(223,83,36)"/><text x="266.00" y="302.50">i..</text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.18%)</title><rect x="283" y="308" width="2" height="15" fill="rgb(237,162,52)"/><text x="286.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (26 samples, 4.70%)</title><rect x="234" y="228" width="55" height="15" fill="rgb(218,124,53)"/><text x="237.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 3.98%)</title><rect x="242" y="244" width="47" height="15" fill="rgb(223,205,24)"/><text x="245.00" y="254.50">ufun..</text></g><g><title>_find_array_wrap (ufunc_object.c) (2 samples, 0.36%)</title><rect x="285" y="260" width="4" height="15" fill="rgb(207,0,15)"/><text x="288.00" y="270.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.18%)</title><rect x="287" y="276" width="2" height="15" fill="rgb(252,75,27)"/><text x="290.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.18%)</title><rect x="293" y="324" width="2" height="15" fill="rgb(216,60,3)"/><text x="296.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="293" y="340" width="2" height="15" fill="rgb(220,195,19)"/><text x="296.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.18%)</title><rect x="293" y="356" width="2" height="15" fill="rgb(249,205,36)"/><text x="296.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="291" y="276" width="7" height="15" fill="rgb(230,213,3)"/><text x="294.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.54%)</title><rect x="291" y="292" width="7" height="15" fill="rgb(205,22,44)"/><text x="294.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.54%)</title><rect x="291" y="308" width="7" height="15" fill="rgb(210,139,21)"/><text x="294.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.18%)</title><rect x="295" y="324" width="3" height="15" fill="rgb(246,196,46)"/><text x="298.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="295" y="340" width="3" height="15" fill="rgb(220,19,47)"/><text x="298.00" y="350.50"></text></g><g><title>0x7f3c1b10c700 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="295" y="356" width="3" height="15" fill="rgb(213,132,45)"/><text x="298.00" y="366.50"></text></g><g><title>0x7f3c1b109aa4 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="295" y="372" width="3" height="15" fill="rgb(237,183,27)"/><text x="298.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (5 samples, 0.90%)</title><rect x="289" y="228" width="11" height="15" fill="rgb(218,67,26)"/><text x="292.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.72%)</title><rect x="291" y="244" width="9" height="15" fill="rgb(240,17,0)"/><text x="294.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="291" y="260" width="9" height="15" fill="rgb(226,226,41)"/><text x="294.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.18%)</title><rect x="298" y="276" width="2" height="15" fill="rgb(209,36,26)"/><text x="301.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.18%)</title><rect x="298" y="292" width="2" height="15" fill="rgb(206,101,47)"/><text x="301.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="330" y="308" width="2" height="15" fill="rgb(231,109,36)"/><text x="333.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.36%)</title><rect x="332" y="356" width="4" height="15" fill="rgb(250,118,10)"/><text x="335.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.36%)</title><rect x="332" y="372" width="4" height="15" fill="rgb(242,165,42)"/><text x="335.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.36%)</title><rect x="332" y="388" width="4" height="15" fill="rgb(209,107,12)"/><text x="335.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.54%)</title><rect x="332" y="324" width="6" height="15" fill="rgb(246,214,15)"/><text x="335.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.54%)</title><rect x="332" y="340" width="6" height="15" fill="rgb(243,210,32)"/><text x="335.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.18%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(224,193,25)"/><text x="339.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="336" y="372" width="2" height="15" fill="rgb(247,198,19)"/><text x="339.00" y="382.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.18%)</title><rect x="340" y="340" width="2" height="15" fill="rgb(221,194,27)"/><text x="343.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.18%)</title><rect x="340" y="356" width="2" height="15" fill="rgb(232,222,47)"/><text x="343.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.18%)</title><rect x="340" y="372" width="2" height="15" fill="rgb(210,93,15)"/><text x="343.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.18%)</title><rect x="342" y="372" width="3" height="15" fill="rgb(225,159,29)"/><text x="345.00" y="382.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.18%)</title><rect x="345" y="372" width="2" height="15" fill="rgb(231,161,45)"/><text x="348.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.36%)</title><rect x="347" y="372" width="4" height="15" fill="rgb(240,229,1)"/><text x="350.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.36%)</title><rect x="347" y="388" width="4" height="15" fill="rgb(215,185,20)"/><text x="350.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.36%)</title><rect x="347" y="404" width="4" height="15" fill="rgb(230,164,17)"/><text x="350.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.36%)</title><rect x="347" y="420" width="4" height="15" fill="rgb(244,31,46)"/><text x="350.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.36%)</title><rect x="347" y="436" width="4" height="15" fill="rgb(211,12,9)"/><text x="350.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="349" y="452" width="2" height="15" fill="rgb(248,42,10)"/><text x="352.00" y="462.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="349" y="468" width="2" height="15" fill="rgb(227,10,32)"/><text x="352.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.27%)</title><rect x="342" y="356" width="15" height="15" fill="rgb(206,16,3)"/><text x="345.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.54%)</title><rect x="351" y="372" width="6" height="15" fill="rgb(211,142,45)"/><text x="354.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.18%)</title><rect x="355" y="388" width="2" height="15" fill="rgb(208,130,32)"/><text x="358.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.18%)</title><rect x="355" y="404" width="2" height="15" fill="rgb(225,7,49)"/><text x="358.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (28 samples, 5.06%)</title><rect x="300" y="228" width="59" height="15" fill="rgb(206,154,18)"/><text x="303.00" y="238.50">_run (..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (25 samples, 4.52%)</title><rect x="306" y="244" width="53" height="15" fill="rgb(252,190,28)"/><text x="309.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (25 samples, 4.52%)</title><rect x="306" y="260" width="53" height="15" fill="rgb(220,49,4)"/><text x="309.00" y="270.50">array..</text></g><g><title>sum (numpy/core/fromnumeric.py) (24 samples, 4.34%)</title><rect x="308" y="276" width="51" height="15" fill="rgb(233,49,20)"/><text x="311.00" y="286.50">sum (..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (21 samples, 3.80%)</title><rect x="315" y="292" width="44" height="15" fill="rgb(215,176,51)"/><text x="318.00" y="302.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 2.35%)</title><rect x="332" y="308" width="27" height="15" fill="rgb(222,213,50)"/><text x="335.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 1.81%)</title><rect x="338" y="324" width="21" height="15" fill="rgb(247,115,12)"/><text x="341.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.45%)</title><rect x="342" y="340" width="17" height="15" fill="rgb(219,167,30)"/><text x="345.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.18%)</title><rect x="357" y="356" width="2" height="15" fill="rgb(219,206,9)"/><text x="360.00" y="366.50"></text></g><g><title>0x7f3bdbc68422 (?) (1 samples, 0.18%)</title><rect x="359" y="244" width="3" height="15" fill="rgb(226,215,53)"/><text x="362.00" y="254.50"></text></g><g><title>0x7f3bdbc6e89e (?) (1 samples, 0.18%)</title><rect x="359" y="260" width="3" height="15" fill="rgb(236,202,42)"/><text x="362.00" y="270.50"></text></g><g><title>0x7f3bdbc6e74f (?) (1 samples, 0.18%)</title><rect x="359" y="276" width="3" height="15" fill="rgb(253,32,52)"/><text x="362.00" y="286.50"></text></g><g><title>0x7f3bdbc74a3a (?) (1 samples, 0.18%)</title><rect x="359" y="292" width="3" height="15" fill="rgb(252,151,8)"/><text x="362.00" y="302.50"></text></g><g><title>0x7f3be50c6cfa (?) (1 samples, 0.18%)</title><rect x="359" y="308" width="3" height="15" fill="rgb(212,32,9)"/><text x="362.00" y="318.50"></text></g><g><title>0x7f3be50cfdaa (?) (1 samples, 0.18%)</title><rect x="359" y="324" width="3" height="15" fill="rgb(205,14,45)"/><text x="362.00" y="334.50"></text></g><g><title>0x7f3be50d1d6d (?) (1 samples, 0.18%)</title><rect x="359" y="340" width="3" height="15" fill="rgb(230,100,13)"/><text x="362.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (1 samples, 0.18%)</title><rect x="362" y="436" width="2" height="15" fill="rgb(228,53,14)"/><text x="365.00" y="446.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 0.18%)</title><rect x="362" y="452" width="2" height="15" fill="rgb(222,79,49)"/><text x="365.00" y="462.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 0.18%)</title><rect x="362" y="468" width="2" height="15" fill="rgb(205,154,14)"/><text x="365.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.18%)</title><rect x="362" y="484" width="2" height="15" fill="rgb(217,175,10)"/><text x="365.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.18%)</title><rect x="362" y="500" width="2" height="15" fill="rgb(252,103,18)"/><text x="365.00" y="510.50"></text></g><g><title>pybind11::make_tuple&lt;(pybind11::return_value_policy)1, pybind11::array_t&lt;long, 16&gt;&amp;, pybind11::array_t&lt;float, 16&gt;&amp;&gt; (cast.h) (1 samples, 0.18%)</title><rect x="362" y="516" width="2" height="15" fill="rgb(251,156,8)"/><text x="365.00" y="526.50"></text></g><g><title>pybind11::object::release (pytypes.h) (1 samples, 0.18%)</title><rect x="362" y="532" width="2" height="15" fill="rgb(252,13,6)"/><text x="365.00" y="542.50"></text></g><g><title>0x7f3be50d1ea0 (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="364" y="468" width="2" height="15" fill="rgb(207,204,26)"/><text x="367.00" y="478.50"></text></g><g><title>0x7f3be50d1ea9 (libgomp.so.1.0.0) (9 samples, 1.63%)</title><rect x="366" y="468" width="19" height="15" fill="rgb(254,68,24)"/><text x="369.00" y="478.50"></text></g><g><title>0x7f3be50d1eab (libgomp.so.1.0.0) (8 samples, 1.45%)</title><rect x="385" y="468" width="17" height="15" fill="rgb(254,142,29)"/><text x="388.00" y="478.50"></text></g><g><title>0x7f3be50d0ab9 (libgomp.so.1.0.0) (24 samples, 4.34%)</title><rect x="364" y="452" width="51" height="15" fill="rgb(221,43,50)"/><text x="367.00" y="462.50">0x7f3..</text></g><g><title>0x7f3be50d1ead (libgomp.so.1.0.0) (6 samples, 1.08%)</title><rect x="402" y="468" width="13" height="15" fill="rgb(251,172,19)"/><text x="405.00" y="478.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (99 samples, 17.90%)</title><rect x="206" y="196" width="211" height="15" fill="rgb(221,154,21)"/><text x="209.00" y="206.50">run (mlprodict/onnxrt/ops_c..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (89 samples, 16.09%)</title><rect x="227" y="212" width="190" height="15" fill="rgb(244,179,14)"/><text x="230.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (27 samples, 4.88%)</title><rect x="359" y="228" width="58" height="15" fill="rgb(210,208,13)"/><text x="362.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (26 samples, 4.70%)</title><rect x="362" y="244" width="55" height="15" fill="rgb(244,64,42)"/><text x="365.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (26 samples, 4.70%)</title><rect x="362" y="260" width="55" height="15" fill="rgb(222,168,12)"/><text x="365.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (26 samples, 4.70%)</title><rect x="362" y="276" width="55" height="15" fill="rgb(214,130,22)"/><text x="365.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (26 samples, 4.70%)</title><rect x="362" y="292" width="55" height="15" fill="rgb(229,60,53)"/><text x="365.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (26 samples, 4.70%)</title><rect x="362" y="308" width="55" height="15" fill="rgb(232,59,28)"/><text x="365.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (26 samples, 4.70%)</title><rect x="362" y="324" width="55" height="15" fill="rgb(216,179,18)"/><text x="365.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (26 samples, 4.70%)</title><rect x="362" y="340" width="55" height="15" fill="rgb(213,47,22)"/><text x="365.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h) (26 samples, 4.70%)</title><rect x="362" y="356" width="55" height="15" fill="rgb(223,204,47)"/><text x="365.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (26 samples, 4.70%)</title><rect x="362" y="372" width="55" height="15" fill="rgb(251,77,45)"/><text x="365.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h) (26 samples, 4.70%)</title><rect x="362" y="388" width="55" height="15" fill="rgb(233,211,40)"/><text x="365.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (26 samples, 4.70%)</title><rect x="362" y="404" width="55" height="15" fill="rgb(247,85,43)"/><text x="365.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (26 samples, 4.70%)</title><rect x="362" y="420" width="55" height="15" fill="rgb(208,224,43)"/><text x="365.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (25 samples, 4.52%)</title><rect x="364" y="436" width="53" height="15" fill="rgb(209,2,29)"/><text x="367.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="415" y="452" width="2" height="15" fill="rgb(219,96,19)"/><text x="418.00" y="462.50"></text></g><g><title>0x7f3be50cfdaa (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="415" y="468" width="2" height="15" fill="rgb(209,165,26)"/><text x="418.00" y="478.50"></text></g><g><title>0x7f3be50d1cfb (libgomp.so.1.0.0) (1 samples, 0.18%)</title><rect x="415" y="484" width="2" height="15" fill="rgb(210,218,10)"/><text x="418.00" y="494.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="438" y="404" width="3" height="15" fill="rgb(208,36,12)"/><text x="441.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.18%)</title><rect x="438" y="420" width="3" height="15" fill="rgb(221,220,2)"/><text x="441.00" y="430.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="438" y="436" width="3" height="15" fill="rgb(240,69,47)"/><text x="441.00" y="446.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="438" y="452" width="3" height="15" fill="rgb(250,194,4)"/><text x="441.00" y="462.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (4 samples, 0.72%)</title><rect x="434" y="388" width="9" height="15" fill="rgb(243,141,49)"/><text x="437.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="441" y="404" width="2" height="15" fill="rgb(249,193,24)"/><text x="444.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="441" y="420" width="2" height="15" fill="rgb(243,116,48)"/><text x="444.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.18%)</title><rect x="445" y="436" width="2" height="15" fill="rgb(236,153,47)"/><text x="448.00" y="446.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (2 samples, 0.36%)</title><rect x="447" y="436" width="4" height="15" fill="rgb(252,227,19)"/><text x="450.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.90%)</title><rect x="443" y="420" width="10" height="15" fill="rgb(217,36,42)"/><text x="446.00" y="430.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.18%)</title><rect x="451" y="436" width="2" height="15" fill="rgb(219,229,28)"/><text x="454.00" y="446.50"></text></g><g><title>0x7f3c1b10c6df (libc-2.29.so) (1 samples, 0.18%)</title><rect x="453" y="468" width="2" height="15" fill="rgb(218,16,21)"/><text x="456.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (12 samples, 2.17%)</title><rect x="432" y="340" width="26" height="15" fill="rgb(250,25,25)"/><text x="435.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.99%)</title><rect x="434" y="356" width="24" height="15" fill="rgb(228,226,30)"/><text x="437.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.99%)</title><rect x="434" y="372" width="24" height="15" fill="rgb(220,10,6)"/><text x="437.00" y="382.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.27%)</title><rect x="443" y="388" width="15" height="15" fill="rgb(234,227,19)"/><text x="446.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.27%)</title><rect x="443" y="404" width="15" height="15" fill="rgb(251,123,1)"/><text x="446.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.36%)</title><rect x="453" y="420" width="5" height="15" fill="rgb(230,220,30)"/><text x="456.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (2 samples, 0.36%)</title><rect x="453" y="436" width="5" height="15" fill="rgb(225,189,16)"/><text x="456.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.36%)</title><rect x="453" y="452" width="5" height="15" fill="rgb(236,7,51)"/><text x="456.00" y="462.50"></text></g><g><title>0x7f3c1b10c700 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="455" y="468" width="3" height="15" fill="rgb(233,33,39)"/><text x="458.00" y="478.50"></text></g><g><title>0x7f3c1b109acd (libc-2.29.so) (1 samples, 0.18%)</title><rect x="455" y="484" width="3" height="15" fill="rgb(207,224,33)"/><text x="458.00" y="494.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.18%)</title><rect x="458" y="340" width="2" height="15" fill="rgb(222,12,44)"/><text x="461.00" y="350.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.18%)</title><rect x="458" y="356" width="2" height="15" fill="rgb(208,9,24)"/><text x="461.00" y="366.50"></text></g><g><title>_arraydescr_isnative (descriptor.c) (1 samples, 0.18%)</title><rect x="458" y="372" width="2" height="15" fill="rgb(225,227,0)"/><text x="461.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.72%)</title><rect x="475" y="356" width="8" height="15" fill="rgb(253,148,52)"/><text x="478.00" y="366.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.18%)</title><rect x="498" y="436" width="2" height="15" fill="rgb(205,124,39)"/><text x="501.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (9 samples, 1.63%)</title><rect x="483" y="356" width="19" height="15" fill="rgb(252,178,13)"/><text x="486.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.63%)</title><rect x="483" y="372" width="19" height="15" fill="rgb(250,154,49)"/><text x="486.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (9 samples, 1.63%)</title><rect x="483" y="388" width="19" height="15" fill="rgb(242,176,33)"/><text x="486.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.54%)</title><rect x="496" y="404" width="6" height="15" fill="rgb(237,144,30)"/><text x="499.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.36%)</title><rect x="498" y="420" width="4" height="15" fill="rgb(224,98,15)"/><text x="501.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.18%)</title><rect x="500" y="436" width="2" height="15" fill="rgb(215,94,43)"/><text x="503.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="500" y="452" width="2" height="15" fill="rgb(206,208,23)"/><text x="503.00" y="462.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="500" y="468" width="2" height="15" fill="rgb(216,98,6)"/><text x="503.00" y="478.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="500" y="484" width="2" height="15" fill="rgb(250,171,16)"/><text x="503.00" y="494.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="500" y="500" width="2" height="15" fill="rgb(212,152,52)"/><text x="503.00" y="510.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="502" y="388" width="3" height="15" fill="rgb(217,197,36)"/><text x="505.00" y="398.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.36%)</title><rect x="505" y="388" width="4" height="15" fill="rgb(217,168,13)"/><text x="508.00" y="398.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="511" y="404" width="2" height="15" fill="rgb(219,75,16)"/><text x="514.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="509" y="388" width="6" height="15" fill="rgb(240,209,3)"/><text x="512.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="513" y="404" width="2" height="15" fill="rgb(226,57,6)"/><text x="516.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src) (1 samples, 0.18%)</title><rect x="513" y="420" width="2" height="15" fill="rgb(220,107,36)"/><text x="516.00" y="430.50"></text></g><g><title>run_isnan_simd_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="513" y="436" width="2" height="15" fill="rgb(240,53,34)"/><text x="516.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.18%)</title><rect x="515" y="388" width="2" height="15" fill="rgb(214,215,39)"/><text x="518.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="515" y="404" width="2" height="15" fill="rgb(222,20,40)"/><text x="518.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="515" y="420" width="2" height="15" fill="rgb(240,146,16)"/><text x="518.00" y="430.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.18%)</title><rect x="515" y="436" width="2" height="15" fill="rgb(227,228,20)"/><text x="518.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="515" y="452" width="2" height="15" fill="rgb(227,25,53)"/><text x="518.00" y="462.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (203 samples, 36.71%)</title><rect x="86" y="164" width="433" height="15" fill="rgb(212,156,17)"/><text x="89.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (192 samples, 34.72%)</title><rect x="110" y="180" width="409" height="15" fill="rgb(214,19,21)"/><text x="113.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (48 samples, 8.68%)</title><rect x="417" y="196" width="102" height="15" fill="rgb(205,73,34)"/><text x="420.00" y="206.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (48 samples, 8.68%)</title><rect x="417" y="212" width="102" height="15" fill="rgb(223,86,29)"/><text x="420.00" y="222.50">_run (mlprod..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (48 samples, 8.68%)</title><rect x="417" y="228" width="102" height="15" fill="rgb(254,150,5)"/><text x="420.00" y="238.50">clip (&lt;__arr..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (48 samples, 8.68%)</title><rect x="417" y="244" width="102" height="15" fill="rgb(217,209,27)"/><text x="420.00" y="254.50">array_implem..</text></g><g><title>clip (numpy/core/fromnumeric.py) (48 samples, 8.68%)</title><rect x="417" y="260" width="102" height="15" fill="rgb(247,121,25)"/><text x="420.00" y="270.50">clip (numpy/..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (46 samples, 8.32%)</title><rect x="421" y="276" width="98" height="15" fill="rgb(252,65,22)"/><text x="424.00" y="286.50">_wrapfunc (..</text></g><g><title>array_clip (methods.c) (45 samples, 8.14%)</title><rect x="423" y="292" width="96" height="15" fill="rgb(254,44,38)"/><text x="426.00" y="302.50">array_clip ..</text></g><g><title>forward_ndarray_method (methods.c) (45 samples, 8.14%)</title><rect x="423" y="308" width="96" height="15" fill="rgb(239,102,20)"/><text x="426.00" y="318.50">forward_nda..</text></g><g><title>_clip (numpy/core/_methods.py) (45 samples, 8.14%)</title><rect x="423" y="324" width="96" height="15" fill="rgb(222,90,48)"/><text x="426.00" y="334.50">_clip (nump..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (28 samples, 5.06%)</title><rect x="460" y="340" width="59" height="15" fill="rgb(247,184,42)"/><text x="463.00" y="350.50">_clip_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.45%)</title><rect x="502" y="356" width="17" height="15" fill="rgb(212,203,45)"/><text x="505.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.45%)</title><rect x="502" y="372" width="17" height="15" fill="rgb(213,109,54)"/><text x="505.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="517" y="388" width="2" height="15" fill="rgb(231,102,31)"/><text x="520.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="517" y="404" width="2" height="15" fill="rgb(222,105,11)"/><text x="520.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="517" y="420" width="2" height="15" fill="rgb(233,48,24)"/><text x="520.00" y="430.50"></text></g><g><title>0x7f3c1b10ad07 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="519" y="180" width="3" height="15" fill="rgb(245,134,22)"/><text x="522.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (205 samples, 37.07%)</title><rect x="86" y="100" width="438" height="15" fill="rgb(248,52,35)"/><text x="89.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (205 samples, 37.07%)</title><rect x="86" y="116" width="438" height="15" fill="rgb(250,185,19)"/><text x="89.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (205 samples, 37.07%)</title><rect x="86" y="132" width="438" height="15" fill="rgb(209,199,9)"/><text x="89.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (205 samples, 37.07%)</title><rect x="86" y="148" width="438" height="15" fill="rgb(217,119,23)"/><text x="89.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.36%)</title><rect x="519" y="164" width="5" height="15" fill="rgb(232,75,47)"/><text x="522.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="522" y="180" width="2" height="15" fill="rgb(226,172,49)"/><text x="525.00" y="190.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="522" y="196" width="2" height="15" fill="rgb(217,154,20)"/><text x="525.00" y="206.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="524" y="132" width="2" height="15" fill="rgb(225,130,1)"/><text x="527.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="524" y="148" width="2" height="15" fill="rgb(217,129,49)"/><text x="527.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.18%)</title><rect x="524" y="164" width="2" height="15" fill="rgb(251,7,54)"/><text x="527.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.18%)</title><rect x="524" y="180" width="2" height="15" fill="rgb(244,187,29)"/><text x="527.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.18%)</title><rect x="524" y="196" width="2" height="15" fill="rgb(206,55,36)"/><text x="527.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="212" width="2" height="15" fill="rgb(214,105,36)"/><text x="527.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="228" width="2" height="15" fill="rgb(231,197,47)"/><text x="527.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="244" width="2" height="15" fill="rgb(207,86,6)"/><text x="527.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="524" y="260" width="2" height="15" fill="rgb(249,12,46)"/><text x="527.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="276" width="2" height="15" fill="rgb(207,47,36)"/><text x="527.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.18%)</title><rect x="524" y="292" width="2" height="15" fill="rgb(254,175,23)"/><text x="527.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="308" width="2" height="15" fill="rgb(223,101,19)"/><text x="527.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="324" width="2" height="15" fill="rgb(241,112,22)"/><text x="527.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="340" width="2" height="15" fill="rgb(207,108,48)"/><text x="527.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.18%)</title><rect x="524" y="356" width="2" height="15" fill="rgb(218,143,51)"/><text x="527.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.18%)</title><rect x="524" y="372" width="2" height="15" fill="rgb(254,25,6)"/><text x="527.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.18%)</title><rect x="524" y="388" width="2" height="15" fill="rgb(207,166,42)"/><text x="527.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.18%)</title><rect x="524" y="404" width="2" height="15" fill="rgb(249,53,3)"/><text x="527.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.18%)</title><rect x="524" y="420" width="2" height="15" fill="rgb(227,81,2)"/><text x="527.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="524" y="436" width="2" height="15" fill="rgb(254,58,13)"/><text x="527.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.18%)</title><rect x="524" y="452" width="2" height="15" fill="rgb(216,158,32)"/><text x="527.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.18%)</title><rect x="524" y="468" width="2" height="15" fill="rgb(230,155,24)"/><text x="527.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.18%)</title><rect x="524" y="484" width="2" height="15" fill="rgb(248,122,50)"/><text x="527.00" y="494.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (207 samples, 37.43%)</title><rect x="86" y="68" width="442" height="15" fill="rgb(224,21,20)"/><text x="89.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_50_12_..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (207 samples, 37.43%)</title><rect x="86" y="84" width="442" height="15" fill="rgb(205,189,7)"/><text x="89.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.36%)</title><rect x="524" y="100" width="4" height="15" fill="rgb(232,158,26)"/><text x="527.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.36%)</title><rect x="524" y="116" width="4" height="15" fill="rgb(252,7,9)"/><text x="527.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.18%)</title><rect x="526" y="132" width="2" height="15" fill="rgb(219,15,52)"/><text x="529.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.18%)</title><rect x="526" y="148" width="2" height="15" fill="rgb(229,11,34)"/><text x="529.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.18%)</title><rect x="526" y="164" width="2" height="15" fill="rgb(248,23,22)"/><text x="529.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.18%)</title><rect x="526" y="180" width="2" height="15" fill="rgb(225,177,10)"/><text x="529.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.18%)</title><rect x="526" y="196" width="2" height="15" fill="rgb(243,181,37)"/><text x="529.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.18%)</title><rect x="526" y="212" width="2" height="15" fill="rgb(225,81,37)"/><text x="529.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py) (1 samples, 0.18%)</title><rect x="526" y="228" width="2" height="15" fill="rgb(236,91,12)"/><text x="529.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.18%)</title><rect x="526" y="244" width="2" height="15" fill="rgb(231,168,31)"/><text x="529.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.18%)</title><rect x="526" y="260" width="2" height="15" fill="rgb(223,32,13)"/><text x="529.00" y="270.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.18%)</title><rect x="526" y="276" width="2" height="15" fill="rgb(251,105,37)"/><text x="529.00" y="286.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.18%)</title><rect x="526" y="292" width="2" height="15" fill="rgb(221,55,2)"/><text x="529.00" y="302.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.18%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(241,220,47)"/><text x="529.00" y="318.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.18%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(244,125,28)"/><text x="529.00" y="334.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.18%)</title><rect x="526" y="340" width="2" height="15" fill="rgb(224,118,53)"/><text x="529.00" y="350.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.18%)</title><rect x="528" y="164" width="2" height="15" fill="rgb(212,22,5)"/><text x="531.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.18%)</title><rect x="528" y="180" width="2" height="15" fill="rgb(206,209,28)"/><text x="531.00" y="190.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (3 samples, 0.54%)</title><rect x="558" y="212" width="6" height="15" fill="rgb(215,163,45)"/><text x="561.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.18%)</title><rect x="562" y="228" width="2" height="15" fill="rgb(252,27,45)"/><text x="565.00" y="238.50"></text></g><g><title>0x7f3c1b120730 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="562" y="244" width="2" height="15" fill="rgb(235,114,9)"/><text x="565.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="564" y="228" width="2" height="15" fill="rgb(253,61,1)"/><text x="567.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="564" y="244" width="2" height="15" fill="rgb(215,23,10)"/><text x="567.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.54%)</title><rect x="564" y="212" width="7" height="15" fill="rgb(225,96,11)"/><text x="567.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.36%)</title><rect x="566" y="228" width="5" height="15" fill="rgb(253,226,51)"/><text x="569.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="569" y="244" width="2" height="15" fill="rgb(234,47,41)"/><text x="572.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="569" y="260" width="2" height="15" fill="rgb(252,182,53)"/><text x="572.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.36%)</title><rect x="577" y="276" width="4" height="15" fill="rgb(219,3,26)"/><text x="580.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.18%)</title><rect x="579" y="292" width="2" height="15" fill="rgb(236,37,53)"/><text x="582.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.18%)</title><rect x="579" y="308" width="2" height="15" fill="rgb(215,203,13)"/><text x="582.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (4 samples, 0.72%)</title><rect x="575" y="260" width="8" height="15" fill="rgb(237,77,19)"/><text x="578.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="581" y="276" width="2" height="15" fill="rgb(239,206,46)"/><text x="584.00" y="286.50"></text></g><g><title>PyArray_CopyInto (ctors.c) (1 samples, 0.18%)</title><rect x="583" y="292" width="3" height="15" fill="rgb(249,136,30)"/><text x="586.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.36%)</title><rect x="583" y="260" width="5" height="15" fill="rgb(229,212,48)"/><text x="586.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (2 samples, 0.36%)</title><rect x="583" y="276" width="5" height="15" fill="rgb(213,40,45)"/><text x="586.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="586" y="292" width="2" height="15" fill="rgb(227,170,37)"/><text x="589.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.18%)</title><rect x="586" y="308" width="2" height="15" fill="rgb(239,0,16)"/><text x="589.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="588" y="260" width="2" height="15" fill="rgb(206,108,0)"/><text x="591.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="588" y="276" width="2" height="15" fill="rgb(225,222,7)"/><text x="591.00" y="286.50"></text></g><g><title>sse2_binary_scalar1_multiply_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="588" y="292" width="2" height="15" fill="rgb(209,81,46)"/><text x="591.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.36%)</title><rect x="594" y="292" width="4" height="15" fill="rgb(205,195,11)"/><text x="597.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.18%)</title><rect x="596" y="308" width="2" height="15" fill="rgb(217,137,53)"/><text x="599.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.53%)</title><rect x="571" y="244" width="30" height="15" fill="rgb(223,49,28)"/><text x="574.00" y="254.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.90%)</title><rect x="590" y="260" width="11" height="15" fill="rgb(250,45,5)"/><text x="593.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.54%)</title><rect x="594" y="276" width="7" height="15" fill="rgb(212,215,28)"/><text x="597.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="598" y="292" width="3" height="15" fill="rgb(228,224,46)"/><text x="601.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="598" y="308" width="3" height="15" fill="rgb(235,39,7)"/><text x="601.00" y="318.50"></text></g><g><title>array_multiply (number.c) (15 samples, 2.71%)</title><rect x="571" y="212" width="32" height="15" fill="rgb(230,163,30)"/><text x="574.00" y="222.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.71%)</title><rect x="571" y="228" width="32" height="15" fill="rgb(246,222,15)"/><text x="574.00" y="238.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(253,128,52)"/><text x="604.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="601" y="260" width="2" height="15" fill="rgb(225,223,30)"/><text x="604.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="601" y="276" width="2" height="15" fill="rgb(248,124,33)"/><text x="604.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="607" y="276" width="2" height="15" fill="rgb(226,44,11)"/><text x="610.00" y="286.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="607" y="292" width="2" height="15" fill="rgb(254,98,27)"/><text x="610.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="609" y="276" width="2" height="15" fill="rgb(215,35,23)"/><text x="612.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 0.90%)</title><rect x="603" y="212" width="10" height="15" fill="rgb(212,178,5)"/><text x="606.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (4 samples, 0.72%)</title><rect x="605" y="228" width="8" height="15" fill="rgb(224,76,6)"/><text x="608.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (3 samples, 0.54%)</title><rect x="607" y="244" width="6" height="15" fill="rgb(253,177,49)"/><text x="610.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.54%)</title><rect x="607" y="260" width="6" height="15" fill="rgb(206,50,3)"/><text x="610.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="611" y="276" width="2" height="15" fill="rgb(253,27,27)"/><text x="614.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="611" y="292" width="2" height="15" fill="rgb(239,104,42)"/><text x="614.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="611" y="308" width="2" height="15" fill="rgb(246,139,32)"/><text x="614.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="613" y="260" width="3" height="15" fill="rgb(230,179,50)"/><text x="616.00" y="270.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="616" y="276" width="2" height="15" fill="rgb(230,97,24)"/><text x="619.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="620" y="308" width="2" height="15" fill="rgb(223,75,16)"/><text x="623.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(241,28,46)"/><text x="625.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="622" y="324" width="2" height="15" fill="rgb(230,64,43)"/><text x="625.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="624" y="308" width="2" height="15" fill="rgb(221,71,42)"/><text x="627.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.36%)</title><rect x="626" y="308" width="4" height="15" fill="rgb(245,3,32)"/><text x="629.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.18%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(222,126,17)"/><text x="631.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.27%)</title><rect x="618" y="292" width="15" height="15" fill="rgb(240,181,21)"/><text x="621.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.18%)</title><rect x="630" y="308" width="3" height="15" fill="rgb(214,135,16)"/><text x="633.00" y="318.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.18%)</title><rect x="630" y="324" width="3" height="15" fill="rgb(213,227,9)"/><text x="633.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.99%)</title><rect x="613" y="244" width="24" height="15" fill="rgb(240,102,23)"/><text x="616.00" y="254.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.81%)</title><rect x="616" y="260" width="21" height="15" fill="rgb(239,160,54)"/><text x="619.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.63%)</title><rect x="618" y="276" width="19" height="15" fill="rgb(228,97,35)"/><text x="621.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.36%)</title><rect x="633" y="292" width="4" height="15" fill="rgb(222,229,24)"/><text x="636.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="635" y="308" width="2" height="15" fill="rgb(226,18,50)"/><text x="638.00" y="318.50"></text></g><g><title>array_subtract (number.c) (12 samples, 2.17%)</title><rect x="613" y="212" width="26" height="15" fill="rgb(207,121,21)"/><text x="616.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 2.17%)</title><rect x="613" y="228" width="26" height="15" fill="rgb(234,25,17)"/><text x="616.00" y="238.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="637" y="244" width="2" height="15" fill="rgb(214,170,18)"/><text x="640.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.36%)</title><rect x="643" y="276" width="5" height="15" fill="rgb(223,63,3)"/><text x="646.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.36%)</title><rect x="643" y="292" width="5" height="15" fill="rgb(223,68,35)"/><text x="646.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.36%)</title><rect x="643" y="308" width="5" height="15" fill="rgb(226,229,23)"/><text x="646.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.36%)</title><rect x="643" y="324" width="5" height="15" fill="rgb(214,174,32)"/><text x="646.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.36%)</title><rect x="643" y="340" width="5" height="15" fill="rgb(212,70,53)"/><text x="646.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="645" y="356" width="3" height="15" fill="rgb(252,96,21)"/><text x="648.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.18%)</title><rect x="652" y="340" width="2" height="15" fill="rgb(234,43,7)"/><text x="655.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.18%)</title><rect x="654" y="340" width="2" height="15" fill="rgb(209,188,21)"/><text x="657.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.54%)</title><rect x="652" y="324" width="6" height="15" fill="rgb(213,204,29)"/><text x="655.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.18%)</title><rect x="656" y="340" width="2" height="15" fill="rgb(241,11,43)"/><text x="659.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="660" y="372" width="2" height="15" fill="rgb(240,24,40)"/><text x="663.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.54%)</title><rect x="658" y="324" width="7" height="15" fill="rgb(231,160,13)"/><text x="661.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.36%)</title><rect x="660" y="340" width="5" height="15" fill="rgb(223,192,53)"/><text x="663.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.36%)</title><rect x="660" y="356" width="5" height="15" fill="rgb(253,37,45)"/><text x="663.00" y="366.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="662" y="372" width="3" height="15" fill="rgb(215,158,27)"/><text x="665.00" y="382.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.18%)</title><rect x="662" y="388" width="3" height="15" fill="rgb(215,141,39)"/><text x="665.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.36%)</title><rect x="665" y="340" width="4" height="15" fill="rgb(247,139,14)"/><text x="668.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.18%)</title><rect x="667" y="356" width="2" height="15" fill="rgb(207,178,14)"/><text x="670.00" y="366.50"></text></g><g><title>array_sum (methods.c) (15 samples, 2.71%)</title><rect x="639" y="212" width="32" height="15" fill="rgb(240,110,6)"/><text x="642.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 2.71%)</title><rect x="639" y="228" width="32" height="15" fill="rgb(207,21,35)"/><text x="642.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 2.53%)</title><rect x="641" y="244" width="30" height="15" fill="rgb(218,215,23)"/><text x="644.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 2.35%)</title><rect x="643" y="260" width="28" height="15" fill="rgb(211,192,17)"/><text x="646.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 1.99%)</title><rect x="648" y="276" width="23" height="15" fill="rgb(233,198,8)"/><text x="651.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.63%)</title><rect x="652" y="292" width="19" height="15" fill="rgb(223,25,38)"/><text x="655.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.63%)</title><rect x="652" y="308" width="19" height="15" fill="rgb(215,105,3)"/><text x="655.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="665" y="324" width="6" height="15" fill="rgb(214,149,12)"/><text x="668.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.18%)</title><rect x="669" y="340" width="2" height="15" fill="rgb(224,111,4)"/><text x="672.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="701" y="388" width="2" height="15" fill="rgb(216,217,19)"/><text x="704.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.18%)</title><rect x="701" y="404" width="2" height="15" fill="rgb(227,91,10)"/><text x="704.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="701" y="420" width="2" height="15" fill="rgb(232,181,7)"/><text x="704.00" y="430.50"></text></g><g><title>0x7f3c1b120e50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="705" y="404" width="2" height="15" fill="rgb(219,159,9)"/><text x="708.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 0.72%)</title><rect x="701" y="356" width="8" height="15" fill="rgb(247,67,28)"/><text x="704.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.72%)</title><rect x="701" y="372" width="8" height="15" fill="rgb(215,65,28)"/><text x="704.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (3 samples, 0.54%)</title><rect x="703" y="388" width="6" height="15" fill="rgb(254,89,0)"/><text x="706.00" y="398.50"></text></g><g><title>0x7f3c1b120e7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="707" y="404" width="2" height="15" fill="rgb(221,135,4)"/><text x="710.00" y="414.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="709" y="388" width="3" height="15" fill="rgb(245,18,13)"/><text x="712.00" y="398.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="709" y="372" width="5" height="15" fill="rgb(224,144,0)"/><text x="712.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="712" y="388" width="2" height="15" fill="rgb(244,122,53)"/><text x="715.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.18%)</title><rect x="712" y="404" width="2" height="15" fill="rgb(226,128,22)"/><text x="715.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.18%)</title><rect x="712" y="420" width="2" height="15" fill="rgb(210,191,3)"/><text x="715.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="714" y="372" width="2" height="15" fill="rgb(229,164,52)"/><text x="717.00" y="382.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="714" y="388" width="2" height="15" fill="rgb(245,199,28)"/><text x="717.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.18%)</title><rect x="716" y="388" width="2" height="15" fill="rgb(245,195,14)"/><text x="719.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.18%)</title><rect x="716" y="404" width="2" height="15" fill="rgb(239,125,6)"/><text x="719.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.18%)</title><rect x="716" y="420" width="2" height="15" fill="rgb(233,20,52)"/><text x="719.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.36%)</title><rect x="716" y="372" width="4" height="15" fill="rgb(251,162,13)"/><text x="719.00" y="382.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.18%)</title><rect x="718" y="388" width="2" height="15" fill="rgb(237,173,37)"/><text x="721.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.18%)</title><rect x="718" y="404" width="2" height="15" fill="rgb(215,100,31)"/><text x="721.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.08%)</title><rect x="709" y="356" width="13" height="15" fill="rgb(219,118,38)"/><text x="712.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="720" y="372" width="2" height="15" fill="rgb(207,14,44)"/><text x="723.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="720" y="388" width="2" height="15" fill="rgb(246,171,12)"/><text x="723.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="720" y="404" width="2" height="15" fill="rgb(228,127,35)"/><text x="723.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (13 samples, 2.35%)</title><rect x="699" y="324" width="27" height="15" fill="rgb(240,104,30)"/><text x="702.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 2.17%)</title><rect x="701" y="340" width="25" height="15" fill="rgb(247,78,33)"/><text x="704.00" y="350.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.36%)</title><rect x="722" y="356" width="4" height="15" fill="rgb(230,3,20)"/><text x="725.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (4 samples, 0.72%)</title><rect x="726" y="324" width="9" height="15" fill="rgb(239,55,6)"/><text x="729.00" y="334.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.18%)</title><rect x="733" y="340" width="2" height="15" fill="rgb(254,158,23)"/><text x="736.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.36%)</title><rect x="750" y="340" width="4" height="15" fill="rgb(251,3,24)"/><text x="753.00" y="350.50"></text></g><g><title>0x7f3c1b120eb5 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="752" y="356" width="2" height="15" fill="rgb(230,189,14)"/><text x="755.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (4 samples, 0.72%)</title><rect x="758" y="372" width="9" height="15" fill="rgb(219,36,32)"/><text x="761.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.54%)</title><rect x="761" y="388" width="6" height="15" fill="rgb(205,35,39)"/><text x="764.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.54%)</title><rect x="761" y="404" width="6" height="15" fill="rgb(245,42,8)"/><text x="764.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.54%)</title><rect x="761" y="420" width="6" height="15" fill="rgb(250,75,20)"/><text x="764.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (4 samples, 0.72%)</title><rect x="780" y="452" width="8" height="15" fill="rgb(226,69,2)"/><text x="783.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c) (1 samples, 0.18%)</title><rect x="786" y="468" width="2" height="15" fill="rgb(213,8,40)"/><text x="789.00" y="478.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (5 samples, 0.90%)</title><rect x="780" y="420" width="10" height="15" fill="rgb(209,155,0)"/><text x="783.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (5 samples, 0.90%)</title><rect x="780" y="436" width="10" height="15" fill="rgb(251,46,53)"/><text x="783.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="788" y="452" width="2" height="15" fill="rgb(232,207,30)"/><text x="791.00" y="462.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="788" y="468" width="2" height="15" fill="rgb(243,89,37)"/><text x="791.00" y="478.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.18%)</title><rect x="788" y="484" width="2" height="15" fill="rgb(213,57,16)"/><text x="791.00" y="494.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.18%)</title><rect x="788" y="500" width="2" height="15" fill="rgb(246,52,23)"/><text x="791.00" y="510.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (18 samples, 3.25%)</title><rect x="754" y="340" width="39" height="15" fill="rgb(234,71,6)"/><text x="757.00" y="350.50">ndi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (18 samples, 3.25%)</title><rect x="754" y="356" width="39" height="15" fill="rgb(243,101,33)"/><text x="757.00" y="366.50">arr..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (12 samples, 2.17%)</title><rect x="767" y="372" width="26" height="15" fill="rgb(248,81,32)"/><text x="770.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (8 samples, 1.45%)</title><rect x="776" y="388" width="17" height="15" fill="rgb(244,104,29)"/><text x="779.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (8 samples, 1.45%)</title><rect x="776" y="404" width="17" height="15" fill="rgb(216,56,35)"/><text x="779.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="790" y="420" width="3" height="15" fill="rgb(242,138,6)"/><text x="793.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="795" y="356" width="2" height="15" fill="rgb(215,0,9)"/><text x="798.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="795" y="372" width="2" height="15" fill="rgb(233,137,44)"/><text x="798.00" y="382.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.18%)</title><rect x="799" y="404" width="2" height="15" fill="rgb(221,136,19)"/><text x="802.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.18%)</title><rect x="799" y="420" width="2" height="15" fill="rgb(232,132,26)"/><text x="802.00" y="430.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.18%)</title><rect x="805" y="420" width="3" height="15" fill="rgb(213,163,8)"/><text x="808.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (4 samples, 0.72%)</title><rect x="801" y="404" width="9" height="15" fill="rgb(235,127,43)"/><text x="804.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.18%)</title><rect x="808" y="420" width="2" height="15" fill="rgb(216,67,32)"/><text x="811.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (7 samples, 1.27%)</title><rect x="799" y="372" width="15" height="15" fill="rgb(219,165,27)"/><text x="802.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (7 samples, 1.27%)</title><rect x="799" y="388" width="15" height="15" fill="rgb(252,76,53)"/><text x="802.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.36%)</title><rect x="810" y="404" width="4" height="15" fill="rgb(206,44,2)"/><text x="813.00" y="414.50"></text></g><g><title>0x7f3c1b120f8f (libc-2.29.so) (1 samples, 0.18%)</title><rect x="816" y="388" width="2" height="15" fill="rgb(225,6,22)"/><text x="819.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 0.72%)</title><rect x="814" y="372" width="8" height="15" fill="rgb(244,66,44)"/><text x="817.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.36%)</title><rect x="818" y="388" width="4" height="15" fill="rgb(243,138,0)"/><text x="821.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (2 samples, 0.36%)</title><rect x="818" y="404" width="4" height="15" fill="rgb(245,169,7)"/><text x="821.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="820" y="420" width="2" height="15" fill="rgb(205,195,41)"/><text x="823.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.35%)</title><rect x="797" y="356" width="28" height="15" fill="rgb(207,119,27)"/><text x="800.00" y="366.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="822" y="372" width="3" height="15" fill="rgb(249,164,2)"/><text x="825.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.18%)</title><rect x="822" y="388" width="3" height="15" fill="rgb(211,6,48)"/><text x="825.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.18%)</title><rect x="822" y="404" width="3" height="15" fill="rgb(208,2,45)"/><text x="825.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (71 samples, 12.84%)</title><rect x="675" y="244" width="152" height="15" fill="rgb(231,126,20)"/><text x="678.00" y="254.50">clip (numpy/core/fr..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (68 samples, 12.30%)</title><rect x="682" y="260" width="145" height="15" fill="rgb(241,196,34)"/><text x="685.00" y="270.50">_wrapfunc (numpy/c..</text></g><g><title>array_clip (methods.c) (66 samples, 11.93%)</title><rect x="686" y="276" width="141" height="15" fill="rgb(224,201,47)"/><text x="689.00" y="286.50">array_clip (metho..</text></g><g><title>forward_ndarray_method (methods.c) (66 samples, 11.93%)</title><rect x="686" y="292" width="141" height="15" fill="rgb(244,3,7)"/><text x="689.00" y="302.50">forward_ndarray_m..</text></g><g><title>_clip (numpy/core/_methods.py) (65 samples, 11.75%)</title><rect x="688" y="308" width="139" height="15" fill="rgb(245,60,48)"/><text x="691.00" y="318.50">_clip (numpy/core..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (43 samples, 7.78%)</title><rect x="735" y="324" width="92" height="15" fill="rgb(247,213,0)"/><text x="738.00" y="334.50">_clip_dep_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.89%)</title><rect x="793" y="340" width="34" height="15" fill="rgb(230,8,3)"/><text x="796.00" y="350.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="825" y="356" width="2" height="15" fill="rgb(235,138,8)"/><text x="828.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="825" y="372" width="2" height="15" fill="rgb(246,102,2)"/><text x="828.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="825" y="388" width="2" height="15" fill="rgb(212,21,25)"/><text x="828.00" y="398.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (78 samples, 14.10%)</title><rect x="671" y="212" width="166" height="15" fill="rgb(231,76,51)"/><text x="674.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (76 samples, 13.74%)</title><rect x="675" y="228" width="162" height="15" fill="rgb(248,212,49)"/><text x="678.00" y="238.50">array_implement_arra..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (5 samples, 0.90%)</title><rect x="827" y="244" width="10" height="15" fill="rgb(247,209,53)"/><text x="830.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (5 samples, 0.90%)</title><rect x="827" y="260" width="10" height="15" fill="rgb(210,81,28)"/><text x="830.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.90%)</title><rect x="827" y="276" width="10" height="15" fill="rgb(221,191,47)"/><text x="830.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.90%)</title><rect x="827" y="292" width="10" height="15" fill="rgb(210,150,19)"/><text x="830.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="835" y="308" width="2" height="15" fill="rgb(237,193,38)"/><text x="838.00" y="318.50"></text></g><g><title>0x7f3bf4b40604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="854" y="308" width="3" height="15" fill="rgb(246,95,10)"/><text x="857.00" y="318.50"></text></g><g><title>0x7f3bf4b3610c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="859" y="324" width="2" height="15" fill="rgb(220,185,1)"/><text x="862.00" y="334.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.18%)</title><rect x="863" y="356" width="2" height="15" fill="rgb(227,114,27)"/><text x="866.00" y="366.50"></text></g><g><title>0x7f3bf4b40d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.08%)</title><rect x="854" y="292" width="13" height="15" fill="rgb(229,103,46)"/><text x="857.00" y="302.50"></text></g><g><title>0x7f3bf4b40666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.90%)</title><rect x="857" y="308" width="10" height="15" fill="rgb(235,172,14)"/><text x="860.00" y="318.50"></text></g><g><title>0x7f3bf4b362fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="861" y="324" width="6" height="15" fill="rgb(225,176,20)"/><text x="864.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.36%)</title><rect x="863" y="340" width="4" height="15" fill="rgb(212,227,10)"/><text x="866.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.18%)</title><rect x="865" y="356" width="2" height="15" fill="rgb(254,141,18)"/><text x="868.00" y="366.50"></text></g><g><title>0x7f3bf4b5c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.27%)</title><rect x="854" y="276" width="15" height="15" fill="rgb(241,61,29)"/><text x="857.00" y="286.50"></text></g><g><title>0x7f3bf4b41007 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="867" y="292" width="2" height="15" fill="rgb(224,26,36)"/><text x="870.00" y="302.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.18%)</title><rect x="872" y="324" width="2" height="15" fill="rgb(223,116,23)"/><text x="875.00" y="334.50"></text></g><g><title>0x7f3c1a32cef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="872" y="340" width="2" height="15" fill="rgb(208,81,10)"/><text x="875.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.36%)</title><rect x="872" y="308" width="4" height="15" fill="rgb(249,88,16)"/><text x="875.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.18%)</title><rect x="874" y="324" width="2" height="15" fill="rgb(218,180,53)"/><text x="877.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.18%)</title><rect x="874" y="340" width="2" height="15" fill="rgb(249,217,52)"/><text x="877.00" y="350.50"></text></g><g><title>0x7f3bf4b5c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.72%)</title><rect x="869" y="276" width="9" height="15" fill="rgb(243,3,15)"/><text x="872.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 0.54%)</title><rect x="872" y="292" width="6" height="15" fill="rgb(227,72,44)"/><text x="875.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.18%)</title><rect x="876" y="308" width="2" height="15" fill="rgb(239,137,46)"/><text x="879.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.18%)</title><rect x="876" y="324" width="2" height="15" fill="rgb(224,33,48)"/><text x="879.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="876" y="340" width="2" height="15" fill="rgb(234,0,46)"/><text x="879.00" y="350.50"></text></g><g><title>0x7f3bf4b5c6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="878" y="276" width="2" height="15" fill="rgb(249,130,7)"/><text x="881.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.18%)</title><rect x="878" y="292" width="2" height="15" fill="rgb(217,200,46)"/><text x="881.00" y="302.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.18%)</title><rect x="882" y="356" width="2" height="15" fill="rgb(242,1,26)"/><text x="885.00" y="366.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.18%)</title><rect x="882" y="372" width="2" height="15" fill="rgb(247,220,14)"/><text x="885.00" y="382.50"></text></g><g><title>0x7f3bf4b5d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.71%)</title><rect x="854" y="260" width="32" height="15" fill="rgb(214,44,14)"/><text x="857.00" y="270.50">0x..</text></g><g><title>0x7f3bf4b5cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="880" y="276" width="6" height="15" fill="rgb(247,31,16)"/><text x="883.00" y="286.50"></text></g><g><title>0x7f3bf4b34529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.54%)</title><rect x="880" y="292" width="6" height="15" fill="rgb(213,104,33)"/><text x="883.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.54%)</title><rect x="880" y="308" width="6" height="15" fill="rgb(241,11,20)"/><text x="883.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.54%)</title><rect x="880" y="324" width="6" height="15" fill="rgb(240,121,53)"/><text x="883.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.36%)</title><rect x="882" y="340" width="4" height="15" fill="rgb(212,50,14)"/><text x="885.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="884" y="356" width="2" height="15" fill="rgb(215,209,44)"/><text x="887.00" y="366.50"></text></g><g><title>0x7f3bf4b314dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="886" y="292" width="3" height="15" fill="rgb(229,48,36)"/><text x="889.00" y="302.50"></text></g><g><title>0x7f3bf4b4dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.07%)</title><rect x="854" y="244" width="37" height="15" fill="rgb(232,43,53)"/><text x="857.00" y="254.50">0x7..</text></g><g><title>0x7f3bf4b5d540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="886" y="260" width="5" height="15" fill="rgb(239,169,48)"/><text x="889.00" y="270.50"></text></g><g><title>0x7f3bf4b322f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.36%)</title><rect x="886" y="276" width="5" height="15" fill="rgb(232,184,16)"/><text x="889.00" y="286.50"></text></g><g><title>0x7f3bf4b31530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="889" y="292" width="2" height="15" fill="rgb(234,97,29)"/><text x="892.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.18%)</title><rect x="889" y="308" width="2" height="15" fill="rgb(254,219,3)"/><text x="892.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.36%)</title><rect x="895" y="276" width="4" height="15" fill="rgb(226,42,23)"/><text x="898.00" y="286.50"></text></g><g><title>0x7f3bf4b4e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.90%)</title><rect x="891" y="244" width="10" height="15" fill="rgb(209,47,35)"/><text x="894.00" y="254.50"></text></g><g><title>array_take (methods.c) (5 samples, 0.90%)</title><rect x="891" y="260" width="10" height="15" fill="rgb(213,201,44)"/><text x="894.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="899" y="276" width="2" height="15" fill="rgb(205,199,6)"/><text x="902.00" y="286.50"></text></g><g><title>0x7f3bf4b4e062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="901" y="244" width="3" height="15" fill="rgb(240,139,32)"/><text x="904.00" y="254.50"></text></g><g><title>0x7f3bf4b4e13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="904" y="244" width="2" height="15" fill="rgb(207,53,24)"/><text x="907.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="904" y="260" width="2" height="15" fill="rgb(239,86,52)"/><text x="907.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="904" y="276" width="2" height="15" fill="rgb(226,112,5)"/><text x="907.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="904" y="292" width="2" height="15" fill="rgb(219,90,1)"/><text x="907.00" y="302.50"></text></g><g><title>0x7f3bf4b4e14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.08%)</title><rect x="906" y="244" width="13" height="15" fill="rgb(214,43,20)"/><text x="909.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (6 samples, 1.08%)</title><rect x="906" y="260" width="13" height="15" fill="rgb(238,49,35)"/><text x="909.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (6 samples, 1.08%)</title><rect x="906" y="276" width="13" height="15" fill="rgb(247,212,20)"/><text x="909.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (6 samples, 1.08%)</title><rect x="906" y="292" width="13" height="15" fill="rgb(239,64,18)"/><text x="909.00" y="302.50"></text></g><g><title>0x7f3bf4b4e328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="919" y="244" width="2" height="15" fill="rgb(253,181,15)"/><text x="922.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.18%)</title><rect x="919" y="260" width="2" height="15" fill="rgb(254,148,9)"/><text x="922.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.18%)</title><rect x="919" y="276" width="2" height="15" fill="rgb(253,65,53)"/><text x="922.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.18%)</title><rect x="919" y="292" width="2" height="15" fill="rgb(250,26,32)"/><text x="922.00" y="302.50"></text></g><g><title>0x7f3bf4b4ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 5.79%)</title><rect x="854" y="228" width="69" height="15" fill="rgb(246,71,18)"/><text x="857.00" y="238.50">0x7f3bf..</text></g><g><title>0x7f3bf4b4e5f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.18%)</title><rect x="921" y="244" width="2" height="15" fill="rgb(252,124,3)"/><text x="924.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.18%)</title><rect x="953" y="260" width="2" height="15" fill="rgb(248,151,30)"/><text x="956.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.18%)</title><rect x="955" y="260" width="2" height="15" fill="rgb(206,62,13)"/><text x="958.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.54%)</title><rect x="957" y="260" width="6" height="15" fill="rgb(244,14,47)"/><text x="960.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.90%)</title><rect x="976" y="276" width="11" height="15" fill="rgb(252,146,21)"/><text x="979.00" y="286.50"></text></g><g><title>0x7f3c1b120e50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="985" y="292" width="2" height="15" fill="rgb(212,156,22)"/><text x="988.00" y="302.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.54%)</title><rect x="987" y="276" width="6" height="15" fill="rgb(217,2,51)"/><text x="990.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (15 samples, 2.71%)</title><rect x="963" y="260" width="32" height="15" fill="rgb(215,120,21)"/><text x="966.00" y="270.50">_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.18%)</title><rect x="993" y="276" width="2" height="15" fill="rgb(238,144,22)"/><text x="996.00" y="286.50"></text></g><g><title>0x7f3c1b12b120 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1019" y="276" width="2" height="15" fill="rgb(224,164,48)"/><text x="1022.00" y="286.50"></text></g><g><title>0x7f3c1b12b12f (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1021" y="276" width="2" height="15" fill="rgb(225,53,17)"/><text x="1024.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 2.53%)</title><rect x="995" y="260" width="30" height="15" fill="rgb(241,199,0)"/><text x="998.00" y="270.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.18%)</title><rect x="1023" y="276" width="2" height="15" fill="rgb(235,198,31)"/><text x="1026.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.18%)</title><rect x="1023" y="292" width="2" height="15" fill="rgb(233,207,29)"/><text x="1026.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.72%)</title><rect x="1025" y="260" width="9" height="15" fill="rgb(212,98,42)"/><text x="1028.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.54%)</title><rect x="1027" y="276" width="7" height="15" fill="rgb(241,68,18)"/><text x="1030.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.18%)</title><rect x="1032" y="292" width="2" height="15" fill="rgb(229,36,14)"/><text x="1035.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.18%)</title><rect x="1032" y="308" width="2" height="15" fill="rgb(208,15,35)"/><text x="1035.00" y="318.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.18%)</title><rect x="1032" y="324" width="2" height="15" fill="rgb(207,101,48)"/><text x="1035.00" y="334.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (56 samples, 10.13%)</title><rect x="923" y="228" width="119" height="15" fill="rgb(226,59,26)"/><text x="926.00" y="238.50">_validate_X_pr..</text></g><g><title>check_array (sklearn/utils/validation.py) (55 samples, 9.95%)</title><rect x="925" y="244" width="117" height="15" fill="rgb(243,60,18)"/><text x="928.00" y="254.50">check_array (s..</text></g><g><title>simplefilter (warnings.py) (4 samples, 0.72%)</title><rect x="1034" y="260" width="8" height="15" fill="rgb(248,68,17)"/><text x="1037.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.72%)</title><rect x="1034" y="276" width="8" height="15" fill="rgb(240,81,52)"/><text x="1037.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.18%)</title><rect x="1042" y="260" width="2" height="15" fill="rgb(243,11,20)"/><text x="1045.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.36%)</title><rect x="1042" y="228" width="5" height="15" fill="rgb(226,118,1)"/><text x="1045.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.36%)</title><rect x="1042" y="244" width="5" height="15" fill="rgb(253,16,17)"/><text x="1045.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.18%)</title><rect x="1044" y="260" width="3" height="15" fill="rgb(242,24,35)"/><text x="1047.00" y="270.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.18%)</title><rect x="1044" y="276" width="3" height="15" fill="rgb(227,229,24)"/><text x="1047.00" y="286.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.18%)</title><rect x="1044" y="292" width="3" height="15" fill="rgb(215,105,9)"/><text x="1047.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1047" y="228" width="2" height="15" fill="rgb(222,96,21)"/><text x="1050.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1047" y="244" width="2" height="15" fill="rgb(225,105,52)"/><text x="1050.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1053" y="260" width="8" height="15" fill="rgb(226,96,34)"/><text x="1056.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1053" y="276" width="8" height="15" fill="rgb(243,126,20)"/><text x="1056.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.72%)</title><rect x="1053" y="292" width="8" height="15" fill="rgb(233,1,24)"/><text x="1056.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (3 samples, 0.54%)</title><rect x="1055" y="308" width="6" height="15" fill="rgb(238,225,2)"/><text x="1058.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (3 samples, 0.54%)</title><rect x="1055" y="324" width="6" height="15" fill="rgb(243,177,14)"/><text x="1058.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (3 samples, 0.54%)</title><rect x="1055" y="340" width="6" height="15" fill="rgb(208,37,19)"/><text x="1058.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1061" y="260" width="3" height="15" fill="rgb(244,199,53)"/><text x="1064.00" y="270.50"></text></g><g><title>array_richcompare (arrayobject.c) (8 samples, 1.45%)</title><rect x="1049" y="228" width="17" height="15" fill="rgb(250,79,33)"/><text x="1052.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.27%)</title><rect x="1051" y="244" width="15" height="15" fill="rgb(222,121,38)"/><text x="1054.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1064" y="260" width="2" height="15" fill="rgb(206,199,37)"/><text x="1067.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1064" y="276" width="2" height="15" fill="rgb(248,74,54)"/><text x="1067.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1064" y="292" width="2" height="15" fill="rgb(216,8,5)"/><text x="1067.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.36%)</title><rect x="1066" y="228" width="4" height="15" fill="rgb(243,162,0)"/><text x="1069.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.36%)</title><rect x="1066" y="244" width="4" height="15" fill="rgb(247,136,5)"/><text x="1069.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.18%)</title><rect x="1068" y="260" width="2" height="15" fill="rgb(253,38,22)"/><text x="1071.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 0.90%)</title><rect x="1070" y="292" width="11" height="15" fill="rgb(217,64,1)"/><text x="1073.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 0.90%)</title><rect x="1070" y="308" width="11" height="15" fill="rgb(253,6,52)"/><text x="1073.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 0.72%)</title><rect x="1072" y="324" width="9" height="15" fill="rgb(206,176,22)"/><text x="1075.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 0.72%)</title><rect x="1072" y="340" width="9" height="15" fill="rgb(229,220,30)"/><text x="1075.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 0.72%)</title><rect x="1072" y="356" width="9" height="15" fill="rgb(229,109,53)"/><text x="1075.00" y="366.50"></text></g><g><title>0x7f3c1b120e86 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1079" y="372" width="2" height="15" fill="rgb(252,113,20)"/><text x="1082.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.36%)</title><rect x="1083" y="340" width="4" height="15" fill="rgb(214,103,29)"/><text x="1086.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1085" y="356" width="2" height="15" fill="rgb(233,217,47)"/><text x="1088.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.36%)</title><rect x="1087" y="340" width="4" height="15" fill="rgb(227,76,20)"/><text x="1090.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1091" y="372" width="2" height="15" fill="rgb(230,118,29)"/><text x="1094.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1091" y="388" width="2" height="15" fill="rgb(216,44,36)"/><text x="1094.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="1091" y="404" width="2" height="15" fill="rgb(211,2,28)"/><text x="1094.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.18%)</title><rect x="1091" y="420" width="2" height="15" fill="rgb(247,105,14)"/><text x="1094.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.36%)</title><rect x="1091" y="340" width="5" height="15" fill="rgb(210,21,52)"/><text x="1094.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.36%)</title><rect x="1091" y="356" width="5" height="15" fill="rgb(207,50,14)"/><text x="1094.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1093" y="372" width="3" height="15" fill="rgb(211,124,18)"/><text x="1096.00" y="382.50"></text></g><g><title>0x7f3c1b12ad50 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1093" y="388" width="3" height="15" fill="rgb(221,170,47)"/><text x="1096.00" y="398.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.35%)</title><rect x="1070" y="228" width="28" height="15" fill="rgb(207,180,51)"/><text x="1073.00" y="238.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.35%)</title><rect x="1070" y="244" width="28" height="15" fill="rgb(226,205,33)"/><text x="1073.00" y="254.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 2.35%)</title><rect x="1070" y="260" width="28" height="15" fill="rgb(242,146,12)"/><text x="1073.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 2.35%)</title><rect x="1070" y="276" width="28" height="15" fill="rgb(250,76,43)"/><text x="1073.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 1.45%)</title><rect x="1081" y="292" width="17" height="15" fill="rgb(248,46,21)"/><text x="1084.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.27%)</title><rect x="1083" y="308" width="15" height="15" fill="rgb(205,30,24)"/><text x="1086.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.27%)</title><rect x="1083" y="324" width="15" height="15" fill="rgb(250,225,30)"/><text x="1086.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1096" y="340" width="2" height="15" fill="rgb(229,152,52)"/><text x="1099.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.18%)</title><rect x="1096" y="356" width="2" height="15" fill="rgb(251,25,54)"/><text x="1099.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 1.81%)</title><rect x="1113" y="244" width="21" height="15" fill="rgb(231,64,18)"/><text x="1116.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.72%)</title><rect x="1125" y="260" width="9" height="15" fill="rgb(205,106,43)"/><text x="1128.00" y="270.50"></text></g><g><title>0x7f3c1b1e8134 (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1132" y="276" width="2" height="15" fill="rgb(251,52,18)"/><text x="1135.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 3.25%)</title><rect x="1098" y="228" width="38" height="15" fill="rgb(242,118,41)"/><text x="1101.00" y="238.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.18%)</title><rect x="1134" y="244" width="2" height="15" fill="rgb(241,136,21)"/><text x="1137.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1136" y="308" width="2" height="15" fill="rgb(229,70,12)"/><text x="1139.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1138" y="308" width="2" height="15" fill="rgb(210,39,12)"/><text x="1141.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.54%)</title><rect x="1136" y="292" width="7" height="15" fill="rgb(213,106,13)"/><text x="1139.00" y="302.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.18%)</title><rect x="1140" y="308" width="3" height="15" fill="rgb(211,80,51)"/><text x="1143.00" y="318.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.18%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(235,140,8)"/><text x="1146.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.90%)</title><rect x="1136" y="260" width="11" height="15" fill="rgb(227,179,19)"/><text x="1139.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.90%)</title><rect x="1136" y="276" width="11" height="15" fill="rgb(216,161,4)"/><text x="1139.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(222,28,28)"/><text x="1148.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.18%)</title><rect x="1145" y="308" width="2" height="15" fill="rgb(253,54,34)"/><text x="1148.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1147" y="260" width="2" height="15" fill="rgb(222,92,53)"/><text x="1150.00" y="270.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1147" y="276" width="2" height="15" fill="rgb(251,45,5)"/><text x="1150.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.18%)</title><rect x="1147" y="292" width="2" height="15" fill="rgb(232,91,13)"/><text x="1150.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (147 samples, 26.58%)</title><rect x="837" y="212" width="314" height="15" fill="rgb(231,22,34)"/><text x="840.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.27%)</title><rect x="1136" y="228" width="15" height="15" fill="rgb(245,101,23)"/><text x="1139.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.27%)</title><rect x="1136" y="244" width="15" height="15" fill="rgb(208,154,11)"/><text x="1139.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1149" y="260" width="2" height="15" fill="rgb(216,93,53)"/><text x="1152.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.18%)</title><rect x="1151" y="228" width="2" height="15" fill="rgb(222,161,42)"/><text x="1154.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.18%)</title><rect x="1153" y="260" width="2" height="15" fill="rgb(217,86,28)"/><text x="1156.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.18%)</title><rect x="1153" y="276" width="2" height="15" fill="rgb(245,138,45)"/><text x="1156.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(209,162,32)"/><text x="1156.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1155" y="260" width="2" height="15" fill="rgb(224,181,44)"/><text x="1158.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1153" y="244" width="7" height="15" fill="rgb(233,51,25)"/><text x="1156.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1157" y="260" width="3" height="15" fill="rgb(245,1,37)"/><text x="1160.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.18%)</title><rect x="1157" y="276" width="3" height="15" fill="rgb(229,96,13)"/><text x="1160.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.18%)</title><rect x="1157" y="292" width="3" height="15" fill="rgb(211,140,46)"/><text x="1160.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (294 samples, 53.16%)</title><rect x="534" y="196" width="628" height="15" fill="rgb(252,136,12)"/><text x="537.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.90%)</title><rect x="1151" y="212" width="11" height="15" fill="rgb(239,161,41)"/><text x="1154.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.72%)</title><rect x="1153" y="228" width="9" height="15" fill="rgb(245,171,12)"/><text x="1156.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1160" y="244" width="2" height="15" fill="rgb(218,110,22)"/><text x="1163.00" y="254.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1160" y="260" width="2" height="15" fill="rgb(228,172,25)"/><text x="1163.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.18%)</title><rect x="1160" y="276" width="2" height="15" fill="rgb(242,97,22)"/><text x="1163.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1162" y="212" width="2" height="15" fill="rgb(232,130,0)"/><text x="1165.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1162" y="228" width="2" height="15" fill="rgb(227,217,18)"/><text x="1165.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (297 samples, 53.71%)</title><rect x="532" y="180" width="634" height="15" fill="rgb(251,14,32)"/><text x="535.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.36%)</title><rect x="1162" y="196" width="4" height="15" fill="rgb(246,2,4)"/><text x="1165.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1164" y="212" width="2" height="15" fill="rgb(221,112,4)"/><text x="1167.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1164" y="228" width="2" height="15" fill="rgb(228,106,42)"/><text x="1167.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1164" y="244" width="2" height="15" fill="rgb(252,35,15)"/><text x="1167.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="1166" y="212" width="2" height="15" fill="rgb(222,45,51)"/><text x="1169.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="1166" y="228" width="2" height="15" fill="rgb(249,223,44)"/><text x="1169.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.18%)</title><rect x="1168" y="228" width="2" height="15" fill="rgb(243,81,25)"/><text x="1171.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.18%)</title><rect x="1168" y="244" width="2" height="15" fill="rgb(254,143,9)"/><text x="1171.00" y="254.50"></text></g><g><title>array_add (number.c) (3 samples, 0.54%)</title><rect x="1166" y="180" width="6" height="15" fill="rgb(215,181,0)"/><text x="1169.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.54%)</title><rect x="1166" y="196" width="6" height="15" fill="rgb(250,123,54)"/><text x="1169.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.36%)</title><rect x="1168" y="212" width="4" height="15" fill="rgb(244,151,31)"/><text x="1171.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1170" y="228" width="2" height="15" fill="rgb(223,211,31)"/><text x="1173.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1170" y="244" width="2" height="15" fill="rgb(249,215,32)"/><text x="1173.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.18%)</title><rect x="1170" y="260" width="2" height="15" fill="rgb(233,141,13)"/><text x="1173.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1170" y="276" width="2" height="15" fill="rgb(215,179,48)"/><text x="1173.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(241,101,1)"/><text x="1173.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.18%)</title><rect x="1170" y="308" width="2" height="15" fill="rgb(224,191,15)"/><text x="1173.00" y="318.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (303 samples, 54.79%)</title><rect x="528" y="100" width="647" height="15" fill="rgb(208,81,32)"/><text x="531.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (303 samples, 54.79%)</title><rect x="528" y="116" width="647" height="15" fill="rgb(254,169,33)"/><text x="531.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (303 samples, 54.79%)</title><rect x="528" y="132" width="647" height="15" fill="rgb(236,111,8)"/><text x="531.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (303 samples, 54.79%)</title><rect x="528" y="148" width="647" height="15" fill="rgb(225,31,7)"/><text x="531.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (302 samples, 54.61%)</title><rect x="530" y="164" width="645" height="15" fill="rgb(247,105,39)"/><text x="533.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.18%)</title><rect x="1172" y="180" width="3" height="15" fill="rgb(234,63,28)"/><text x="1175.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.18%)</title><rect x="1172" y="196" width="3" height="15" fill="rgb(242,138,27)"/><text x="1175.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.18%)</title><rect x="1172" y="212" width="3" height="15" fill="rgb(251,185,14)"/><text x="1175.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py) (1 samples, 0.18%)</title><rect x="1175" y="228" width="2" height="15" fill="rgb(248,133,52)"/><text x="1178.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.18%)</title><rect x="1175" y="244" width="2" height="15" fill="rgb(233,92,45)"/><text x="1178.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.18%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(221,81,46)"/><text x="1178.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.18%)</title><rect x="1175" y="276" width="2" height="15" fill="rgb(231,97,12)"/><text x="1178.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.18%)</title><rect x="1175" y="292" width="2" height="15" fill="rgb(206,197,31)"/><text x="1178.00" y="302.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.18%)</title><rect x="1175" y="308" width="2" height="15" fill="rgb(238,2,26)"/><text x="1178.00" y="318.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (305 samples, 55.15%)</title><rect x="528" y="68" width="651" height="15" fill="rgb(236,102,54)"/><text x="531.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (305 samples, 55.15%)</title><rect x="528" y="84" width="651" height="15" fill="rgb(222,157,31)"/><text x="531.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.36%)</title><rect x="1175" y="100" width="4" height="15" fill="rgb(252,80,38)"/><text x="1178.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.36%)</title><rect x="1175" y="116" width="4" height="15" fill="rgb(232,120,3)"/><text x="1178.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.36%)</title><rect x="1175" y="132" width="4" height="15" fill="rgb(233,46,22)"/><text x="1178.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.36%)</title><rect x="1175" y="148" width="4" height="15" fill="rgb(214,211,6)"/><text x="1178.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.36%)</title><rect x="1175" y="164" width="4" height="15" fill="rgb(248,203,48)"/><text x="1178.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.36%)</title><rect x="1175" y="180" width="4" height="15" fill="rgb(223,137,54)"/><text x="1178.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (2 samples, 0.36%)</title><rect x="1175" y="196" width="4" height="15" fill="rgb(208,53,53)"/><text x="1178.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (2 samples, 0.36%)</title><rect x="1175" y="212" width="4" height="15" fill="rgb(243,141,15)"/><text x="1178.00" y="222.50"></text></g><g><title>get_unique_variable_name (skl2onnx/common/_topology.py) (1 samples, 0.18%)</title><rect x="1177" y="228" width="2" height="15" fill="rgb(209,28,42)"/><text x="1180.00" y="238.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.18%)</title><rect x="1177" y="244" width="2" height="15" fill="rgb(232,203,44)"/><text x="1180.00" y="254.50"></text></g><g><title>0x7f3c1b12b1ef (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1177" y="260" width="2" height="15" fill="rgb(245,186,1)"/><text x="1180.00" y="270.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.18%)</title><rect x="1181" y="180" width="2" height="15" fill="rgb(227,31,12)"/><text x="1184.00" y="190.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.18%)</title><rect x="1181" y="196" width="2" height="15" fill="rgb(233,46,3)"/><text x="1184.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.18%)</title><rect x="1181" y="212" width="2" height="15" fill="rgb(237,145,23)"/><text x="1184.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c) (2 samples, 0.36%)</title><rect x="1183" y="180" width="4" height="15" fill="rgb(228,159,19)"/><text x="1186.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(216,122,23)"/><text x="1188.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(229,114,12)"/><text x="1188.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(249,137,19)"/><text x="1188.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(211,111,11)"/><text x="1188.00" y="254.50"></text></g><g><title>DOUBLE_greater (loops.c.src) (1 samples, 0.18%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(219,167,5)"/><text x="1188.00" y="270.50"></text></g><g><title>run_binary_simd_greater_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(223,64,51)"/><text x="1188.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_greater_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1185" y="292" width="2" height="15" fill="rgb(241,63,19)"/><text x="1188.00" y="302.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src) (1 samples, 0.18%)</title><rect x="1185" y="308" width="2" height="15" fill="rgb(250,147,4)"/><text x="1188.00" y="318.50"></text></g><g><title>_mm_and_si128 (emmintrin.h) (1 samples, 0.18%)</title><rect x="1185" y="324" width="2" height="15" fill="rgb(225,192,20)"/><text x="1188.00" y="334.50"></text></g><g><title>all (553 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,228,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (553 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(245,54,14)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1_50_12_float_.py) (5 samples, 0.90%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(237,142,3)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (5 samples, 0.90%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(235,180,30)"/><text x="1182.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.90%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(222,159,30)"/><text x="1182.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.90%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(208,226,15)"/><text x="1182.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.90%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(222,45,44)"/><text x="1182.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.90%)</title><rect x="1179" y="148" width="11" height="15" fill="rgb(230,187,41)"/><text x="1182.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.90%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(220,65,20)"/><text x="1182.00" y="174.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.18%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(248,144,34)"/><text x="1190.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.18%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(217,9,43)"/><text x="1190.00" y="206.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(245,154,9)"/><text x="1190.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.18%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(214,208,34)"/><text x="1190.00" y="238.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.18%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(238,36,24)"/><text x="1190.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.18%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(228,44,49)"/><text x="1190.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.18%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(216,90,0)"/><text x="1190.00" y="286.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.18%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(236,91,54)"/><text x="1190.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.18%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(231,49,12)"/><text x="1190.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.18%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(211,59,22)"/><text x="1190.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.18%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(231,114,53)"/><text x="1190.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.18%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(236,213,4)"/><text x="1190.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.18%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(205,47,0)"/><text x="1190.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.18%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(243,143,43)"/><text x="1190.00" y="398.50"></text></g><g><title>0x7f3c1b120e7a (libc-2.29.so) (1 samples, 0.18%)</title><rect x="1187" y="404" width="3" height="15" fill="rgb(243,17,3)"/><text x="1190.00" y="414.50"></text></g></g></svg>