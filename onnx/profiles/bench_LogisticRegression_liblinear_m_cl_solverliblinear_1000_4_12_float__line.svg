<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.14%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(241,161,31)"/><text x="13.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.14%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(220,81,4)"/><text x="13.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.14%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(208,204,3)"/><text x="13.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(250,160,43)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(213,72,42)"/><text x="13.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(207,13,49)"/><text x="13.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(213,138,52)"/><text x="13.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(230,118,37)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.14%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(209,96,11)"/><text x="13.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(222,73,10)"/><text x="13.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(243,33,31)"/><text x="13.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(237,190,28)"/><text x="13.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(207,12,16)"/><text x="13.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(249,83,34)"/><text x="13.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py:14) (1 samples, 0.14%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(240,184,10)"/><text x="13.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(253,60,41)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(210,174,33)"/><text x="13.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(222,202,5)"/><text x="13.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(221,30,15)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(213,205,11)"/><text x="13.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py:90) (1 samples, 0.14%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(245,131,12)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(250,100,1)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(251,151,4)"/><text x="13.00" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(210,161,3)"/><text x="13.00" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(252,75,51)"/><text x="13.00" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(253,0,48)"/><text x="13.00" y="510.50"></text></g><g><title>&lt;module&gt; (graphviz/__init__.py:27) (1 samples, 0.14%)</title><rect x="10" y="516" width="1" height="15" fill="rgb(239,4,10)"/><text x="13.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="532" width="1" height="15" fill="rgb(244,8,24)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="548" width="1" height="15" fill="rgb(213,165,33)"/><text x="13.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="564" width="1" height="15" fill="rgb(213,151,23)"/><text x="13.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="10" y="580" width="1" height="15" fill="rgb(229,210,53)"/><text x="13.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="596" width="1" height="15" fill="rgb(227,47,35)"/><text x="13.00" y="606.50"></text></g><g><title>&lt;module&gt; (graphviz/dot.py:31) (1 samples, 0.14%)</title><rect x="10" y="612" width="1" height="15" fill="rgb(232,103,41)"/><text x="13.00" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="10" y="628" width="1" height="15" fill="rgb(229,36,0)"/><text x="13.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(219,153,30)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="660" width="1" height="15" fill="rgb(228,136,31)"/><text x="13.00" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="676" width="1" height="15" fill="rgb(239,42,53)"/><text x="13.00" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="692" width="1" height="15" fill="rgb(230,117,47)"/><text x="13.00" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="10" y="708" width="1" height="15" fill="rgb(219,15,15)"/><text x="13.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="724" width="1" height="15" fill="rgb(233,93,46)"/><text x="13.00" y="734.50"></text></g><g><title>&lt;module&gt; (graphviz/lang.py:9) (1 samples, 0.14%)</title><rect x="10" y="740" width="1" height="15" fill="rgb(251,209,11)"/><text x="13.00" y="750.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="10" y="756" width="1" height="15" fill="rgb(237,11,18)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="10" y="772" width="1" height="15" fill="rgb(222,200,25)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="10" y="788" width="1" height="15" fill="rgb(230,25,39)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="10" y="804" width="1" height="15" fill="rgb(242,88,16)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="10" y="820" width="1" height="15" fill="rgb(251,226,23)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="10" y="836" width="1" height="15" fill="rgb(226,0,42)"/><text x="13.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.14%)</title><rect x="10" y="852" width="1" height="15" fill="rgb(235,26,36)"/><text x="13.00" y="862.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:463) (1 samples, 0.14%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(235,110,30)"/><text x="13.00" y="878.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;:53) (1 samples, 0.14%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(233,95,42)"/><text x="13.00" y="894.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:28) (2 samples, 0.28%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(218,128,13)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.14%)</title><rect x="11" y="100" width="2" height="15" fill="rgb(246,127,53)"/><text x="14.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.14%)</title><rect x="11" y="116" width="2" height="15" fill="rgb(208,101,45)"/><text x="14.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.14%)</title><rect x="11" y="132" width="2" height="15" fill="rgb(218,186,41)"/><text x="14.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.14%)</title><rect x="11" y="148" width="2" height="15" fill="rgb(212,59,2)"/><text x="14.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.14%)</title><rect x="11" y="164" width="2" height="15" fill="rgb(253,90,52)"/><text x="14.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.14%)</title><rect x="11" y="180" width="2" height="15" fill="rgb(234,76,26)"/><text x="14.00" y="190.50"></text></g><g><title>convert_sklearn_zipmap (skl2onnx/operator_converters/zip_map.py:27) (1 samples, 0.14%)</title><rect x="11" y="196" width="2" height="15" fill="rgb(244,156,44)"/><text x="14.00" y="206.50"></text></g><g><title>apply_cast (onnxconverter_common/onnx_ops.py:169) (1 samples, 0.14%)</title><rect x="11" y="212" width="2" height="15" fill="rgb(209,149,14)"/><text x="14.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.14%)</title><rect x="11" y="228" width="2" height="15" fill="rgb(242,193,52)"/><text x="14.00" y="238.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.14%)</title><rect x="11" y="244" width="2" height="15" fill="rgb(234,136,32)"/><text x="14.00" y="254.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.14%)</title><rect x="11" y="260" width="2" height="15" fill="rgb(247,67,22)"/><text x="14.00" y="270.50"></text></g><g><title>extract (traceback.py:363) (1 samples, 0.14%)</title><rect x="11" y="276" width="2" height="15" fill="rgb(248,29,49)"/><text x="14.00" y="286.50"></text></g><g><title>line (traceback.py:285) (1 samples, 0.14%)</title><rect x="11" y="292" width="2" height="15" fill="rgb(213,71,37)"/><text x="14.00" y="302.50"></text></g><g><title>getline (linecache.py:16) (1 samples, 0.14%)</title><rect x="11" y="308" width="2" height="15" fill="rgb(243,49,35)"/><text x="14.00" y="318.50"></text></g><g><title>getlines (linecache.py:47) (1 samples, 0.14%)</title><rect x="11" y="324" width="2" height="15" fill="rgb(228,39,24)"/><text x="14.00" y="334.50"></text></g><g><title>updatecache (linecache.py:137) (1 samples, 0.14%)</title><rect x="11" y="340" width="2" height="15" fill="rgb(237,133,7)"/><text x="14.00" y="350.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.14%)</title><rect x="13" y="148" width="1" height="15" fill="rgb(226,31,11)"/><text x="16.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.14%)</title><rect x="13" y="164" width="1" height="15" fill="rgb(208,130,15)"/><text x="16.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.14%)</title><rect x="13" y="180" width="1" height="15" fill="rgb(216,40,22)"/><text x="16.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.14%)</title><rect x="13" y="196" width="1" height="15" fill="rgb(215,111,18)"/><text x="16.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:18) (3 samples, 0.42%)</title><rect x="13" y="100" width="5" height="15" fill="rgb(247,194,52)"/><text x="16.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.42%)</title><rect x="13" y="116" width="5" height="15" fill="rgb(241,176,53)"/><text x="16.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.42%)</title><rect x="13" y="132" width="5" height="15" fill="rgb(217,9,7)"/><text x="16.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.28%)</title><rect x="14" y="148" width="4" height="15" fill="rgb(209,200,38)"/><text x="17.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 0.28%)</title><rect x="14" y="164" width="4" height="15" fill="rgb(244,69,2)"/><text x="17.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.28%)</title><rect x="14" y="180" width="4" height="15" fill="rgb(215,34,9)"/><text x="17.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.28%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(214,108,25)"/><text x="17.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.28%)</title><rect x="14" y="212" width="4" height="15" fill="rgb(233,49,8)"/><text x="17.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.14%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(222,51,4)"/><text x="19.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.14%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(229,188,3)"/><text x="19.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.14%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(210,92,41)"/><text x="19.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.14%)</title><rect x="16" y="276" width="2" height="15" fill="rgb(236,197,31)"/><text x="19.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.14%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(210,96,35)"/><text x="19.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.14%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(241,191,17)"/><text x="19.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.28%)</title><rect x="21" y="180" width="3" height="15" fill="rgb(232,225,2)"/><text x="24.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.42%)</title><rect x="26" y="196" width="5" height="15" fill="rgb(240,68,3)"/><text x="29.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.26%)</title><rect x="21" y="164" width="15" height="15" fill="rgb(228,135,28)"/><text x="24.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 0.98%)</title><rect x="24" y="180" width="12" height="15" fill="rgb(212,81,4)"/><text x="27.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.42%)</title><rect x="31" y="196" width="5" height="15" fill="rgb(253,199,26)"/><text x="34.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (10 samples, 1.39%)</title><rect x="21" y="148" width="16" height="15" fill="rgb(217,159,28)"/><text x="24.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:952) (1 samples, 0.14%)</title><rect x="36" y="164" width="1" height="15" fill="rgb(243,145,21)"/><text x="39.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.14%)</title><rect x="37" y="148" width="2" height="15" fill="rgb(252,53,21)"/><text x="40.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:247) (1 samples, 0.14%)</title><rect x="41" y="180" width="1" height="15" fill="rgb(231,119,0)"/><text x="44.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.14%)</title><rect x="47" y="228" width="2" height="15" fill="rgb(231,79,15)"/><text x="50.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 0.84%)</title><rect x="42" y="180" width="10" height="15" fill="rgb(232,114,17)"/><text x="45.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 0.84%)</title><rect x="42" y="196" width="10" height="15" fill="rgb(244,201,10)"/><text x="45.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 0.84%)</title><rect x="42" y="212" width="10" height="15" fill="rgb(248,97,16)"/><text x="45.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.28%)</title><rect x="49" y="228" width="3" height="15" fill="rgb(211,14,23)"/><text x="52.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.14%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(253,47,33)"/><text x="57.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.42%)</title><rect x="52" y="196" width="5" height="15" fill="rgb(222,103,4)"/><text x="55.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.14%)</title><rect x="56" y="212" width="1" height="15" fill="rgb(251,157,26)"/><text x="59.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.14%)</title><rect x="57" y="196" width="2" height="15" fill="rgb(241,23,41)"/><text x="60.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.14%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(226,156,14)"/><text x="60.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.14%)</title><rect x="59" y="196" width="2" height="15" fill="rgb(216,228,49)"/><text x="62.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.14%)</title><rect x="59" y="212" width="2" height="15" fill="rgb(246,143,47)"/><text x="62.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.56%)</title><rect x="61" y="212" width="6" height="15" fill="rgb(214,108,23)"/><text x="64.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.28%)</title><rect x="64" y="228" width="3" height="15" fill="rgb(236,49,44)"/><text x="67.00" y="238.50"></text></g><g><title>0x7f9bda23ae7a (libc-2.29.so) (1 samples, 0.14%)</title><rect x="65" y="244" width="2" height="15" fill="rgb(237,108,6)"/><text x="68.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 0.70%)</title><rect x="61" y="196" width="8" height="15" fill="rgb(254,80,37)"/><text x="64.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.14%)</title><rect x="67" y="212" width="2" height="15" fill="rgb(250,129,38)"/><text x="70.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.28%)</title><rect x="69" y="212" width="3" height="15" fill="rgb(248,105,2)"/><text x="72.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.14%)</title><rect x="70" y="228" width="2" height="15" fill="rgb(230,5,25)"/><text x="73.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (18 samples, 2.51%)</title><rect x="52" y="180" width="30" height="15" fill="rgb(221,92,21)"/><text x="55.00" y="190.50">de..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (8 samples, 1.12%)</title><rect x="69" y="196" width="13" height="15" fill="rgb(227,108,24)"/><text x="72.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 0.84%)</title><rect x="72" y="212" width="10" height="15" fill="rgb(236,188,27)"/><text x="75.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 0.70%)</title><rect x="74" y="228" width="8" height="15" fill="rgb(249,56,47)"/><text x="77.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.14%)</title><rect x="80" y="244" width="2" height="15" fill="rgb(207,126,3)"/><text x="83.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.14%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(225,119,10)"/><text x="85.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.28%)</title><rect x="84" y="308" width="3" height="15" fill="rgb(252,6,30)"/><text x="87.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.14%)</title><rect x="87" y="308" width="1" height="15" fill="rgb(228,103,16)"/><text x="90.00" y="318.50"></text></g><g><title>0x7f9bda244d50 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="88" y="324" width="2" height="15" fill="rgb(212,27,21)"/><text x="91.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 0.84%)</title><rect x="82" y="260" width="10" height="15" fill="rgb(244,26,16)"/><text x="85.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 0.84%)</title><rect x="82" y="276" width="10" height="15" fill="rgb(216,22,42)"/><text x="85.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.70%)</title><rect x="84" y="292" width="8" height="15" fill="rgb(252,182,38)"/><text x="87.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.28%)</title><rect x="88" y="308" width="4" height="15" fill="rgb(252,111,48)"/><text x="91.00" y="318.50"></text></g><g><title>0x7f9bda244d67 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="90" y="324" width="2" height="15" fill="rgb(243,208,24)"/><text x="93.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.14%)</title><rect x="92" y="260" width="1" height="15" fill="rgb(221,143,11)"/><text x="95.00" y="270.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1222) (1 samples, 0.14%)</title><rect x="92" y="276" width="1" height="15" fill="rgb(207,67,23)"/><text x="95.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.14%)</title><rect x="93" y="260" width="2" height="15" fill="rgb(214,157,16)"/><text x="96.00" y="270.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.14%)</title><rect x="93" y="276" width="2" height="15" fill="rgb(244,120,26)"/><text x="96.00" y="286.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.14%)</title><rect x="95" y="276" width="2" height="15" fill="rgb(254,152,12)"/><text x="98.00" y="286.50"></text></g><g><title>array_add (number.c:330) (10 samples, 1.39%)</title><rect x="82" y="196" width="16" height="15" fill="rgb(254,46,19)"/><text x="85.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 1.39%)</title><rect x="82" y="212" width="16" height="15" fill="rgb(244,99,10)"/><text x="85.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.39%)</title><rect x="82" y="228" width="16" height="15" fill="rgb(219,38,12)"/><text x="85.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.39%)</title><rect x="82" y="244" width="16" height="15" fill="rgb(229,218,2)"/><text x="85.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.28%)</title><rect x="95" y="260" width="3" height="15" fill="rgb(241,206,45)"/><text x="98.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.14%)</title><rect x="97" y="276" width="1" height="15" fill="rgb(206,165,20)"/><text x="100.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.14%)</title><rect x="97" y="292" width="1" height="15" fill="rgb(211,100,54)"/><text x="100.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.14%)</title><rect x="97" y="308" width="1" height="15" fill="rgb(226,23,39)"/><text x="100.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.14%)</title><rect x="97" y="324" width="1" height="15" fill="rgb(252,95,8)"/><text x="100.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.14%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(230,40,14)"/><text x="101.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.14%)</title><rect x="98" y="212" width="2" height="15" fill="rgb(205,41,22)"/><text x="101.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.14%)</title><rect x="98" y="228" width="2" height="15" fill="rgb(211,105,49)"/><text x="101.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.14%)</title><rect x="100" y="196" width="2" height="15" fill="rgb(245,169,34)"/><text x="103.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="102" y="212" width="1" height="15" fill="rgb(209,104,46)"/><text x="105.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.56%)</title><rect x="103" y="212" width="7" height="15" fill="rgb(231,186,27)"/><text x="106.00" y="222.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.28%)</title><rect x="110" y="308" width="3" height="15" fill="rgb(239,146,48)"/><text x="113.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.28%)</title><rect x="110" y="324" width="3" height="15" fill="rgb(239,196,23)"/><text x="113.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.42%)</title><rect x="110" y="244" width="5" height="15" fill="rgb(239,158,43)"/><text x="113.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.42%)</title><rect x="110" y="260" width="5" height="15" fill="rgb(242,175,24)"/><text x="113.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.42%)</title><rect x="110" y="276" width="5" height="15" fill="rgb(243,206,1)"/><text x="113.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.42%)</title><rect x="110" y="292" width="5" height="15" fill="rgb(205,144,12)"/><text x="113.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.14%)</title><rect x="113" y="308" width="2" height="15" fill="rgb(239,184,33)"/><text x="116.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (9 samples, 1.26%)</title><rect x="102" y="196" width="14" height="15" fill="rgb(227,166,42)"/><text x="105.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.56%)</title><rect x="110" y="212" width="6" height="15" fill="rgb(250,227,24)"/><text x="113.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (4 samples, 0.56%)</title><rect x="110" y="228" width="6" height="15" fill="rgb(224,208,21)"/><text x="113.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.14%)</title><rect x="115" y="244" width="1" height="15" fill="rgb(253,198,24)"/><text x="118.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (50 samples, 6.97%)</title><rect x="39" y="164" width="82" height="15" fill="rgb(224,105,5)"/><text x="42.00" y="174.50">_predict_..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (24 samples, 3.35%)</title><rect x="82" y="180" width="39" height="15" fill="rgb(211,104,33)"/><text x="85.00" y="190.50">dec..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (3 samples, 0.42%)</title><rect x="116" y="196" width="5" height="15" fill="rgb(230,181,20)"/><text x="119.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.14%)</title><rect x="120" y="212" width="1" height="15" fill="rgb(236,62,24)"/><text x="123.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.14%)</title><rect x="121" y="196" width="2" height="15" fill="rgb(229,141,29)"/><text x="124.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.14%)</title><rect x="121" y="212" width="2" height="15" fill="rgb(230,15,52)"/><text x="124.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.14%)</title><rect x="123" y="244" width="2" height="15" fill="rgb(215,36,32)"/><text x="126.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.14%)</title><rect x="123" y="260" width="2" height="15" fill="rgb(215,186,15)"/><text x="126.00" y="270.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.14%)</title><rect x="123" y="276" width="2" height="15" fill="rgb(253,55,25)"/><text x="126.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.28%)</title><rect x="123" y="212" width="3" height="15" fill="rgb(205,157,47)"/><text x="126.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.28%)</title><rect x="123" y="228" width="3" height="15" fill="rgb(251,67,3)"/><text x="126.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.14%)</title><rect x="125" y="244" width="1" height="15" fill="rgb(205,162,12)"/><text x="128.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.14%)</title><rect x="125" y="260" width="1" height="15" fill="rgb(209,15,16)"/><text x="128.00" y="270.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:284) (1 samples, 0.14%)</title><rect x="125" y="276" width="1" height="15" fill="rgb(228,114,34)"/><text x="128.00" y="286.50"></text></g><g><title>euclid (mem_overlap.c:224) (1 samples, 0.14%)</title><rect x="125" y="292" width="1" height="15" fill="rgb(211,141,20)"/><text x="128.00" y="302.50"></text></g><g><title>0x7f9bc54ebfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.28%)</title><rect x="126" y="276" width="4" height="15" fill="rgb(213,204,8)"/><text x="129.00" y="286.50"></text></g><g><title>0x7f9bc56379f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="130" y="276" width="1" height="15" fill="rgb(216,42,18)"/><text x="133.00" y="286.50"></text></g><g><title>0x7f9bda3701b0 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="135" y="292" width="1" height="15" fill="rgb(225,112,25)"/><text x="138.00" y="302.50"></text></g><g><title>0x7f9bda3f6bb4 (libm-2.29.so) (3 samples, 0.42%)</title><rect x="136" y="292" width="5" height="15" fill="rgb(229,138,29)"/><text x="139.00" y="302.50"></text></g><g><title>0x7f9bda3f6c2e (libm-2.29.so) (2 samples, 0.28%)</title><rect x="141" y="292" width="3" height="15" fill="rgb(218,177,47)"/><text x="144.00" y="302.50"></text></g><g><title>0x7f9bc552e265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.67%)</title><rect x="126" y="260" width="20" height="15" fill="rgb(233,103,23)"/><text x="129.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (9 samples, 1.26%)</title><rect x="131" y="276" width="15" height="15" fill="rgb(234,79,40)"/><text x="134.00" y="286.50"></text></g><g><title>0x7f9bda3f6c3e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="144" y="292" width="2" height="15" fill="rgb(225,35,3)"/><text x="147.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (21 samples, 2.93%)</title><rect x="121" y="164" width="35" height="15" fill="rgb(237,94,25)"/><text x="124.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 2.93%)</title><rect x="121" y="180" width="35" height="15" fill="rgb(215,140,17)"/><text x="124.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 2.79%)</title><rect x="123" y="196" width="33" height="15" fill="rgb(213,29,8)"/><text x="126.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (18 samples, 2.51%)</title><rect x="126" y="212" width="30" height="15" fill="rgb(206,181,51)"/><text x="129.00" y="222.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (18 samples, 2.51%)</title><rect x="126" y="228" width="30" height="15" fill="rgb(237,31,14)"/><text x="129.00" y="238.50">tr..</text></g><g><title>0x7f9bc550d9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.51%)</title><rect x="126" y="244" width="30" height="15" fill="rgb(209,117,47)"/><text x="129.00" y="254.50">0x..</text></g><g><title>0x7f9bc552e279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.84%)</title><rect x="146" y="260" width="10" height="15" fill="rgb(249,52,3)"/><text x="149.00" y="270.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.14%)</title><rect x="163" y="180" width="1" height="15" fill="rgb(252,175,22)"/><text x="166.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.14%)</title><rect x="163" y="196" width="1" height="15" fill="rgb(252,146,20)"/><text x="166.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.14%)</title><rect x="164" y="180" width="2" height="15" fill="rgb(245,81,16)"/><text x="167.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.14%)</title><rect x="166" y="212" width="1" height="15" fill="rgb(233,145,15)"/><text x="169.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.14%)</title><rect x="166" y="228" width="1" height="15" fill="rgb(209,78,14)"/><text x="169.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.14%)</title><rect x="166" y="244" width="1" height="15" fill="rgb(240,96,51)"/><text x="169.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.14%)</title><rect x="167" y="228" width="2" height="15" fill="rgb(252,44,42)"/><text x="170.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.14%)</title><rect x="167" y="244" width="2" height="15" fill="rgb(232,143,28)"/><text x="170.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (3 samples, 0.42%)</title><rect x="166" y="180" width="5" height="15" fill="rgb(245,208,52)"/><text x="169.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 0.42%)</title><rect x="166" y="196" width="5" height="15" fill="rgb(226,173,25)"/><text x="169.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (2 samples, 0.28%)</title><rect x="167" y="212" width="4" height="15" fill="rgb(224,179,16)"/><text x="170.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.14%)</title><rect x="169" y="228" width="2" height="15" fill="rgb(223,91,17)"/><text x="172.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:233) (1 samples, 0.14%)</title><rect x="169" y="244" width="2" height="15" fill="rgb(227,167,24)"/><text x="172.00" y="254.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.14%)</title><rect x="172" y="308" width="2" height="15" fill="rgb(224,150,29)"/><text x="175.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.28%)</title><rect x="172" y="228" width="4" height="15" fill="rgb(211,171,21)"/><text x="175.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.28%)</title><rect x="172" y="244" width="4" height="15" fill="rgb(209,221,5)"/><text x="175.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.28%)</title><rect x="172" y="260" width="4" height="15" fill="rgb(245,115,53)"/><text x="175.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.28%)</title><rect x="172" y="276" width="4" height="15" fill="rgb(224,175,30)"/><text x="175.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.28%)</title><rect x="172" y="292" width="4" height="15" fill="rgb(234,138,50)"/><text x="175.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.14%)</title><rect x="174" y="308" width="2" height="15" fill="rgb(254,91,1)"/><text x="177.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.14%)</title><rect x="176" y="276" width="1" height="15" fill="rgb(237,111,43)"/><text x="179.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.14%)</title><rect x="176" y="292" width="1" height="15" fill="rgb(228,92,11)"/><text x="179.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.14%)</title><rect x="176" y="308" width="1" height="15" fill="rgb(209,116,21)"/><text x="179.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:77) (1 samples, 0.14%)</title><rect x="176" y="324" width="1" height="15" fill="rgb(235,214,24)"/><text x="179.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.14%)</title><rect x="177" y="292" width="2" height="15" fill="rgb(231,27,26)"/><text x="180.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.14%)</title><rect x="179" y="308" width="2" height="15" fill="rgb(208,83,54)"/><text x="182.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.56%)</title><rect x="181" y="308" width="6" height="15" fill="rgb(241,64,44)"/><text x="184.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.14%)</title><rect x="186" y="324" width="1" height="15" fill="rgb(217,160,52)"/><text x="189.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.14%)</title><rect x="187" y="308" width="2" height="15" fill="rgb(222,104,33)"/><text x="190.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 1.67%)</title><rect x="171" y="180" width="20" height="15" fill="rgb(247,216,28)"/><text x="174.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 1.67%)</title><rect x="171" y="196" width="20" height="15" fill="rgb(218,60,34)"/><text x="174.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 1.53%)</title><rect x="172" y="212" width="19" height="15" fill="rgb(246,147,34)"/><text x="175.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.26%)</title><rect x="176" y="228" width="15" height="15" fill="rgb(243,40,1)"/><text x="179.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.26%)</title><rect x="176" y="244" width="15" height="15" fill="rgb(254,156,22)"/><text x="179.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.26%)</title><rect x="176" y="260" width="15" height="15" fill="rgb(210,215,36)"/><text x="179.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 1.12%)</title><rect x="177" y="276" width="14" height="15" fill="rgb(252,139,9)"/><text x="180.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.98%)</title><rect x="179" y="292" width="12" height="15" fill="rgb(226,170,33)"/><text x="182.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.14%)</title><rect x="189" y="308" width="2" height="15" fill="rgb(208,95,38)"/><text x="192.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.14%)</title><rect x="191" y="196" width="1" height="15" fill="rgb(233,202,18)"/><text x="194.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.14%)</title><rect x="191" y="212" width="1" height="15" fill="rgb(217,121,41)"/><text x="194.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.14%)</title><rect x="191" y="228" width="1" height="15" fill="rgb(215,116,32)"/><text x="194.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.14%)</title><rect x="191" y="244" width="1" height="15" fill="rgb(223,176,28)"/><text x="194.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.14%)</title><rect x="192" y="228" width="2" height="15" fill="rgb(217,223,32)"/><text x="195.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.14%)</title><rect x="192" y="244" width="2" height="15" fill="rgb(225,139,20)"/><text x="195.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.14%)</title><rect x="194" y="276" width="1" height="15" fill="rgb(223,24,47)"/><text x="197.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.14%)</title><rect x="195" y="276" width="2" height="15" fill="rgb(218,151,13)"/><text x="198.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.14%)</title><rect x="197" y="292" width="2" height="15" fill="rgb(238,127,1)"/><text x="200.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.56%)</title><rect x="194" y="228" width="6" height="15" fill="rgb(244,94,49)"/><text x="197.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.56%)</title><rect x="194" y="244" width="6" height="15" fill="rgb(211,227,33)"/><text x="197.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.56%)</title><rect x="194" y="260" width="6" height="15" fill="rgb(227,215,43)"/><text x="197.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.28%)</title><rect x="197" y="276" width="3" height="15" fill="rgb(249,1,54)"/><text x="200.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.14%)</title><rect x="199" y="292" width="1" height="15" fill="rgb(233,176,46)"/><text x="202.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.56%)</title><rect x="200" y="228" width="7" height="15" fill="rgb(208,177,49)"/><text x="203.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.56%)</title><rect x="200" y="244" width="7" height="15" fill="rgb(205,183,18)"/><text x="203.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.56%)</title><rect x="200" y="260" width="7" height="15" fill="rgb(225,80,41)"/><text x="203.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.56%)</title><rect x="200" y="276" width="7" height="15" fill="rgb(251,156,38)"/><text x="203.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.56%)</title><rect x="200" y="292" width="7" height="15" fill="rgb(223,154,26)"/><text x="203.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:38) (121 samples, 16.88%)</title><rect x="10" y="52" width="199" height="15" fill="rgb(206,62,54)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRe..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:37) (121 samples, 16.88%)</title><rect x="10" y="68" width="199" height="15" fill="rgb(224,148,50)"/><text x="13.00" y="78.50">profile_skl (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:29) (119 samples, 16.60%)</title><rect x="13" y="84" width="196" height="15" fill="rgb(225,145,6)"/><text x="16.00" y="94.50">setup_profile (bench_Logi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:23) (116 samples, 16.18%)</title><rect x="18" y="100" width="191" height="15" fill="rgb(230,154,51)"/><text x="21.00" y="110.50">profile (bench_LogisticR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (115 samples, 16.04%)</title><rect x="19" y="116" width="190" height="15" fill="rgb(242,192,21)"/><text x="22.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (115 samples, 16.04%)</title><rect x="19" y="132" width="190" height="15" fill="rgb(249,101,8)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (103 samples, 14.37%)</title><rect x="39" y="148" width="170" height="15" fill="rgb(220,101,15)"/><text x="42.00" y="158.50">predict_proba (sklearn..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (32 samples, 4.46%)</title><rect x="156" y="164" width="53" height="15" fill="rgb(218,28,42)"/><text x="159.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 1.53%)</title><rect x="191" y="180" width="18" height="15" fill="rgb(232,82,17)"/><text x="194.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.39%)</title><rect x="192" y="196" width="17" height="15" fill="rgb(208,182,46)"/><text x="195.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.39%)</title><rect x="192" y="212" width="17" height="15" fill="rgb(231,19,23)"/><text x="195.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.14%)</title><rect x="207" y="228" width="2" height="15" fill="rgb(218,137,44)"/><text x="210.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.14%)</title><rect x="207" y="244" width="2" height="15" fill="rgb(246,72,31)"/><text x="210.00" y="254.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:1) (1 samples, 0.14%)</title><rect x="209" y="148" width="1" height="15" fill="rgb(214,51,19)"/><text x="212.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="209" y="164" width="1" height="15" fill="rgb(217,110,2)"/><text x="212.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="209" y="180" width="1" height="15" fill="rgb(214,6,1)"/><text x="212.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="209" y="196" width="1" height="15" fill="rgb(242,2,49)"/><text x="212.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="209" y="212" width="1" height="15" fill="rgb(223,189,51)"/><text x="212.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="209" y="228" width="1" height="15" fill="rgb(207,179,49)"/><text x="212.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.14%)</title><rect x="209" y="244" width="1" height="15" fill="rgb(222,96,44)"/><text x="212.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="209" y="260" width="1" height="15" fill="rgb(250,140,26)"/><text x="212.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="209" y="276" width="1" height="15" fill="rgb(222,222,0)"/><text x="212.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="209" y="292" width="1" height="15" fill="rgb(245,164,27)"/><text x="212.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="209" y="308" width="1" height="15" fill="rgb(233,34,14)"/><text x="212.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="209" y="324" width="1" height="15" fill="rgb(220,138,19)"/><text x="212.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="209" y="340" width="1" height="15" fill="rgb(234,180,43)"/><text x="212.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="209" y="356" width="1" height="15" fill="rgb(230,0,9)"/><text x="212.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:20) (1 samples, 0.14%)</title><rect x="209" y="372" width="1" height="15" fill="rgb(230,72,29)"/><text x="212.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="209" y="388" width="1" height="15" fill="rgb(205,229,35)"/><text x="212.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="209" y="404" width="1" height="15" fill="rgb(224,49,4)"/><text x="212.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="209" y="420" width="1" height="15" fill="rgb(235,36,34)"/><text x="212.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="209" y="436" width="1" height="15" fill="rgb(245,153,46)"/><text x="212.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.14%)</title><rect x="209" y="452" width="1" height="15" fill="rgb(207,212,1)"/><text x="212.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.14%)</title><rect x="209" y="468" width="1" height="15" fill="rgb(225,134,8)"/><text x="212.00" y="478.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="209" y="484" width="1" height="15" fill="rgb(243,130,41)"/><text x="212.00" y="494.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.14%)</title><rect x="210" y="980" width="2" height="15" fill="rgb(237,62,16)"/><text x="213.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.14%)</title><rect x="210" y="996" width="2" height="15" fill="rgb(226,210,22)"/><text x="213.00" y="1006.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.28%)</title><rect x="210" y="916" width="4" height="15" fill="rgb(252,117,36)"/><text x="213.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.28%)</title><rect x="210" y="932" width="4" height="15" fill="rgb(250,42,10)"/><text x="213.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.28%)</title><rect x="210" y="948" width="4" height="15" fill="rgb(253,203,38)"/><text x="213.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.28%)</title><rect x="210" y="964" width="4" height="15" fill="rgb(248,72,42)"/><text x="213.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.14%)</title><rect x="212" y="980" width="2" height="15" fill="rgb(242,181,10)"/><text x="215.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.14%)</title><rect x="212" y="996" width="2" height="15" fill="rgb(227,156,28)"/><text x="215.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:152) (1 samples, 0.14%)</title><rect x="212" y="1012" width="2" height="15" fill="rgb(252,18,30)"/><text x="215.00" y="1022.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:205) (1 samples, 0.14%)</title><rect x="214" y="996" width="1" height="15" fill="rgb(216,111,21)"/><text x="217.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 0.56%)</title><rect x="210" y="852" width="7" height="15" fill="rgb(225,188,47)"/><text x="213.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 0.56%)</title><rect x="210" y="868" width="7" height="15" fill="rgb(213,108,48)"/><text x="213.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 0.56%)</title><rect x="210" y="884" width="7" height="15" fill="rgb(214,5,30)"/><text x="213.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.56%)</title><rect x="210" y="900" width="7" height="15" fill="rgb(240,183,36)"/><text x="213.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.28%)</title><rect x="214" y="916" width="3" height="15" fill="rgb(232,209,28)"/><text x="217.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.28%)</title><rect x="214" y="932" width="3" height="15" fill="rgb(241,182,14)"/><text x="217.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.28%)</title><rect x="214" y="948" width="3" height="15" fill="rgb(211,62,30)"/><text x="217.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (2 samples, 0.28%)</title><rect x="214" y="964" width="3" height="15" fill="rgb(236,228,3)"/><text x="217.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (2 samples, 0.28%)</title><rect x="214" y="980" width="3" height="15" fill="rgb(251,129,6)"/><text x="217.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.14%)</title><rect x="215" y="996" width="2" height="15" fill="rgb(227,68,30)"/><text x="218.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.14%)</title><rect x="215" y="1012" width="2" height="15" fill="rgb(245,215,25)"/><text x="218.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.14%)</title><rect x="215" y="1028" width="2" height="15" fill="rgb(239,201,33)"/><text x="218.00" y="1038.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.14%)</title><rect x="217" y="964" width="2" height="15" fill="rgb(245,146,41)"/><text x="220.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.14%)</title><rect x="217" y="980" width="2" height="15" fill="rgb(217,174,35)"/><text x="220.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.28%)</title><rect x="217" y="852" width="3" height="15" fill="rgb(209,155,24)"/><text x="220.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.28%)</title><rect x="217" y="868" width="3" height="15" fill="rgb(251,136,11)"/><text x="220.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.28%)</title><rect x="217" y="884" width="3" height="15" fill="rgb(207,62,36)"/><text x="220.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.28%)</title><rect x="217" y="900" width="3" height="15" fill="rgb(245,93,21)"/><text x="220.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.28%)</title><rect x="217" y="916" width="3" height="15" fill="rgb(222,45,22)"/><text x="220.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.28%)</title><rect x="217" y="932" width="3" height="15" fill="rgb(221,145,11)"/><text x="220.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.28%)</title><rect x="217" y="948" width="3" height="15" fill="rgb(244,139,11)"/><text x="220.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.14%)</title><rect x="219" y="964" width="1" height="15" fill="rgb(240,138,13)"/><text x="222.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.14%)</title><rect x="219" y="980" width="1" height="15" fill="rgb(245,122,17)"/><text x="222.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.14%)</title><rect x="219" y="996" width="1" height="15" fill="rgb(240,159,52)"/><text x="222.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.14%)</title><rect x="219" y="1012" width="1" height="15" fill="rgb(205,123,15)"/><text x="222.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.14%)</title><rect x="219" y="1028" width="1" height="15" fill="rgb(207,40,44)"/><text x="222.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 0.98%)</title><rect x="210" y="820" width="12" height="15" fill="rgb(247,108,21)"/><text x="213.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 0.98%)</title><rect x="210" y="836" width="12" height="15" fill="rgb(213,185,21)"/><text x="213.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.14%)</title><rect x="220" y="852" width="2" height="15" fill="rgb(246,74,48)"/><text x="223.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.14%)</title><rect x="220" y="868" width="2" height="15" fill="rgb(238,95,22)"/><text x="223.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.14%)</title><rect x="220" y="884" width="2" height="15" fill="rgb(244,78,10)"/><text x="223.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.14%)</title><rect x="220" y="900" width="2" height="15" fill="rgb(223,191,5)"/><text x="223.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.14%)</title><rect x="220" y="916" width="2" height="15" fill="rgb(223,201,48)"/><text x="223.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.14%)</title><rect x="220" y="932" width="2" height="15" fill="rgb(224,192,50)"/><text x="223.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.14%)</title><rect x="220" y="948" width="2" height="15" fill="rgb(227,93,17)"/><text x="223.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.14%)</title><rect x="220" y="964" width="2" height="15" fill="rgb(243,18,47)"/><text x="223.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.14%)</title><rect x="222" y="820" width="1" height="15" fill="rgb(207,37,8)"/><text x="225.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="222" y="836" width="1" height="15" fill="rgb(250,95,33)"/><text x="225.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="222" y="852" width="1" height="15" fill="rgb(233,185,43)"/><text x="225.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="222" y="868" width="1" height="15" fill="rgb(231,192,42)"/><text x="225.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="222" y="884" width="1" height="15" fill="rgb(207,110,17)"/><text x="225.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="222" y="900" width="1" height="15" fill="rgb(231,186,17)"/><text x="225.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.14%)</title><rect x="222" y="916" width="1" height="15" fill="rgb(249,119,20)"/><text x="225.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.14%)</title><rect x="222" y="932" width="1" height="15" fill="rgb(236,107,9)"/><text x="225.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.14%)</title><rect x="222" y="948" width="1" height="15" fill="rgb(249,96,10)"/><text x="225.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.14%)</title><rect x="222" y="964" width="1" height="15" fill="rgb(225,159,44)"/><text x="225.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.14%)</title><rect x="222" y="980" width="1" height="15" fill="rgb(232,38,40)"/><text x="225.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.14%)</title><rect x="222" y="996" width="1" height="15" fill="rgb(246,91,1)"/><text x="225.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.14%)</title><rect x="222" y="1012" width="1" height="15" fill="rgb(209,157,18)"/><text x="225.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.14%)</title><rect x="222" y="1028" width="1" height="15" fill="rgb(239,119,0)"/><text x="225.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.14%)</title><rect x="222" y="1044" width="1" height="15" fill="rgb(250,41,2)"/><text x="225.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.14%)</title><rect x="222" y="1060" width="1" height="15" fill="rgb(231,139,39)"/><text x="225.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.14%)</title><rect x="222" y="1076" width="1" height="15" fill="rgb(208,193,32)"/><text x="225.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.14%)</title><rect x="222" y="1092" width="1" height="15" fill="rgb(245,16,44)"/><text x="225.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.14%)</title><rect x="222" y="1108" width="1" height="15" fill="rgb(233,70,30)"/><text x="225.00" y="1118.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.14%)</title><rect x="222" y="1124" width="1" height="15" fill="rgb(252,119,21)"/><text x="225.00" y="1134.50"></text></g><g><title>_optimize_charset (sre_compile.py:395) (1 samples, 0.14%)</title><rect x="222" y="1140" width="1" height="15" fill="rgb(254,60,43)"/><text x="225.00" y="1150.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (9 samples, 1.26%)</title><rect x="210" y="148" width="15" height="15" fill="rgb(219,101,1)"/><text x="213.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="164" width="15" height="15" fill="rgb(245,121,31)"/><text x="213.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.26%)</title><rect x="210" y="180" width="15" height="15" fill="rgb(252,26,52)"/><text x="213.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="196" width="15" height="15" fill="rgb(209,66,34)"/><text x="213.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="212" width="15" height="15" fill="rgb(228,130,14)"/><text x="213.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.26%)</title><rect x="210" y="228" width="15" height="15" fill="rgb(245,97,15)"/><text x="213.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.26%)</title><rect x="210" y="244" width="15" height="15" fill="rgb(225,228,21)"/><text x="213.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.26%)</title><rect x="210" y="260" width="15" height="15" fill="rgb(254,116,31)"/><text x="213.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="276" width="15" height="15" fill="rgb(219,155,51)"/><text x="213.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 1.26%)</title><rect x="210" y="292" width="15" height="15" fill="rgb(229,12,33)"/><text x="213.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="308" width="15" height="15" fill="rgb(218,210,14)"/><text x="213.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.26%)</title><rect x="210" y="324" width="15" height="15" fill="rgb(247,117,12)"/><text x="213.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.26%)</title><rect x="210" y="340" width="15" height="15" fill="rgb(206,172,48)"/><text x="213.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.26%)</title><rect x="210" y="356" width="15" height="15" fill="rgb(228,136,33)"/><text x="213.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="372" width="15" height="15" fill="rgb(219,183,28)"/><text x="213.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 1.26%)</title><rect x="210" y="388" width="15" height="15" fill="rgb(231,193,21)"/><text x="213.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="404" width="15" height="15" fill="rgb(216,9,28)"/><text x="213.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.26%)</title><rect x="210" y="420" width="15" height="15" fill="rgb(222,214,20)"/><text x="213.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.26%)</title><rect x="210" y="436" width="15" height="15" fill="rgb(225,144,46)"/><text x="213.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.26%)</title><rect x="210" y="452" width="15" height="15" fill="rgb(208,17,36)"/><text x="213.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="468" width="15" height="15" fill="rgb(229,185,16)"/><text x="213.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 1.26%)</title><rect x="210" y="484" width="15" height="15" fill="rgb(243,27,19)"/><text x="213.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="500" width="15" height="15" fill="rgb(253,159,46)"/><text x="213.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.26%)</title><rect x="210" y="516" width="15" height="15" fill="rgb(239,81,52)"/><text x="213.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.26%)</title><rect x="210" y="532" width="15" height="15" fill="rgb(219,171,53)"/><text x="213.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.26%)</title><rect x="210" y="548" width="15" height="15" fill="rgb(236,134,54)"/><text x="213.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="564" width="15" height="15" fill="rgb(229,75,6)"/><text x="213.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 1.26%)</title><rect x="210" y="580" width="15" height="15" fill="rgb(242,8,25)"/><text x="213.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="596" width="15" height="15" fill="rgb(248,110,28)"/><text x="213.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.26%)</title><rect x="210" y="612" width="15" height="15" fill="rgb(211,30,34)"/><text x="213.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="628" width="15" height="15" fill="rgb(248,169,39)"/><text x="213.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="644" width="15" height="15" fill="rgb(217,147,32)"/><text x="213.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.26%)</title><rect x="210" y="660" width="15" height="15" fill="rgb(237,161,44)"/><text x="213.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.26%)</title><rect x="210" y="676" width="15" height="15" fill="rgb(241,173,34)"/><text x="213.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.26%)</title><rect x="210" y="692" width="15" height="15" fill="rgb(214,115,21)"/><text x="213.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="708" width="15" height="15" fill="rgb(228,137,54)"/><text x="213.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 1.26%)</title><rect x="210" y="724" width="15" height="15" fill="rgb(251,143,9)"/><text x="213.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.26%)</title><rect x="210" y="740" width="15" height="15" fill="rgb(223,146,24)"/><text x="213.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.26%)</title><rect x="210" y="756" width="15" height="15" fill="rgb(242,17,41)"/><text x="213.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.26%)</title><rect x="210" y="772" width="15" height="15" fill="rgb(212,20,34)"/><text x="213.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.26%)</title><rect x="210" y="788" width="15" height="15" fill="rgb(223,114,52)"/><text x="213.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.26%)</title><rect x="210" y="804" width="15" height="15" fill="rgb(217,91,44)"/><text x="213.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.14%)</title><rect x="223" y="820" width="2" height="15" fill="rgb(240,207,20)"/><text x="226.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="223" y="836" width="2" height="15" fill="rgb(226,13,18)"/><text x="226.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="223" y="852" width="2" height="15" fill="rgb(219,229,46)"/><text x="226.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="223" y="868" width="2" height="15" fill="rgb(241,31,53)"/><text x="226.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="223" y="884" width="2" height="15" fill="rgb(233,93,12)"/><text x="226.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="223" y="900" width="2" height="15" fill="rgb(235,177,10)"/><text x="226.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.14%)</title><rect x="223" y="916" width="2" height="15" fill="rgb(224,21,18)"/><text x="226.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="223" y="932" width="2" height="15" fill="rgb(211,195,17)"/><text x="226.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="223" y="948" width="2" height="15" fill="rgb(220,128,27)"/><text x="226.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.14%)</title><rect x="223" y="964" width="2" height="15" fill="rgb(227,48,20)"/><text x="226.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.14%)</title><rect x="223" y="980" width="2" height="15" fill="rgb(248,217,39)"/><text x="226.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.14%)</title><rect x="223" y="996" width="2" height="15" fill="rgb(247,10,44)"/><text x="226.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="223" y="1012" width="2" height="15" fill="rgb(240,29,24)"/><text x="226.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="223" y="1028" width="2" height="15" fill="rgb(223,4,40)"/><text x="226.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="223" y="1044" width="2" height="15" fill="rgb(217,82,8)"/><text x="226.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="223" y="1060" width="2" height="15" fill="rgb(229,160,33)"/><text x="226.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="223" y="1076" width="2" height="15" fill="rgb(231,89,7)"/><text x="226.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.14%)</title><rect x="223" y="1092" width="2" height="15" fill="rgb(227,199,52)"/><text x="226.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5586) (1 samples, 0.14%)</title><rect x="223" y="1108" width="2" height="15" fill="rgb(222,146,17)"/><text x="226.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:4255) (1 samples, 0.14%)</title><rect x="223" y="1124" width="2" height="15" fill="rgb(241,51,5)"/><text x="226.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.14%)</title><rect x="223" y="1140" width="2" height="15" fill="rgb(205,205,26)"/><text x="226.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1156" width="2" height="15" fill="rgb(211,141,5)"/><text x="226.00" y="1166.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1172" width="2" height="15" fill="rgb(242,39,11)"/><text x="226.00" y="1182.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1188" width="2" height="15" fill="rgb(229,194,29)"/><text x="226.00" y="1198.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.14%)</title><rect x="223" y="1204" width="2" height="15" fill="rgb(228,213,26)"/><text x="226.00" y="1214.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1220" width="2" height="15" fill="rgb(213,141,25)"/><text x="226.00" y="1230.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.14%)</title><rect x="223" y="1236" width="2" height="15" fill="rgb(248,143,38)"/><text x="226.00" y="1246.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1252" width="2" height="15" fill="rgb(238,64,49)"/><text x="226.00" y="1262.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.14%)</title><rect x="223" y="1268" width="2" height="15" fill="rgb(236,63,52)"/><text x="226.00" y="1278.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1284" width="2" height="15" fill="rgb(219,147,29)"/><text x="226.00" y="1294.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.14%)</title><rect x="223" y="1300" width="2" height="15" fill="rgb(211,166,19)"/><text x="226.00" y="1310.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.14%)</title><rect x="223" y="1316" width="2" height="15" fill="rgb(226,166,44)"/><text x="226.00" y="1326.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3745) (1 samples, 0.14%)</title><rect x="223" y="1332" width="2" height="15" fill="rgb(218,20,29)"/><text x="226.00" y="1342.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.14%)</title><rect x="223" y="1348" width="2" height="15" fill="rgb(213,201,21)"/><text x="226.00" y="1358.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.14%)</title><rect x="223" y="1364" width="2" height="15" fill="rgb(249,165,6)"/><text x="226.00" y="1374.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.14%)</title><rect x="223" y="1380" width="2" height="15" fill="rgb(227,47,36)"/><text x="226.00" y="1390.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.14%)</title><rect x="223" y="1396" width="2" height="15" fill="rgb(230,48,36)"/><text x="226.00" y="1406.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:1183) (1 samples, 0.14%)</title><rect x="223" y="1412" width="2" height="15" fill="rgb(238,172,14)"/><text x="226.00" y="1422.50"></text></g><g><title>copy (copy.py:86) (1 samples, 0.14%)</title><rect x="223" y="1428" width="2" height="15" fill="rgb(230,75,19)"/><text x="226.00" y="1438.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.14%)</title><rect x="225" y="900" width="2" height="15" fill="rgb(246,26,34)"/><text x="228.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="225" y="916" width="2" height="15" fill="rgb(222,11,52)"/><text x="228.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="225" y="932" width="2" height="15" fill="rgb(220,82,34)"/><text x="228.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="225" y="948" width="2" height="15" fill="rgb(244,222,36)"/><text x="228.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="225" y="964" width="2" height="15" fill="rgb(217,143,48)"/><text x="228.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="225" y="980" width="2" height="15" fill="rgb(209,148,41)"/><text x="228.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.14%)</title><rect x="225" y="996" width="2" height="15" fill="rgb(247,5,13)"/><text x="228.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="225" y="1012" width="2" height="15" fill="rgb(224,17,37)"/><text x="228.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="225" y="1028" width="2" height="15" fill="rgb(210,128,36)"/><text x="228.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="225" y="1044" width="2" height="15" fill="rgb(242,165,31)"/><text x="228.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="225" y="1060" width="2" height="15" fill="rgb(251,136,30)"/><text x="228.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="225" y="1076" width="2" height="15" fill="rgb(239,45,23)"/><text x="228.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="225" y="1092" width="2" height="15" fill="rgb(244,216,10)"/><text x="228.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="225" y="1108" width="2" height="15" fill="rgb(218,15,7)"/><text x="228.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:403) (1 samples, 0.14%)</title><rect x="225" y="1124" width="2" height="15" fill="rgb(237,185,43)"/><text x="228.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="225" y="1140" width="2" height="15" fill="rgb(241,204,29)"/><text x="228.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="225" y="1156" width="2" height="15" fill="rgb(242,137,30)"/><text x="228.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="225" y="1172" width="2" height="15" fill="rgb(210,180,37)"/><text x="228.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="225" y="1188" width="2" height="15" fill="rgb(220,114,20)"/><text x="228.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="225" y="1204" width="2" height="15" fill="rgb(207,76,38)"/><text x="228.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog.py:26) (1 samples, 0.14%)</title><rect x="225" y="1220" width="2" height="15" fill="rgb(223,101,44)"/><text x="228.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="225" y="1236" width="2" height="15" fill="rgb(213,85,7)"/><text x="228.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="225" y="1252" width="2" height="15" fill="rgb(230,78,33)"/><text x="228.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="225" y="1268" width="2" height="15" fill="rgb(223,214,12)"/><text x="228.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="225" y="1284" width="2" height="15" fill="rgb(243,135,13)"/><text x="228.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="225" y="1300" width="2" height="15" fill="rgb(253,219,35)"/><text x="228.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog_rs.py:24) (1 samples, 0.14%)</title><rect x="225" y="1316" width="2" height="15" fill="rgb(251,195,19)"/><text x="228.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="225" y="1332" width="2" height="15" fill="rgb(221,36,13)"/><text x="228.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="225" y="1348" width="2" height="15" fill="rgb(209,76,53)"/><text x="228.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.14%)</title><rect x="225" y="1364" width="2" height="15" fill="rgb(246,121,17)"/><text x="228.00" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.14%)</title><rect x="225" y="1380" width="2" height="15" fill="rgb(239,156,25)"/><text x="228.00" y="1390.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.14%)</title><rect x="225" y="1396" width="2" height="15" fill="rgb(219,42,17)"/><text x="228.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="225" y="1412" width="2" height="15" fill="rgb(230,126,36)"/><text x="228.00" y="1422.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1428" width="2" height="15" fill="rgb(239,42,7)"/><text x="228.00" y="1438.50"></text></g><g><title>0x7f9bda4ac995 (libdl-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1444" width="2" height="15" fill="rgb(225,104,46)"/><text x="228.00" y="1454.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1460" width="2" height="15" fill="rgb(239,67,42)"/><text x="228.00" y="1470.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1476" width="2" height="15" fill="rgb(208,24,32)"/><text x="228.00" y="1486.50"></text></g><g><title>0x7f9bda4ac258 (libdl-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1492" width="2" height="15" fill="rgb(216,18,7)"/><text x="228.00" y="1502.50"></text></g><g><title>0x7f9bda4f9d7a (ld-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1508" width="2" height="15" fill="rgb(227,185,2)"/><text x="228.00" y="1518.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1524" width="2" height="15" fill="rgb(244,229,41)"/><text x="228.00" y="1534.50"></text></g><g><title>0x7f9bda4fa18b (ld-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1540" width="2" height="15" fill="rgb(213,183,17)"/><text x="228.00" y="1550.50"></text></g><g><title>0x7f9bda4efc1a (ld-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1556" width="2" height="15" fill="rgb(246,207,45)"/><text x="228.00" y="1566.50"></text></g><g><title>0x7f9bda4ed9fe (ld-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1572" width="2" height="15" fill="rgb(210,218,31)"/><text x="228.00" y="1582.50"></text></g><g><title>0x7f9bda505f3f (ld-2.29.so) (1 samples, 0.14%)</title><rect x="225" y="1588" width="2" height="15" fill="rgb(215,52,34)"/><text x="228.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.28%)</title><rect x="225" y="180" width="3" height="15" fill="rgb(246,213,52)"/><text x="228.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="196" width="3" height="15" fill="rgb(224,52,32)"/><text x="228.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="212" width="3" height="15" fill="rgb(254,78,53)"/><text x="228.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="228" width="3" height="15" fill="rgb(226,93,50)"/><text x="228.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="244" width="3" height="15" fill="rgb(252,8,1)"/><text x="228.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="260" width="3" height="15" fill="rgb(246,77,15)"/><text x="228.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="276" width="3" height="15" fill="rgb(206,180,48)"/><text x="228.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.28%)</title><rect x="225" y="292" width="3" height="15" fill="rgb(208,149,8)"/><text x="228.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="308" width="3" height="15" fill="rgb(250,115,0)"/><text x="228.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="324" width="3" height="15" fill="rgb(240,25,29)"/><text x="228.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="340" width="3" height="15" fill="rgb(247,93,15)"/><text x="228.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="356" width="3" height="15" fill="rgb(205,63,3)"/><text x="228.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="372" width="3" height="15" fill="rgb(237,72,16)"/><text x="228.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.28%)</title><rect x="225" y="388" width="3" height="15" fill="rgb(243,24,8)"/><text x="228.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="404" width="3" height="15" fill="rgb(235,204,6)"/><text x="228.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="420" width="3" height="15" fill="rgb(251,143,12)"/><text x="228.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="436" width="3" height="15" fill="rgb(232,178,37)"/><text x="228.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="452" width="3" height="15" fill="rgb(225,224,31)"/><text x="228.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="468" width="3" height="15" fill="rgb(209,220,22)"/><text x="228.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.28%)</title><rect x="225" y="484" width="3" height="15" fill="rgb(245,91,50)"/><text x="228.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="500" width="3" height="15" fill="rgb(232,219,4)"/><text x="228.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="516" width="3" height="15" fill="rgb(220,115,43)"/><text x="228.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="532" width="3" height="15" fill="rgb(230,138,47)"/><text x="228.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="548" width="3" height="15" fill="rgb(232,25,39)"/><text x="228.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="564" width="3" height="15" fill="rgb(221,186,5)"/><text x="228.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.28%)</title><rect x="225" y="580" width="3" height="15" fill="rgb(235,61,16)"/><text x="228.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="596" width="3" height="15" fill="rgb(241,166,10)"/><text x="228.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="612" width="3" height="15" fill="rgb(235,113,54)"/><text x="228.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="628" width="3" height="15" fill="rgb(220,36,24)"/><text x="228.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="644" width="3" height="15" fill="rgb(207,111,34)"/><text x="228.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="660" width="3" height="15" fill="rgb(220,3,2)"/><text x="228.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.28%)</title><rect x="225" y="676" width="3" height="15" fill="rgb(215,198,15)"/><text x="228.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="692" width="3" height="15" fill="rgb(254,91,38)"/><text x="228.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="708" width="3" height="15" fill="rgb(235,186,53)"/><text x="228.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="724" width="3" height="15" fill="rgb(240,119,32)"/><text x="228.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="740" width="3" height="15" fill="rgb(215,52,20)"/><text x="228.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="756" width="3" height="15" fill="rgb(236,163,1)"/><text x="228.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.28%)</title><rect x="225" y="772" width="3" height="15" fill="rgb(231,52,51)"/><text x="228.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.28%)</title><rect x="225" y="788" width="3" height="15" fill="rgb(237,218,25)"/><text x="228.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="804" width="3" height="15" fill="rgb(226,160,15)"/><text x="228.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="225" y="820" width="3" height="15" fill="rgb(218,137,12)"/><text x="228.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="225" y="836" width="3" height="15" fill="rgb(250,158,52)"/><text x="228.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="225" y="852" width="3" height="15" fill="rgb(243,150,19)"/><text x="228.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="225" y="868" width="3" height="15" fill="rgb(252,171,21)"/><text x="228.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="225" y="884" width="3" height="15" fill="rgb(212,24,7)"/><text x="228.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.14%)</title><rect x="227" y="900" width="1" height="15" fill="rgb(237,188,2)"/><text x="230.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="227" y="916" width="1" height="15" fill="rgb(230,171,50)"/><text x="230.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="227" y="932" width="1" height="15" fill="rgb(247,19,7)"/><text x="230.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="227" y="948" width="1" height="15" fill="rgb(208,198,4)"/><text x="230.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="227" y="964" width="1" height="15" fill="rgb(210,4,25)"/><text x="230.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="227" y="980" width="1" height="15" fill="rgb(249,45,48)"/><text x="230.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="227" y="996" width="1" height="15" fill="rgb(234,79,20)"/><text x="230.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="227" y="1012" width="1" height="15" fill="rgb(234,113,16)"/><text x="230.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:758) (1 samples, 0.14%)</title><rect x="227" y="1028" width="1" height="15" fill="rgb(245,182,9)"/><text x="230.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.14%)</title><rect x="227" y="1044" width="1" height="15" fill="rgb(223,181,50)"/><text x="230.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.14%)</title><rect x="227" y="1060" width="1" height="15" fill="rgb(214,223,18)"/><text x="230.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.14%)</title><rect x="227" y="1076" width="1" height="15" fill="rgb(223,199,30)"/><text x="230.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:60) (1 samples, 0.14%)</title><rect x="227" y="1092" width="1" height="15" fill="rgb(251,87,3)"/><text x="230.00" y="1102.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.14%)</title><rect x="227" y="1108" width="1" height="15" fill="rgb(232,58,10)"/><text x="230.00" y="1118.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (3 samples, 0.42%)</title><rect x="225" y="148" width="5" height="15" fill="rgb(211,198,50)"/><text x="228.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="225" y="164" width="5" height="15" fill="rgb(254,15,16)"/><text x="228.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="180" width="2" height="15" fill="rgb(229,132,42)"/><text x="231.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="196" width="2" height="15" fill="rgb(251,16,6)"/><text x="231.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="228" y="212" width="2" height="15" fill="rgb(208,38,24)"/><text x="231.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="228" y="228" width="2" height="15" fill="rgb(250,93,49)"/><text x="231.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:12) (1 samples, 0.14%)</title><rect x="228" y="244" width="2" height="15" fill="rgb(249,131,24)"/><text x="231.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="228" y="260" width="2" height="15" fill="rgb(250,218,32)"/><text x="231.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="276" width="2" height="15" fill="rgb(205,59,14)"/><text x="231.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="292" width="2" height="15" fill="rgb(247,165,39)"/><text x="231.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="228" y="308" width="2" height="15" fill="rgb(245,30,38)"/><text x="231.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="228" y="324" width="2" height="15" fill="rgb(214,28,45)"/><text x="231.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py:23) (1 samples, 0.14%)</title><rect x="228" y="340" width="2" height="15" fill="rgb(225,210,31)"/><text x="231.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="228" y="356" width="2" height="15" fill="rgb(234,106,19)"/><text x="231.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="372" width="2" height="15" fill="rgb(233,54,34)"/><text x="231.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="388" width="2" height="15" fill="rgb(230,28,48)"/><text x="231.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="228" y="404" width="2" height="15" fill="rgb(241,113,37)"/><text x="231.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="228" y="420" width="2" height="15" fill="rgb(243,196,24)"/><text x="231.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py:19) (1 samples, 0.14%)</title><rect x="228" y="436" width="2" height="15" fill="rgb(245,149,8)"/><text x="231.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="228" y="452" width="2" height="15" fill="rgb(223,95,47)"/><text x="231.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="468" width="2" height="15" fill="rgb(229,2,36)"/><text x="231.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="484" width="2" height="15" fill="rgb(213,94,34)"/><text x="231.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="228" y="500" width="2" height="15" fill="rgb(247,124,39)"/><text x="231.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="228" y="516" width="2" height="15" fill="rgb(223,223,29)"/><text x="231.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py:28) (1 samples, 0.14%)</title><rect x="228" y="532" width="2" height="15" fill="rgb(221,56,20)"/><text x="231.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="228" y="548" width="2" height="15" fill="rgb(215,28,52)"/><text x="231.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="564" width="2" height="15" fill="rgb(210,75,39)"/><text x="231.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="580" width="2" height="15" fill="rgb(249,116,3)"/><text x="231.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="228" y="596" width="2" height="15" fill="rgb(246,80,27)"/><text x="231.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="228" y="612" width="2" height="15" fill="rgb(233,68,5)"/><text x="231.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.14%)</title><rect x="228" y="628" width="2" height="15" fill="rgb(238,92,30)"/><text x="231.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="228" y="644" width="2" height="15" fill="rgb(215,191,51)"/><text x="231.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="660" width="2" height="15" fill="rgb(230,181,4)"/><text x="231.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="676" width="2" height="15" fill="rgb(228,98,5)"/><text x="231.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="228" y="692" width="2" height="15" fill="rgb(214,100,2)"/><text x="231.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="228" y="708" width="2" height="15" fill="rgb(229,218,43)"/><text x="231.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py:38) (1 samples, 0.14%)</title><rect x="228" y="724" width="2" height="15" fill="rgb(207,78,8)"/><text x="231.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="228" y="740" width="2" height="15" fill="rgb(244,39,21)"/><text x="231.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="228" y="756" width="2" height="15" fill="rgb(242,160,34)"/><text x="231.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="228" y="772" width="2" height="15" fill="rgb(221,80,1)"/><text x="231.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="228" y="788" width="2" height="15" fill="rgb(237,47,40)"/><text x="231.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:800) (1 samples, 0.14%)</title><rect x="228" y="804" width="2" height="15" fill="rgb(225,33,23)"/><text x="231.00" y="814.50"></text></g><g><title>_check_name_wrapper (&lt;frozen importlib._bootstrap_external&gt;:407) (1 samples, 0.14%)</title><rect x="228" y="820" width="2" height="15" fill="rgb(230,207,49)"/><text x="231.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.14%)</title><rect x="230" y="244" width="2" height="15" fill="rgb(205,72,6)"/><text x="233.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="260" width="2" height="15" fill="rgb(250,70,53)"/><text x="233.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(219,114,49)"/><text x="233.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(221,182,51)"/><text x="233.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="308" width="2" height="15" fill="rgb(243,65,18)"/><text x="233.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="324" width="2" height="15" fill="rgb(226,13,24)"/><text x="233.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.14%)</title><rect x="230" y="340" width="2" height="15" fill="rgb(253,93,0)"/><text x="233.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="356" width="2" height="15" fill="rgb(254,3,23)"/><text x="233.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.14%)</title><rect x="230" y="372" width="2" height="15" fill="rgb(253,200,46)"/><text x="233.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="388" width="2" height="15" fill="rgb(209,178,12)"/><text x="233.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="404" width="2" height="15" fill="rgb(238,228,3)"/><text x="233.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="420" width="2" height="15" fill="rgb(233,194,50)"/><text x="233.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="436" width="2" height="15" fill="rgb(219,57,47)"/><text x="233.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="452" width="2" height="15" fill="rgb(238,121,53)"/><text x="233.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="468" width="2" height="15" fill="rgb(238,152,47)"/><text x="233.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.14%)</title><rect x="230" y="484" width="2" height="15" fill="rgb(245,201,30)"/><text x="233.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="500" width="2" height="15" fill="rgb(218,124,40)"/><text x="233.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="516" width="2" height="15" fill="rgb(220,205,17)"/><text x="233.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="532" width="2" height="15" fill="rgb(236,147,18)"/><text x="233.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="548" width="2" height="15" fill="rgb(241,80,10)"/><text x="233.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="564" width="2" height="15" fill="rgb(236,209,38)"/><text x="233.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.14%)</title><rect x="230" y="580" width="2" height="15" fill="rgb(239,113,35)"/><text x="233.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="596" width="2" height="15" fill="rgb(210,182,15)"/><text x="233.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="612" width="2" height="15" fill="rgb(243,181,48)"/><text x="233.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="628" width="2" height="15" fill="rgb(254,47,16)"/><text x="233.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="644" width="2" height="15" fill="rgb(217,61,54)"/><text x="233.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="660" width="2" height="15" fill="rgb(230,225,49)"/><text x="233.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.14%)</title><rect x="230" y="676" width="2" height="15" fill="rgb(254,57,34)"/><text x="233.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="692" width="2" height="15" fill="rgb(242,225,43)"/><text x="233.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="708" width="2" height="15" fill="rgb(252,75,1)"/><text x="233.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="724" width="2" height="15" fill="rgb(210,227,10)"/><text x="233.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="740" width="2" height="15" fill="rgb(220,80,37)"/><text x="233.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="756" width="2" height="15" fill="rgb(238,217,19)"/><text x="233.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.14%)</title><rect x="230" y="772" width="2" height="15" fill="rgb(226,210,38)"/><text x="233.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="230" y="788" width="2" height="15" fill="rgb(219,6,34)"/><text x="233.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="804" width="2" height="15" fill="rgb(233,84,33)"/><text x="233.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="820" width="2" height="15" fill="rgb(208,45,24)"/><text x="233.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="836" width="2" height="15" fill="rgb(238,177,54)"/><text x="233.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="852" width="2" height="15" fill="rgb(214,123,54)"/><text x="233.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="868" width="2" height="15" fill="rgb(230,214,36)"/><text x="233.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="884" width="2" height="15" fill="rgb(241,75,40)"/><text x="233.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.14%)</title><rect x="230" y="900" width="2" height="15" fill="rgb(240,61,27)"/><text x="233.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="916" width="2" height="15" fill="rgb(244,155,27)"/><text x="233.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="932" width="2" height="15" fill="rgb(225,86,9)"/><text x="233.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="948" width="2" height="15" fill="rgb(218,54,10)"/><text x="233.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="964" width="2" height="15" fill="rgb(222,192,10)"/><text x="233.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="980" width="2" height="15" fill="rgb(231,138,29)"/><text x="233.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.14%)</title><rect x="230" y="996" width="2" height="15" fill="rgb(219,111,29)"/><text x="233.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="1012" width="2" height="15" fill="rgb(222,94,13)"/><text x="233.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="1028" width="2" height="15" fill="rgb(214,125,14)"/><text x="233.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="1044" width="2" height="15" fill="rgb(245,144,42)"/><text x="233.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="1060" width="2" height="15" fill="rgb(231,36,51)"/><text x="233.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="1076" width="2" height="15" fill="rgb(205,177,53)"/><text x="233.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:62) (1 samples, 0.14%)</title><rect x="230" y="1092" width="2" height="15" fill="rgb(246,32,28)"/><text x="233.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="1108" width="2" height="15" fill="rgb(219,21,3)"/><text x="233.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="1124" width="2" height="15" fill="rgb(215,131,32)"/><text x="233.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="1140" width="2" height="15" fill="rgb(217,45,36)"/><text x="233.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="1156" width="2" height="15" fill="rgb(208,161,50)"/><text x="233.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="1172" width="2" height="15" fill="rgb(222,141,13)"/><text x="233.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py:21) (1 samples, 0.14%)</title><rect x="230" y="1188" width="2" height="15" fill="rgb(244,149,38)"/><text x="233.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="230" y="1204" width="2" height="15" fill="rgb(249,70,19)"/><text x="233.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="230" y="1220" width="2" height="15" fill="rgb(238,108,41)"/><text x="233.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="230" y="1236" width="2" height="15" fill="rgb(232,18,21)"/><text x="233.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="230" y="1252" width="2" height="15" fill="rgb(206,202,16)"/><text x="233.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="230" y="1268" width="2" height="15" fill="rgb(226,40,40)"/><text x="233.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/padding.py:18) (1 samples, 0.14%)</title><rect x="230" y="1284" width="2" height="15" fill="rgb(215,172,4)"/><text x="233.00" y="1294.50"></text></g><g><title>wrapper (six.py:858) (1 samples, 0.14%)</title><rect x="230" y="1300" width="2" height="15" fill="rgb(228,17,47)"/><text x="233.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4892) (1 samples, 0.14%)</title><rect x="232" y="1108" width="1" height="15" fill="rgb(216,32,14)"/><text x="235.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py:10747) (1 samples, 0.14%)</title><rect x="232" y="1124" width="1" height="15" fill="rgb(248,179,38)"/><text x="235.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="232" y="1140" width="1" height="15" fill="rgb(220,4,30)"/><text x="235.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="232" y="1156" width="1" height="15" fill="rgb(250,91,35)"/><text x="235.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="232" y="1172" width="1" height="15" fill="rgb(234,202,43)"/><text x="235.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="232" y="1188" width="1" height="15" fill="rgb(237,146,39)"/><text x="235.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="232" y="1204" width="1" height="15" fill="rgb(238,30,2)"/><text x="235.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="232" y="1220" width="1" height="15" fill="rgb(222,178,9)"/><text x="235.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="232" y="1236" width="1" height="15" fill="rgb(206,135,43)"/><text x="235.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py:13) (1 samples, 0.14%)</title><rect x="232" y="1252" width="1" height="15" fill="rgb(236,224,46)"/><text x="235.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="232" y="1268" width="1" height="15" fill="rgb(251,127,50)"/><text x="235.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="232" y="1284" width="1" height="15" fill="rgb(226,19,41)"/><text x="235.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="232" y="1300" width="1" height="15" fill="rgb(227,7,30)"/><text x="235.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.14%)</title><rect x="232" y="1316" width="1" height="15" fill="rgb(241,130,37)"/><text x="235.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="232" y="1332" width="1" height="15" fill="rgb(242,1,35)"/><text x="235.00" y="1342.50"></text></g><g><title>0x7f9baa824ff7 (?) (1 samples, 0.14%)</title><rect x="232" y="1348" width="1" height="15" fill="rgb(238,75,33)"/><text x="235.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="232" y="1364" width="1" height="15" fill="rgb(219,204,8)"/><text x="235.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.14%)</title><rect x="232" y="1380" width="1" height="15" fill="rgb(217,68,50)"/><text x="235.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.14%)</title><rect x="232" y="1396" width="1" height="15" fill="rgb(216,68,45)"/><text x="235.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.14%)</title><rect x="232" y="1412" width="1" height="15" fill="rgb(249,229,34)"/><text x="235.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1249) (1 samples, 0.14%)</title><rect x="232" y="1428" width="1" height="15" fill="rgb(246,62,27)"/><text x="235.00" y="1438.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;:1219) (1 samples, 0.14%)</title><rect x="232" y="1444" width="1" height="15" fill="rgb(233,167,44)"/><text x="235.00" y="1454.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.14%)</title><rect x="233" y="1492" width="2" height="15" fill="rgb(232,210,37)"/><text x="236.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="233" y="1508" width="2" height="15" fill="rgb(240,30,18)"/><text x="236.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="233" y="1524" width="2" height="15" fill="rgb(224,111,18)"/><text x="236.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="233" y="1540" width="2" height="15" fill="rgb(242,96,8)"/><text x="236.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="233" y="1556" width="2" height="15" fill="rgb(239,111,21)"/><text x="236.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="233" y="1572" width="2" height="15" fill="rgb(217,42,40)"/><text x="236.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.14%)</title><rect x="233" y="1588" width="2" height="15" fill="rgb(217,186,25)"/><text x="236.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="233" y="1604" width="2" height="15" fill="rgb(209,3,46)"/><text x="236.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="233" y="1620" width="2" height="15" fill="rgb(207,115,39)"/><text x="236.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="233" y="1636" width="2" height="15" fill="rgb(217,40,0)"/><text x="236.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="233" y="1652" width="2" height="15" fill="rgb(206,93,41)"/><text x="236.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="233" y="1668" width="2" height="15" fill="rgb(232,211,51)"/><text x="236.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.14%)</title><rect x="233" y="1684" width="2" height="15" fill="rgb(205,10,27)"/><text x="236.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="233" y="1700" width="2" height="15" fill="rgb(218,198,24)"/><text x="236.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="233" y="1716" width="2" height="15" fill="rgb(226,41,30)"/><text x="236.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="233" y="1732" width="2" height="15" fill="rgb(215,41,0)"/><text x="236.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="233" y="1748" width="2" height="15" fill="rgb(206,39,14)"/><text x="236.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="233" y="1764" width="2" height="15" fill="rgb(237,41,52)"/><text x="236.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.14%)</title><rect x="233" y="1780" width="2" height="15" fill="rgb(243,142,34)"/><text x="236.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.14%)</title><rect x="233" y="1796" width="2" height="15" fill="rgb(207,108,15)"/><text x="236.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:743) (1 samples, 0.14%)</title><rect x="233" y="1812" width="2" height="15" fill="rgb(241,99,3)"/><text x="236.00" y="1822.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.42%)</title><rect x="232" y="916" width="5" height="15" fill="rgb(214,44,39)"/><text x="235.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="232" y="932" width="5" height="15" fill="rgb(216,155,10)"/><text x="235.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="232" y="948" width="5" height="15" fill="rgb(237,9,0)"/><text x="235.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="232" y="964" width="5" height="15" fill="rgb(226,183,49)"/><text x="235.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="232" y="980" width="5" height="15" fill="rgb(205,3,8)"/><text x="235.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="232" y="996" width="5" height="15" fill="rgb(221,31,5)"/><text x="235.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 0.42%)</title><rect x="232" y="1012" width="5" height="15" fill="rgb(216,44,39)"/><text x="235.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="232" y="1028" width="5" height="15" fill="rgb(244,61,33)"/><text x="235.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="232" y="1044" width="5" height="15" fill="rgb(224,86,27)"/><text x="235.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="232" y="1060" width="5" height="15" fill="rgb(236,131,11)"/><text x="235.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="232" y="1076" width="5" height="15" fill="rgb(214,208,2)"/><text x="235.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="232" y="1092" width="5" height="15" fill="rgb(210,226,46)"/><text x="235.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.28%)</title><rect x="233" y="1108" width="4" height="15" fill="rgb(213,79,28)"/><text x="236.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="233" y="1124" width="4" height="15" fill="rgb(216,31,54)"/><text x="236.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="233" y="1140" width="4" height="15" fill="rgb(229,2,33)"/><text x="236.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="233" y="1156" width="4" height="15" fill="rgb(213,35,10)"/><text x="236.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="233" y="1172" width="4" height="15" fill="rgb(247,54,46)"/><text x="236.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="233" y="1188" width="4" height="15" fill="rgb(211,38,43)"/><text x="236.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.28%)</title><rect x="233" y="1204" width="4" height="15" fill="rgb(230,104,47)"/><text x="236.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="233" y="1220" width="4" height="15" fill="rgb(236,109,27)"/><text x="236.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="233" y="1236" width="4" height="15" fill="rgb(235,169,38)"/><text x="236.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="233" y="1252" width="4" height="15" fill="rgb(209,211,0)"/><text x="236.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="233" y="1268" width="4" height="15" fill="rgb(223,131,49)"/><text x="236.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="233" y="1284" width="4" height="15" fill="rgb(222,139,54)"/><text x="236.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.28%)</title><rect x="233" y="1300" width="4" height="15" fill="rgb(217,158,11)"/><text x="236.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="233" y="1316" width="4" height="15" fill="rgb(215,25,25)"/><text x="236.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="233" y="1332" width="4" height="15" fill="rgb(232,12,45)"/><text x="236.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="233" y="1348" width="4" height="15" fill="rgb(241,32,7)"/><text x="236.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="233" y="1364" width="4" height="15" fill="rgb(213,118,3)"/><text x="236.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="233" y="1380" width="4" height="15" fill="rgb(230,56,18)"/><text x="236.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.28%)</title><rect x="233" y="1396" width="4" height="15" fill="rgb(222,164,35)"/><text x="236.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.28%)</title><rect x="233" y="1412" width="4" height="15" fill="rgb(219,23,14)"/><text x="236.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.28%)</title><rect x="233" y="1428" width="4" height="15" fill="rgb(214,158,12)"/><text x="236.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.28%)</title><rect x="233" y="1444" width="4" height="15" fill="rgb(238,73,14)"/><text x="236.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.28%)</title><rect x="233" y="1460" width="4" height="15" fill="rgb(245,132,31)"/><text x="236.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.28%)</title><rect x="233" y="1476" width="4" height="15" fill="rgb(235,160,21)"/><text x="236.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.14%)</title><rect x="235" y="1492" width="2" height="15" fill="rgb(238,153,51)"/><text x="238.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="235" y="1508" width="2" height="15" fill="rgb(228,79,4)"/><text x="238.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.14%)</title><rect x="235" y="1524" width="2" height="15" fill="rgb(250,130,5)"/><text x="238.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="235" y="1540" width="2" height="15" fill="rgb(242,106,26)"/><text x="238.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="235" y="1556" width="2" height="15" fill="rgb(227,128,1)"/><text x="238.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="235" y="1572" width="2" height="15" fill="rgb(244,24,23)"/><text x="238.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="235" y="1588" width="2" height="15" fill="rgb(226,68,8)"/><text x="238.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="235" y="1604" width="2" height="15" fill="rgb(214,39,41)"/><text x="238.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="235" y="1620" width="2" height="15" fill="rgb(215,158,52)"/><text x="238.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.14%)</title><rect x="235" y="1636" width="2" height="15" fill="rgb(245,19,20)"/><text x="238.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="235" y="1652" width="2" height="15" fill="rgb(239,138,25)"/><text x="238.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="235" y="1668" width="2" height="15" fill="rgb(236,85,53)"/><text x="238.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="235" y="1684" width="2" height="15" fill="rgb(222,86,25)"/><text x="238.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="235" y="1700" width="2" height="15" fill="rgb(239,185,45)"/><text x="238.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="235" y="1716" width="2" height="15" fill="rgb(246,221,15)"/><text x="238.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="235" y="1732" width="2" height="15" fill="rgb(240,198,27)"/><text x="238.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="235" y="1748" width="2" height="15" fill="rgb(242,17,47)"/><text x="238.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.14%)</title><rect x="235" y="1764" width="2" height="15" fill="rgb(233,68,44)"/><text x="238.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="235" y="1780" width="2" height="15" fill="rgb(231,114,48)"/><text x="238.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="235" y="1796" width="2" height="15" fill="rgb(239,149,16)"/><text x="238.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="235" y="1812" width="2" height="15" fill="rgb(213,48,53)"/><text x="238.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="235" y="1828" width="2" height="15" fill="rgb(226,34,11)"/><text x="238.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="235" y="1844" width="2" height="15" fill="rgb(207,207,39)"/><text x="238.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.14%)</title><rect x="235" y="1860" width="2" height="15" fill="rgb(242,64,50)"/><text x="238.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="235" y="1876" width="2" height="15" fill="rgb(223,86,29)"/><text x="238.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="235" y="1892" width="2" height="15" fill="rgb(250,17,40)"/><text x="238.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="235" y="1908" width="2" height="15" fill="rgb(242,5,34)"/><text x="238.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.14%)</title><rect x="235" y="1924" width="2" height="15" fill="rgb(241,52,36)"/><text x="238.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.14%)</title><rect x="235" y="1940" width="2" height="15" fill="rgb(248,31,8)"/><text x="238.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.14%)</title><rect x="235" y="1956" width="2" height="15" fill="rgb(230,178,33)"/><text x="238.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 0.56%)</title><rect x="232" y="436" width="6" height="15" fill="rgb(240,32,9)"/><text x="235.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.56%)</title><rect x="232" y="452" width="6" height="15" fill="rgb(228,169,43)"/><text x="235.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.56%)</title><rect x="232" y="468" width="6" height="15" fill="rgb(213,49,13)"/><text x="235.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.56%)</title><rect x="232" y="484" width="6" height="15" fill="rgb(216,102,39)"/><text x="235.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.56%)</title><rect x="232" y="500" width="6" height="15" fill="rgb(229,126,52)"/><text x="235.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.56%)</title><rect x="232" y="516" width="6" height="15" fill="rgb(230,124,11)"/><text x="235.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 0.56%)</title><rect x="232" y="532" width="6" height="15" fill="rgb(250,147,7)"/><text x="235.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.56%)</title><rect x="232" y="548" width="6" height="15" fill="rgb(232,123,47)"/><text x="235.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.56%)</title><rect x="232" y="564" width="6" height="15" fill="rgb(216,26,19)"/><text x="235.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.56%)</title><rect x="232" y="580" width="6" height="15" fill="rgb(208,126,44)"/><text x="235.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.56%)</title><rect x="232" y="596" width="6" height="15" fill="rgb(228,45,5)"/><text x="235.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.56%)</title><rect x="232" y="612" width="6" height="15" fill="rgb(223,187,25)"/><text x="235.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 0.56%)</title><rect x="232" y="628" width="6" height="15" fill="rgb(242,84,9)"/><text x="235.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.56%)</title><rect x="232" y="644" width="6" height="15" fill="rgb(223,96,3)"/><text x="235.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.56%)</title><rect x="232" y="660" width="6" height="15" fill="rgb(224,79,8)"/><text x="235.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.56%)</title><rect x="232" y="676" width="6" height="15" fill="rgb(206,26,11)"/><text x="235.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.56%)</title><rect x="232" y="692" width="6" height="15" fill="rgb(219,158,34)"/><text x="235.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.56%)</title><rect x="232" y="708" width="6" height="15" fill="rgb(250,211,12)"/><text x="235.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (4 samples, 0.56%)</title><rect x="232" y="724" width="6" height="15" fill="rgb(245,167,4)"/><text x="235.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.56%)</title><rect x="232" y="740" width="6" height="15" fill="rgb(240,86,26)"/><text x="235.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.56%)</title><rect x="232" y="756" width="6" height="15" fill="rgb(210,55,20)"/><text x="235.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.56%)</title><rect x="232" y="772" width="6" height="15" fill="rgb(240,109,45)"/><text x="235.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.56%)</title><rect x="232" y="788" width="6" height="15" fill="rgb(227,168,29)"/><text x="235.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.56%)</title><rect x="232" y="804" width="6" height="15" fill="rgb(211,46,43)"/><text x="235.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (4 samples, 0.56%)</title><rect x="232" y="820" width="6" height="15" fill="rgb(219,228,10)"/><text x="235.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.56%)</title><rect x="232" y="836" width="6" height="15" fill="rgb(251,226,4)"/><text x="235.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.56%)</title><rect x="232" y="852" width="6" height="15" fill="rgb(233,146,24)"/><text x="235.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.56%)</title><rect x="232" y="868" width="6" height="15" fill="rgb(230,228,11)"/><text x="235.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.56%)</title><rect x="232" y="884" width="6" height="15" fill="rgb(229,178,5)"/><text x="235.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.56%)</title><rect x="232" y="900" width="6" height="15" fill="rgb(215,218,25)"/><text x="235.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:47) (1 samples, 0.14%)</title><rect x="237" y="916" width="1" height="15" fill="rgb(228,149,41)"/><text x="240.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="237" y="932" width="1" height="15" fill="rgb(205,28,21)"/><text x="240.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="237" y="948" width="1" height="15" fill="rgb(217,52,1)"/><text x="240.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="237" y="964" width="1" height="15" fill="rgb(232,188,3)"/><text x="240.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="237" y="980" width="1" height="15" fill="rgb(206,85,31)"/><text x="240.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="237" y="996" width="1" height="15" fill="rgb(225,179,8)"/><text x="240.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/groupby.py:2506) (1 samples, 0.14%)</title><rect x="237" y="1012" width="1" height="15" fill="rgb(217,158,10)"/><text x="240.00" y="1022.50"></text></g><g><title>_add_numeric_operations (pandas/core/groupby/groupby.py:1424) (1 samples, 0.14%)</title><rect x="237" y="1028" width="1" height="15" fill="rgb(208,205,48)"/><text x="240.00" y="1038.50"></text></g><g><title>groupby_function (pandas/core/groupby/groupby.py:1388) (1 samples, 0.14%)</title><rect x="237" y="1044" width="1" height="15" fill="rgb(254,24,47)"/><text x="240.00" y="1054.50"></text></g><g><title>set_function_name (pandas/compat/__init__.py:35) (1 samples, 0.14%)</title><rect x="237" y="1060" width="1" height="15" fill="rgb(238,36,26)"/><text x="240.00" y="1070.50"></text></g><g><title>root (&lt;template&gt;:133) (1 samples, 0.14%)</title><rect x="238" y="1572" width="2" height="15" fill="rgb(210,222,47)"/><text x="241.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.14%)</title><rect x="238" y="1588" width="2" height="15" fill="rgb(219,218,16)"/><text x="241.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="238" y="1604" width="2" height="15" fill="rgb(223,57,14)"/><text x="241.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="238" y="1620" width="2" height="15" fill="rgb(247,31,0)"/><text x="241.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="238" y="1636" width="2" height="15" fill="rgb(225,115,5)"/><text x="241.00" y="1646.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.28%)</title><rect x="238" y="1460" width="4" height="15" fill="rgb(225,65,21)"/><text x="241.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.28%)</title><rect x="238" y="1476" width="4" height="15" fill="rgb(230,138,52)"/><text x="241.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.28%)</title><rect x="238" y="1492" width="4" height="15" fill="rgb(218,92,23)"/><text x="241.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.28%)</title><rect x="238" y="1508" width="4" height="15" fill="rgb(220,198,3)"/><text x="241.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.28%)</title><rect x="238" y="1524" width="4" height="15" fill="rgb(236,91,40)"/><text x="241.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.28%)</title><rect x="238" y="1540" width="4" height="15" fill="rgb(206,89,2)"/><text x="241.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.28%)</title><rect x="238" y="1556" width="4" height="15" fill="rgb(221,13,21)"/><text x="241.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:41) (1 samples, 0.14%)</title><rect x="240" y="1572" width="2" height="15" fill="rgb(240,201,44)"/><text x="243.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:4) (21 samples, 2.93%)</title><rect x="209" y="52" width="34" height="15" fill="rgb(246,200,38)"/><text x="212.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 2.93%)</title><rect x="209" y="68" width="34" height="15" fill="rgb(220,120,13)"/><text x="212.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 2.93%)</title><rect x="209" y="84" width="34" height="15" fill="rgb(235,67,24)"/><text x="212.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 2.93%)</title><rect x="209" y="100" width="34" height="15" fill="rgb(228,114,43)"/><text x="212.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 2.93%)</title><rect x="209" y="116" width="34" height="15" fill="rgb(249,147,32)"/><text x="212.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 2.93%)</title><rect x="209" y="132" width="34" height="15" fill="rgb(209,172,30)"/><text x="212.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (8 samples, 1.12%)</title><rect x="230" y="148" width="13" height="15" fill="rgb(235,205,8)"/><text x="233.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.12%)</title><rect x="230" y="164" width="13" height="15" fill="rgb(226,73,44)"/><text x="233.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.12%)</title><rect x="230" y="180" width="13" height="15" fill="rgb(213,159,27)"/><text x="233.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.12%)</title><rect x="230" y="196" width="13" height="15" fill="rgb(216,75,13)"/><text x="233.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.12%)</title><rect x="230" y="212" width="13" height="15" fill="rgb(235,164,45)"/><text x="233.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.12%)</title><rect x="230" y="228" width="13" height="15" fill="rgb(244,68,46)"/><text x="233.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 0.98%)</title><rect x="232" y="244" width="11" height="15" fill="rgb(251,198,33)"/><text x="235.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.98%)</title><rect x="232" y="260" width="11" height="15" fill="rgb(217,104,18)"/><text x="235.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.98%)</title><rect x="232" y="276" width="11" height="15" fill="rgb(213,49,21)"/><text x="235.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.98%)</title><rect x="232" y="292" width="11" height="15" fill="rgb(246,56,2)"/><text x="235.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.98%)</title><rect x="232" y="308" width="11" height="15" fill="rgb(216,132,53)"/><text x="235.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.98%)</title><rect x="232" y="324" width="11" height="15" fill="rgb(230,153,31)"/><text x="235.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 0.98%)</title><rect x="232" y="340" width="11" height="15" fill="rgb(237,72,48)"/><text x="235.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 0.98%)</title><rect x="232" y="356" width="11" height="15" fill="rgb(227,218,16)"/><text x="235.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 0.98%)</title><rect x="232" y="372" width="11" height="15" fill="rgb(223,129,34)"/><text x="235.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 0.98%)</title><rect x="232" y="388" width="11" height="15" fill="rgb(237,180,39)"/><text x="235.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 0.98%)</title><rect x="232" y="404" width="11" height="15" fill="rgb(217,122,43)"/><text x="235.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 0.98%)</title><rect x="232" y="420" width="11" height="15" fill="rgb(214,229,9)"/><text x="235.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.42%)</title><rect x="238" y="436" width="5" height="15" fill="rgb(221,49,35)"/><text x="241.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="452" width="5" height="15" fill="rgb(214,82,42)"/><text x="241.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.42%)</title><rect x="238" y="468" width="5" height="15" fill="rgb(230,110,40)"/><text x="241.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="484" width="5" height="15" fill="rgb(234,105,6)"/><text x="241.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="500" width="5" height="15" fill="rgb(233,60,2)"/><text x="241.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="516" width="5" height="15" fill="rgb(209,168,11)"/><text x="241.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="532" width="5" height="15" fill="rgb(248,204,38)"/><text x="241.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="548" width="5" height="15" fill="rgb(220,137,52)"/><text x="241.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="564" width="5" height="15" fill="rgb(223,109,23)"/><text x="241.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.42%)</title><rect x="238" y="580" width="5" height="15" fill="rgb(223,34,5)"/><text x="241.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="596" width="5" height="15" fill="rgb(220,93,33)"/><text x="241.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="612" width="5" height="15" fill="rgb(212,116,32)"/><text x="241.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="628" width="5" height="15" fill="rgb(245,88,43)"/><text x="241.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="644" width="5" height="15" fill="rgb(236,213,30)"/><text x="241.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="660" width="5" height="15" fill="rgb(248,95,5)"/><text x="241.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.42%)</title><rect x="238" y="676" width="5" height="15" fill="rgb(223,171,37)"/><text x="241.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="692" width="5" height="15" fill="rgb(210,223,6)"/><text x="241.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="708" width="5" height="15" fill="rgb(233,198,8)"/><text x="241.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="724" width="5" height="15" fill="rgb(246,218,29)"/><text x="241.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="740" width="5" height="15" fill="rgb(216,174,22)"/><text x="241.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="756" width="5" height="15" fill="rgb(222,15,9)"/><text x="241.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.42%)</title><rect x="238" y="772" width="5" height="15" fill="rgb(243,54,22)"/><text x="241.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="788" width="5" height="15" fill="rgb(209,137,30)"/><text x="241.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="804" width="5" height="15" fill="rgb(215,91,50)"/><text x="241.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="820" width="5" height="15" fill="rgb(239,126,2)"/><text x="241.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="836" width="5" height="15" fill="rgb(223,87,53)"/><text x="241.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="852" width="5" height="15" fill="rgb(244,58,44)"/><text x="241.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.42%)</title><rect x="238" y="868" width="5" height="15" fill="rgb(229,136,17)"/><text x="241.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="884" width="5" height="15" fill="rgb(233,37,49)"/><text x="241.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.42%)</title><rect x="238" y="900" width="5" height="15" fill="rgb(239,162,25)"/><text x="241.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="916" width="5" height="15" fill="rgb(218,170,25)"/><text x="241.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="932" width="5" height="15" fill="rgb(241,100,24)"/><text x="241.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="948" width="5" height="15" fill="rgb(209,1,12)"/><text x="241.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="964" width="5" height="15" fill="rgb(248,12,48)"/><text x="241.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="980" width="5" height="15" fill="rgb(214,92,10)"/><text x="241.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="996" width="5" height="15" fill="rgb(241,125,35)"/><text x="241.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.42%)</title><rect x="238" y="1012" width="5" height="15" fill="rgb(234,131,46)"/><text x="241.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="1028" width="5" height="15" fill="rgb(224,130,10)"/><text x="241.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="1044" width="5" height="15" fill="rgb(239,56,6)"/><text x="241.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="1060" width="5" height="15" fill="rgb(207,127,53)"/><text x="241.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="1076" width="5" height="15" fill="rgb(224,166,45)"/><text x="241.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="1092" width="5" height="15" fill="rgb(248,224,15)"/><text x="241.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.42%)</title><rect x="238" y="1108" width="5" height="15" fill="rgb(251,148,33)"/><text x="241.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.42%)</title><rect x="238" y="1124" width="5" height="15" fill="rgb(237,184,27)"/><text x="241.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="1140" width="5" height="15" fill="rgb(214,35,27)"/><text x="241.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="1156" width="5" height="15" fill="rgb(224,42,54)"/><text x="241.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="1172" width="5" height="15" fill="rgb(212,166,12)"/><text x="241.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="1188" width="5" height="15" fill="rgb(214,57,54)"/><text x="241.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="1204" width="5" height="15" fill="rgb(221,137,42)"/><text x="241.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="1220" width="5" height="15" fill="rgb(219,151,46)"/><text x="241.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.42%)</title><rect x="238" y="1236" width="5" height="15" fill="rgb(233,32,41)"/><text x="241.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.42%)</title><rect x="238" y="1252" width="5" height="15" fill="rgb(252,200,18)"/><text x="241.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="1268" width="5" height="15" fill="rgb(252,150,30)"/><text x="241.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="1284" width="5" height="15" fill="rgb(248,25,1)"/><text x="241.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="1300" width="5" height="15" fill="rgb(246,158,52)"/><text x="241.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="1316" width="5" height="15" fill="rgb(248,78,54)"/><text x="241.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="1332" width="5" height="15" fill="rgb(252,83,30)"/><text x="241.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="1348" width="5" height="15" fill="rgb(214,220,0)"/><text x="241.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.42%)</title><rect x="238" y="1364" width="5" height="15" fill="rgb(249,224,21)"/><text x="241.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.42%)</title><rect x="238" y="1380" width="5" height="15" fill="rgb(217,7,19)"/><text x="241.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.42%)</title><rect x="238" y="1396" width="5" height="15" fill="rgb(237,2,3)"/><text x="241.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.42%)</title><rect x="238" y="1412" width="5" height="15" fill="rgb(254,78,25)"/><text x="241.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.42%)</title><rect x="238" y="1428" width="5" height="15" fill="rgb(237,6,24)"/><text x="241.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.42%)</title><rect x="238" y="1444" width="5" height="15" fill="rgb(241,127,48)"/><text x="241.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.14%)</title><rect x="242" y="1460" width="1" height="15" fill="rgb(243,158,40)"/><text x="245.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="242" y="1476" width="1" height="15" fill="rgb(235,80,36)"/><text x="245.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="242" y="1492" width="1" height="15" fill="rgb(238,86,6)"/><text x="245.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="242" y="1508" width="1" height="15" fill="rgb(253,22,50)"/><text x="245.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="242" y="1524" width="1" height="15" fill="rgb(209,152,53)"/><text x="245.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="242" y="1540" width="1" height="15" fill="rgb(215,127,52)"/><text x="245.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.14%)</title><rect x="242" y="1556" width="1" height="15" fill="rgb(248,197,24)"/><text x="245.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.14%)</title><rect x="242" y="1572" width="1" height="15" fill="rgb(243,146,23)"/><text x="245.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="242" y="1588" width="1" height="15" fill="rgb(227,15,21)"/><text x="245.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="242" y="1604" width="1" height="15" fill="rgb(249,39,6)"/><text x="245.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="242" y="1620" width="1" height="15" fill="rgb(232,172,44)"/><text x="245.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="242" y="1636" width="1" height="15" fill="rgb(206,132,20)"/><text x="245.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="242" y="1652" width="1" height="15" fill="rgb(229,212,14)"/><text x="245.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.14%)</title><rect x="242" y="1668" width="1" height="15" fill="rgb(236,140,21)"/><text x="245.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="242" y="1684" width="1" height="15" fill="rgb(250,229,0)"/><text x="245.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="242" y="1700" width="1" height="15" fill="rgb(229,84,41)"/><text x="245.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="242" y="1716" width="1" height="15" fill="rgb(231,194,19)"/><text x="245.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="242" y="1732" width="1" height="15" fill="rgb(212,50,32)"/><text x="245.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="242" y="1748" width="1" height="15" fill="rgb(219,63,46)"/><text x="245.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.14%)</title><rect x="242" y="1764" width="1" height="15" fill="rgb(208,188,16)"/><text x="245.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.14%)</title><rect x="242" y="1780" width="1" height="15" fill="rgb(253,3,17)"/><text x="245.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="242" y="1796" width="1" height="15" fill="rgb(211,90,44)"/><text x="245.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.14%)</title><rect x="242" y="1812" width="1" height="15" fill="rgb(224,192,40)"/><text x="245.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.14%)</title><rect x="242" y="1828" width="1" height="15" fill="rgb(231,101,0)"/><text x="245.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.14%)</title><rect x="242" y="1844" width="1" height="15" fill="rgb(246,135,54)"/><text x="245.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.14%)</title><rect x="242" y="1860" width="1" height="15" fill="rgb(254,180,23)"/><text x="245.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.14%)</title><rect x="242" y="1876" width="1" height="15" fill="rgb(231,47,8)"/><text x="245.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.14%)</title><rect x="242" y="1892" width="1" height="15" fill="rgb(242,0,28)"/><text x="245.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.14%)</title><rect x="242" y="1908" width="1" height="15" fill="rgb(219,203,33)"/><text x="245.00" y="1918.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.14%)</title><rect x="242" y="1924" width="1" height="15" fill="rgb(210,36,25)"/><text x="245.00" y="1934.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:187) (1 samples, 0.14%)</title><rect x="242" y="1940" width="1" height="15" fill="rgb(220,32,38)"/><text x="245.00" y="1950.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:28) (1 samples, 0.14%)</title><rect x="243" y="84" width="2" height="15" fill="rgb(229,76,37)"/><text x="246.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.14%)</title><rect x="243" y="100" width="2" height="15" fill="rgb(222,14,25)"/><text x="246.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.14%)</title><rect x="243" y="116" width="2" height="15" fill="rgb(230,120,19)"/><text x="246.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.14%)</title><rect x="243" y="132" width="2" height="15" fill="rgb(233,156,9)"/><text x="246.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.14%)</title><rect x="243" y="148" width="2" height="15" fill="rgb(239,13,12)"/><text x="246.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.14%)</title><rect x="243" y="164" width="2" height="15" fill="rgb(229,34,17)"/><text x="246.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:1011) (1 samples, 0.14%)</title><rect x="243" y="180" width="2" height="15" fill="rgb(212,112,26)"/><text x="246.00" y="190.50"></text></g><g><title>make_graph (onnx/helper.py:90) (1 samples, 0.14%)</title><rect x="243" y="196" width="2" height="15" fill="rgb(230,50,3)"/><text x="246.00" y="206.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="212" width="2" height="15" fill="rgb(221,113,30)"/><text x="246.00" y="222.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="228" width="2" height="15" fill="rgb(233,58,3)"/><text x="246.00" y="238.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="244" width="2" height="15" fill="rgb(210,186,29)"/><text x="246.00" y="254.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="260" width="2" height="15" fill="rgb(214,197,45)"/><text x="246.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="276" width="2" height="15" fill="rgb(250,30,11)"/><text x="246.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="292" width="2" height="15" fill="rgb(221,49,31)"/><text x="246.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::AddFloat (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="308" width="2" height="15" fill="rgb(254,122,1)"/><text x="246.00" y="318.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="324" width="2" height="15" fill="rgb(210,67,39)"/><text x="246.00" y="334.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="243" y="340" width="2" height="15" fill="rgb(219,53,18)"/><text x="246.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:18) (1 samples, 0.14%)</title><rect x="245" y="100" width="1" height="15" fill="rgb(217,72,8)"/><text x="248.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.14%)</title><rect x="245" y="116" width="1" height="15" fill="rgb(247,117,27)"/><text x="248.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.14%)</title><rect x="245" y="132" width="1" height="15" fill="rgb(249,129,22)"/><text x="248.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.14%)</title><rect x="245" y="148" width="1" height="15" fill="rgb(254,25,13)"/><text x="248.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.14%)</title><rect x="245" y="164" width="1" height="15" fill="rgb(211,194,34)"/><text x="248.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.14%)</title><rect x="245" y="180" width="1" height="15" fill="rgb(212,133,53)"/><text x="248.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.14%)</title><rect x="245" y="196" width="1" height="15" fill="rgb(234,136,10)"/><text x="248.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.14%)</title><rect x="245" y="212" width="1" height="15" fill="rgb(223,168,24)"/><text x="248.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (1 samples, 0.14%)</title><rect x="245" y="228" width="1" height="15" fill="rgb(209,159,15)"/><text x="248.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.14%)</title><rect x="245" y="244" width="1" height="15" fill="rgb(209,177,15)"/><text x="248.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.14%)</title><rect x="245" y="260" width="1" height="15" fill="rgb(251,99,10)"/><text x="248.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.14%)</title><rect x="245" y="276" width="1" height="15" fill="rgb(221,60,44)"/><text x="248.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.14%)</title><rect x="245" y="292" width="1" height="15" fill="rgb(220,103,46)"/><text x="248.00" y="302.50"></text></g><g><title>0x7f9bc550c345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="245" y="308" width="1" height="15" fill="rgb(254,45,45)"/><text x="248.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.14%)</title><rect x="250" y="116" width="1" height="15" fill="rgb(225,118,19)"/><text x="253.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.14%)</title><rect x="250" y="132" width="1" height="15" fill="rgb(210,89,25)"/><text x="253.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.14%)</title><rect x="250" y="148" width="1" height="15" fill="rgb(231,122,29)"/><text x="253.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.14%)</title><rect x="255" y="164" width="1" height="15" fill="rgb(243,202,9)"/><text x="258.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.28%)</title><rect x="260" y="180" width="3" height="15" fill="rgb(253,151,2)"/><text x="263.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.14%)</title><rect x="268" y="260" width="2" height="15" fill="rgb(243,78,40)"/><text x="271.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.14%)</title><rect x="268" y="276" width="2" height="15" fill="rgb(236,187,46)"/><text x="271.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.14%)</title><rect x="270" y="308" width="1" height="15" fill="rgb(220,226,32)"/><text x="273.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.14%)</title><rect x="271" y="308" width="2" height="15" fill="rgb(216,164,54)"/><text x="274.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.14%)</title><rect x="271" y="324" width="2" height="15" fill="rgb(243,123,5)"/><text x="274.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.14%)</title><rect x="271" y="340" width="2" height="15" fill="rgb(236,210,31)"/><text x="274.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.14%)</title><rect x="271" y="356" width="2" height="15" fill="rgb(254,29,21)"/><text x="274.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.14%)</title><rect x="271" y="372" width="2" height="15" fill="rgb(220,217,13)"/><text x="274.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.14%)</title><rect x="271" y="388" width="2" height="15" fill="rgb(245,43,4)"/><text x="274.00" y="398.50"></text></g><g><title>allocate_reduce_result (reduction.c:58) (1 samples, 0.14%)</title><rect x="273" y="388" width="1" height="15" fill="rgb(250,159,28)"/><text x="276.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.14%)</title><rect x="273" y="404" width="1" height="15" fill="rgb(224,164,26)"/><text x="276.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.28%)</title><rect x="273" y="356" width="3" height="15" fill="rgb(232,217,2)"/><text x="276.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.28%)</title><rect x="273" y="372" width="3" height="15" fill="rgb(230,103,41)"/><text x="276.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.14%)</title><rect x="274" y="388" width="2" height="15" fill="rgb(242,129,30)"/><text x="277.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.14%)</title><rect x="274" y="404" width="2" height="15" fill="rgb(218,179,12)"/><text x="277.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.14%)</title><rect x="274" y="420" width="2" height="15" fill="rgb(242,169,41)"/><text x="277.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.14%)</title><rect x="274" y="436" width="2" height="15" fill="rgb(254,84,4)"/><text x="277.00" y="446.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:263) (1 samples, 0.14%)</title><rect x="276" y="388" width="2" height="15" fill="rgb(247,228,19)"/><text x="279.00" y="398.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.14%)</title><rect x="276" y="404" width="2" height="15" fill="rgb(229,11,13)"/><text x="279.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:36) (1 samples, 0.14%)</title><rect x="278" y="404" width="1" height="15" fill="rgb(224,60,13)"/><text x="281.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.42%)</title><rect x="276" y="356" width="5" height="15" fill="rgb(241,156,33)"/><text x="279.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.42%)</title><rect x="276" y="372" width="5" height="15" fill="rgb(243,146,19)"/><text x="279.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.28%)</title><rect x="278" y="388" width="3" height="15" fill="rgb(235,67,29)"/><text x="281.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.14%)</title><rect x="279" y="404" width="2" height="15" fill="rgb(224,112,47)"/><text x="282.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.14%)</title><rect x="279" y="420" width="2" height="15" fill="rgb(225,204,27)"/><text x="282.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3483) (1 samples, 0.14%)</title><rect x="281" y="372" width="2" height="15" fill="rgb(252,51,8)"/><text x="284.00" y="382.50"></text></g><g><title>NpyIter_GetDescrArray (nditer_api.c:1082) (1 samples, 0.14%)</title><rect x="281" y="388" width="2" height="15" fill="rgb(218,206,49)"/><text x="284.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.14%)</title><rect x="288" y="388" width="1" height="15" fill="rgb(217,40,49)"/><text x="291.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.14%)</title><rect x="289" y="388" width="2" height="15" fill="rgb(237,87,53)"/><text x="292.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.14%)</title><rect x="291" y="404" width="2" height="15" fill="rgb(216,133,20)"/><text x="294.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.28%)</title><rect x="291" y="388" width="3" height="15" fill="rgb(245,37,37)"/><text x="294.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.14%)</title><rect x="293" y="404" width="1" height="15" fill="rgb(222,198,43)"/><text x="296.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.14%)</title><rect x="294" y="388" width="2" height="15" fill="rgb(241,54,8)"/><text x="297.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 1.26%)</title><rect x="283" y="372" width="15" height="15" fill="rgb(226,130,49)"/><text x="286.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.14%)</title><rect x="296" y="388" width="2" height="15" fill="rgb(221,187,8)"/><text x="299.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (18 samples, 2.51%)</title><rect x="270" y="260" width="29" height="15" fill="rgb(251,96,36)"/><text x="273.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (18 samples, 2.51%)</title><rect x="270" y="276" width="29" height="15" fill="rgb(249,200,38)"/><text x="273.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 2.51%)</title><rect x="270" y="292" width="29" height="15" fill="rgb(213,140,19)"/><text x="273.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (16 samples, 2.23%)</title><rect x="273" y="308" width="26" height="15" fill="rgb(253,217,24)"/><text x="276.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 2.23%)</title><rect x="273" y="324" width="26" height="15" fill="rgb(215,128,43)"/><text x="276.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (16 samples, 2.23%)</title><rect x="273" y="340" width="26" height="15" fill="rgb(226,139,45)"/><text x="276.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (11 samples, 1.53%)</title><rect x="281" y="356" width="18" height="15" fill="rgb(211,10,9)"/><text x="284.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.14%)</title><rect x="298" y="372" width="1" height="15" fill="rgb(214,129,19)"/><text x="301.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.14%)</title><rect x="299" y="308" width="2" height="15" fill="rgb(229,26,47)"/><text x="302.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (1 samples, 0.14%)</title><rect x="299" y="324" width="2" height="15" fill="rgb(208,101,48)"/><text x="302.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (1 samples, 0.14%)</title><rect x="299" y="340" width="2" height="15" fill="rgb(246,175,36)"/><text x="302.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (1 samples, 0.14%)</title><rect x="299" y="356" width="2" height="15" fill="rgb(215,208,5)"/><text x="302.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.14%)</title><rect x="299" y="372" width="2" height="15" fill="rgb(248,105,47)"/><text x="302.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (22 samples, 3.07%)</title><rect x="266" y="244" width="36" height="15" fill="rgb(242,221,29)"/><text x="269.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.28%)</title><rect x="299" y="260" width="3" height="15" fill="rgb(219,55,28)"/><text x="302.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.28%)</title><rect x="299" y="276" width="3" height="15" fill="rgb(227,121,43)"/><text x="302.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.28%)</title><rect x="299" y="292" width="3" height="15" fill="rgb(207,205,28)"/><text x="302.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.14%)</title><rect x="301" y="308" width="1" height="15" fill="rgb(225,91,42)"/><text x="304.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.14%)</title><rect x="304" y="260" width="2" height="15" fill="rgb(228,92,24)"/><text x="307.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.14%)</title><rect x="304" y="276" width="2" height="15" fill="rgb(247,98,18)"/><text x="307.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:45) (1 samples, 0.14%)</title><rect x="304" y="292" width="2" height="15" fill="rgb(206,72,44)"/><text x="307.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.14%)</title><rect x="306" y="276" width="1" height="15" fill="rgb(217,17,22)"/><text x="309.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1230) (1 samples, 0.14%)</title><rect x="306" y="292" width="1" height="15" fill="rgb(240,138,39)"/><text x="309.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.14%)</title><rect x="307" y="276" width="2" height="15" fill="rgb(230,144,3)"/><text x="310.00" y="286.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.14%)</title><rect x="307" y="292" width="2" height="15" fill="rgb(225,51,23)"/><text x="310.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.14%)</title><rect x="309" y="292" width="2" height="15" fill="rgb(212,139,47)"/><text x="312.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.14%)</title><rect x="309" y="308" width="2" height="15" fill="rgb(237,218,18)"/><text x="312.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.14%)</title><rect x="311" y="308" width="1" height="15" fill="rgb(222,183,47)"/><text x="314.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.14%)</title><rect x="311" y="324" width="1" height="15" fill="rgb(206,101,42)"/><text x="314.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.14%)</title><rect x="311" y="340" width="1" height="15" fill="rgb(218,183,34)"/><text x="314.00" y="350.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.14%)</title><rect x="312" y="324" width="2" height="15" fill="rgb(245,16,1)"/><text x="315.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1717) (1 samples, 0.14%)</title><rect x="312" y="340" width="2" height="15" fill="rgb(235,187,27)"/><text x="315.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.28%)</title><rect x="314" y="356" width="3" height="15" fill="rgb(206,157,16)"/><text x="317.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.14%)</title><rect x="317" y="356" width="2" height="15" fill="rgb(228,188,36)"/><text x="320.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.70%)</title><rect x="312" y="308" width="9" height="15" fill="rgb(236,34,16)"/><text x="315.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.56%)</title><rect x="314" y="324" width="7" height="15" fill="rgb(205,2,47)"/><text x="317.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.56%)</title><rect x="314" y="340" width="7" height="15" fill="rgb(210,95,25)"/><text x="317.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.14%)</title><rect x="319" y="356" width="2" height="15" fill="rgb(252,147,27)"/><text x="322.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.14%)</title><rect x="319" y="372" width="2" height="15" fill="rgb(226,63,31)"/><text x="322.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 1.26%)</title><rect x="309" y="276" width="15" height="15" fill="rgb(212,163,47)"/><text x="312.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 1.12%)</title><rect x="311" y="292" width="13" height="15" fill="rgb(231,74,12)"/><text x="314.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.28%)</title><rect x="321" y="308" width="3" height="15" fill="rgb(209,111,42)"/><text x="324.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (2 samples, 0.28%)</title><rect x="321" y="324" width="3" height="15" fill="rgb(246,222,41)"/><text x="324.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (2 samples, 0.28%)</title><rect x="321" y="340" width="3" height="15" fill="rgb(247,31,42)"/><text x="324.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (2 samples, 0.28%)</title><rect x="321" y="356" width="3" height="15" fill="rgb(242,135,3)"/><text x="324.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.28%)</title><rect x="321" y="372" width="3" height="15" fill="rgb(230,144,39)"/><text x="324.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 1.67%)</title><rect x="306" y="260" width="19" height="15" fill="rgb(244,10,50)"/><text x="309.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3283) (1 samples, 0.14%)</title><rect x="324" y="276" width="1" height="15" fill="rgb(226,100,8)"/><text x="327.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (38 samples, 5.30%)</title><rect x="265" y="196" width="62" height="15" fill="rgb(205,122,49)"/><text x="268.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (38 samples, 5.30%)</title><rect x="265" y="212" width="62" height="15" fill="rgb(244,71,9)"/><text x="268.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (38 samples, 5.30%)</title><rect x="265" y="228" width="62" height="15" fill="rgb(224,13,38)"/><text x="268.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (15 samples, 2.09%)</title><rect x="302" y="244" width="25" height="15" fill="rgb(226,65,11)"/><text x="305.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.14%)</title><rect x="325" y="260" width="2" height="15" fill="rgb(221,28,27)"/><text x="328.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1967) (1 samples, 0.14%)</title><rect x="325" y="276" width="2" height="15" fill="rgb(238,0,54)"/><text x="328.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.14%)</title><rect x="327" y="196" width="2" height="15" fill="rgb(211,78,51)"/><text x="330.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.14%)</title><rect x="329" y="244" width="1" height="15" fill="rgb(240,193,43)"/><text x="332.00" y="254.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:26) (1 samples, 0.14%)</title><rect x="330" y="244" width="2" height="15" fill="rgb(205,41,2)"/><text x="333.00" y="254.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.28%)</title><rect x="334" y="276" width="3" height="15" fill="rgb(219,138,44)"/><text x="337.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (12 samples, 1.67%)</title><rect x="329" y="228" width="20" height="15" fill="rgb(218,219,41)"/><text x="332.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (10 samples, 1.39%)</title><rect x="332" y="244" width="17" height="15" fill="rgb(217,32,4)"/><text x="335.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (9 samples, 1.26%)</title><rect x="334" y="260" width="15" height="15" fill="rgb(227,107,48)"/><text x="337.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 0.98%)</title><rect x="337" y="276" width="12" height="15" fill="rgb(247,157,40)"/><text x="340.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.14%)</title><rect x="349" y="260" width="1" height="15" fill="rgb(212,18,23)"/><text x="352.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.14%)</title><rect x="349" y="276" width="1" height="15" fill="rgb(205,149,2)"/><text x="352.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.14%)</title><rect x="349" y="292" width="1" height="15" fill="rgb(207,147,29)"/><text x="352.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.14%)</title><rect x="352" y="340" width="1" height="15" fill="rgb(218,23,40)"/><text x="355.00" y="350.50"></text></g><g><title>0x7f9bda244d97 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="353" y="356" width="2" height="15" fill="rgb(224,144,31)"/><text x="356.00" y="366.50"></text></g><g><title>0x7f9bda244dbe (libc-2.29.so) (1 samples, 0.14%)</title><rect x="355" y="356" width="2" height="15" fill="rgb(215,11,47)"/><text x="358.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 0.70%)</title><rect x="350" y="292" width="8" height="15" fill="rgb(241,135,6)"/><text x="353.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 0.70%)</title><rect x="350" y="308" width="8" height="15" fill="rgb(228,32,17)"/><text x="353.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 0.70%)</title><rect x="350" y="324" width="8" height="15" fill="rgb(215,0,5)"/><text x="353.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.42%)</title><rect x="353" y="340" width="5" height="15" fill="rgb(240,183,29)"/><text x="356.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.14%)</title><rect x="357" y="356" width="1" height="15" fill="rgb(234,101,54)"/><text x="360.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 0.98%)</title><rect x="349" y="228" width="11" height="15" fill="rgb(212,88,34)"/><text x="352.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.98%)</title><rect x="349" y="244" width="11" height="15" fill="rgb(231,67,13)"/><text x="352.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 0.84%)</title><rect x="350" y="260" width="10" height="15" fill="rgb(244,96,38)"/><text x="353.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 0.84%)</title><rect x="350" y="276" width="10" height="15" fill="rgb(210,212,9)"/><text x="353.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.14%)</title><rect x="358" y="292" width="2" height="15" fill="rgb(239,149,25)"/><text x="361.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.14%)</title><rect x="358" y="308" width="2" height="15" fill="rgb(232,101,18)"/><text x="361.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.14%)</title><rect x="358" y="324" width="2" height="15" fill="rgb(241,155,23)"/><text x="361.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.14%)</title><rect x="358" y="340" width="2" height="15" fill="rgb(218,137,4)"/><text x="361.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.14%)</title><rect x="358" y="356" width="2" height="15" fill="rgb(249,188,32)"/><text x="361.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.14%)</title><rect x="362" y="260" width="1" height="15" fill="rgb(248,220,38)"/><text x="365.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1236) (1 samples, 0.14%)</title><rect x="362" y="276" width="1" height="15" fill="rgb(247,189,42)"/><text x="365.00" y="286.50"></text></g><g><title>solve_diophantine (mem_overlap.c:548) (1 samples, 0.14%)</title><rect x="363" y="324" width="2" height="15" fill="rgb(205,164,4)"/><text x="366.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="363" y="340" width="2" height="15" fill="rgb(222,117,16)"/><text x="366.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.28%)</title><rect x="363" y="276" width="4" height="15" fill="rgb(242,176,35)"/><text x="366.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.28%)</title><rect x="363" y="292" width="4" height="15" fill="rgb(239,157,28)"/><text x="366.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.28%)</title><rect x="363" y="308" width="4" height="15" fill="rgb(227,167,18)"/><text x="366.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.14%)</title><rect x="365" y="324" width="2" height="15" fill="rgb(226,24,25)"/><text x="368.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:382) (1 samples, 0.14%)</title><rect x="365" y="340" width="2" height="15" fill="rgb(236,82,37)"/><text x="368.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h:222) (1 samples, 0.14%)</title><rect x="365" y="356" width="2" height="15" fill="rgb(223,75,15)"/><text x="368.00" y="366.50"></text></g><g><title>0x7f9bc552e204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="367" y="324" width="1" height="15" fill="rgb(207,36,32)"/><text x="370.00" y="334.50"></text></g><g><title>0x7f9bc552e20c (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="368" y="324" width="2" height="15" fill="rgb(223,68,11)"/><text x="371.00" y="334.50"></text></g><g><title>0x7f9bc54ec890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.28%)</title><rect x="370" y="340" width="3" height="15" fill="rgb(217,49,2)"/><text x="373.00" y="350.50"></text></g><g><title>0x7f9bda3a3e00 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="390" y="356" width="1" height="15" fill="rgb(239,179,10)"/><text x="393.00" y="366.50"></text></g><g><title>0x7f9bda3a3e0e (libm-2.29.so) (3 samples, 0.42%)</title><rect x="391" y="356" width="5" height="15" fill="rgb(247,109,37)"/><text x="394.00" y="366.50"></text></g><g><title>0x7f9bda3a3e37 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="396" y="356" width="2" height="15" fill="rgb(237,169,9)"/><text x="399.00" y="366.50"></text></g><g><title>0x7f9bda3a3e4e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="398" y="356" width="2" height="15" fill="rgb(212,109,45)"/><text x="401.00" y="366.50"></text></g><g><title>0x7f9bc552e214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 2.79%)</title><rect x="370" y="324" width="33" height="15" fill="rgb(236,18,4)"/><text x="373.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (18 samples, 2.51%)</title><rect x="373" y="340" width="30" height="15" fill="rgb(242,184,36)"/><text x="376.00" y="350.50">ex..</text></g><g><title>0x7f9bda3a3e62 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="400" y="356" width="3" height="15" fill="rgb(237,212,33)"/><text x="403.00" y="366.50"></text></g><g><title>0x7f9bc552e224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="403" y="324" width="1" height="15" fill="rgb(214,48,43)"/><text x="406.00" y="334.50"></text></g><g><title>0x7f9bc550c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (32 samples, 4.46%)</title><rect x="367" y="308" width="52" height="15" fill="rgb(247,142,15)"/><text x="370.00" y="318.50">0x7f9..</text></g><g><title>0x7f9bc552e228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.26%)</title><rect x="404" y="324" width="15" height="15" fill="rgb(206,224,18)"/><text x="407.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (37 samples, 5.16%)</title><rect x="360" y="228" width="61" height="15" fill="rgb(208,98,4)"/><text x="363.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (36 samples, 5.02%)</title><rect x="362" y="244" width="59" height="15" fill="rgb(214,92,33)"/><text x="365.00" y="254.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (35 samples, 4.88%)</title><rect x="363" y="260" width="58" height="15" fill="rgb(206,224,44)"/><text x="366.00" y="270.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (33 samples, 4.60%)</title><rect x="367" y="276" width="54" height="15" fill="rgb(252,112,26)"/><text x="370.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (33 samples, 4.60%)</title><rect x="367" y="292" width="54" height="15" fill="rgb(251,42,37)"/><text x="370.00" y="302.50">trivi..</text></g><g><title>0x7f9bc550c345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="419" y="308" width="2" height="15" fill="rgb(226,137,43)"/><text x="422.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.28%)</title><rect x="424" y="388" width="4" height="15" fill="rgb(247,79,18)"/><text x="427.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.28%)</title><rect x="424" y="404" width="4" height="15" fill="rgb(246,201,44)"/><text x="427.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.28%)</title><rect x="424" y="420" width="4" height="15" fill="rgb(237,2,0)"/><text x="427.00" y="430.50"></text></g><g><title>0x7f9bda2262a3 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="426" y="436" width="2" height="15" fill="rgb(216,168,32)"/><text x="429.00" y="446.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (3 samples, 0.42%)</title><rect x="424" y="324" width="5" height="15" fill="rgb(235,62,50)"/><text x="427.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (3 samples, 0.42%)</title><rect x="424" y="340" width="5" height="15" fill="rgb(219,194,38)"/><text x="427.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (3 samples, 0.42%)</title><rect x="424" y="356" width="5" height="15" fill="rgb(234,211,43)"/><text x="427.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (3 samples, 0.42%)</title><rect x="424" y="372" width="5" height="15" fill="rgb(250,99,22)"/><text x="427.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.14%)</title><rect x="428" y="388" width="1" height="15" fill="rgb(231,1,32)"/><text x="431.00" y="398.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3089) (1 samples, 0.14%)</title><rect x="429" y="340" width="2" height="15" fill="rgb(251,73,45)"/><text x="432.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (3 samples, 0.42%)</title><rect x="429" y="324" width="5" height="15" fill="rgb(208,138,13)"/><text x="432.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (2 samples, 0.28%)</title><rect x="431" y="340" width="3" height="15" fill="rgb(211,98,6)"/><text x="434.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (9 samples, 1.26%)</title><rect x="421" y="228" width="15" height="15" fill="rgb(221,58,43)"/><text x="424.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (9 samples, 1.26%)</title><rect x="421" y="244" width="15" height="15" fill="rgb(229,38,5)"/><text x="424.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.12%)</title><rect x="423" y="260" width="13" height="15" fill="rgb(207,26,27)"/><text x="426.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (7 samples, 0.98%)</title><rect x="424" y="276" width="12" height="15" fill="rgb(235,67,3)"/><text x="427.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (7 samples, 0.98%)</title><rect x="424" y="292" width="12" height="15" fill="rgb(223,191,42)"/><text x="427.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (7 samples, 0.98%)</title><rect x="424" y="308" width="12" height="15" fill="rgb(209,84,41)"/><text x="427.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.14%)</title><rect x="434" y="324" width="2" height="15" fill="rgb(231,83,25)"/><text x="437.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (107 samples, 14.92%)</title><rect x="263" y="180" width="176" height="15" fill="rgb(222,10,27)"/><text x="266.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (67 samples, 9.34%)</title><rect x="329" y="196" width="110" height="15" fill="rgb(216,46,47)"/><text x="332.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (67 samples, 9.34%)</title><rect x="329" y="212" width="110" height="15" fill="rgb(221,22,33)"/><text x="332.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (2 samples, 0.28%)</title><rect x="436" y="228" width="3" height="15" fill="rgb(216,23,49)"/><text x="439.00" y="238.50"></text></g><g><title>0x7f9bda245120 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="437" y="244" width="2" height="15" fill="rgb(233,107,51)"/><text x="440.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (3 samples, 0.42%)</title><rect x="439" y="180" width="5" height="15" fill="rgb(251,209,0)"/><text x="442.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.14%)</title><rect x="444" y="180" width="2" height="15" fill="rgb(223,86,14)"/><text x="447.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.42%)</title><rect x="446" y="180" width="5" height="15" fill="rgb(220,12,27)"/><text x="449.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (119 samples, 16.60%)</title><rect x="256" y="164" width="196" height="15" fill="rgb(221,184,29)"/><text x="259.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.14%)</title><rect x="451" y="180" width="1" height="15" fill="rgb(238,95,25)"/><text x="454.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (123 samples, 17.15%)</title><rect x="251" y="132" width="203" height="15" fill="rgb(242,137,29)"/><text x="254.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (123 samples, 17.15%)</title><rect x="251" y="148" width="203" height="15" fill="rgb(234,93,18)"/><text x="254.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.14%)</title><rect x="452" y="164" width="2" height="15" fill="rgb(224,72,52)"/><text x="455.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.14%)</title><rect x="452" y="180" width="2" height="15" fill="rgb(229,64,28)"/><text x="455.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:45) (129 samples, 17.99%)</title><rect x="243" y="52" width="212" height="15" fill="rgb(219,58,38)"/><text x="246.00" y="62.50">&lt;module&gt; (bench_LogisticReg..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:44) (129 samples, 17.99%)</title><rect x="243" y="68" width="212" height="15" fill="rgb(217,114,3)"/><text x="246.00" y="78.50">profile_pyrt (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:29) (128 samples, 17.85%)</title><rect x="245" y="84" width="210" height="15" fill="rgb(218,82,22)"/><text x="248.00" y="94.50">setup_profile (bench_Logist..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:23) (127 samples, 17.71%)</title><rect x="246" y="100" width="209" height="15" fill="rgb(251,163,45)"/><text x="249.00" y="110.50">profile (bench_LogisticRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (124 samples, 17.29%)</title><rect x="251" y="116" width="204" height="15" fill="rgb(247,166,35)"/><text x="254.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.14%)</title><rect x="454" y="132" width="1" height="15" fill="rgb(246,203,53)"/><text x="457.00" y="142.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:28) (1 samples, 0.14%)</title><rect x="455" y="84" width="2" height="15" fill="rgb(220,210,9)"/><text x="458.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.14%)</title><rect x="455" y="100" width="2" height="15" fill="rgb(234,152,53)"/><text x="458.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.14%)</title><rect x="455" y="116" width="2" height="15" fill="rgb(207,69,43)"/><text x="458.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.14%)</title><rect x="455" y="132" width="2" height="15" fill="rgb(226,153,38)"/><text x="458.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.14%)</title><rect x="455" y="148" width="2" height="15" fill="rgb(221,126,20)"/><text x="458.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.14%)</title><rect x="455" y="164" width="2" height="15" fill="rgb(238,128,36)"/><text x="458.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.14%)</title><rect x="455" y="180" width="2" height="15" fill="rgb(218,221,16)"/><text x="458.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.14%)</title><rect x="455" y="196" width="2" height="15" fill="rgb(246,205,47)"/><text x="458.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.14%)</title><rect x="455" y="212" width="2" height="15" fill="rgb(253,197,17)"/><text x="458.00" y="222.50"></text></g><g><title>0x7f9b9a254ff9 (?) (1 samples, 0.14%)</title><rect x="455" y="228" width="2" height="15" fill="rgb(218,152,34)"/><text x="458.00" y="238.50"></text></g><g><title>0x7f9b9a24f53d (?) (1 samples, 0.14%)</title><rect x="455" y="244" width="2" height="15" fill="rgb(227,213,4)"/><text x="458.00" y="254.50"></text></g><g><title>0x7f9b9a27b4ec (?) (1 samples, 0.14%)</title><rect x="455" y="260" width="2" height="15" fill="rgb(227,182,15)"/><text x="458.00" y="270.50"></text></g><g><title>0x7f9b9a27ac3a (?) (1 samples, 0.14%)</title><rect x="455" y="276" width="2" height="15" fill="rgb(238,72,29)"/><text x="458.00" y="286.50"></text></g><g><title>0x7f9b9a27da0c (?) (1 samples, 0.14%)</title><rect x="455" y="292" width="2" height="15" fill="rgb(208,129,0)"/><text x="458.00" y="302.50"></text></g><g><title>0x7f9b9a724105 (?) (1 samples, 0.14%)</title><rect x="455" y="308" width="2" height="15" fill="rgb(238,180,12)"/><text x="458.00" y="318.50"></text></g><g><title>0x7f9b9a724050 (?) (1 samples, 0.14%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(208,185,9)"/><text x="458.00" y="334.50"></text></g><g><title>0x7f9b9a869041 (?) (1 samples, 0.14%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(220,2,39)"/><text x="458.00" y="350.50"></text></g><g><title>0x7f9b9a868b04 (?) (1 samples, 0.14%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(244,37,41)"/><text x="458.00" y="366.50"></text></g><g><title>0x7f9b9a85c19d (?) (1 samples, 0.14%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(239,122,9)"/><text x="458.00" y="382.50"></text></g><g><title>0x7f9b9a2b67cf (?) (1 samples, 0.14%)</title><rect x="455" y="388" width="2" height="15" fill="rgb(242,127,36)"/><text x="458.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="455" y="404" width="2" height="15" fill="rgb(210,123,34)"/><text x="458.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="455" y="420" width="2" height="15" fill="rgb(220,67,29)"/><text x="458.00" y="430.50"></text></g><g><title>0x7f9bda225f3b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="455" y="436" width="2" height="15" fill="rgb(221,6,14)"/><text x="458.00" y="446.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="460" y="340" width="2" height="15" fill="rgb(216,196,48)"/><text x="463.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="460" y="260" width="4" height="15" fill="rgb(211,31,33)"/><text x="463.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="460" y="276" width="4" height="15" fill="rgb(227,207,34)"/><text x="463.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="460" y="292" width="4" height="15" fill="rgb(253,16,17)"/><text x="463.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="460" y="308" width="4" height="15" fill="rgb(221,42,14)"/><text x="463.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="460" y="324" width="4" height="15" fill="rgb(214,202,6)"/><text x="463.00" y="334.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="462" y="340" width="2" height="15" fill="rgb(232,208,0)"/><text x="465.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="462" y="356" width="2" height="15" fill="rgb(206,192,8)"/><text x="465.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="464" y="260" width="3" height="15" fill="rgb(231,101,48)"/><text x="467.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="465" y="276" width="2" height="15" fill="rgb(228,94,23)"/><text x="468.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:18) (7 samples, 0.98%)</title><rect x="457" y="100" width="12" height="15" fill="rgb(247,127,25)"/><text x="460.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 0.84%)</title><rect x="459" y="116" width="10" height="15" fill="rgb(247,202,12)"/><text x="462.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (6 samples, 0.84%)</title><rect x="459" y="132" width="10" height="15" fill="rgb(206,119,8)"/><text x="462.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (6 samples, 0.84%)</title><rect x="459" y="148" width="10" height="15" fill="rgb(228,224,39)"/><text x="462.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (6 samples, 0.84%)</title><rect x="459" y="164" width="10" height="15" fill="rgb(210,134,40)"/><text x="462.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (6 samples, 0.84%)</title><rect x="459" y="180" width="10" height="15" fill="rgb(231,19,51)"/><text x="462.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (6 samples, 0.84%)</title><rect x="459" y="196" width="10" height="15" fill="rgb(237,129,38)"/><text x="462.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.70%)</title><rect x="460" y="212" width="9" height="15" fill="rgb(227,215,19)"/><text x="463.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.70%)</title><rect x="460" y="228" width="9" height="15" fill="rgb(236,60,11)"/><text x="463.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.70%)</title><rect x="460" y="244" width="9" height="15" fill="rgb(223,137,37)"/><text x="463.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="467" y="260" width="2" height="15" fill="rgb(205,120,7)"/><text x="470.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="467" y="276" width="2" height="15" fill="rgb(229,157,9)"/><text x="470.00" y="286.50"></text></g><g><title>0x7f9bda22499b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="467" y="292" width="2" height="15" fill="rgb(244,3,13)"/><text x="470.00" y="302.50"></text></g><g><title>0x7f9bda223bc0 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="515" y="132" width="3" height="15" fill="rgb(232,23,52)"/><text x="518.00" y="142.50"></text></g><g><title>0x7f9bda223bc6 (libc-2.29.so) (3 samples, 0.42%)</title><rect x="518" y="132" width="5" height="15" fill="rgb(213,193,21)"/><text x="521.00" y="142.50"></text></g><g><title>0x7f9bda223bdf (libc-2.29.so) (1 samples, 0.14%)</title><rect x="523" y="132" width="2" height="15" fill="rgb(236,151,48)"/><text x="526.00" y="142.50"></text></g><g><title>0x7f9bda223bfd (libc-2.29.so) (2 samples, 0.28%)</title><rect x="525" y="132" width="3" height="15" fill="rgb(205,205,39)"/><text x="528.00" y="142.50"></text></g><g><title>0x7f9bda223c0c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="528" y="132" width="2" height="15" fill="rgb(245,61,46)"/><text x="531.00" y="142.50"></text></g><g><title>0x7f9bda223c28 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="530" y="132" width="3" height="15" fill="rgb(209,27,38)"/><text x="533.00" y="142.50"></text></g><g><title>0x7f9bda223c2d (libc-2.29.so) (2 samples, 0.28%)</title><rect x="533" y="132" width="3" height="15" fill="rgb(248,74,32)"/><text x="536.00" y="142.50"></text></g><g><title>0x7f9bda223c41 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="536" y="132" width="2" height="15" fill="rgb(229,118,33)"/><text x="539.00" y="142.50"></text></g><g><title>0x7f9bda223c49 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="538" y="132" width="3" height="15" fill="rgb(213,13,39)"/><text x="541.00" y="142.50"></text></g><g><title>0x7f9bda223c5a (libc-2.29.so) (1 samples, 0.14%)</title><rect x="541" y="132" width="2" height="15" fill="rgb(207,0,11)"/><text x="544.00" y="142.50"></text></g><g><title>0x7f9bda223aa4 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="546" y="148" width="2" height="15" fill="rgb(229,155,31)"/><text x="549.00" y="158.50"></text></g><g><title>0x7f9bda223aaf (libc-2.29.so) (1 samples, 0.14%)</title><rect x="548" y="148" width="1" height="15" fill="rgb(208,28,14)"/><text x="551.00" y="158.50"></text></g><g><title>0x7f9bda223c73 (libc-2.29.so) (5 samples, 0.70%)</title><rect x="543" y="132" width="8" height="15" fill="rgb(217,87,9)"/><text x="546.00" y="142.50"></text></g><g><title>0x7f9bda223ac1 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="549" y="148" width="2" height="15" fill="rgb(239,150,45)"/><text x="552.00" y="158.50"></text></g><g><title>0x7f9bda224eb0 (libc-2.29.so) (23 samples, 3.21%)</title><rect x="515" y="116" width="38" height="15" fill="rgb(233,27,29)"/><text x="518.00" y="126.50">0x7..</text></g><g><title>0x7f9bda223ca7 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="551" y="132" width="2" height="15" fill="rgb(214,36,3)"/><text x="554.00" y="142.50"></text></g><g><title>0x7f9bda223acd (libc-2.29.so) (1 samples, 0.14%)</title><rect x="551" y="148" width="2" height="15" fill="rgb(231,46,39)"/><text x="554.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.14%)</title><rect x="558" y="148" width="1" height="15" fill="rgb(237,85,10)"/><text x="561.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (3 samples, 0.42%)</title><rect x="559" y="196" width="5" height="15" fill="rgb(252,119,35)"/><text x="562.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.28%)</title><rect x="564" y="196" width="3" height="15" fill="rgb(210,3,40)"/><text x="567.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.14%)</title><rect x="566" y="212" width="1" height="15" fill="rgb(250,215,29)"/><text x="569.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="566" y="228" width="1" height="15" fill="rgb(240,201,0)"/><text x="569.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="566" y="244" width="1" height="15" fill="rgb(253,229,23)"/><text x="569.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="566" y="260" width="1" height="15" fill="rgb(231,16,15)"/><text x="569.00" y="270.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="567" y="228" width="2" height="15" fill="rgb(216,192,5)"/><text x="570.00" y="238.50"></text></g><g><title>0x7f9bda224d02 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="567" y="244" width="2" height="15" fill="rgb(230,56,29)"/><text x="570.00" y="254.50"></text></g><g><title>0x7f9bda224d07 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="571" y="244" width="1" height="15" fill="rgb(234,82,15)"/><text x="574.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="576" y="260" width="1" height="15" fill="rgb(238,5,1)"/><text x="579.00" y="270.50"></text></g><g><title>onnxruntime::Model::MainGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="576" y="276" width="1" height="15" fill="rgb(231,156,13)"/><text x="579.00" y="286.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="577" y="292" width="2" height="15" fill="rgb(243,11,7)"/><text x="580.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="340" width="3" height="15" fill="rgb(208,8,40)"/><text x="582.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="356" width="3" height="15" fill="rgb(234,60,48)"/><text x="582.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="372" width="3" height="15" fill="rgb(251,27,34)"/><text x="582.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="388" width="3" height="15" fill="rgb(205,207,4)"/><text x="582.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="404" width="3" height="15" fill="rgb(231,64,26)"/><text x="582.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="420" width="3" height="15" fill="rgb(246,77,20)"/><text x="582.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="436" width="3" height="15" fill="rgb(243,59,19)"/><text x="582.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="579" y="452" width="3" height="15" fill="rgb(242,63,28)"/><text x="582.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="581" y="468" width="1" height="15" fill="rgb(251,146,26)"/><text x="584.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::unlock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="581" y="484" width="1" height="15" fill="rgb(207,205,31)"/><text x="584.00" y="494.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="582" y="340" width="2" height="15" fill="rgb(220,175,51)"/><text x="585.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="582" y="356" width="2" height="15" fill="rgb(252,216,31)"/><text x="585.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="637" y="356" width="1" height="15" fill="rgb(241,12,47)"/><text x="640.00" y="366.50"></text></g><g><title>0x7f9bda244d50 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="666" y="372" width="2" height="15" fill="rgb(220,88,10)"/><text x="669.00" y="382.50"></text></g><g><title>0x7f9bda244db3 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="668" y="372" width="3" height="15" fill="rgb(254,23,23)"/><text x="671.00" y="382.50"></text></g><g><title>0x7f9bda3a3e00 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="671" y="372" width="2" height="15" fill="rgb(206,2,3)"/><text x="674.00" y="382.50"></text></g><g><title>0x7f9bda3a3e0a (libm-2.29.so) (2 samples, 0.28%)</title><rect x="673" y="372" width="3" height="15" fill="rgb(249,146,44)"/><text x="676.00" y="382.50"></text></g><g><title>0x7f9bda3a3e14 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="676" y="372" width="2" height="15" fill="rgb(208,25,39)"/><text x="679.00" y="382.50"></text></g><g><title>0x7f9bda3a3e2f (libm-2.29.so) (1 samples, 0.14%)</title><rect x="678" y="372" width="1" height="15" fill="rgb(229,127,39)"/><text x="681.00" y="382.50"></text></g><g><title>0x7f9bda3a3e4e (libm-2.29.so) (1 samples, 0.14%)</title><rect x="679" y="372" width="2" height="15" fill="rgb(205,170,32)"/><text x="682.00" y="382.50"></text></g><g><title>0x7f9bda3a3e5f (libm-2.29.so) (1 samples, 0.14%)</title><rect x="681" y="372" width="2" height="15" fill="rgb(240,183,19)"/><text x="684.00" y="382.50"></text></g><g><title>0x7f9bda3a3e92 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="683" y="372" width="3" height="15" fill="rgb(209,212,15)"/><text x="686.00" y="382.50"></text></g><g><title>0x7f9bda3a3e96 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="686" y="372" width="2" height="15" fill="rgb(214,227,48)"/><text x="689.00" y="382.50"></text></g><g><title>0x7f9bda3a3ea2 (libm-2.29.so) (1 samples, 0.14%)</title><rect x="688" y="372" width="1" height="15" fill="rgb(224,164,42)"/><text x="691.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (66 samples, 9.21%)</title><rect x="584" y="340" width="108" height="15" fill="rgb(205,163,17)"/><text x="587.00" y="350.50">onnxruntime::..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 4.60%)</title><rect x="638" y="356" width="54" height="15" fill="rgb(206,35,19)"/><text x="641.00" y="366.50">onnxr..</text></g><g><title>0x7f9bda3a3ea6 (libm-2.29.so) (2 samples, 0.28%)</title><rect x="689" y="372" width="3" height="15" fill="rgb(232,166,42)"/><text x="692.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.23%)</title><rect x="692" y="340" width="27" height="15" fill="rgb(252,200,17)"/><text x="695.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.23%)</title><rect x="692" y="356" width="27" height="15" fill="rgb(217,42,26)"/><text x="695.00" y="366.50">o..</text></g><g><title>0x7f9b9a21b930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="747" y="356" width="3" height="15" fill="rgb(233,139,36)"/><text x="750.00" y="366.50"></text></g><g><title>0x7f9bc9cf0d50 (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="755" y="372" width="2" height="15" fill="rgb(209,94,44)"/><text x="758.00" y="382.50"></text></g><g><title>0x7f9bda225b12 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="844" y="388" width="2" height="15" fill="rgb(210,74,26)"/><text x="847.00" y="398.50"></text></g><g><title>0x7f9bda225b1c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="846" y="388" width="1" height="15" fill="rgb(246,134,0)"/><text x="849.00" y="398.50"></text></g><g><title>0x7f9bda225b24 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="847" y="388" width="2" height="15" fill="rgb(239,197,1)"/><text x="850.00" y="398.50"></text></g><g><title>0x7f9bda225b49 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="849" y="388" width="1" height="15" fill="rgb(220,71,30)"/><text x="852.00" y="398.50"></text></g><g><title>0x7f9bda225b61 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="850" y="388" width="2" height="15" fill="rgb(229,123,9)"/><text x="853.00" y="398.50"></text></g><g><title>0x7f9bda225b76 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="852" y="388" width="2" height="15" fill="rgb(237,171,3)"/><text x="855.00" y="398.50"></text></g><g><title>0x7f9bda225d48 (libc-2.29.so) (3 samples, 0.42%)</title><rect x="854" y="388" width="5" height="15" fill="rgb(229,38,6)"/><text x="857.00" y="398.50"></text></g><g><title>0x7f9bda225d67 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="859" y="388" width="3" height="15" fill="rgb(253,173,35)"/><text x="862.00" y="398.50"></text></g><g><title>0x7f9bda225d81 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="862" y="388" width="2" height="15" fill="rgb(216,46,30)"/><text x="865.00" y="398.50"></text></g><g><title>0x7f9bda225dc9 (libc-2.29.so) (9 samples, 1.26%)</title><rect x="864" y="388" width="14" height="15" fill="rgb(224,167,40)"/><text x="867.00" y="398.50"></text></g><g><title>0x7f9bda225dd2 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="878" y="388" width="2" height="15" fill="rgb(249,88,34)"/><text x="881.00" y="398.50"></text></g><g><title>0x7f9bda225de9 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="880" y="388" width="2" height="15" fill="rgb(235,194,45)"/><text x="883.00" y="398.50"></text></g><g><title>0x7f9bda225dfd (libc-2.29.so) (1 samples, 0.14%)</title><rect x="882" y="388" width="1" height="15" fill="rgb(212,217,34)"/><text x="885.00" y="398.50"></text></g><g><title>0x7f9bda225fdd (libc-2.29.so) (1 samples, 0.14%)</title><rect x="883" y="388" width="2" height="15" fill="rgb(247,227,43)"/><text x="886.00" y="398.50"></text></g><g><title>0x7f9bda225fe4 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="885" y="388" width="2" height="15" fill="rgb(212,83,14)"/><text x="888.00" y="398.50"></text></g><g><title>0x7f9bda226064 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="887" y="388" width="3" height="15" fill="rgb(224,221,25)"/><text x="890.00" y="398.50"></text></g><g><title>0x7f9bda22608c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="890" y="388" width="2" height="15" fill="rgb(244,5,44)"/><text x="893.00" y="398.50"></text></g><g><title>0x7f9bda226381 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="892" y="388" width="1" height="15" fill="rgb(233,22,40)"/><text x="895.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (88 samples, 12.27%)</title><rect x="750" y="356" width="145" height="15" fill="rgb(230,31,28)"/><text x="753.00" y="366.50">operator new (libs..</text></g><g><title>malloc (libc-2.29.so) (84 samples, 11.72%)</title><rect x="757" y="372" width="138" height="15" fill="rgb(225,61,46)"/><text x="760.00" y="382.50">malloc (libc-2.29..</text></g><g><title>0x7f9bda226391 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="893" y="388" width="2" height="15" fill="rgb(231,167,20)"/><text x="896.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.84%)</title><rect x="895" y="356" width="10" height="15" fill="rgb(248,74,22)"/><text x="898.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="901" y="372" width="4" height="15" fill="rgb(243,147,47)"/><text x="904.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.42%)</title><rect x="905" y="356" width="5" height="15" fill="rgb(238,66,17)"/><text x="908.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (206 samples, 28.73%)</title><rect x="577" y="260" width="339" height="15" fill="rgb(251,158,16)"/><text x="580.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (206 samples, 28.73%)</title><rect x="577" y="276" width="339" height="15" fill="rgb(251,138,23)"/><text x="580.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 28.59%)</title><rect x="579" y="292" width="337" height="15" fill="rgb(226,156,25)"/><text x="582.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 28.59%)</title><rect x="579" y="308" width="337" height="15" fill="rgb(240,174,51)"/><text x="582.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (205 samples, 28.59%)</title><rect x="579" y="324" width="337" height="15" fill="rgb(207,14,15)"/><text x="582.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 16.74%)</title><rect x="719" y="340" width="197" height="15" fill="rgb(221,178,40)"/><text x="722.00" y="350.50">onnxruntime::ml::ZipMapOp..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.56%)</title><rect x="910" y="356" width="6" height="15" fill="rgb(240,123,45)"/><text x="913.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="916" y="260" width="2" height="15" fill="rgb(235,213,12)"/><text x="919.00" y="270.50"></text></g><g><title>0x7f9b9a21b8e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="1056" y="276" width="3" height="15" fill="rgb(227,49,40)"/><text x="1059.00" y="286.50"></text></g><g><title>0x7f9b9a21c5c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1059" y="276" width="2" height="15" fill="rgb(227,183,50)"/><text x="1062.00" y="286.50"></text></g><g><title>0x7f9b9a21c870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="1061" y="276" width="3" height="15" fill="rgb(247,134,25)"/><text x="1064.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.51%)</title><rect x="1064" y="276" width="30" height="15" fill="rgb(208,116,54)"/><text x="1067.00" y="286.50">py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (116 samples, 16.18%)</title><rect x="918" y="260" width="191" height="15" fill="rgb(215,92,37)"/><text x="921.00" y="270.50">pybind11::detail::map_ca..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (9 samples, 1.26%)</title><rect x="1094" y="276" width="15" height="15" fill="rgb(211,100,47)"/><text x="1097.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1109" y="260" width="2" height="15" fill="rgb(227,193,2)"/><text x="1112.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1109" y="276" width="2" height="15" fill="rgb(231,9,39)"/><text x="1112.00" y="286.50"></text></g><g><title>0x7f9bda22490e (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1114" y="292" width="3" height="15" fill="rgb(243,227,1)"/><text x="1117.00" y="302.50"></text></g><g><title>0x7f9bda22492c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(207,180,48)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f9bda224971 (libc-2.29.so) (3 samples, 0.42%)</title><rect x="1119" y="292" width="5" height="15" fill="rgb(213,81,45)"/><text x="1122.00" y="302.50"></text></g><g><title>0x7f9bda22499b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1124" y="292" width="1" height="15" fill="rgb(235,112,47)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7f9bda2249ed (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1125" y="292" width="4" height="15" fill="rgb(235,197,27)"/><text x="1128.00" y="302.50"></text></g><g><title>0x7f9bda224d07 (libc-2.29.so) (9 samples, 1.26%)</title><rect x="1129" y="292" width="14" height="15" fill="rgb(215,178,16)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7f9bda224d13 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(223,67,35)"/><text x="1146.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.42%)</title><rect x="1145" y="292" width="5" height="15" fill="rgb(250,43,30)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7f9b9a21c0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.28%)</title><rect x="1152" y="308" width="3" height="15" fill="rgb(245,72,36)"/><text x="1155.00" y="318.50"></text></g><g><title>0x7f9bda224906 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1155" y="308" width="2" height="15" fill="rgb(243,57,27)"/><text x="1158.00" y="318.50"></text></g><g><title>0x7f9bda22492c (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1157" y="308" width="1" height="15" fill="rgb(226,77,46)"/><text x="1160.00" y="318.50"></text></g><g><title>0x7f9bda224971 (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1158" y="308" width="4" height="15" fill="rgb(230,215,23)"/><text x="1161.00" y="318.50"></text></g><g><title>0x7f9bda2249c1 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1162" y="308" width="1" height="15" fill="rgb(240,127,18)"/><text x="1165.00" y="318.50"></text></g><g><title>0x7f9bda2249ed (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1163" y="308" width="2" height="15" fill="rgb(224,183,14)"/><text x="1166.00" y="318.50"></text></g><g><title>0x7f9bda224a4b (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1165" y="308" width="1" height="15" fill="rgb(249,122,11)"/><text x="1168.00" y="318.50"></text></g><g><title>0x7f9bda224d07 (libc-2.29.so) (6 samples, 0.84%)</title><rect x="1166" y="308" width="10" height="15" fill="rgb(207,223,32)"/><text x="1169.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.28%)</title><rect x="1176" y="308" width="4" height="15" fill="rgb(213,116,16)"/><text x="1179.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (370 samples, 51.60%)</title><rect x="572" y="244" width="609" height="15" fill="rgb(208,170,48)"/><text x="575.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Infer..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 6.00%)</title><rect x="1111" y="260" width="70" height="15" fill="rgb(246,12,32)"/><text x="1114.00" y="270.50">std::ve..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (43 samples, 6.00%)</title><rect x="1111" y="276" width="70" height="15" fill="rgb(227,151,36)"/><text x="1114.00" y="286.50">onnxrun..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.65%)</title><rect x="1150" y="292" width="31" height="15" fill="rgb(214,11,5)"/><text x="1153.00" y="302.50">st..</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="1180" y="308" width="1" height="15" fill="rgb(237,61,1)"/><text x="1183.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(246,105,30)"/><text x="1184.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(209,211,15)"/><text x="1184.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (380 samples, 53.00%)</title><rect x="559" y="164" width="626" height="15" fill="rgb(239,145,16)"/><text x="562.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (380 samples, 53.00%)</title><rect x="559" y="180" width="626" height="15" fill="rgb(207,211,27)"/><text x="562.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (375 samples, 52.30%)</title><rect x="567" y="196" width="618" height="15" fill="rgb(254,180,22)"/><text x="570.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (375 samples, 52.30%)</title><rect x="567" y="212" width="618" height="15" fill="rgb(233,57,12)"/><text x="570.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 52.16%)</title><rect x="569" y="228" width="616" height="15" fill="rgb(205,172,38)"/><text x="572.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind1..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(212,134,38)"/><text x="1186.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(234,220,8)"/><text x="1186.00" y="270.50"></text></g><g><title>all (717 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,117,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:52) (446 samples, 62.20%)</title><rect x="455" y="52" width="735" height="15" fill="rgb(230,195,24)"/><text x="458.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:51) (446 samples, 62.20%)</title><rect x="455" y="68" width="735" height="15" fill="rgb(206,25,27)"/><text x="458.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:29) (445 samples, 62.06%)</title><rect x="457" y="84" width="733" height="15" fill="rgb(254,100,45)"/><text x="460.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:23) (438 samples, 61.09%)</title><rect x="469" y="100" width="721" height="15" fill="rgb(224,47,9)"/><text x="472.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (387 samples, 53.97%)</title><rect x="553" y="116" width="637" height="15" fill="rgb(250,110,9)"/><text x="556.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (385 samples, 53.70%)</title><rect x="556" y="132" width="634" height="15" fill="rgb(254,192,19)"/><text x="559.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (383 samples, 53.42%)</title><rect x="559" y="148" width="631" height="15" fill="rgb(212,57,2)"/><text x="562.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.42%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(215,182,10)"/><text x="1188.00" y="174.50"></text></g></g></svg>