<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:31) (1 samples, 0.35%)</title><rect x="10" y="52" width="4" height="15" fill="rgb(211,179,29)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:11) (1 samples, 0.35%)</title><rect x="10" y="68" width="4" height="15" fill="rgb(218,150,16)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:39) (1 samples, 0.35%)</title><rect x="10" y="84" width="4" height="15" fill="rgb(229,6,49)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.35%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(215,211,50)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py:1542) (1 samples, 0.35%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(238,54,27)"/><text x="13.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py:939) (1 samples, 0.35%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(217,212,5)"/><text x="13.00" y="142.50"></text></g><g><title>dnrm2_k_SANDYBRIDGE (libopenblasp-r0-2ecf47d5.3.7.dev.so) (1 samples, 0.35%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(230,103,17)"/><text x="13.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.35%)</title><rect x="38" y="164" width="5" height="15" fill="rgb(252,133,33)"/><text x="41.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.35%)</title><rect x="43" y="164" width="4" height="15" fill="rgb(230,41,43)"/><text x="46.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.35%)</title><rect x="43" y="180" width="4" height="15" fill="rgb(230,1,31)"/><text x="46.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (1 samples, 0.35%)</title><rect x="47" y="164" width="4" height="15" fill="rgb(237,206,54)"/><text x="50.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.35%)</title><rect x="55" y="180" width="4" height="15" fill="rgb(206,140,2)"/><text x="58.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.35%)</title><rect x="84" y="196" width="4" height="15" fill="rgb(216,94,42)"/><text x="87.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (14 samples, 4.91%)</title><rect x="38" y="148" width="58" height="15" fill="rgb(244,43,33)"/><text x="41.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.86%)</title><rect x="51" y="164" width="45" height="15" fill="rgb(212,117,11)"/><text x="54.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 3.16%)</title><rect x="59" y="180" width="37" height="15" fill="rgb(230,157,48)"/><text x="62.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.70%)</title><rect x="88" y="196" width="8" height="15" fill="rgb(243,116,29)"/><text x="91.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.35%)</title><rect x="96" y="148" width="5" height="15" fill="rgb(227,178,14)"/><text x="99.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.35%)</title><rect x="113" y="212" width="4" height="15" fill="rgb(252,60,54)"/><text x="116.00" y="222.50"></text></g><g><title>0x7f2386c401ea (libc-2.29.so) (1 samples, 0.35%)</title><rect x="134" y="228" width="4" height="15" fill="rgb(217,131,20)"/><text x="137.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.11%)</title><rect x="117" y="212" width="25" height="15" fill="rgb(220,32,0)"/><text x="120.00" y="222.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.35%)</title><rect x="138" y="228" width="4" height="15" fill="rgb(245,42,2)"/><text x="141.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (9 samples, 3.16%)</title><rect x="109" y="180" width="37" height="15" fill="rgb(225,85,54)"/><text x="112.00" y="190.50">dec..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 3.16%)</title><rect x="109" y="196" width="37" height="15" fill="rgb(208,32,20)"/><text x="112.00" y="206.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.35%)</title><rect x="142" y="212" width="4" height="15" fill="rgb(208,97,27)"/><text x="145.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.35%)</title><rect x="146" y="196" width="4" height="15" fill="rgb(210,174,1)"/><text x="149.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.35%)</title><rect x="167" y="212" width="4" height="15" fill="rgb(209,208,21)"/><text x="170.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.35%)</title><rect x="171" y="212" width="4" height="15" fill="rgb(225,136,41)"/><text x="174.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 2.46%)</title><rect x="150" y="196" width="29" height="15" fill="rgb(245,198,15)"/><text x="153.00" y="206.50">ch..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.35%)</title><rect x="175" y="212" width="4" height="15" fill="rgb(245,52,39)"/><text x="178.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.35%)</title><rect x="179" y="212" width="4" height="15" fill="rgb(211,171,40)"/><text x="182.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.70%)</title><rect x="188" y="228" width="8" height="15" fill="rgb(214,185,33)"/><text x="191.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.75%)</title><rect x="179" y="196" width="21" height="15" fill="rgb(247,24,19)"/><text x="182.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.40%)</title><rect x="183" y="212" width="17" height="15" fill="rgb(208,153,49)"/><text x="186.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.35%)</title><rect x="196" y="228" width="4" height="15" fill="rgb(206,86,8)"/><text x="199.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.35%)</title><rect x="200" y="196" width="4" height="15" fill="rgb(253,129,34)"/><text x="203.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.35%)</title><rect x="200" y="212" width="4" height="15" fill="rgb(242,6,45)"/><text x="203.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.70%)</title><rect x="204" y="196" width="8" height="15" fill="rgb(245,160,9)"/><text x="207.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.35%)</title><rect x="208" y="212" width="4" height="15" fill="rgb(237,94,25)"/><text x="211.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (2 samples, 0.70%)</title><rect x="221" y="212" width="8" height="15" fill="rgb(219,206,1)"/><text x="224.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.70%)</title><rect x="221" y="228" width="8" height="15" fill="rgb(213,227,49)"/><text x="224.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (6 samples, 2.11%)</title><rect x="212" y="196" width="25" height="15" fill="rgb(236,52,4)"/><text x="215.00" y="206.50">c..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.70%)</title><rect x="229" y="212" width="8" height="15" fill="rgb(254,0,2)"/><text x="232.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.35%)</title><rect x="233" y="228" width="4" height="15" fill="rgb(251,1,0)"/><text x="236.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.35%)</title><rect x="233" y="244" width="4" height="15" fill="rgb(234,17,3)"/><text x="236.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.40%)</title><rect x="254" y="228" width="16" height="15" fill="rgb(220,47,37)"/><text x="257.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 3.51%)</title><rect x="237" y="212" width="42" height="15" fill="rgb(219,8,41)"/><text x="240.00" y="222.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.70%)</title><rect x="270" y="228" width="9" height="15" fill="rgb(212,124,28)"/><text x="273.00" y="238.50"></text></g><g><title>0x7f2386c306d0 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="274" y="244" width="5" height="15" fill="rgb(238,208,22)"/><text x="277.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (11 samples, 3.86%)</title><rect x="237" y="196" width="46" height="15" fill="rgb(225,19,33)"/><text x="240.00" y="206.50">chec..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.35%)</title><rect x="279" y="212" width="4" height="15" fill="rgb(232,141,10)"/><text x="282.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (6 samples, 2.11%)</title><rect x="283" y="212" width="25" height="15" fill="rgb(213,107,2)"/><text x="286.00" y="222.50">_..</text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.70%)</title><rect x="308" y="212" width="8" height="15" fill="rgb(245,38,3)"/><text x="311.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.35%)</title><rect x="316" y="212" width="4" height="15" fill="rgb(240,39,15)"/><text x="319.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.70%)</title><rect x="320" y="212" width="8" height="15" fill="rgb(253,146,14)"/><text x="323.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1189) (1 samples, 0.35%)</title><rect x="324" y="228" width="4" height="15" fill="rgb(229,148,30)"/><text x="327.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (47 samples, 16.49%)</title><rect x="146" y="180" width="195" height="15" fill="rgb(238,45,54)"/><text x="149.00" y="190.50">decision_function (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (14 samples, 4.91%)</title><rect x="283" y="196" width="58" height="15" fill="rgb(232,124,19)"/><text x="286.00" y="206.50">check_..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.05%)</title><rect x="328" y="212" width="13" height="15" fill="rgb(212,21,26)"/><text x="331.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.70%)</title><rect x="332" y="228" width="9" height="15" fill="rgb(232,214,35)"/><text x="335.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.35%)</title><rect x="337" y="244" width="4" height="15" fill="rgb(239,113,24)"/><text x="340.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (3 samples, 1.05%)</title><rect x="341" y="180" width="12" height="15" fill="rgb(205,138,8)"/><text x="344.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.35%)</title><rect x="349" y="196" width="4" height="15" fill="rgb(216,4,47)"/><text x="352.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.35%)</title><rect x="349" y="212" width="4" height="15" fill="rgb(214,26,2)"/><text x="352.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.35%)</title><rect x="349" y="228" width="4" height="15" fill="rgb(247,64,35)"/><text x="352.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.35%)</title><rect x="349" y="244" width="4" height="15" fill="rgb(243,14,8)"/><text x="352.00" y="254.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.35%)</title><rect x="366" y="196" width="4" height="15" fill="rgb(234,80,12)"/><text x="369.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:338) (1 samples, 0.35%)</title><rect x="366" y="212" width="4" height="15" fill="rgb(244,45,20)"/><text x="369.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="370" y="212" width="4" height="15" fill="rgb(232,145,14)"/><text x="373.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="370" y="228" width="4" height="15" fill="rgb(223,57,14)"/><text x="373.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.35%)</title><rect x="370" y="244" width="4" height="15" fill="rgb(215,212,23)"/><text x="373.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.35%)</title><rect x="370" y="260" width="4" height="15" fill="rgb(226,217,0)"/><text x="373.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="374" y="228" width="4" height="15" fill="rgb(207,145,45)"/><text x="377.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.35%)</title><rect x="374" y="244" width="4" height="15" fill="rgb(212,26,12)"/><text x="377.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.35%)</title><rect x="374" y="260" width="4" height="15" fill="rgb(219,55,49)"/><text x="377.00" y="270.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.35%)</title><rect x="374" y="276" width="4" height="15" fill="rgb(212,210,13)"/><text x="377.00" y="286.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.35%)</title><rect x="374" y="292" width="4" height="15" fill="rgb(216,118,32)"/><text x="377.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.35%)</title><rect x="378" y="228" width="4" height="15" fill="rgb(252,62,40)"/><text x="381.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.35%)</title><rect x="378" y="244" width="4" height="15" fill="rgb(231,10,40)"/><text x="381.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.35%)</title><rect x="382" y="228" width="4" height="15" fill="rgb(227,42,7)"/><text x="385.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.35%)</title><rect x="382" y="244" width="4" height="15" fill="rgb(233,9,46)"/><text x="385.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.35%)</title><rect x="386" y="292" width="4" height="15" fill="rgb(211,55,48)"/><text x="389.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.70%)</title><rect x="386" y="228" width="9" height="15" fill="rgb(250,68,44)"/><text x="389.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.70%)</title><rect x="386" y="244" width="9" height="15" fill="rgb(206,217,38)"/><text x="389.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.70%)</title><rect x="386" y="260" width="9" height="15" fill="rgb(238,60,54)"/><text x="389.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.70%)</title><rect x="386" y="276" width="9" height="15" fill="rgb(209,71,23)"/><text x="389.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.35%)</title><rect x="390" y="292" width="5" height="15" fill="rgb(237,153,3)"/><text x="393.00" y="302.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.35%)</title><rect x="390" y="308" width="5" height="15" fill="rgb(250,150,51)"/><text x="393.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.11%)</title><rect x="374" y="212" width="25" height="15" fill="rgb(252,94,35)"/><text x="377.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.35%)</title><rect x="395" y="228" width="4" height="15" fill="rgb(212,11,32)"/><text x="398.00" y="238.50"></text></g><g><title>array_add (number.c:330) (8 samples, 2.81%)</title><rect x="370" y="196" width="33" height="15" fill="rgb(205,94,37)"/><text x="373.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.35%)</title><rect x="399" y="212" width="4" height="15" fill="rgb(211,143,47)"/><text x="402.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.35%)</title><rect x="403" y="196" width="4" height="15" fill="rgb(243,22,46)"/><text x="406.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.35%)</title><rect x="403" y="212" width="4" height="15" fill="rgb(230,80,44)"/><text x="406.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.35%)</title><rect x="403" y="228" width="4" height="15" fill="rgb(209,88,15)"/><text x="406.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.35%)</title><rect x="407" y="196" width="4" height="15" fill="rgb(217,149,11)"/><text x="410.00" y="206.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.35%)</title><rect x="407" y="212" width="4" height="15" fill="rgb(223,92,0)"/><text x="410.00" y="222.50"></text></g><g><title>0x7fffffffffffffff (?) (1 samples, 0.35%)</title><rect x="411" y="212" width="4" height="15" fill="rgb(234,117,19)"/><text x="414.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.35%)</title><rect x="411" y="228" width="4" height="15" fill="rgb(230,49,50)"/><text x="414.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.35%)</title><rect x="411" y="244" width="4" height="15" fill="rgb(246,63,19)"/><text x="414.00" y="254.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="411" y="260" width="4" height="15" fill="rgb(229,145,2)"/><text x="414.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4712) (1 samples, 0.35%)</title><rect x="415" y="212" width="4" height="15" fill="rgb(239,154,47)"/><text x="418.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.35%)</title><rect x="419" y="244" width="5" height="15" fill="rgb(207,37,6)"/><text x="422.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.35%)</title><rect x="419" y="260" width="5" height="15" fill="rgb(235,170,41)"/><text x="422.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2615) (1 samples, 0.35%)</title><rect x="424" y="244" width="4" height="15" fill="rgb(248,126,40)"/><text x="427.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.35%)</title><rect x="428" y="244" width="4" height="15" fill="rgb(227,25,53)"/><text x="431.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.35%)</title><rect x="428" y="260" width="4" height="15" fill="rgb(208,15,19)"/><text x="431.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.35%)</title><rect x="428" y="276" width="4" height="15" fill="rgb(235,188,18)"/><text x="431.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1803) (1 samples, 0.35%)</title><rect x="428" y="292" width="4" height="15" fill="rgb(208,137,7)"/><text x="431.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c:1750) (1 samples, 0.35%)</title><rect x="428" y="308" width="4" height="15" fill="rgb(207,42,30)"/><text x="431.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2838) (1 samples, 0.35%)</title><rect x="432" y="244" width="4" height="15" fill="rgb(226,21,36)"/><text x="435.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.35%)</title><rect x="432" y="260" width="4" height="15" fill="rgb(250,39,13)"/><text x="435.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.35%)</title><rect x="436" y="276" width="4" height="15" fill="rgb(226,193,40)"/><text x="439.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.35%)</title><rect x="436" y="292" width="4" height="15" fill="rgb(229,167,52)"/><text x="439.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.35%)</title><rect x="436" y="308" width="4" height="15" fill="rgb(213,149,40)"/><text x="439.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.35%)</title><rect x="436" y="324" width="4" height="15" fill="rgb(240,86,34)"/><text x="439.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.35%)</title><rect x="436" y="340" width="4" height="15" fill="rgb(208,135,13)"/><text x="439.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.35%)</title><rect x="436" y="356" width="4" height="15" fill="rgb(214,227,9)"/><text x="439.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="436" y="372" width="4" height="15" fill="rgb(227,182,16)"/><text x="439.00" y="382.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (2 samples, 0.70%)</title><rect x="436" y="244" width="8" height="15" fill="rgb(225,167,28)"/><text x="439.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.70%)</title><rect x="436" y="260" width="8" height="15" fill="rgb(223,159,11)"/><text x="439.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.35%)</title><rect x="440" y="276" width="4" height="15" fill="rgb(237,70,39)"/><text x="443.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.35%)</title><rect x="440" y="292" width="4" height="15" fill="rgb(214,95,18)"/><text x="443.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.35%)</title><rect x="440" y="308" width="4" height="15" fill="rgb(248,8,50)"/><text x="443.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.35%)</title><rect x="440" y="324" width="4" height="15" fill="rgb(220,28,11)"/><text x="443.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.35%)</title><rect x="444" y="244" width="4" height="15" fill="rgb(239,178,15)"/><text x="447.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:155) (1 samples, 0.35%)</title><rect x="444" y="260" width="4" height="15" fill="rgb(225,62,2)"/><text x="447.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:274) (1 samples, 0.35%)</title><rect x="444" y="276" width="4" height="15" fill="rgb(218,78,16)"/><text x="447.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3000) (1 samples, 0.35%)</title><rect x="448" y="244" width="5" height="15" fill="rgb(242,141,9)"/><text x="451.00" y="254.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1037) (1 samples, 0.35%)</title><rect x="448" y="260" width="5" height="15" fill="rgb(248,75,50)"/><text x="451.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (11 samples, 3.86%)</title><rect x="411" y="196" width="46" height="15" fill="rgb(212,127,51)"/><text x="414.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.16%)</title><rect x="419" y="212" width="38" height="15" fill="rgb(239,29,38)"/><text x="422.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (9 samples, 3.16%)</title><rect x="419" y="228" width="38" height="15" fill="rgb(220,67,7)"/><text x="422.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.35%)</title><rect x="453" y="244" width="4" height="15" fill="rgb(236,167,51)"/><text x="456.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.35%)</title><rect x="453" y="260" width="4" height="15" fill="rgb(252,194,8)"/><text x="456.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.35%)</title><rect x="453" y="276" width="4" height="15" fill="rgb(235,78,38)"/><text x="456.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.35%)</title><rect x="453" y="292" width="4" height="15" fill="rgb(253,52,17)"/><text x="456.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.35%)</title><rect x="453" y="308" width="4" height="15" fill="rgb(215,112,7)"/><text x="456.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (86 samples, 30.18%)</title><rect x="109" y="164" width="356" height="15" fill="rgb(235,123,42)"/><text x="112.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (27 samples, 9.47%)</title><rect x="353" y="180" width="112" height="15" fill="rgb(234,140,19)"/><text x="356.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.70%)</title><rect x="457" y="196" width="8" height="15" fill="rgb(254,11,8)"/><text x="460.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.35%)</title><rect x="461" y="212" width="4" height="15" fill="rgb(246,197,53)"/><text x="464.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.70%)</title><rect x="473" y="180" width="9" height="15" fill="rgb(211,119,48)"/><text x="476.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.70%)</title><rect x="473" y="196" width="9" height="15" fill="rgb(207,166,12)"/><text x="476.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.70%)</title><rect x="473" y="212" width="9" height="15" fill="rgb(220,222,6)"/><text x="476.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.70%)</title><rect x="473" y="228" width="9" height="15" fill="rgb(254,222,28)"/><text x="476.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.35%)</title><rect x="477" y="244" width="5" height="15" fill="rgb(222,51,12)"/><text x="480.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="482" y="196" width="4" height="15" fill="rgb(205,85,48)"/><text x="485.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.35%)</title><rect x="482" y="212" width="4" height="15" fill="rgb(237,87,13)"/><text x="485.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1804) (1 samples, 0.35%)</title><rect x="482" y="228" width="4" height="15" fill="rgb(251,44,53)"/><text x="485.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.35%)</title><rect x="486" y="196" width="4" height="15" fill="rgb(245,46,54)"/><text x="489.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1967) (1 samples, 0.35%)</title><rect x="486" y="212" width="4" height="15" fill="rgb(217,128,25)"/><text x="489.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.35%)</title><rect x="490" y="244" width="4" height="15" fill="rgb(211,21,12)"/><text x="493.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.70%)</title><rect x="490" y="212" width="8" height="15" fill="rgb(251,65,43)"/><text x="493.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.70%)</title><rect x="490" y="228" width="8" height="15" fill="rgb(206,52,1)"/><text x="493.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:775) (1 samples, 0.35%)</title><rect x="494" y="244" width="4" height="15" fill="rgb(236,172,49)"/><text x="497.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.05%)</title><rect x="490" y="196" width="12" height="15" fill="rgb(226,139,12)"/><text x="493.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.35%)</title><rect x="498" y="212" width="4" height="15" fill="rgb(230,204,42)"/><text x="501.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.35%)</title><rect x="498" y="228" width="4" height="15" fill="rgb(248,113,14)"/><text x="501.00" y="238.50"></text></g><g><title>0x7f2371f089dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="498" y="244" width="4" height="15" fill="rgb(218,26,54)"/><text x="501.00" y="254.50"></text></g><g><title>0x7f2371f29265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="498" y="260" width="4" height="15" fill="rgb(205,24,33)"/><text x="501.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.35%)</title><rect x="498" y="276" width="4" height="15" fill="rgb(251,170,22)"/><text x="501.00" y="286.50"></text></g><g><title>0x7f2386df1ba0 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="498" y="292" width="4" height="15" fill="rgb(208,202,1)"/><text x="501.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.11%)</title><rect x="482" y="180" width="24" height="15" fill="rgb(237,152,54)"/><text x="485.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.35%)</title><rect x="502" y="196" width="4" height="15" fill="rgb(253,149,30)"/><text x="505.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (11 samples, 3.86%)</title><rect x="465" y="164" width="45" height="15" fill="rgb(206,114,31)"/><text x="468.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.35%)</title><rect x="506" y="180" width="4" height="15" fill="rgb(234,39,33)"/><text x="509.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.35%)</title><rect x="506" y="196" width="4" height="15" fill="rgb(210,199,17)"/><text x="509.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.35%)</title><rect x="527" y="180" width="4" height="15" fill="rgb(205,160,5)"/><text x="530.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.35%)</title><rect x="531" y="180" width="4" height="15" fill="rgb(220,143,2)"/><text x="534.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.35%)</title><rect x="531" y="196" width="4" height="15" fill="rgb(235,126,45)"/><text x="534.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.35%)</title><rect x="531" y="212" width="4" height="15" fill="rgb(238,93,33)"/><text x="534.00" y="222.50"></text></g><g><title>_fix_unknown_dimension (shape.c:481) (1 samples, 0.35%)</title><rect x="531" y="228" width="4" height="15" fill="rgb(216,45,32)"/><text x="534.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.35%)</title><rect x="531" y="244" width="4" height="15" fill="rgb(250,49,1)"/><text x="534.00" y="254.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.35%)</title><rect x="535" y="180" width="4" height="15" fill="rgb(211,155,30)"/><text x="538.00" y="190.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.35%)</title><rect x="548" y="244" width="4" height="15" fill="rgb(237,26,29)"/><text x="551.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.35%)</title><rect x="552" y="260" width="4" height="15" fill="rgb(243,82,9)"/><text x="555.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.35%)</title><rect x="552" y="276" width="4" height="15" fill="rgb(241,83,33)"/><text x="555.00" y="286.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 1.75%)</title><rect x="539" y="180" width="21" height="15" fill="rgb(220,141,14)"/><text x="542.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 1.75%)</title><rect x="539" y="196" width="21" height="15" fill="rgb(254,214,34)"/><text x="542.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 1.75%)</title><rect x="539" y="212" width="21" height="15" fill="rgb(242,151,39)"/><text x="542.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.05%)</title><rect x="548" y="228" width="12" height="15" fill="rgb(249,15,54)"/><text x="551.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.70%)</title><rect x="552" y="244" width="8" height="15" fill="rgb(248,123,21)"/><text x="555.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.35%)</title><rect x="556" y="260" width="4" height="15" fill="rgb(241,174,13)"/><text x="559.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.35%)</title><rect x="556" y="276" width="4" height="15" fill="rgb(220,191,43)"/><text x="559.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.35%)</title><rect x="556" y="292" width="4" height="15" fill="rgb(220,33,34)"/><text x="559.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3142) (1 samples, 0.35%)</title><rect x="556" y="308" width="4" height="15" fill="rgb(241,214,1)"/><text x="559.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="560" y="196" width="4" height="15" fill="rgb(217,169,45)"/><text x="563.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.35%)</title><rect x="560" y="212" width="4" height="15" fill="rgb(243,186,4)"/><text x="563.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.35%)</title><rect x="560" y="228" width="4" height="15" fill="rgb(214,60,10)"/><text x="563.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.35%)</title><rect x="564" y="196" width="4" height="15" fill="rgb(248,147,1)"/><text x="567.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.35%)</title><rect x="564" y="212" width="4" height="15" fill="rgb(250,206,30)"/><text x="567.00" y="222.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:226) (1 samples, 0.35%)</title><rect x="564" y="228" width="4" height="15" fill="rgb(221,177,14)"/><text x="567.00" y="238.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.35%)</title><rect x="568" y="260" width="5" height="15" fill="rgb(212,194,8)"/><text x="571.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.70%)</title><rect x="568" y="244" width="9" height="15" fill="rgb(229,188,40)"/><text x="571.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.35%)</title><rect x="573" y="260" width="4" height="15" fill="rgb(248,132,8)"/><text x="576.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1071) (1 samples, 0.35%)</title><rect x="573" y="276" width="4" height="15" fill="rgb(221,21,41)"/><text x="576.00" y="286.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.35%)</title><rect x="573" y="292" width="4" height="15" fill="rgb(216,97,30)"/><text x="576.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.05%)</title><rect x="568" y="228" width="13" height="15" fill="rgb(205,195,41)"/><text x="571.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.35%)</title><rect x="577" y="244" width="4" height="15" fill="rgb(228,64,26)"/><text x="580.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.35%)</title><rect x="577" y="260" width="4" height="15" fill="rgb(237,171,0)"/><text x="580.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.35%)</title><rect x="581" y="244" width="4" height="15" fill="rgb(222,1,27)"/><text x="584.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.75%)</title><rect x="568" y="196" width="21" height="15" fill="rgb(250,122,34)"/><text x="571.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.75%)</title><rect x="568" y="212" width="21" height="15" fill="rgb(246,36,23)"/><text x="571.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.70%)</title><rect x="581" y="228" width="8" height="15" fill="rgb(210,38,24)"/><text x="584.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.35%)</title><rect x="585" y="244" width="4" height="15" fill="rgb(215,32,32)"/><text x="588.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1853) (1 samples, 0.35%)</title><rect x="585" y="260" width="4" height="15" fill="rgb(242,166,46)"/><text x="588.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.81%)</title><rect x="560" y="180" width="33" height="15" fill="rgb(217,197,47)"/><text x="563.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.35%)</title><rect x="589" y="196" width="4" height="15" fill="rgb(221,143,37)"/><text x="592.00" y="206.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.35%)</title><rect x="589" y="212" width="4" height="15" fill="rgb(214,41,53)"/><text x="592.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.35%)</title><rect x="589" y="228" width="4" height="15" fill="rgb(215,184,18)"/><text x="592.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.35%)</title><rect x="589" y="244" width="4" height="15" fill="rgb(235,126,35)"/><text x="592.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (137 samples, 48.07%)</title><rect x="30" y="132" width="567" height="15" fill="rgb(246,8,28)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (120 samples, 42.11%)</title><rect x="101" y="148" width="496" height="15" fill="rgb(223,43,50)"/><text x="104.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 7.37%)</title><rect x="510" y="164" width="87" height="15" fill="rgb(207,13,4)"/><text x="513.00" y="174.50">_predict_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.35%)</title><rect x="593" y="180" width="4" height="15" fill="rgb(208,97,18)"/><text x="596.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.35%)</title><rect x="593" y="196" width="4" height="15" fill="rgb(229,165,12)"/><text x="596.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:38) (142 samples, 49.82%)</title><rect x="14" y="52" width="588" height="15" fill="rgb(213,146,40)"/><text x="17.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_n..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:37) (142 samples, 49.82%)</title><rect x="14" y="68" width="588" height="15" fill="rgb(249,58,53)"/><text x="17.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_floa..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:29) (142 samples, 49.82%)</title><rect x="14" y="84" width="588" height="15" fill="rgb(206,171,23)"/><text x="17.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_fl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:23) (142 samples, 49.82%)</title><rect x="14" y="100" width="588" height="15" fill="rgb(214,163,2)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_no..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (141 samples, 49.47%)</title><rect x="18" y="116" width="584" height="15" fill="rgb(254,186,52)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="597" y="132" width="5" height="15" fill="rgb(250,23,52)"/><text x="600.00" y="142.50"></text></g><g><title>0x7f2386cfde72 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="597" y="148" width="5" height="15" fill="rgb(241,50,28)"/><text x="600.00" y="158.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.35%)</title><rect x="602" y="980" width="4" height="15" fill="rgb(242,119,39)"/><text x="605.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.35%)</title><rect x="602" y="996" width="4" height="15" fill="rgb(240,102,44)"/><text x="605.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.35%)</title><rect x="602" y="1012" width="4" height="15" fill="rgb(233,194,34)"/><text x="605.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.70%)</title><rect x="602" y="852" width="8" height="15" fill="rgb(215,61,54)"/><text x="605.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.70%)</title><rect x="602" y="868" width="8" height="15" fill="rgb(230,158,6)"/><text x="605.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.70%)</title><rect x="602" y="884" width="8" height="15" fill="rgb(207,131,18)"/><text x="605.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.70%)</title><rect x="602" y="900" width="8" height="15" fill="rgb(250,57,37)"/><text x="605.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.70%)</title><rect x="602" y="916" width="8" height="15" fill="rgb(254,208,17)"/><text x="605.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.70%)</title><rect x="602" y="932" width="8" height="15" fill="rgb(253,78,2)"/><text x="605.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.70%)</title><rect x="602" y="948" width="8" height="15" fill="rgb(208,180,16)"/><text x="605.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.70%)</title><rect x="602" y="964" width="8" height="15" fill="rgb(205,72,6)"/><text x="605.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.35%)</title><rect x="606" y="980" width="4" height="15" fill="rgb(235,163,42)"/><text x="609.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.35%)</title><rect x="606" y="996" width="4" height="15" fill="rgb(225,196,43)"/><text x="609.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.35%)</title><rect x="606" y="1012" width="4" height="15" fill="rgb(218,91,8)"/><text x="609.00" y="1022.50"></text></g><g><title>unicode_lower (python3.7) (1 samples, 0.35%)</title><rect x="606" y="1028" width="4" height="15" fill="rgb(253,6,51)"/><text x="609.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.35%)</title><rect x="610" y="852" width="4" height="15" fill="rgb(243,220,37)"/><text x="613.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.35%)</title><rect x="610" y="868" width="4" height="15" fill="rgb(240,132,33)"/><text x="613.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.35%)</title><rect x="610" y="884" width="4" height="15" fill="rgb(246,72,39)"/><text x="613.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.35%)</title><rect x="610" y="900" width="4" height="15" fill="rgb(233,12,30)"/><text x="613.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.35%)</title><rect x="610" y="916" width="4" height="15" fill="rgb(248,162,12)"/><text x="613.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.35%)</title><rect x="610" y="932" width="4" height="15" fill="rgb(220,60,53)"/><text x="613.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.35%)</title><rect x="610" y="948" width="4" height="15" fill="rgb(217,96,16)"/><text x="613.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.35%)</title><rect x="610" y="964" width="4" height="15" fill="rgb(236,121,38)"/><text x="613.00" y="974.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.35%)</title><rect x="614" y="884" width="4" height="15" fill="rgb(253,135,13)"/><text x="617.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.35%)</title><rect x="614" y="900" width="4" height="15" fill="rgb(234,47,24)"/><text x="617.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.35%)</title><rect x="614" y="916" width="4" height="15" fill="rgb(225,51,4)"/><text x="617.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.35%)</title><rect x="614" y="932" width="4" height="15" fill="rgb(223,95,4)"/><text x="617.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.35%)</title><rect x="614" y="948" width="4" height="15" fill="rgb(224,163,40)"/><text x="617.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.35%)</title><rect x="614" y="964" width="4" height="15" fill="rgb(242,174,44)"/><text x="617.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (5 samples, 1.75%)</title><rect x="602" y="148" width="20" height="15" fill="rgb(230,77,43)"/><text x="605.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="164" width="20" height="15" fill="rgb(247,83,21)"/><text x="605.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.75%)</title><rect x="602" y="180" width="20" height="15" fill="rgb(225,167,42)"/><text x="605.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="196" width="20" height="15" fill="rgb(244,205,38)"/><text x="605.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="212" width="20" height="15" fill="rgb(238,64,53)"/><text x="605.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="602" y="228" width="20" height="15" fill="rgb(243,128,51)"/><text x="605.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="602" y="244" width="20" height="15" fill="rgb(216,63,22)"/><text x="605.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="602" y="260" width="20" height="15" fill="rgb(223,74,2)"/><text x="605.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="276" width="20" height="15" fill="rgb(225,13,23)"/><text x="605.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.75%)</title><rect x="602" y="292" width="20" height="15" fill="rgb(243,198,35)"/><text x="605.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="308" width="20" height="15" fill="rgb(225,92,42)"/><text x="605.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="602" y="324" width="20" height="15" fill="rgb(232,49,48)"/><text x="605.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="602" y="340" width="20" height="15" fill="rgb(205,196,35)"/><text x="605.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="602" y="356" width="20" height="15" fill="rgb(228,101,47)"/><text x="605.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="372" width="20" height="15" fill="rgb(233,60,39)"/><text x="605.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.75%)</title><rect x="602" y="388" width="20" height="15" fill="rgb(237,176,53)"/><text x="605.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="404" width="20" height="15" fill="rgb(231,50,12)"/><text x="605.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="602" y="420" width="20" height="15" fill="rgb(219,39,40)"/><text x="605.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="602" y="436" width="20" height="15" fill="rgb(217,179,14)"/><text x="605.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="602" y="452" width="20" height="15" fill="rgb(206,61,42)"/><text x="605.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="468" width="20" height="15" fill="rgb(251,189,10)"/><text x="605.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.75%)</title><rect x="602" y="484" width="20" height="15" fill="rgb(228,204,24)"/><text x="605.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="500" width="20" height="15" fill="rgb(220,203,12)"/><text x="605.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="602" y="516" width="20" height="15" fill="rgb(221,138,15)"/><text x="605.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="602" y="532" width="20" height="15" fill="rgb(220,188,26)"/><text x="605.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="602" y="548" width="20" height="15" fill="rgb(251,11,25)"/><text x="605.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="564" width="20" height="15" fill="rgb(212,184,9)"/><text x="605.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.75%)</title><rect x="602" y="580" width="20" height="15" fill="rgb(233,4,23)"/><text x="605.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="596" width="20" height="15" fill="rgb(252,2,29)"/><text x="605.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.75%)</title><rect x="602" y="612" width="20" height="15" fill="rgb(239,20,1)"/><text x="605.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="628" width="20" height="15" fill="rgb(223,43,32)"/><text x="605.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="644" width="20" height="15" fill="rgb(210,149,34)"/><text x="605.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="602" y="660" width="20" height="15" fill="rgb(246,5,18)"/><text x="605.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="602" y="676" width="20" height="15" fill="rgb(253,98,24)"/><text x="605.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="602" y="692" width="20" height="15" fill="rgb(243,94,21)"/><text x="605.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="708" width="20" height="15" fill="rgb(221,80,44)"/><text x="605.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.75%)</title><rect x="602" y="724" width="20" height="15" fill="rgb(218,110,50)"/><text x="605.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="602" y="740" width="20" height="15" fill="rgb(240,101,4)"/><text x="605.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="602" y="756" width="20" height="15" fill="rgb(221,75,35)"/><text x="605.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="602" y="772" width="20" height="15" fill="rgb(209,38,49)"/><text x="605.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="602" y="788" width="20" height="15" fill="rgb(216,135,10)"/><text x="605.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="602" y="804" width="20" height="15" fill="rgb(230,124,11)"/><text x="605.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.75%)</title><rect x="602" y="820" width="20" height="15" fill="rgb(244,1,34)"/><text x="605.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.75%)</title><rect x="602" y="836" width="20" height="15" fill="rgb(241,117,1)"/><text x="605.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.70%)</title><rect x="614" y="852" width="8" height="15" fill="rgb(249,205,6)"/><text x="617.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.70%)</title><rect x="614" y="868" width="8" height="15" fill="rgb(228,161,28)"/><text x="617.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.35%)</title><rect x="618" y="884" width="4" height="15" fill="rgb(251,95,43)"/><text x="621.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.35%)</title><rect x="618" y="900" width="4" height="15" fill="rgb(205,178,53)"/><text x="621.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.35%)</title><rect x="618" y="916" width="4" height="15" fill="rgb(236,111,7)"/><text x="621.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.35%)</title><rect x="618" y="932" width="4" height="15" fill="rgb(216,217,22)"/><text x="621.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.35%)</title><rect x="618" y="948" width="4" height="15" fill="rgb(230,125,4)"/><text x="621.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.35%)</title><rect x="618" y="964" width="4" height="15" fill="rgb(218,203,50)"/><text x="621.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.35%)</title><rect x="618" y="980" width="4" height="15" fill="rgb(211,186,32)"/><text x="621.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.35%)</title><rect x="618" y="996" width="4" height="15" fill="rgb(234,53,17)"/><text x="621.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="618" y="1012" width="4" height="15" fill="rgb(243,63,6)"/><text x="621.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:4) (1 samples, 0.35%)</title><rect x="622" y="148" width="4" height="15" fill="rgb(249,9,37)"/><text x="625.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="164" width="4" height="15" fill="rgb(206,86,46)"/><text x="625.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="622" y="180" width="4" height="15" fill="rgb(235,43,43)"/><text x="625.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="196" width="4" height="15" fill="rgb(232,150,31)"/><text x="625.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="212" width="4" height="15" fill="rgb(235,138,1)"/><text x="625.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="228" width="4" height="15" fill="rgb(228,35,48)"/><text x="625.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="244" width="4" height="15" fill="rgb(217,201,47)"/><text x="625.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="260" width="4" height="15" fill="rgb(219,8,27)"/><text x="625.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="276" width="4" height="15" fill="rgb(252,134,10)"/><text x="625.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.35%)</title><rect x="622" y="292" width="4" height="15" fill="rgb(233,177,30)"/><text x="625.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(238,14,4)"/><text x="625.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="324" width="4" height="15" fill="rgb(230,105,2)"/><text x="625.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="340" width="4" height="15" fill="rgb(231,169,23)"/><text x="625.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="356" width="4" height="15" fill="rgb(237,115,45)"/><text x="625.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="372" width="4" height="15" fill="rgb(216,57,18)"/><text x="625.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.35%)</title><rect x="622" y="388" width="4" height="15" fill="rgb(251,201,40)"/><text x="625.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="404" width="4" height="15" fill="rgb(219,52,19)"/><text x="625.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="420" width="4" height="15" fill="rgb(245,227,41)"/><text x="625.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="436" width="4" height="15" fill="rgb(220,150,43)"/><text x="625.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="452" width="4" height="15" fill="rgb(248,229,31)"/><text x="625.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="468" width="4" height="15" fill="rgb(250,203,48)"/><text x="625.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.35%)</title><rect x="622" y="484" width="4" height="15" fill="rgb(227,102,34)"/><text x="625.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="500" width="4" height="15" fill="rgb(233,13,14)"/><text x="625.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="516" width="4" height="15" fill="rgb(225,82,36)"/><text x="625.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="532" width="4" height="15" fill="rgb(212,186,21)"/><text x="625.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="548" width="4" height="15" fill="rgb(219,8,54)"/><text x="625.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="564" width="4" height="15" fill="rgb(215,42,0)"/><text x="625.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.35%)</title><rect x="622" y="580" width="4" height="15" fill="rgb(224,89,48)"/><text x="625.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="596" width="4" height="15" fill="rgb(240,22,23)"/><text x="625.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="612" width="4" height="15" fill="rgb(212,17,42)"/><text x="625.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="628" width="4" height="15" fill="rgb(215,62,28)"/><text x="625.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="644" width="4" height="15" fill="rgb(214,123,38)"/><text x="625.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="660" width="4" height="15" fill="rgb(244,140,15)"/><text x="625.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.35%)</title><rect x="622" y="676" width="4" height="15" fill="rgb(245,167,8)"/><text x="625.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="692" width="4" height="15" fill="rgb(213,197,39)"/><text x="625.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="708" width="4" height="15" fill="rgb(233,87,52)"/><text x="625.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="724" width="4" height="15" fill="rgb(252,168,27)"/><text x="625.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="740" width="4" height="15" fill="rgb(234,175,3)"/><text x="625.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="756" width="4" height="15" fill="rgb(234,85,15)"/><text x="625.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.35%)</title><rect x="622" y="772" width="4" height="15" fill="rgb(232,70,30)"/><text x="625.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="622" y="788" width="4" height="15" fill="rgb(244,188,36)"/><text x="625.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="804" width="4" height="15" fill="rgb(228,122,24)"/><text x="625.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="820" width="4" height="15" fill="rgb(225,44,14)"/><text x="625.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="836" width="4" height="15" fill="rgb(235,45,29)"/><text x="625.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="852" width="4" height="15" fill="rgb(206,14,36)"/><text x="625.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="868" width="4" height="15" fill="rgb(226,42,42)"/><text x="625.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="884" width="4" height="15" fill="rgb(254,63,37)"/><text x="625.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.35%)</title><rect x="622" y="900" width="4" height="15" fill="rgb(254,209,15)"/><text x="625.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="916" width="4" height="15" fill="rgb(253,82,9)"/><text x="625.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="932" width="4" height="15" fill="rgb(247,33,24)"/><text x="625.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="948" width="4" height="15" fill="rgb(246,136,6)"/><text x="625.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="964" width="4" height="15" fill="rgb(253,142,48)"/><text x="625.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="980" width="4" height="15" fill="rgb(239,0,19)"/><text x="625.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.35%)</title><rect x="622" y="996" width="4" height="15" fill="rgb(218,188,25)"/><text x="625.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="622" y="1012" width="4" height="15" fill="rgb(254,180,22)"/><text x="625.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1028" width="4" height="15" fill="rgb(225,99,21)"/><text x="625.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="1044" width="4" height="15" fill="rgb(208,218,42)"/><text x="625.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="1060" width="4" height="15" fill="rgb(245,27,29)"/><text x="625.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="1076" width="4" height="15" fill="rgb(227,118,0)"/><text x="625.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="1092" width="4" height="15" fill="rgb(231,66,2)"/><text x="625.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1108" width="4" height="15" fill="rgb(212,6,33)"/><text x="625.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.35%)</title><rect x="622" y="1124" width="4" height="15" fill="rgb(253,52,48)"/><text x="625.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="1140" width="4" height="15" fill="rgb(234,155,26)"/><text x="625.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="1156" width="4" height="15" fill="rgb(242,122,31)"/><text x="625.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="1172" width="4" height="15" fill="rgb(206,199,10)"/><text x="625.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="1188" width="4" height="15" fill="rgb(246,46,7)"/><text x="625.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1204" width="4" height="15" fill="rgb(222,220,16)"/><text x="625.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:28) (1 samples, 0.35%)</title><rect x="622" y="1220" width="4" height="15" fill="rgb(239,119,19)"/><text x="625.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="1236" width="4" height="15" fill="rgb(216,5,4)"/><text x="625.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="1252" width="4" height="15" fill="rgb(245,167,23)"/><text x="625.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="1268" width="4" height="15" fill="rgb(228,195,41)"/><text x="625.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="1284" width="4" height="15" fill="rgb(218,172,27)"/><text x="625.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1300" width="4" height="15" fill="rgb(228,10,53)"/><text x="625.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_krylov.py:2) (1 samples, 0.35%)</title><rect x="622" y="1316" width="4" height="15" fill="rgb(245,198,17)"/><text x="625.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="1332" width="4" height="15" fill="rgb(248,116,2)"/><text x="625.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="1348" width="4" height="15" fill="rgb(211,123,1)"/><text x="625.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="1364" width="4" height="15" fill="rgb(209,23,31)"/><text x="625.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="622" y="1380" width="4" height="15" fill="rgb(246,185,51)"/><text x="625.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1396" width="4" height="15" fill="rgb(217,86,29)"/><text x="625.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trlib/__init__.py:1) (1 samples, 0.35%)</title><rect x="622" y="1412" width="4" height="15" fill="rgb(213,154,47)"/><text x="625.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="1428" width="4" height="15" fill="rgb(244,52,17)"/><text x="625.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="1444" width="4" height="15" fill="rgb(253,206,47)"/><text x="625.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="622" y="1460" width="4" height="15" fill="rgb(253,1,48)"/><text x="625.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.35%)</title><rect x="622" y="1476" width="4" height="15" fill="rgb(240,8,8)"/><text x="625.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1492" width="4" height="15" fill="rgb(242,165,49)"/><text x="625.00" y="1502.50"></text></g><g><title>0x7f236685b449 (?) (1 samples, 0.35%)</title><rect x="622" y="1508" width="4" height="15" fill="rgb(230,2,29)"/><text x="625.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="622" y="1524" width="4" height="15" fill="rgb(217,135,41)"/><text x="625.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="622" y="1540" width="4" height="15" fill="rgb(223,1,13)"/><text x="625.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.35%)</title><rect x="622" y="1556" width="4" height="15" fill="rgb(251,90,7)"/><text x="625.00" y="1566.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.35%)</title><rect x="622" y="1572" width="4" height="15" fill="rgb(254,228,26)"/><text x="625.00" y="1582.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.35%)</title><rect x="622" y="1588" width="4" height="15" fill="rgb(246,214,34)"/><text x="625.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="622" y="1604" width="4" height="15" fill="rgb(208,13,19)"/><text x="625.00" y="1614.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1620" width="4" height="15" fill="rgb(205,113,54)"/><text x="625.00" y="1630.50"></text></g><g><title>0x7f2386ea7995 (libdl-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1636" width="4" height="15" fill="rgb(230,21,28)"/><text x="625.00" y="1646.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1652" width="4" height="15" fill="rgb(249,81,1)"/><text x="625.00" y="1662.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1668" width="4" height="15" fill="rgb(253,194,15)"/><text x="625.00" y="1678.50"></text></g><g><title>0x7f2386ea7258 (libdl-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1684" width="4" height="15" fill="rgb(214,163,15)"/><text x="625.00" y="1694.50"></text></g><g><title>0x7f2386ef4d7a (ld-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1700" width="4" height="15" fill="rgb(254,111,15)"/><text x="625.00" y="1710.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1716" width="4" height="15" fill="rgb(237,182,53)"/><text x="625.00" y="1726.50"></text></g><g><title>0x7f2386ef518b (ld-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1732" width="4" height="15" fill="rgb(252,168,35)"/><text x="625.00" y="1742.50"></text></g><g><title>0x7f2386eeac1a (ld-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1748" width="4" height="15" fill="rgb(228,44,36)"/><text x="625.00" y="1758.50"></text></g><g><title>0x7f2386ee8521 (ld-2.29.so) (1 samples, 0.35%)</title><rect x="622" y="1764" width="4" height="15" fill="rgb(216,182,10)"/><text x="625.00" y="1774.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:114) (1 samples, 0.35%)</title><rect x="626" y="772" width="5" height="15" fill="rgb(250,115,6)"/><text x="629.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.35%)</title><rect x="626" y="788" width="5" height="15" fill="rgb(205,124,32)"/><text x="629.00" y="798.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.35%)</title><rect x="626" y="804" width="5" height="15" fill="rgb(219,70,12)"/><text x="629.00" y="814.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:167) (1 samples, 0.35%)</title><rect x="626" y="820" width="5" height="15" fill="rgb(239,205,13)"/><text x="629.00" y="830.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.70%)</title><rect x="626" y="484" width="9" height="15" fill="rgb(254,116,16)"/><text x="629.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="626" y="500" width="9" height="15" fill="rgb(232,106,47)"/><text x="629.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="626" y="516" width="9" height="15" fill="rgb(242,66,12)"/><text x="629.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="626" y="532" width="9" height="15" fill="rgb(208,223,15)"/><text x="629.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="626" y="548" width="9" height="15" fill="rgb(232,83,18)"/><text x="629.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="626" y="564" width="9" height="15" fill="rgb(221,40,32)"/><text x="629.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.70%)</title><rect x="626" y="580" width="9" height="15" fill="rgb(253,21,26)"/><text x="629.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="626" y="596" width="9" height="15" fill="rgb(241,122,26)"/><text x="629.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="626" y="612" width="9" height="15" fill="rgb(251,228,3)"/><text x="629.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="626" y="628" width="9" height="15" fill="rgb(223,227,5)"/><text x="629.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="626" y="644" width="9" height="15" fill="rgb(218,174,46)"/><text x="629.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="626" y="660" width="9" height="15" fill="rgb(227,102,49)"/><text x="629.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.70%)</title><rect x="626" y="676" width="9" height="15" fill="rgb(211,20,10)"/><text x="629.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="626" y="692" width="9" height="15" fill="rgb(213,57,50)"/><text x="629.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="626" y="708" width="9" height="15" fill="rgb(205,143,32)"/><text x="629.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="626" y="724" width="9" height="15" fill="rgb(245,30,37)"/><text x="629.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="626" y="740" width="9" height="15" fill="rgb(241,129,45)"/><text x="629.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="626" y="756" width="9" height="15" fill="rgb(209,128,53)"/><text x="629.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.35%)</title><rect x="631" y="772" width="4" height="15" fill="rgb(213,16,41)"/><text x="634.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="631" y="788" width="4" height="15" fill="rgb(208,107,24)"/><text x="634.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="631" y="804" width="4" height="15" fill="rgb(206,209,15)"/><text x="634.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="631" y="820" width="4" height="15" fill="rgb(241,123,16)"/><text x="634.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="631" y="836" width="4" height="15" fill="rgb(207,96,16)"/><text x="634.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="631" y="852" width="4" height="15" fill="rgb(240,189,6)"/><text x="634.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="631" y="868" width="4" height="15" fill="rgb(223,112,21)"/><text x="634.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="631" y="884" width="4" height="15" fill="rgb(232,217,2)"/><text x="634.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.35%)</title><rect x="631" y="900" width="4" height="15" fill="rgb(222,133,44)"/><text x="634.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="631" y="916" width="4" height="15" fill="rgb(232,93,49)"/><text x="634.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="631" y="932" width="4" height="15" fill="rgb(217,179,23)"/><text x="634.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="631" y="948" width="4" height="15" fill="rgb(248,88,43)"/><text x="634.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="631" y="964" width="4" height="15" fill="rgb(237,99,36)"/><text x="634.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="631" y="980" width="4" height="15" fill="rgb(209,132,26)"/><text x="634.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.35%)</title><rect x="631" y="996" width="4" height="15" fill="rgb(229,61,51)"/><text x="634.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="631" y="1012" width="4" height="15" fill="rgb(205,114,13)"/><text x="634.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="631" y="1028" width="4" height="15" fill="rgb(234,23,45)"/><text x="634.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="631" y="1044" width="4" height="15" fill="rgb(215,215,31)"/><text x="634.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="631" y="1060" width="4" height="15" fill="rgb(206,91,20)"/><text x="634.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="631" y="1076" width="4" height="15" fill="rgb(249,122,18)"/><text x="634.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:89) (1 samples, 0.35%)</title><rect x="631" y="1092" width="4" height="15" fill="rgb(224,137,31)"/><text x="634.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="631" y="1108" width="4" height="15" fill="rgb(226,147,38)"/><text x="634.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="631" y="1124" width="4" height="15" fill="rgb(221,15,32)"/><text x="634.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="631" y="1140" width="4" height="15" fill="rgb(206,78,30)"/><text x="634.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.40%)</title><rect x="626" y="244" width="17" height="15" fill="rgb(228,135,29)"/><text x="629.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.40%)</title><rect x="626" y="260" width="17" height="15" fill="rgb(221,41,40)"/><text x="629.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.40%)</title><rect x="626" y="276" width="17" height="15" fill="rgb(235,84,28)"/><text x="629.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.40%)</title><rect x="626" y="292" width="17" height="15" fill="rgb(238,206,23)"/><text x="629.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.40%)</title><rect x="626" y="308" width="17" height="15" fill="rgb(224,113,45)"/><text x="629.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.40%)</title><rect x="626" y="324" width="17" height="15" fill="rgb(214,34,14)"/><text x="629.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.40%)</title><rect x="626" y="340" width="17" height="15" fill="rgb(244,79,53)"/><text x="629.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.40%)</title><rect x="626" y="356" width="17" height="15" fill="rgb(212,142,4)"/><text x="629.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.40%)</title><rect x="626" y="372" width="17" height="15" fill="rgb(232,97,43)"/><text x="629.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.40%)</title><rect x="626" y="388" width="17" height="15" fill="rgb(246,57,8)"/><text x="629.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.40%)</title><rect x="626" y="404" width="17" height="15" fill="rgb(233,64,16)"/><text x="629.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.40%)</title><rect x="626" y="420" width="17" height="15" fill="rgb(239,144,42)"/><text x="629.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.40%)</title><rect x="626" y="436" width="17" height="15" fill="rgb(207,69,15)"/><text x="629.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.40%)</title><rect x="626" y="452" width="17" height="15" fill="rgb(208,218,12)"/><text x="629.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.40%)</title><rect x="626" y="468" width="17" height="15" fill="rgb(231,124,34)"/><text x="629.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.70%)</title><rect x="635" y="484" width="8" height="15" fill="rgb(209,223,5)"/><text x="638.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="500" width="8" height="15" fill="rgb(232,46,0)"/><text x="638.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="635" y="516" width="8" height="15" fill="rgb(218,204,0)"/><text x="638.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="635" y="532" width="8" height="15" fill="rgb(222,61,38)"/><text x="638.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="635" y="548" width="8" height="15" fill="rgb(236,36,13)"/><text x="638.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="564" width="8" height="15" fill="rgb(251,37,4)"/><text x="638.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.70%)</title><rect x="635" y="580" width="8" height="15" fill="rgb(241,68,51)"/><text x="638.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="596" width="8" height="15" fill="rgb(209,127,8)"/><text x="638.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.70%)</title><rect x="635" y="612" width="8" height="15" fill="rgb(231,40,24)"/><text x="638.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="628" width="8" height="15" fill="rgb(217,94,33)"/><text x="638.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="644" width="8" height="15" fill="rgb(237,187,52)"/><text x="638.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="635" y="660" width="8" height="15" fill="rgb(231,212,25)"/><text x="638.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="635" y="676" width="8" height="15" fill="rgb(246,55,42)"/><text x="638.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="635" y="692" width="8" height="15" fill="rgb(216,112,21)"/><text x="638.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="708" width="8" height="15" fill="rgb(240,56,11)"/><text x="638.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.70%)</title><rect x="635" y="724" width="8" height="15" fill="rgb(209,68,14)"/><text x="638.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="740" width="8" height="15" fill="rgb(234,114,1)"/><text x="638.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="635" y="756" width="8" height="15" fill="rgb(210,107,8)"/><text x="638.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="635" y="772" width="8" height="15" fill="rgb(216,110,42)"/><text x="638.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="635" y="788" width="8" height="15" fill="rgb(249,171,11)"/><text x="638.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="804" width="8" height="15" fill="rgb(239,202,33)"/><text x="638.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.70%)</title><rect x="635" y="820" width="8" height="15" fill="rgb(229,51,1)"/><text x="638.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="836" width="8" height="15" fill="rgb(212,78,19)"/><text x="638.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="635" y="852" width="8" height="15" fill="rgb(210,222,11)"/><text x="638.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="635" y="868" width="8" height="15" fill="rgb(209,43,2)"/><text x="638.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="635" y="884" width="8" height="15" fill="rgb(227,61,7)"/><text x="638.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="900" width="8" height="15" fill="rgb(244,49,5)"/><text x="638.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.70%)</title><rect x="635" y="916" width="8" height="15" fill="rgb(224,202,37)"/><text x="638.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="932" width="8" height="15" fill="rgb(213,43,29)"/><text x="638.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.70%)</title><rect x="635" y="948" width="8" height="15" fill="rgb(245,227,19)"/><text x="638.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="964" width="8" height="15" fill="rgb(220,124,5)"/><text x="638.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="980" width="8" height="15" fill="rgb(250,156,20)"/><text x="638.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="635" y="996" width="8" height="15" fill="rgb(217,212,20)"/><text x="638.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="635" y="1012" width="8" height="15" fill="rgb(228,58,20)"/><text x="638.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.70%)</title><rect x="635" y="1028" width="8" height="15" fill="rgb(249,133,10)"/><text x="638.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.70%)</title><rect x="635" y="1044" width="8" height="15" fill="rgb(243,146,40)"/><text x="638.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (2 samples, 0.70%)</title><rect x="635" y="1060" width="8" height="15" fill="rgb(245,149,12)"/><text x="638.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.70%)</title><rect x="635" y="1076" width="8" height="15" fill="rgb(245,145,40)"/><text x="638.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.70%)</title><rect x="635" y="1092" width="8" height="15" fill="rgb(240,38,49)"/><text x="638.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.70%)</title><rect x="635" y="1108" width="8" height="15" fill="rgb(239,44,5)"/><text x="638.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.70%)</title><rect x="635" y="1124" width="8" height="15" fill="rgb(209,32,32)"/><text x="638.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.70%)</title><rect x="635" y="1140" width="8" height="15" fill="rgb(230,3,54)"/><text x="638.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.70%)</title><rect x="635" y="1156" width="8" height="15" fill="rgb(235,181,15)"/><text x="638.00" y="1166.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:4) (11 samples, 3.86%)</title><rect x="602" y="52" width="45" height="15" fill="rgb(237,1,52)"/><text x="605.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.86%)</title><rect x="602" y="68" width="45" height="15" fill="rgb(208,156,52)"/><text x="605.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.86%)</title><rect x="602" y="84" width="45" height="15" fill="rgb(254,224,2)"/><text x="605.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.86%)</title><rect x="602" y="100" width="45" height="15" fill="rgb(210,170,18)"/><text x="605.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.86%)</title><rect x="602" y="116" width="45" height="15" fill="rgb(239,103,16)"/><text x="605.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.86%)</title><rect x="602" y="132" width="45" height="15" fill="rgb(234,101,13)"/><text x="605.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (5 samples, 1.75%)</title><rect x="626" y="148" width="21" height="15" fill="rgb(230,35,22)"/><text x="629.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.75%)</title><rect x="626" y="164" width="21" height="15" fill="rgb(216,217,13)"/><text x="629.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.75%)</title><rect x="626" y="180" width="21" height="15" fill="rgb(214,9,29)"/><text x="629.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.75%)</title><rect x="626" y="196" width="21" height="15" fill="rgb(238,208,44)"/><text x="629.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.75%)</title><rect x="626" y="212" width="21" height="15" fill="rgb(252,163,48)"/><text x="629.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.75%)</title><rect x="626" y="228" width="21" height="15" fill="rgb(221,175,39)"/><text x="629.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (1 samples, 0.35%)</title><rect x="643" y="244" width="4" height="15" fill="rgb(224,83,27)"/><text x="646.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="260" width="4" height="15" fill="rgb(227,120,43)"/><text x="646.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="276" width="4" height="15" fill="rgb(232,2,40)"/><text x="646.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="292" width="4" height="15" fill="rgb(234,30,21)"/><text x="646.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="308" width="4" height="15" fill="rgb(237,10,7)"/><text x="646.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="324" width="4" height="15" fill="rgb(231,228,44)"/><text x="646.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (1 samples, 0.35%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(223,66,34)"/><text x="646.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="356" width="4" height="15" fill="rgb(237,157,2)"/><text x="646.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="372" width="4" height="15" fill="rgb(205,147,1)"/><text x="646.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="388" width="4" height="15" fill="rgb(227,22,9)"/><text x="646.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="404" width="4" height="15" fill="rgb(251,96,3)"/><text x="646.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="420" width="4" height="15" fill="rgb(206,208,50)"/><text x="646.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.35%)</title><rect x="643" y="436" width="4" height="15" fill="rgb(223,112,39)"/><text x="646.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="452" width="4" height="15" fill="rgb(243,23,43)"/><text x="646.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="643" y="468" width="4" height="15" fill="rgb(245,19,9)"/><text x="646.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="484" width="4" height="15" fill="rgb(223,101,46)"/><text x="646.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="500" width="4" height="15" fill="rgb(234,155,32)"/><text x="646.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="516" width="4" height="15" fill="rgb(224,87,45)"/><text x="646.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="532" width="4" height="15" fill="rgb(234,213,25)"/><text x="646.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="548" width="4" height="15" fill="rgb(236,133,29)"/><text x="646.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="564" width="4" height="15" fill="rgb(254,142,12)"/><text x="646.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.35%)</title><rect x="643" y="580" width="4" height="15" fill="rgb(253,11,45)"/><text x="646.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="596" width="4" height="15" fill="rgb(241,228,31)"/><text x="646.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="612" width="4" height="15" fill="rgb(246,29,22)"/><text x="646.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="628" width="4" height="15" fill="rgb(206,72,49)"/><text x="646.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="644" width="4" height="15" fill="rgb(205,179,23)"/><text x="646.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="660" width="4" height="15" fill="rgb(220,221,46)"/><text x="646.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.35%)</title><rect x="643" y="676" width="4" height="15" fill="rgb(222,164,24)"/><text x="646.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="692" width="4" height="15" fill="rgb(223,93,44)"/><text x="646.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="708" width="4" height="15" fill="rgb(239,156,47)"/><text x="646.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="724" width="4" height="15" fill="rgb(231,216,41)"/><text x="646.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="740" width="4" height="15" fill="rgb(218,19,44)"/><text x="646.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="756" width="4" height="15" fill="rgb(207,142,20)"/><text x="646.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.35%)</title><rect x="643" y="772" width="4" height="15" fill="rgb(248,142,39)"/><text x="646.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="788" width="4" height="15" fill="rgb(217,24,18)"/><text x="646.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="804" width="4" height="15" fill="rgb(245,225,30)"/><text x="646.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="820" width="4" height="15" fill="rgb(240,150,12)"/><text x="646.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="836" width="4" height="15" fill="rgb(239,218,36)"/><text x="646.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="852" width="4" height="15" fill="rgb(233,191,0)"/><text x="646.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.35%)</title><rect x="643" y="868" width="4" height="15" fill="rgb(223,176,51)"/><text x="646.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="884" width="4" height="15" fill="rgb(244,125,0)"/><text x="646.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.35%)</title><rect x="643" y="900" width="4" height="15" fill="rgb(234,58,29)"/><text x="646.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="916" width="4" height="15" fill="rgb(240,33,23)"/><text x="646.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="932" width="4" height="15" fill="rgb(254,25,4)"/><text x="646.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="948" width="4" height="15" fill="rgb(226,75,13)"/><text x="646.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="964" width="4" height="15" fill="rgb(213,205,52)"/><text x="646.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="980" width="4" height="15" fill="rgb(206,220,25)"/><text x="646.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="996" width="4" height="15" fill="rgb(216,105,51)"/><text x="646.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.35%)</title><rect x="643" y="1012" width="4" height="15" fill="rgb(254,157,45)"/><text x="646.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1028" width="4" height="15" fill="rgb(245,93,27)"/><text x="646.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1044" width="4" height="15" fill="rgb(229,226,12)"/><text x="646.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1060" width="4" height="15" fill="rgb(245,40,39)"/><text x="646.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1076" width="4" height="15" fill="rgb(242,163,4)"/><text x="646.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1092" width="4" height="15" fill="rgb(253,207,33)"/><text x="646.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.35%)</title><rect x="643" y="1108" width="4" height="15" fill="rgb(246,31,35)"/><text x="646.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1124" width="4" height="15" fill="rgb(253,135,42)"/><text x="646.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1140" width="4" height="15" fill="rgb(252,56,3)"/><text x="646.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1156" width="4" height="15" fill="rgb(214,105,44)"/><text x="646.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1172" width="4" height="15" fill="rgb(249,209,31)"/><text x="646.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1188" width="4" height="15" fill="rgb(231,91,16)"/><text x="646.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.35%)</title><rect x="643" y="1204" width="4" height="15" fill="rgb(254,207,2)"/><text x="646.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1220" width="4" height="15" fill="rgb(253,27,11)"/><text x="646.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1236" width="4" height="15" fill="rgb(235,4,28)"/><text x="646.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1252" width="4" height="15" fill="rgb(236,49,12)"/><text x="646.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1268" width="4" height="15" fill="rgb(213,66,13)"/><text x="646.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1284" width="4" height="15" fill="rgb(236,36,47)"/><text x="646.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.35%)</title><rect x="643" y="1300" width="4" height="15" fill="rgb(237,54,29)"/><text x="646.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1316" width="4" height="15" fill="rgb(213,76,2)"/><text x="646.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1332" width="4" height="15" fill="rgb(238,146,5)"/><text x="646.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1348" width="4" height="15" fill="rgb(224,32,32)"/><text x="646.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1364" width="4" height="15" fill="rgb(221,195,14)"/><text x="646.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1380" width="4" height="15" fill="rgb(254,40,44)"/><text x="646.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.35%)</title><rect x="643" y="1396" width="4" height="15" fill="rgb(243,1,49)"/><text x="646.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1412" width="4" height="15" fill="rgb(232,209,51)"/><text x="646.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1428" width="4" height="15" fill="rgb(249,189,4)"/><text x="646.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1444" width="4" height="15" fill="rgb(221,34,7)"/><text x="646.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1460" width="4" height="15" fill="rgb(218,155,4)"/><text x="646.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1476" width="4" height="15" fill="rgb(249,151,3)"/><text x="646.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.35%)</title><rect x="643" y="1492" width="4" height="15" fill="rgb(217,31,11)"/><text x="646.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.35%)</title><rect x="643" y="1508" width="4" height="15" fill="rgb(253,91,37)"/><text x="646.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1524" width="4" height="15" fill="rgb(220,220,51)"/><text x="646.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1540" width="4" height="15" fill="rgb(247,131,14)"/><text x="646.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1556" width="4" height="15" fill="rgb(243,149,36)"/><text x="646.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1572" width="4" height="15" fill="rgb(254,62,44)"/><text x="646.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1588" width="4" height="15" fill="rgb(219,3,53)"/><text x="646.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1604" width="4" height="15" fill="rgb(237,148,26)"/><text x="646.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:6) (1 samples, 0.35%)</title><rect x="643" y="1620" width="4" height="15" fill="rgb(222,20,42)"/><text x="646.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1636" width="4" height="15" fill="rgb(206,207,36)"/><text x="646.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1652" width="4" height="15" fill="rgb(215,76,30)"/><text x="646.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1668" width="4" height="15" fill="rgb(236,207,1)"/><text x="646.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1684" width="4" height="15" fill="rgb(244,42,4)"/><text x="646.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1700" width="4" height="15" fill="rgb(235,207,3)"/><text x="646.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py:17) (1 samples, 0.35%)</title><rect x="643" y="1716" width="4" height="15" fill="rgb(227,134,39)"/><text x="646.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1732" width="4" height="15" fill="rgb(206,20,6)"/><text x="646.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1748" width="4" height="15" fill="rgb(217,40,23)"/><text x="646.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.35%)</title><rect x="643" y="1764" width="4" height="15" fill="rgb(240,115,27)"/><text x="646.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.35%)</title><rect x="643" y="1780" width="4" height="15" fill="rgb(233,62,28)"/><text x="646.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.35%)</title><rect x="643" y="1796" width="4" height="15" fill="rgb(237,229,5)"/><text x="646.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py:9) (1 samples, 0.35%)</title><rect x="643" y="1812" width="4" height="15" fill="rgb(253,229,19)"/><text x="646.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.35%)</title><rect x="643" y="1828" width="4" height="15" fill="rgb(213,210,54)"/><text x="646.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.35%)</title><rect x="643" y="1844" width="4" height="15" fill="rgb(211,214,39)"/><text x="646.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.35%)</title><rect x="643" y="1860" width="4" height="15" fill="rgb(238,106,37)"/><text x="646.00" y="1870.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.35%)</title><rect x="643" y="1876" width="4" height="15" fill="rgb(226,223,48)"/><text x="646.00" y="1886.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.35%)</title><rect x="643" y="1892" width="4" height="15" fill="rgb(233,203,49)"/><text x="646.00" y="1902.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.35%)</title><rect x="643" y="1908" width="4" height="15" fill="rgb(253,9,22)"/><text x="646.00" y="1918.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:370) (1 samples, 0.35%)</title><rect x="643" y="1924" width="4" height="15" fill="rgb(205,29,49)"/><text x="646.00" y="1934.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.35%)</title><rect x="643" y="1940" width="4" height="15" fill="rgb(242,206,12)"/><text x="646.00" y="1950.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:22) (1 samples, 0.35%)</title><rect x="647" y="100" width="4" height="15" fill="rgb(206,93,44)"/><text x="650.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.35%)</title><rect x="684" y="148" width="5" height="15" fill="rgb(230,222,37)"/><text x="687.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.35%)</title><rect x="697" y="164" width="4" height="15" fill="rgb(237,76,27)"/><text x="700.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.70%)</title><rect x="705" y="180" width="8" height="15" fill="rgb(224,41,42)"/><text x="708.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.35%)</title><rect x="709" y="196" width="4" height="15" fill="rgb(242,151,27)"/><text x="712.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.35%)</title><rect x="746" y="260" width="5" height="15" fill="rgb(208,214,40)"/><text x="749.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.35%)</title><rect x="751" y="260" width="4" height="15" fill="rgb(241,56,47)"/><text x="754.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.35%)</title><rect x="751" y="276" width="4" height="15" fill="rgb(220,145,4)"/><text x="754.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.35%)</title><rect x="751" y="292" width="4" height="15" fill="rgb(240,166,50)"/><text x="754.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.35%)</title><rect x="755" y="260" width="4" height="15" fill="rgb(226,152,18)"/><text x="758.00" y="270.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.35%)</title><rect x="759" y="260" width="4" height="15" fill="rgb(222,88,19)"/><text x="762.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.35%)</title><rect x="759" y="276" width="4" height="15" fill="rgb(246,158,37)"/><text x="762.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c:194) (1 samples, 0.35%)</title><rect x="759" y="292" width="4" height="15" fill="rgb(243,155,12)"/><text x="762.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.35%)</title><rect x="775" y="308" width="5" height="15" fill="rgb(248,73,32)"/><text x="778.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.70%)</title><rect x="780" y="324" width="8" height="15" fill="rgb(217,54,31)"/><text x="783.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.35%)</title><rect x="788" y="324" width="4" height="15" fill="rgb(208,50,46)"/><text x="791.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.35%)</title><rect x="788" y="340" width="4" height="15" fill="rgb(211,65,3)"/><text x="791.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1605) (1 samples, 0.35%)</title><rect x="788" y="356" width="4" height="15" fill="rgb(231,142,1)"/><text x="791.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.35%)</title><rect x="792" y="356" width="4" height="15" fill="rgb(225,204,6)"/><text x="795.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.35%)</title><rect x="792" y="372" width="4" height="15" fill="rgb(234,70,44)"/><text x="795.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.35%)</title><rect x="792" y="388" width="4" height="15" fill="rgb(212,126,14)"/><text x="795.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="792" y="404" width="4" height="15" fill="rgb(242,32,16)"/><text x="795.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.35%)</title><rect x="796" y="372" width="4" height="15" fill="rgb(212,171,39)"/><text x="799.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.35%)</title><rect x="800" y="404" width="4" height="15" fill="rgb(233,167,39)"/><text x="803.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.35%)</title><rect x="800" y="420" width="4" height="15" fill="rgb(219,51,34)"/><text x="803.00" y="430.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="800" y="436" width="4" height="15" fill="rgb(234,209,45)"/><text x="803.00" y="446.50"></text></g><g><title>0x7f2386bd7a19 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="800" y="452" width="4" height="15" fill="rgb(230,33,12)"/><text x="803.00" y="462.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.35%)</title><rect x="800" y="468" width="4" height="15" fill="rgb(228,186,46)"/><text x="803.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 1.40%)</title><rect x="796" y="356" width="17" height="15" fill="rgb(228,115,22)"/><text x="799.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 1.05%)</title><rect x="800" y="372" width="13" height="15" fill="rgb(221,14,3)"/><text x="803.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 1.05%)</title><rect x="800" y="388" width="13" height="15" fill="rgb(232,30,4)"/><text x="803.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.70%)</title><rect x="804" y="404" width="9" height="15" fill="rgb(209,228,29)"/><text x="807.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.35%)</title><rect x="809" y="420" width="4" height="15" fill="rgb(207,142,38)"/><text x="812.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.35%)</title><rect x="809" y="436" width="4" height="15" fill="rgb(217,180,48)"/><text x="812.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.35%)</title><rect x="813" y="372" width="4" height="15" fill="rgb(205,5,20)"/><text x="816.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.35%)</title><rect x="813" y="388" width="4" height="15" fill="rgb(224,115,15)"/><text x="816.00" y="398.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.35%)</title><rect x="813" y="404" width="4" height="15" fill="rgb(218,63,0)"/><text x="816.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.35%)</title><rect x="817" y="372" width="4" height="15" fill="rgb(236,154,13)"/><text x="820.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.35%)</title><rect x="817" y="388" width="4" height="15" fill="rgb(224,227,8)"/><text x="820.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 1.05%)</title><rect x="813" y="356" width="12" height="15" fill="rgb(234,93,8)"/><text x="816.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.35%)</title><rect x="821" y="372" width="4" height="15" fill="rgb(252,63,19)"/><text x="824.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.35%)</title><rect x="821" y="388" width="4" height="15" fill="rgb(253,142,18)"/><text x="824.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 5.61%)</title><rect x="763" y="260" width="66" height="15" fill="rgb(220,183,11)"/><text x="766.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 5.61%)</title><rect x="763" y="276" width="66" height="15" fill="rgb(251,214,18)"/><text x="766.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 4.91%)</title><rect x="771" y="292" width="58" height="15" fill="rgb(254,121,1)"/><text x="774.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 4.21%)</title><rect x="780" y="308" width="49" height="15" fill="rgb(219,88,33)"/><text x="783.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 3.16%)</title><rect x="792" y="324" width="37" height="15" fill="rgb(245,132,26)"/><text x="795.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 3.16%)</title><rect x="792" y="340" width="37" height="15" fill="rgb(221,178,22)"/><text x="795.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.35%)</title><rect x="825" y="356" width="4" height="15" fill="rgb(227,53,10)"/><text x="828.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.35%)</title><rect x="825" y="372" width="4" height="15" fill="rgb(218,55,48)"/><text x="828.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.35%)</title><rect x="825" y="388" width="4" height="15" fill="rgb(249,106,3)"/><text x="828.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.35%)</title><rect x="829" y="260" width="4" height="15" fill="rgb(246,137,25)"/><text x="832.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.35%)</title><rect x="829" y="276" width="4" height="15" fill="rgb(214,141,3)"/><text x="832.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.35%)</title><rect x="829" y="292" width="4" height="15" fill="rgb(215,187,15)"/><text x="832.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.35%)</title><rect x="833" y="276" width="5" height="15" fill="rgb(220,87,21)"/><text x="836.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.35%)</title><rect x="833" y="292" width="5" height="15" fill="rgb(242,126,11)"/><text x="836.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.35%)</title><rect x="838" y="276" width="4" height="15" fill="rgb(230,27,15)"/><text x="841.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.35%)</title><rect x="838" y="292" width="4" height="15" fill="rgb(252,145,37)"/><text x="841.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.35%)</title><rect x="842" y="276" width="4" height="15" fill="rgb(225,98,18)"/><text x="845.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.35%)</title><rect x="842" y="292" width="4" height="15" fill="rgb(247,25,47)"/><text x="845.00" y="302.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.35%)</title><rect x="842" y="308" width="4" height="15" fill="rgb(219,185,28)"/><text x="845.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.35%)</title><rect x="846" y="292" width="4" height="15" fill="rgb(249,90,27)"/><text x="849.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.35%)</title><rect x="846" y="308" width="4" height="15" fill="rgb(254,49,14)"/><text x="849.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.35%)</title><rect x="846" y="324" width="4" height="15" fill="rgb(227,74,38)"/><text x="849.00" y="334.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (28 samples, 9.82%)</title><rect x="738" y="244" width="116" height="15" fill="rgb(221,11,8)"/><text x="741.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.75%)</title><rect x="833" y="260" width="21" height="15" fill="rgb(243,61,9)"/><text x="836.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.70%)</title><rect x="846" y="276" width="8" height="15" fill="rgb(241,25,49)"/><text x="849.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.35%)</title><rect x="850" y="292" width="4" height="15" fill="rgb(226,19,43)"/><text x="853.00" y="302.50"></text></g><g><title>0x7f2385e42c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="850" y="308" width="4" height="15" fill="rgb(249,7,43)"/><text x="853.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.35%)</title><rect x="862" y="260" width="5" height="15" fill="rgb(246,71,47)"/><text x="865.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.35%)</title><rect x="862" y="276" width="5" height="15" fill="rgb(210,183,32)"/><text x="865.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.35%)</title><rect x="862" y="292" width="5" height="15" fill="rgb(205,89,41)"/><text x="865.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.35%)</title><rect x="867" y="276" width="4" height="15" fill="rgb(237,57,18)"/><text x="870.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.35%)</title><rect x="867" y="292" width="4" height="15" fill="rgb(245,73,48)"/><text x="870.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.35%)</title><rect x="867" y="308" width="4" height="15" fill="rgb(254,127,0)"/><text x="870.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.35%)</title><rect x="867" y="324" width="4" height="15" fill="rgb(250,9,11)"/><text x="870.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.35%)</title><rect x="871" y="276" width="4" height="15" fill="rgb(244,91,19)"/><text x="874.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.35%)</title><rect x="871" y="292" width="4" height="15" fill="rgb(232,61,27)"/><text x="874.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.35%)</title><rect x="875" y="308" width="4" height="15" fill="rgb(249,84,3)"/><text x="878.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.35%)</title><rect x="879" y="324" width="4" height="15" fill="rgb(242,196,12)"/><text x="882.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="879" y="340" width="4" height="15" fill="rgb(248,194,49)"/><text x="882.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.70%)</title><rect x="879" y="308" width="8" height="15" fill="rgb(249,138,49)"/><text x="882.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.35%)</title><rect x="883" y="324" width="4" height="15" fill="rgb(211,2,16)"/><text x="886.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.35%)</title><rect x="883" y="340" width="4" height="15" fill="rgb(224,26,2)"/><text x="886.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.35%)</title><rect x="883" y="356" width="4" height="15" fill="rgb(208,108,46)"/><text x="886.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:153) (1 samples, 0.35%)</title><rect x="883" y="372" width="4" height="15" fill="rgb(216,136,25)"/><text x="886.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1574) (1 samples, 0.35%)</title><rect x="887" y="308" width="4" height="15" fill="rgb(210,119,44)"/><text x="890.00" y="318.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c:1218) (1 samples, 0.35%)</title><rect x="887" y="324" width="4" height="15" fill="rgb(251,67,22)"/><text x="890.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.75%)</title><rect x="875" y="276" width="21" height="15" fill="rgb(246,20,26)"/><text x="878.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.75%)</title><rect x="875" y="292" width="21" height="15" fill="rgb(216,7,0)"/><text x="878.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.35%)</title><rect x="891" y="308" width="5" height="15" fill="rgb(213,210,22)"/><text x="894.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:302) (1 samples, 0.35%)</title><rect x="891" y="324" width="5" height="15" fill="rgb(230,115,30)"/><text x="894.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.81%)</title><rect x="867" y="260" width="33" height="15" fill="rgb(236,162,47)"/><text x="870.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.35%)</title><rect x="896" y="276" width="4" height="15" fill="rgb(222,161,6)"/><text x="899.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (44 samples, 15.44%)</title><rect x="722" y="196" width="182" height="15" fill="rgb(250,208,6)"/><text x="725.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 14.74%)</title><rect x="730" y="212" width="174" height="15" fill="rgb(235,139,23)"/><text x="733.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (41 samples, 14.39%)</title><rect x="734" y="228" width="170" height="15" fill="rgb(246,39,19)"/><text x="737.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (12 samples, 4.21%)</title><rect x="854" y="244" width="50" height="15" fill="rgb(232,19,22)"/><text x="857.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.35%)</title><rect x="900" y="260" width="4" height="15" fill="rgb(249,227,4)"/><text x="903.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.35%)</title><rect x="900" y="276" width="4" height="15" fill="rgb(208,11,37)"/><text x="903.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.35%)</title><rect x="904" y="196" width="4" height="15" fill="rgb(209,174,51)"/><text x="907.00" y="206.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.35%)</title><rect x="916" y="244" width="4" height="15" fill="rgb(226,16,11)"/><text x="919.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.35%)</title><rect x="929" y="260" width="4" height="15" fill="rgb(244,63,22)"/><text x="932.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:792) (1 samples, 0.35%)</title><rect x="929" y="276" width="4" height="15" fill="rgb(249,201,10)"/><text x="932.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.35%)</title><rect x="941" y="276" width="4" height="15" fill="rgb(243,2,24)"/><text x="944.00" y="286.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.35%)</title><rect x="945" y="308" width="4" height="15" fill="rgb(218,89,45)"/><text x="948.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.35%)</title><rect x="945" y="324" width="4" height="15" fill="rgb(242,143,6)"/><text x="948.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.35%)</title><rect x="945" y="340" width="4" height="15" fill="rgb(244,204,6)"/><text x="948.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:140) (1 samples, 0.35%)</title><rect x="945" y="356" width="4" height="15" fill="rgb(216,15,26)"/><text x="948.00" y="366.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.35%)</title><rect x="949" y="308" width="5" height="15" fill="rgb(210,16,53)"/><text x="952.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.35%)</title><rect x="949" y="324" width="5" height="15" fill="rgb(240,136,6)"/><text x="952.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.35%)</title><rect x="949" y="340" width="5" height="15" fill="rgb(244,156,10)"/><text x="952.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (12 samples, 4.21%)</title><rect x="912" y="228" width="50" height="15" fill="rgb(222,80,27)"/><text x="915.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (10 samples, 3.51%)</title><rect x="920" y="244" width="42" height="15" fill="rgb(238,198,50)"/><text x="923.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 2.46%)</title><rect x="933" y="260" width="29" height="15" fill="rgb(212,2,19)"/><text x="936.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.40%)</title><rect x="945" y="276" width="17" height="15" fill="rgb(217,203,24)"/><text x="948.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.40%)</title><rect x="945" y="292" width="17" height="15" fill="rgb(245,24,21)"/><text x="948.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.70%)</title><rect x="954" y="308" width="8" height="15" fill="rgb(223,131,16)"/><text x="957.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.70%)</title><rect x="954" y="324" width="8" height="15" fill="rgb(242,58,2)"/><text x="957.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.70%)</title><rect x="954" y="340" width="8" height="15" fill="rgb(205,40,17)"/><text x="957.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.70%)</title><rect x="954" y="356" width="8" height="15" fill="rgb(244,202,48)"/><text x="957.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="958" y="372" width="4" height="15" fill="rgb(234,138,5)"/><text x="961.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:196) (1 samples, 0.35%)</title><rect x="970" y="308" width="4" height="15" fill="rgb(251,27,48)"/><text x="973.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.70%)</title><rect x="970" y="292" width="8" height="15" fill="rgb(254,217,0)"/><text x="973.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.35%)</title><rect x="974" y="308" width="4" height="15" fill="rgb(243,84,35)"/><text x="977.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.35%)</title><rect x="974" y="324" width="4" height="15" fill="rgb(245,143,2)"/><text x="977.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.35%)</title><rect x="974" y="340" width="4" height="15" fill="rgb(252,204,48)"/><text x="977.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.35%)</title><rect x="974" y="356" width="4" height="15" fill="rgb(209,153,36)"/><text x="977.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.35%)</title><rect x="974" y="372" width="4" height="15" fill="rgb(243,171,25)"/><text x="977.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (5 samples, 1.75%)</title><rect x="962" y="228" width="20" height="15" fill="rgb(211,130,1)"/><text x="965.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.05%)</title><rect x="970" y="244" width="12" height="15" fill="rgb(245,113,32)"/><text x="973.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.05%)</title><rect x="970" y="260" width="12" height="15" fill="rgb(222,201,37)"/><text x="973.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.05%)</title><rect x="970" y="276" width="12" height="15" fill="rgb(219,49,27)"/><text x="973.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.35%)</title><rect x="978" y="292" width="4" height="15" fill="rgb(240,215,41)"/><text x="981.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.35%)</title><rect x="978" y="308" width="4" height="15" fill="rgb(244,10,0)"/><text x="981.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2075) (1 samples, 0.35%)</title><rect x="978" y="324" width="4" height="15" fill="rgb(245,204,50)"/><text x="981.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.35%)</title><rect x="991" y="260" width="4" height="15" fill="rgb(242,151,52)"/><text x="994.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.35%)</title><rect x="991" y="276" width="4" height="15" fill="rgb(248,87,26)"/><text x="994.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.35%)</title><rect x="991" y="292" width="4" height="15" fill="rgb(228,74,13)"/><text x="994.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.35%)</title><rect x="995" y="276" width="4" height="15" fill="rgb(225,93,8)"/><text x="998.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.35%)</title><rect x="995" y="292" width="4" height="15" fill="rgb(216,47,54)"/><text x="998.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.35%)</title><rect x="995" y="308" width="4" height="15" fill="rgb(239,193,12)"/><text x="998.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.35%)</title><rect x="995" y="324" width="4" height="15" fill="rgb(219,219,7)"/><text x="998.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="995" y="340" width="4" height="15" fill="rgb(225,213,45)"/><text x="998.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (5 samples, 1.75%)</title><rect x="982" y="228" width="21" height="15" fill="rgb(244,173,21)"/><text x="985.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.05%)</title><rect x="991" y="244" width="12" height="15" fill="rgb(207,143,43)"/><text x="994.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.70%)</title><rect x="995" y="260" width="8" height="15" fill="rgb(232,185,31)"/><text x="998.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.35%)</title><rect x="999" y="276" width="4" height="15" fill="rgb(207,191,11)"/><text x="1002.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.35%)</title><rect x="999" y="292" width="4" height="15" fill="rgb(240,178,5)"/><text x="1002.00" y="302.50"></text></g><g><title>0x7f2371f2913e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="999" y="308" width="4" height="15" fill="rgb(234,152,43)"/><text x="1002.00" y="318.50"></text></g><g><title>0x7f2371f28efe (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="999" y="324" width="4" height="15" fill="rgb(238,20,46)"/><text x="1002.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.35%)</title><rect x="1003" y="228" width="4" height="15" fill="rgb(227,11,31)"/><text x="1006.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.35%)</title><rect x="1011" y="244" width="5" height="15" fill="rgb(222,87,45)"/><text x="1014.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (3 samples, 1.05%)</title><rect x="1007" y="228" width="13" height="15" fill="rgb(242,210,37)"/><text x="1010.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.35%)</title><rect x="1016" y="244" width="4" height="15" fill="rgb(224,227,9)"/><text x="1019.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.35%)</title><rect x="1016" y="260" width="4" height="15" fill="rgb(245,30,35)"/><text x="1019.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.35%)</title><rect x="1016" y="276" width="4" height="15" fill="rgb(236,187,18)"/><text x="1019.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.35%)</title><rect x="1016" y="292" width="4" height="15" fill="rgb(206,226,49)"/><text x="1019.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.35%)</title><rect x="1016" y="308" width="4" height="15" fill="rgb(234,19,54)"/><text x="1019.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.35%)</title><rect x="1016" y="324" width="4" height="15" fill="rgb(214,139,22)"/><text x="1019.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="1016" y="340" width="4" height="15" fill="rgb(217,202,33)"/><text x="1019.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (28 samples, 9.82%)</title><rect x="908" y="196" width="116" height="15" fill="rgb(254,22,33)"/><text x="911.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (28 samples, 9.82%)</title><rect x="908" y="212" width="116" height="15" fill="rgb(213,146,2)"/><text x="911.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.35%)</title><rect x="1020" y="228" width="4" height="15" fill="rgb(236,24,44)"/><text x="1023.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.35%)</title><rect x="1032" y="212" width="4" height="15" fill="rgb(220,154,42)"/><text x="1035.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.35%)</title><rect x="1032" y="228" width="4" height="15" fill="rgb(209,179,13)"/><text x="1035.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.35%)</title><rect x="1032" y="244" width="4" height="15" fill="rgb(218,108,46)"/><text x="1035.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.35%)</title><rect x="1032" y="260" width="4" height="15" fill="rgb(252,45,20)"/><text x="1035.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (79 samples, 27.72%)</title><rect x="713" y="180" width="327" height="15" fill="rgb(221,156,27)"/><text x="716.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (4 samples, 1.40%)</title><rect x="1024" y="196" width="16" height="15" fill="rgb(212,174,40)"/><text x="1027.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3240) (1 samples, 0.35%)</title><rect x="1036" y="212" width="4" height="15" fill="rgb(243,26,15)"/><text x="1039.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.35%)</title><rect x="1036" y="228" width="4" height="15" fill="rgb(249,35,13)"/><text x="1039.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.35%)</title><rect x="1040" y="180" width="5" height="15" fill="rgb(254,214,30)"/><text x="1043.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.35%)</title><rect x="1045" y="180" width="4" height="15" fill="rgb(230,192,32)"/><text x="1048.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (85 samples, 29.82%)</title><rect x="701" y="164" width="352" height="15" fill="rgb(249,124,44)"/><text x="704.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.35%)</title><rect x="1049" y="180" width="4" height="15" fill="rgb(220,24,2)"/><text x="1052.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:45) (100 samples, 35.09%)</title><rect x="647" y="52" width="414" height="15" fill="rgb(223,164,4)"/><text x="650.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solver..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:44) (100 samples, 35.09%)</title><rect x="647" y="68" width="414" height="15" fill="rgb(225,88,10)"/><text x="650.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:29) (100 samples, 35.09%)</title><rect x="647" y="84" width="414" height="15" fill="rgb(253,104,21)"/><text x="650.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:23) (99 samples, 34.74%)</title><rect x="651" y="100" width="410" height="15" fill="rgb(235,11,33)"/><text x="654.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solver..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (98 samples, 34.39%)</title><rect x="655" y="116" width="406" height="15" fill="rgb(252,30,19)"/><text x="658.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (96 samples, 33.68%)</title><rect x="664" y="132" width="397" height="15" fill="rgb(216,205,1)"/><text x="667.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (90 samples, 31.58%)</title><rect x="689" y="148" width="372" height="15" fill="rgb(224,14,38)"/><text x="692.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.70%)</title><rect x="1053" y="164" width="8" height="15" fill="rgb(216,206,41)"/><text x="1056.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.35%)</title><rect x="1057" y="180" width="4" height="15" fill="rgb(243,148,44)"/><text x="1060.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:22) (1 samples, 0.35%)</title><rect x="1061" y="100" width="4" height="15" fill="rgb(237,164,14)"/><text x="1064.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.70%)</title><rect x="1078" y="148" width="8" height="15" fill="rgb(220,83,52)"/><text x="1081.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:57) (1 samples, 0.35%)</title><rect x="1090" y="180" width="4" height="15" fill="rgb(241,48,24)"/><text x="1093.00" y="190.50"></text></g><g><title>0x7f2346c8fff9 (?) (1 samples, 0.35%)</title><rect x="1094" y="228" width="4" height="15" fill="rgb(207,168,27)"/><text x="1097.00" y="238.50"></text></g><g><title>0x7f2346c89993 (?) (1 samples, 0.35%)</title><rect x="1094" y="244" width="4" height="15" fill="rgb(254,35,34)"/><text x="1097.00" y="254.50"></text></g><g><title>0x7f2347137e64 (?) (1 samples, 0.35%)</title><rect x="1094" y="260" width="4" height="15" fill="rgb(223,74,50)"/><text x="1097.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 1.05%)</title><rect x="1094" y="196" width="13" height="15" fill="rgb(236,68,41)"/><text x="1097.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 1.05%)</title><rect x="1094" y="212" width="13" height="15" fill="rgb(245,107,17)"/><text x="1097.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1098" y="228" width="9" height="15" fill="rgb(207,179,13)"/><text x="1101.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1103" y="244" width="4" height="15" fill="rgb(219,173,48)"/><text x="1106.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1103" y="260" width="4" height="15" fill="rgb(252,1,11)"/><text x="1106.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1119" y="292" width="4" height="15" fill="rgb(254,27,6)"/><text x="1122.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="356" width="4" height="15" fill="rgb(232,6,47)"/><text x="1126.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="372" width="4" height="15" fill="rgb(232,7,44)"/><text x="1126.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="388" width="4" height="15" fill="rgb(211,156,43)"/><text x="1126.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="404" width="4" height="15" fill="rgb(221,121,6)"/><text x="1126.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1123" y="420" width="4" height="15" fill="rgb(220,91,42)"/><text x="1126.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.70%)</title><rect x="1123" y="340" width="9" height="15" fill="rgb(224,122,45)"/><text x="1126.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1127" y="356" width="5" height="15" fill="rgb(235,145,19)"/><text x="1130.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1127" y="372" width="5" height="15" fill="rgb(248,216,10)"/><text x="1130.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1132" y="340" width="4" height="15" fill="rgb(222,170,40)"/><text x="1135.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="340" width="4" height="15" fill="rgb(248,163,35)"/><text x="1139.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="356" width="4" height="15" fill="rgb(248,91,12)"/><text x="1139.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="372" width="4" height="15" fill="rgb(243,198,4)"/><text x="1139.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="388" width="4" height="15" fill="rgb(212,21,0)"/><text x="1139.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="404" width="4" height="15" fill="rgb(222,37,2)"/><text x="1139.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="420" width="4" height="15" fill="rgb(220,140,11)"/><text x="1139.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="436" width="4" height="15" fill="rgb(253,188,42)"/><text x="1139.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1136" y="452" width="4" height="15" fill="rgb(219,123,32)"/><text x="1139.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="1136" y="468" width="4" height="15" fill="rgb(236,128,26)"/><text x="1139.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1136" y="484" width="4" height="15" fill="rgb(233,53,11)"/><text x="1139.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.11%)</title><rect x="1119" y="260" width="25" height="15" fill="rgb(232,98,20)"/><text x="1122.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.11%)</title><rect x="1119" y="276" width="25" height="15" fill="rgb(209,71,54)"/><text x="1122.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.75%)</title><rect x="1123" y="292" width="21" height="15" fill="rgb(225,169,14)"/><text x="1126.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.75%)</title><rect x="1123" y="308" width="21" height="15" fill="rgb(250,109,22)"/><text x="1126.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.75%)</title><rect x="1123" y="324" width="21" height="15" fill="rgb(227,84,2)"/><text x="1126.00" y="334.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="340" width="4" height="15" fill="rgb(244,104,17)"/><text x="1143.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="356" width="4" height="15" fill="rgb(229,62,23)"/><text x="1143.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="372" width="4" height="15" fill="rgb(208,11,33)"/><text x="1143.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="388" width="4" height="15" fill="rgb(239,193,22)"/><text x="1143.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="404" width="4" height="15" fill="rgb(207,196,25)"/><text x="1143.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="420" width="4" height="15" fill="rgb(240,150,24)"/><text x="1143.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="436" width="4" height="15" fill="rgb(241,171,12)"/><text x="1143.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="452" width="4" height="15" fill="rgb(235,143,26)"/><text x="1143.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="468" width="4" height="15" fill="rgb(240,102,17)"/><text x="1143.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="484" width="4" height="15" fill="rgb(207,16,24)"/><text x="1143.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1140" y="500" width="4" height="15" fill="rgb(219,63,4)"/><text x="1143.00" y="510.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1148" y="276" width="4" height="15" fill="rgb(237,64,2)"/><text x="1151.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.05%)</title><rect x="1144" y="260" width="12" height="15" fill="rgb(225,75,44)"/><text x="1147.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;void, (__gnu_cxx::_Lock_policy)2&gt;::reset&lt;void, void (*)(void*)&gt; [clone .localalias.62] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1152" y="276" width="4" height="15" fill="rgb(207,49,6)"/><text x="1155.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="1152" y="292" width="4" height="15" fill="rgb(230,98,43)"/><text x="1155.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1152" y="308" width="4" height="15" fill="rgb(225,54,11)"/><text x="1155.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1156" y="260" width="5" height="15" fill="rgb(235,46,6)"/><text x="1159.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.35%)</title><rect x="1156" y="276" width="5" height="15" fill="rgb(235,87,37)"/><text x="1159.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.35%)</title><rect x="1156" y="292" width="5" height="15" fill="rgb(252,5,3)"/><text x="1159.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.35%)</title><rect x="1156" y="308" width="5" height="15" fill="rgb(235,98,4)"/><text x="1159.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:73) (1 samples, 0.35%)</title><rect x="1156" y="324" width="5" height="15" fill="rgb(248,207,12)"/><text x="1159.00" y="334.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="1161" y="260" width="4" height="15" fill="rgb(234,94,20)"/><text x="1164.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.21%)</title><rect x="1119" y="244" width="50" height="15" fill="rgb(214,204,43)"/><text x="1122.00" y="254.50">onnxr..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1165" y="260" width="4" height="15" fill="rgb(223,153,28)"/><text x="1168.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1169" y="244" width="4" height="15" fill="rgb(235,157,19)"/><text x="1172.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1169" y="260" width="4" height="15" fill="rgb(239,198,50)"/><text x="1172.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (22 samples, 7.72%)</title><rect x="1086" y="164" width="91" height="15" fill="rgb(235,136,3)"/><text x="1089.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (20 samples, 7.02%)</title><rect x="1094" y="180" width="83" height="15" fill="rgb(223,69,35)"/><text x="1097.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (17 samples, 5.96%)</title><rect x="1107" y="196" width="70" height="15" fill="rgb(235,158,51)"/><text x="1110.00" y="206.50">run (on..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.91%)</title><rect x="1119" y="212" width="58" height="15" fill="rgb(233,85,34)"/><text x="1122.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.91%)</title><rect x="1119" y="228" width="58" height="15" fill="rgb(228,199,44)"/><text x="1122.00" y="238.50">void p..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1173" y="244" width="4" height="15" fill="rgb(211,141,2)"/><text x="1176.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="1173" y="260" width="4" height="15" fill="rgb(248,62,20)"/><text x="1176.00" y="270.50"></text></g><g><title>all (285 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,84,8)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:52) (31 samples, 10.88%)</title><rect x="1061" y="52" width="129" height="15" fill="rgb(207,70,33)"/><text x="1064.00" y="62.50">&lt;module&gt; (bench_..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:51) (31 samples, 10.88%)</title><rect x="1061" y="68" width="129" height="15" fill="rgb(221,25,25)"/><text x="1064.00" y="78.50">profile_ort (ben..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:29) (31 samples, 10.88%)</title><rect x="1061" y="84" width="129" height="15" fill="rgb(253,186,3)"/><text x="1064.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:23) (30 samples, 10.53%)</title><rect x="1065" y="100" width="125" height="15" fill="rgb(222,114,45)"/><text x="1068.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (30 samples, 10.53%)</title><rect x="1065" y="116" width="125" height="15" fill="rgb(210,184,9)"/><text x="1068.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (28 samples, 9.82%)</title><rect x="1074" y="132" width="116" height="15" fill="rgb(213,195,12)"/><text x="1077.00" y="142.50">&lt;lambda&gt; (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (25 samples, 8.77%)</title><rect x="1086" y="148" width="104" height="15" fill="rgb(228,149,54)"/><text x="1089.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.05%)</title><rect x="1177" y="164" width="13" height="15" fill="rgb(209,111,28)"/><text x="1180.00" y="174.50"></text></g></g></svg>