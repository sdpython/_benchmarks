<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1606" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1589.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1589.00"> </text><svg id="frames" x="10" width="1180"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 1.20%)</title><rect x="1.5015%" y="852" width="1.2012%" height="15" fill="rgb(227,0,7)"/><text x="1.7515%" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 1.20%)</title><rect x="1.5015%" y="868" width="1.2012%" height="15" fill="rgb(217,0,24)"/><text x="1.7515%" y="878.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (8 samples, 2.40%)</title><rect x="0.9009%" y="148" width="2.4024%" height="15" fill="rgb(221,193,54)"/><text x="1.1509%" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="164" width="2.4024%" height="15" fill="rgb(248,212,6)"/><text x="1.1509%" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.40%)</title><rect x="0.9009%" y="180" width="2.4024%" height="15" fill="rgb(208,68,35)"/><text x="1.1509%" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="196" width="2.4024%" height="15" fill="rgb(232,128,0)"/><text x="1.1509%" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="212" width="2.4024%" height="15" fill="rgb(207,160,47)"/><text x="1.1509%" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="0.9009%" y="228" width="2.4024%" height="15" fill="rgb(228,23,34)"/><text x="1.1509%" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="0.9009%" y="244" width="2.4024%" height="15" fill="rgb(218,30,26)"/><text x="1.1509%" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="0.9009%" y="260" width="2.4024%" height="15" fill="rgb(220,122,19)"/><text x="1.1509%" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="276" width="2.4024%" height="15" fill="rgb(250,228,42)"/><text x="1.1509%" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 2.40%)</title><rect x="0.9009%" y="292" width="2.4024%" height="15" fill="rgb(240,193,28)"/><text x="1.1509%" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="308" width="2.4024%" height="15" fill="rgb(216,20,37)"/><text x="1.1509%" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="0.9009%" y="324" width="2.4024%" height="15" fill="rgb(206,188,39)"/><text x="1.1509%" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="0.9009%" y="340" width="2.4024%" height="15" fill="rgb(217,207,13)"/><text x="1.1509%" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="0.9009%" y="356" width="2.4024%" height="15" fill="rgb(231,73,38)"/><text x="1.1509%" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="372" width="2.4024%" height="15" fill="rgb(225,20,46)"/><text x="1.1509%" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 2.40%)</title><rect x="0.9009%" y="388" width="2.4024%" height="15" fill="rgb(210,31,41)"/><text x="1.1509%" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="404" width="2.4024%" height="15" fill="rgb(221,200,47)"/><text x="1.1509%" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="0.9009%" y="420" width="2.4024%" height="15" fill="rgb(226,26,5)"/><text x="1.1509%" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="0.9009%" y="436" width="2.4024%" height="15" fill="rgb(249,33,26)"/><text x="1.1509%" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="0.9009%" y="452" width="2.4024%" height="15" fill="rgb(235,183,28)"/><text x="1.1509%" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="468" width="2.4024%" height="15" fill="rgb(221,5,38)"/><text x="1.1509%" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 2.40%)</title><rect x="0.9009%" y="484" width="2.4024%" height="15" fill="rgb(247,18,42)"/><text x="1.1509%" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="500" width="2.4024%" height="15" fill="rgb(241,131,45)"/><text x="1.1509%" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="0.9009%" y="516" width="2.4024%" height="15" fill="rgb(249,31,29)"/><text x="1.1509%" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="0.9009%" y="532" width="2.4024%" height="15" fill="rgb(225,111,53)"/><text x="1.1509%" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="0.9009%" y="548" width="2.4024%" height="15" fill="rgb(238,160,17)"/><text x="1.1509%" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="564" width="2.4024%" height="15" fill="rgb(214,148,48)"/><text x="1.1509%" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 2.40%)</title><rect x="0.9009%" y="580" width="2.4024%" height="15" fill="rgb(232,36,49)"/><text x="1.1509%" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="596" width="2.4024%" height="15" fill="rgb(209,103,24)"/><text x="1.1509%" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.40%)</title><rect x="0.9009%" y="612" width="2.4024%" height="15" fill="rgb(229,88,8)"/><text x="1.1509%" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="628" width="2.4024%" height="15" fill="rgb(213,181,19)"/><text x="1.1509%" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="644" width="2.4024%" height="15" fill="rgb(254,191,54)"/><text x="1.1509%" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="0.9009%" y="660" width="2.4024%" height="15" fill="rgb(241,83,37)"/><text x="1.1509%" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="0.9009%" y="676" width="2.4024%" height="15" fill="rgb(233,36,39)"/><text x="1.1509%" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="0.9009%" y="692" width="2.4024%" height="15" fill="rgb(226,3,54)"/><text x="1.1509%" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="708" width="2.4024%" height="15" fill="rgb(245,192,40)"/><text x="1.1509%" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 2.40%)</title><rect x="0.9009%" y="724" width="2.4024%" height="15" fill="rgb(238,167,29)"/><text x="1.1509%" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="0.9009%" y="740" width="2.4024%" height="15" fill="rgb(232,182,51)"/><text x="1.1509%" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="0.9009%" y="756" width="2.4024%" height="15" fill="rgb(231,60,39)"/><text x="1.1509%" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="0.9009%" y="772" width="2.4024%" height="15" fill="rgb(208,69,12)"/><text x="1.1509%" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="0.9009%" y="788" width="2.4024%" height="15" fill="rgb(235,93,37)"/><text x="1.1509%" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="0.9009%" y="804" width="2.4024%" height="15" fill="rgb(213,116,39)"/><text x="1.1509%" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 2.40%)</title><rect x="0.9009%" y="820" width="2.4024%" height="15" fill="rgb(222,207,29)"/><text x="1.1509%" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 2.40%)</title><rect x="0.9009%" y="836" width="2.4024%" height="15" fill="rgb(206,96,30)"/><text x="1.1509%" y="846.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.20%)</title><rect x="4.8048%" y="436" width="1.2012%" height="15" fill="rgb(218,138,4)"/><text x="5.0548%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="4.8048%" y="452" width="1.2012%" height="15" fill="rgb(250,191,14)"/><text x="5.0548%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="4.8048%" y="468" width="1.2012%" height="15" fill="rgb(239,60,40)"/><text x="5.0548%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="4.8048%" y="484" width="1.2012%" height="15" fill="rgb(206,27,48)"/><text x="5.0548%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="4.8048%" y="500" width="1.2012%" height="15" fill="rgb(225,35,8)"/><text x="5.0548%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="4.8048%" y="516" width="1.2012%" height="15" fill="rgb(250,213,24)"/><text x="5.0548%" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:13) (4 samples, 1.20%)</title><rect x="4.8048%" y="532" width="1.2012%" height="15" fill="rgb(247,123,22)"/><text x="5.0548%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="4.8048%" y="548" width="1.2012%" height="15" fill="rgb(231,138,38)"/><text x="5.0548%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="4.8048%" y="564" width="1.2012%" height="15" fill="rgb(231,145,46)"/><text x="5.0548%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="4.8048%" y="580" width="1.2012%" height="15" fill="rgb(251,118,11)"/><text x="5.0548%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="4.8048%" y="596" width="1.2012%" height="15" fill="rgb(217,147,25)"/><text x="5.0548%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="4.8048%" y="612" width="1.2012%" height="15" fill="rgb(247,81,37)"/><text x="5.0548%" y="622.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:4) (28 samples, 8.41%)</title><rect x="0.0000%" y="52" width="8.4084%" height="15" fill="rgb(209,12,38)"/><text x="0.2500%" y="62.50">&lt;module&gt; (be..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (28 samples, 8.41%)</title><rect x="0.0000%" y="68" width="8.4084%" height="15" fill="rgb(227,1,9)"/><text x="0.2500%" y="78.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (28 samples, 8.41%)</title><rect x="0.0000%" y="84" width="8.4084%" height="15" fill="rgb(248,47,43)"/><text x="0.2500%" y="94.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (28 samples, 8.41%)</title><rect x="0.0000%" y="100" width="8.4084%" height="15" fill="rgb(221,10,30)"/><text x="0.2500%" y="110.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (28 samples, 8.41%)</title><rect x="0.0000%" y="116" width="8.4084%" height="15" fill="rgb(210,229,1)"/><text x="0.2500%" y="126.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (28 samples, 8.41%)</title><rect x="0.0000%" y="132" width="8.4084%" height="15" fill="rgb(222,148,37)"/><text x="0.2500%" y="142.50">_call_with_f..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (16 samples, 4.80%)</title><rect x="3.6036%" y="148" width="4.8048%" height="15" fill="rgb(234,67,33)"/><text x="3.8536%" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 4.80%)</title><rect x="3.6036%" y="164" width="4.8048%" height="15" fill="rgb(247,98,35)"/><text x="3.8536%" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 4.80%)</title><rect x="3.6036%" y="180" width="4.8048%" height="15" fill="rgb(247,138,52)"/><text x="3.8536%" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 4.80%)</title><rect x="3.6036%" y="196" width="4.8048%" height="15" fill="rgb(213,79,30)"/><text x="3.8536%" y="206.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 4.80%)</title><rect x="3.6036%" y="212" width="4.8048%" height="15" fill="rgb(246,177,23)"/><text x="3.8536%" y="222.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 4.80%)</title><rect x="3.6036%" y="228" width="4.8048%" height="15" fill="rgb(230,62,27)"/><text x="3.8536%" y="238.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (14 samples, 4.20%)</title><rect x="4.2042%" y="244" width="4.2042%" height="15" fill="rgb(216,154,8)"/><text x="4.4542%" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.20%)</title><rect x="4.2042%" y="260" width="4.2042%" height="15" fill="rgb(244,35,45)"/><text x="4.4542%" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.20%)</title><rect x="4.2042%" y="276" width="4.2042%" height="15" fill="rgb(251,115,12)"/><text x="4.4542%" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.20%)</title><rect x="4.2042%" y="292" width="4.2042%" height="15" fill="rgb(240,54,50)"/><text x="4.4542%" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.20%)</title><rect x="4.2042%" y="308" width="4.2042%" height="15" fill="rgb(233,84,52)"/><text x="4.4542%" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.20%)</title><rect x="4.2042%" y="324" width="4.2042%" height="15" fill="rgb(207,117,47)"/><text x="4.4542%" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:27) (12 samples, 3.60%)</title><rect x="4.8048%" y="340" width="3.6036%" height="15" fill="rgb(249,43,39)"/><text x="5.0548%" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 3.60%)</title><rect x="4.8048%" y="356" width="3.6036%" height="15" fill="rgb(209,38,44)"/><text x="5.0548%" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 3.60%)</title><rect x="4.8048%" y="372" width="3.6036%" height="15" fill="rgb(236,212,23)"/><text x="5.0548%" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 3.60%)</title><rect x="4.8048%" y="388" width="3.6036%" height="15" fill="rgb(242,79,21)"/><text x="5.0548%" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 3.60%)</title><rect x="4.8048%" y="404" width="3.6036%" height="15" fill="rgb(211,96,35)"/><text x="5.0548%" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 3.60%)</title><rect x="4.8048%" y="420" width="3.6036%" height="15" fill="rgb(253,215,40)"/><text x="5.0548%" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (8 samples, 2.40%)</title><rect x="6.0060%" y="436" width="2.4024%" height="15" fill="rgb(211,81,21)"/><text x="6.2560%" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="452" width="2.4024%" height="15" fill="rgb(208,190,38)"/><text x="6.2560%" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.40%)</title><rect x="6.0060%" y="468" width="2.4024%" height="15" fill="rgb(235,213,38)"/><text x="6.2560%" y="478.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="484" width="2.4024%" height="15" fill="rgb(237,122,38)"/><text x="6.2560%" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="500" width="2.4024%" height="15" fill="rgb(244,218,35)"/><text x="6.2560%" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="6.0060%" y="516" width="2.4024%" height="15" fill="rgb(240,68,47)"/><text x="6.2560%" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="6.0060%" y="532" width="2.4024%" height="15" fill="rgb(210,16,53)"/><text x="6.2560%" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="6.0060%" y="548" width="2.4024%" height="15" fill="rgb(235,124,12)"/><text x="6.2560%" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="564" width="2.4024%" height="15" fill="rgb(224,169,11)"/><text x="6.2560%" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (8 samples, 2.40%)</title><rect x="6.0060%" y="580" width="2.4024%" height="15" fill="rgb(250,166,2)"/><text x="6.2560%" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="596" width="2.4024%" height="15" fill="rgb(242,216,29)"/><text x="6.2560%" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="6.0060%" y="612" width="2.4024%" height="15" fill="rgb(230,116,27)"/><text x="6.2560%" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="6.0060%" y="628" width="2.4024%" height="15" fill="rgb(228,99,48)"/><text x="6.2560%" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="6.0060%" y="644" width="2.4024%" height="15" fill="rgb(253,11,6)"/><text x="6.2560%" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="660" width="2.4024%" height="15" fill="rgb(247,143,39)"/><text x="6.2560%" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (8 samples, 2.40%)</title><rect x="6.0060%" y="676" width="2.4024%" height="15" fill="rgb(236,97,10)"/><text x="6.2560%" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="692" width="2.4024%" height="15" fill="rgb(233,208,19)"/><text x="6.2560%" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="6.0060%" y="708" width="2.4024%" height="15" fill="rgb(216,164,2)"/><text x="6.2560%" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="6.0060%" y="724" width="2.4024%" height="15" fill="rgb(220,129,5)"/><text x="6.2560%" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="6.0060%" y="740" width="2.4024%" height="15" fill="rgb(242,17,10)"/><text x="6.2560%" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="756" width="2.4024%" height="15" fill="rgb(242,107,0)"/><text x="6.2560%" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (8 samples, 2.40%)</title><rect x="6.0060%" y="772" width="2.4024%" height="15" fill="rgb(251,28,31)"/><text x="6.2560%" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="788" width="2.4024%" height="15" fill="rgb(233,223,10)"/><text x="6.2560%" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="6.0060%" y="804" width="2.4024%" height="15" fill="rgb(215,21,27)"/><text x="6.2560%" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="6.0060%" y="820" width="2.4024%" height="15" fill="rgb(232,23,21)"/><text x="6.2560%" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="6.0060%" y="836" width="2.4024%" height="15" fill="rgb(244,5,23)"/><text x="6.2560%" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="852" width="2.4024%" height="15" fill="rgb(226,81,46)"/><text x="6.2560%" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (8 samples, 2.40%)</title><rect x="6.0060%" y="868" width="2.4024%" height="15" fill="rgb(247,70,30)"/><text x="6.2560%" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="884" width="2.4024%" height="15" fill="rgb(212,68,19)"/><text x="6.2560%" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.40%)</title><rect x="6.0060%" y="900" width="2.4024%" height="15" fill="rgb(240,187,13)"/><text x="6.2560%" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="916" width="2.4024%" height="15" fill="rgb(223,113,26)"/><text x="6.2560%" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="932" width="2.4024%" height="15" fill="rgb(206,192,2)"/><text x="6.2560%" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="6.0060%" y="948" width="2.4024%" height="15" fill="rgb(241,108,4)"/><text x="6.2560%" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="6.0060%" y="964" width="2.4024%" height="15" fill="rgb(247,173,49)"/><text x="6.2560%" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="6.0060%" y="980" width="2.4024%" height="15" fill="rgb(224,114,35)"/><text x="6.2560%" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="996" width="2.4024%" height="15" fill="rgb(245,159,27)"/><text x="6.2560%" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (8 samples, 2.40%)</title><rect x="6.0060%" y="1012" width="2.4024%" height="15" fill="rgb(245,172,44)"/><text x="6.2560%" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.40%)</title><rect x="6.0060%" y="1028" width="2.4024%" height="15" fill="rgb(236,23,11)"/><text x="6.2560%" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.40%)</title><rect x="6.0060%" y="1044" width="2.4024%" height="15" fill="rgb(205,117,38)"/><text x="6.2560%" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.40%)</title><rect x="6.0060%" y="1060" width="2.4024%" height="15" fill="rgb(237,72,25)"/><text x="6.2560%" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.40%)</title><rect x="6.0060%" y="1076" width="2.4024%" height="15" fill="rgb(244,70,9)"/><text x="6.2560%" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.40%)</title><rect x="6.0060%" y="1092" width="2.4024%" height="15" fill="rgb(217,125,39)"/><text x="6.2560%" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (6 samples, 1.80%)</title><rect x="6.6066%" y="1108" width="1.8018%" height="15" fill="rgb(235,36,10)"/><text x="6.8566%" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 1.80%)</title><rect x="6.6066%" y="1124" width="1.8018%" height="15" fill="rgb(251,123,47)"/><text x="6.8566%" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="6.6066%" y="1140" width="1.8018%" height="15" fill="rgb(221,13,13)"/><text x="6.8566%" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.80%)</title><rect x="6.6066%" y="1156" width="1.8018%" height="15" fill="rgb(238,131,9)"/><text x="6.8566%" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.80%)</title><rect x="6.6066%" y="1172" width="1.8018%" height="15" fill="rgb(211,50,8)"/><text x="6.8566%" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.80%)</title><rect x="6.6066%" y="1188" width="1.8018%" height="15" fill="rgb(245,182,24)"/><text x="6.8566%" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.80%)</title><rect x="6.6066%" y="1204" width="1.8018%" height="15" fill="rgb(242,14,37)"/><text x="6.8566%" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="6.6066%" y="1220" width="1.8018%" height="15" fill="rgb(246,228,12)"/><text x="6.8566%" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (6 samples, 1.80%)</title><rect x="6.6066%" y="1236" width="1.8018%" height="15" fill="rgb(213,55,15)"/><text x="6.8566%" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 1.80%)</title><rect x="6.6066%" y="1252" width="1.8018%" height="15" fill="rgb(209,9,3)"/><text x="6.8566%" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="6.6066%" y="1268" width="1.8018%" height="15" fill="rgb(230,59,30)"/><text x="6.8566%" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.80%)</title><rect x="6.6066%" y="1284" width="1.8018%" height="15" fill="rgb(209,121,21)"/><text x="6.8566%" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.80%)</title><rect x="6.6066%" y="1300" width="1.8018%" height="15" fill="rgb(220,109,13)"/><text x="6.8566%" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.80%)</title><rect x="6.6066%" y="1316" width="1.8018%" height="15" fill="rgb(232,18,1)"/><text x="6.8566%" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.80%)</title><rect x="6.6066%" y="1332" width="1.8018%" height="15" fill="rgb(215,41,42)"/><text x="6.8566%" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="6.6066%" y="1348" width="1.8018%" height="15" fill="rgb(224,123,36)"/><text x="6.8566%" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (6 samples, 1.80%)</title><rect x="6.6066%" y="1364" width="1.8018%" height="15" fill="rgb(240,125,3)"/><text x="6.8566%" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.80%)</title><rect x="6.6066%" y="1380" width="1.8018%" height="15" fill="rgb(205,98,50)"/><text x="6.8566%" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.80%)</title><rect x="6.6066%" y="1396" width="1.8018%" height="15" fill="rgb(205,185,37)"/><text x="6.8566%" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.80%)</title><rect x="6.6066%" y="1412" width="1.8018%" height="15" fill="rgb(238,207,15)"/><text x="6.8566%" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.80%)</title><rect x="6.6066%" y="1428" width="1.8018%" height="15" fill="rgb(213,199,42)"/><text x="6.8566%" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.80%)</title><rect x="6.6066%" y="1444" width="1.8018%" height="15" fill="rgb(235,201,11)"/><text x="6.8566%" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (6 samples, 1.80%)</title><rect x="6.6066%" y="1460" width="1.8018%" height="15" fill="rgb(207,46,11)"/><text x="6.8566%" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (6 samples, 1.80%)</title><rect x="6.6066%" y="1476" width="1.8018%" height="15" fill="rgb(241,35,35)"/><text x="6.8566%" y="1486.50">_..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (6 samples, 1.80%)</title><rect x="6.6066%" y="1492" width="1.8018%" height="15" fill="rgb(243,32,47)"/><text x="6.8566%" y="1502.50">d..</text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (6 samples, 1.80%)</title><rect x="6.6066%" y="1508" width="1.8018%" height="15" fill="rgb(247,202,23)"/><text x="6.8566%" y="1518.50">g..</text></g><g><title>render (jinja2/asyncsupport.py:76) (6 samples, 1.80%)</title><rect x="6.6066%" y="1524" width="1.8018%" height="15" fill="rgb(219,102,11)"/><text x="6.8566%" y="1534.50">r..</text></g><g><title>render (jinja2/environment.py:1005) (6 samples, 1.80%)</title><rect x="6.6066%" y="1540" width="1.8018%" height="15" fill="rgb(243,110,44)"/><text x="6.8566%" y="1550.50">r..</text></g><g><title>unicode_join (python3.7) (5 samples, 1.50%)</title><rect x="6.9069%" y="1556" width="1.5015%" height="15" fill="rgb(222,74,54)"/><text x="7.1569%" y="1566.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (20 samples, 6.01%)</title><rect x="9.9099%" y="148" width="6.0060%" height="15" fill="rgb(216,99,12)"/><text x="10.1599%" y="158.50">predict_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:963) (12 samples, 3.60%)</title><rect x="12.3123%" y="164" width="3.6036%" height="15" fill="rgb(226,22,26)"/><text x="12.5623%" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:964) (9 samples, 2.70%)</title><rect x="13.2132%" y="180" width="2.7027%" height="15" fill="rgb(217,163,10)"/><text x="13.4632%" y="190.50">&lt;l..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (14 samples, 4.20%)</title><rect x="17.1171%" y="180" width="4.2042%" height="15" fill="rgb(213,25,53)"/><text x="17.3671%" y="190.50">decis..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:963) (13 samples, 3.90%)</title><rect x="17.4174%" y="196" width="3.9039%" height="15" fill="rgb(252,105,26)"/><text x="17.6674%" y="206.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:964) (11 samples, 3.30%)</title><rect x="18.0180%" y="212" width="3.3033%" height="15" fill="rgb(220,39,43)"/><text x="18.2680%" y="222.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (7 samples, 2.10%)</title><rect x="19.2192%" y="228" width="2.1021%" height="15" fill="rgb(229,68,48)"/><text x="19.4692%" y="238.50">u..</text></g><g><title>check_array (sklearn/utils/validation.py:518) (8 samples, 2.40%)</title><rect x="22.2222%" y="196" width="2.4024%" height="15" fill="rgb(252,8,32)"/><text x="22.4722%" y="206.50">ch..</text></g><g><title>check_array (sklearn/utils/validation.py:520) (7 samples, 2.10%)</title><rect x="24.6246%" y="196" width="2.1021%" height="15" fill="rgb(223,20,43)"/><text x="24.8746%" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 2.10%)</title><rect x="24.6246%" y="212" width="2.1021%" height="15" fill="rgb(229,81,49)"/><text x="24.8746%" y="222.50">s..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 3.60%)</title><rect x="29.7297%" y="212" width="3.6036%" height="15" fill="rgb(236,28,36)"/><text x="29.9797%" y="222.50">_ass..</text></g><g><title>check_array (sklearn/utils/validation.py:578) (15 samples, 4.50%)</title><rect x="29.7297%" y="196" width="4.5045%" height="15" fill="rgb(249,185,26)"/><text x="29.9797%" y="206.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (6 samples, 1.80%)</title><rect x="34.5345%" y="212" width="1.8018%" height="15" fill="rgb(249,174,33)"/><text x="34.7845%" y="222.50">_..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (63 samples, 18.92%)</title><rect x="21.3213%" y="180" width="18.9189%" height="15" fill="rgb(233,201,37)"/><text x="21.5713%" y="190.50">decision_function (sklearn/lin..</text></g><g><title>check_array (sklearn/utils/validation.py:581) (20 samples, 6.01%)</title><rect x="34.2342%" y="196" width="6.0060%" height="15" fill="rgb(221,78,26)"/><text x="34.4842%" y="206.50">check_ar..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (11 samples, 3.30%)</title><rect x="36.9369%" y="212" width="3.3033%" height="15" fill="rgb(250,127,30)"/><text x="37.1869%" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py:139) (6 samples, 1.80%)</title><rect x="38.4384%" y="228" width="1.8018%" height="15" fill="rgb(230,49,44)"/><text x="38.6884%" y="238.50">_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (4 samples, 1.20%)</title><rect x="43.2432%" y="244" width="1.2012%" height="15" fill="rgb(229,67,23)"/><text x="43.4932%" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (9 samples, 2.70%)</title><rect x="44.4444%" y="244" width="2.7027%" height="15" fill="rgb(249,83,47)"/><text x="44.6944%" y="254.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (6 samples, 1.80%)</title><rect x="45.3453%" y="260" width="1.8018%" height="15" fill="rgb(215,43,3)"/><text x="45.5953%" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (5 samples, 1.50%)</title><rect x="45.6456%" y="276" width="1.5015%" height="15" fill="rgb(238,154,13)"/><text x="45.8956%" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (5 samples, 1.50%)</title><rect x="45.6456%" y="292" width="1.5015%" height="15" fill="rgb(219,56,2)"/><text x="45.8956%" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (19 samples, 5.71%)</title><rect x="43.2432%" y="212" width="5.7057%" height="15" fill="rgb(233,0,4)"/><text x="43.4932%" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (19 samples, 5.71%)</title><rect x="43.2432%" y="228" width="5.7057%" height="15" fill="rgb(235,30,7)"/><text x="43.4932%" y="238.50">PyUFunc..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (21 samples, 6.31%)</title><rect x="43.2432%" y="196" width="6.3063%" height="15" fill="rgb(250,79,13)"/><text x="43.4932%" y="206.50">safe_spa..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (32 samples, 9.61%)</title><rect x="41.4414%" y="180" width="9.6096%" height="15" fill="rgb(211,146,34)"/><text x="41.6914%" y="190.50">decision_funct..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (5 samples, 1.50%)</title><rect x="49.5495%" y="196" width="1.5015%" height="15" fill="rgb(228,22,38)"/><text x="49.7995%" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (114 samples, 34.23%)</title><rect x="17.1171%" y="164" width="34.2342%" height="15" fill="rgb(235,168,5)"/><text x="17.3671%" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py:307)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (7 samples, 2.10%)</title><rect x="51.3514%" y="164" width="2.1021%" height="15" fill="rgb(221,155,16)"/><text x="51.6014%" y="174.50">_..</text></g><g><title>maybe_get_attr (get_attr_string.h:76) (4 samples, 1.20%)</title><rect x="54.9550%" y="308" width="1.2012%" height="15" fill="rgb(215,215,53)"/><text x="55.2050%" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (6 samples, 1.80%)</title><rect x="54.9550%" y="228" width="1.8018%" height="15" fill="rgb(223,4,10)"/><text x="55.2050%" y="238.50">u..</text></g><g><title>PyUFunc_CheckOverride (override.c:452) (6 samples, 1.80%)</title><rect x="54.9550%" y="244" width="1.8018%" height="15" fill="rgb(234,103,6)"/><text x="55.2050%" y="254.50">P..</text></g><g><title>get_array_ufunc_overrides (override.c:72) (6 samples, 1.80%)</title><rect x="54.9550%" y="260" width="1.8018%" height="15" fill="rgb(227,97,0)"/><text x="55.2050%" y="270.50">g..</text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (6 samples, 1.80%)</title><rect x="54.9550%" y="276" width="1.8018%" height="15" fill="rgb(234,150,53)"/><text x="55.2050%" y="286.50">P..</text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (6 samples, 1.80%)</title><rect x="54.9550%" y="292" width="1.8018%" height="15" fill="rgb(228,201,54)"/><text x="55.2050%" y="302.50">P..</text></g><g><title>array_sum (methods.c:2215) (19 samples, 5.71%)</title><rect x="54.9550%" y="180" width="5.7057%" height="15" fill="rgb(222,22,37)"/><text x="55.2050%" y="190.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 5.71%)</title><rect x="54.9550%" y="196" width="5.7057%" height="15" fill="rgb(237,53,32)"/><text x="55.2050%" y="206.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (19 samples, 5.71%)</title><rect x="54.9550%" y="212" width="5.7057%" height="15" fill="rgb(233,25,53)"/><text x="55.2050%" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 3.90%)</title><rect x="56.7568%" y="228" width="3.9039%" height="15" fill="rgb(210,40,34)"/><text x="57.0068%" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 2.70%)</title><rect x="57.9580%" y="244" width="2.7027%" height="15" fill="rgb(241,220,44)"/><text x="58.2080%" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 2.40%)</title><rect x="58.2583%" y="260" width="2.4024%" height="15" fill="rgb(235,28,35)"/><text x="58.5083%" y="270.50">Py..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.80%)</title><rect x="60.6607%" y="180" width="1.8018%" height="15" fill="rgb(210,56,17)"/><text x="60.9107%" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.50%)</title><rect x="60.9610%" y="196" width="1.5015%" height="15" fill="rgb(224,130,29)"/><text x="61.2110%" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.20%)</title><rect x="61.2613%" y="212" width="1.2012%" height="15" fill="rgb(235,212,8)"/><text x="61.5113%" y="222.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:54) (182 samples, 54.65%)</title><rect x="8.4084%" y="52" width="54.6547%" height="15" fill="rgb(223,33,50)"/><text x="8.6584%" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.p..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:53) (182 samples, 54.65%)</title><rect x="8.4084%" y="68" width="54.6547%" height="15" fill="rgb(219,149,13)"/><text x="8.6584%" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipma..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:37) (182 samples, 54.65%)</title><rect x="8.4084%" y="84" width="54.6547%" height="15" fill="rgb(250,156,29)"/><text x="8.6584%" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozip..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:31) (182 samples, 54.65%)</title><rect x="8.4084%" y="100" width="54.6547%" height="15" fill="rgb(216,193,19)"/><text x="8.6584%" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (180 samples, 54.05%)</title><rect x="9.0090%" y="116" width="54.0541%" height="15" fill="rgb(216,135,14)"/><text x="9.2590%" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:228) (177 samples, 53.15%)</title><rect x="9.9099%" y="132" width="53.1532%" height="15" fill="rgb(241,47,5)"/><text x="10.1599%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:228)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1651) (157 samples, 47.15%)</title><rect x="15.9159%" y="148" width="47.1471%" height="15" fill="rgb(233,42,35)"/><text x="16.1659%" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1651)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (32 samples, 9.61%)</title><rect x="53.4535%" y="164" width="9.6096%" height="15" fill="rgb(231,13,6)"/><text x="53.7035%" y="174.50">_predict_proba..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (6 samples, 1.80%)</title><rect x="66.9670%" y="196" width="1.8018%" height="15" fill="rgb(207,181,40)"/><text x="67.2170%" y="206.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (5 samples, 1.50%)</title><rect x="67.2673%" y="212" width="1.5015%" height="15" fill="rgb(254,173,49)"/><text x="67.5173%" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.20%)</title><rect x="69.0691%" y="212" width="1.2012%" height="15" fill="rgb(221,1,38)"/><text x="69.3191%" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 2.10%)</title><rect x="68.7688%" y="196" width="2.1021%" height="15" fill="rgb(206,124,46)"/><text x="69.0188%" y="206.50">_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (7 samples, 2.10%)</title><rect x="70.8709%" y="196" width="2.1021%" height="15" fill="rgb(249,21,11)"/><text x="71.1209%" y="206.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.50%)</title><rect x="71.4715%" y="212" width="1.5015%" height="15" fill="rgb(222,201,40)"/><text x="71.7215%" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.50%)</title><rect x="71.4715%" y="228" width="1.5015%" height="15" fill="rgb(235,61,29)"/><text x="71.7215%" y="238.50"></text></g><g><title>compiled_run (&lt;string&gt;:4) (35 samples, 10.51%)</title><rect x="66.9670%" y="180" width="10.5105%" height="15" fill="rgb(219,207,3)"/><text x="67.2170%" y="190.50">compiled_run (&lt;..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (13 samples, 3.90%)</title><rect x="73.5736%" y="196" width="3.9039%" height="15" fill="rgb(222,56,46)"/><text x="73.8236%" y="206.50">_run..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (10 samples, 3.00%)</title><rect x="74.4745%" y="212" width="3.0030%" height="15" fill="rgb(239,76,54)"/><text x="74.7245%" y="222.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.70%)</title><rect x="74.7748%" y="228" width="2.7027%" height="15" fill="rgb(231,124,27)"/><text x="75.0248%" y="238.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (7 samples, 2.10%)</title><rect x="75.3754%" y="244" width="2.1021%" height="15" fill="rgb(249,195,6)"/><text x="75.6254%" y="254.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 1.80%)</title><rect x="75.6757%" y="260" width="1.8018%" height="15" fill="rgb(237,174,47)"/><text x="75.9257%" y="270.50">_..</text></g><g><title>array_argmax (methods.c:302) (4 samples, 1.20%)</title><rect x="76.2763%" y="276" width="1.2012%" height="15" fill="rgb(206,201,31)"/><text x="76.5263%" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 1.20%)</title><rect x="79.8799%" y="276" width="1.2012%" height="15" fill="rgb(231,57,52)"/><text x="80.1299%" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.20%)</title><rect x="79.8799%" y="292" width="1.2012%" height="15" fill="rgb(248,177,22)"/><text x="80.1299%" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (19 samples, 5.71%)</title><rect x="79.5796%" y="228" width="5.7057%" height="15" fill="rgb(215,211,37)"/><text x="79.8296%" y="238.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 5.71%)</title><rect x="79.5796%" y="244" width="5.7057%" height="15" fill="rgb(241,128,51)"/><text x="79.8296%" y="254.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (19 samples, 5.71%)</title><rect x="79.5796%" y="260" width="5.7057%" height="15" fill="rgb(227,165,31)"/><text x="79.8296%" y="270.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 4.20%)</title><rect x="81.0811%" y="276" width="4.2042%" height="15" fill="rgb(228,167,24)"/><text x="81.3311%" y="286.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 3.30%)</title><rect x="81.9820%" y="292" width="3.3033%" height="15" fill="rgb(228,143,12)"/><text x="82.2320%" y="302.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 3.00%)</title><rect x="82.2823%" y="308" width="3.0030%" height="15" fill="rgb(249,149,8)"/><text x="82.5323%" y="318.50">PyU..</text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.20%)</title><rect x="85.5856%" y="292" width="1.2012%" height="15" fill="rgb(243,35,44)"/><text x="85.8356%" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.80%)</title><rect x="85.2853%" y="244" width="1.8018%" height="15" fill="rgb(246,89,9)"/><text x="85.5353%" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.80%)</title><rect x="85.2853%" y="260" width="1.8018%" height="15" fill="rgb(233,213,13)"/><text x="85.5353%" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.80%)</title><rect x="85.2853%" y="276" width="1.8018%" height="15" fill="rgb(233,141,41)"/><text x="85.5353%" y="286.50">e..</text></g><g><title>array_true_divide (number.c:826) (7 samples, 2.10%)</title><rect x="85.2853%" y="228" width="2.1021%" height="15" fill="rgb(239,167,4)"/><text x="85.5353%" y="238.50">a..</text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:61) (82 samples, 24.62%)</title><rect x="63.0631%" y="52" width="24.6246%" height="15" fill="rgb(209,217,16)"/><text x="63.3131%" y="62.50">&lt;module&gt; (bench_LogisticRegression_libl..</text></g><g><title>profile_pyrtc (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:60) (82 samples, 24.62%)</title><rect x="63.0631%" y="68" width="24.6246%" height="15" fill="rgb(219,88,35)"/><text x="63.3131%" y="78.50">profile_pyrtc (bench_LogisticRegression..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:37) (81 samples, 24.32%)</title><rect x="63.3634%" y="84" width="24.3243%" height="15" fill="rgb(220,193,23)"/><text x="63.6134%" y="94.50">setup_profile (bench_LogisticRegression..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:31) (80 samples, 24.02%)</title><rect x="63.6637%" y="100" width="24.0240%" height="15" fill="rgb(230,90,52)"/><text x="63.9137%" y="110.50">profile (bench_LogisticRegression_libl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (80 samples, 24.02%)</title><rect x="63.6637%" y="116" width="24.0240%" height="15" fill="rgb(252,106,19)"/><text x="63.9137%" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:232) (79 samples, 23.72%)</title><rect x="63.9640%" y="132" width="23.7237%" height="15" fill="rgb(206,74,20)"/><text x="64.2140%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:442) (74 samples, 22.22%)</title><rect x="65.4655%" y="148" width="22.2222%" height="15" fill="rgb(230,138,44)"/><text x="65.7155%" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>_run_sequence_runtime_compiled (mlprodict/onnxrt/onnx_inference.py:160) (72 samples, 21.62%)</title><rect x="66.0661%" y="164" width="21.6216%" height="15" fill="rgb(235,182,43)"/><text x="66.3161%" y="174.50">_run_sequence_runtime_compiled (ml..</text></g><g><title>compiled_run (&lt;string&gt;:5) (34 samples, 10.21%)</title><rect x="77.4775%" y="180" width="10.2102%" height="15" fill="rgb(242,16,51)"/><text x="77.7275%" y="190.50">compiled_run (&lt;..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:67) (33 samples, 9.91%)</title><rect x="77.7778%" y="196" width="9.9099%" height="15" fill="rgb(248,9,4)"/><text x="78.0278%" y="206.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:47) (32 samples, 9.61%)</title><rect x="78.0781%" y="212" width="9.6096%" height="15" fill="rgb(210,31,22)"/><text x="78.3281%" y="222.50">norm_l1 (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:140) (4 samples, 1.20%)</title><rect x="90.0901%" y="196" width="1.2012%" height="15" fill="rgb(239,54,39)"/><text x="90.3401%" y="206.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.20%)</title><rect x="93.6937%" y="324" width="1.2012%" height="15" fill="rgb(230,99,41)"/><text x="93.9437%" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.60%)</title><rect x="92.7928%" y="244" width="3.6036%" height="15" fill="rgb(253,106,12)"/><text x="93.0428%" y="254.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.60%)</title><rect x="92.7928%" y="260" width="3.6036%" height="15" fill="rgb(213,46,41)"/><text x="93.0428%" y="270.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.70%)</title><rect x="93.6937%" y="276" width="2.7027%" height="15" fill="rgb(215,133,35)"/><text x="93.9437%" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.70%)</title><rect x="93.6937%" y="292" width="2.7027%" height="15" fill="rgb(213,28,5)"/><text x="93.9437%" y="302.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.70%)</title><rect x="93.6937%" y="308" width="2.7027%" height="15" fill="rgb(215,77,49)"/><text x="93.9437%" y="318.50">on..</text></g><g><title>onnxruntime::python::AddTensorAsPyObj (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.20%)</title><rect x="96.3964%" y="244" width="1.2012%" height="15" fill="rgb(248,100,22)"/><text x="96.6464%" y="254.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.20%)</title><rect x="96.3964%" y="260" width="1.2012%" height="15" fill="rgb(208,67,9)"/><text x="96.6464%" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:650) (32 samples, 9.61%)</title><rect x="89.4895%" y="164" width="9.6096%" height="15" fill="rgb(219,133,21)"/><text x="89.7395%" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (31 samples, 9.31%)</title><rect x="89.7898%" y="180" width="9.3093%" height="15" fill="rgb(246,46,29)"/><text x="90.0398%" y="190.50">run (mlprodic..</text></g><g><title>run (onnxruntime/capi/session.py:142) (26 samples, 7.81%)</title><rect x="91.2913%" y="196" width="7.8078%" height="15" fill="rgb(246,185,52)"/><text x="91.5413%" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 7.21%)</title><rect x="91.8919%" y="212" width="7.2072%" height="15" fill="rgb(252,136,11)"/><text x="92.1419%" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 6.91%)</title><rect x="92.1922%" y="228" width="6.9069%" height="15" fill="rgb(219,138,53)"/><text x="92.4422%" y="238.50">void pybi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:232) (35 samples, 10.51%)</title><rect x="89.1892%" y="132" width="10.5105%" height="15" fill="rgb(211,51,23)"/><text x="89.4392%" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:442) (34 samples, 10.21%)</title><rect x="89.4895%" y="148" width="10.2102%" height="15" fill="rgb(247,221,28)"/><text x="89.7395%" y="158.50">run (mlprodict/..</text></g><g><title>all (333 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(251,222,45)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:68) (41 samples, 12.31%)</title><rect x="87.6877%" y="52" width="12.3123%" height="15" fill="rgb(217,162,53)"/><text x="87.9377%" y="62.50">&lt;module&gt; (bench_Lo..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:67) (41 samples, 12.31%)</title><rect x="87.6877%" y="68" width="12.3123%" height="15" fill="rgb(229,93,14)"/><text x="87.9377%" y="78.50">profile_ort (bench..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:37) (41 samples, 12.31%)</title><rect x="87.6877%" y="84" width="12.3123%" height="15" fill="rgb(209,67,49)"/><text x="87.9377%" y="94.50">setup_profile (ben..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_nozipmap.py:31) (40 samples, 12.01%)</title><rect x="87.9880%" y="100" width="12.0120%" height="15" fill="rgb(213,87,29)"/><text x="88.2380%" y="110.50">profile (bench_Log..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:182) (38 samples, 11.41%)</title><rect x="88.5886%" y="116" width="11.4114%" height="15" fill="rgb(205,151,52)"/><text x="88.8386%" y="126.50">time_predict (mlp..</text></g></svg></svg>