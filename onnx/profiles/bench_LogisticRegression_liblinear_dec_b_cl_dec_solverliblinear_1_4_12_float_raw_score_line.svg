<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2246" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2229.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2229.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:31) (1 samples, 0.30%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(211,89,53)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:11) (1 samples, 0.30%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(234,223,41)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:39) (1 samples, 0.30%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(237,60,5)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.30%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(235,121,28)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py:1542) (1 samples, 0.30%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(231,26,3)"/><text x="13.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py:939) (1 samples, 0.30%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(221,161,28)"/><text x="13.00" y="142.50"></text></g><g><title>0x7f5b2a25cc54 (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(251,187,9)"/><text x="13.00" y="158.50"></text></g><g><title>0x7f5b2a259060 (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(229,127,15)"/><text x="13.00" y="174.50"></text></g><g><title>train (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(238,149,49)"/><text x="13.00" y="190.50"></text></g><g><title>0x7f5b2a26405a (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(212,119,12)"/><text x="13.00" y="206.50"></text></g><g><title>TRON::tron (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(241,216,43)"/><text x="13.00" y="222.50"></text></g><g><title>TRON::trcg (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(229,153,23)"/><text x="13.00" y="238.50"></text></g><g><title>l2r_lr_fun::Hv (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(231,136,11)"/><text x="13.00" y="254.50"></text></g><g><title>l2r_lr_fun::XTv (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(212,23,48)"/><text x="13.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:22) (1 samples, 0.30%)</title><rect x="13" y="100" width="4" height="15" fill="rgb(221,72,16)"/><text x="16.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (2 samples, 0.61%)</title><rect x="31" y="164" width="7" height="15" fill="rgb(251,93,23)"/><text x="34.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.61%)</title><rect x="38" y="164" width="7" height="15" fill="rgb(247,119,22)"/><text x="41.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.30%)</title><rect x="42" y="180" width="3" height="15" fill="rgb(236,141,5)"/><text x="45.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.30%)</title><rect x="45" y="164" width="4" height="15" fill="rgb(206,122,20)"/><text x="48.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.30%)</title><rect x="49" y="164" width="4" height="15" fill="rgb(253,67,23)"/><text x="52.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (5 samples, 1.52%)</title><rect x="56" y="180" width="18" height="15" fill="rgb(249,208,49)"/><text x="59.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.22%)</title><rect x="117" y="196" width="15" height="15" fill="rgb(237,65,50)"/><text x="120.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (30 samples, 9.15%)</title><rect x="27" y="148" width="108" height="15" fill="rgb(215,92,7)"/><text x="30.00" y="158.50">decision_func..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (23 samples, 7.01%)</title><rect x="53" y="164" width="82" height="15" fill="rgb(235,124,19)"/><text x="56.00" y="174.50">check_is_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (17 samples, 5.18%)</title><rect x="74" y="180" width="61" height="15" fill="rgb(207,127,10)"/><text x="77.00" y="190.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.30%)</title><rect x="132" y="196" width="3" height="15" fill="rgb(212,115,2)"/><text x="135.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.30%)</title><rect x="143" y="164" width="3" height="15" fill="rgb(212,106,36)"/><text x="146.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (5 samples, 1.52%)</title><rect x="146" y="164" width="18" height="15" fill="rgb(208,139,13)"/><text x="149.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (4 samples, 1.22%)</title><rect x="164" y="164" width="15" height="15" fill="rgb(205,21,3)"/><text x="167.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (4 samples, 1.22%)</title><rect x="164" y="180" width="15" height="15" fill="rgb(213,186,49)"/><text x="167.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:475) (2 samples, 0.61%)</title><rect x="186" y="180" width="7" height="15" fill="rgb(248,98,15)"/><text x="189.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.30%)</title><rect x="193" y="180" width="4" height="15" fill="rgb(239,105,30)"/><text x="196.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:480) (2 samples, 0.61%)</title><rect x="197" y="180" width="7" height="15" fill="rgb(229,27,9)"/><text x="200.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.30%)</title><rect x="204" y="180" width="3" height="15" fill="rgb(206,9,49)"/><text x="207.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.30%)</title><rect x="207" y="180" width="4" height="15" fill="rgb(241,121,23)"/><text x="210.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 3.35%)</title><rect x="179" y="164" width="39" height="15" fill="rgb(215,36,54)"/><text x="182.00" y="174.50">che..</text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.61%)</title><rect x="211" y="180" width="7" height="15" fill="rgb(230,92,52)"/><text x="214.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.30%)</title><rect x="222" y="180" width="3" height="15" fill="rgb(229,92,23)"/><text x="225.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.61%)</title><rect x="229" y="196" width="7" height="15" fill="rgb(231,182,3)"/><text x="232.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 1.83%)</title><rect x="218" y="164" width="22" height="15" fill="rgb(238,113,47)"/><text x="221.00" y="174.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.22%)</title><rect x="225" y="180" width="15" height="15" fill="rgb(212,121,50)"/><text x="228.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.30%)</title><rect x="236" y="196" width="4" height="15" fill="rgb(215,114,18)"/><text x="239.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.91%)</title><rect x="240" y="164" width="11" height="15" fill="rgb(241,135,0)"/><text x="243.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.61%)</title><rect x="243" y="180" width="8" height="15" fill="rgb(214,53,39)"/><text x="246.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1618) (1 samples, 0.30%)</title><rect x="247" y="196" width="4" height="15" fill="rgb(247,15,53)"/><text x="250.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.30%)</title><rect x="258" y="180" width="3" height="15" fill="rgb(239,128,7)"/><text x="261.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.22%)</title><rect x="251" y="164" width="14" height="15" fill="rgb(241,148,31)"/><text x="254.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.30%)</title><rect x="261" y="180" width="4" height="15" fill="rgb(218,165,50)"/><text x="264.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.61%)</title><rect x="265" y="164" width="7" height="15" fill="rgb(229,226,51)"/><text x="268.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (2 samples, 0.61%)</title><rect x="272" y="164" width="7" height="15" fill="rgb(220,188,25)"/><text x="275.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:365) (1 samples, 0.30%)</title><rect x="279" y="180" width="4" height="15" fill="rgb(223,229,41)"/><text x="282.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.61%)</title><rect x="287" y="196" width="7" height="15" fill="rgb(207,190,18)"/><text x="290.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (4 samples, 1.22%)</title><rect x="283" y="180" width="14" height="15" fill="rgb(224,63,1)"/><text x="286.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.30%)</title><rect x="294" y="196" width="3" height="15" fill="rgb(214,11,14)"/><text x="297.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (9 samples, 2.74%)</title><rect x="279" y="164" width="33" height="15" fill="rgb(218,89,48)"/><text x="282.00" y="174.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (4 samples, 1.22%)</title><rect x="297" y="180" width="15" height="15" fill="rgb(233,43,54)"/><text x="300.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.30%)</title><rect x="308" y="196" width="4" height="15" fill="rgb(253,170,0)"/><text x="311.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.30%)</title><rect x="312" y="164" width="3" height="15" fill="rgb(206,56,50)"/><text x="315.00" y="174.50"></text></g><g><title>0x7f5b519260e6 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="330" y="196" width="3" height="15" fill="rgb(250,106,7)"/><text x="333.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.91%)</title><rect x="333" y="196" width="11" height="15" fill="rgb(248,151,28)"/><text x="336.00" y="206.50"></text></g><g><title>0x7f5b5185de7a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="340" y="212" width="4" height="15" fill="rgb(254,71,5)"/><text x="343.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (2 samples, 0.61%)</title><rect x="344" y="196" width="7" height="15" fill="rgb(240,228,16)"/><text x="347.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (12 samples, 3.66%)</title><rect x="319" y="180" width="43" height="15" fill="rgb(244,137,0)"/><text x="322.00" y="190.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.91%)</title><rect x="351" y="196" width="11" height="15" fill="rgb(237,166,0)"/><text x="354.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (14 samples, 4.27%)</title><rect x="315" y="164" width="51" height="15" fill="rgb(211,162,17)"/><text x="318.00" y="174.50">check..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.30%)</title><rect x="362" y="180" width="4" height="15" fill="rgb(234,132,3)"/><text x="365.00" y="190.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.30%)</title><rect x="362" y="196" width="4" height="15" fill="rgb(252,180,26)"/><text x="365.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.30%)</title><rect x="366" y="164" width="3" height="15" fill="rgb(236,82,29)"/><text x="369.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.91%)</title><rect x="376" y="180" width="11" height="15" fill="rgb(217,202,40)"/><text x="379.00" y="190.50"></text></g><g><title>0x7f5b51925e06 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="384" y="196" width="3" height="15" fill="rgb(236,135,11)"/><text x="387.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.30%)</title><rect x="387" y="180" width="4" height="15" fill="rgb(227,51,9)"/><text x="390.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.30%)</title><rect x="391" y="180" width="3" height="15" fill="rgb(205,153,39)"/><text x="394.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.30%)</title><rect x="394" y="180" width="4" height="15" fill="rgb(229,87,33)"/><text x="397.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (19 samples, 5.79%)</title><rect x="369" y="164" width="69" height="15" fill="rgb(221,152,16)"/><text x="372.00" y="174.50">check_a..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (11 samples, 3.35%)</title><rect x="398" y="180" width="40" height="15" fill="rgb(209,144,32)"/><text x="401.00" y="190.50">_nu..</text></g><g><title>__instancecheck__ (abc.py:139) (7 samples, 2.13%)</title><rect x="412" y="196" width="26" height="15" fill="rgb(241,174,30)"/><text x="415.00" y="206.50">_..</text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.30%)</title><rect x="434" y="212" width="4" height="15" fill="rgb(211,57,47)"/><text x="437.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.30%)</title><rect x="438" y="164" width="3" height="15" fill="rgb(234,5,24)"/><text x="441.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (86 samples, 26.22%)</title><rect x="135" y="148" width="310" height="15" fill="rgb(218,165,46)"/><text x="138.00" y="158.50">decision_function (sklearn/linear_model/_..</text></g><g><title>check_array (sklearn/utils/validation.py:580) (1 samples, 0.30%)</title><rect x="441" y="164" width="4" height="15" fill="rgb(249,202,36)"/><text x="444.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (2 samples, 0.61%)</title><rect x="445" y="148" width="7" height="15" fill="rgb(246,161,16)"/><text x="448.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (1 samples, 0.30%)</title><rect x="452" y="148" width="4" height="15" fill="rgb(215,160,18)"/><text x="455.00" y="158.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.30%)</title><rect x="456" y="148" width="3" height="15" fill="rgb(231,205,15)"/><text x="459.00" y="158.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.30%)</title><rect x="456" y="164" width="3" height="15" fill="rgb(224,64,41)"/><text x="459.00" y="174.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.30%)</title><rect x="456" y="180" width="3" height="15" fill="rgb(219,99,54)"/><text x="459.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.30%)</title><rect x="456" y="196" width="3" height="15" fill="rgb(236,198,41)"/><text x="459.00" y="206.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.30%)</title><rect x="456" y="212" width="3" height="15" fill="rgb(221,33,25)"/><text x="459.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.30%)</title><rect x="470" y="196" width="4" height="15" fill="rgb(215,79,45)"/><text x="473.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.30%)</title><rect x="474" y="212" width="3" height="15" fill="rgb(208,44,13)"/><text x="477.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.61%)</title><rect x="474" y="196" width="7" height="15" fill="rgb(224,88,19)"/><text x="477.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.30%)</title><rect x="477" y="212" width="4" height="15" fill="rgb(211,210,20)"/><text x="480.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="481" y="196" width="3" height="15" fill="rgb(214,99,46)"/><text x="484.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.30%)</title><rect x="481" y="212" width="3" height="15" fill="rgb(246,129,30)"/><text x="484.00" y="222.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.30%)</title><rect x="481" y="228" width="3" height="15" fill="rgb(230,75,39)"/><text x="484.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.30%)</title><rect x="484" y="196" width="4" height="15" fill="rgb(220,93,54)"/><text x="487.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.30%)</title><rect x="484" y="212" width="4" height="15" fill="rgb(237,229,13)"/><text x="487.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.30%)</title><rect x="484" y="228" width="4" height="15" fill="rgb(214,223,29)"/><text x="487.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.30%)</title><rect x="488" y="228" width="4" height="15" fill="rgb(238,160,29)"/><text x="491.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (2 samples, 0.61%)</title><rect x="488" y="212" width="7" height="15" fill="rgb(215,16,7)"/><text x="491.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.30%)</title><rect x="492" y="228" width="3" height="15" fill="rgb(210,101,12)"/><text x="495.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.30%)</title><rect x="495" y="228" width="4" height="15" fill="rgb(212,137,22)"/><text x="498.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="499" y="228" width="3" height="15" fill="rgb(253,144,43)"/><text x="502.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.30%)</title><rect x="499" y="244" width="3" height="15" fill="rgb(222,146,50)"/><text x="502.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3131) (1 samples, 0.30%)</title><rect x="499" y="260" width="3" height="15" fill="rgb(218,37,11)"/><text x="502.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.30%)</title><rect x="502" y="228" width="4" height="15" fill="rgb(227,164,36)"/><text x="505.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.30%)</title><rect x="502" y="244" width="4" height="15" fill="rgb(253,51,28)"/><text x="505.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2156) (1 samples, 0.30%)</title><rect x="502" y="260" width="4" height="15" fill="rgb(217,171,39)"/><text x="505.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1573) (1 samples, 0.30%)</title><rect x="506" y="228" width="4" height="15" fill="rgb(211,203,4)"/><text x="509.00" y="238.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c:1040) (1 samples, 0.30%)</title><rect x="506" y="244" width="4" height="15" fill="rgb(251,26,22)"/><text x="509.00" y="254.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:587) (1 samples, 0.30%)</title><rect x="510" y="276" width="3" height="15" fill="rgb(240,2,2)"/><text x="513.00" y="286.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h:438) (1 samples, 0.30%)</title><rect x="510" y="292" width="3" height="15" fill="rgb(218,181,9)"/><text x="513.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.61%)</title><rect x="510" y="228" width="7" height="15" fill="rgb(215,97,9)"/><text x="513.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.61%)</title><rect x="510" y="244" width="7" height="15" fill="rgb(228,172,25)"/><text x="513.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.61%)</title><rect x="510" y="260" width="7" height="15" fill="rgb(238,216,49)"/><text x="513.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.30%)</title><rect x="513" y="276" width="4" height="15" fill="rgb(226,75,31)"/><text x="516.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.30%)</title><rect x="513" y="292" width="4" height="15" fill="rgb(238,222,32)"/><text x="516.00" y="302.50"></text></g><g><title>array_add (number.c:330) (16 samples, 4.88%)</title><rect x="463" y="164" width="57" height="15" fill="rgb(245,85,33)"/><text x="466.00" y="174.50">array_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 4.27%)</title><rect x="470" y="180" width="50" height="15" fill="rgb(252,132,40)"/><text x="473.00" y="190.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 2.74%)</title><rect x="488" y="196" width="32" height="15" fill="rgb(245,60,0)"/><text x="491.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.13%)</title><rect x="495" y="212" width="25" height="15" fill="rgb(207,91,12)"/><text x="498.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.30%)</title><rect x="517" y="228" width="3" height="15" fill="rgb(222,156,16)"/><text x="520.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.30%)</title><rect x="517" y="244" width="3" height="15" fill="rgb(206,111,19)"/><text x="520.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="520" y="164" width="4" height="15" fill="rgb(206,188,37)"/><text x="523.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="520" y="180" width="4" height="15" fill="rgb(229,134,13)"/><text x="523.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="520" y="196" width="4" height="15" fill="rgb(222,187,49)"/><text x="523.00" y="206.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.30%)</title><rect x="535" y="180" width="3" height="15" fill="rgb(217,215,0)"/><text x="538.00" y="190.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.30%)</title><rect x="535" y="196" width="3" height="15" fill="rgb(227,227,4)"/><text x="538.00" y="206.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="535" y="212" width="3" height="15" fill="rgb(241,58,6)"/><text x="538.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="538" y="212" width="4" height="15" fill="rgb(223,226,2)"/><text x="541.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.30%)</title><rect x="538" y="228" width="4" height="15" fill="rgb(212,222,26)"/><text x="541.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.61%)</title><rect x="538" y="180" width="8" height="15" fill="rgb(205,20,32)"/><text x="541.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.61%)</title><rect x="538" y="196" width="8" height="15" fill="rgb(227,214,33)"/><text x="541.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:89) (1 samples, 0.30%)</title><rect x="542" y="212" width="4" height="15" fill="rgb(230,66,17)"/><text x="545.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2819) (1 samples, 0.30%)</title><rect x="546" y="212" width="3" height="15" fill="rgb(254,211,0)"/><text x="549.00" y="222.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.30%)</title><rect x="546" y="228" width="3" height="15" fill="rgb(227,225,26)"/><text x="549.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.30%)</title><rect x="549" y="212" width="4" height="15" fill="rgb(217,102,34)"/><text x="552.00" y="222.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.30%)</title><rect x="549" y="228" width="4" height="15" fill="rgb(219,227,53)"/><text x="552.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="553" y="228" width="3" height="15" fill="rgb(214,18,39)"/><text x="556.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="556" y="228" width="4" height="15" fill="rgb(233,53,40)"/><text x="559.00" y="238.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.30%)</title><rect x="556" y="244" width="4" height="15" fill="rgb(239,144,51)"/><text x="559.00" y="254.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.30%)</title><rect x="556" y="260" width="4" height="15" fill="rgb(250,220,12)"/><text x="559.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.30%)</title><rect x="560" y="228" width="4" height="15" fill="rgb(206,226,10)"/><text x="563.00" y="238.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.30%)</title><rect x="564" y="244" width="3" height="15" fill="rgb(252,177,11)"/><text x="567.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.30%)</title><rect x="564" y="260" width="3" height="15" fill="rgb(222,209,21)"/><text x="567.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (2 samples, 0.61%)</title><rect x="564" y="228" width="7" height="15" fill="rgb(226,125,26)"/><text x="567.00" y="238.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1307) (1 samples, 0.30%)</title><rect x="567" y="244" width="4" height="15" fill="rgb(254,8,14)"/><text x="570.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.30%)</title><rect x="567" y="260" width="4" height="15" fill="rgb(225,6,24)"/><text x="570.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.30%)</title><rect x="571" y="260" width="3" height="15" fill="rgb(233,110,15)"/><text x="574.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.30%)</title><rect x="571" y="276" width="3" height="15" fill="rgb(234,162,36)"/><text x="574.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.30%)</title><rect x="571" y="292" width="3" height="15" fill="rgb(218,185,16)"/><text x="574.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.30%)</title><rect x="574" y="260" width="4" height="15" fill="rgb(233,55,46)"/><text x="577.00" y="270.50"></text></g><g><title>broadcast_strides (array_assign.c:46) (1 samples, 0.30%)</title><rect x="574" y="276" width="4" height="15" fill="rgb(229,187,9)"/><text x="577.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.30%)</title><rect x="578" y="276" width="4" height="15" fill="rgb(223,10,1)"/><text x="581.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3502) (1 samples, 0.30%)</title><rect x="578" y="292" width="4" height="15" fill="rgb(213,1,4)"/><text x="581.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.61%)</title><rect x="582" y="292" width="7" height="15" fill="rgb(251,53,17)"/><text x="585.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (4 samples, 1.22%)</title><rect x="582" y="276" width="14" height="15" fill="rgb(214,148,41)"/><text x="585.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (2 samples, 0.61%)</title><rect x="589" y="292" width="7" height="15" fill="rgb(243,150,38)"/><text x="592.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.30%)</title><rect x="596" y="276" width="4" height="15" fill="rgb(223,127,49)"/><text x="599.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.30%)</title><rect x="596" y="292" width="4" height="15" fill="rgb(244,134,47)"/><text x="599.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (14 samples, 4.27%)</title><rect x="553" y="212" width="50" height="15" fill="rgb(233,202,31)"/><text x="556.00" y="222.50">PyUFu..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (9 samples, 2.74%)</title><rect x="571" y="228" width="32" height="15" fill="rgb(244,179,39)"/><text x="574.00" y="238.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (9 samples, 2.74%)</title><rect x="571" y="244" width="32" height="15" fill="rgb(254,149,2)"/><text x="574.00" y="254.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 2.13%)</title><rect x="578" y="260" width="25" height="15" fill="rgb(227,177,40)"/><text x="581.00" y="270.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.30%)</title><rect x="600" y="276" width="3" height="15" fill="rgb(209,173,26)"/><text x="603.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.30%)</title><rect x="600" y="292" width="3" height="15" fill="rgb(235,208,2)"/><text x="603.00" y="302.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.30%)</title><rect x="600" y="308" width="3" height="15" fill="rgb(230,29,36)"/><text x="603.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2881) (1 samples, 0.30%)</title><rect x="603" y="212" width="4" height="15" fill="rgb(237,38,4)"/><text x="606.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.30%)</title><rect x="607" y="212" width="3" height="15" fill="rgb(210,80,49)"/><text x="610.00" y="222.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:128) (1 samples, 0.30%)</title><rect x="607" y="228" width="3" height="15" fill="rgb(232,10,26)"/><text x="610.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:411) (1 samples, 0.30%)</title><rect x="610" y="228" width="4" height="15" fill="rgb(219,197,50)"/><text x="613.00" y="238.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.30%)</title><rect x="610" y="244" width="4" height="15" fill="rgb(248,197,27)"/><text x="613.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.61%)</title><rect x="610" y="212" width="7" height="15" fill="rgb(226,167,50)"/><text x="613.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.30%)</title><rect x="614" y="228" width="3" height="15" fill="rgb(242,82,41)"/><text x="617.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.30%)</title><rect x="614" y="244" width="3" height="15" fill="rgb(225,158,8)"/><text x="617.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3044) (1 samples, 0.30%)</title><rect x="617" y="212" width="4" height="15" fill="rgb(232,9,45)"/><text x="620.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.30%)</title><rect x="621" y="212" width="4" height="15" fill="rgb(231,145,35)"/><text x="624.00" y="222.50"></text></g><g><title>0x7f5b50a69e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="621" y="228" width="4" height="15" fill="rgb(226,14,30)"/><text x="624.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (29 samples, 8.84%)</title><rect x="524" y="164" width="104" height="15" fill="rgb(246,65,51)"/><text x="527.00" y="174.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (23 samples, 7.01%)</title><rect x="546" y="180" width="82" height="15" fill="rgb(250,31,22)"/><text x="549.00" y="190.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (23 samples, 7.01%)</title><rect x="546" y="196" width="82" height="15" fill="rgb(253,74,27)"/><text x="549.00" y="206.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.30%)</title><rect x="625" y="212" width="3" height="15" fill="rgb(229,68,52)"/><text x="628.00" y="222.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.30%)</title><rect x="625" y="228" width="3" height="15" fill="rgb(239,225,38)"/><text x="628.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="625" y="244" width="3" height="15" fill="rgb(221,76,20)"/><text x="628.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="625" y="260" width="3" height="15" fill="rgb(241,50,48)"/><text x="628.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="625" y="276" width="3" height="15" fill="rgb(208,136,13)"/><text x="628.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (49 samples, 14.94%)</title><rect x="459" y="148" width="176" height="15" fill="rgb(211,40,21)"/><text x="462.00" y="158.50">decision_function (skl..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.61%)</title><rect x="628" y="164" width="7" height="15" fill="rgb(230,28,28)"/><text x="631.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.30%)</title><rect x="632" y="180" width="3" height="15" fill="rgb(240,32,32)"/><text x="635.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (172 samples, 52.44%)</title><rect x="24" y="132" width="619" height="15" fill="rgb(220,34,41)"/><text x="27.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252)</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (2 samples, 0.61%)</title><rect x="635" y="148" width="8" height="15" fill="rgb(205,2,18)"/><text x="638.00" y="158.50"></text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.61%)</title><rect x="643" y="132" width="7" height="15" fill="rgb(254,204,18)"/><text x="646.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:38) (178 samples, 54.27%)</title><rect x="13" y="52" width="640" height="15" fill="rgb(246,169,14)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_r..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:37) (178 samples, 54.27%)</title><rect x="13" y="68" width="640" height="15" fill="rgb(225,215,23)"/><text x="16.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_floa..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:29) (178 samples, 54.27%)</title><rect x="13" y="84" width="640" height="15" fill="rgb(222,119,36)"/><text x="16.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_fl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:23) (177 samples, 53.96%)</title><rect x="17" y="100" width="636" height="15" fill="rgb(225,96,11)"/><text x="20.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_r..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (177 samples, 53.96%)</title><rect x="17" y="116" width="636" height="15" fill="rgb(240,221,43)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="650" y="132" width="3" height="15" fill="rgb(206,176,21)"/><text x="653.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:1) (1 samples, 0.30%)</title><rect x="653" y="148" width="4" height="15" fill="rgb(217,89,38)"/><text x="656.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="653" y="164" width="4" height="15" fill="rgb(207,5,35)"/><text x="656.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="653" y="180" width="4" height="15" fill="rgb(240,177,48)"/><text x="656.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="653" y="196" width="4" height="15" fill="rgb(233,108,30)"/><text x="656.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="653" y="212" width="4" height="15" fill="rgb(253,50,37)"/><text x="656.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="653" y="228" width="4" height="15" fill="rgb(220,32,34)"/><text x="656.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.30%)</title><rect x="653" y="244" width="4" height="15" fill="rgb(206,212,11)"/><text x="656.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="653" y="260" width="4" height="15" fill="rgb(217,147,24)"/><text x="656.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="653" y="276" width="4" height="15" fill="rgb(206,110,16)"/><text x="656.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="653" y="292" width="4" height="15" fill="rgb(206,38,21)"/><text x="656.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="653" y="308" width="4" height="15" fill="rgb(226,204,43)"/><text x="656.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="653" y="324" width="4" height="15" fill="rgb(247,6,15)"/><text x="656.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="653" y="340" width="4" height="15" fill="rgb(217,61,22)"/><text x="656.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="653" y="356" width="4" height="15" fill="rgb(233,101,7)"/><text x="656.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.30%)</title><rect x="653" y="372" width="4" height="15" fill="rgb(208,29,12)"/><text x="656.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="653" y="388" width="4" height="15" fill="rgb(254,11,16)"/><text x="656.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="653" y="404" width="4" height="15" fill="rgb(211,187,35)"/><text x="656.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="653" y="420" width="4" height="15" fill="rgb(214,200,23)"/><text x="656.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="653" y="436" width="4" height="15" fill="rgb(232,199,45)"/><text x="656.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="653" y="452" width="4" height="15" fill="rgb(224,163,26)"/><text x="656.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.30%)</title><rect x="653" y="468" width="4" height="15" fill="rgb(232,87,1)"/><text x="656.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="653" y="484" width="4" height="15" fill="rgb(222,212,50)"/><text x="656.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="653" y="500" width="4" height="15" fill="rgb(223,136,31)"/><text x="656.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="653" y="516" width="4" height="15" fill="rgb(224,15,16)"/><text x="656.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="653" y="532" width="4" height="15" fill="rgb(216,121,15)"/><text x="656.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="653" y="548" width="4" height="15" fill="rgb(249,149,1)"/><text x="656.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:1574) (1 samples, 0.30%)</title><rect x="653" y="564" width="4" height="15" fill="rgb(216,177,2)"/><text x="656.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.30%)</title><rect x="653" y="580" width="4" height="15" fill="rgb(235,154,19)"/><text x="656.00" y="590.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.30%)</title><rect x="657" y="852" width="4" height="15" fill="rgb(251,2,50)"/><text x="660.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.30%)</title><rect x="657" y="868" width="4" height="15" fill="rgb(249,79,54)"/><text x="660.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.30%)</title><rect x="657" y="884" width="4" height="15" fill="rgb(232,150,38)"/><text x="660.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.30%)</title><rect x="657" y="900" width="4" height="15" fill="rgb(229,2,5)"/><text x="660.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.30%)</title><rect x="657" y="916" width="4" height="15" fill="rgb(232,153,54)"/><text x="660.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.30%)</title><rect x="657" y="932" width="4" height="15" fill="rgb(216,34,28)"/><text x="660.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.30%)</title><rect x="657" y="948" width="4" height="15" fill="rgb(213,43,8)"/><text x="660.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.30%)</title><rect x="657" y="964" width="4" height="15" fill="rgb(228,191,26)"/><text x="660.00" y="974.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.30%)</title><rect x="657" y="980" width="4" height="15" fill="rgb(220,48,13)"/><text x="660.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.61%)</title><rect x="657" y="820" width="7" height="15" fill="rgb(235,197,23)"/><text x="660.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.61%)</title><rect x="657" y="836" width="7" height="15" fill="rgb(216,207,7)"/><text x="660.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.30%)</title><rect x="661" y="852" width="3" height="15" fill="rgb(246,100,2)"/><text x="664.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.30%)</title><rect x="661" y="868" width="3" height="15" fill="rgb(226,40,47)"/><text x="664.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.30%)</title><rect x="661" y="884" width="3" height="15" fill="rgb(220,124,20)"/><text x="664.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="661" y="900" width="3" height="15" fill="rgb(207,163,21)"/><text x="664.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.30%)</title><rect x="661" y="916" width="3" height="15" fill="rgb(229,0,5)"/><text x="664.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.30%)</title><rect x="661" y="932" width="3" height="15" fill="rgb(225,18,15)"/><text x="664.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.30%)</title><rect x="661" y="948" width="3" height="15" fill="rgb(227,72,5)"/><text x="664.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.30%)</title><rect x="661" y="964" width="3" height="15" fill="rgb(212,141,42)"/><text x="664.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.30%)</title><rect x="661" y="980" width="3" height="15" fill="rgb(213,4,34)"/><text x="664.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:2) (3 samples, 0.91%)</title><rect x="657" y="148" width="11" height="15" fill="rgb(226,161,9)"/><text x="660.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="164" width="11" height="15" fill="rgb(235,114,11)"/><text x="660.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="657" y="180" width="11" height="15" fill="rgb(242,161,43)"/><text x="660.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="196" width="11" height="15" fill="rgb(242,90,6)"/><text x="660.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="212" width="11" height="15" fill="rgb(232,88,14)"/><text x="660.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="657" y="228" width="11" height="15" fill="rgb(210,140,46)"/><text x="660.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="657" y="244" width="11" height="15" fill="rgb(219,148,53)"/><text x="660.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="657" y="260" width="11" height="15" fill="rgb(211,135,23)"/><text x="660.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="276" width="11" height="15" fill="rgb(223,33,1)"/><text x="660.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.91%)</title><rect x="657" y="292" width="11" height="15" fill="rgb(234,33,26)"/><text x="660.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="308" width="11" height="15" fill="rgb(251,174,40)"/><text x="660.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="657" y="324" width="11" height="15" fill="rgb(216,175,6)"/><text x="660.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="657" y="340" width="11" height="15" fill="rgb(242,197,24)"/><text x="660.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="657" y="356" width="11" height="15" fill="rgb(239,46,40)"/><text x="660.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="372" width="11" height="15" fill="rgb(244,57,35)"/><text x="660.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.91%)</title><rect x="657" y="388" width="11" height="15" fill="rgb(233,212,15)"/><text x="660.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="404" width="11" height="15" fill="rgb(233,86,22)"/><text x="660.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="657" y="420" width="11" height="15" fill="rgb(212,174,41)"/><text x="660.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="657" y="436" width="11" height="15" fill="rgb(241,158,14)"/><text x="660.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="657" y="452" width="11" height="15" fill="rgb(220,146,14)"/><text x="660.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="468" width="11" height="15" fill="rgb(213,72,0)"/><text x="660.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.91%)</title><rect x="657" y="484" width="11" height="15" fill="rgb(231,131,43)"/><text x="660.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="500" width="11" height="15" fill="rgb(208,96,23)"/><text x="660.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="657" y="516" width="11" height="15" fill="rgb(216,21,13)"/><text x="660.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="657" y="532" width="11" height="15" fill="rgb(235,13,34)"/><text x="660.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="657" y="548" width="11" height="15" fill="rgb(234,1,25)"/><text x="660.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="564" width="11" height="15" fill="rgb(230,124,14)"/><text x="660.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.91%)</title><rect x="657" y="580" width="11" height="15" fill="rgb(226,86,24)"/><text x="660.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="596" width="11" height="15" fill="rgb(213,41,50)"/><text x="660.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="657" y="612" width="11" height="15" fill="rgb(249,21,45)"/><text x="660.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="628" width="11" height="15" fill="rgb(224,103,1)"/><text x="660.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="644" width="11" height="15" fill="rgb(236,171,19)"/><text x="660.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="657" y="660" width="11" height="15" fill="rgb(252,214,26)"/><text x="660.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="657" y="676" width="11" height="15" fill="rgb(214,86,38)"/><text x="660.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="657" y="692" width="11" height="15" fill="rgb(221,181,26)"/><text x="660.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="708" width="11" height="15" fill="rgb(236,136,28)"/><text x="660.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.91%)</title><rect x="657" y="724" width="11" height="15" fill="rgb(236,205,22)"/><text x="660.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="657" y="740" width="11" height="15" fill="rgb(227,27,25)"/><text x="660.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="657" y="756" width="11" height="15" fill="rgb(229,190,50)"/><text x="660.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="657" y="772" width="11" height="15" fill="rgb(205,224,40)"/><text x="660.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="657" y="788" width="11" height="15" fill="rgb(209,132,51)"/><text x="660.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="657" y="804" width="11" height="15" fill="rgb(227,227,1)"/><text x="660.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:82) (1 samples, 0.30%)</title><rect x="664" y="820" width="4" height="15" fill="rgb(233,136,40)"/><text x="667.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="664" y="836" width="4" height="15" fill="rgb(249,227,4)"/><text x="667.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="664" y="852" width="4" height="15" fill="rgb(240,186,35)"/><text x="667.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="664" y="868" width="4" height="15" fill="rgb(212,191,7)"/><text x="667.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="664" y="884" width="4" height="15" fill="rgb(248,227,14)"/><text x="667.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="664" y="900" width="4" height="15" fill="rgb(244,198,20)"/><text x="667.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py:191) (1 samples, 0.30%)</title><rect x="664" y="916" width="4" height="15" fill="rgb(224,110,11)"/><text x="667.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py:195) (1 samples, 0.30%)</title><rect x="664" y="932" width="4" height="15" fill="rgb(241,28,46)"/><text x="667.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.30%)</title><rect x="664" y="948" width="4" height="15" fill="rgb(213,128,29)"/><text x="667.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.30%)</title><rect x="664" y="964" width="4" height="15" fill="rgb(234,120,22)"/><text x="667.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.30%)</title><rect x="664" y="980" width="4" height="15" fill="rgb(206,94,21)"/><text x="667.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.30%)</title><rect x="664" y="996" width="4" height="15" fill="rgb(226,40,5)"/><text x="667.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.30%)</title><rect x="664" y="1012" width="4" height="15" fill="rgb(225,199,14)"/><text x="667.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.30%)</title><rect x="664" y="1028" width="4" height="15" fill="rgb(231,117,38)"/><text x="667.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.30%)</title><rect x="664" y="1044" width="4" height="15" fill="rgb(228,59,14)"/><text x="667.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.30%)</title><rect x="664" y="1060" width="4" height="15" fill="rgb(242,65,51)"/><text x="667.00" y="1070.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.30%)</title><rect x="664" y="1076" width="4" height="15" fill="rgb(213,44,54)"/><text x="667.00" y="1086.50"></text></g><g><title>getwidth (sre_parse.py:189) (1 samples, 0.30%)</title><rect x="664" y="1092" width="4" height="15" fill="rgb(226,109,16)"/><text x="667.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:4) (1 samples, 0.30%)</title><rect x="668" y="148" width="3" height="15" fill="rgb(229,144,1)"/><text x="671.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="164" width="3" height="15" fill="rgb(231,21,38)"/><text x="671.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="668" y="180" width="3" height="15" fill="rgb(206,19,20)"/><text x="671.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="196" width="3" height="15" fill="rgb(207,35,49)"/><text x="671.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="212" width="3" height="15" fill="rgb(235,136,12)"/><text x="671.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="228" width="3" height="15" fill="rgb(213,139,7)"/><text x="671.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="244" width="3" height="15" fill="rgb(239,182,21)"/><text x="671.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="260" width="3" height="15" fill="rgb(232,106,22)"/><text x="671.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="276" width="3" height="15" fill="rgb(217,71,36)"/><text x="671.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.30%)</title><rect x="668" y="292" width="3" height="15" fill="rgb(234,115,35)"/><text x="671.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="308" width="3" height="15" fill="rgb(233,2,14)"/><text x="671.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="324" width="3" height="15" fill="rgb(233,227,7)"/><text x="671.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="340" width="3" height="15" fill="rgb(238,165,18)"/><text x="671.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="356" width="3" height="15" fill="rgb(240,20,47)"/><text x="671.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="372" width="3" height="15" fill="rgb(206,93,40)"/><text x="671.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.30%)</title><rect x="668" y="388" width="3" height="15" fill="rgb(241,40,41)"/><text x="671.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="404" width="3" height="15" fill="rgb(213,202,42)"/><text x="671.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="420" width="3" height="15" fill="rgb(222,184,24)"/><text x="671.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="436" width="3" height="15" fill="rgb(233,36,23)"/><text x="671.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="452" width="3" height="15" fill="rgb(247,200,32)"/><text x="671.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="468" width="3" height="15" fill="rgb(254,26,37)"/><text x="671.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.30%)</title><rect x="668" y="484" width="3" height="15" fill="rgb(205,103,25)"/><text x="671.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="500" width="3" height="15" fill="rgb(234,62,45)"/><text x="671.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="516" width="3" height="15" fill="rgb(237,58,47)"/><text x="671.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="532" width="3" height="15" fill="rgb(239,185,9)"/><text x="671.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="548" width="3" height="15" fill="rgb(232,23,14)"/><text x="671.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="564" width="3" height="15" fill="rgb(232,181,33)"/><text x="671.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.30%)</title><rect x="668" y="580" width="3" height="15" fill="rgb(229,76,0)"/><text x="671.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="596" width="3" height="15" fill="rgb(229,20,14)"/><text x="671.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="612" width="3" height="15" fill="rgb(205,196,6)"/><text x="671.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="628" width="3" height="15" fill="rgb(238,174,36)"/><text x="671.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="644" width="3" height="15" fill="rgb(254,186,54)"/><text x="671.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="660" width="3" height="15" fill="rgb(226,97,43)"/><text x="671.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.30%)</title><rect x="668" y="676" width="3" height="15" fill="rgb(245,156,29)"/><text x="671.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="692" width="3" height="15" fill="rgb(235,56,54)"/><text x="671.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="708" width="3" height="15" fill="rgb(239,173,31)"/><text x="671.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="724" width="3" height="15" fill="rgb(223,10,41)"/><text x="671.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="740" width="3" height="15" fill="rgb(206,28,53)"/><text x="671.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="756" width="3" height="15" fill="rgb(207,157,4)"/><text x="671.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.30%)</title><rect x="668" y="772" width="3" height="15" fill="rgb(236,134,43)"/><text x="671.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="668" y="788" width="3" height="15" fill="rgb(210,184,30)"/><text x="671.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="804" width="3" height="15" fill="rgb(218,197,28)"/><text x="671.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="820" width="3" height="15" fill="rgb(211,23,52)"/><text x="671.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="836" width="3" height="15" fill="rgb(211,48,50)"/><text x="671.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="852" width="3" height="15" fill="rgb(251,188,38)"/><text x="671.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="868" width="3" height="15" fill="rgb(205,187,9)"/><text x="671.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="884" width="3" height="15" fill="rgb(223,63,54)"/><text x="671.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.30%)</title><rect x="668" y="900" width="3" height="15" fill="rgb(236,50,6)"/><text x="671.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="668" y="916" width="3" height="15" fill="rgb(206,33,43)"/><text x="671.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="932" width="3" height="15" fill="rgb(220,170,47)"/><text x="671.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="668" y="948" width="3" height="15" fill="rgb(239,181,35)"/><text x="671.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="668" y="964" width="3" height="15" fill="rgb(236,144,40)"/><text x="671.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="668" y="980" width="3" height="15" fill="rgb(216,188,50)"/><text x="671.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="668" y="996" width="3" height="15" fill="rgb(221,16,11)"/><text x="671.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="668" y="1012" width="3" height="15" fill="rgb(234,148,8)"/><text x="671.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5082) (1 samples, 0.30%)</title><rect x="668" y="1028" width="3" height="15" fill="rgb(250,66,11)"/><text x="671.00" y="1038.50"></text></g><g><title>ncx2_gen (scipy/stats/_continuous_distns.py:5123) (1 samples, 0.30%)</title><rect x="668" y="1044" width="3" height="15" fill="rgb(226,126,45)"/><text x="671.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.30%)</title><rect x="671" y="340" width="4" height="15" fill="rgb(224,76,39)"/><text x="674.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="671" y="356" width="4" height="15" fill="rgb(254,63,44)"/><text x="674.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="671" y="372" width="4" height="15" fill="rgb(216,44,7)"/><text x="674.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="671" y="388" width="4" height="15" fill="rgb(241,101,16)"/><text x="674.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="671" y="404" width="4" height="15" fill="rgb(234,11,20)"/><text x="674.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="671" y="420" width="4" height="15" fill="rgb(227,194,7)"/><text x="674.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.30%)</title><rect x="671" y="436" width="4" height="15" fill="rgb(218,167,8)"/><text x="674.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="671" y="452" width="4" height="15" fill="rgb(220,152,6)"/><text x="674.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="671" y="468" width="4" height="15" fill="rgb(224,111,4)"/><text x="674.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="671" y="484" width="4" height="15" fill="rgb(233,138,33)"/><text x="674.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="671" y="500" width="4" height="15" fill="rgb(247,201,17)"/><text x="674.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="671" y="516" width="4" height="15" fill="rgb(213,208,22)"/><text x="674.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.30%)</title><rect x="671" y="532" width="4" height="15" fill="rgb(208,161,47)"/><text x="674.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="671" y="548" width="4" height="15" fill="rgb(236,168,30)"/><text x="674.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:950) (1 samples, 0.30%)</title><rect x="671" y="564" width="4" height="15" fill="rgb(247,210,32)"/><text x="674.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.30%)</title><rect x="675" y="628" width="4" height="15" fill="rgb(249,10,42)"/><text x="678.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="675" y="644" width="4" height="15" fill="rgb(237,227,34)"/><text x="678.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="675" y="660" width="4" height="15" fill="rgb(205,50,2)"/><text x="678.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="675" y="676" width="4" height="15" fill="rgb(238,222,23)"/><text x="678.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="675" y="692" width="4" height="15" fill="rgb(221,187,8)"/><text x="678.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="675" y="708" width="4" height="15" fill="rgb(209,33,6)"/><text x="678.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.30%)</title><rect x="675" y="724" width="4" height="15" fill="rgb(230,66,40)"/><text x="678.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="675" y="740" width="4" height="15" fill="rgb(253,149,52)"/><text x="678.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="675" y="756" width="4" height="15" fill="rgb(207,190,28)"/><text x="678.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="675" y="772" width="4" height="15" fill="rgb(221,115,13)"/><text x="678.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="675" y="788" width="4" height="15" fill="rgb(210,92,41)"/><text x="678.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="675" y="804" width="4" height="15" fill="rgb(217,133,29)"/><text x="678.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.30%)</title><rect x="675" y="820" width="4" height="15" fill="rgb(208,219,35)"/><text x="678.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="675" y="836" width="4" height="15" fill="rgb(236,134,22)"/><text x="678.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="675" y="852" width="4" height="15" fill="rgb(223,174,2)"/><text x="678.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="675" y="868" width="4" height="15" fill="rgb(226,171,22)"/><text x="678.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="675" y="884" width="4" height="15" fill="rgb(230,195,50)"/><text x="678.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="675" y="900" width="4" height="15" fill="rgb(222,15,10)"/><text x="678.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.30%)</title><rect x="675" y="916" width="4" height="15" fill="rgb(247,71,43)"/><text x="678.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="675" y="932" width="4" height="15" fill="rgb(234,185,13)"/><text x="678.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="675" y="948" width="4" height="15" fill="rgb(213,29,21)"/><text x="678.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="675" y="964" width="4" height="15" fill="rgb(250,106,32)"/><text x="678.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="675" y="980" width="4" height="15" fill="rgb(231,105,43)"/><text x="678.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="675" y="996" width="4" height="15" fill="rgb(252,146,8)"/><text x="678.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py:708) (1 samples, 0.30%)</title><rect x="675" y="1012" width="4" height="15" fill="rgb(234,93,51)"/><text x="678.00" y="1022.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.30%)</title><rect x="675" y="1028" width="4" height="15" fill="rgb(227,67,32)"/><text x="678.00" y="1038.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.30%)</title><rect x="675" y="1044" width="4" height="15" fill="rgb(229,161,53)"/><text x="678.00" y="1054.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.30%)</title><rect x="675" y="1060" width="4" height="15" fill="rgb(245,126,10)"/><text x="678.00" y="1070.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.30%)</title><rect x="675" y="1076" width="4" height="15" fill="rgb(214,12,36)"/><text x="678.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="675" y="1092" width="4" height="15" fill="rgb(249,152,36)"/><text x="678.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.61%)</title><rect x="675" y="436" width="7" height="15" fill="rgb(250,11,25)"/><text x="678.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="675" y="452" width="7" height="15" fill="rgb(252,63,44)"/><text x="678.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="675" y="468" width="7" height="15" fill="rgb(217,44,17)"/><text x="678.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="675" y="484" width="7" height="15" fill="rgb(226,217,0)"/><text x="678.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="675" y="500" width="7" height="15" fill="rgb(216,179,27)"/><text x="678.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="675" y="516" width="7" height="15" fill="rgb(242,143,17)"/><text x="678.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.61%)</title><rect x="675" y="532" width="7" height="15" fill="rgb(235,137,21)"/><text x="678.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="675" y="548" width="7" height="15" fill="rgb(225,178,10)"/><text x="678.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="675" y="564" width="7" height="15" fill="rgb(232,55,25)"/><text x="678.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="675" y="580" width="7" height="15" fill="rgb(248,80,36)"/><text x="678.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="675" y="596" width="7" height="15" fill="rgb(243,58,18)"/><text x="678.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="675" y="612" width="7" height="15" fill="rgb(205,109,6)"/><text x="678.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.30%)</title><rect x="679" y="628" width="3" height="15" fill="rgb(222,199,53)"/><text x="682.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="644" width="3" height="15" fill="rgb(206,84,52)"/><text x="682.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="660" width="3" height="15" fill="rgb(211,62,47)"/><text x="682.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="676" width="3" height="15" fill="rgb(227,173,48)"/><text x="682.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="692" width="3" height="15" fill="rgb(228,165,42)"/><text x="682.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="708" width="3" height="15" fill="rgb(226,141,43)"/><text x="682.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.30%)</title><rect x="679" y="724" width="3" height="15" fill="rgb(228,71,26)"/><text x="682.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="740" width="3" height="15" fill="rgb(229,229,47)"/><text x="682.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="756" width="3" height="15" fill="rgb(212,121,51)"/><text x="682.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="772" width="3" height="15" fill="rgb(235,127,4)"/><text x="682.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="788" width="3" height="15" fill="rgb(224,140,37)"/><text x="682.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="804" width="3" height="15" fill="rgb(232,126,46)"/><text x="682.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.30%)</title><rect x="679" y="820" width="3" height="15" fill="rgb(235,12,19)"/><text x="682.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="836" width="3" height="15" fill="rgb(228,173,27)"/><text x="682.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="852" width="3" height="15" fill="rgb(222,74,19)"/><text x="682.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="868" width="3" height="15" fill="rgb(222,141,4)"/><text x="682.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="884" width="3" height="15" fill="rgb(211,67,49)"/><text x="682.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="900" width="3" height="15" fill="rgb(246,175,9)"/><text x="682.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.30%)</title><rect x="679" y="916" width="3" height="15" fill="rgb(243,159,12)"/><text x="682.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="932" width="3" height="15" fill="rgb(234,193,2)"/><text x="682.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="948" width="3" height="15" fill="rgb(233,96,40)"/><text x="682.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="964" width="3" height="15" fill="rgb(247,46,23)"/><text x="682.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="980" width="3" height="15" fill="rgb(225,143,7)"/><text x="682.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="996" width="3" height="15" fill="rgb(248,28,20)"/><text x="682.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.30%)</title><rect x="679" y="1012" width="3" height="15" fill="rgb(253,85,5)"/><text x="682.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1028" width="3" height="15" fill="rgb(226,128,35)"/><text x="682.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1044" width="3" height="15" fill="rgb(235,192,34)"/><text x="682.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1060" width="3" height="15" fill="rgb(238,107,7)"/><text x="682.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1076" width="3" height="15" fill="rgb(242,220,33)"/><text x="682.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1092" width="3" height="15" fill="rgb(222,64,40)"/><text x="682.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.30%)</title><rect x="679" y="1108" width="3" height="15" fill="rgb(250,170,12)"/><text x="682.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1124" width="3" height="15" fill="rgb(253,211,8)"/><text x="682.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1140" width="3" height="15" fill="rgb(212,114,28)"/><text x="682.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1156" width="3" height="15" fill="rgb(222,59,46)"/><text x="682.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1172" width="3" height="15" fill="rgb(209,124,8)"/><text x="682.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1188" width="3" height="15" fill="rgb(239,35,17)"/><text x="682.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.30%)</title><rect x="679" y="1204" width="3" height="15" fill="rgb(208,220,38)"/><text x="682.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1220" width="3" height="15" fill="rgb(227,76,17)"/><text x="682.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1236" width="3" height="15" fill="rgb(247,178,40)"/><text x="682.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1252" width="3" height="15" fill="rgb(220,169,20)"/><text x="682.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1268" width="3" height="15" fill="rgb(222,61,4)"/><text x="682.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1284" width="3" height="15" fill="rgb(234,104,15)"/><text x="682.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.30%)</title><rect x="679" y="1300" width="3" height="15" fill="rgb(254,101,43)"/><text x="682.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1316" width="3" height="15" fill="rgb(210,126,0)"/><text x="682.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1332" width="3" height="15" fill="rgb(240,130,39)"/><text x="682.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1348" width="3" height="15" fill="rgb(224,153,53)"/><text x="682.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1364" width="3" height="15" fill="rgb(223,112,9)"/><text x="682.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1380" width="3" height="15" fill="rgb(240,140,6)"/><text x="682.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.30%)</title><rect x="679" y="1396" width="3" height="15" fill="rgb(241,176,6)"/><text x="682.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1412" width="3" height="15" fill="rgb(244,67,7)"/><text x="682.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1428" width="3" height="15" fill="rgb(230,147,46)"/><text x="682.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1444" width="3" height="15" fill="rgb(210,148,22)"/><text x="682.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1460" width="3" height="15" fill="rgb(245,111,14)"/><text x="682.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1476" width="3" height="15" fill="rgb(221,101,51)"/><text x="682.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.30%)</title><rect x="679" y="1492" width="3" height="15" fill="rgb(212,140,41)"/><text x="682.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1508" width="3" height="15" fill="rgb(217,174,30)"/><text x="682.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1524" width="3" height="15" fill="rgb(254,104,23)"/><text x="682.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1540" width="3" height="15" fill="rgb(208,202,18)"/><text x="682.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1556" width="3" height="15" fill="rgb(209,162,36)"/><text x="682.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1572" width="3" height="15" fill="rgb(232,165,35)"/><text x="682.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.30%)</title><rect x="679" y="1588" width="3" height="15" fill="rgb(246,46,33)"/><text x="682.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1604" width="3" height="15" fill="rgb(235,48,7)"/><text x="682.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1620" width="3" height="15" fill="rgb(240,63,36)"/><text x="682.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1636" width="3" height="15" fill="rgb(233,224,15)"/><text x="682.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1652" width="3" height="15" fill="rgb(231,6,26)"/><text x="682.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1668" width="3" height="15" fill="rgb(223,163,17)"/><text x="682.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.30%)</title><rect x="679" y="1684" width="3" height="15" fill="rgb(214,27,29)"/><text x="682.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1700" width="3" height="15" fill="rgb(213,125,44)"/><text x="682.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1716" width="3" height="15" fill="rgb(228,80,18)"/><text x="682.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1732" width="3" height="15" fill="rgb(219,191,43)"/><text x="682.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1748" width="3" height="15" fill="rgb(244,10,36)"/><text x="682.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1764" width="3" height="15" fill="rgb(245,124,12)"/><text x="682.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.30%)</title><rect x="679" y="1780" width="3" height="15" fill="rgb(205,7,46)"/><text x="682.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1796" width="3" height="15" fill="rgb(225,76,41)"/><text x="682.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1812" width="3" height="15" fill="rgb(237,127,50)"/><text x="682.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1828" width="3" height="15" fill="rgb(214,143,48)"/><text x="682.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1844" width="3" height="15" fill="rgb(232,92,10)"/><text x="682.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1860" width="3" height="15" fill="rgb(254,27,30)"/><text x="682.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.30%)</title><rect x="679" y="1876" width="3" height="15" fill="rgb(225,73,3)"/><text x="682.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="1892" width="3" height="15" fill="rgb(243,27,31)"/><text x="682.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="1908" width="3" height="15" fill="rgb(233,18,39)"/><text x="682.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="1924" width="3" height="15" fill="rgb(243,61,36)"/><text x="682.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="1940" width="3" height="15" fill="rgb(233,28,40)"/><text x="682.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="1956" width="3" height="15" fill="rgb(241,18,45)"/><text x="682.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:40) (1 samples, 0.30%)</title><rect x="679" y="1972" width="3" height="15" fill="rgb(243,22,24)"/><text x="682.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="679" y="1988" width="3" height="15" fill="rgb(220,87,4)"/><text x="682.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="2004" width="3" height="15" fill="rgb(233,136,0)"/><text x="682.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="2020" width="3" height="15" fill="rgb(225,191,22)"/><text x="682.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="2036" width="3" height="15" fill="rgb(235,22,3)"/><text x="682.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="2052" width="3" height="15" fill="rgb(216,204,12)"/><text x="682.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="679" y="2068" width="3" height="15" fill="rgb(245,39,3)"/><text x="682.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="679" y="2084" width="3" height="15" fill="rgb(218,151,17)"/><text x="682.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/afm.py:45) (1 samples, 0.30%)</title><rect x="679" y="2100" width="3" height="15" fill="rgb(223,95,11)"/><text x="682.00" y="2110.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="679" y="2116" width="3" height="15" fill="rgb(251,93,22)"/><text x="682.00" y="2126.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="679" y="2132" width="3" height="15" fill="rgb(240,36,49)"/><text x="682.00" y="2142.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="679" y="2148" width="3" height="15" fill="rgb(207,165,3)"/><text x="682.00" y="2158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="679" y="2164" width="3" height="15" fill="rgb(220,191,4)"/><text x="682.00" y="2174.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="679" y="2180" width="3" height="15" fill="rgb(247,144,31)"/><text x="682.00" y="2190.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="679" y="2196" width="3" height="15" fill="rgb(208,87,53)"/><text x="682.00" y="2206.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.30%)</title><rect x="682" y="1108" width="4" height="15" fill="rgb(208,113,1)"/><text x="685.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="682" y="1124" width="4" height="15" fill="rgb(215,217,31)"/><text x="685.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="682" y="1140" width="4" height="15" fill="rgb(209,115,19)"/><text x="685.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="682" y="1156" width="4" height="15" fill="rgb(213,215,26)"/><text x="685.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="682" y="1172" width="4" height="15" fill="rgb(235,68,24)"/><text x="685.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="682" y="1188" width="4" height="15" fill="rgb(235,204,46)"/><text x="685.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.30%)</title><rect x="682" y="1204" width="4" height="15" fill="rgb(207,91,24)"/><text x="685.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="682" y="1220" width="4" height="15" fill="rgb(235,24,30)"/><text x="685.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="682" y="1236" width="4" height="15" fill="rgb(232,225,39)"/><text x="685.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="682" y="1252" width="4" height="15" fill="rgb(226,195,31)"/><text x="685.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="682" y="1268" width="4" height="15" fill="rgb(215,50,26)"/><text x="685.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="682" y="1284" width="4" height="15" fill="rgb(207,211,31)"/><text x="685.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.30%)</title><rect x="682" y="1300" width="4" height="15" fill="rgb(246,182,19)"/><text x="685.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.30%)</title><rect x="682" y="1316" width="4" height="15" fill="rgb(253,186,42)"/><text x="685.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.30%)</title><rect x="682" y="1332" width="4" height="15" fill="rgb(217,114,12)"/><text x="685.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.30%)</title><rect x="682" y="1348" width="4" height="15" fill="rgb(217,154,17)"/><text x="685.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.30%)</title><rect x="682" y="1364" width="4" height="15" fill="rgb(227,9,47)"/><text x="685.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:629) (1 samples, 0.30%)</title><rect x="682" y="1380" width="4" height="15" fill="rgb(219,207,32)"/><text x="685.00" y="1390.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.30%)</title><rect x="686" y="1492" width="3" height="15" fill="rgb(234,8,11)"/><text x="689.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.30%)</title><rect x="686" y="1508" width="3" height="15" fill="rgb(245,143,38)"/><text x="689.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.30%)</title><rect x="686" y="1524" width="3" height="15" fill="rgb(211,134,39)"/><text x="689.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.30%)</title><rect x="686" y="1540" width="3" height="15" fill="rgb(241,114,14)"/><text x="689.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="686" y="1556" width="3" height="15" fill="rgb(207,217,53)"/><text x="689.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.30%)</title><rect x="686" y="1572" width="3" height="15" fill="rgb(221,208,6)"/><text x="689.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.30%)</title><rect x="686" y="1588" width="3" height="15" fill="rgb(246,35,51)"/><text x="689.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:199) (1 samples, 0.30%)</title><rect x="686" y="1604" width="3" height="15" fill="rgb(248,137,44)"/><text x="689.00" y="1614.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.30%)</title><rect x="686" y="1620" width="3" height="15" fill="rgb(223,175,51)"/><text x="689.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:4) (11 samples, 3.35%)</title><rect x="653" y="52" width="40" height="15" fill="rgb(217,206,34)"/><text x="656.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.35%)</title><rect x="653" y="68" width="40" height="15" fill="rgb(215,32,36)"/><text x="656.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.35%)</title><rect x="653" y="84" width="40" height="15" fill="rgb(230,15,52)"/><text x="656.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.35%)</title><rect x="653" y="100" width="40" height="15" fill="rgb(226,110,12)"/><text x="656.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.35%)</title><rect x="653" y="116" width="40" height="15" fill="rgb(215,44,20)"/><text x="656.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.35%)</title><rect x="653" y="132" width="40" height="15" fill="rgb(224,82,46)"/><text x="656.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py:7) (6 samples, 1.83%)</title><rect x="671" y="148" width="22" height="15" fill="rgb(210,169,17)"/><text x="674.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.83%)</title><rect x="671" y="164" width="22" height="15" fill="rgb(208,39,25)"/><text x="674.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.83%)</title><rect x="671" y="180" width="22" height="15" fill="rgb(238,229,14)"/><text x="674.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.83%)</title><rect x="671" y="196" width="22" height="15" fill="rgb(222,170,14)"/><text x="674.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.83%)</title><rect x="671" y="212" width="22" height="15" fill="rgb(206,173,3)"/><text x="674.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.83%)</title><rect x="671" y="228" width="22" height="15" fill="rgb(217,132,40)"/><text x="674.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.83%)</title><rect x="671" y="244" width="22" height="15" fill="rgb(214,113,47)"/><text x="674.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.83%)</title><rect x="671" y="260" width="22" height="15" fill="rgb(249,47,22)"/><text x="674.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.83%)</title><rect x="671" y="276" width="22" height="15" fill="rgb(242,58,41)"/><text x="674.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.83%)</title><rect x="671" y="292" width="22" height="15" fill="rgb(215,200,38)"/><text x="674.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.83%)</title><rect x="671" y="308" width="22" height="15" fill="rgb(231,94,25)"/><text x="674.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.83%)</title><rect x="671" y="324" width="22" height="15" fill="rgb(241,222,42)"/><text x="674.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.52%)</title><rect x="675" y="340" width="18" height="15" fill="rgb(238,35,14)"/><text x="678.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.52%)</title><rect x="675" y="356" width="18" height="15" fill="rgb(205,47,20)"/><text x="678.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.52%)</title><rect x="675" y="372" width="18" height="15" fill="rgb(244,211,50)"/><text x="678.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.52%)</title><rect x="675" y="388" width="18" height="15" fill="rgb(245,214,13)"/><text x="678.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.52%)</title><rect x="675" y="404" width="18" height="15" fill="rgb(215,223,48)"/><text x="678.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.52%)</title><rect x="675" y="420" width="18" height="15" fill="rgb(243,185,5)"/><text x="678.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.91%)</title><rect x="682" y="436" width="11" height="15" fill="rgb(242,25,1)"/><text x="685.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="452" width="11" height="15" fill="rgb(214,134,35)"/><text x="685.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="682" y="468" width="11" height="15" fill="rgb(249,130,8)"/><text x="685.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="484" width="11" height="15" fill="rgb(225,145,10)"/><text x="685.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="500" width="11" height="15" fill="rgb(230,188,42)"/><text x="685.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="682" y="516" width="11" height="15" fill="rgb(250,6,8)"/><text x="685.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="682" y="532" width="11" height="15" fill="rgb(213,79,6)"/><text x="685.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="682" y="548" width="11" height="15" fill="rgb(206,69,36)"/><text x="685.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="564" width="11" height="15" fill="rgb(244,132,13)"/><text x="685.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.91%)</title><rect x="682" y="580" width="11" height="15" fill="rgb(232,75,44)"/><text x="685.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="596" width="11" height="15" fill="rgb(206,89,52)"/><text x="685.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="682" y="612" width="11" height="15" fill="rgb(218,111,11)"/><text x="685.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="682" y="628" width="11" height="15" fill="rgb(210,144,46)"/><text x="685.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="682" y="644" width="11" height="15" fill="rgb(249,141,13)"/><text x="685.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="660" width="11" height="15" fill="rgb(218,73,15)"/><text x="685.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.91%)</title><rect x="682" y="676" width="11" height="15" fill="rgb(238,13,24)"/><text x="685.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="692" width="11" height="15" fill="rgb(251,58,2)"/><text x="685.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="682" y="708" width="11" height="15" fill="rgb(212,59,33)"/><text x="685.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="682" y="724" width="11" height="15" fill="rgb(222,118,40)"/><text x="685.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="682" y="740" width="11" height="15" fill="rgb(218,79,8)"/><text x="685.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="756" width="11" height="15" fill="rgb(205,122,4)"/><text x="685.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.91%)</title><rect x="682" y="772" width="11" height="15" fill="rgb(209,15,16)"/><text x="685.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="788" width="11" height="15" fill="rgb(229,189,1)"/><text x="685.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="682" y="804" width="11" height="15" fill="rgb(245,183,11)"/><text x="685.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="682" y="820" width="11" height="15" fill="rgb(210,81,13)"/><text x="685.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="682" y="836" width="11" height="15" fill="rgb(223,150,34)"/><text x="685.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="852" width="11" height="15" fill="rgb(229,206,26)"/><text x="685.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.91%)</title><rect x="682" y="868" width="11" height="15" fill="rgb(214,180,43)"/><text x="685.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="884" width="11" height="15" fill="rgb(242,229,21)"/><text x="685.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="682" y="900" width="11" height="15" fill="rgb(222,153,46)"/><text x="685.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="916" width="11" height="15" fill="rgb(233,204,6)"/><text x="685.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="932" width="11" height="15" fill="rgb(250,114,49)"/><text x="685.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="682" y="948" width="11" height="15" fill="rgb(219,151,35)"/><text x="685.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="682" y="964" width="11" height="15" fill="rgb(239,90,3)"/><text x="685.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="682" y="980" width="11" height="15" fill="rgb(223,215,8)"/><text x="685.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="996" width="11" height="15" fill="rgb(208,30,53)"/><text x="685.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.91%)</title><rect x="682" y="1012" width="11" height="15" fill="rgb(237,153,14)"/><text x="685.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="682" y="1028" width="11" height="15" fill="rgb(242,79,24)"/><text x="685.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="682" y="1044" width="11" height="15" fill="rgb(243,101,20)"/><text x="685.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="682" y="1060" width="11" height="15" fill="rgb(224,219,13)"/><text x="685.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="682" y="1076" width="11" height="15" fill="rgb(230,196,11)"/><text x="685.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="682" y="1092" width="11" height="15" fill="rgb(217,100,12)"/><text x="685.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.61%)</title><rect x="686" y="1108" width="7" height="15" fill="rgb(212,203,31)"/><text x="689.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.61%)</title><rect x="686" y="1124" width="7" height="15" fill="rgb(248,221,47)"/><text x="689.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="686" y="1140" width="7" height="15" fill="rgb(234,203,8)"/><text x="689.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="686" y="1156" width="7" height="15" fill="rgb(210,146,44)"/><text x="689.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="686" y="1172" width="7" height="15" fill="rgb(248,144,28)"/><text x="689.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="686" y="1188" width="7" height="15" fill="rgb(213,99,42)"/><text x="689.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="686" y="1204" width="7" height="15" fill="rgb(216,228,1)"/><text x="689.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="686" y="1220" width="7" height="15" fill="rgb(210,206,51)"/><text x="689.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.61%)</title><rect x="686" y="1236" width="7" height="15" fill="rgb(252,177,54)"/><text x="689.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.61%)</title><rect x="686" y="1252" width="7" height="15" fill="rgb(235,171,37)"/><text x="689.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="686" y="1268" width="7" height="15" fill="rgb(239,202,19)"/><text x="689.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="686" y="1284" width="7" height="15" fill="rgb(245,57,6)"/><text x="689.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="686" y="1300" width="7" height="15" fill="rgb(208,47,40)"/><text x="689.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="686" y="1316" width="7" height="15" fill="rgb(238,69,27)"/><text x="689.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="686" y="1332" width="7" height="15" fill="rgb(242,157,3)"/><text x="689.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="686" y="1348" width="7" height="15" fill="rgb(224,44,22)"/><text x="689.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.61%)</title><rect x="686" y="1364" width="7" height="15" fill="rgb(217,181,44)"/><text x="689.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.61%)</title><rect x="686" y="1380" width="7" height="15" fill="rgb(209,215,28)"/><text x="689.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.61%)</title><rect x="686" y="1396" width="7" height="15" fill="rgb(225,223,12)"/><text x="689.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.61%)</title><rect x="686" y="1412" width="7" height="15" fill="rgb(243,95,42)"/><text x="689.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.61%)</title><rect x="686" y="1428" width="7" height="15" fill="rgb(215,121,12)"/><text x="689.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.61%)</title><rect x="686" y="1444" width="7" height="15" fill="rgb(214,109,42)"/><text x="689.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.61%)</title><rect x="686" y="1460" width="7" height="15" fill="rgb(230,28,44)"/><text x="689.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.61%)</title><rect x="686" y="1476" width="7" height="15" fill="rgb(219,205,41)"/><text x="689.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:120) (1 samples, 0.30%)</title><rect x="689" y="1492" width="4" height="15" fill="rgb(240,160,42)"/><text x="692.00" y="1502.50"></text></g><g><title>0x7f5b419030e9 (?) (1 samples, 0.30%)</title><rect x="689" y="1508" width="4" height="15" fill="rgb(222,188,27)"/><text x="692.00" y="1518.50"></text></g><g><title>0x7f5b4190722e (?) (1 samples, 0.30%)</title><rect x="689" y="1524" width="4" height="15" fill="rgb(248,125,49)"/><text x="692.00" y="1534.50"></text></g><g><title>0x7f5b4190717b (?) (1 samples, 0.30%)</title><rect x="689" y="1540" width="4" height="15" fill="rgb(244,59,48)"/><text x="692.00" y="1550.50"></text></g><g><title>0x7f5b41906376 (?) (1 samples, 0.30%)</title><rect x="689" y="1556" width="4" height="15" fill="rgb(230,112,40)"/><text x="692.00" y="1566.50"></text></g><g><title>0x7f5b4190b99c (?) (1 samples, 0.30%)</title><rect x="689" y="1572" width="4" height="15" fill="rgb(228,2,21)"/><text x="692.00" y="1582.50"></text></g><g><title>0x7f5b418fc654 (?) (1 samples, 0.30%)</title><rect x="689" y="1588" width="4" height="15" fill="rgb(225,103,42)"/><text x="692.00" y="1598.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.30%)</title><rect x="697" y="116" width="3" height="15" fill="rgb(242,198,40)"/><text x="700.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.30%)</title><rect x="704" y="148" width="3" height="15" fill="rgb(251,171,50)"/><text x="707.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.30%)</title><rect x="715" y="164" width="3" height="15" fill="rgb(224,59,29)"/><text x="718.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (3 samples, 0.91%)</title><rect x="718" y="164" width="11" height="15" fill="rgb(209,159,21)"/><text x="721.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.30%)</title><rect x="729" y="164" width="4" height="15" fill="rgb(247,196,38)"/><text x="732.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:448) (1 samples, 0.30%)</title><rect x="733" y="164" width="3" height="15" fill="rgb(224,95,45)"/><text x="736.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.91%)</title><rect x="740" y="180" width="11" height="15" fill="rgb(211,122,43)"/><text x="743.00" y="190.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (2 samples, 0.61%)</title><rect x="779" y="244" width="8" height="15" fill="rgb(219,150,5)"/><text x="782.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.30%)</title><rect x="790" y="260" width="4" height="15" fill="rgb(206,112,12)"/><text x="793.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2213) (1 samples, 0.30%)</title><rect x="797" y="292" width="4" height="15" fill="rgb(254,114,26)"/><text x="800.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (11 samples, 3.35%)</title><rect x="765" y="228" width="40" height="15" fill="rgb(225,54,27)"/><text x="768.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (5 samples, 1.52%)</title><rect x="787" y="244" width="18" height="15" fill="rgb(237,209,34)"/><text x="790.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (3 samples, 0.91%)</title><rect x="794" y="260" width="11" height="15" fill="rgb(243,30,10)"/><text x="797.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.61%)</title><rect x="797" y="276" width="8" height="15" fill="rgb(229,218,29)"/><text x="800.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (1 samples, 0.30%)</title><rect x="801" y="292" width="4" height="15" fill="rgb(239,222,47)"/><text x="804.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (1 samples, 0.30%)</title><rect x="801" y="308" width="4" height="15" fill="rgb(209,2,4)"/><text x="804.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.30%)</title><rect x="801" y="324" width="4" height="15" fill="rgb(231,229,34)"/><text x="804.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.30%)</title><rect x="801" y="340" width="4" height="15" fill="rgb(205,31,4)"/><text x="804.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="801" y="356" width="4" height="15" fill="rgb(242,145,0)"/><text x="804.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="801" y="372" width="4" height="15" fill="rgb(223,197,22)"/><text x="804.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="808" y="260" width="4" height="15" fill="rgb(235,188,53)"/><text x="811.00" y="270.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:847) (1 samples, 0.30%)</title><rect x="808" y="276" width="4" height="15" fill="rgb(253,214,46)"/><text x="811.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="812" y="260" width="3" height="15" fill="rgb(234,186,29)"/><text x="815.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="812" y="276" width="3" height="15" fill="rgb(227,211,31)"/><text x="815.00" y="286.50"></text></g><g><title>0x7f5b51868120 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="812" y="292" width="3" height="15" fill="rgb(242,211,4)"/><text x="815.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1614) (1 samples, 0.30%)</title><rect x="815" y="276" width="4" height="15" fill="rgb(244,163,25)"/><text x="818.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="819" y="308" width="4" height="15" fill="rgb(228,46,26)"/><text x="822.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="823" y="308" width="3" height="15" fill="rgb(246,58,45)"/><text x="826.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.30%)</title><rect x="823" y="324" width="3" height="15" fill="rgb(232,9,13)"/><text x="826.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="826" y="308" width="4" height="15" fill="rgb(227,203,32)"/><text x="829.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1642) (1 samples, 0.30%)</title><rect x="826" y="324" width="4" height="15" fill="rgb(247,140,41)"/><text x="829.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.22%)</title><rect x="819" y="292" width="14" height="15" fill="rgb(219,167,15)"/><text x="822.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.30%)</title><rect x="830" y="308" width="3" height="15" fill="rgb(238,174,52)"/><text x="833.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3165) (1 samples, 0.30%)</title><rect x="830" y="324" width="3" height="15" fill="rgb(209,60,18)"/><text x="833.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.30%)</title><rect x="833" y="292" width="4" height="15" fill="rgb(210,133,14)"/><text x="836.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.30%)</title><rect x="833" y="308" width="4" height="15" fill="rgb(230,177,9)"/><text x="836.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="837" y="292" width="4" height="15" fill="rgb(207,91,7)"/><text x="840.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="837" y="308" width="4" height="15" fill="rgb(250,166,29)"/><text x="840.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="837" y="324" width="4" height="15" fill="rgb(241,165,28)"/><text x="840.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:590) (1 samples, 0.30%)</title><rect x="837" y="340" width="4" height="15" fill="rgb(253,66,33)"/><text x="840.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:706) (1 samples, 0.30%)</title><rect x="841" y="308" width="3" height="15" fill="rgb(216,226,0)"/><text x="844.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (12 samples, 3.66%)</title><rect x="805" y="228" width="43" height="15" fill="rgb(247,135,23)"/><text x="808.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 3.35%)</title><rect x="808" y="244" width="40" height="15" fill="rgb(222,106,36)"/><text x="811.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 2.74%)</title><rect x="815" y="260" width="33" height="15" fill="rgb(216,120,18)"/><text x="818.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 2.44%)</title><rect x="819" y="276" width="29" height="15" fill="rgb(208,211,19)"/><text x="822.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.61%)</title><rect x="841" y="292" width="7" height="15" fill="rgb(213,36,41)"/><text x="844.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.30%)</title><rect x="844" y="308" width="4" height="15" fill="rgb(225,83,0)"/><text x="847.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="844" y="324" width="4" height="15" fill="rgb(205,181,1)"/><text x="847.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:44) (1 samples, 0.30%)</title><rect x="848" y="228" width="3" height="15" fill="rgb(245,204,26)"/><text x="851.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (4 samples, 1.22%)</title><rect x="859" y="244" width="14" height="15" fill="rgb(216,200,5)"/><text x="862.00" y="254.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:5) (1 samples, 0.30%)</title><rect x="873" y="244" width="4" height="15" fill="rgb(214,118,13)"/><text x="876.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.30%)</title><rect x="877" y="260" width="3" height="15" fill="rgb(241,65,19)"/><text x="880.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (2 samples, 0.61%)</title><rect x="887" y="292" width="8" height="15" fill="rgb(205,71,17)"/><text x="890.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.30%)</title><rect x="895" y="292" width="3" height="15" fill="rgb(226,106,2)"/><text x="898.00" y="302.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.61%)</title><rect x="902" y="308" width="7" height="15" fill="rgb(226,140,9)"/><text x="905.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.61%)</title><rect x="902" y="324" width="7" height="15" fill="rgb(227,209,32)"/><text x="905.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (42 samples, 12.80%)</title><rect x="761" y="196" width="151" height="15" fill="rgb(239,149,28)"/><text x="764.00" y="206.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (41 samples, 12.50%)</title><rect x="765" y="212" width="147" height="15" fill="rgb(244,77,26)"/><text x="768.00" y="222.50">run (mlprodict/onn..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (17 samples, 5.18%)</title><rect x="851" y="228" width="61" height="15" fill="rgb(213,168,3)"/><text x="854.00" y="238.50">_run (..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (10 samples, 3.05%)</title><rect x="877" y="244" width="35" height="15" fill="rgb(221,30,47)"/><text x="880.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.74%)</title><rect x="880" y="260" width="32" height="15" fill="rgb(247,147,34)"/><text x="883.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (9 samples, 2.74%)</title><rect x="880" y="276" width="32" height="15" fill="rgb(224,183,14)"/><text x="883.00" y="286.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.22%)</title><rect x="898" y="292" width="14" height="15" fill="rgb(219,2,30)"/><text x="901.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.30%)</title><rect x="909" y="308" width="3" height="15" fill="rgb(226,44,5)"/><text x="912.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.30%)</title><rect x="909" y="324" width="3" height="15" fill="rgb(236,185,10)"/><text x="912.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="909" y="340" width="3" height="15" fill="rgb(226,100,2)"/><text x="912.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1047) (1 samples, 0.30%)</title><rect x="909" y="356" width="3" height="15" fill="rgb(251,54,21)"/><text x="912.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (47 samples, 14.33%)</title><rect x="751" y="180" width="169" height="15" fill="rgb(251,48,10)"/><text x="754.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (2 samples, 0.61%)</title><rect x="912" y="196" width="8" height="15" fill="rgb(234,181,31)"/><text x="915.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (2 samples, 0.61%)</title><rect x="912" y="212" width="8" height="15" fill="rgb(222,226,3)"/><text x="915.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.30%)</title><rect x="920" y="180" width="3" height="15" fill="rgb(224,189,38)"/><text x="923.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (53 samples, 16.16%)</title><rect x="736" y="164" width="191" height="15" fill="rgb(221,58,10)"/><text x="739.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.30%)</title><rect x="923" y="180" width="4" height="15" fill="rgb(248,120,14)"/><text x="926.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (69 samples, 21.04%)</title><rect x="700" y="132" width="248" height="15" fill="rgb(211,188,37)"/><text x="703.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (67 samples, 20.43%)</title><rect x="707" y="148" width="241" height="15" fill="rgb(216,148,38)"/><text x="710.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (6 samples, 1.83%)</title><rect x="927" y="164" width="21" height="15" fill="rgb(246,0,26)"/><text x="930.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (4 samples, 1.22%)</title><rect x="934" y="180" width="14" height="15" fill="rgb(245,42,24)"/><text x="937.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:45) (72 samples, 21.95%)</title><rect x="693" y="52" width="259" height="15" fill="rgb(254,61,33)"/><text x="696.00" y="62.50">&lt;module&gt; (bench_LogisticRegression..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:44) (72 samples, 21.95%)</title><rect x="693" y="68" width="259" height="15" fill="rgb(252,219,24)"/><text x="696.00" y="78.50">profile_pyrt (bench_LogisticRegres..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:29) (72 samples, 21.95%)</title><rect x="693" y="84" width="259" height="15" fill="rgb(215,103,50)"/><text x="696.00" y="94.50">setup_profile (bench_LogisticRegre..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:23) (72 samples, 21.95%)</title><rect x="693" y="100" width="259" height="15" fill="rgb(241,39,43)"/><text x="696.00" y="110.50">profile (bench_LogisticRegression_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (70 samples, 21.34%)</title><rect x="700" y="116" width="252" height="15" fill="rgb(222,201,31)"/><text x="703.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="948" y="132" width="4" height="15" fill="rgb(246,208,23)"/><text x="951.00" y="142.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:28) (1 samples, 0.30%)</title><rect x="952" y="84" width="4" height="15" fill="rgb(210,183,13)"/><text x="955.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="952" y="100" width="4" height="15" fill="rgb(224,114,16)"/><text x="955.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:255) (1 samples, 0.30%)</title><rect x="952" y="116" width="4" height="15" fill="rgb(245,24,54)"/><text x="955.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.30%)</title><rect x="952" y="132" width="4" height="15" fill="rgb(220,99,51)"/><text x="955.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.30%)</title><rect x="952" y="148" width="4" height="15" fill="rgb(252,36,49)"/><text x="955.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.30%)</title><rect x="952" y="164" width="4" height="15" fill="rgb(250,164,2)"/><text x="955.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="952" y="180" width="4" height="15" fill="rgb(231,51,28)"/><text x="955.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="952" y="196" width="4" height="15" fill="rgb(238,122,30)"/><text x="955.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="952" y="212" width="4" height="15" fill="rgb(206,73,26)"/><text x="955.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="952" y="228" width="4" height="15" fill="rgb(227,147,25)"/><text x="955.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="952" y="244" width="4" height="15" fill="rgb(234,146,54)"/><text x="955.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.30%)</title><rect x="952" y="260" width="4" height="15" fill="rgb(220,6,9)"/><text x="955.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="952" y="276" width="4" height="15" fill="rgb(217,42,41)"/><text x="955.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="952" y="292" width="4" height="15" fill="rgb(238,205,38)"/><text x="955.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="952" y="308" width="4" height="15" fill="rgb(245,111,8)"/><text x="955.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="952" y="324" width="4" height="15" fill="rgb(225,78,43)"/><text x="955.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="952" y="340" width="4" height="15" fill="rgb(244,85,46)"/><text x="955.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.30%)</title><rect x="952" y="356" width="4" height="15" fill="rgb(251,43,33)"/><text x="955.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="952" y="372" width="4" height="15" fill="rgb(206,222,48)"/><text x="955.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="952" y="388" width="4" height="15" fill="rgb(250,61,16)"/><text x="955.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="952" y="404" width="4" height="15" fill="rgb(211,82,25)"/><text x="955.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="952" y="420" width="4" height="15" fill="rgb(240,54,5)"/><text x="955.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="952" y="436" width="4" height="15" fill="rgb(213,30,37)"/><text x="955.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.30%)</title><rect x="952" y="452" width="4" height="15" fill="rgb(223,129,17)"/><text x="955.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="952" y="468" width="4" height="15" fill="rgb(218,70,40)"/><text x="955.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="952" y="484" width="4" height="15" fill="rgb(236,112,6)"/><text x="955.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="952" y="500" width="4" height="15" fill="rgb(247,143,12)"/><text x="955.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.30%)</title><rect x="952" y="516" width="4" height="15" fill="rgb(232,20,22)"/><text x="955.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.30%)</title><rect x="952" y="532" width="4" height="15" fill="rgb(225,182,31)"/><text x="955.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="952" y="548" width="4" height="15" fill="rgb(223,71,15)"/><text x="955.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="564" width="4" height="15" fill="rgb(210,204,19)"/><text x="955.00" y="574.50"></text></g><g><title>0x7f5b51acf995 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="580" width="4" height="15" fill="rgb(238,106,27)"/><text x="955.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="596" width="4" height="15" fill="rgb(208,19,7)"/><text x="955.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="612" width="4" height="15" fill="rgb(242,89,28)"/><text x="955.00" y="622.50"></text></g><g><title>0x7f5b51acf258 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="628" width="4" height="15" fill="rgb(212,37,49)"/><text x="955.00" y="638.50"></text></g><g><title>0x7f5b51b1cd7a (ld-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="644" width="4" height="15" fill="rgb(234,147,14)"/><text x="955.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="660" width="4" height="15" fill="rgb(219,13,10)"/><text x="955.00" y="670.50"></text></g><g><title>0x7f5b51b1d345 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="676" width="4" height="15" fill="rgb(238,199,11)"/><text x="955.00" y="686.50"></text></g><g><title>0x7f5b51b15fec (ld-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="692" width="4" height="15" fill="rgb(251,207,7)"/><text x="955.00" y="702.50"></text></g><g><title>0x7f5b51b1456b (ld-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="708" width="4" height="15" fill="rgb(247,206,50)"/><text x="955.00" y="718.50"></text></g><g><title>0x7f5b51b14120 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="952" y="724" width="4" height="15" fill="rgb(242,174,30)"/><text x="955.00" y="734.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.30%)</title><rect x="977" y="148" width="4" height="15" fill="rgb(251,42,26)"/><text x="980.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.30%)</title><rect x="981" y="148" width="3" height="15" fill="rgb(205,7,49)"/><text x="984.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.30%)</title><rect x="995" y="196" width="4" height="15" fill="rgb(226,126,47)"/><text x="998.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 1.83%)</title><rect x="999" y="196" width="21" height="15" fill="rgb(207,17,31)"/><text x="1002.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (6 samples, 1.83%)</title><rect x="999" y="212" width="21" height="15" fill="rgb(215,183,10)"/><text x="1002.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="1006" y="228" width="14" height="15" fill="rgb(247,21,28)"/><text x="1009.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1013" y="244" width="7" height="15" fill="rgb(215,139,16)"/><text x="1016.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1013" y="260" width="7" height="15" fill="rgb(253,193,48)"/><text x="1016.00" y="270.50"></text></g><g><title>0x7f5b118b7ff9 (?) (1 samples, 0.30%)</title><rect x="1028" y="212" width="3" height="15" fill="rgb(250,132,1)"/><text x="1031.00" y="222.50"></text></g><g><title>0x7f5b118b2ef6 (?) (1 samples, 0.30%)</title><rect x="1028" y="228" width="3" height="15" fill="rgb(214,203,49)"/><text x="1031.00" y="238.50"></text></g><g><title>0x7f5b118a7d49 (?) (1 samples, 0.30%)</title><rect x="1028" y="244" width="3" height="15" fill="rgb(230,24,14)"/><text x="1031.00" y="254.50"></text></g><g><title>0x7f5b118b5c1a (?) (1 samples, 0.30%)</title><rect x="1028" y="260" width="3" height="15" fill="rgb(214,136,6)"/><text x="1031.00" y="270.50"></text></g><g><title>0x7f5b11cdae0e (?) (1 samples, 0.30%)</title><rect x="1028" y="276" width="3" height="15" fill="rgb(243,173,31)"/><text x="1031.00" y="286.50"></text></g><g><title>0x7f5b11d1df62 (?) (1 samples, 0.30%)</title><rect x="1028" y="292" width="3" height="15" fill="rgb(214,25,48)"/><text x="1031.00" y="302.50"></text></g><g><title>0x7f5b51847965 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1031" y="260" width="4" height="15" fill="rgb(220,229,51)"/><text x="1034.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1035" y="260" width="3" height="15" fill="rgb(240,167,4)"/><text x="1038.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1038" y="260" width="4" height="15" fill="rgb(236,169,38)"/><text x="1041.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1038" y="276" width="4" height="15" fill="rgb(216,113,20)"/><text x="1041.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1049" y="292" width="4" height="15" fill="rgb(241,54,21)"/><text x="1052.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1053" y="292" width="7" height="15" fill="rgb(215,170,20)"/><text x="1056.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1056" y="308" width="4" height="15" fill="rgb(219,184,43)"/><text x="1059.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1060" y="292" width="4" height="15" fill="rgb(225,193,22)"/><text x="1063.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1071" y="340" width="3" height="15" fill="rgb(243,205,5)"/><text x="1074.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1071" y="356" width="3" height="15" fill="rgb(216,117,30)"/><text x="1074.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1071" y="372" width="3" height="15" fill="rgb(206,27,41)"/><text x="1074.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1074" y="340" width="4" height="15" fill="rgb(214,90,52)"/><text x="1077.00" y="350.50"></text></g><g><title>0x7f5b5184791c (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1074" y="356" width="4" height="15" fill="rgb(254,77,41)"/><text x="1077.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1078" y="356" width="4" height="15" fill="rgb(216,200,53)"/><text x="1081.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1078" y="372" width="4" height="15" fill="rgb(230,159,31)"/><text x="1081.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1089" y="452" width="3" height="15" fill="rgb(231,174,39)"/><text x="1092.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1089" y="468" width="3" height="15" fill="rgb(213,3,2)"/><text x="1092.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1089" y="484" width="3" height="15" fill="rgb(252,202,26)"/><text x="1092.00" y="494.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.44%)</title><rect x="1067" y="324" width="29" height="15" fill="rgb(241,154,41)"/><text x="1070.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.52%)</title><rect x="1078" y="340" width="18" height="15" fill="rgb(254,195,52)"/><text x="1081.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="1082" y="356" width="14" height="15" fill="rgb(217,31,39)"/><text x="1085.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="1082" y="372" width="14" height="15" fill="rgb(210,146,28)"/><text x="1085.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1085" y="388" width="11" height="15" fill="rgb(224,193,18)"/><text x="1088.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1085" y="404" width="11" height="15" fill="rgb(217,106,12)"/><text x="1088.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1085" y="420" width="11" height="15" fill="rgb(231,28,43)"/><text x="1088.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.91%)</title><rect x="1085" y="436" width="11" height="15" fill="rgb(221,132,39)"/><text x="1088.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1092" y="452" width="4" height="15" fill="rgb(219,18,42)"/><text x="1095.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1092" y="468" width="4" height="15" fill="rgb(250,0,51)"/><text x="1095.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1092" y="484" width="4" height="15" fill="rgb(225,128,53)"/><text x="1095.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1092" y="500" width="4" height="15" fill="rgb(207,198,45)"/><text x="1095.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1092" y="516" width="4" height="15" fill="rgb(222,67,31)"/><text x="1095.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.88%)</title><rect x="1042" y="260" width="58" height="15" fill="rgb(221,207,47)"/><text x="1045.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.27%)</title><rect x="1049" y="276" width="51" height="15" fill="rgb(234,42,32)"/><text x="1052.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.05%)</title><rect x="1064" y="292" width="36" height="15" fill="rgb(227,164,53)"/><text x="1067.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.74%)</title><rect x="1067" y="308" width="33" height="15" fill="rgb(207,87,21)"/><text x="1070.00" y="318.50">on..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1096" y="324" width="4" height="15" fill="rgb(246,29,9)"/><text x="1099.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1100" y="276" width="3" height="15" fill="rgb(227,134,28)"/><text x="1103.00" y="286.50"></text></g><g><title>0x7f5b5184797c (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1100" y="292" width="3" height="15" fill="rgb(243,226,19)"/><text x="1103.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1100" y="260" width="7" height="15" fill="rgb(228,226,2)"/><text x="1103.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="1103" y="276" width="4" height="15" fill="rgb(236,47,15)"/><text x="1106.00" y="286.50"></text></g><g><title>0x7f5b51925e61 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1103" y="292" width="4" height="15" fill="rgb(225,21,45)"/><text x="1106.00" y="302.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="1107" y="276" width="3" height="15" fill="rgb(223,184,23)"/><text x="1110.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.30%)</title><rect x="1107" y="292" width="3" height="15" fill="rgb(226,184,8)"/><text x="1110.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:38) (1 samples, 0.30%)</title><rect x="1107" y="308" width="3" height="15" fill="rgb(252,184,2)"/><text x="1110.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1107" y="260" width="7" height="15" fill="rgb(220,152,22)"/><text x="1110.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1110" y="276" width="4" height="15" fill="rgb(252,95,49)"/><text x="1113.00" y="286.50"></text></g><g><title>0x7f5b51847a4d (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1110" y="292" width="4" height="15" fill="rgb(226,31,8)"/><text x="1113.00" y="302.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1114" y="260" width="4" height="15" fill="rgb(240,14,18)"/><text x="1117.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1114" y="276" width="4" height="15" fill="rgb(208,67,44)"/><text x="1117.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1118" y="260" width="3" height="15" fill="rgb(217,123,45)"/><text x="1121.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1118" y="276" width="3" height="15" fill="rgb(233,59,10)"/><text x="1121.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1118" y="292" width="3" height="15" fill="rgb(214,179,20)"/><text x="1121.00" y="302.50"></text></g><g><title>0x7f5b51847a51 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1118" y="308" width="3" height="15" fill="rgb(248,207,17)"/><text x="1121.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1121" y="356" width="4" height="15" fill="rgb(205,87,39)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1121" y="372" width="4" height="15" fill="rgb(252,124,5)"/><text x="1124.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 8.23%)</title><rect x="1031" y="244" width="97" height="15" fill="rgb(235,109,3)"/><text x="1034.00" y="254.50">onnxruntime..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1121" y="260" width="7" height="15" fill="rgb(210,160,49)"/><text x="1124.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1121" y="276" width="7" height="15" fill="rgb(215,33,6)"/><text x="1124.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1121" y="292" width="7" height="15" fill="rgb(240,193,38)"/><text x="1124.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1121" y="308" width="7" height="15" fill="rgb(218,99,50)"/><text x="1124.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1121" y="324" width="7" height="15" fill="rgb(224,60,17)"/><text x="1124.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1121" y="340" width="7" height="15" fill="rgb(242,183,10)"/><text x="1124.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1125" y="356" width="3" height="15" fill="rgb(213,210,3)"/><text x="1128.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1125" y="372" width="3" height="15" fill="rgb(238,4,38)"/><text x="1128.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="1128" y="244" width="15" height="15" fill="rgb(219,29,32)"/><text x="1131.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="1128" y="260" width="15" height="15" fill="rgb(212,217,23)"/><text x="1131.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1136" y="276" width="7" height="15" fill="rgb(242,150,31)"/><text x="1139.00" y="286.50"></text></g><g><title>0x7f5b1187e850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1139" y="292" width="4" height="15" fill="rgb(206,171,38)"/><text x="1142.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="1143" y="244" width="7" height="15" fill="rgb(250,41,37)"/><text x="1146.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1146" y="260" width="4" height="15" fill="rgb(234,195,5)"/><text x="1149.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1150" y="244" width="4" height="15" fill="rgb(220,117,34)"/><text x="1153.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (48 samples, 14.63%)</title><rect x="984" y="164" width="173" height="15" fill="rgb(205,98,11)"/><text x="987.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (47 samples, 14.33%)</title><rect x="988" y="180" width="169" height="15" fill="rgb(214,189,43)"/><text x="991.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (onnxruntime/capi/session.py:136) (38 samples, 11.59%)</title><rect x="1020" y="196" width="137" height="15" fill="rgb(249,83,11)"/><text x="1023.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 10.67%)</title><rect x="1031" y="212" width="126" height="15" fill="rgb(211,187,32)"/><text x="1034.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 10.67%)</title><rect x="1031" y="228" width="126" height="15" fill="rgb(209,59,27)"/><text x="1034.00" y="238.50">void pybind11::..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1154" y="244" width="3" height="15" fill="rgb(229,147,34)"/><text x="1157.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1154" y="260" width="3" height="15" fill="rgb(221,219,5)"/><text x="1157.00" y="270.50"></text></g><g><title>std::type_info::hash_code (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1154" y="276" width="3" height="15" fill="rgb(250,164,16)"/><text x="1157.00" y="286.50"></text></g><g><title>0x7f5b5185debc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1154" y="292" width="3" height="15" fill="rgb(211,165,48)"/><text x="1157.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (62 samples, 18.90%)</title><rect x="963" y="132" width="223" height="15" fill="rgb(253,5,52)"/><text x="966.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (56 samples, 17.07%)</title><rect x="984" y="148" width="202" height="15" fill="rgb(232,7,39)"/><text x="987.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (8 samples, 2.44%)</title><rect x="1157" y="164" width="29" height="15" fill="rgb(224,221,26)"/><text x="1160.00" y="174.50">_r..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 0.91%)</title><rect x="1175" y="180" width="11" height="15" fill="rgb(247,144,39)"/><text x="1178.00" y="190.50"></text></g><g><title>all (328 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(228,8,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:52) (66 samples, 20.12%)</title><rect x="952" y="52" width="238" height="15" fill="rgb(221,193,9)"/><text x="955.00" y="62.50">&lt;module&gt; (bench_LogisticRegress..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:51) (66 samples, 20.12%)</title><rect x="952" y="68" width="238" height="15" fill="rgb(208,28,32)"/><text x="955.00" y="78.50">profile_ort (bench_LogisticRegr..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:29) (65 samples, 19.82%)</title><rect x="956" y="84" width="234" height="15" fill="rgb(232,142,35)"/><text x="959.00" y="94.50">setup_profile (bench_LogisticRe..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1_4_12_float_raw_score.py:23) (65 samples, 19.82%)</title><rect x="956" y="100" width="234" height="15" fill="rgb(219,221,29)"/><text x="959.00" y="110.50">profile (bench_LogisticRegressi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (65 samples, 19.82%)</title><rect x="956" y="116" width="234" height="15" fill="rgb(244,218,28)"/><text x="959.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(216,82,27)"/><text x="1189.00" y="142.50"></text></g></g></svg>