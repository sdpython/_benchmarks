<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(250,97,6)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(242,40,7)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(218,7,34)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.21%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(232,36,7)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(205,157,16)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(245,179,29)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(205,198,24)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(246,133,42)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(212,44,39)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(227,72,38)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.21%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(236,102,32)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.21%)</title><rect x="10" y="1044" width="2" height="15" fill="rgb(229,202,40)"/><text x="13.00" y="1054.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="868" width="5" height="15" fill="rgb(240,177,24)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="884" width="5" height="15" fill="rgb(227,129,9)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="900" width="5" height="15" fill="rgb(244,31,22)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="916" width="5" height="15" fill="rgb(252,68,6)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="932" width="5" height="15" fill="rgb(230,140,54)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="948" width="5" height="15" fill="rgb(211,178,53)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.42%)</title><rect x="12" y="964" width="5" height="15" fill="rgb(211,131,52)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.42%)</title><rect x="12" y="980" width="5" height="15" fill="rgb(238,218,11)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.42%)</title><rect x="12" y="996" width="5" height="15" fill="rgb(242,7,13)"/><text x="15.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.42%)</title><rect x="12" y="1012" width="5" height="15" fill="rgb(213,15,45)"/><text x="15.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="14" y="1028" width="3" height="15" fill="rgb(243,131,47)"/><text x="17.00" y="1038.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(216,177,15)"/><text x="20.00" y="926.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.21%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(247,135,41)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="596" width="19" height="15" fill="rgb(232,194,14)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="612" width="19" height="15" fill="rgb(253,113,31)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="628" width="19" height="15" fill="rgb(232,221,33)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="644" width="19" height="15" fill="rgb(249,54,43)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="660" width="19" height="15" fill="rgb(233,217,13)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="676" width="19" height="15" fill="rgb(209,113,18)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.66%)</title><rect x="10" y="692" width="19" height="15" fill="rgb(214,2,34)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="708" width="19" height="15" fill="rgb(244,164,14)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 1.66%)</title><rect x="10" y="724" width="19" height="15" fill="rgb(240,145,35)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="740" width="19" height="15" fill="rgb(245,57,19)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="756" width="19" height="15" fill="rgb(230,70,13)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="772" width="19" height="15" fill="rgb(221,89,24)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.66%)</title><rect x="10" y="788" width="19" height="15" fill="rgb(242,2,45)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.66%)</title><rect x="10" y="804" width="19" height="15" fill="rgb(210,63,10)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 1.66%)</title><rect x="10" y="820" width="19" height="15" fill="rgb(234,131,15)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 1.66%)</title><rect x="10" y="836" width="19" height="15" fill="rgb(220,150,1)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 1.66%)</title><rect x="10" y="852" width="19" height="15" fill="rgb(222,78,22)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="868" width="12" height="15" fill="rgb(244,25,28)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="884" width="12" height="15" fill="rgb(226,225,53)"/><text x="20.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (5 samples, 1.04%)</title><rect x="17" y="900" width="12" height="15" fill="rgb(225,3,9)"/><text x="20.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (4 samples, 0.83%)</title><rect x="19" y="916" width="10" height="15" fill="rgb(227,17,21)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (3 samples, 0.62%)</title><rect x="22" y="932" width="7" height="15" fill="rgb(228,200,12)"/><text x="25.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (3 samples, 0.62%)</title><rect x="22" y="948" width="7" height="15" fill="rgb(207,44,5)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (3 samples, 0.62%)</title><rect x="22" y="964" width="7" height="15" fill="rgb(253,24,33)"/><text x="25.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.42%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(218,83,5)"/><text x="27.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.42%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(238,166,0)"/><text x="27.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.21%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(208,76,33)"/><text x="30.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (9 samples, 1.87%)</title><rect x="10" y="292" width="22" height="15" fill="rgb(218,47,26)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="308" width="22" height="15" fill="rgb(237,33,28)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="324" width="22" height="15" fill="rgb(214,93,3)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="340" width="22" height="15" fill="rgb(214,43,37)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.87%)</title><rect x="10" y="356" width="22" height="15" fill="rgb(207,137,21)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="372" width="22" height="15" fill="rgb(223,216,53)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (9 samples, 1.87%)</title><rect x="10" y="388" width="22" height="15" fill="rgb(235,119,18)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="404" width="22" height="15" fill="rgb(236,176,41)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="420" width="22" height="15" fill="rgb(237,97,29)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="436" width="22" height="15" fill="rgb(254,94,45)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.87%)</title><rect x="10" y="452" width="22" height="15" fill="rgb(237,96,1)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="468" width="22" height="15" fill="rgb(217,130,54)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (9 samples, 1.87%)</title><rect x="10" y="484" width="22" height="15" fill="rgb(223,221,9)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="500" width="22" height="15" fill="rgb(218,215,19)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="516" width="22" height="15" fill="rgb(205,224,38)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="532" width="22" height="15" fill="rgb(216,76,21)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.87%)</title><rect x="10" y="548" width="22" height="15" fill="rgb(218,111,19)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.87%)</title><rect x="10" y="564" width="22" height="15" fill="rgb(239,89,38)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (9 samples, 1.87%)</title><rect x="10" y="580" width="22" height="15" fill="rgb(205,57,5)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(226,154,18)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(209,199,15)"/><text x="32.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(223,157,11)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="644" width="3" height="15" fill="rgb(210,34,33)"/><text x="32.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="660" width="3" height="15" fill="rgb(238,68,35)"/><text x="32.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="29" y="676" width="3" height="15" fill="rgb(215,130,44)"/><text x="32.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="692" width="3" height="15" fill="rgb(215,45,50)"/><text x="32.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.21%)</title><rect x="29" y="708" width="3" height="15" fill="rgb(252,59,51)"/><text x="32.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="724" width="3" height="15" fill="rgb(230,160,46)"/><text x="32.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="740" width="3" height="15" fill="rgb(230,218,1)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="29" y="756" width="3" height="15" fill="rgb(220,62,38)"/><text x="32.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="916" width="2" height="15" fill="rgb(248,169,45)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="932" width="2" height="15" fill="rgb(206,182,33)"/><text x="35.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="948" width="2" height="15" fill="rgb(223,143,44)"/><text x="35.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="964" width="2" height="15" fill="rgb(240,96,21)"/><text x="35.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="980" width="2" height="15" fill="rgb(240,166,46)"/><text x="35.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="32" y="996" width="2" height="15" fill="rgb(230,189,52)"/><text x="35.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1012" width="2" height="15" fill="rgb(246,208,53)"/><text x="35.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1028" width="2" height="15" fill="rgb(217,31,48)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1044" width="2" height="15" fill="rgb(232,29,37)"/><text x="35.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1060" width="2" height="15" fill="rgb(251,52,25)"/><text x="35.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1076" width="2" height="15" fill="rgb(237,89,15)"/><text x="35.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1092" width="2" height="15" fill="rgb(253,140,46)"/><text x="35.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1108" width="2" height="15" fill="rgb(237,142,43)"/><text x="35.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.21%)</title><rect x="32" y="1124" width="2" height="15" fill="rgb(237,128,31)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1140" width="2" height="15" fill="rgb(210,124,20)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1156" width="2" height="15" fill="rgb(230,8,44)"/><text x="35.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1172" width="2" height="15" fill="rgb(229,161,12)"/><text x="35.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1188" width="2" height="15" fill="rgb(243,23,48)"/><text x="35.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1204" width="2" height="15" fill="rgb(249,204,52)"/><text x="35.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.21%)</title><rect x="32" y="1220" width="2" height="15" fill="rgb(245,128,42)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1236" width="2" height="15" fill="rgb(222,139,28)"/><text x="35.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1252" width="2" height="15" fill="rgb(222,38,6)"/><text x="35.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1268" width="2" height="15" fill="rgb(250,186,39)"/><text x="35.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1284" width="2" height="15" fill="rgb(248,59,35)"/><text x="35.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1300" width="2" height="15" fill="rgb(229,68,27)"/><text x="35.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.21%)</title><rect x="32" y="1316" width="2" height="15" fill="rgb(230,38,41)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1332" width="2" height="15" fill="rgb(205,90,38)"/><text x="35.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1348" width="2" height="15" fill="rgb(205,184,26)"/><text x="35.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1364" width="2" height="15" fill="rgb(212,84,21)"/><text x="35.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1380" width="2" height="15" fill="rgb(209,106,7)"/><text x="35.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1396" width="2" height="15" fill="rgb(219,78,54)"/><text x="35.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.21%)</title><rect x="32" y="1412" width="2" height="15" fill="rgb(206,58,4)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1428" width="2" height="15" fill="rgb(222,108,51)"/><text x="35.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1444" width="2" height="15" fill="rgb(237,224,33)"/><text x="35.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1460" width="2" height="15" fill="rgb(251,135,54)"/><text x="35.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1476" width="2" height="15" fill="rgb(214,32,17)"/><text x="35.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1492" width="2" height="15" fill="rgb(222,36,3)"/><text x="35.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.21%)</title><rect x="32" y="1508" width="2" height="15" fill="rgb(237,174,23)"/><text x="35.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1524" width="2" height="15" fill="rgb(235,173,6)"/><text x="35.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1540" width="2" height="15" fill="rgb(208,209,29)"/><text x="35.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1556" width="2" height="15" fill="rgb(238,74,1)"/><text x="35.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1572" width="2" height="15" fill="rgb(248,46,41)"/><text x="35.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1588" width="2" height="15" fill="rgb(226,153,47)"/><text x="35.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.21%)</title><rect x="32" y="1604" width="2" height="15" fill="rgb(230,160,43)"/><text x="35.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1620" width="2" height="15" fill="rgb(220,223,23)"/><text x="35.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1636" width="2" height="15" fill="rgb(245,224,50)"/><text x="35.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1652" width="2" height="15" fill="rgb(216,160,25)"/><text x="35.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="32" y="1668" width="2" height="15" fill="rgb(228,147,39)"/><text x="35.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1684" width="2" height="15" fill="rgb(247,2,22)"/><text x="35.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py) (1 samples, 0.21%)</title><rect x="32" y="1700" width="2" height="15" fill="rgb(253,85,6)"/><text x="35.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="32" y="1716" width="2" height="15" fill="rgb(238,224,2)"/><text x="35.00" y="1726.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.29%)</title><rect x="10" y="196" width="26" height="15" fill="rgb(228,76,49)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.29%)</title><rect x="10" y="212" width="26" height="15" fill="rgb(241,49,13)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.29%)</title><rect x="10" y="228" width="26" height="15" fill="rgb(209,164,42)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.29%)</title><rect x="10" y="244" width="26" height="15" fill="rgb(224,28,22)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.29%)</title><rect x="10" y="260" width="26" height="15" fill="rgb(236,116,42)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.29%)</title><rect x="10" y="276" width="26" height="15" fill="rgb(252,74,32)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.42%)</title><rect x="32" y="292" width="4" height="15" fill="rgb(216,219,54)"/><text x="35.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="308" width="4" height="15" fill="rgb(210,14,30)"/><text x="35.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="324" width="4" height="15" fill="rgb(223,168,11)"/><text x="35.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="340" width="4" height="15" fill="rgb(227,63,29)"/><text x="35.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="356" width="4" height="15" fill="rgb(215,82,8)"/><text x="35.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="372" width="4" height="15" fill="rgb(206,208,20)"/><text x="35.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.42%)</title><rect x="32" y="388" width="4" height="15" fill="rgb(228,61,34)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="404" width="4" height="15" fill="rgb(228,204,40)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="420" width="4" height="15" fill="rgb(244,81,28)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="436" width="4" height="15" fill="rgb(229,182,3)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="452" width="4" height="15" fill="rgb(233,50,31)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="468" width="4" height="15" fill="rgb(230,151,31)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.42%)</title><rect x="32" y="484" width="4" height="15" fill="rgb(245,118,34)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(245,101,12)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(208,82,18)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(214,149,11)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(234,61,2)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(249,86,5)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.42%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(251,24,15)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(239,47,53)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(240,44,8)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(250,51,20)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(225,79,39)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(220,129,38)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.42%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(238,206,2)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(209,184,10)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(233,3,19)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(214,101,3)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(218,64,36)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(244,126,44)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.42%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(206,117,39)"/><text x="35.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(247,27,12)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(240,13,34)"/><text x="35.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(225,24,13)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(210,74,11)"/><text x="35.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(210,173,6)"/><text x="35.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(236,0,26)"/><text x="35.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(241,44,27)"/><text x="35.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.42%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(233,61,17)"/><text x="35.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(224,62,36)"/><text x="37.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(211,97,48)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(214,181,39)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(222,102,31)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(224,12,15)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(212,68,33)"/><text x="37.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(251,224,10)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.21%)</title><rect x="34" y="1028" width="2" height="15" fill="rgb(216,7,14)"/><text x="37.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="34" y="1044" width="2" height="15" fill="rgb(226,216,0)"/><text x="37.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.21%)</title><rect x="34" y="1060" width="2" height="15" fill="rgb(247,226,4)"/><text x="37.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.21%)</title><rect x="34" y="1076" width="2" height="15" fill="rgb(221,173,46)"/><text x="37.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.21%)</title><rect x="34" y="1092" width="2" height="15" fill="rgb(235,4,16)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.21%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(233,48,18)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(227,209,29)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(212,148,45)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(226,9,5)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(226,26,54)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(239,87,7)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.21%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(240,112,17)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(230,123,18)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(247,72,14)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(205,150,50)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(221,87,21)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(230,132,50)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py) (1 samples, 0.21%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(225,9,36)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(240,122,45)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(235,98,43)"/><text x="39.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(246,132,31)"/><text x="39.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(250,159,18)"/><text x="39.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(212,182,27)"/><text x="39.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(212,151,39)"/><text x="39.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="36" y="1124" width="5" height="15" fill="rgb(246,66,4)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="36" y="1140" width="5" height="15" fill="rgb(229,163,46)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="36" y="1156" width="5" height="15" fill="rgb(225,227,28)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="36" y="1172" width="5" height="15" fill="rgb(206,176,2)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="36" y="1188" width="5" height="15" fill="rgb(217,9,0)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.21%)</title><rect x="39" y="1204" width="2" height="15" fill="rgb(251,176,5)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="39" y="1220" width="2" height="15" fill="rgb(221,30,16)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="39" y="1236" width="2" height="15" fill="rgb(229,33,19)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="39" y="1252" width="2" height="15" fill="rgb(247,178,7)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="39" y="1268" width="2" height="15" fill="rgb(221,182,24)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="39" y="1284" width="2" height="15" fill="rgb(217,78,26)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.21%)</title><rect x="39" y="1300" width="2" height="15" fill="rgb(239,142,39)"/><text x="42.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.21%)</title><rect x="39" y="1316" width="2" height="15" fill="rgb(235,72,38)"/><text x="42.00" y="1326.50"></text></g><g><title>compile (re.py) (1 samples, 0.21%)</title><rect x="39" y="1332" width="2" height="15" fill="rgb(243,142,5)"/><text x="42.00" y="1342.50"></text></g><g><title>_compile (re.py) (1 samples, 0.21%)</title><rect x="39" y="1348" width="2" height="15" fill="rgb(233,87,37)"/><text x="42.00" y="1358.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.21%)</title><rect x="39" y="1364" width="2" height="15" fill="rgb(247,25,4)"/><text x="42.00" y="1374.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.21%)</title><rect x="39" y="1380" width="2" height="15" fill="rgb(217,42,5)"/><text x="42.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.21%)</title><rect x="39" y="1396" width="2" height="15" fill="rgb(249,133,50)"/><text x="42.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.21%)</title><rect x="39" y="1412" width="2" height="15" fill="rgb(219,97,50)"/><text x="42.00" y="1422.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.21%)</title><rect x="39" y="1428" width="2" height="15" fill="rgb(236,223,21)"/><text x="42.00" y="1438.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.21%)</title><rect x="39" y="1444" width="2" height="15" fill="rgb(235,49,47)"/><text x="42.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="484" width="8" height="15" fill="rgb(252,195,35)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="500" width="8" height="15" fill="rgb(254,61,16)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="516" width="8" height="15" fill="rgb(252,52,15)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="532" width="8" height="15" fill="rgb(233,209,46)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="36" y="548" width="8" height="15" fill="rgb(211,120,27)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="564" width="8" height="15" fill="rgb(210,67,46)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.62%)</title><rect x="36" y="580" width="8" height="15" fill="rgb(237,1,41)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="596" width="8" height="15" fill="rgb(251,92,53)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="612" width="8" height="15" fill="rgb(219,201,36)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="628" width="8" height="15" fill="rgb(225,33,49)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="36" y="644" width="8" height="15" fill="rgb(239,197,8)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="660" width="8" height="15" fill="rgb(249,127,0)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.62%)</title><rect x="36" y="676" width="8" height="15" fill="rgb(213,204,42)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="692" width="8" height="15" fill="rgb(243,39,6)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="708" width="8" height="15" fill="rgb(245,213,27)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="724" width="8" height="15" fill="rgb(215,161,43)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="36" y="740" width="8" height="15" fill="rgb(238,125,17)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="756" width="8" height="15" fill="rgb(230,2,9)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.62%)</title><rect x="36" y="772" width="8" height="15" fill="rgb(247,200,51)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="788" width="8" height="15" fill="rgb(221,149,15)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="804" width="8" height="15" fill="rgb(237,193,50)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="820" width="8" height="15" fill="rgb(210,209,49)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="36" y="836" width="8" height="15" fill="rgb(214,95,8)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="852" width="8" height="15" fill="rgb(211,41,22)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.62%)</title><rect x="36" y="868" width="8" height="15" fill="rgb(230,182,38)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="884" width="8" height="15" fill="rgb(227,216,8)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="900" width="8" height="15" fill="rgb(207,44,43)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="916" width="8" height="15" fill="rgb(249,219,31)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="932" width="8" height="15" fill="rgb(220,138,35)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="948" width="8" height="15" fill="rgb(208,137,1)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="964" width="8" height="15" fill="rgb(217,64,38)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="36" y="980" width="8" height="15" fill="rgb(216,90,12)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="996" width="8" height="15" fill="rgb(227,34,15)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.62%)</title><rect x="36" y="1012" width="8" height="15" fill="rgb(211,59,14)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="1028" width="8" height="15" fill="rgb(211,157,31)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="1044" width="8" height="15" fill="rgb(250,108,11)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="1060" width="8" height="15" fill="rgb(226,4,37)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.62%)</title><rect x="36" y="1076" width="8" height="15" fill="rgb(224,22,19)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.62%)</title><rect x="36" y="1092" width="8" height="15" fill="rgb(216,172,32)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.62%)</title><rect x="36" y="1108" width="8" height="15" fill="rgb(243,0,14)"/><text x="39.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(230,163,20)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1140" width="3" height="15" fill="rgb(215,65,36)"/><text x="44.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1156" width="3" height="15" fill="rgb(239,83,15)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1172" width="3" height="15" fill="rgb(231,131,29)"/><text x="44.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1188" width="3" height="15" fill="rgb(241,54,49)"/><text x="44.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="41" y="1204" width="3" height="15" fill="rgb(252,86,51)"/><text x="44.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1220" width="3" height="15" fill="rgb(212,219,4)"/><text x="44.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.21%)</title><rect x="41" y="1236" width="3" height="15" fill="rgb(252,28,20)"/><text x="44.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1252" width="3" height="15" fill="rgb(208,148,10)"/><text x="44.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1268" width="3" height="15" fill="rgb(232,170,21)"/><text x="44.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1284" width="3" height="15" fill="rgb(211,93,38)"/><text x="44.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1300" width="3" height="15" fill="rgb(247,188,2)"/><text x="44.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1316" width="3" height="15" fill="rgb(240,141,0)"/><text x="44.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="41" y="1332" width="3" height="15" fill="rgb(211,138,27)"/><text x="44.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1348" width="3" height="15" fill="rgb(218,101,50)"/><text x="44.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.21%)</title><rect x="41" y="1364" width="3" height="15" fill="rgb(247,149,54)"/><text x="44.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1380" width="3" height="15" fill="rgb(227,86,44)"/><text x="44.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1396" width="3" height="15" fill="rgb(237,48,23)"/><text x="44.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1412" width="3" height="15" fill="rgb(229,176,24)"/><text x="44.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="41" y="1428" width="3" height="15" fill="rgb(213,37,17)"/><text x="44.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1444" width="3" height="15" fill="rgb(217,174,2)"/><text x="44.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.21%)</title><rect x="41" y="1460" width="3" height="15" fill="rgb(211,30,21)"/><text x="44.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1476" width="3" height="15" fill="rgb(245,226,33)"/><text x="44.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1492" width="3" height="15" fill="rgb(220,125,41)"/><text x="44.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1508" width="3" height="15" fill="rgb(211,45,10)"/><text x="44.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="41" y="1524" width="3" height="15" fill="rgb(251,21,20)"/><text x="44.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="41" y="1540" width="3" height="15" fill="rgb(251,205,15)"/><text x="44.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.21%)</title><rect x="41" y="1556" width="3" height="15" fill="rgb(221,223,48)"/><text x="44.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.21%)</title><rect x="41" y="1572" width="3" height="15" fill="rgb(224,8,20)"/><text x="44.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.21%)</title><rect x="41" y="1588" width="3" height="15" fill="rgb(239,47,7)"/><text x="44.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.21%)</title><rect x="41" y="1604" width="3" height="15" fill="rgb(216,43,45)"/><text x="44.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.21%)</title><rect x="41" y="1620" width="3" height="15" fill="rgb(243,143,11)"/><text x="44.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.21%)</title><rect x="41" y="1636" width="3" height="15" fill="rgb(215,100,1)"/><text x="44.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1652" width="3" height="15" fill="rgb(245,78,39)"/><text x="44.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1668" width="3" height="15" fill="rgb(205,40,27)"/><text x="44.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1684" width="3" height="15" fill="rgb(228,200,8)"/><text x="44.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1700" width="3" height="15" fill="rgb(231,140,35)"/><text x="44.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1716" width="3" height="15" fill="rgb(224,200,54)"/><text x="44.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1732" width="3" height="15" fill="rgb(224,152,18)"/><text x="44.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1748" width="3" height="15" fill="rgb(251,206,49)"/><text x="44.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1764" width="3" height="15" fill="rgb(211,49,4)"/><text x="44.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1780" width="3" height="15" fill="rgb(205,202,23)"/><text x="44.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1796" width="3" height="15" fill="rgb(212,153,9)"/><text x="44.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1812" width="3" height="15" fill="rgb(238,127,29)"/><text x="44.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1828" width="3" height="15" fill="rgb(228,188,32)"/><text x="44.00" y="1838.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.21%)</title><rect x="41" y="1844" width="3" height="15" fill="rgb(225,132,53)"/><text x="44.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1860" width="3" height="15" fill="rgb(213,56,10)"/><text x="44.00" y="1870.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1876" width="3" height="15" fill="rgb(233,220,50)"/><text x="44.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1892" width="3" height="15" fill="rgb(231,92,6)"/><text x="44.00" y="1902.50"></text></g><g><title>get_visitor (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="41" y="1908" width="3" height="15" fill="rgb(249,59,27)"/><text x="44.00" y="1918.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.21%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(245,163,51)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(230,141,46)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(253,73,15)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(230,166,33)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="980" width="2" height="15" fill="rgb(251,69,18)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="996" width="2" height="15" fill="rgb(227,73,0)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.21%)</title><rect x="44" y="1012" width="2" height="15" fill="rgb(223,1,34)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1028" width="2" height="15" fill="rgb(212,211,1)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1044" width="2" height="15" fill="rgb(211,202,4)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1060" width="2" height="15" fill="rgb(246,28,32)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1076" width="2" height="15" fill="rgb(209,108,11)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1092" width="2" height="15" fill="rgb(210,185,27)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.21%)</title><rect x="44" y="1108" width="2" height="15" fill="rgb(220,217,27)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1124" width="2" height="15" fill="rgb(226,223,45)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1140" width="2" height="15" fill="rgb(207,221,8)"/><text x="47.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1156" width="2" height="15" fill="rgb(206,83,26)"/><text x="47.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1172" width="2" height="15" fill="rgb(227,104,41)"/><text x="47.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1188" width="2" height="15" fill="rgb(246,157,28)"/><text x="47.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.21%)</title><rect x="44" y="1204" width="2" height="15" fill="rgb(211,86,34)"/><text x="47.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1220" width="2" height="15" fill="rgb(224,11,34)"/><text x="47.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1236" width="2" height="15" fill="rgb(235,227,36)"/><text x="47.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1252" width="2" height="15" fill="rgb(220,124,35)"/><text x="47.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1268" width="2" height="15" fill="rgb(240,17,28)"/><text x="47.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1284" width="2" height="15" fill="rgb(215,39,32)"/><text x="47.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.21%)</title><rect x="44" y="1300" width="2" height="15" fill="rgb(235,41,19)"/><text x="47.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1316" width="2" height="15" fill="rgb(245,78,42)"/><text x="47.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1332" width="2" height="15" fill="rgb(243,23,10)"/><text x="47.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1348" width="2" height="15" fill="rgb(226,60,54)"/><text x="47.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1364" width="2" height="15" fill="rgb(246,87,40)"/><text x="47.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1380" width="2" height="15" fill="rgb(207,125,40)"/><text x="47.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.21%)</title><rect x="44" y="1396" width="2" height="15" fill="rgb(218,93,38)"/><text x="47.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1412" width="2" height="15" fill="rgb(221,24,24)"/><text x="47.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1428" width="2" height="15" fill="rgb(226,67,16)"/><text x="47.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1444" width="2" height="15" fill="rgb(239,17,42)"/><text x="47.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1460" width="2" height="15" fill="rgb(235,222,10)"/><text x="47.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1476" width="2" height="15" fill="rgb(254,76,22)"/><text x="47.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.21%)</title><rect x="44" y="1492" width="2" height="15" fill="rgb(210,55,9)"/><text x="47.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1508" width="2" height="15" fill="rgb(208,78,23)"/><text x="47.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1524" width="2" height="15" fill="rgb(209,217,51)"/><text x="47.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1540" width="2" height="15" fill="rgb(249,156,30)"/><text x="47.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1556" width="2" height="15" fill="rgb(227,192,46)"/><text x="47.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1572" width="2" height="15" fill="rgb(222,142,42)"/><text x="47.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.21%)</title><rect x="44" y="1588" width="2" height="15" fill="rgb(223,24,15)"/><text x="47.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1604" width="2" height="15" fill="rgb(228,187,1)"/><text x="47.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1620" width="2" height="15" fill="rgb(253,19,51)"/><text x="47.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1636" width="2" height="15" fill="rgb(243,217,41)"/><text x="47.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1652" width="2" height="15" fill="rgb(221,91,45)"/><text x="47.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1668" width="2" height="15" fill="rgb(225,201,1)"/><text x="47.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.21%)</title><rect x="44" y="1684" width="2" height="15" fill="rgb(245,72,12)"/><text x="47.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1700" width="2" height="15" fill="rgb(213,142,13)"/><text x="47.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1716" width="2" height="15" fill="rgb(215,88,7)"/><text x="47.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1732" width="2" height="15" fill="rgb(240,0,38)"/><text x="47.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1748" width="2" height="15" fill="rgb(243,210,36)"/><text x="47.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1764" width="2" height="15" fill="rgb(217,28,39)"/><text x="47.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.21%)</title><rect x="44" y="1780" width="2" height="15" fill="rgb(238,195,48)"/><text x="47.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1796" width="2" height="15" fill="rgb(229,77,19)"/><text x="47.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1812" width="2" height="15" fill="rgb(253,187,37)"/><text x="47.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="44" y="1828" width="2" height="15" fill="rgb(212,115,12)"/><text x="47.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1844" width="2" height="15" fill="rgb(235,218,22)"/><text x="47.00" y="1854.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1860" width="2" height="15" fill="rgb(205,67,23)"/><text x="47.00" y="1870.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="44" y="1876" width="2" height="15" fill="rgb(249,218,46)"/><text x="47.00" y="1886.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.04%)</title><rect x="36" y="340" width="13" height="15" fill="rgb(247,98,10)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="36" y="356" width="13" height="15" fill="rgb(226,178,9)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="36" y="372" width="13" height="15" fill="rgb(248,47,23)"/><text x="39.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="36" y="388" width="13" height="15" fill="rgb(219,157,26)"/><text x="39.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.04%)</title><rect x="36" y="404" width="13" height="15" fill="rgb(209,123,53)"/><text x="39.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="36" y="420" width="13" height="15" fill="rgb(239,131,31)"/><text x="39.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.04%)</title><rect x="36" y="436" width="13" height="15" fill="rgb(213,45,11)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="36" y="452" width="13" height="15" fill="rgb(238,96,49)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.04%)</title><rect x="36" y="468" width="13" height="15" fill="rgb(242,228,20)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="484" width="5" height="15" fill="rgb(223,131,6)"/><text x="47.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="44" y="500" width="5" height="15" fill="rgb(236,53,15)"/><text x="47.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="516" width="5" height="15" fill="rgb(218,92,2)"/><text x="47.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.42%)</title><rect x="44" y="532" width="5" height="15" fill="rgb(233,112,5)"/><text x="47.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="548" width="5" height="15" fill="rgb(238,75,46)"/><text x="47.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="564" width="5" height="15" fill="rgb(236,33,49)"/><text x="47.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="580" width="5" height="15" fill="rgb(220,183,25)"/><text x="47.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="44" y="596" width="5" height="15" fill="rgb(244,32,39)"/><text x="47.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="612" width="5" height="15" fill="rgb(250,127,49)"/><text x="47.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.42%)</title><rect x="44" y="628" width="5" height="15" fill="rgb(243,22,6)"/><text x="47.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="644" width="5" height="15" fill="rgb(240,129,32)"/><text x="47.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="660" width="5" height="15" fill="rgb(217,155,41)"/><text x="47.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="676" width="5" height="15" fill="rgb(249,175,3)"/><text x="47.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="44" y="692" width="5" height="15" fill="rgb(215,20,8)"/><text x="47.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="708" width="5" height="15" fill="rgb(234,44,4)"/><text x="47.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.42%)</title><rect x="44" y="724" width="5" height="15" fill="rgb(240,10,41)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="740" width="5" height="15" fill="rgb(239,88,4)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="756" width="5" height="15" fill="rgb(222,29,11)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="772" width="5" height="15" fill="rgb(228,13,22)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="44" y="788" width="5" height="15" fill="rgb(228,80,23)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="804" width="5" height="15" fill="rgb(249,214,29)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.42%)</title><rect x="44" y="820" width="5" height="15" fill="rgb(224,123,36)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="836" width="5" height="15" fill="rgb(210,3,13)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="852" width="5" height="15" fill="rgb(208,0,23)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="868" width="5" height="15" fill="rgb(244,107,20)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="44" y="884" width="5" height="15" fill="rgb(225,118,15)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="44" y="900" width="5" height="15" fill="rgb(230,218,22)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/grouper.py) (1 samples, 0.21%)</title><rect x="46" y="916" width="3" height="15" fill="rgb(240,98,1)"/><text x="49.00" y="926.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="46" y="932" width="3" height="15" fill="rgb(229,66,47)"/><text x="49.00" y="942.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="46" y="948" width="3" height="15" fill="rgb(209,58,10)"/><text x="49.00" y="958.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.21%)</title><rect x="46" y="964" width="3" height="15" fill="rgb(251,70,17)"/><text x="49.00" y="974.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(206,198,17)"/><text x="49.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.53%)</title><rect x="10" y="68" width="41" height="15" fill="rgb(208,128,5)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.53%)</title><rect x="10" y="84" width="41" height="15" fill="rgb(231,198,53)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.53%)</title><rect x="10" y="100" width="41" height="15" fill="rgb(226,47,18)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 3.53%)</title><rect x="10" y="116" width="41" height="15" fill="rgb(207,64,29)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.53%)</title><rect x="10" y="132" width="41" height="15" fill="rgb(212,9,24)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (17 samples, 3.53%)</title><rect x="10" y="148" width="41" height="15" fill="rgb(214,163,6)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.53%)</title><rect x="10" y="164" width="41" height="15" fill="rgb(221,112,19)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.53%)</title><rect x="10" y="180" width="41" height="15" fill="rgb(246,0,31)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.25%)</title><rect x="36" y="196" width="15" height="15" fill="rgb(231,147,7)"/><text x="39.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.25%)</title><rect x="36" y="212" width="15" height="15" fill="rgb(234,14,11)"/><text x="39.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.25%)</title><rect x="36" y="228" width="15" height="15" fill="rgb(207,86,23)"/><text x="39.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.25%)</title><rect x="36" y="244" width="15" height="15" fill="rgb(248,213,5)"/><text x="39.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.25%)</title><rect x="36" y="260" width="15" height="15" fill="rgb(215,156,38)"/><text x="39.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.25%)</title><rect x="36" y="276" width="15" height="15" fill="rgb(243,80,27)"/><text x="39.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.25%)</title><rect x="36" y="292" width="15" height="15" fill="rgb(238,221,21)"/><text x="39.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.25%)</title><rect x="36" y="308" width="15" height="15" fill="rgb(254,178,40)"/><text x="39.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.25%)</title><rect x="36" y="324" width="15" height="15" fill="rgb(240,47,1)"/><text x="39.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.21%)</title><rect x="49" y="340" width="2" height="15" fill="rgb(223,160,38)"/><text x="52.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="356" width="2" height="15" fill="rgb(241,213,6)"/><text x="52.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="372" width="2" height="15" fill="rgb(240,76,30)"/><text x="52.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="388" width="2" height="15" fill="rgb(236,102,18)"/><text x="52.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="404" width="2" height="15" fill="rgb(208,162,25)"/><text x="52.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="420" width="2" height="15" fill="rgb(239,14,6)"/><text x="52.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="436" width="2" height="15" fill="rgb(207,209,4)"/><text x="52.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="452" width="2" height="15" fill="rgb(248,14,44)"/><text x="52.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="468" width="2" height="15" fill="rgb(234,135,52)"/><text x="52.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.21%)</title><rect x="49" y="484" width="2" height="15" fill="rgb(238,135,42)"/><text x="52.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="500" width="2" height="15" fill="rgb(240,165,19)"/><text x="52.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="516" width="2" height="15" fill="rgb(238,67,2)"/><text x="52.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="532" width="2" height="15" fill="rgb(236,165,46)"/><text x="52.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="548" width="2" height="15" fill="rgb(243,107,26)"/><text x="52.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="564" width="2" height="15" fill="rgb(237,163,13)"/><text x="52.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.21%)</title><rect x="49" y="580" width="2" height="15" fill="rgb(212,97,37)"/><text x="52.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="596" width="2" height="15" fill="rgb(252,44,51)"/><text x="52.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="612" width="2" height="15" fill="rgb(223,26,2)"/><text x="52.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="628" width="2" height="15" fill="rgb(241,76,18)"/><text x="52.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="644" width="2" height="15" fill="rgb(244,131,30)"/><text x="52.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="660" width="2" height="15" fill="rgb(239,195,26)"/><text x="52.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.21%)</title><rect x="49" y="676" width="2" height="15" fill="rgb(209,192,21)"/><text x="52.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="692" width="2" height="15" fill="rgb(212,213,8)"/><text x="52.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="708" width="2" height="15" fill="rgb(224,169,9)"/><text x="52.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="724" width="2" height="15" fill="rgb(231,107,44)"/><text x="52.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="740" width="2" height="15" fill="rgb(215,143,20)"/><text x="52.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="756" width="2" height="15" fill="rgb(236,141,13)"/><text x="52.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.21%)</title><rect x="49" y="772" width="2" height="15" fill="rgb(214,216,28)"/><text x="52.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="788" width="2" height="15" fill="rgb(207,79,52)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="804" width="2" height="15" fill="rgb(207,32,39)"/><text x="52.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="820" width="2" height="15" fill="rgb(236,229,25)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="836" width="2" height="15" fill="rgb(219,88,0)"/><text x="52.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="852" width="2" height="15" fill="rgb(243,98,32)"/><text x="52.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="868" width="2" height="15" fill="rgb(208,24,13)"/><text x="52.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="884" width="2" height="15" fill="rgb(218,76,3)"/><text x="52.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.21%)</title><rect x="49" y="900" width="2" height="15" fill="rgb(246,140,54)"/><text x="52.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="916" width="2" height="15" fill="rgb(235,141,33)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="932" width="2" height="15" fill="rgb(251,45,31)"/><text x="52.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="948" width="2" height="15" fill="rgb(236,148,23)"/><text x="52.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="964" width="2" height="15" fill="rgb(226,205,27)"/><text x="52.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="980" width="2" height="15" fill="rgb(243,0,27)"/><text x="52.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.21%)</title><rect x="49" y="996" width="2" height="15" fill="rgb(237,146,40)"/><text x="52.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="1012" width="2" height="15" fill="rgb(243,175,27)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="1028" width="2" height="15" fill="rgb(223,158,47)"/><text x="52.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="1044" width="2" height="15" fill="rgb(226,23,2)"/><text x="52.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.21%)</title><rect x="49" y="1060" width="2" height="15" fill="rgb(249,5,54)"/><text x="52.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="49" y="1076" width="2" height="15" fill="rgb(244,175,13)"/><text x="52.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.21%)</title><rect x="49" y="1092" width="2" height="15" fill="rgb(228,70,20)"/><text x="52.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.21%)</title><rect x="49" y="1108" width="2" height="15" fill="rgb(230,20,12)"/><text x="52.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.21%)</title><rect x="49" y="1124" width="2" height="15" fill="rgb(244,16,35)"/><text x="52.00" y="1134.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.21%)</title><rect x="49" y="1140" width="2" height="15" fill="rgb(223,7,35)"/><text x="52.00" y="1150.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.21%)</title><rect x="49" y="1156" width="2" height="15" fill="rgb(250,212,22)"/><text x="52.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.21%)</title><rect x="49" y="1172" width="2" height="15" fill="rgb(254,58,15)"/><text x="52.00" y="1182.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.21%)</title><rect x="49" y="1188" width="2" height="15" fill="rgb(245,46,50)"/><text x="52.00" y="1198.50"></text></g><g><title>0x7fe124e8bbc6 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="98" y="132" width="2" height="15" fill="rgb(225,105,31)"/><text x="101.00" y="142.50"></text></g><g><title>0x7fe124e8bbdf (libc-2.29.so) (4 samples, 0.83%)</title><rect x="100" y="132" width="10" height="15" fill="rgb(253,174,40)"/><text x="103.00" y="142.50"></text></g><g><title>0x7fe124e8bc10 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="110" y="132" width="3" height="15" fill="rgb(232,114,7)"/><text x="113.00" y="142.50"></text></g><g><title>0x7fe124e8bc1c (libc-2.29.so) (1 samples, 0.21%)</title><rect x="113" y="132" width="2" height="15" fill="rgb(223,71,38)"/><text x="116.00" y="142.50"></text></g><g><title>0x7fe124e8bc20 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="115" y="132" width="2" height="15" fill="rgb(207,156,14)"/><text x="118.00" y="142.50"></text></g><g><title>0x7fe124e8bc25 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="117" y="132" width="3" height="15" fill="rgb(219,69,33)"/><text x="120.00" y="142.50"></text></g><g><title>0x7fe124e8bc28 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="120" y="132" width="5" height="15" fill="rgb(235,63,13)"/><text x="123.00" y="142.50"></text></g><g><title>0x7fe124e8bc2d (libc-2.29.so) (2 samples, 0.42%)</title><rect x="125" y="132" width="5" height="15" fill="rgb(244,68,39)"/><text x="128.00" y="142.50"></text></g><g><title>0x7fe124e8bc45 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="130" y="132" width="2" height="15" fill="rgb(235,166,26)"/><text x="133.00" y="142.50"></text></g><g><title>0x7fe124e8bc4d (libc-2.29.so) (1 samples, 0.21%)</title><rect x="132" y="132" width="3" height="15" fill="rgb(247,54,47)"/><text x="135.00" y="142.50"></text></g><g><title>0x7fe124e8baaf (libc-2.29.so) (1 samples, 0.21%)</title><rect x="135" y="148" width="2" height="15" fill="rgb(219,45,1)"/><text x="138.00" y="158.50"></text></g><g><title>0x7fe124e8ceb0 (libc-2.29.so) (17 samples, 3.53%)</title><rect x="98" y="116" width="42" height="15" fill="rgb(226,81,16)"/><text x="101.00" y="126.50">0x7..</text></g><g><title>0x7fe124e8bc73 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="135" y="132" width="5" height="15" fill="rgb(246,132,42)"/><text x="138.00" y="142.50"></text></g><g><title>0x7fe124e8bad5 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="137" y="148" width="3" height="15" fill="rgb(239,115,47)"/><text x="140.00" y="158.50"></text></g><g><title>0x7fe124e8cf39 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="140" y="116" width="2" height="15" fill="rgb(215,197,39)"/><text x="143.00" y="126.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.21%)</title><rect x="149" y="180" width="3" height="15" fill="rgb(240,144,4)"/><text x="152.00" y="190.50"></text></g><g><title>0x7fe0e4ebcff9 (?) (1 samples, 0.21%)</title><rect x="154" y="212" width="3" height="15" fill="rgb(242,77,33)"/><text x="157.00" y="222.50"></text></g><g><title>0x7fe0e4eb7ef6 (?) (1 samples, 0.21%)</title><rect x="154" y="228" width="3" height="15" fill="rgb(232,47,44)"/><text x="157.00" y="238.50"></text></g><g><title>0x7fe0e4eac962 (?) (1 samples, 0.21%)</title><rect x="154" y="244" width="3" height="15" fill="rgb(243,45,45)"/><text x="157.00" y="254.50"></text></g><g><title>0x7fe0e4ee07a7 (?) (1 samples, 0.21%)</title><rect x="154" y="260" width="3" height="15" fill="rgb(252,148,21)"/><text x="157.00" y="270.50"></text></g><g><title>0x7fe0e4ee0379 (?) (1 samples, 0.21%)</title><rect x="154" y="276" width="3" height="15" fill="rgb(244,29,3)"/><text x="157.00" y="286.50"></text></g><g><title>0x7fe0e533e8b8 (?) (1 samples, 0.21%)</title><rect x="154" y="292" width="3" height="15" fill="rgb(240,191,42)"/><text x="157.00" y="302.50"></text></g><g><title>0x7fe0e533cc7f (?) (1 samples, 0.21%)</title><rect x="154" y="308" width="3" height="15" fill="rgb(253,196,48)"/><text x="157.00" y="318.50"></text></g><g><title>0x7fe0e534f99c (?) (1 samples, 0.21%)</title><rect x="154" y="324" width="3" height="15" fill="rgb(222,83,9)"/><text x="157.00" y="334.50"></text></g><g><title>0x7fe0e503ec5b (?) (1 samples, 0.21%)</title><rect x="154" y="340" width="3" height="15" fill="rgb(252,24,5)"/><text x="157.00" y="350.50"></text></g><g><title>0x7fe0e503aead (?) (1 samples, 0.21%)</title><rect x="154" y="356" width="3" height="15" fill="rgb(254,213,46)"/><text x="157.00" y="366.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="157" y="260" width="2" height="15" fill="rgb(242,188,21)"/><text x="160.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="157" y="276" width="2" height="15" fill="rgb(230,169,53)"/><text x="160.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.42%)</title><rect x="157" y="212" width="5" height="15" fill="rgb(213,202,1)"/><text x="160.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="157" y="228" width="5" height="15" fill="rgb(244,163,39)"/><text x="160.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="157" y="244" width="5" height="15" fill="rgb(238,98,47)"/><text x="160.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="159" y="260" width="3" height="15" fill="rgb(241,25,35)"/><text x="162.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="159" y="276" width="3" height="15" fill="rgb(225,150,37)"/><text x="162.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="159" y="292" width="3" height="15" fill="rgb(254,43,25)"/><text x="162.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="169" y="292" width="2" height="15" fill="rgb(224,47,47)"/><text x="172.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="169" y="308" width="2" height="15" fill="rgb(233,56,21)"/><text x="172.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="171" y="340" width="5" height="15" fill="rgb(234,113,48)"/><text x="174.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="174" y="356" width="2" height="15" fill="rgb(221,210,3)"/><text x="177.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="176" y="340" width="3" height="15" fill="rgb(242,177,16)"/><text x="179.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="176" y="356" width="3" height="15" fill="rgb(223,23,3)"/><text x="179.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.21%)</title><rect x="208" y="356" width="3" height="15" fill="rgb(232,130,28)"/><text x="211.00" y="366.50"></text></g><g><title>0x7fe124eacdae (libc-2.29.so) (1 samples, 0.21%)</title><rect x="235" y="372" width="3" height="15" fill="rgb(239,60,25)"/><text x="238.00" y="382.50"></text></g><g><title>0x7fe124eacdb3 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="238" y="372" width="5" height="15" fill="rgb(226,69,25)"/><text x="241.00" y="382.50"></text></g><g><title>0x7fe12500be0a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="243" y="372" width="2" height="15" fill="rgb(234,28,8)"/><text x="246.00" y="382.50"></text></g><g><title>0x7fe12500be14 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="245" y="372" width="2" height="15" fill="rgb(221,137,14)"/><text x="248.00" y="382.50"></text></g><g><title>0x7fe12500be2f (libm-2.29.so) (1 samples, 0.21%)</title><rect x="247" y="372" width="3" height="15" fill="rgb(212,17,46)"/><text x="250.00" y="382.50"></text></g><g><title>0x7fe12500be5f (libm-2.29.so) (1 samples, 0.21%)</title><rect x="250" y="372" width="2" height="15" fill="rgb(251,222,18)"/><text x="253.00" y="382.50"></text></g><g><title>0x7fe12500be96 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="252" y="372" width="3" height="15" fill="rgb(206,44,52)"/><text x="255.00" y="382.50"></text></g><g><title>0x7fe12500be9e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="255" y="372" width="2" height="15" fill="rgb(245,193,44)"/><text x="258.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 6.86%)</title><rect x="179" y="340" width="81" height="15" fill="rgb(235,79,42)"/><text x="182.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 4.16%)</title><rect x="211" y="356" width="49" height="15" fill="rgb(251,34,19)"/><text x="214.00" y="366.50">onnx..</text></g><g><title>0x7fe12500bea2 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="257" y="372" width="3" height="15" fill="rgb(248,102,51)"/><text x="260.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.08%)</title><rect x="260" y="340" width="24" height="15" fill="rgb(247,184,25)"/><text x="263.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.08%)</title><rect x="260" y="356" width="24" height="15" fill="rgb(246,221,26)"/><text x="263.00" y="366.50">o..</text></g><g><title>0x7fe114958d50 (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="316" y="372" width="3" height="15" fill="rgb(214,222,8)"/><text x="319.00" y="382.50"></text></g><g><title>0x7fe124e8db1c (libc-2.29.so) (2 samples, 0.42%)</title><rect x="412" y="388" width="5" height="15" fill="rgb(245,225,34)"/><text x="415.00" y="398.50"></text></g><g><title>0x7fe124e8db24 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="417" y="388" width="2" height="15" fill="rgb(236,112,48)"/><text x="420.00" y="398.50"></text></g><g><title>0x7fe124e8db39 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="419" y="388" width="3" height="15" fill="rgb(210,65,0)"/><text x="422.00" y="398.50"></text></g><g><title>0x7fe124e8db61 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="422" y="388" width="5" height="15" fill="rgb(239,204,34)"/><text x="425.00" y="398.50"></text></g><g><title>0x7fe124e8db76 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="427" y="388" width="2" height="15" fill="rgb(227,17,18)"/><text x="430.00" y="398.50"></text></g><g><title>0x7fe124e8dd36 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="429" y="388" width="2" height="15" fill="rgb(208,165,43)"/><text x="432.00" y="398.50"></text></g><g><title>0x7fe124e8dd54 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="431" y="388" width="3" height="15" fill="rgb(236,178,30)"/><text x="434.00" y="398.50"></text></g><g><title>0x7fe124e8dd8d (libc-2.29.so) (1 samples, 0.21%)</title><rect x="434" y="388" width="2" height="15" fill="rgb(246,5,34)"/><text x="437.00" y="398.50"></text></g><g><title>0x7fe124e8ddb4 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="436" y="388" width="3" height="15" fill="rgb(235,5,30)"/><text x="439.00" y="398.50"></text></g><g><title>0x7fe124e8ddd2 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="439" y="388" width="5" height="15" fill="rgb(252,137,10)"/><text x="442.00" y="398.50"></text></g><g><title>0x7fe124e8ddec (libc-2.29.so) (1 samples, 0.21%)</title><rect x="444" y="388" width="2" height="15" fill="rgb(217,219,30)"/><text x="447.00" y="398.50"></text></g><g><title>0x7fe124e8dfd2 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="446" y="388" width="3" height="15" fill="rgb(229,83,0)"/><text x="449.00" y="398.50"></text></g><g><title>0x7fe124e8dfe6 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="449" y="388" width="2" height="15" fill="rgb(212,224,30)"/><text x="452.00" y="398.50"></text></g><g><title>0x7fe124e8e040 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="451" y="388" width="3" height="15" fill="rgb(250,168,26)"/><text x="454.00" y="398.50"></text></g><g><title>0x7fe124e8e050 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="454" y="388" width="2" height="15" fill="rgb(234,222,21)"/><text x="457.00" y="398.50"></text></g><g><title>0x7fe124e8e064 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="456" y="388" width="2" height="15" fill="rgb(208,208,14)"/><text x="459.00" y="398.50"></text></g><g><title>0x7fe124e8e368 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="458" y="388" width="3" height="15" fill="rgb(250,3,8)"/><text x="461.00" y="398.50"></text></g><g><title>0x7fe124e8e3ae (libc-2.29.so) (1 samples, 0.21%)</title><rect x="461" y="388" width="2" height="15" fill="rgb(237,175,24)"/><text x="464.00" y="398.50"></text></g><g><title>0x7fe124e8e3c4 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="463" y="388" width="3" height="15" fill="rgb(209,51,22)"/><text x="466.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (65 samples, 13.51%)</title><rect x="309" y="356" width="159" height="15" fill="rgb(209,126,50)"/><text x="312.00" y="366.50">operator new (libstd..</text></g><g><title>malloc (libc-2.29.so) (61 samples, 12.68%)</title><rect x="319" y="372" width="149" height="15" fill="rgb(220,141,39)"/><text x="322.00" y="382.50">malloc (libc-2.29.s..</text></g><g><title>0x7fe124e8e3e0 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="466" y="388" width="2" height="15" fill="rgb(218,33,50)"/><text x="469.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.04%)</title><rect x="468" y="356" width="13" height="15" fill="rgb(224,50,36)"/><text x="471.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="476" y="372" width="5" height="15" fill="rgb(249,158,26)"/><text x="479.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (5 samples, 1.04%)</title><rect x="481" y="356" width="12" height="15" fill="rgb(233,95,16)"/><text x="484.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 27.65%)</title><rect x="169" y="260" width="326" height="15" fill="rgb(246,49,8)"/><text x="172.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (133 samples, 27.65%)</title><rect x="169" y="276" width="326" height="15" fill="rgb(253,15,13)"/><text x="172.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (132 samples, 27.44%)</title><rect x="171" y="292" width="324" height="15" fill="rgb(216,69,49)"/><text x="174.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (132 samples, 27.44%)</title><rect x="171" y="308" width="324" height="15" fill="rgb(206,192,45)"/><text x="174.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (132 samples, 27.44%)</title><rect x="171" y="324" width="324" height="15" fill="rgb(217,60,32)"/><text x="174.00" y="334.50">onnxruntime::SequentialExecutor::Execute (o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 17.88%)</title><rect x="284" y="340" width="211" height="15" fill="rgb(252,57,24)"/><text x="287.00" y="350.50">onnxruntime::ml::ZipMapOp::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="493" y="356" width="2" height="15" fill="rgb(230,125,14)"/><text x="496.00" y="366.50"></text></g><g><title>onnxruntime::SequenceType&lt;onnxruntime::TensorSeq&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="495" y="260" width="3" height="15" fill="rgb(207,127,34)"/><text x="498.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="498" y="260" width="2" height="15" fill="rgb(226,74,1)"/><text x="501.00" y="270.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;long&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="498" y="276" width="2" height="15" fill="rgb(226,153,0)"/><text x="501.00" y="286.50"></text></g><g><title>0x7fe0e4e838e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="620" y="276" width="5" height="15" fill="rgb(253,219,32)"/><text x="623.00" y="286.50"></text></g><g><title>0x7fe0e4e84870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="625" y="276" width="3" height="15" fill="rgb(221,151,4)"/><text x="628.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="628" y="276" width="46" height="15" fill="rgb(239,40,41)"/><text x="631.00" y="286.50">pybi..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (72 samples, 14.97%)</title><rect x="500" y="260" width="177" height="15" fill="rgb(242,140,20)"/><text x="503.00" y="270.50">pybind11::detail::map_c..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="674" y="276" width="3" height="15" fill="rgb(237,76,32)"/><text x="677.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="677" y="260" width="5" height="15" fill="rgb(209,44,41)"/><text x="680.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="682" y="260" width="2" height="15" fill="rgb(241,223,1)"/><text x="685.00" y="270.50"></text></g><g><title>0x7fe124e8c90e (libc-2.29.so) (1 samples, 0.21%)</title><rect x="684" y="292" width="3" height="15" fill="rgb(213,29,36)"/><text x="687.00" y="302.50"></text></g><g><title>0x7fe124e8c92c (libc-2.29.so) (1 samples, 0.21%)</title><rect x="687" y="292" width="2" height="15" fill="rgb(249,208,7)"/><text x="690.00" y="302.50"></text></g><g><title>0x7fe124e8c945 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="689" y="292" width="2" height="15" fill="rgb(240,220,8)"/><text x="692.00" y="302.50"></text></g><g><title>0x7fe124e8c971 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="691" y="292" width="3" height="15" fill="rgb(234,170,0)"/><text x="694.00" y="302.50"></text></g><g><title>0x7fe124e8c9d3 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="694" y="292" width="2" height="15" fill="rgb(246,49,22)"/><text x="697.00" y="302.50"></text></g><g><title>0x7fe124e8cd07 (libc-2.29.so) (5 samples, 1.04%)</title><rect x="696" y="292" width="13" height="15" fill="rgb(209,219,44)"/><text x="699.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.62%)</title><rect x="709" y="292" width="7" height="15" fill="rgb(239,135,15)"/><text x="712.00" y="302.50"></text></g><g><title>0x7fe124e8c961 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="718" y="308" width="3" height="15" fill="rgb(207,27,37)"/><text x="721.00" y="318.50"></text></g><g><title>0x7fe124e8c998 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="721" y="308" width="2" height="15" fill="rgb(249,153,53)"/><text x="724.00" y="318.50"></text></g><g><title>0x7fe124e8ccf0 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="723" y="308" width="3" height="15" fill="rgb(245,120,8)"/><text x="726.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="726" y="308" width="2" height="15" fill="rgb(226,87,44)"/><text x="729.00" y="318.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="684" y="260" width="47" height="15" fill="rgb(225,105,6)"/><text x="687.00" y="270.50">std:..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.95%)</title><rect x="684" y="276" width="47" height="15" fill="rgb(246,108,12)"/><text x="687.00" y="286.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.25%)</title><rect x="716" y="292" width="15" height="15" fill="rgb(227,205,35)"/><text x="719.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="728" y="308" width="3" height="15" fill="rgb(217,95,27)"/><text x="731.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (233 samples, 48.44%)</title><rect x="162" y="244" width="571" height="15" fill="rgb(222,62,34)"/><text x="165.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime:..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::emplace_back&lt;pybind11::object&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="731" y="260" width="2" height="15" fill="rgb(228,204,2)"/><text x="734.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (242 samples, 50.31%)</title><rect x="142" y="132" width="594" height="15" fill="rgb(211,115,24)"/><text x="145.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (240 samples, 49.90%)</title><rect x="147" y="148" width="589" height="15" fill="rgb(216,196,23)"/><text x="150.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (239 samples, 49.69%)</title><rect x="149" y="164" width="587" height="15" fill="rgb(231,163,49)"/><text x="152.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (238 samples, 49.48%)</title><rect x="152" y="180" width="584" height="15" fill="rgb(240,165,12)"/><text x="155.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (238 samples, 49.48%)</title><rect x="152" y="196" width="584" height="15" fill="rgb(216,167,40)"/><text x="155.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (234 samples, 48.65%)</title><rect x="162" y="212" width="574" height="15" fill="rgb(237,218,35)"/><text x="165.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (234 samples, 48.65%)</title><rect x="162" y="228" width="574" height="15" fill="rgb(233,167,44)"/><text x="165.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(p..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="733" y="244" width="3" height="15" fill="rgb(206,190,26)"/><text x="736.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="733" y="260" width="3" height="15" fill="rgb(219,13,51)"/><text x="736.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="733" y="276" width="3" height="15" fill="rgb(247,103,32)"/><text x="736.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (280 samples, 58.21%)</title><rect x="51" y="68" width="687" height="15" fill="rgb(205,177,6)"/><text x="54.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (280 samples, 58.21%)</title><rect x="51" y="84" width="687" height="15" fill="rgb(235,11,1)"/><text x="54.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (280 samples, 58.21%)</title><rect x="51" y="100" width="687" height="15" fill="rgb(244,34,30)"/><text x="54.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (243 samples, 50.52%)</title><rect x="142" y="116" width="596" height="15" fill="rgb(250,82,0)"/><text x="145.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.21%)</title><rect x="736" y="132" width="2" height="15" fill="rgb(241,71,35)"/><text x="739.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.21%)</title><rect x="748" y="180" width="2" height="15" fill="rgb(248,83,27)"/><text x="751.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.21%)</title><rect x="770" y="212" width="2" height="15" fill="rgb(232,111,11)"/><text x="773.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.42%)</title><rect x="772" y="212" width="5" height="15" fill="rgb(245,22,26)"/><text x="775.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.42%)</title><rect x="772" y="228" width="5" height="15" fill="rgb(224,158,43)"/><text x="775.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.21%)</title><rect x="787" y="372" width="3" height="15" fill="rgb(234,91,46)"/><text x="790.00" y="382.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.62%)</title><rect x="785" y="324" width="7" height="15" fill="rgb(224,226,27)"/><text x="788.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.42%)</title><rect x="787" y="340" width="5" height="15" fill="rgb(224,92,10)"/><text x="790.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.42%)</title><rect x="787" y="356" width="5" height="15" fill="rgb(233,195,36)"/><text x="790.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="790" y="372" width="2" height="15" fill="rgb(253,45,8)"/><text x="793.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="790" y="388" width="2" height="15" fill="rgb(213,126,21)"/><text x="793.00" y="398.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 0.83%)</title><rect x="785" y="244" width="10" height="15" fill="rgb(219,216,13)"/><text x="788.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.83%)</title><rect x="785" y="260" width="10" height="15" fill="rgb(225,124,9)"/><text x="788.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 0.83%)</title><rect x="785" y="276" width="10" height="15" fill="rgb(240,210,48)"/><text x="788.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 0.83%)</title><rect x="785" y="292" width="10" height="15" fill="rgb(249,225,9)"/><text x="788.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (4 samples, 0.83%)</title><rect x="785" y="308" width="10" height="15" fill="rgb(210,161,17)"/><text x="788.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="792" y="324" width="3" height="15" fill="rgb(211,129,53)"/><text x="795.00" y="334.50"></text></g><g><title>0x7fe124ead103 (libc-2.29.so) (2 samples, 0.42%)</title><rect x="797" y="340" width="5" height="15" fill="rgb(250,215,26)"/><text x="800.00" y="350.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.21%)</title><rect x="802" y="340" width="2" height="15" fill="rgb(214,72,19)"/><text x="805.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="804" y="340" width="3" height="15" fill="rgb(228,168,7)"/><text x="807.00" y="350.50"></text></g><g><title>blas_memory_free (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="807" y="372" width="2" height="15" fill="rgb(213,52,10)"/><text x="810.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.25%)</title><rect x="797" y="276" width="15" height="15" fill="rgb(229,155,34)"/><text x="800.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (6 samples, 1.25%)</title><rect x="797" y="292" width="15" height="15" fill="rgb(229,86,30)"/><text x="800.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (6 samples, 1.25%)</title><rect x="797" y="308" width="15" height="15" fill="rgb(215,73,15)"/><text x="800.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (6 samples, 1.25%)</title><rect x="797" y="324" width="15" height="15" fill="rgb(250,59,31)"/><text x="800.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (2 samples, 0.42%)</title><rect x="807" y="340" width="5" height="15" fill="rgb(209,0,49)"/><text x="810.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.42%)</title><rect x="807" y="356" width="5" height="15" fill="rgb(239,49,42)"/><text x="810.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="809" y="372" width="3" height="15" fill="rgb(232,89,21)"/><text x="812.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="809" y="388" width="3" height="15" fill="rgb(251,185,48)"/><text x="812.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="812" y="276" width="2" height="15" fill="rgb(218,59,17)"/><text x="815.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (15 samples, 3.12%)</title><rect x="795" y="244" width="36" height="15" fill="rgb(229,10,9)"/><text x="798.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (14 samples, 2.91%)</title><rect x="797" y="260" width="34" height="15" fill="rgb(225,143,38)"/><text x="800.00" y="270.50">do..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.46%)</title><rect x="814" y="276" width="17" height="15" fill="rgb(233,180,30)"/><text x="817.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="831" y="260" width="3" height="15" fill="rgb(232,130,32)"/><text x="834.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="831" y="276" width="3" height="15" fill="rgb(249,133,37)"/><text x="834.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.21%)</title><rect x="831" y="292" width="3" height="15" fill="rgb(247,189,54)"/><text x="834.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.21%)</title><rect x="834" y="308" width="2" height="15" fill="rgb(210,191,18)"/><text x="837.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="834" y="324" width="2" height="15" fill="rgb(232,146,13)"/><text x="837.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="834" y="340" width="2" height="15" fill="rgb(236,157,33)"/><text x="837.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.21%)</title><rect x="834" y="356" width="2" height="15" fill="rgb(211,203,45)"/><text x="837.00" y="366.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.21%)</title><rect x="836" y="324" width="3" height="15" fill="rgb(234,206,36)"/><text x="839.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.42%)</title><rect x="836" y="308" width="5" height="15" fill="rgb(226,118,10)"/><text x="839.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.21%)</title><rect x="839" y="324" width="2" height="15" fill="rgb(239,26,20)"/><text x="842.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 1.46%)</title><rect x="841" y="308" width="17" height="15" fill="rgb(254,158,33)"/><text x="844.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 1.46%)</title><rect x="841" y="324" width="17" height="15" fill="rgb(236,116,27)"/><text x="844.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.46%)</title><rect x="841" y="340" width="17" height="15" fill="rgb(216,129,41)"/><text x="844.00" y="350.50"></text></g><g><title>0x7fe124eacdbb (libc-2.29.so) (1 samples, 0.21%)</title><rect x="856" y="356" width="2" height="15" fill="rgb(231,46,5)"/><text x="859.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (11 samples, 2.29%)</title><rect x="834" y="292" width="27" height="15" fill="rgb(222,219,15)"/><text x="837.00" y="302.50">i..</text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="858" y="308" width="3" height="15" fill="rgb(235,12,1)"/><text x="861.00" y="318.50"></text></g><g><title>0x7fe110154890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(210,27,44)"/><text x="864.00" y="350.50"></text></g><g><title>0x7fe12500be00 (libm-2.29.so) (2 samples, 0.42%)</title><rect x="878" y="356" width="5" height="15" fill="rgb(252,185,4)"/><text x="881.00" y="366.50"></text></g><g><title>0x7fe12500be4e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(211,142,44)"/><text x="886.00" y="366.50"></text></g><g><title>0x7fe110196214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.29%)</title><rect x="861" y="324" width="27" height="15" fill="rgb(206,209,53)"/><text x="864.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (10 samples, 2.08%)</title><rect x="863" y="340" width="25" height="15" fill="rgb(226,146,40)"/><text x="866.00" y="350.50">e..</text></g><g><title>0x7fe12500be71 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="885" y="356" width="3" height="15" fill="rgb(209,39,4)"/><text x="888.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (49 samples, 10.19%)</title><rect x="777" y="228" width="121" height="15" fill="rgb(212,222,40)"/><text x="780.00" y="238.50">_run (mlprodict..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (27 samples, 5.61%)</title><rect x="831" y="244" width="67" height="15" fill="rgb(210,16,12)"/><text x="834.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (26 samples, 5.41%)</title><rect x="834" y="260" width="64" height="15" fill="rgb(246,214,7)"/><text x="837.00" y="270.50">PyUFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (26 samples, 5.41%)</title><rect x="834" y="276" width="64" height="15" fill="rgb(241,133,0)"/><text x="837.00" y="286.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (15 samples, 3.12%)</title><rect x="861" y="292" width="37" height="15" fill="rgb(226,112,26)"/><text x="864.00" y="302.50">tri..</text></g><g><title>0x7fe11017433d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 3.12%)</title><rect x="861" y="308" width="37" height="15" fill="rgb(246,72,7)"/><text x="864.00" y="318.50">0x7..</text></g><g><title>0x7fe110196228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.83%)</title><rect x="888" y="324" width="10" height="15" fill="rgb(237,147,25)"/><text x="891.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.21%)</title><rect x="902" y="340" width="3" height="15" fill="rgb(253,4,31)"/><text x="905.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.21%)</title><rect x="907" y="372" width="3" height="15" fill="rgb(224,170,54)"/><text x="910.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.21%)</title><rect x="907" y="388" width="3" height="15" fill="rgb(236,57,6)"/><text x="910.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.62%)</title><rect x="912" y="388" width="8" height="15" fill="rgb(247,55,37)"/><text x="915.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.87%)</title><rect x="905" y="356" width="22" height="15" fill="rgb(234,97,0)"/><text x="908.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 1.46%)</title><rect x="910" y="372" width="17" height="15" fill="rgb(253,141,1)"/><text x="913.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.62%)</title><rect x="920" y="388" width="7" height="15" fill="rgb(212,161,24)"/><text x="923.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.21%)</title><rect x="927" y="356" width="2" height="15" fill="rgb(233,179,50)"/><text x="930.00" y="366.50"></text></g><g><title>array_sum (methods.c) (14 samples, 2.91%)</title><rect x="898" y="260" width="34" height="15" fill="rgb(223,225,48)"/><text x="901.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 2.91%)</title><rect x="898" y="276" width="34" height="15" fill="rgb(240,198,17)"/><text x="901.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 2.91%)</title><rect x="898" y="292" width="34" height="15" fill="rgb(208,210,17)"/><text x="901.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 2.70%)</title><rect x="900" y="308" width="32" height="15" fill="rgb(233,155,22)"/><text x="903.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 2.70%)</title><rect x="900" y="324" width="32" height="15" fill="rgb(242,213,18)"/><text x="903.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 2.29%)</title><rect x="905" y="340" width="27" height="15" fill="rgb(248,180,9)"/><text x="908.00" y="350.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.21%)</title><rect x="929" y="356" width="3" height="15" fill="rgb(224,126,39)"/><text x="932.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="929" y="372" width="3" height="15" fill="rgb(211,104,42)"/><text x="932.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="929" y="388" width="3" height="15" fill="rgb(250,35,40)"/><text x="932.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.21%)</title><rect x="929" y="404" width="3" height="15" fill="rgb(230,72,38)"/><text x="932.00" y="414.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.21%)</title><rect x="937" y="324" width="2" height="15" fill="rgb(215,175,16)"/><text x="940.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="937" y="340" width="2" height="15" fill="rgb(254,203,53)"/><text x="940.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="937" y="356" width="2" height="15" fill="rgb(225,211,29)"/><text x="940.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.21%)</title><rect x="937" y="372" width="2" height="15" fill="rgb(208,210,20)"/><text x="940.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.83%)</title><rect x="937" y="308" width="10" height="15" fill="rgb(253,73,27)"/><text x="940.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.62%)</title><rect x="939" y="324" width="8" height="15" fill="rgb(236,113,52)"/><text x="942.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.62%)</title><rect x="939" y="340" width="8" height="15" fill="rgb(240,219,21)"/><text x="942.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.62%)</title><rect x="939" y="356" width="8" height="15" fill="rgb(233,147,28)"/><text x="942.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="944" y="372" width="3" height="15" fill="rgb(244,179,52)"/><text x="947.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.25%)</title><rect x="937" y="292" width="15" height="15" fill="rgb(253,2,12)"/><text x="940.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.42%)</title><rect x="947" y="308" width="5" height="15" fill="rgb(206,73,28)"/><text x="950.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.21%)</title><rect x="949" y="324" width="3" height="15" fill="rgb(205,78,41)"/><text x="952.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="949" y="340" width="3" height="15" fill="rgb(211,181,53)"/><text x="952.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.21%)</title><rect x="949" y="356" width="3" height="15" fill="rgb(230,113,15)"/><text x="952.00" y="366.50"></text></g><g><title>_mm_andnot_ps (xmmintrin.h) (1 samples, 0.21%)</title><rect x="949" y="372" width="3" height="15" fill="rgb(242,124,41)"/><text x="952.00" y="382.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (85 samples, 17.67%)</title><rect x="745" y="132" width="209" height="15" fill="rgb(243,192,39)"/><text x="748.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (85 samples, 17.67%)</title><rect x="745" y="148" width="209" height="15" fill="rgb(231,209,23)"/><text x="748.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (84 samples, 17.46%)</title><rect x="748" y="164" width="206" height="15" fill="rgb(223,141,12)"/><text x="751.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (83 samples, 17.26%)</title><rect x="750" y="180" width="204" height="15" fill="rgb(233,134,16)"/><text x="753.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (77 samples, 16.01%)</title><rect x="765" y="196" width="189" height="15" fill="rgb(225,128,44)"/><text x="768.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (72 samples, 14.97%)</title><rect x="777" y="212" width="177" height="15" fill="rgb(242,225,26)"/><text x="780.00" y="222.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (23 samples, 4.78%)</title><rect x="898" y="228" width="56" height="15" fill="rgb(252,94,40)"/><text x="901.00" y="238.50">_run ..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (23 samples, 4.78%)</title><rect x="898" y="244" width="56" height="15" fill="rgb(229,142,38)"/><text x="901.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.87%)</title><rect x="932" y="260" width="22" height="15" fill="rgb(250,223,42)"/><text x="935.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.46%)</title><rect x="937" y="276" width="17" height="15" fill="rgb(214,148,18)"/><text x="940.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.21%)</title><rect x="952" y="292" width="2" height="15" fill="rgb(211,201,13)"/><text x="955.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (89 samples, 18.50%)</title><rect x="738" y="100" width="218" height="15" fill="rgb(251,213,42)"/><text x="741.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (87 samples, 18.09%)</title><rect x="743" y="116" width="213" height="15" fill="rgb(208,112,43)"/><text x="746.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.21%)</title><rect x="954" y="132" width="2" height="15" fill="rgb(206,196,46)"/><text x="957.00" y="142.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="956" y="788" width="3" height="15" fill="rgb(222,38,54)"/><text x="959.00" y="798.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (91 samples, 18.92%)</title><rect x="738" y="68" width="223" height="15" fill="rgb(218,95,4)"/><text x="741.00" y="78.50">profile_pyrt (bench_LogisticR..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (91 samples, 18.92%)</title><rect x="738" y="84" width="223" height="15" fill="rgb(222,119,42)"/><text x="741.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.42%)</title><rect x="956" y="100" width="5" height="15" fill="rgb(242,95,7)"/><text x="959.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.42%)</title><rect x="956" y="116" width="5" height="15" fill="rgb(218,142,22)"/><text x="959.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.42%)</title><rect x="956" y="132" width="5" height="15" fill="rgb(212,212,36)"/><text x="959.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.42%)</title><rect x="956" y="148" width="5" height="15" fill="rgb(206,157,37)"/><text x="959.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.42%)</title><rect x="956" y="164" width="5" height="15" fill="rgb(205,40,40)"/><text x="959.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.42%)</title><rect x="956" y="180" width="5" height="15" fill="rgb(249,143,37)"/><text x="959.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.42%)</title><rect x="956" y="196" width="5" height="15" fill="rgb(246,130,33)"/><text x="959.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="212" width="5" height="15" fill="rgb(216,185,37)"/><text x="959.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="228" width="5" height="15" fill="rgb(242,9,3)"/><text x="959.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="244" width="5" height="15" fill="rgb(206,120,47)"/><text x="959.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="956" y="260" width="5" height="15" fill="rgb(228,229,32)"/><text x="959.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="276" width="5" height="15" fill="rgb(218,195,52)"/><text x="959.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.42%)</title><rect x="956" y="292" width="5" height="15" fill="rgb(229,29,37)"/><text x="959.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="308" width="5" height="15" fill="rgb(217,68,10)"/><text x="959.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="324" width="5" height="15" fill="rgb(228,135,17)"/><text x="959.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="340" width="5" height="15" fill="rgb(249,21,26)"/><text x="959.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="956" y="356" width="5" height="15" fill="rgb(217,64,39)"/><text x="959.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="372" width="5" height="15" fill="rgb(253,45,28)"/><text x="959.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.42%)</title><rect x="956" y="388" width="5" height="15" fill="rgb(249,43,3)"/><text x="959.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="404" width="5" height="15" fill="rgb(205,225,25)"/><text x="959.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="420" width="5" height="15" fill="rgb(227,184,20)"/><text x="959.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="436" width="5" height="15" fill="rgb(217,44,20)"/><text x="959.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.42%)</title><rect x="956" y="452" width="5" height="15" fill="rgb(243,148,1)"/><text x="959.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.42%)</title><rect x="956" y="468" width="5" height="15" fill="rgb(230,206,39)"/><text x="959.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.42%)</title><rect x="956" y="484" width="5" height="15" fill="rgb(218,91,25)"/><text x="959.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.42%)</title><rect x="956" y="500" width="5" height="15" fill="rgb(235,138,37)"/><text x="959.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.42%)</title><rect x="956" y="516" width="5" height="15" fill="rgb(247,162,36)"/><text x="959.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.42%)</title><rect x="956" y="532" width="5" height="15" fill="rgb(238,206,39)"/><text x="959.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.42%)</title><rect x="956" y="548" width="5" height="15" fill="rgb(244,85,29)"/><text x="959.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (2 samples, 0.42%)</title><rect x="956" y="564" width="5" height="15" fill="rgb(207,148,51)"/><text x="959.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (2 samples, 0.42%)</title><rect x="956" y="580" width="5" height="15" fill="rgb(226,37,22)"/><text x="959.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.42%)</title><rect x="956" y="596" width="5" height="15" fill="rgb(210,224,50)"/><text x="959.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (2 samples, 0.42%)</title><rect x="956" y="612" width="5" height="15" fill="rgb(221,139,6)"/><text x="959.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (2 samples, 0.42%)</title><rect x="956" y="628" width="5" height="15" fill="rgb(228,57,35)"/><text x="959.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.42%)</title><rect x="956" y="644" width="5" height="15" fill="rgb(233,65,39)"/><text x="959.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (2 samples, 0.42%)</title><rect x="956" y="660" width="5" height="15" fill="rgb(254,183,34)"/><text x="959.00" y="670.50"></text></g><g><title>analyze_node (jinja2/idtracking.py) (2 samples, 0.42%)</title><rect x="956" y="676" width="5" height="15" fill="rgb(208,228,51)"/><text x="959.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.42%)</title><rect x="956" y="692" width="5" height="15" fill="rgb(253,21,45)"/><text x="959.00" y="702.50"></text></g><g><title>visit_For (jinja2/idtracking.py) (2 samples, 0.42%)</title><rect x="956" y="708" width="5" height="15" fill="rgb(226,125,37)"/><text x="959.00" y="718.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.42%)</title><rect x="956" y="724" width="5" height="15" fill="rgb(231,215,46)"/><text x="959.00" y="734.50"></text></g><g><title>visit_If (jinja2/idtracking.py) (2 samples, 0.42%)</title><rect x="956" y="740" width="5" height="15" fill="rgb(210,162,52)"/><text x="959.00" y="750.50"></text></g><g><title>inner_visit (jinja2/idtracking.py) (2 samples, 0.42%)</title><rect x="956" y="756" width="5" height="15" fill="rgb(214,32,27)"/><text x="959.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.42%)</title><rect x="956" y="772" width="5" height="15" fill="rgb(252,44,3)"/><text x="959.00" y="782.50"></text></g><g><title>visit_For (jinja2/idtracking.py) (1 samples, 0.21%)</title><rect x="959" y="788" width="2" height="15" fill="rgb(213,88,21)"/><text x="962.00" y="798.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="959" y="804" width="2" height="15" fill="rgb(213,217,11)"/><text x="962.00" y="814.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.21%)</title><rect x="959" y="820" width="2" height="15" fill="rgb(249,39,42)"/><text x="962.00" y="830.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.21%)</title><rect x="959" y="836" width="2" height="15" fill="rgb(219,142,0)"/><text x="962.00" y="846.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.21%)</title><rect x="974" y="180" width="2" height="15" fill="rgb(236,185,39)"/><text x="977.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="976" y="244" width="3" height="15" fill="rgb(212,153,52)"/><text x="979.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="976" y="260" width="3" height="15" fill="rgb(222,165,18)"/><text x="979.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.21%)</title><rect x="976" y="276" width="3" height="15" fill="rgb(216,47,47)"/><text x="979.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.21%)</title><rect x="976" y="292" width="3" height="15" fill="rgb(236,163,26)"/><text x="979.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.21%)</title><rect x="976" y="308" width="3" height="15" fill="rgb(236,133,30)"/><text x="979.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.21%)</title><rect x="979" y="292" width="2" height="15" fill="rgb(251,38,39)"/><text x="982.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.21%)</title><rect x="979" y="308" width="2" height="15" fill="rgb(247,181,49)"/><text x="982.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="979" y="324" width="2" height="15" fill="rgb(235,61,27)"/><text x="982.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="979" y="340" width="2" height="15" fill="rgb(245,169,19)"/><text x="982.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.21%)</title><rect x="979" y="356" width="2" height="15" fill="rgb(241,53,8)"/><text x="982.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.21%)</title><rect x="981" y="292" width="2" height="15" fill="rgb(220,214,40)"/><text x="984.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.21%)</title><rect x="981" y="308" width="2" height="15" fill="rgb(230,146,34)"/><text x="984.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.21%)</title><rect x="981" y="324" width="2" height="15" fill="rgb(215,173,10)"/><text x="984.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.83%)</title><rect x="986" y="308" width="10" height="15" fill="rgb(205,31,21)"/><text x="989.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.62%)</title><rect x="988" y="324" width="8" height="15" fill="rgb(207,51,30)"/><text x="991.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.66%)</title><rect x="979" y="276" width="19" height="15" fill="rgb(217,167,7)"/><text x="982.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 1.25%)</title><rect x="983" y="292" width="15" height="15" fill="rgb(206,116,45)"/><text x="986.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.21%)</title><rect x="996" y="308" width="2" height="15" fill="rgb(214,155,20)"/><text x="999.00" y="318.50"></text></g><g><title>array_sum (methods.c) (10 samples, 2.08%)</title><rect x="976" y="180" width="25" height="15" fill="rgb(234,87,29)"/><text x="979.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (10 samples, 2.08%)</title><rect x="976" y="196" width="25" height="15" fill="rgb(228,180,10)"/><text x="979.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 2.08%)</title><rect x="976" y="212" width="25" height="15" fill="rgb(230,58,52)"/><text x="979.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.08%)</title><rect x="976" y="228" width="25" height="15" fill="rgb(234,189,24)"/><text x="979.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.87%)</title><rect x="979" y="244" width="22" height="15" fill="rgb(212,131,44)"/><text x="982.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.87%)</title><rect x="979" y="260" width="22" height="15" fill="rgb(234,143,39)"/><text x="982.00" y="270.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.21%)</title><rect x="998" y="276" width="3" height="15" fill="rgb(205,56,4)"/><text x="1001.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="998" y="292" width="3" height="15" fill="rgb(247,116,28)"/><text x="1001.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="998" y="308" width="3" height="15" fill="rgb(215,162,6)"/><text x="1001.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1001" y="244" width="2" height="15" fill="rgb(243,5,41)"/><text x="1004.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.21%)</title><rect x="1003" y="276" width="3" height="15" fill="rgb(213,200,33)"/><text x="1006.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.21%)</title><rect x="1003" y="292" width="3" height="15" fill="rgb(237,21,45)"/><text x="1006.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.21%)</title><rect x="1003" y="308" width="3" height="15" fill="rgb(254,70,54)"/><text x="1006.00" y="318.50"></text></g><g><title>array_add (number.c) (4 samples, 0.83%)</title><rect x="1001" y="196" width="9" height="15" fill="rgb(249,194,34)"/><text x="1004.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.83%)</title><rect x="1001" y="212" width="9" height="15" fill="rgb(215,128,24)"/><text x="1004.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.83%)</title><rect x="1001" y="228" width="9" height="15" fill="rgb(242,11,14)"/><text x="1004.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.62%)</title><rect x="1003" y="244" width="7" height="15" fill="rgb(251,23,31)"/><text x="1006.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.62%)</title><rect x="1003" y="260" width="7" height="15" fill="rgb(250,157,10)"/><text x="1006.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.42%)</title><rect x="1006" y="276" width="4" height="15" fill="rgb(225,149,26)"/><text x="1009.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.42%)</title><rect x="1006" y="292" width="4" height="15" fill="rgb(251,196,25)"/><text x="1009.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.42%)</title><rect x="1006" y="308" width="4" height="15" fill="rgb(249,78,51)"/><text x="1009.00" y="318.50"></text></g><g><title>0x7fe124eacd6a (libc-2.29.so) (2 samples, 0.42%)</title><rect x="1006" y="324" width="4" height="15" fill="rgb(243,187,13)"/><text x="1009.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.21%)</title><rect x="1018" y="212" width="2" height="15" fill="rgb(212,85,21)"/><text x="1021.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.42%)</title><rect x="1020" y="212" width="5" height="15" fill="rgb(245,183,27)"/><text x="1023.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.21%)</title><rect x="1030" y="228" width="2" height="15" fill="rgb(252,179,43)"/><text x="1033.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 1.04%)</title><rect x="1025" y="212" width="12" height="15" fill="rgb(220,161,29)"/><text x="1028.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.42%)</title><rect x="1032" y="228" width="5" height="15" fill="rgb(249,27,54)"/><text x="1035.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.42%)</title><rect x="1042" y="228" width="5" height="15" fill="rgb(207,183,47)"/><text x="1045.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (16 samples, 3.33%)</title><rect x="1010" y="196" width="40" height="15" fill="rgb(219,196,10)"/><text x="1013.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.04%)</title><rect x="1037" y="212" width="13" height="15" fill="rgb(217,69,5)"/><text x="1040.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.21%)</title><rect x="1047" y="228" width="3" height="15" fill="rgb(232,33,47)"/><text x="1050.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.62%)</title><rect x="1050" y="196" width="7" height="15" fill="rgb(245,51,52)"/><text x="1053.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.42%)</title><rect x="1052" y="212" width="5" height="15" fill="rgb(228,208,5)"/><text x="1055.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.42%)</title><rect x="1057" y="212" width="5" height="15" fill="rgb(253,186,39)"/><text x="1060.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.62%)</title><rect x="1062" y="212" width="7" height="15" fill="rgb(207,135,53)"/><text x="1065.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.42%)</title><rect x="1069" y="212" width="5" height="15" fill="rgb(254,59,44)"/><text x="1072.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.21%)</title><rect x="1074" y="228" width="3" height="15" fill="rgb(221,204,47)"/><text x="1077.00" y="238.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="1082" y="308" width="2" height="15" fill="rgb(239,37,23)"/><text x="1085.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.62%)</title><rect x="1079" y="260" width="7" height="15" fill="rgb(243,214,13)"/><text x="1082.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.62%)</title><rect x="1079" y="276" width="7" height="15" fill="rgb(243,218,43)"/><text x="1082.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.62%)</title><rect x="1079" y="292" width="7" height="15" fill="rgb(218,211,1)"/><text x="1082.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="1084" y="308" width="2" height="15" fill="rgb(223,183,20)"/><text x="1087.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.42%)</title><rect x="1089" y="292" width="5" height="15" fill="rgb(221,228,6)"/><text x="1092.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.42%)</title><rect x="1089" y="308" width="5" height="15" fill="rgb(236,190,7)"/><text x="1092.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="1091" y="324" width="3" height="15" fill="rgb(251,103,5)"/><text x="1094.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.83%)</title><rect x="1086" y="260" width="10" height="15" fill="rgb(228,145,7)"/><text x="1089.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.62%)</title><rect x="1089" y="276" width="7" height="15" fill="rgb(241,229,13)"/><text x="1092.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.21%)</title><rect x="1094" y="292" width="2" height="15" fill="rgb(221,113,48)"/><text x="1097.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.21%)</title><rect x="1094" y="308" width="2" height="15" fill="rgb(225,68,20)"/><text x="1097.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.21%)</title><rect x="1094" y="324" width="2" height="15" fill="rgb(223,65,5)"/><text x="1097.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="1094" y="340" width="2" height="15" fill="rgb(235,73,48)"/><text x="1097.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.21%)</title><rect x="1094" y="356" width="2" height="15" fill="rgb(222,122,41)"/><text x="1097.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.21%)</title><rect x="1094" y="372" width="2" height="15" fill="rgb(251,109,4)"/><text x="1097.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1094" y="388" width="2" height="15" fill="rgb(227,193,13)"/><text x="1097.00" y="398.50"></text></g><g><title>0x7fe124e8db12 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1094" y="404" width="2" height="15" fill="rgb(210,114,22)"/><text x="1097.00" y="414.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.21%)</title><rect x="1096" y="260" width="3" height="15" fill="rgb(250,85,49)"/><text x="1099.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1099" y="260" width="2" height="15" fill="rgb(230,175,20)"/><text x="1102.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1099" y="276" width="2" height="15" fill="rgb(236,184,39)"/><text x="1102.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.21%)</title><rect x="1099" y="292" width="2" height="15" fill="rgb(225,196,22)"/><text x="1102.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.21%)</title><rect x="1099" y="308" width="2" height="15" fill="rgb(209,60,5)"/><text x="1102.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.21%)</title><rect x="1099" y="324" width="2" height="15" fill="rgb(219,226,54)"/><text x="1102.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.21%)</title><rect x="1099" y="340" width="2" height="15" fill="rgb(230,112,42)"/><text x="1102.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (42 samples, 8.73%)</title><rect x="1001" y="180" width="103" height="15" fill="rgb(206,227,39)"/><text x="1004.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 3.95%)</title><rect x="1057" y="196" width="47" height="15" fill="rgb(210,69,49)"/><text x="1060.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 2.49%)</title><rect x="1074" y="212" width="30" height="15" fill="rgb(222,38,7)"/><text x="1077.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.29%)</title><rect x="1077" y="228" width="27" height="15" fill="rgb(243,6,15)"/><text x="1080.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 2.29%)</title><rect x="1077" y="244" width="27" height="15" fill="rgb(247,124,42)"/><text x="1080.00" y="254.50">P..</text></g><g><title>_validate_num_dims (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1101" y="260" width="3" height="15" fill="rgb(211,212,45)"/><text x="1104.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.21%)</title><rect x="1106" y="196" width="3" height="15" fill="rgb(248,225,39)"/><text x="1109.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.21%)</title><rect x="1106" y="212" width="3" height="15" fill="rgb(233,218,49)"/><text x="1109.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.21%)</title><rect x="1106" y="228" width="3" height="15" fill="rgb(228,27,3)"/><text x="1109.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.21%)</title><rect x="1106" y="244" width="3" height="15" fill="rgb(247,202,1)"/><text x="1109.00" y="254.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (2 samples, 0.42%)</title><rect x="1109" y="244" width="4" height="15" fill="rgb(251,124,23)"/><text x="1112.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (2 samples, 0.42%)</title><rect x="1109" y="260" width="4" height="15" fill="rgb(230,64,11)"/><text x="1112.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (2 samples, 0.42%)</title><rect x="1109" y="276" width="4" height="15" fill="rgb(214,124,29)"/><text x="1112.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.42%)</title><rect x="1109" y="292" width="4" height="15" fill="rgb(218,58,46)"/><text x="1112.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.21%)</title><rect x="1113" y="260" width="3" height="15" fill="rgb(218,62,49)"/><text x="1116.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1113" y="276" width="3" height="15" fill="rgb(237,144,13)"/><text x="1116.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.04%)</title><rect x="1109" y="228" width="12" height="15" fill="rgb(214,99,1)"/><text x="1112.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.62%)</title><rect x="1113" y="244" width="8" height="15" fill="rgb(207,218,44)"/><text x="1116.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.42%)</title><rect x="1116" y="260" width="5" height="15" fill="rgb(248,155,18)"/><text x="1119.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.42%)</title><rect x="1116" y="276" width="5" height="15" fill="rgb(239,174,19)"/><text x="1119.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.21%)</title><rect x="1118" y="292" width="3" height="15" fill="rgb(243,119,14)"/><text x="1121.00" y="302.50"></text></g><g><title>0x7fe1101759da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1123" y="244" width="3" height="15" fill="rgb(227,214,36)"/><text x="1126.00" y="254.50"></text></g><g><title>0x7fe1101759dd (?) (1 samples, 0.21%)</title><rect x="1126" y="244" width="2" height="15" fill="rgb(235,221,51)"/><text x="1129.00" y="254.50"></text></g><g><title>0x7fe110196279 (?) (1 samples, 0.21%)</title><rect x="1126" y="260" width="2" height="15" fill="rgb(230,53,30)"/><text x="1129.00" y="270.50"></text></g><g><title>0x7fe11029f9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.42%)</title><rect x="1128" y="276" width="5" height="15" fill="rgb(215,168,38)"/><text x="1131.00" y="286.50"></text></g><g><title>0x7fe124fd81b0 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1138" y="292" width="2" height="15" fill="rgb(225,192,27)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7fe12505ec18 (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1140" y="292" width="3" height="15" fill="rgb(218,78,21)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7fe12505ec2e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1143" y="292" width="2" height="15" fill="rgb(228,130,24)"/><text x="1146.00" y="302.50"></text></g><g><title>0x7fe12505ec3e (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1145" y="292" width="3" height="15" fill="rgb(250,150,30)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7fe12505ec6a (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1148" y="292" width="2" height="15" fill="rgb(217,23,37)"/><text x="1151.00" y="302.50"></text></g><g><title>0x7fe110196265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.08%)</title><rect x="1128" y="260" width="25" height="15" fill="rgb(217,140,24)"/><text x="1131.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (8 samples, 1.66%)</title><rect x="1133" y="276" width="20" height="15" fill="rgb(237,153,33)"/><text x="1136.00" y="286.50"></text></g><g><title>0x7fe12505ec7b (libm-2.29.so) (1 samples, 0.21%)</title><rect x="1150" y="292" width="3" height="15" fill="rgb(230,153,42)"/><text x="1153.00" y="302.50"></text></g><g><title>0x7fe110196275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.21%)</title><rect x="1153" y="260" width="2" height="15" fill="rgb(229,192,25)"/><text x="1156.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (26 samples, 5.41%)</title><rect x="1109" y="212" width="63" height="15" fill="rgb(238,129,31)"/><text x="1112.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (21 samples, 4.37%)</title><rect x="1121" y="228" width="51" height="15" fill="rgb(212,201,0)"/><text x="1124.00" y="238.50">trivi..</text></g><g><title>0x7fe1101759dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 3.74%)</title><rect x="1128" y="244" width="44" height="15" fill="rgb(219,186,13)"/><text x="1131.00" y="254.50">0x7f..</text></g><g><title>0x7fe110196279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.46%)</title><rect x="1155" y="260" width="17" height="15" fill="rgb(229,72,37)"/><text x="1158.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.62%)</title><rect x="1172" y="212" width="8" height="15" fill="rgb(236,64,21)"/><text x="1175.00" y="222.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.21%)</title><rect x="1177" y="228" width="3" height="15" fill="rgb(250,101,11)"/><text x="1180.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (86 samples, 17.88%)</title><rect x="971" y="164" width="211" height="15" fill="rgb(251,121,1)"/><text x="974.00" y="174.50">_predict_proba_lr (sklearn/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 6.65%)</title><rect x="1104" y="180" width="78" height="15" fill="rgb(241,204,48)"/><text x="1107.00" y="190.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (30 samples, 6.24%)</title><rect x="1109" y="196" width="73" height="15" fill="rgb(226,134,6)"/><text x="1112.00" y="206.50">PyUFunc_..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.21%)</title><rect x="1180" y="212" width="2" height="15" fill="rgb(234,20,9)"/><text x="1183.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.21%)</title><rect x="1180" y="228" width="2" height="15" fill="rgb(242,66,52)"/><text x="1183.00" y="238.50"></text></g><g><title>all (481 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,115,16)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (481 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(211,132,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (93 samples, 19.33%)</title><rect x="961" y="68" width="229" height="15" fill="rgb(208,84,3)"/><text x="964.00" y="78.50">profile_skl (bench_LogisticReg..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (93 samples, 19.33%)</title><rect x="961" y="84" width="229" height="15" fill="rgb(210,103,12)"/><text x="964.00" y="94.50">setup_profile (bench_LogisticR..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1000_4_12_float_.py) (93 samples, 19.33%)</title><rect x="961" y="100" width="229" height="15" fill="rgb(217,91,9)"/><text x="964.00" y="110.50">profile (bench_LogisticRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (91 samples, 18.92%)</title><rect x="966" y="116" width="224" height="15" fill="rgb(215,120,30)"/><text x="969.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (91 samples, 18.92%)</title><rect x="966" y="132" width="224" height="15" fill="rgb(218,164,7)"/><text x="969.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (91 samples, 18.92%)</title><rect x="966" y="148" width="224" height="15" fill="rgb(233,178,6)"/><text x="969.00" y="158.50">predict_proba (sklearn/linear..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.62%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(223,26,45)"/><text x="1185.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.62%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(238,217,29)"/><text x="1185.00" y="190.50"></text></g></g></svg>