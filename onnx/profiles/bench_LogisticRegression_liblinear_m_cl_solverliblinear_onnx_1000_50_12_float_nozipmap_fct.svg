<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(228,120,24)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(229,45,29)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(224,130,36)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(237,126,39)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(224,45,3)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(212,217,1)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.31%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(247,139,22)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(222,174,10)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(222,26,35)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(220,119,40)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(206,101,25)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(224,95,19)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(227,98,50)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(244,204,24)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(234,21,47)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(235,110,1)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(227,64,10)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(244,228,3)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(243,150,42)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(240,133,22)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(247,57,45)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.31%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(240,32,15)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(248,109,33)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(207,18,21)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(230,179,37)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(219,18,22)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(228,1,46)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(220,93,2)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(221,42,41)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(247,163,5)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(223,41,36)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(240,150,1)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1140" width="3" height="15" fill="rgb(239,92,21)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1156" width="3" height="15" fill="rgb(222,146,40)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1172" width="3" height="15" fill="rgb(239,5,36)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="1188" width="3" height="15" fill="rgb(205,139,10)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1204" width="3" height="15" fill="rgb(242,70,21)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.31%)</title><rect x="10" y="1220" width="3" height="15" fill="rgb(254,73,3)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1236" width="3" height="15" fill="rgb(233,141,36)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1252" width="3" height="15" fill="rgb(208,102,50)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1268" width="3" height="15" fill="rgb(221,42,35)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="1284" width="3" height="15" fill="rgb(237,17,16)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="10" y="1300" width="3" height="15" fill="rgb(238,26,47)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.31%)</title><rect x="10" y="1316" width="3" height="15" fill="rgb(210,98,25)"/><text x="13.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.31%)</title><rect x="10" y="1332" width="3" height="15" fill="rgb(239,130,17)"/><text x="13.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.31%)</title><rect x="10" y="1348" width="3" height="15" fill="rgb(206,113,41)"/><text x="13.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.31%)</title><rect x="10" y="1364" width="3" height="15" fill="rgb(208,27,40)"/><text x="13.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.31%)</title><rect x="10" y="1380" width="3" height="15" fill="rgb(253,96,47)"/><text x="13.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.31%)</title><rect x="10" y="1396" width="3" height="15" fill="rgb(235,71,44)"/><text x="13.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.31%)</title><rect x="10" y="1412" width="3" height="15" fill="rgb(246,152,22)"/><text x="13.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.31%)</title><rect x="10" y="1428" width="3" height="15" fill="rgb(207,182,52)"/><text x="13.00" y="1438.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.31%)</title><rect x="10" y="1444" width="3" height="15" fill="rgb(238,76,48)"/><text x="13.00" y="1454.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.15%)</title><rect x="11" y="1460" width="2" height="15" fill="rgb(245,117,42)"/><text x="14.00" y="1470.50"></text></g><g><title>0x7f5453fb80e9 (?) (1 samples, 0.15%)</title><rect x="11" y="1476" width="2" height="15" fill="rgb(225,189,5)"/><text x="14.00" y="1486.50"></text></g><g><title>0x7f5453fa9548 (?) (1 samples, 0.15%)</title><rect x="11" y="1492" width="2" height="15" fill="rgb(212,65,6)"/><text x="14.00" y="1502.50"></text></g><g><title>0x7f5453fa5944 (?) (1 samples, 0.15%)</title><rect x="11" y="1508" width="2" height="15" fill="rgb(222,218,2)"/><text x="14.00" y="1518.50"></text></g><g><title>0x7f5453fb8fe6 (?) (1 samples, 0.15%)</title><rect x="11" y="1524" width="2" height="15" fill="rgb(238,28,46)"/><text x="14.00" y="1534.50"></text></g><g><title>0x7f5453fa30b0 (?) (1 samples, 0.15%)</title><rect x="11" y="1540" width="2" height="15" fill="rgb(211,189,52)"/><text x="14.00" y="1550.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="11" y="1556" width="2" height="15" fill="rgb(247,194,9)"/><text x="14.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="836" width="2" height="15" fill="rgb(249,149,4)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="852" width="2" height="15" fill="rgb(209,141,4)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(226,14,19)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(206,151,4)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(227,223,5)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.15%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(230,29,3)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(236,115,16)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(223,120,45)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(226,162,45)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(208,227,8)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(221,204,2)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(244,114,1)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(240,201,50)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1044" width="2" height="15" fill="rgb(206,200,4)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1060" width="2" height="15" fill="rgb(237,180,8)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="1076" width="2" height="15" fill="rgb(218,139,42)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1092" width="2" height="15" fill="rgb(205,77,7)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.15%)</title><rect x="13" y="1108" width="2" height="15" fill="rgb(229,79,25)"/><text x="16.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1124" width="2" height="15" fill="rgb(246,127,25)"/><text x="16.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1140" width="2" height="15" fill="rgb(229,18,34)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1156" width="2" height="15" fill="rgb(236,22,17)"/><text x="16.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1172" width="2" height="15" fill="rgb(211,27,41)"/><text x="16.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1188" width="2" height="15" fill="rgb(243,5,53)"/><text x="16.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="1204" width="2" height="15" fill="rgb(251,4,29)"/><text x="16.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1220" width="2" height="15" fill="rgb(216,72,21)"/><text x="16.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.15%)</title><rect x="13" y="1236" width="2" height="15" fill="rgb(207,155,38)"/><text x="16.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1252" width="2" height="15" fill="rgb(232,112,27)"/><text x="16.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1268" width="2" height="15" fill="rgb(227,97,1)"/><text x="16.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1284" width="2" height="15" fill="rgb(231,129,40)"/><text x="16.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1300" width="2" height="15" fill="rgb(238,41,42)"/><text x="16.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1316" width="2" height="15" fill="rgb(224,213,26)"/><text x="16.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="1332" width="2" height="15" fill="rgb(218,91,9)"/><text x="16.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1348" width="2" height="15" fill="rgb(219,74,19)"/><text x="16.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.15%)</title><rect x="13" y="1364" width="2" height="15" fill="rgb(223,60,43)"/><text x="16.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="13" y="1380" width="2" height="15" fill="rgb(240,66,38)"/><text x="16.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="13" y="1396" width="2" height="15" fill="rgb(213,89,46)"/><text x="16.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.15%)</title><rect x="13" y="1412" width="2" height="15" fill="rgb(231,134,45)"/><text x="16.00" y="1422.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.15%)</title><rect x="13" y="1428" width="2" height="15" fill="rgb(250,186,45)"/><text x="16.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.46%)</title><rect x="13" y="628" width="6" height="15" fill="rgb(248,206,23)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="644" width="6" height="15" fill="rgb(248,75,3)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="660" width="6" height="15" fill="rgb(207,212,17)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="676" width="6" height="15" fill="rgb(215,62,5)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="13" y="692" width="6" height="15" fill="rgb(232,194,26)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="708" width="6" height="15" fill="rgb(249,34,24)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.46%)</title><rect x="13" y="724" width="6" height="15" fill="rgb(233,75,45)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="740" width="6" height="15" fill="rgb(211,20,52)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="756" width="6" height="15" fill="rgb(234,92,35)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="772" width="6" height="15" fill="rgb(218,204,34)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="13" y="788" width="6" height="15" fill="rgb(243,16,34)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="13" y="804" width="6" height="15" fill="rgb(244,220,36)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.46%)</title><rect x="13" y="820" width="6" height="15" fill="rgb(235,15,1)"/><text x="16.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="836" width="4" height="15" fill="rgb(218,5,44)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="852" width="4" height="15" fill="rgb(216,64,50)"/><text x="18.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="868" width="4" height="15" fill="rgb(221,181,38)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="884" width="4" height="15" fill="rgb(248,49,35)"/><text x="18.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="900" width="4" height="15" fill="rgb(231,167,38)"/><text x="18.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="916" width="4" height="15" fill="rgb(212,93,19)"/><text x="18.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="932" width="4" height="15" fill="rgb(245,53,53)"/><text x="18.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.31%)</title><rect x="15" y="948" width="4" height="15" fill="rgb(241,5,35)"/><text x="18.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="964" width="4" height="15" fill="rgb(209,121,33)"/><text x="18.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="980" width="4" height="15" fill="rgb(234,184,24)"/><text x="18.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="996" width="4" height="15" fill="rgb(218,224,2)"/><text x="18.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1012" width="4" height="15" fill="rgb(221,154,43)"/><text x="18.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1028" width="4" height="15" fill="rgb(250,165,2)"/><text x="18.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="1044" width="4" height="15" fill="rgb(223,211,20)"/><text x="18.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1060" width="4" height="15" fill="rgb(252,52,27)"/><text x="18.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1076" width="4" height="15" fill="rgb(205,205,25)"/><text x="18.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1092" width="4" height="15" fill="rgb(218,226,53)"/><text x="18.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1108" width="4" height="15" fill="rgb(239,156,41)"/><text x="18.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1124" width="4" height="15" fill="rgb(218,193,14)"/><text x="18.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (2 samples, 0.31%)</title><rect x="15" y="1140" width="4" height="15" fill="rgb(206,124,24)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1156" width="4" height="15" fill="rgb(235,160,31)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1172" width="4" height="15" fill="rgb(217,131,1)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1188" width="4" height="15" fill="rgb(239,210,34)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1204" width="4" height="15" fill="rgb(229,39,19)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1220" width="4" height="15" fill="rgb(209,89,8)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (2 samples, 0.31%)</title><rect x="15" y="1236" width="4" height="15" fill="rgb(223,162,14)"/><text x="18.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1252" width="4" height="15" fill="rgb(246,45,15)"/><text x="18.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1268" width="4" height="15" fill="rgb(229,118,44)"/><text x="18.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1284" width="4" height="15" fill="rgb(234,154,18)"/><text x="18.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1300" width="4" height="15" fill="rgb(206,214,53)"/><text x="18.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1316" width="4" height="15" fill="rgb(250,26,3)"/><text x="18.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (2 samples, 0.31%)</title><rect x="15" y="1332" width="4" height="15" fill="rgb(224,224,35)"/><text x="18.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1348" width="4" height="15" fill="rgb(240,181,17)"/><text x="18.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1364" width="4" height="15" fill="rgb(237,195,37)"/><text x="18.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1380" width="4" height="15" fill="rgb(244,54,33)"/><text x="18.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1396" width="4" height="15" fill="rgb(224,172,37)"/><text x="18.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1412" width="4" height="15" fill="rgb(229,73,35)"/><text x="18.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1428" width="4" height="15" fill="rgb(239,97,14)"/><text x="18.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1444" width="4" height="15" fill="rgb(225,74,40)"/><text x="18.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1460" width="4" height="15" fill="rgb(234,60,29)"/><text x="18.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (2 samples, 0.31%)</title><rect x="15" y="1476" width="4" height="15" fill="rgb(251,49,27)"/><text x="18.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1492" width="4" height="15" fill="rgb(229,216,0)"/><text x="18.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1508" width="4" height="15" fill="rgb(208,42,17)"/><text x="18.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="15" y="1524" width="4" height="15" fill="rgb(253,179,18)"/><text x="18.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1540" width="4" height="15" fill="rgb(214,212,46)"/><text x="18.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1556" width="4" height="15" fill="rgb(210,217,25)"/><text x="18.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="15" y="1572" width="4" height="15" fill="rgb(232,224,12)"/><text x="18.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(240,153,5)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(233,86,35)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(219,192,5)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(244,112,3)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(242,161,50)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(248,87,38)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 0.92%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(219,125,31)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(222,192,39)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(244,61,20)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(230,117,11)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(222,86,6)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(232,77,46)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 0.92%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(219,217,43)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(239,111,20)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(228,41,42)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(249,73,26)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(217,73,33)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(220,199,42)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.15%)</title><rect x="19" y="628" width="1" height="15" fill="rgb(217,65,40)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="644" width="1" height="15" fill="rgb(221,190,37)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="660" width="1" height="15" fill="rgb(208,43,18)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="676" width="1" height="15" fill="rgb(253,134,29)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="692" width="1" height="15" fill="rgb(225,213,30)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="708" width="1" height="15" fill="rgb(235,213,7)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py) (1 samples, 0.15%)</title><rect x="19" y="724" width="1" height="15" fill="rgb(235,166,8)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="740" width="1" height="15" fill="rgb(227,151,41)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="756" width="1" height="15" fill="rgb(210,73,48)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="772" width="1" height="15" fill="rgb(221,181,28)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(211,76,8)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="804" width="1" height="15" fill="rgb(234,192,48)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.15%)</title><rect x="19" y="820" width="1" height="15" fill="rgb(240,83,27)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="836" width="1" height="15" fill="rgb(207,142,46)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="852" width="1" height="15" fill="rgb(253,110,16)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="19" y="868" width="1" height="15" fill="rgb(216,62,8)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="884" width="1" height="15" fill="rgb(213,60,38)"/><text x="22.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="900" width="1" height="15" fill="rgb(236,70,35)"/><text x="22.00" y="910.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="19" y="916" width="1" height="15" fill="rgb(225,45,12)"/><text x="22.00" y="926.50"></text></g><g><title>Series (pandas/core/series.py) (1 samples, 0.15%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(240,83,46)"/><text x="23.00" y="990.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.15%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(215,45,7)"/><text x="23.00" y="1006.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.15%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(209,158,0)"/><text x="23.00" y="1022.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(216,31,42)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.15%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(250,215,13)"/><text x="25.00" y="1518.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.15%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(232,141,18)"/><text x="25.00" y="1534.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.15%)</title><rect x="22" y="1540" width="2" height="15" fill="rgb(249,69,20)"/><text x="25.00" y="1550.50"></text></g><g><title>__contains__ (_collections_abc.py) (1 samples, 0.15%)</title><rect x="22" y="1556" width="2" height="15" fill="rgb(248,182,25)"/><text x="25.00" y="1566.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.46%)</title><rect x="20" y="580" width="6" height="15" fill="rgb(253,108,38)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="596" width="6" height="15" fill="rgb(221,223,12)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="612" width="6" height="15" fill="rgb(216,201,52)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="628" width="6" height="15" fill="rgb(250,32,32)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="20" y="644" width="6" height="15" fill="rgb(220,123,5)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="660" width="6" height="15" fill="rgb(226,114,29)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.46%)</title><rect x="20" y="676" width="6" height="15" fill="rgb(237,141,0)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="692" width="6" height="15" fill="rgb(214,218,49)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="708" width="6" height="15" fill="rgb(224,176,36)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="724" width="6" height="15" fill="rgb(233,89,48)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="20" y="740" width="6" height="15" fill="rgb(249,62,32)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="756" width="6" height="15" fill="rgb(209,39,20)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.46%)</title><rect x="20" y="772" width="6" height="15" fill="rgb(251,45,53)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="788" width="6" height="15" fill="rgb(226,137,32)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="804" width="6" height="15" fill="rgb(205,36,18)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="820" width="6" height="15" fill="rgb(232,94,21)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="20" y="836" width="6" height="15" fill="rgb(221,87,27)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="852" width="6" height="15" fill="rgb(206,161,13)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.46%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(229,208,47)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(240,137,8)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(239,176,15)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(234,214,35)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(235,88,39)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="20" y="948" width="6" height="15" fill="rgb(225,64,52)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.46%)</title><rect x="20" y="964" width="6" height="15" fill="rgb(247,9,23)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(246,140,8)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(251,9,37)"/><text x="25.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(230,113,23)"/><text x="25.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(247,42,19)"/><text x="25.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(222,111,14)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(214,32,22)"/><text x="25.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(230,0,47)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(227,204,16)"/><text x="25.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1108" width="4" height="15" fill="rgb(208,12,39)"/><text x="25.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1124" width="4" height="15" fill="rgb(214,167,25)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1140" width="4" height="15" fill="rgb(226,201,19)"/><text x="25.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.31%)</title><rect x="22" y="1156" width="4" height="15" fill="rgb(244,221,1)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1172" width="4" height="15" fill="rgb(205,26,37)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1188" width="4" height="15" fill="rgb(238,25,39)"/><text x="25.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1204" width="4" height="15" fill="rgb(241,93,26)"/><text x="25.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1220" width="4" height="15" fill="rgb(217,137,49)"/><text x="25.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1236" width="4" height="15" fill="rgb(242,62,16)"/><text x="25.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="1252" width="4" height="15" fill="rgb(254,200,23)"/><text x="25.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1268" width="4" height="15" fill="rgb(236,111,26)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1284" width="4" height="15" fill="rgb(252,90,12)"/><text x="25.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1300" width="4" height="15" fill="rgb(245,86,32)"/><text x="25.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1316" width="4" height="15" fill="rgb(238,54,41)"/><text x="25.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1332" width="4" height="15" fill="rgb(249,38,47)"/><text x="25.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.31%)</title><rect x="22" y="1348" width="4" height="15" fill="rgb(242,179,41)"/><text x="25.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1364" width="4" height="15" fill="rgb(209,65,47)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1380" width="4" height="15" fill="rgb(224,196,28)"/><text x="25.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1396" width="4" height="15" fill="rgb(234,68,4)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1412" width="4" height="15" fill="rgb(226,55,14)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1428" width="4" height="15" fill="rgb(237,154,19)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1444" width="4" height="15" fill="rgb(240,34,46)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1460" width="4" height="15" fill="rgb(249,15,25)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1476" width="4" height="15" fill="rgb(205,150,31)"/><text x="25.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="1492" width="4" height="15" fill="rgb(226,163,33)"/><text x="25.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(252,174,23)"/><text x="27.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(234,143,4)"/><text x="27.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(225,160,7)"/><text x="27.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(232,0,35)"/><text x="27.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(238,143,50)"/><text x="27.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(253,186,39)"/><text x="27.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(210,60,17)"/><text x="27.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.15%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(227,120,18)"/><text x="27.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(217,147,12)"/><text x="27.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1652" width="2" height="15" fill="rgb(214,132,4)"/><text x="27.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1668" width="2" height="15" fill="rgb(248,165,3)"/><text x="27.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="24" y="1684" width="2" height="15" fill="rgb(228,56,21)"/><text x="27.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1700" width="2" height="15" fill="rgb(205,38,46)"/><text x="27.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py) (1 samples, 0.15%)</title><rect x="24" y="1716" width="2" height="15" fill="rgb(223,91,11)"/><text x="27.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1732" width="2" height="15" fill="rgb(221,110,7)"/><text x="27.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1748" width="2" height="15" fill="rgb(216,198,42)"/><text x="27.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1764" width="2" height="15" fill="rgb(222,2,6)"/><text x="27.00" y="1774.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="24" y="1780" width="2" height="15" fill="rgb(237,80,6)"/><text x="27.00" y="1790.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 1.54%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(228,107,52)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.54%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(206,55,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.54%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(220,96,34)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="340" width="8" height="15" fill="rgb(219,222,17)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="20" y="356" width="8" height="15" fill="rgb(216,59,21)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="372" width="8" height="15" fill="rgb(209,16,13)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.62%)</title><rect x="20" y="388" width="8" height="15" fill="rgb(247,173,45)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="404" width="8" height="15" fill="rgb(226,166,29)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="420" width="8" height="15" fill="rgb(213,103,23)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="436" width="8" height="15" fill="rgb(221,48,47)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="20" y="452" width="8" height="15" fill="rgb(228,27,3)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="468" width="8" height="15" fill="rgb(220,163,20)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.62%)</title><rect x="20" y="484" width="8" height="15" fill="rgb(237,120,24)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="500" width="8" height="15" fill="rgb(248,65,42)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="516" width="8" height="15" fill="rgb(231,20,18)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="532" width="8" height="15" fill="rgb(211,128,18)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="20" y="548" width="8" height="15" fill="rgb(243,104,36)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="20" y="564" width="8" height="15" fill="rgb(233,183,27)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.15%)</title><rect x="26" y="580" width="2" height="15" fill="rgb(213,212,2)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="596" width="2" height="15" fill="rgb(206,31,36)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="612" width="2" height="15" fill="rgb(221,176,32)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(227,130,20)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(251,208,32)"/><text x="29.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(254,54,21)"/><text x="29.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(216,20,40)"/><text x="29.00" y="686.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="868" width="1" height="15" fill="rgb(239,188,45)"/><text x="31.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="884" width="1" height="15" fill="rgb(227,174,36)"/><text x="31.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="900" width="1" height="15" fill="rgb(247,141,18)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="28" y="916" width="1" height="15" fill="rgb(244,189,6)"/><text x="31.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="932" width="1" height="15" fill="rgb(236,69,28)"/><text x="31.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="948" width="1" height="15" fill="rgb(216,66,41)"/><text x="31.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="28" y="964" width="1" height="15" fill="rgb(234,2,14)"/><text x="31.00" y="974.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(245,74,0)"/><text x="32.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(208,69,15)"/><text x="32.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(239,195,24)"/><text x="32.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(253,7,11)"/><text x="32.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(234,39,37)"/><text x="32.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(241,178,9)"/><text x="32.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(236,37,29)"/><text x="32.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(219,180,50)"/><text x="32.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.15%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(224,57,27)"/><text x="32.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(214,57,39)"/><text x="34.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(214,194,10)"/><text x="34.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(250,229,28)"/><text x="34.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(225,88,7)"/><text x="34.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(225,159,43)"/><text x="34.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(205,217,10)"/><text x="34.00" y="990.50"></text></g><g><title>0x7f5463f3bfda (libc-2.29.so) (1 samples, 0.15%)</title><rect x="35" y="932" width="2" height="15" fill="rgb(219,28,44)"/><text x="38.00" y="942.50"></text></g><g><title>0x7f5463f3bed7 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(252,47,50)"/><text x="38.00" y="958.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="35" y="964" width="2" height="15" fill="rgb(206,212,10)"/><text x="38.00" y="974.50"></text></g><g><title>0x7f5463efe8a8 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="35" y="980" width="2" height="15" fill="rgb(254,126,22)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.46%)</title><rect x="10" y="196" width="29" height="15" fill="rgb(241,228,2)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.46%)</title><rect x="10" y="212" width="29" height="15" fill="rgb(250,177,16)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.46%)</title><rect x="10" y="228" width="29" height="15" fill="rgb(229,122,40)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.46%)</title><rect x="10" y="244" width="29" height="15" fill="rgb(240,136,53)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 2.46%)</title><rect x="10" y="260" width="29" height="15" fill="rgb(211,206,44)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 2.46%)</title><rect x="10" y="276" width="29" height="15" fill="rgb(213,208,32)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.92%)</title><rect x="28" y="292" width="11" height="15" fill="rgb(253,142,50)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="308" width="11" height="15" fill="rgb(209,124,35)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="324" width="11" height="15" fill="rgb(207,125,17)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="340" width="11" height="15" fill="rgb(209,144,32)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="28" y="356" width="11" height="15" fill="rgb(224,199,24)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="372" width="11" height="15" fill="rgb(228,222,8)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.92%)</title><rect x="28" y="388" width="11" height="15" fill="rgb(232,160,0)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="404" width="11" height="15" fill="rgb(252,102,41)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="420" width="11" height="15" fill="rgb(211,6,15)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="436" width="11" height="15" fill="rgb(218,35,8)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="28" y="452" width="11" height="15" fill="rgb(206,149,54)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="468" width="11" height="15" fill="rgb(232,62,16)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.92%)</title><rect x="28" y="484" width="11" height="15" fill="rgb(219,224,21)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="500" width="11" height="15" fill="rgb(250,108,34)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="516" width="11" height="15" fill="rgb(241,90,4)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="532" width="11" height="15" fill="rgb(225,173,54)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="28" y="548" width="11" height="15" fill="rgb(253,177,24)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="564" width="11" height="15" fill="rgb(248,181,2)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.92%)</title><rect x="28" y="580" width="11" height="15" fill="rgb(239,161,34)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="596" width="11" height="15" fill="rgb(213,125,44)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="612" width="11" height="15" fill="rgb(245,145,45)"/><text x="31.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="628" width="11" height="15" fill="rgb(206,45,7)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="644" width="11" height="15" fill="rgb(236,8,13)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="660" width="11" height="15" fill="rgb(221,65,6)"/><text x="31.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="676" width="11" height="15" fill="rgb(219,223,27)"/><text x="31.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="28" y="692" width="11" height="15" fill="rgb(252,177,0)"/><text x="31.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="708" width="11" height="15" fill="rgb(237,135,44)"/><text x="31.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.92%)</title><rect x="28" y="724" width="11" height="15" fill="rgb(233,163,32)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="740" width="11" height="15" fill="rgb(231,158,22)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="756" width="11" height="15" fill="rgb(217,22,42)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="772" width="11" height="15" fill="rgb(245,46,37)"/><text x="31.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="28" y="788" width="11" height="15" fill="rgb(234,202,23)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="28" y="804" width="11" height="15" fill="rgb(228,125,38)"/><text x="31.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.92%)</title><rect x="28" y="820" width="11" height="15" fill="rgb(206,194,16)"/><text x="31.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 0.92%)</title><rect x="28" y="836" width="11" height="15" fill="rgb(209,174,30)"/><text x="31.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 0.92%)</title><rect x="28" y="852" width="11" height="15" fill="rgb(240,210,0)"/><text x="31.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 0.62%)</title><rect x="31" y="868" width="8" height="15" fill="rgb(220,91,26)"/><text x="34.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 0.62%)</title><rect x="31" y="884" width="8" height="15" fill="rgb(218,218,0)"/><text x="34.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.46%)</title><rect x="33" y="900" width="6" height="15" fill="rgb(248,148,17)"/><text x="36.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (2 samples, 0.31%)</title><rect x="35" y="916" width="4" height="15" fill="rgb(224,117,43)"/><text x="38.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.15%)</title><rect x="37" y="932" width="2" height="15" fill="rgb(232,23,24)"/><text x="40.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="244" width="1" height="15" fill="rgb(211,105,20)"/><text x="42.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="260" width="1" height="15" fill="rgb(236,63,15)"/><text x="42.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="276" width="1" height="15" fill="rgb(224,57,22)"/><text x="42.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="292" width="1" height="15" fill="rgb(221,132,19)"/><text x="42.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="308" width="1" height="15" fill="rgb(240,214,24)"/><text x="42.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="324" width="1" height="15" fill="rgb(228,80,8)"/><text x="42.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.15%)</title><rect x="39" y="340" width="1" height="15" fill="rgb(210,9,19)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="356" width="1" height="15" fill="rgb(242,202,25)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="372" width="1" height="15" fill="rgb(239,65,22)"/><text x="42.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="388" width="1" height="15" fill="rgb(213,37,31)"/><text x="42.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="404" width="1" height="15" fill="rgb(213,58,13)"/><text x="42.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="420" width="1" height="15" fill="rgb(211,12,36)"/><text x="42.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="436" width="1" height="15" fill="rgb(228,5,22)"/><text x="42.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="452" width="1" height="15" fill="rgb(217,172,38)"/><text x="42.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="468" width="1" height="15" fill="rgb(205,69,5)"/><text x="42.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="484" width="1" height="15" fill="rgb(248,189,35)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="500" width="1" height="15" fill="rgb(236,57,39)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="516" width="1" height="15" fill="rgb(228,2,11)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="532" width="1" height="15" fill="rgb(229,207,34)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="548" width="1" height="15" fill="rgb(215,115,19)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="564" width="1" height="15" fill="rgb(216,12,29)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.15%)</title><rect x="39" y="580" width="1" height="15" fill="rgb(225,152,22)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="596" width="1" height="15" fill="rgb(206,199,32)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="612" width="1" height="15" fill="rgb(236,12,6)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="628" width="1" height="15" fill="rgb(230,76,39)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="644" width="1" height="15" fill="rgb(226,80,39)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="660" width="1" height="15" fill="rgb(251,207,47)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.15%)</title><rect x="39" y="676" width="1" height="15" fill="rgb(248,49,9)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="692" width="1" height="15" fill="rgb(249,50,14)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="708" width="1" height="15" fill="rgb(248,20,19)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="724" width="1" height="15" fill="rgb(220,53,4)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="39" y="740" width="1" height="15" fill="rgb(224,161,36)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="39" y="756" width="1" height="15" fill="rgb(230,11,17)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.15%)</title><rect x="39" y="772" width="1" height="15" fill="rgb(243,90,0)"/><text x="42.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.15%)</title><rect x="39" y="788" width="1" height="15" fill="rgb(251,129,42)"/><text x="42.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.15%)</title><rect x="39" y="804" width="1" height="15" fill="rgb(241,90,19)"/><text x="42.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="39" y="820" width="1" height="15" fill="rgb(249,174,45)"/><text x="42.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="39" y="836" width="1" height="15" fill="rgb(234,120,30)"/><text x="42.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.15%)</title><rect x="39" y="852" width="1" height="15" fill="rgb(244,0,23)"/><text x="42.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="39" y="868" width="1" height="15" fill="rgb(213,192,31)"/><text x="42.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.15%)</title><rect x="39" y="884" width="1" height="15" fill="rgb(210,1,32)"/><text x="42.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="39" y="900" width="1" height="15" fill="rgb(232,144,26)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.15%)</title><rect x="40" y="372" width="2" height="15" fill="rgb(244,201,44)"/><text x="43.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="388" width="2" height="15" fill="rgb(212,92,8)"/><text x="43.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="404" width="2" height="15" fill="rgb(233,95,28)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="420" width="2" height="15" fill="rgb(221,21,20)"/><text x="43.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="436" width="2" height="15" fill="rgb(241,214,11)"/><text x="43.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="452" width="2" height="15" fill="rgb(215,54,44)"/><text x="43.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="468" width="2" height="15" fill="rgb(210,88,7)"/><text x="43.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="484" width="2" height="15" fill="rgb(213,103,45)"/><text x="43.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.15%)</title><rect x="40" y="500" width="2" height="15" fill="rgb(206,13,12)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="516" width="2" height="15" fill="rgb(244,117,46)"/><text x="43.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="532" width="2" height="15" fill="rgb(239,228,22)"/><text x="43.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="548" width="2" height="15" fill="rgb(242,220,42)"/><text x="43.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="564" width="2" height="15" fill="rgb(242,86,2)"/><text x="43.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="580" width="2" height="15" fill="rgb(248,187,50)"/><text x="43.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.15%)</title><rect x="40" y="596" width="2" height="15" fill="rgb(229,92,31)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="612" width="2" height="15" fill="rgb(244,139,45)"/><text x="43.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="628" width="2" height="15" fill="rgb(252,83,24)"/><text x="43.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="644" width="2" height="15" fill="rgb(247,146,1)"/><text x="43.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="660" width="2" height="15" fill="rgb(226,155,17)"/><text x="43.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="676" width="2" height="15" fill="rgb(239,176,23)"/><text x="43.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.15%)</title><rect x="40" y="692" width="2" height="15" fill="rgb(235,118,30)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="708" width="2" height="15" fill="rgb(211,101,46)"/><text x="43.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="724" width="2" height="15" fill="rgb(212,124,41)"/><text x="43.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="740" width="2" height="15" fill="rgb(211,110,37)"/><text x="43.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="756" width="2" height="15" fill="rgb(250,122,0)"/><text x="43.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="772" width="2" height="15" fill="rgb(248,214,50)"/><text x="43.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.15%)</title><rect x="40" y="788" width="2" height="15" fill="rgb(208,126,42)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="804" width="2" height="15" fill="rgb(209,13,46)"/><text x="43.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="820" width="2" height="15" fill="rgb(240,63,38)"/><text x="43.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="836" width="2" height="15" fill="rgb(208,157,45)"/><text x="43.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="852" width="2" height="15" fill="rgb(210,120,18)"/><text x="43.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="868" width="2" height="15" fill="rgb(238,228,41)"/><text x="43.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.15%)</title><rect x="40" y="884" width="2" height="15" fill="rgb(228,174,46)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="900" width="2" height="15" fill="rgb(227,57,26)"/><text x="43.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="916" width="2" height="15" fill="rgb(231,42,7)"/><text x="43.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="932" width="2" height="15" fill="rgb(223,178,28)"/><text x="43.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="948" width="2" height="15" fill="rgb(251,106,21)"/><text x="43.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(243,160,50)"/><text x="43.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.15%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(221,8,30)"/><text x="43.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(246,222,14)"/><text x="43.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(213,66,36)"/><text x="43.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(226,172,42)"/><text x="43.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(215,1,41)"/><text x="43.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(205,172,47)"/><text x="43.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.15%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(227,112,14)"/><text x="43.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(220,229,49)"/><text x="43.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(206,223,11)"/><text x="43.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(247,193,43)"/><text x="43.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(240,207,21)"/><text x="43.00" y="1150.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(217,201,18)"/><text x="43.00" y="1166.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(215,176,49)"/><text x="43.00" y="1182.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.15%)</title><rect x="42" y="468" width="2" height="15" fill="rgb(211,142,21)"/><text x="45.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="484" width="2" height="15" fill="rgb(250,165,10)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="500" width="2" height="15" fill="rgb(206,47,44)"/><text x="45.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="516" width="2" height="15" fill="rgb(233,171,10)"/><text x="45.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="532" width="2" height="15" fill="rgb(240,153,47)"/><text x="45.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="548" width="2" height="15" fill="rgb(207,224,34)"/><text x="45.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.15%)</title><rect x="42" y="564" width="2" height="15" fill="rgb(210,93,45)"/><text x="45.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="580" width="2" height="15" fill="rgb(254,176,53)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="596" width="2" height="15" fill="rgb(239,42,52)"/><text x="45.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="612" width="2" height="15" fill="rgb(215,228,32)"/><text x="45.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="628" width="2" height="15" fill="rgb(221,208,14)"/><text x="45.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="644" width="2" height="15" fill="rgb(239,195,4)"/><text x="45.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.15%)</title><rect x="42" y="660" width="2" height="15" fill="rgb(237,47,20)"/><text x="45.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="676" width="2" height="15" fill="rgb(253,8,23)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="692" width="2" height="15" fill="rgb(223,49,4)"/><text x="45.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="708" width="2" height="15" fill="rgb(220,55,15)"/><text x="45.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="724" width="2" height="15" fill="rgb(239,85,20)"/><text x="45.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="740" width="2" height="15" fill="rgb(218,57,33)"/><text x="45.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.15%)</title><rect x="42" y="756" width="2" height="15" fill="rgb(247,97,45)"/><text x="45.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="772" width="2" height="15" fill="rgb(243,92,26)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="788" width="2" height="15" fill="rgb(218,168,42)"/><text x="45.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="804" width="2" height="15" fill="rgb(235,47,44)"/><text x="45.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="820" width="2" height="15" fill="rgb(223,156,46)"/><text x="45.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="836" width="2" height="15" fill="rgb(231,126,26)"/><text x="45.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.15%)</title><rect x="42" y="852" width="2" height="15" fill="rgb(244,31,50)"/><text x="45.00" y="862.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="868" width="2" height="15" fill="rgb(238,202,43)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="884" width="2" height="15" fill="rgb(220,227,3)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="900" width="2" height="15" fill="rgb(237,39,15)"/><text x="45.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="916" width="2" height="15" fill="rgb(211,224,0)"/><text x="45.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="932" width="2" height="15" fill="rgb(250,193,5)"/><text x="45.00" y="942.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="948" width="2" height="15" fill="rgb(217,110,45)"/><text x="45.00" y="958.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="42" y="964" width="2" height="15" fill="rgb(251,89,44)"/><text x="45.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="980" width="2" height="15" fill="rgb(227,129,16)"/><text x="45.00" y="990.50"></text></g><g><title>0x7f54580ae42d (?) (1 samples, 0.15%)</title><rect x="42" y="996" width="2" height="15" fill="rgb(205,163,2)"/><text x="45.00" y="1006.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1012" width="2" height="15" fill="rgb(220,217,43)"/><text x="45.00" y="1022.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="42" y="1028" width="2" height="15" fill="rgb(227,229,11)"/><text x="45.00" y="1038.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.31%)</title><rect x="42" y="372" width="4" height="15" fill="rgb(227,138,52)"/><text x="45.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="42" y="388" width="4" height="15" fill="rgb(254,166,44)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="42" y="404" width="4" height="15" fill="rgb(247,139,16)"/><text x="45.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="42" y="420" width="4" height="15" fill="rgb(246,44,21)"/><text x="45.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="42" y="436" width="4" height="15" fill="rgb(209,94,40)"/><text x="45.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="42" y="452" width="4" height="15" fill="rgb(235,195,36)"/><text x="45.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/type_check.py) (1 samples, 0.15%)</title><rect x="44" y="468" width="2" height="15" fill="rgb(239,93,47)"/><text x="47.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="484" width="2" height="15" fill="rgb(217,61,10)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="500" width="2" height="15" fill="rgb(236,211,11)"/><text x="47.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="516" width="2" height="15" fill="rgb(242,13,7)"/><text x="47.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="532" width="2" height="15" fill="rgb(246,31,24)"/><text x="47.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="548" width="2" height="15" fill="rgb(227,19,22)"/><text x="47.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/ufunclike.py) (1 samples, 0.15%)</title><rect x="44" y="564" width="2" height="15" fill="rgb(205,49,6)"/><text x="47.00" y="574.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="580" width="2" height="15" fill="rgb(233,124,30)"/><text x="47.00" y="590.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="44" y="596" width="2" height="15" fill="rgb(218,217,5)"/><text x="47.00" y="606.50"></text></g><g><title>__Pyx_Import (bit_generator.c) (1 samples, 0.15%)</title><rect x="46" y="836" width="2" height="15" fill="rgb(215,223,15)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="852" width="2" height="15" fill="rgb(254,123,47)"/><text x="49.00" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="868" width="2" height="15" fill="rgb(236,129,52)"/><text x="49.00" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="884" width="2" height="15" fill="rgb(245,28,27)"/><text x="49.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="900" width="2" height="15" fill="rgb(212,159,5)"/><text x="49.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="916" width="2" height="15" fill="rgb(212,200,34)"/><text x="49.00" y="926.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.15%)</title><rect x="46" y="932" width="2" height="15" fill="rgb(223,60,4)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="948" width="2" height="15" fill="rgb(214,221,54)"/><text x="49.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="964" width="2" height="15" fill="rgb(223,82,51)"/><text x="49.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="980" width="2" height="15" fill="rgb(215,107,20)"/><text x="49.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="996" width="2" height="15" fill="rgb(210,197,15)"/><text x="49.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1012" width="2" height="15" fill="rgb(226,176,24)"/><text x="49.00" y="1022.50"></text></g><g><title>&lt;module&gt; (hmac.py) (1 samples, 0.15%)</title><rect x="46" y="1028" width="2" height="15" fill="rgb(226,216,27)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1044" width="2" height="15" fill="rgb(224,81,44)"/><text x="49.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1060" width="2" height="15" fill="rgb(223,120,19)"/><text x="49.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1076" width="2" height="15" fill="rgb(211,33,20)"/><text x="49.00" y="1086.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1092" width="2" height="15" fill="rgb(247,142,11)"/><text x="49.00" y="1102.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="1108" width="2" height="15" fill="rgb(205,166,18)"/><text x="49.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="1124" width="2" height="15" fill="rgb(248,121,0)"/><text x="49.00" y="1134.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1140" width="2" height="15" fill="rgb(245,205,39)"/><text x="49.00" y="1150.50"></text></g><g><title>0x7f5464184995 (libdl-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1156" width="2" height="15" fill="rgb(212,59,22)"/><text x="49.00" y="1166.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1172" width="2" height="15" fill="rgb(205,189,0)"/><text x="49.00" y="1182.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1188" width="2" height="15" fill="rgb(237,161,17)"/><text x="49.00" y="1198.50"></text></g><g><title>0x7f5464184258 (libdl-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1204" width="2" height="15" fill="rgb(213,209,37)"/><text x="49.00" y="1214.50"></text></g><g><title>0x7f54641d1d7a (ld-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1220" width="2" height="15" fill="rgb(220,18,35)"/><text x="49.00" y="1230.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1236" width="2" height="15" fill="rgb(238,152,10)"/><text x="49.00" y="1246.50"></text></g><g><title>0x7f54641d2345 (ld-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1252" width="2" height="15" fill="rgb(237,137,14)"/><text x="49.00" y="1262.50"></text></g><g><title>0x7f54641cafec (ld-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1268" width="2" height="15" fill="rgb(234,74,49)"/><text x="49.00" y="1278.50"></text></g><g><title>0x7f54641c956b (ld-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1284" width="2" height="15" fill="rgb(240,16,52)"/><text x="49.00" y="1294.50"></text></g><g><title>0x7f54641c8976 (ld-2.29.so) (1 samples, 0.15%)</title><rect x="46" y="1300" width="2" height="15" fill="rgb(231,65,23)"/><text x="49.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.38%)</title><rect x="10" y="68" width="39" height="15" fill="rgb(206,179,50)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.38%)</title><rect x="10" y="84" width="39" height="15" fill="rgb(209,62,41)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.38%)</title><rect x="10" y="100" width="39" height="15" fill="rgb(243,212,49)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 3.38%)</title><rect x="10" y="116" width="39" height="15" fill="rgb(241,81,11)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.38%)</title><rect x="10" y="132" width="39" height="15" fill="rgb(240,221,49)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (22 samples, 3.38%)</title><rect x="10" y="148" width="39" height="15" fill="rgb(212,156,19)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.38%)</title><rect x="10" y="164" width="39" height="15" fill="rgb(215,227,46)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.38%)</title><rect x="10" y="180" width="39" height="15" fill="rgb(249,31,32)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="39" y="196" width="10" height="15" fill="rgb(223,155,11)"/><text x="42.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.92%)</title><rect x="39" y="212" width="10" height="15" fill="rgb(235,225,20)"/><text x="42.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.92%)</title><rect x="39" y="228" width="10" height="15" fill="rgb(237,194,52)"/><text x="42.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (5 samples, 0.77%)</title><rect x="40" y="244" width="9" height="15" fill="rgb(252,36,4)"/><text x="43.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="40" y="260" width="9" height="15" fill="rgb(240,24,50)"/><text x="43.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="40" y="276" width="9" height="15" fill="rgb(246,213,29)"/><text x="43.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="40" y="292" width="9" height="15" fill="rgb(250,1,44)"/><text x="43.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="40" y="308" width="9" height="15" fill="rgb(254,204,34)"/><text x="43.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="40" y="324" width="9" height="15" fill="rgb(252,161,46)"/><text x="43.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.77%)</title><rect x="40" y="340" width="9" height="15" fill="rgb(242,191,17)"/><text x="43.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.77%)</title><rect x="40" y="356" width="9" height="15" fill="rgb(236,16,35)"/><text x="43.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (2 samples, 0.31%)</title><rect x="46" y="372" width="3" height="15" fill="rgb(249,89,2)"/><text x="49.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="388" width="3" height="15" fill="rgb(218,171,7)"/><text x="49.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="404" width="3" height="15" fill="rgb(219,170,21)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="420" width="3" height="15" fill="rgb(217,205,50)"/><text x="49.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="436" width="3" height="15" fill="rgb(234,89,46)"/><text x="49.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="452" width="3" height="15" fill="rgb(226,27,41)"/><text x="49.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="46" y="468" width="3" height="15" fill="rgb(218,161,11)"/><text x="49.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="484" width="3" height="15" fill="rgb(238,168,6)"/><text x="49.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (2 samples, 0.31%)</title><rect x="46" y="500" width="3" height="15" fill="rgb(205,227,33)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="516" width="3" height="15" fill="rgb(221,17,31)"/><text x="49.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="532" width="3" height="15" fill="rgb(213,132,15)"/><text x="49.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="548" width="3" height="15" fill="rgb(209,16,32)"/><text x="49.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="46" y="564" width="3" height="15" fill="rgb(226,88,27)"/><text x="49.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="580" width="3" height="15" fill="rgb(215,207,23)"/><text x="49.00" y="590.50"></text></g><g><title>__pyx_pymod_exec_mtrand (mtrand.c) (2 samples, 0.31%)</title><rect x="46" y="596" width="3" height="15" fill="rgb(240,212,29)"/><text x="49.00" y="606.50"></text></g><g><title>__Pyx_Import (mtrand.c) (2 samples, 0.31%)</title><rect x="46" y="612" width="3" height="15" fill="rgb(210,167,40)"/><text x="49.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="628" width="3" height="15" fill="rgb(225,36,17)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="644" width="3" height="15" fill="rgb(228,44,19)"/><text x="49.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="660" width="3" height="15" fill="rgb(253,30,18)"/><text x="49.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="46" y="676" width="3" height="15" fill="rgb(253,170,31)"/><text x="49.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="692" width="3" height="15" fill="rgb(228,119,0)"/><text x="49.00" y="702.50"></text></g><g><title>__pyx_pymod_exec_mt19937 (mt19937.c) (2 samples, 0.31%)</title><rect x="46" y="708" width="3" height="15" fill="rgb(217,191,4)"/><text x="49.00" y="718.50"></text></g><g><title>__Pyx_modinit_type_init_code (mt19937.c) (2 samples, 0.31%)</title><rect x="46" y="724" width="3" height="15" fill="rgb(210,53,3)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="740" width="3" height="15" fill="rgb(240,47,19)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="756" width="3" height="15" fill="rgb(233,35,21)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(208,88,18)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(228,28,28)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(226,69,41)"/><text x="49.00" y="814.50"></text></g><g><title>__pyx_pymod_exec_bit_generator (bit_generator.c) (2 samples, 0.31%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(214,171,29)"/><text x="49.00" y="830.50"></text></g><g><title>__Pyx_InitGlobals (bit_generator.c) (1 samples, 0.15%)</title><rect x="48" y="836" width="1" height="15" fill="rgb(208,165,49)"/><text x="51.00" y="846.50"></text></g><g><title>__Pyx_InitStrings (bit_generator.c) (1 samples, 0.15%)</title><rect x="48" y="852" width="1" height="15" fill="rgb(226,17,27)"/><text x="51.00" y="862.50"></text></g><g><title>0x7f5463fdb00a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="48" y="868" width="1" height="15" fill="rgb(251,116,10)"/><text x="51.00" y="878.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="59" y="180" width="1" height="15" fill="rgb(239,17,49)"/><text x="62.00" y="190.50"></text></g><g><title>0x7f5424765ff9 (?) (1 samples, 0.15%)</title><rect x="66" y="212" width="2" height="15" fill="rgb(238,49,40)"/><text x="69.00" y="222.50"></text></g><g><title>0x7f5424760ef6 (?) (1 samples, 0.15%)</title><rect x="66" y="228" width="2" height="15" fill="rgb(239,99,6)"/><text x="69.00" y="238.50"></text></g><g><title>0x7f5424755962 (?) (1 samples, 0.15%)</title><rect x="66" y="244" width="2" height="15" fill="rgb(218,57,45)"/><text x="69.00" y="254.50"></text></g><g><title>0x7f54247897a7 (?) (1 samples, 0.15%)</title><rect x="66" y="260" width="2" height="15" fill="rgb(237,205,6)"/><text x="69.00" y="270.50"></text></g><g><title>0x7f5424789379 (?) (1 samples, 0.15%)</title><rect x="66" y="276" width="2" height="15" fill="rgb(243,172,17)"/><text x="69.00" y="286.50"></text></g><g><title>0x7f5424be78b8 (?) (1 samples, 0.15%)</title><rect x="66" y="292" width="2" height="15" fill="rgb(210,145,24)"/><text x="69.00" y="302.50"></text></g><g><title>0x7f5424be5c7f (?) (1 samples, 0.15%)</title><rect x="66" y="308" width="2" height="15" fill="rgb(217,73,32)"/><text x="69.00" y="318.50"></text></g><g><title>0x7f5424bf899c (?) (1 samples, 0.15%)</title><rect x="66" y="324" width="2" height="15" fill="rgb(232,57,2)"/><text x="69.00" y="334.50"></text></g><g><title>0x7f54248ddb3c (?) (1 samples, 0.15%)</title><rect x="66" y="340" width="2" height="15" fill="rgb(249,47,28)"/><text x="69.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.31%)</title><rect x="68" y="212" width="3" height="15" fill="rgb(248,92,0)"/><text x="71.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(211,41,13)"/><text x="71.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="69" y="244" width="2" height="15" fill="rgb(236,86,13)"/><text x="72.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="69" y="260" width="2" height="15" fill="rgb(233,168,1)"/><text x="72.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="69" y="276" width="2" height="15" fill="rgb(213,110,51)"/><text x="72.00" y="286.50"></text></g><g><title>0x7f5463efc98c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="75" y="260" width="2" height="15" fill="rgb(220,174,34)"/><text x="78.00" y="270.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="77" y="340" width="1" height="15" fill="rgb(242,162,16)"/><text x="80.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="77" y="356" width="1" height="15" fill="rgb(243,30,26)"/><text x="80.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="78" y="340" width="2" height="15" fill="rgb(206,126,33)"/><text x="81.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="345" y="356" width="4" height="15" fill="rgb(215,148,13)"/><text x="348.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="345" y="372" width="4" height="15" fill="rgb(225,120,16)"/><text x="348.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="345" y="388" width="4" height="15" fill="rgb(239,210,33)"/><text x="348.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="345" y="404" width="4" height="15" fill="rgb(247,48,15)"/><text x="348.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="345" y="420" width="4" height="15" fill="rgb(213,192,51)"/><text x="348.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="345" y="436" width="4" height="15" fill="rgb(209,12,37)"/><text x="348.00" y="446.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="347" y="452" width="2" height="15" fill="rgb(252,210,40)"/><text x="350.00" y="462.50"></text></g><g><title>0x7f5463f1cdb3 (libc-2.29.so) (4 samples, 0.62%)</title><rect x="380" y="372" width="7" height="15" fill="rgb(231,123,45)"/><text x="383.00" y="382.50"></text></g><g><title>0x7f546407be00 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="387" y="372" width="4" height="15" fill="rgb(217,171,28)"/><text x="390.00" y="382.50"></text></g><g><title>0x7f546407be0a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="391" y="372" width="2" height="15" fill="rgb(252,75,34)"/><text x="394.00" y="382.50"></text></g><g><title>0x7f546407be14 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="393" y="372" width="1" height="15" fill="rgb(211,139,22)"/><text x="396.00" y="382.50"></text></g><g><title>0x7f546407be2f (libm-2.29.so) (2 samples, 0.31%)</title><rect x="394" y="372" width="4" height="15" fill="rgb(253,207,2)"/><text x="397.00" y="382.50"></text></g><g><title>0x7f546407be37 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="398" y="372" width="2" height="15" fill="rgb(212,108,17)"/><text x="401.00" y="382.50"></text></g><g><title>0x7f546407be4a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="400" y="372" width="2" height="15" fill="rgb(236,191,41)"/><text x="403.00" y="382.50"></text></g><g><title>0x7f546407be71 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="402" y="372" width="3" height="15" fill="rgb(238,209,10)"/><text x="405.00" y="382.50"></text></g><g><title>0x7f546407be76 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="405" y="372" width="2" height="15" fill="rgb(214,61,38)"/><text x="408.00" y="382.50"></text></g><g><title>0x7f546407be86 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="407" y="372" width="2" height="15" fill="rgb(252,143,21)"/><text x="410.00" y="382.50"></text></g><g><title>0x7f546407be92 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="409" y="372" width="2" height="15" fill="rgb(213,145,26)"/><text x="412.00" y="382.50"></text></g><g><title>0x7f546407be96 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="411" y="372" width="3" height="15" fill="rgb(207,153,27)"/><text x="414.00" y="382.50"></text></g><g><title>0x7f546407bea2 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="414" y="372" width="4" height="15" fill="rgb(227,75,16)"/><text x="417.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (190 samples, 29.23%)</title><rect x="80" y="340" width="345" height="15" fill="rgb(206,174,21)"/><text x="83.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Comp..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 6.46%)</title><rect x="349" y="356" width="76" height="15" fill="rgb(253,162,47)"/><text x="352.00" y="366.50">onnxrunt..</text></g><g><title>0x7f546407bea6 (libm-2.29.so) (4 samples, 0.62%)</title><rect x="418" y="372" width="7" height="15" fill="rgb(250,154,10)"/><text x="421.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 31.23%)</title><rect x="77" y="276" width="368" height="15" fill="rgb(247,12,27)"/><text x="80.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/c..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 31.23%)</title><rect x="77" y="292" width="368" height="15" fill="rgb(253,84,7)"/><text x="80.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 31.23%)</title><rect x="77" y="308" width="368" height="15" fill="rgb(215,212,17)"/><text x="80.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (203 samples, 31.23%)</title><rect x="77" y="324" width="368" height="15" fill="rgb(213,10,10)"/><text x="80.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrun..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.69%)</title><rect x="425" y="340" width="20" height="15" fill="rgb(247,125,23)"/><text x="428.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.69%)</title><rect x="425" y="356" width="20" height="15" fill="rgb(228,65,40)"/><text x="428.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 31.38%)</title><rect x="77" y="260" width="370" height="15" fill="rgb(233,110,33)"/><text x="80.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="445" y="276" width="2" height="15" fill="rgb(223,214,43)"/><text x="448.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="447" y="260" width="4" height="15" fill="rgb(225,18,8)"/><text x="450.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="447" y="276" width="4" height="15" fill="rgb(238,215,0)"/><text x="450.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="451" y="260" width="1" height="15" fill="rgb(230,33,25)"/><text x="454.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.15%)</title><rect x="451" y="276" width="1" height="15" fill="rgb(231,151,38)"/><text x="454.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="451" y="292" width="1" height="15" fill="rgb(208,4,4)"/><text x="454.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="451" y="308" width="1" height="15" fill="rgb(241,38,15)"/><text x="454.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="451" y="324" width="1" height="15" fill="rgb(227,100,2)"/><text x="454.00" y="334.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="451" y="340" width="1" height="15" fill="rgb(250,126,23)"/><text x="454.00" y="350.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="452" y="260" width="4" height="15" fill="rgb(249,120,24)"/><text x="455.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="454" y="276" width="2" height="15" fill="rgb(233,180,46)"/><text x="457.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (213 samples, 32.77%)</title><rect x="71" y="244" width="387" height="15" fill="rgb(249,1,10)"/><text x="74.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modu..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="260" width="2" height="15" fill="rgb(220,36,37)"/><text x="459.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="276" width="2" height="15" fill="rgb(245,66,40)"/><text x="459.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="292" width="2" height="15" fill="rgb(220,134,9)"/><text x="459.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="308" width="2" height="15" fill="rgb(229,154,0)"/><text x="459.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="324" width="2" height="15" fill="rgb(211,109,4)"/><text x="459.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="340" width="2" height="15" fill="rgb(247,91,8)"/><text x="459.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="356" width="2" height="15" fill="rgb(215,106,17)"/><text x="459.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="372" width="2" height="15" fill="rgb(219,198,35)"/><text x="459.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="388" width="2" height="15" fill="rgb(209,40,31)"/><text x="459.00" y="398.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (227 samples, 34.92%)</title><rect x="49" y="68" width="413" height="15" fill="rgb(246,191,0)"/><text x="52.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (227 samples, 34.92%)</title><rect x="49" y="84" width="413" height="15" fill="rgb(250,69,11)"/><text x="52.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (227 samples, 34.92%)</title><rect x="49" y="100" width="413" height="15" fill="rgb(231,93,3)"/><text x="52.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (227 samples, 34.92%)</title><rect x="49" y="116" width="413" height="15" fill="rgb(214,149,12)"/><text x="52.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (227 samples, 34.92%)</title><rect x="49" y="132" width="413" height="15" fill="rgb(235,170,38)"/><text x="52.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (226 samples, 34.77%)</title><rect x="51" y="148" width="411" height="15" fill="rgb(243,111,41)"/><text x="54.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (225 samples, 34.62%)</title><rect x="53" y="164" width="409" height="15" fill="rgb(226,104,21)"/><text x="56.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (221 samples, 34.00%)</title><rect x="60" y="180" width="402" height="15" fill="rgb(228,97,36)"/><text x="63.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (221 samples, 34.00%)</title><rect x="60" y="196" width="402" height="15" fill="rgb(206,193,53)"/><text x="63.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (215 samples, 33.08%)</title><rect x="71" y="212" width="391" height="15" fill="rgb(227,160,46)"/><text x="74.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (215 samples, 33.08%)</title><rect x="71" y="228" width="391" height="15" fill="rgb(211,184,42)"/><text x="74.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="458" y="244" width="4" height="15" fill="rgb(240,86,6)"/><text x="461.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="458" y="260" width="4" height="15" fill="rgb(250,41,45)"/><text x="461.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="460" y="276" width="2" height="15" fill="rgb(205,75,1)"/><text x="463.00" y="286.50"></text></g><g><title>0x7f5463f1cdae (libc-2.29.so) (1 samples, 0.15%)</title><rect x="460" y="292" width="2" height="15" fill="rgb(235,126,22)"/><text x="463.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.15%)</title><rect x="472" y="180" width="2" height="15" fill="rgb(224,57,26)"/><text x="475.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="472" y="196" width="2" height="15" fill="rgb(223,22,48)"/><text x="475.00" y="206.50"></text></g><g><title>0x7f5463fdadf0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="472" y="212" width="2" height="15" fill="rgb(216,219,33)"/><text x="475.00" y="222.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="500" y="340" width="1" height="15" fill="rgb(238,0,8)"/><text x="503.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="501" y="340" width="2" height="15" fill="rgb(246,93,11)"/><text x="504.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.15%)</title><rect x="501" y="356" width="2" height="15" fill="rgb(207,145,41)"/><text x="504.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="501" y="372" width="2" height="15" fill="rgb(215,229,8)"/><text x="504.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 1.08%)</title><rect x="492" y="244" width="13" height="15" fill="rgb(237,41,13)"/><text x="495.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.08%)</title><rect x="492" y="260" width="13" height="15" fill="rgb(250,71,32)"/><text x="495.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 1.08%)</title><rect x="492" y="276" width="13" height="15" fill="rgb(221,178,12)"/><text x="495.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 0.92%)</title><rect x="494" y="292" width="11" height="15" fill="rgb(226,48,51)"/><text x="497.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (6 samples, 0.92%)</title><rect x="494" y="308" width="11" height="15" fill="rgb(211,114,6)"/><text x="497.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (6 samples, 0.92%)</title><rect x="494" y="324" width="11" height="15" fill="rgb(229,46,45)"/><text x="497.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="503" y="340" width="2" height="15" fill="rgb(214,122,43)"/><text x="506.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="503" y="356" width="2" height="15" fill="rgb(217,90,26)"/><text x="506.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="503" y="372" width="2" height="15" fill="rgb(219,118,37)"/><text x="506.00" y="382.50"></text></g><g><title>0x7f5463f1d103 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="511" y="340" width="1" height="15" fill="rgb(220,163,22)"/><text x="514.00" y="350.50"></text></g><g><title>gemm (cblasfuncs.c) (15 samples, 2.31%)</title><rect x="512" y="340" width="28" height="15" fill="rgb(243,17,16)"/><text x="515.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.31%)</title><rect x="512" y="356" width="28" height="15" fill="rgb(220,142,0)"/><text x="515.00" y="366.50">c..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.31%)</title><rect x="512" y="372" width="28" height="15" fill="rgb(228,38,23)"/><text x="515.00" y="382.50">s..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 2.31%)</title><rect x="512" y="388" width="28" height="15" fill="rgb(219,85,43)"/><text x="515.00" y="398.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (19 samples, 2.92%)</title><rect x="507" y="276" width="34" height="15" fill="rgb(218,152,6)"/><text x="510.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (18 samples, 2.77%)</title><rect x="509" y="292" width="32" height="15" fill="rgb(247,228,21)"/><text x="512.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (17 samples, 2.62%)</title><rect x="511" y="308" width="30" height="15" fill="rgb(252,76,24)"/><text x="514.00" y="318.50">Py..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (17 samples, 2.62%)</title><rect x="511" y="324" width="30" height="15" fill="rgb(206,81,39)"/><text x="514.00" y="334.50">cb..</text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.15%)</title><rect x="540" y="340" width="1" height="15" fill="rgb(236,144,29)"/><text x="543.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.15%)</title><rect x="540" y="356" width="1" height="15" fill="rgb(233,74,0)"/><text x="543.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="540" y="372" width="1" height="15" fill="rgb(254,134,35)"/><text x="543.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="540" y="388" width="1" height="15" fill="rgb(216,43,33)"/><text x="543.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.46%)</title><rect x="541" y="276" width="6" height="15" fill="rgb(221,137,36)"/><text x="544.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (69 samples, 10.62%)</title><rect x="505" y="244" width="125" height="15" fill="rgb(220,98,41)"/><text x="508.00" y="254.50">numpy_dot_inpla..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (69 samples, 10.62%)</title><rect x="505" y="260" width="125" height="15" fill="rgb(225,193,34)"/><text x="508.00" y="270.50">dot (&lt;__array_f..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (46 samples, 7.08%)</title><rect x="547" y="276" width="83" height="15" fill="rgb(217,61,0)"/><text x="550.00" y="286.50">sgemm_ker..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="630" y="260" width="2" height="15" fill="rgb(222,212,35)"/><text x="633.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="630" y="276" width="2" height="15" fill="rgb(211,36,13)"/><text x="633.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.15%)</title><rect x="634" y="292" width="2" height="15" fill="rgb(244,202,43)"/><text x="637.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.15%)</title><rect x="634" y="308" width="2" height="15" fill="rgb(253,41,11)"/><text x="637.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.15%)</title><rect x="634" y="324" width="2" height="15" fill="rgb(227,133,21)"/><text x="637.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.15%)</title><rect x="634" y="340" width="2" height="15" fill="rgb(249,79,2)"/><text x="637.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="634" y="356" width="2" height="15" fill="rgb(226,90,19)"/><text x="637.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="634" y="372" width="2" height="15" fill="rgb(249,97,47)"/><text x="637.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.15%)</title><rect x="636" y="308" width="2" height="15" fill="rgb(238,18,39)"/><text x="639.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="636" y="324" width="2" height="15" fill="rgb(226,200,34)"/><text x="639.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="636" y="340" width="2" height="15" fill="rgb(245,101,19)"/><text x="639.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="636" y="292" width="3" height="15" fill="rgb(235,82,46)"/><text x="639.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="638" y="308" width="1" height="15" fill="rgb(254,123,17)"/><text x="641.00" y="318.50"></text></g><g><title>0x7f544630133a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="639" y="308" width="2" height="15" fill="rgb(212,170,17)"/><text x="642.00" y="318.50"></text></g><g><title>0x7f5446323204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="641" y="324" width="2" height="15" fill="rgb(233,101,24)"/><text x="644.00" y="334.50"></text></g><g><title>0x7f54462e1890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="643" y="340" width="4" height="15" fill="rgb(224,38,9)"/><text x="646.00" y="350.50"></text></g><g><title>0x7f544642cc70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="647" y="340" width="2" height="15" fill="rgb(235,201,22)"/><text x="650.00" y="350.50"></text></g><g><title>0x7f54640481a0 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="665" y="356" width="3" height="15" fill="rgb(208,122,14)"/><text x="668.00" y="366.50"></text></g><g><title>0x7f546407be0e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="668" y="356" width="2" height="15" fill="rgb(215,226,47)"/><text x="671.00" y="366.50"></text></g><g><title>0x7f546407be17 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="670" y="356" width="2" height="15" fill="rgb(250,61,8)"/><text x="673.00" y="366.50"></text></g><g><title>0x7f546407be37 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="672" y="356" width="2" height="15" fill="rgb(234,201,18)"/><text x="675.00" y="366.50"></text></g><g><title>0x7f546407be4e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="674" y="356" width="2" height="15" fill="rgb(235,26,13)"/><text x="677.00" y="366.50"></text></g><g><title>0x7f546407be62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="676" y="356" width="2" height="15" fill="rgb(239,196,44)"/><text x="679.00" y="366.50"></text></g><g><title>0x7f546407be71 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="678" y="356" width="3" height="15" fill="rgb(224,225,47)"/><text x="681.00" y="366.50"></text></g><g><title>0x7f546407be7e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="681" y="356" width="2" height="15" fill="rgb(216,10,13)"/><text x="684.00" y="366.50"></text></g><g><title>0x7f546407be96 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="683" y="356" width="2" height="15" fill="rgb(208,174,18)"/><text x="686.00" y="366.50"></text></g><g><title>0x7f5446323214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 3.69%)</title><rect x="643" y="324" width="44" height="15" fill="rgb(205,105,20)"/><text x="646.00" y="334.50">0x7f..</text></g><g><title>expf (libm-2.29.so) (21 samples, 3.23%)</title><rect x="649" y="340" width="38" height="15" fill="rgb(246,227,23)"/><text x="652.00" y="350.50">exp..</text></g><g><title>0x7f546407bea6 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="685" y="356" width="2" height="15" fill="rgb(246,143,30)"/><text x="688.00" y="366.50"></text></g><g><title>0x7f5446323224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="687" y="324" width="3" height="15" fill="rgb(250,81,26)"/><text x="690.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (38 samples, 5.85%)</title><rect x="634" y="276" width="69" height="15" fill="rgb(242,71,32)"/><text x="637.00" y="286.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (35 samples, 5.38%)</title><rect x="639" y="292" width="64" height="15" fill="rgb(241,180,22)"/><text x="642.00" y="302.50">trivial..</text></g><g><title>0x7f544630133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (34 samples, 5.23%)</title><rect x="641" y="308" width="62" height="15" fill="rgb(232,109,46)"/><text x="644.00" y="318.50">0x7f54..</text></g><g><title>0x7f5446323228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.08%)</title><rect x="690" y="324" width="13" height="15" fill="rgb(240,183,40)"/><text x="693.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (121 samples, 18.62%)</title><rect x="485" y="228" width="220" height="15" fill="rgb(246,143,20)"/><text x="488.00" y="238.50">_run (mlprodict/onnxrt/ops_cp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 6.31%)</title><rect x="630" y="244" width="75" height="15" fill="rgb(232,31,9)"/><text x="633.00" y="254.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (40 samples, 6.15%)</title><rect x="632" y="260" width="73" height="15" fill="rgb(225,69,18)"/><text x="635.00" y="270.50">PyUFunc_..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="703" y="276" width="2" height="15" fill="rgb(242,189,30)"/><text x="706.00" y="286.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.15%)</title><rect x="705" y="260" width="2" height="15" fill="rgb(238,54,49)"/><text x="708.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="707" y="260" width="1" height="15" fill="rgb(221,8,42)"/><text x="710.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="707" y="276" width="1" height="15" fill="rgb(241,59,2)"/><text x="710.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="707" y="292" width="1" height="15" fill="rgb(231,43,9)"/><text x="710.00" y="302.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.15%)</title><rect x="708" y="260" width="2" height="15" fill="rgb(242,122,44)"/><text x="711.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.15%)</title><rect x="708" y="276" width="2" height="15" fill="rgb(233,150,4)"/><text x="711.00" y="286.50"></text></g><g><title>0x7f5463f12744 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="708" y="292" width="2" height="15" fill="rgb(231,134,47)"/><text x="711.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="714" y="340" width="2" height="15" fill="rgb(219,49,12)"/><text x="717.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.15%)</title><rect x="716" y="372" width="2" height="15" fill="rgb(227,116,51)"/><text x="719.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.15%)</title><rect x="716" y="388" width="2" height="15" fill="rgb(205,92,26)"/><text x="719.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.15%)</title><rect x="716" y="404" width="2" height="15" fill="rgb(228,84,14)"/><text x="719.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.15%)</title><rect x="718" y="372" width="1" height="15" fill="rgb(216,123,2)"/><text x="721.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="718" y="388" width="1" height="15" fill="rgb(217,64,36)"/><text x="721.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="718" y="404" width="1" height="15" fill="rgb(241,207,4)"/><text x="721.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="718" y="420" width="1" height="15" fill="rgb(218,16,16)"/><text x="721.00" y="430.50"></text></g><g><title>PyArray_RemoveAxesInPlace (shape.c) (1 samples, 0.15%)</title><rect x="719" y="372" width="2" height="15" fill="rgb(208,178,2)"/><text x="722.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 0.92%)</title><rect x="725" y="388" width="11" height="15" fill="rgb(212,226,11)"/><text x="728.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (3 samples, 0.46%)</title><rect x="730" y="404" width="6" height="15" fill="rgb(228,191,37)"/><text x="733.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 2.77%)</title><rect x="716" y="356" width="32" height="15" fill="rgb(215,102,16)"/><text x="719.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (15 samples, 2.31%)</title><rect x="721" y="372" width="27" height="15" fill="rgb(240,148,53)"/><text x="724.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 1.08%)</title><rect x="736" y="388" width="12" height="15" fill="rgb(236,201,3)"/><text x="739.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="747" y="404" width="1" height="15" fill="rgb(231,161,22)"/><text x="750.00" y="414.50"></text></g><g><title>array_sum (methods.c) (24 samples, 3.69%)</title><rect x="710" y="260" width="44" height="15" fill="rgb(253,20,21)"/><text x="713.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (24 samples, 3.69%)</title><rect x="710" y="276" width="44" height="15" fill="rgb(233,213,3)"/><text x="713.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (23 samples, 3.54%)</title><rect x="712" y="292" width="42" height="15" fill="rgb(240,116,32)"/><text x="715.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (23 samples, 3.54%)</title><rect x="712" y="308" width="42" height="15" fill="rgb(226,180,17)"/><text x="715.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (23 samples, 3.54%)</title><rect x="712" y="324" width="42" height="15" fill="rgb(207,76,54)"/><text x="715.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (21 samples, 3.23%)</title><rect x="716" y="340" width="38" height="15" fill="rgb(247,140,13)"/><text x="719.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.46%)</title><rect x="748" y="356" width="6" height="15" fill="rgb(207,74,49)"/><text x="751.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.31%)</title><rect x="750" y="372" width="4" height="15" fill="rgb(208,49,54)"/><text x="753.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.31%)</title><rect x="750" y="388" width="4" height="15" fill="rgb(228,95,9)"/><text x="753.00" y="398.50"></text></g><g><title>FLOAT_divide (loops.c.src) (1 samples, 0.15%)</title><rect x="756" y="324" width="1" height="15" fill="rgb(252,213,31)"/><text x="759.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="756" y="340" width="1" height="15" fill="rgb(224,55,32)"/><text x="759.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="756" y="356" width="1" height="15" fill="rgb(240,125,15)"/><text x="759.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.15%)</title><rect x="756" y="372" width="1" height="15" fill="rgb(245,158,15)"/><text x="759.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="757" y="324" width="2" height="15" fill="rgb(225,129,10)"/><text x="760.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (167 samples, 25.69%)</title><rect x="465" y="132" width="303" height="15" fill="rgb(254,28,27)"/><text x="468.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (167 samples, 25.69%)</title><rect x="465" y="148" width="303" height="15" fill="rgb(232,27,48)"/><text x="468.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (165 samples, 25.38%)</title><rect x="469" y="164" width="299" height="15" fill="rgb(254,38,52)"/><text x="472.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (162 samples, 24.92%)</title><rect x="474" y="180" width="294" height="15" fill="rgb(233,181,53)"/><text x="477.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_no..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (157 samples, 24.15%)</title><rect x="483" y="196" width="285" height="15" fill="rgb(240,118,44)"/><text x="486.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (156 samples, 24.00%)</title><rect x="485" y="212" width="283" height="15" fill="rgb(235,3,33)"/><text x="488.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 5.38%)</title><rect x="705" y="228" width="63" height="15" fill="rgb(234,41,51)"/><text x="708.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 5.38%)</title><rect x="705" y="244" width="63" height="15" fill="rgb(251,135,48)"/><text x="708.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.23%)</title><rect x="754" y="260" width="14" height="15" fill="rgb(224,216,31)"/><text x="757.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.08%)</title><rect x="756" y="276" width="12" height="15" fill="rgb(243,38,11)"/><text x="759.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.08%)</title><rect x="756" y="292" width="12" height="15" fill="rgb(246,134,53)"/><text x="759.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.08%)</title><rect x="756" y="308" width="12" height="15" fill="rgb(222,0,30)"/><text x="759.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.77%)</title><rect x="759" y="324" width="9" height="15" fill="rgb(215,63,37)"/><text x="762.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.77%)</title><rect x="759" y="340" width="9" height="15" fill="rgb(225,84,46)"/><text x="762.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.77%)</title><rect x="759" y="356" width="9" height="15" fill="rgb(232,154,32)"/><text x="762.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 0.62%)</title><rect x="761" y="372" width="7" height="15" fill="rgb(240,211,54)"/><text x="764.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (170 samples, 26.15%)</title><rect x="462" y="100" width="308" height="15" fill="rgb(213,184,7)"/><text x="465.00" y="110.50">profile (bench_LogisticRegression_libline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (169 samples, 26.00%)</title><rect x="463" y="116" width="307" height="15" fill="rgb(246,97,27)"/><text x="466.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="768" y="132" width="2" height="15" fill="rgb(215,141,37)"/><text x="771.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (172 samples, 26.46%)</title><rect x="462" y="68" width="312" height="15" fill="rgb(230,181,45)"/><text x="465.00" y="78.50">profile_pyrt (bench_LogisticRegression_lib..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (172 samples, 26.46%)</title><rect x="462" y="84" width="312" height="15" fill="rgb(212,19,54)"/><text x="465.00" y="94.50">setup_profile (bench_LogisticRegression_li..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="770" y="100" width="4" height="15" fill="rgb(216,82,6)"/><text x="773.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="770" y="116" width="4" height="15" fill="rgb(205,11,2)"/><text x="773.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="770" y="132" width="4" height="15" fill="rgb(217,180,49)"/><text x="773.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="770" y="148" width="4" height="15" fill="rgb(240,182,37)"/><text x="773.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="770" y="164" width="4" height="15" fill="rgb(233,210,37)"/><text x="773.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.31%)</title><rect x="770" y="180" width="4" height="15" fill="rgb(253,12,52)"/><text x="773.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.31%)</title><rect x="770" y="196" width="4" height="15" fill="rgb(207,67,17)"/><text x="773.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="212" width="4" height="15" fill="rgb(241,10,28)"/><text x="773.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="228" width="4" height="15" fill="rgb(253,120,40)"/><text x="773.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="244" width="4" height="15" fill="rgb(219,213,50)"/><text x="773.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="770" y="260" width="4" height="15" fill="rgb(253,53,32)"/><text x="773.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="276" width="4" height="15" fill="rgb(221,14,18)"/><text x="773.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.31%)</title><rect x="770" y="292" width="4" height="15" fill="rgb(239,95,14)"/><text x="773.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="308" width="4" height="15" fill="rgb(206,195,7)"/><text x="773.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="324" width="4" height="15" fill="rgb(222,142,52)"/><text x="773.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="340" width="4" height="15" fill="rgb(237,225,44)"/><text x="773.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="770" y="356" width="4" height="15" fill="rgb(209,87,3)"/><text x="773.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="372" width="4" height="15" fill="rgb(244,196,3)"/><text x="773.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.31%)</title><rect x="770" y="388" width="4" height="15" fill="rgb(223,156,37)"/><text x="773.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="404" width="4" height="15" fill="rgb(248,81,7)"/><text x="773.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="420" width="4" height="15" fill="rgb(231,204,49)"/><text x="773.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="436" width="4" height="15" fill="rgb(242,106,54)"/><text x="773.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="770" y="452" width="4" height="15" fill="rgb(217,129,32)"/><text x="773.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="770" y="468" width="4" height="15" fill="rgb(218,154,18)"/><text x="773.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.31%)</title><rect x="770" y="484" width="4" height="15" fill="rgb(213,214,23)"/><text x="773.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.31%)</title><rect x="770" y="500" width="4" height="15" fill="rgb(248,149,29)"/><text x="773.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.31%)</title><rect x="770" y="516" width="4" height="15" fill="rgb(216,156,6)"/><text x="773.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.31%)</title><rect x="770" y="532" width="4" height="15" fill="rgb(242,123,7)"/><text x="773.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.31%)</title><rect x="770" y="548" width="4" height="15" fill="rgb(253,177,19)"/><text x="773.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py) (2 samples, 0.31%)</title><rect x="770" y="564" width="4" height="15" fill="rgb(216,162,40)"/><text x="773.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="580" width="4" height="15" fill="rgb(240,1,44)"/><text x="773.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="596" width="4" height="15" fill="rgb(242,97,52)"/><text x="773.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="612" width="4" height="15" fill="rgb(213,20,15)"/><text x="773.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="628" width="4" height="15" fill="rgb(239,172,21)"/><text x="773.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="644" width="4" height="15" fill="rgb(233,114,24)"/><text x="773.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="660" width="4" height="15" fill="rgb(210,115,53)"/><text x="773.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="676" width="4" height="15" fill="rgb(215,166,10)"/><text x="773.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="692" width="4" height="15" fill="rgb(247,108,20)"/><text x="773.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="708" width="4" height="15" fill="rgb(224,20,7)"/><text x="773.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="724" width="4" height="15" fill="rgb(232,63,13)"/><text x="773.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="740" width="4" height="15" fill="rgb(234,88,33)"/><text x="773.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py) (2 samples, 0.31%)</title><rect x="770" y="756" width="4" height="15" fill="rgb(254,175,46)"/><text x="773.00" y="766.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="772" width="2" height="15" fill="rgb(211,209,51)"/><text x="775.00" y="782.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="788" width="2" height="15" fill="rgb(244,66,35)"/><text x="775.00" y="798.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="804" width="2" height="15" fill="rgb(234,28,52)"/><text x="775.00" y="814.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="820" width="2" height="15" fill="rgb(228,146,47)"/><text x="775.00" y="830.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="836" width="2" height="15" fill="rgb(207,4,28)"/><text x="775.00" y="846.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="852" width="2" height="15" fill="rgb(237,1,24)"/><text x="775.00" y="862.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="868" width="2" height="15" fill="rgb(212,126,12)"/><text x="775.00" y="878.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="884" width="2" height="15" fill="rgb(231,34,51)"/><text x="775.00" y="894.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="900" width="2" height="15" fill="rgb(216,183,36)"/><text x="775.00" y="910.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="916" width="2" height="15" fill="rgb(210,65,51)"/><text x="775.00" y="926.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="932" width="2" height="15" fill="rgb(247,171,40)"/><text x="775.00" y="942.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="948" width="2" height="15" fill="rgb(216,139,52)"/><text x="775.00" y="958.50"></text></g><g><title>parse_postfix (jinja2/parser.py) (1 samples, 0.15%)</title><rect x="772" y="964" width="2" height="15" fill="rgb(244,53,43)"/><text x="775.00" y="974.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="776" y="116" width="1" height="15" fill="rgb(246,185,27)"/><text x="779.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="776" y="132" width="1" height="15" fill="rgb(220,112,0)"/><text x="779.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="776" y="148" width="1" height="15" fill="rgb(206,1,19)"/><text x="779.00" y="158.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="785" y="244" width="1" height="15" fill="rgb(210,16,1)"/><text x="788.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="785" y="260" width="1" height="15" fill="rgb(213,30,52)"/><text x="788.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="785" y="276" width="1" height="15" fill="rgb(226,40,9)"/><text x="788.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="785" y="292" width="1" height="15" fill="rgb(233,132,5)"/><text x="788.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="785" y="308" width="1" height="15" fill="rgb(247,40,26)"/><text x="788.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.15%)</title><rect x="788" y="308" width="2" height="15" fill="rgb(217,95,20)"/><text x="791.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.31%)</title><rect x="788" y="292" width="4" height="15" fill="rgb(206,111,40)"/><text x="791.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.15%)</title><rect x="790" y="308" width="2" height="15" fill="rgb(240,107,13)"/><text x="793.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="796" y="340" width="1" height="15" fill="rgb(251,148,11)"/><text x="799.00" y="350.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.62%)</title><rect x="792" y="292" width="7" height="15" fill="rgb(220,227,30)"/><text x="795.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 0.62%)</title><rect x="792" y="308" width="7" height="15" fill="rgb(221,102,34)"/><text x="795.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (4 samples, 0.62%)</title><rect x="792" y="324" width="7" height="15" fill="rgb(239,9,39)"/><text x="795.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="797" y="340" width="2" height="15" fill="rgb(254,3,43)"/><text x="800.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (5 samples, 0.77%)</title><rect x="803" y="308" width="9" height="15" fill="rgb(242,150,30)"/><text x="806.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.46%)</title><rect x="806" y="324" width="6" height="15" fill="rgb(217,10,18)"/><text x="809.00" y="334.50"></text></g><g><title>array_sum (methods.c) (20 samples, 3.08%)</title><rect x="783" y="180" width="36" height="15" fill="rgb(251,131,24)"/><text x="786.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (20 samples, 3.08%)</title><rect x="783" y="196" width="36" height="15" fill="rgb(232,108,27)"/><text x="786.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 2.92%)</title><rect x="785" y="212" width="34" height="15" fill="rgb(247,172,49)"/><text x="788.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (19 samples, 2.92%)</title><rect x="785" y="228" width="34" height="15" fill="rgb(220,93,37)"/><text x="788.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (18 samples, 2.77%)</title><rect x="786" y="244" width="33" height="15" fill="rgb(237,197,49)"/><text x="789.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (17 samples, 2.62%)</title><rect x="788" y="260" width="31" height="15" fill="rgb(232,157,43)"/><text x="791.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (17 samples, 2.62%)</title><rect x="788" y="276" width="31" height="15" fill="rgb(217,101,45)"/><text x="791.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (11 samples, 1.69%)</title><rect x="799" y="292" width="20" height="15" fill="rgb(232,217,22)"/><text x="802.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 0.62%)</title><rect x="812" y="308" width="7" height="15" fill="rgb(243,102,20)"/><text x="815.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.15%)</title><rect x="826" y="196" width="2" height="15" fill="rgb(244,51,42)"/><text x="829.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.15%)</title><rect x="826" y="212" width="2" height="15" fill="rgb(213,215,2)"/><text x="829.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="830" y="356" width="2" height="15" fill="rgb(241,96,8)"/><text x="833.00" y="366.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.31%)</title><rect x="830" y="308" width="4" height="15" fill="rgb(242,115,13)"/><text x="833.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.31%)</title><rect x="830" y="324" width="4" height="15" fill="rgb(218,134,1)"/><text x="833.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.31%)</title><rect x="830" y="340" width="4" height="15" fill="rgb(229,136,13)"/><text x="833.00" y="350.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.15%)</title><rect x="832" y="356" width="2" height="15" fill="rgb(219,46,1)"/><text x="835.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.46%)</title><rect x="830" y="292" width="6" height="15" fill="rgb(238,79,43)"/><text x="833.00" y="302.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.15%)</title><rect x="834" y="308" width="2" height="15" fill="rgb(216,164,51)"/><text x="837.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.15%)</title><rect x="836" y="292" width="1" height="15" fill="rgb(228,137,38)"/><text x="839.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.77%)</title><rect x="830" y="276" width="9" height="15" fill="rgb(217,99,5)"/><text x="833.00" y="286.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.15%)</title><rect x="837" y="292" width="2" height="15" fill="rgb(220,70,40)"/><text x="840.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.15%)</title><rect x="839" y="276" width="2" height="15" fill="rgb(216,115,16)"/><text x="842.00" y="286.50"></text></g><g><title>0x7f5463f1cd62 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="843" y="324" width="2" height="15" fill="rgb(254,137,49)"/><text x="846.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.46%)</title><rect x="841" y="276" width="5" height="15" fill="rgb(235,199,13)"/><text x="844.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.46%)</title><rect x="841" y="292" width="5" height="15" fill="rgb(228,178,4)"/><text x="844.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.46%)</title><rect x="841" y="308" width="5" height="15" fill="rgb(221,143,8)"/><text x="844.00" y="318.50"></text></g><g><title>0x7f5463f1cd6a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="845" y="324" width="1" height="15" fill="rgb(234,124,53)"/><text x="848.00" y="334.50"></text></g><g><title>array_add (number.c) (11 samples, 1.69%)</title><rect x="828" y="196" width="20" height="15" fill="rgb(243,210,12)"/><text x="831.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 1.69%)</title><rect x="828" y="212" width="20" height="15" fill="rgb(220,51,17)"/><text x="831.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 1.69%)</title><rect x="828" y="228" width="20" height="15" fill="rgb(218,174,9)"/><text x="831.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 1.69%)</title><rect x="828" y="244" width="20" height="15" fill="rgb(226,58,54)"/><text x="831.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.54%)</title><rect x="830" y="260" width="18" height="15" fill="rgb(222,117,5)"/><text x="833.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="846" y="276" width="2" height="15" fill="rgb(250,62,36)"/><text x="849.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.15%)</title><rect x="865" y="212" width="1" height="15" fill="rgb(223,61,36)"/><text x="868.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.46%)</title><rect x="866" y="212" width="6" height="15" fill="rgb(233,103,8)"/><text x="869.00" y="222.50"></text></g><g><title>0x7f5463f12e7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="885" y="228" width="1" height="15" fill="rgb(249,157,28)"/><text x="888.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 1.54%)</title><rect x="872" y="212" width="18" height="15" fill="rgb(222,28,42)"/><text x="875.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.31%)</title><rect x="886" y="228" width="4" height="15" fill="rgb(254,187,12)"/><text x="889.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (25 samples, 3.85%)</title><rect x="848" y="196" width="46" height="15" fill="rgb(251,142,28)"/><text x="851.00" y="206.50">chec..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.31%)</title><rect x="890" y="212" width="4" height="15" fill="rgb(215,73,17)"/><text x="893.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.31%)</title><rect x="890" y="228" width="4" height="15" fill="rgb(252,181,2)"/><text x="893.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.31%)</title><rect x="903" y="228" width="3" height="15" fill="rgb(254,6,42)"/><text x="906.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 1.23%)</title><rect x="894" y="196" width="14" height="15" fill="rgb(229,195,7)"/><text x="897.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 1.23%)</title><rect x="894" y="212" width="14" height="15" fill="rgb(254,151,18)"/><text x="897.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="906" y="228" width="2" height="15" fill="rgb(240,223,14)"/><text x="909.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.77%)</title><rect x="912" y="212" width="9" height="15" fill="rgb(232,76,48)"/><text x="915.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (29 samples, 4.46%)</title><rect x="921" y="212" width="52" height="15" fill="rgb(227,47,28)"/><text x="924.00" y="222.50">dgemm..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="973" y="228" width="2" height="15" fill="rgb(252,161,34)"/><text x="976.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="973" y="244" width="2" height="15" fill="rgb(231,211,32)"/><text x="976.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="973" y="260" width="2" height="15" fill="rgb(212,216,54)"/><text x="976.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (18 samples, 2.77%)</title><rect x="979" y="260" width="33" height="15" fill="rgb(239,173,14)"/><text x="982.00" y="270.50">DO..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 2.62%)</title><rect x="981" y="276" width="31" height="15" fill="rgb(248,142,34)"/><text x="984.00" y="286.50">cb..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (17 samples, 2.62%)</title><rect x="981" y="292" width="31" height="15" fill="rgb(209,128,25)"/><text x="984.00" y="302.50">dg..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 2.46%)</title><rect x="983" y="308" width="29" height="15" fill="rgb(223,226,1)"/><text x="986.00" y="318.50">dg..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (26 samples, 4.00%)</title><rect x="1012" y="292" width="47" height="15" fill="rgb(220,20,15)"/><text x="1015.00" y="302.50">PyAr..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (26 samples, 4.00%)</title><rect x="1012" y="308" width="47" height="15" fill="rgb(210,36,53)"/><text x="1015.00" y="318.50">raw_..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (26 samples, 4.00%)</title><rect x="1012" y="324" width="47" height="15" fill="rgb(246,13,30)"/><text x="1015.00" y="334.50">_ali..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (27 samples, 4.15%)</title><rect x="1012" y="260" width="49" height="15" fill="rgb(221,32,26)"/><text x="1015.00" y="270.50">NpyI..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (27 samples, 4.15%)</title><rect x="1012" y="276" width="49" height="15" fill="rgb(248,185,49)"/><text x="1015.00" y="286.50">npyi..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1059" y="292" width="2" height="15" fill="rgb(250,55,37)"/><text x="1062.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="1059" y="308" width="2" height="15" fill="rgb(240,33,6)"/><text x="1062.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="1059" y="324" width="2" height="15" fill="rgb(205,183,44)"/><text x="1062.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1059" y="340" width="2" height="15" fill="rgb(231,201,6)"/><text x="1062.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.31%)</title><rect x="1061" y="260" width="3" height="15" fill="rgb(254,57,11)"/><text x="1064.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.31%)</title><rect x="1061" y="276" width="3" height="15" fill="rgb(241,142,2)"/><text x="1064.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (2 samples, 0.31%)</title><rect x="1061" y="292" width="3" height="15" fill="rgb(217,31,37)"/><text x="1064.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.31%)</title><rect x="1061" y="308" width="3" height="15" fill="rgb(225,3,30)"/><text x="1064.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (50 samples, 7.69%)</title><rect x="975" y="228" width="91" height="15" fill="rgb(243,218,52)"/><text x="978.00" y="238.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (49 samples, 7.54%)</title><rect x="977" y="244" width="89" height="15" fill="rgb(229,151,23)"/><text x="980.00" y="254.50">PyUFunc_Ge..</text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1064" y="260" width="2" height="15" fill="rgb(205,187,2)"/><text x="1067.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (138 samples, 21.23%)</title><rect x="819" y="180" width="251" height="15" fill="rgb(230,103,14)"/><text x="822.00" y="190.50">decision_function (sklearn/linear..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (89 samples, 13.69%)</title><rect x="908" y="196" width="162" height="15" fill="rgb(240,150,18)"/><text x="911.00" y="206.50">safe_sparse_dot (skl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (53 samples, 8.15%)</title><rect x="973" y="212" width="97" height="15" fill="rgb(230,227,31)"/><text x="976.00" y="222.50">ufunc_gener..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.31%)</title><rect x="1066" y="228" width="4" height="15" fill="rgb(209,102,36)"/><text x="1069.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1072" y="212" width="1" height="15" fill="rgb(220,75,35)"/><text x="1075.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="1072" y="228" width="1" height="15" fill="rgb(237,176,31)"/><text x="1075.00" y="238.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1073" y="260" width="2" height="15" fill="rgb(205,187,46)"/><text x="1076.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1073" y="276" width="2" height="15" fill="rgb(231,9,23)"/><text x="1076.00" y="286.50"></text></g><g><title>0x7f5463eb47c2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1073" y="292" width="2" height="15" fill="rgb(241,61,32)"/><text x="1076.00" y="302.50"></text></g><g><title>0x7f5463eb47c2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1073" y="308" width="2" height="15" fill="rgb(248,22,45)"/><text x="1076.00" y="318.50"></text></g><g><title>0x7f5463eb48c0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1073" y="324" width="2" height="15" fill="rgb(209,75,2)"/><text x="1076.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.31%)</title><rect x="1073" y="228" width="4" height="15" fill="rgb(218,94,9)"/><text x="1076.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.31%)</title><rect x="1073" y="244" width="4" height="15" fill="rgb(209,195,22)"/><text x="1076.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1075" y="260" width="2" height="15" fill="rgb(245,172,31)"/><text x="1078.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1075" y="276" width="2" height="15" fill="rgb(219,83,36)"/><text x="1078.00" y="286.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1075" y="292" width="2" height="15" fill="rgb(229,15,22)"/><text x="1078.00" y="302.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1075" y="308" width="2" height="15" fill="rgb(230,107,51)"/><text x="1078.00" y="318.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="1077" y="292" width="2" height="15" fill="rgb(212,32,10)"/><text x="1080.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (7 samples, 1.08%)</title><rect x="1077" y="244" width="13" height="15" fill="rgb(234,71,5)"/><text x="1080.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (7 samples, 1.08%)</title><rect x="1077" y="260" width="13" height="15" fill="rgb(223,102,51)"/><text x="1080.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (7 samples, 1.08%)</title><rect x="1077" y="276" width="13" height="15" fill="rgb(211,110,0)"/><text x="1080.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 0.92%)</title><rect x="1079" y="292" width="11" height="15" fill="rgb(243,194,12)"/><text x="1082.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1090" y="260" width="1" height="15" fill="rgb(246,118,12)"/><text x="1093.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.31%)</title><rect x="1090" y="244" width="3" height="15" fill="rgb(243,110,40)"/><text x="1093.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1091" y="260" width="2" height="15" fill="rgb(248,87,53)"/><text x="1094.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (18 samples, 2.77%)</title><rect x="1077" y="228" width="33" height="15" fill="rgb(248,31,25)"/><text x="1080.00" y="238.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (9 samples, 1.38%)</title><rect x="1093" y="244" width="17" height="15" fill="rgb(229,21,5)"/><text x="1096.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (9 samples, 1.38%)</title><rect x="1093" y="260" width="17" height="15" fill="rgb(224,27,29)"/><text x="1096.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 1.08%)</title><rect x="1097" y="276" width="13" height="15" fill="rgb(234,167,10)"/><text x="1100.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (7 samples, 1.08%)</title><rect x="1097" y="292" width="13" height="15" fill="rgb(250,132,53)"/><text x="1100.00" y="302.50"></text></g><g><title>0x7f54462e0fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1110" y="276" width="1" height="15" fill="rgb(232,213,31)"/><text x="1113.00" y="286.50"></text></g><g><title>0x7f54640481b0 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1117" y="292" width="4" height="15" fill="rgb(220,61,39)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f54640ceba0 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1121" y="292" width="3" height="15" fill="rgb(247,129,37)"/><text x="1124.00" y="302.50"></text></g><g><title>0x7f54640cebb4 (libm-2.29.so) (3 samples, 0.46%)</title><rect x="1124" y="292" width="6" height="15" fill="rgb(233,139,34)"/><text x="1127.00" y="302.50"></text></g><g><title>0x7f54640cebd3 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1130" y="292" width="3" height="15" fill="rgb(224,123,49)"/><text x="1133.00" y="302.50"></text></g><g><title>0x7f54640cebf9 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1133" y="292" width="2" height="15" fill="rgb(253,9,37)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7f54640cec07 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1135" y="292" width="2" height="15" fill="rgb(252,39,51)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7f54640cec18 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(212,212,18)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7f54640cec2e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1139" y="292" width="1" height="15" fill="rgb(229,41,18)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7f54640cec3e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1140" y="292" width="2" height="15" fill="rgb(239,17,35)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7f5446323265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.23%)</title><rect x="1110" y="260" width="38" height="15" fill="rgb(240,14,8)"/><text x="1113.00" y="270.50">0x7..</text></g><g><title>exp (libm-2.29.so) (20 samples, 3.08%)</title><rect x="1111" y="276" width="37" height="15" fill="rgb(244,27,27)"/><text x="1114.00" y="286.50">exp..</text></g><g><title>0x7f54640cec6a (libm-2.29.so) (3 samples, 0.46%)</title><rect x="1142" y="292" width="6" height="15" fill="rgb(249,215,32)"/><text x="1145.00" y="302.50"></text></g><g><title>0x7f5446323275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1148" y="260" width="3" height="15" fill="rgb(246,210,49)"/><text x="1151.00" y="270.50"></text></g><g><title>0x7f54463029dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (35 samples, 5.38%)</title><rect x="1110" y="244" width="63" height="15" fill="rgb(239,97,5)"/><text x="1113.00" y="254.50">0x7f54..</text></g><g><title>0x7f5446323279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.85%)</title><rect x="1151" y="260" width="22" height="15" fill="rgb(215,172,29)"/><text x="1154.00" y="270.50">0..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (56 samples, 8.62%)</title><rect x="1073" y="212" width="102" height="15" fill="rgb(220,102,51)"/><text x="1076.00" y="222.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (36 samples, 5.54%)</title><rect x="1110" y="228" width="65" height="15" fill="rgb(237,84,4)"/><text x="1113.00" y="238.50">trivial..</text></g><g><title>0x7f544632313e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1173" y="244" width="2" height="15" fill="rgb(227,178,10)"/><text x="1176.00" y="254.50"></text></g><g><title>0x7f5446322ef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1173" y="260" width="2" height="15" fill="rgb(238,126,34)"/><text x="1176.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (218 samples, 33.54%)</title><rect x="781" y="164" width="396" height="15" fill="rgb(254,71,2)"/><text x="784.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (59 samples, 9.08%)</title><rect x="1070" y="180" width="107" height="15" fill="rgb(211,69,44)"/><text x="1073.00" y="190.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (59 samples, 9.08%)</title><rect x="1070" y="196" width="107" height="15" fill="rgb(235,28,10)"/><text x="1073.00" y="206.50">PyUFunc_Gener..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1175" y="212" width="2" height="15" fill="rgb(236,83,53)"/><text x="1178.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="1182" y="196" width="2" height="15" fill="rgb(217,17,32)"/><text x="1185.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (226 samples, 34.77%)</title><rect x="777" y="132" width="411" height="15" fill="rgb(250,46,13)"/><text x="780.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (226 samples, 34.77%)</title><rect x="777" y="148" width="411" height="15" fill="rgb(234,193,20)"/><text x="780.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.92%)</title><rect x="1177" y="164" width="11" height="15" fill="rgb(233,212,46)"/><text x="1180.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 0.92%)</title><rect x="1177" y="180" width="11" height="15" fill="rgb(250,185,27)"/><text x="1180.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.31%)</title><rect x="1184" y="196" width="4" height="15" fill="rgb(230,96,8)"/><text x="1187.00" y="206.50"></text></g><g><title>all (650 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(216,28,4)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (650 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(227,188,28)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (229 samples, 35.23%)</title><rect x="774" y="68" width="416" height="15" fill="rgb(239,106,44)"/><text x="777.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (229 samples, 35.23%)</title><rect x="774" y="84" width="416" height="15" fill="rgb(247,139,10)"/><text x="777.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_nozipmap.py) (229 samples, 35.23%)</title><rect x="774" y="100" width="416" height="15" fill="rgb(232,204,25)"/><text x="777.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (227 samples, 34.92%)</title><rect x="777" y="116" width="413" height="15" fill="rgb(226,207,29)"/><text x="780.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(225,171,13)"/><text x="1191.00" y="142.50"></text></g></g></svg>