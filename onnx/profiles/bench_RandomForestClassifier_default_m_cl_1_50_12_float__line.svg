<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.28%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(244,19,50)"/><text x="13.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.28%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(239,200,19)"/><text x="13.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:151) (1 samples, 0.28%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(205,206,13)"/><text x="13.00" y="206.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (2 samples, 0.56%)</title><rect x="10" y="116" width="6" height="15" fill="rgb(238,58,19)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (2 samples, 0.56%)</title><rect x="10" y="132" width="6" height="15" fill="rgb(234,186,4)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (2 samples, 0.56%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(241,210,27)"/><text x="13.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:74) (1 samples, 0.28%)</title><rect x="13" y="164" width="3" height="15" fill="rgb(209,159,1)"/><text x="16.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.28%)</title><rect x="16" y="148" width="3" height="15" fill="rgb(231,163,3)"/><text x="19.00" y="158.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.28%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(242,24,54)"/><text x="19.00" y="174.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.28%)</title><rect x="16" y="180" width="3" height="15" fill="rgb(212,146,8)"/><text x="19.00" y="190.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (1 samples, 0.28%)</title><rect x="19" y="244" width="4" height="15" fill="rgb(216,190,38)"/><text x="22.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (1 samples, 0.28%)</title><rect x="19" y="260" width="4" height="15" fill="rgb(205,193,50)"/><text x="22.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.28%)</title><rect x="19" y="276" width="4" height="15" fill="rgb(222,90,17)"/><text x="22.00" y="286.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.28%)</title><rect x="19" y="292" width="4" height="15" fill="rgb(219,112,17)"/><text x="22.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.28%)</title><rect x="19" y="308" width="4" height="15" fill="rgb(211,18,23)"/><text x="22.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.28%)</title><rect x="19" y="324" width="4" height="15" fill="rgb(228,59,50)"/><text x="22.00" y="334.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.28%)</title><rect x="19" y="340" width="4" height="15" fill="rgb(245,228,36)"/><text x="22.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c:2560) (1 samples, 0.28%)</title><rect x="19" y="356" width="4" height="15" fill="rgb(234,163,41)"/><text x="22.00" y="366.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (mt19937.c:10444) (1 samples, 0.28%)</title><rect x="19" y="372" width="4" height="15" fill="rgb(231,205,52)"/><text x="22.00" y="382.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (mt19937.c:10285) (1 samples, 0.28%)</title><rect x="19" y="388" width="4" height="15" fill="rgb(225,124,13)"/><text x="22.00" y="398.50"></text></g><g><title>fit (sklearn/tree/_classes.py:173) (1 samples, 0.28%)</title><rect x="23" y="276" width="3" height="15" fill="rgb(220,71,40)"/><text x="26.00" y="286.50"></text></g><g><title>check_classification_targets (sklearn/utils/multiclass.py:166) (1 samples, 0.28%)</title><rect x="23" y="292" width="3" height="15" fill="rgb(232,36,26)"/><text x="26.00" y="302.50"></text></g><g><title>type_of_target (sklearn/utils/multiclass.py:282) (1 samples, 0.28%)</title><rect x="23" y="308" width="3" height="15" fill="rgb(239,202,9)"/><text x="26.00" y="318.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="23" y="324" width="3" height="15" fill="rgb(249,27,35)"/><text x="26.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="23" y="340" width="3" height="15" fill="rgb(254,184,35)"/><text x="26.00" y="350.50"></text></g><g><title>any (numpy/core/fromnumeric.py:2270) (1 samples, 0.28%)</title><rect x="23" y="356" width="3" height="15" fill="rgb(223,17,53)"/><text x="26.00" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.28%)</title><rect x="23" y="372" width="3" height="15" fill="rgb(222,27,2)"/><text x="26.00" y="382.50"></text></g><g><title>0x7fd9d02f5b11 (?) (1 samples, 0.28%)</title><rect x="26" y="292" width="3" height="15" fill="rgb(239,49,52)"/><text x="29.00" y="302.50"></text></g><g><title>0x7fd9d032710a (?) (1 samples, 0.28%)</title><rect x="26" y="308" width="3" height="15" fill="rgb(221,67,47)"/><text x="29.00" y="318.50"></text></g><g><title>0x7fd9d0552ecd (?) (1 samples, 0.28%)</title><rect x="26" y="324" width="3" height="15" fill="rgb(213,108,47)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:31) (7 samples, 1.96%)</title><rect x="10" y="52" width="23" height="15" fill="rgb(212,179,48)"/><text x="13.00" y="62.50">&lt;..</text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:11) (7 samples, 1.96%)</title><rect x="10" y="68" width="23" height="15" fill="rgb(239,1,12)"/><text x="13.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:39) (7 samples, 1.96%)</title><rect x="10" y="84" width="23" height="15" fill="rgb(242,141,2)"/><text x="13.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (7 samples, 1.96%)</title><rect x="10" y="100" width="23" height="15" fill="rgb(245,80,53)"/><text x="13.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (5 samples, 1.40%)</title><rect x="16" y="116" width="17" height="15" fill="rgb(252,215,25)"/><text x="19.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (5 samples, 1.40%)</title><rect x="16" y="132" width="17" height="15" fill="rgb(234,140,28)"/><text x="19.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (4 samples, 1.12%)</title><rect x="19" y="148" width="14" height="15" fill="rgb(236,78,53)"/><text x="22.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (4 samples, 1.12%)</title><rect x="19" y="164" width="14" height="15" fill="rgb(210,0,16)"/><text x="22.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (4 samples, 1.12%)</title><rect x="19" y="180" width="14" height="15" fill="rgb(243,75,4)"/><text x="22.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (4 samples, 1.12%)</title><rect x="19" y="196" width="14" height="15" fill="rgb(217,207,22)"/><text x="22.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (4 samples, 1.12%)</title><rect x="19" y="212" width="14" height="15" fill="rgb(212,80,28)"/><text x="22.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (4 samples, 1.12%)</title><rect x="19" y="228" width="14" height="15" fill="rgb(240,203,37)"/><text x="22.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (3 samples, 0.84%)</title><rect x="23" y="244" width="10" height="15" fill="rgb(219,203,18)"/><text x="26.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (3 samples, 0.84%)</title><rect x="23" y="260" width="10" height="15" fill="rgb(228,111,7)"/><text x="26.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (2 samples, 0.56%)</title><rect x="26" y="276" width="7" height="15" fill="rgb(254,117,33)"/><text x="29.00" y="286.50"></text></g><g><title>0x7fd9d02f5b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="292" width="4" height="15" fill="rgb(253,149,32)"/><text x="32.00" y="302.50"></text></g><g><title>0x7fd9d032710a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="308" width="4" height="15" fill="rgb(221,47,37)"/><text x="32.00" y="318.50"></text></g><g><title>0x7fd9d0552e72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="324" width="4" height="15" fill="rgb(210,181,1)"/><text x="32.00" y="334.50"></text></g><g><title>0x7fd9d0785c77 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="340" width="4" height="15" fill="rgb(252,120,2)"/><text x="32.00" y="350.50"></text></g><g><title>0x7fd9d0786162 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="356" width="4" height="15" fill="rgb(218,18,31)"/><text x="32.00" y="366.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.28%)</title><rect x="33" y="180" width="3" height="15" fill="rgb(238,225,2)"/><text x="36.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.28%)</title><rect x="33" y="196" width="3" height="15" fill="rgb(207,148,16)"/><text x="36.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.28%)</title><rect x="33" y="212" width="3" height="15" fill="rgb(227,132,3)"/><text x="36.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.28%)</title><rect x="33" y="228" width="3" height="15" fill="rgb(210,182,52)"/><text x="36.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (1 samples, 0.28%)</title><rect x="33" y="244" width="3" height="15" fill="rgb(213,138,25)"/><text x="36.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.28%)</title><rect x="33" y="260" width="3" height="15" fill="rgb(207,35,8)"/><text x="36.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.56%)</title><rect x="33" y="164" width="6" height="15" fill="rgb(225,71,25)"/><text x="36.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.28%)</title><rect x="36" y="180" width="3" height="15" fill="rgb(247,162,39)"/><text x="39.00" y="190.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.28%)</title><rect x="36" y="196" width="3" height="15" fill="rgb(214,139,7)"/><text x="39.00" y="206.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="36" y="212" width="3" height="15" fill="rgb(221,161,43)"/><text x="39.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.28%)</title><rect x="46" y="196" width="3" height="15" fill="rgb(218,195,3)"/><text x="49.00" y="206.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.28%)</title><rect x="49" y="196" width="3" height="15" fill="rgb(229,90,35)"/><text x="52.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (3 samples, 0.84%)</title><rect x="46" y="180" width="10" height="15" fill="rgb(213,201,33)"/><text x="49.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.28%)</title><rect x="52" y="196" width="4" height="15" fill="rgb(221,193,16)"/><text x="55.00" y="206.50"></text></g><g><title>update_wrapper (functools.py:52) (2 samples, 0.56%)</title><rect x="69" y="228" width="6" height="15" fill="rgb(238,188,36)"/><text x="72.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (3 samples, 0.84%)</title><rect x="75" y="228" width="10" height="15" fill="rgb(222,220,34)"/><text x="78.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.28%)</title><rect x="85" y="228" width="4" height="15" fill="rgb(216,214,3)"/><text x="88.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.28%)</title><rect x="89" y="228" width="3" height="15" fill="rgb(253,44,32)"/><text x="92.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (12 samples, 3.35%)</title><rect x="56" y="180" width="39" height="15" fill="rgb(251,20,1)"/><text x="59.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (10 samples, 2.79%)</title><rect x="62" y="196" width="33" height="15" fill="rgb(240,100,48)"/><text x="65.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 2.23%)</title><rect x="69" y="212" width="26" height="15" fill="rgb(218,60,6)"/><text x="72.00" y="222.50">d..</text></g><g><title>update_wrapper (functools.py:65) (1 samples, 0.28%)</title><rect x="92" y="228" width="3" height="15" fill="rgb(222,182,51)"/><text x="95.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.28%)</title><rect x="95" y="180" width="3" height="15" fill="rgb(221,84,20)"/><text x="98.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (2 samples, 0.56%)</title><rect x="102" y="196" width="6" height="15" fill="rgb(218,95,12)"/><text x="105.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.28%)</title><rect x="105" y="212" width="3" height="15" fill="rgb(225,157,3)"/><text x="108.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.84%)</title><rect x="112" y="212" width="10" height="15" fill="rgb(240,193,50)"/><text x="115.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (3 samples, 0.84%)</title><rect x="112" y="228" width="10" height="15" fill="rgb(209,183,38)"/><text x="115.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:39) (1 samples, 0.28%)</title><rect x="118" y="244" width="4" height="15" fill="rgb(239,158,3)"/><text x="121.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.28%)</title><rect x="122" y="212" width="3" height="15" fill="rgb(222,106,20)"/><text x="125.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (9 samples, 2.51%)</title><rect x="98" y="180" width="30" height="15" fill="rgb(227,201,41)"/><text x="101.00" y="190.50">di..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (6 samples, 1.68%)</title><rect x="108" y="196" width="20" height="15" fill="rgb(249,173,15)"/><text x="111.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.28%)</title><rect x="125" y="212" width="3" height="15" fill="rgb(246,56,28)"/><text x="128.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (2 samples, 0.56%)</title><rect x="128" y="180" width="7" height="15" fill="rgb(224,83,18)"/><text x="131.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.28%)</title><rect x="131" y="196" width="4" height="15" fill="rgb(219,8,15)"/><text x="134.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.28%)</title><rect x="131" y="212" width="4" height="15" fill="rgb(234,223,41)"/><text x="134.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (2 samples, 0.56%)</title><rect x="135" y="180" width="6" height="15" fill="rgb(216,224,5)"/><text x="138.00" y="190.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.56%)</title><rect x="135" y="196" width="6" height="15" fill="rgb(247,76,0)"/><text x="138.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (2 samples, 0.56%)</title><rect x="135" y="212" width="6" height="15" fill="rgb(248,122,11)"/><text x="138.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.28%)</title><rect x="141" y="196" width="4" height="15" fill="rgb(249,223,23)"/><text x="144.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.28%)</title><rect x="155" y="260" width="3" height="15" fill="rgb(238,61,12)"/><text x="158.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:206) (1 samples, 0.28%)</title><rect x="158" y="260" width="3" height="15" fill="rgb(222,32,10)"/><text x="161.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.28%)</title><rect x="161" y="260" width="3" height="15" fill="rgb(232,216,44)"/><text x="164.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (6 samples, 1.68%)</title><rect x="148" y="244" width="20" height="15" fill="rgb(240,45,24)"/><text x="151.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.28%)</title><rect x="164" y="260" width="4" height="15" fill="rgb(226,51,36)"/><text x="167.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.28%)</title><rect x="168" y="308" width="3" height="15" fill="rgb(226,191,38)"/><text x="171.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.56%)</title><rect x="168" y="292" width="6" height="15" fill="rgb(209,5,18)"/><text x="171.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="171" y="308" width="3" height="15" fill="rgb(239,168,38)"/><text x="174.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="171" y="324" width="3" height="15" fill="rgb(213,67,17)"/><text x="174.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.28%)</title><rect x="174" y="308" width="4" height="15" fill="rgb(248,226,4)"/><text x="177.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.28%)</title><rect x="174" y="324" width="4" height="15" fill="rgb(242,74,28)"/><text x="177.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.28%)</title><rect x="178" y="308" width="3" height="15" fill="rgb(244,105,43)"/><text x="181.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.28%)</title><rect x="184" y="324" width="3" height="15" fill="rgb(241,164,0)"/><text x="187.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 1.96%)</title><rect x="174" y="292" width="23" height="15" fill="rgb(214,218,50)"/><text x="177.00" y="302.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.40%)</title><rect x="181" y="308" width="16" height="15" fill="rgb(220,187,34)"/><text x="184.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.84%)</title><rect x="187" y="324" width="10" height="15" fill="rgb(252,147,44)"/><text x="190.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.56%)</title><rect x="191" y="340" width="6" height="15" fill="rgb(241,190,43)"/><text x="194.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.28%)</title><rect x="197" y="292" width="4" height="15" fill="rgb(215,87,14)"/><text x="200.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.28%)</title><rect x="197" y="308" width="4" height="15" fill="rgb(221,105,0)"/><text x="200.00" y="318.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.28%)</title><rect x="197" y="324" width="4" height="15" fill="rgb(240,138,35)"/><text x="200.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:669) (1 samples, 0.28%)</title><rect x="204" y="436" width="3" height="15" fill="rgb(251,211,28)"/><text x="207.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.28%)</title><rect x="207" y="452" width="4" height="15" fill="rgb(237,210,22)"/><text x="210.00" y="462.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.84%)</title><rect x="204" y="420" width="10" height="15" fill="rgb(212,127,39)"/><text x="207.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (2 samples, 0.56%)</title><rect x="207" y="436" width="7" height="15" fill="rgb(219,213,18)"/><text x="210.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.28%)</title><rect x="211" y="452" width="3" height="15" fill="rgb(251,189,10)"/><text x="214.00" y="462.50"></text></g><g><title>0x7fd9f68cc6c2 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="211" y="468" width="3" height="15" fill="rgb(252,109,40)"/><text x="214.00" y="478.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.28%)</title><rect x="214" y="436" width="3" height="15" fill="rgb(214,17,14)"/><text x="217.00" y="446.50"></text></g><g><title>0x7fd9d030f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.40%)</title><rect x="204" y="356" width="16" height="15" fill="rgb(249,17,27)"/><text x="207.00" y="366.50"></text></g><g><title>0x7fd9d02f3d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.40%)</title><rect x="204" y="372" width="16" height="15" fill="rgb(230,229,35)"/><text x="207.00" y="382.50"></text></g><g><title>0x7fd9d02f3666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.40%)</title><rect x="204" y="388" width="16" height="15" fill="rgb(228,172,14)"/><text x="207.00" y="398.50"></text></g><g><title>0x7fd9d02e92fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.40%)</title><rect x="204" y="404" width="16" height="15" fill="rgb(218,54,10)"/><text x="207.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:801) (2 samples, 0.56%)</title><rect x="214" y="420" width="6" height="15" fill="rgb(253,93,27)"/><text x="217.00" y="430.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.28%)</title><rect x="217" y="436" width="3" height="15" fill="rgb(229,64,37)"/><text x="220.00" y="446.50"></text></g><g><title>0x7fd9d030f6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="220" y="356" width="4" height="15" fill="rgb(233,124,12)"/><text x="223.00" y="366.50"></text></g><g><title>0x7fd9d030f731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="224" y="356" width="3" height="15" fill="rgb(242,107,22)"/><text x="227.00" y="366.50"></text></g><g><title>0x7fd9d0310405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.23%)</title><rect x="204" y="340" width="26" height="15" fill="rgb(242,151,30)"/><text x="207.00" y="350.50">0..</text></g><g><title>0x7fd9d030fa10 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="227" y="356" width="3" height="15" fill="rgb(254,121,51)"/><text x="230.00" y="366.50"></text></g><g><title>0x7fd9d02e5152 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="230" y="356" width="4" height="15" fill="rgb(211,48,41)"/><text x="233.00" y="366.50"></text></g><g><title>0x7fd9d0300fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.79%)</title><rect x="204" y="324" width="33" height="15" fill="rgb(232,34,47)"/><text x="207.00" y="334.50">0x..</text></g><g><title>0x7fd9d0310540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="230" y="340" width="7" height="15" fill="rgb(216,98,9)"/><text x="233.00" y="350.50"></text></g><g><title>0x7fd9d02e52f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="234" y="356" width="3" height="15" fill="rgb(224,110,47)"/><text x="237.00" y="366.50"></text></g><g><title>0x7fd9d02e4530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="234" y="372" width="3" height="15" fill="rgb(254,151,48)"/><text x="237.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.28%)</title><rect x="234" y="388" width="3" height="15" fill="rgb(216,25,35)"/><text x="237.00" y="398.50"></text></g><g><title>0x7fd9d030105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="237" y="324" width="3" height="15" fill="rgb(248,99,29)"/><text x="240.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.28%)</title><rect x="237" y="340" width="3" height="15" fill="rgb(221,88,30)"/><text x="240.00" y="350.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.28%)</title><rect x="237" y="356" width="3" height="15" fill="rgb(238,125,5)"/><text x="240.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.28%)</title><rect x="237" y="372" width="3" height="15" fill="rgb(214,16,40)"/><text x="240.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.28%)</title><rect x="237" y="388" width="3" height="15" fill="rgb(220,218,15)"/><text x="240.00" y="398.50"></text></g><g><title>0x7fd9d030113a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="240" y="324" width="7" height="15" fill="rgb(228,203,15)"/><text x="243.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.56%)</title><rect x="240" y="340" width="7" height="15" fill="rgb(228,155,4)"/><text x="243.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.56%)</title><rect x="240" y="356" width="7" height="15" fill="rgb(242,225,2)"/><text x="243.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.56%)</title><rect x="240" y="372" width="7" height="15" fill="rgb(216,4,25)"/><text x="243.00" y="382.50"></text></g><g><title>0x7fd9d030114f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="247" y="324" width="3" height="15" fill="rgb(236,14,11)"/><text x="250.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="247" y="340" width="3" height="15" fill="rgb(208,196,37)"/><text x="250.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="247" y="356" width="3" height="15" fill="rgb(241,97,52)"/><text x="250.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="247" y="372" width="3" height="15" fill="rgb(226,74,25)"/><text x="250.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (16 samples, 4.47%)</title><rect x="201" y="292" width="52" height="15" fill="rgb(218,168,41)"/><text x="204.00" y="302.50">predi..</text></g><g><title>0x7fd9d0301d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.19%)</title><rect x="204" y="308" width="49" height="15" fill="rgb(250,117,17)"/><text x="207.00" y="318.50">0x7f..</text></g><g><title>0x7fd9d0301328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="250" y="324" width="3" height="15" fill="rgb(241,85,16)"/><text x="253.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.28%)</title><rect x="250" y="340" width="3" height="15" fill="rgb(218,103,2)"/><text x="253.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.28%)</title><rect x="250" y="356" width="3" height="15" fill="rgb(233,45,29)"/><text x="253.00" y="366.50"></text></g><g><title>get_view_from_index (mapping.c:955) (2 samples, 0.56%)</title><rect x="253" y="324" width="7" height="15" fill="rgb(245,202,37)"/><text x="256.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.84%)</title><rect x="253" y="292" width="10" height="15" fill="rgb(219,11,23)"/><text x="256.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (3 samples, 0.84%)</title><rect x="253" y="308" width="10" height="15" fill="rgb(214,96,21)"/><text x="256.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.28%)</title><rect x="260" y="324" width="3" height="15" fill="rgb(250,213,26)"/><text x="263.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.28%)</title><rect x="260" y="340" width="3" height="15" fill="rgb(243,162,45)"/><text x="263.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.28%)</title><rect x="260" y="356" width="3" height="15" fill="rgb(233,41,43)"/><text x="263.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:65) (1 samples, 0.28%)</title><rect x="260" y="372" width="3" height="15" fill="rgb(226,116,46)"/><text x="263.00" y="382.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4426) (1 samples, 0.28%)</title><rect x="267" y="372" width="3" height="15" fill="rgb(242,155,41)"/><text x="270.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.28%)</title><rect x="270" y="404" width="3" height="15" fill="rgb(243,215,39)"/><text x="273.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.28%)</title><rect x="270" y="420" width="3" height="15" fill="rgb(214,159,29)"/><text x="273.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.28%)</title><rect x="270" y="436" width="3" height="15" fill="rgb(240,108,8)"/><text x="273.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.28%)</title><rect x="270" y="452" width="3" height="15" fill="rgb(235,174,41)"/><text x="273.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.28%)</title><rect x="270" y="468" width="3" height="15" fill="rgb(239,10,40)"/><text x="273.00" y="478.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.28%)</title><rect x="270" y="484" width="3" height="15" fill="rgb(224,178,6)"/><text x="273.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.28%)</title><rect x="273" y="404" width="3" height="15" fill="rgb(207,229,38)"/><text x="276.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.28%)</title><rect x="273" y="420" width="3" height="15" fill="rgb(209,119,15)"/><text x="276.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (5 samples, 1.40%)</title><rect x="263" y="292" width="17" height="15" fill="rgb(227,216,39)"/><text x="266.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (4 samples, 1.12%)</title><rect x="267" y="308" width="13" height="15" fill="rgb(224,190,16)"/><text x="270.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (4 samples, 1.12%)</title><rect x="267" y="324" width="13" height="15" fill="rgb(252,127,27)"/><text x="270.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (4 samples, 1.12%)</title><rect x="267" y="340" width="13" height="15" fill="rgb(250,144,27)"/><text x="270.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.12%)</title><rect x="267" y="356" width="13" height="15" fill="rgb(243,30,26)"/><text x="270.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.84%)</title><rect x="270" y="372" width="10" height="15" fill="rgb(232,56,42)"/><text x="273.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.84%)</title><rect x="270" y="388" width="10" height="15" fill="rgb(209,160,10)"/><text x="273.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.28%)</title><rect x="276" y="404" width="4" height="15" fill="rgb(231,57,22)"/><text x="279.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="276" y="420" width="4" height="15" fill="rgb(242,28,22)"/><text x="279.00" y="430.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="276" y="436" width="4" height="15" fill="rgb(231,57,14)"/><text x="279.00" y="446.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.28%)</title><rect x="280" y="308" width="3" height="15" fill="rgb(233,113,52)"/><text x="283.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.28%)</title><rect x="283" y="324" width="3" height="15" fill="rgb(240,114,49)"/><text x="286.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.28%)</title><rect x="283" y="340" width="3" height="15" fill="rgb(242,55,40)"/><text x="286.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1054) (1 samples, 0.28%)</title><rect x="286" y="356" width="4" height="15" fill="rgb(250,48,43)"/><text x="289.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.56%)</title><rect x="286" y="324" width="7" height="15" fill="rgb(228,226,34)"/><text x="289.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.56%)</title><rect x="286" y="340" width="7" height="15" fill="rgb(234,229,39)"/><text x="289.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.28%)</title><rect x="290" y="356" width="3" height="15" fill="rgb(223,58,6)"/><text x="293.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="293" y="372" width="3" height="15" fill="rgb(243,204,34)"/><text x="296.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 1.68%)</title><rect x="280" y="292" width="20" height="15" fill="rgb(238,206,11)"/><text x="283.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 1.40%)</title><rect x="283" y="308" width="17" height="15" fill="rgb(241,122,2)"/><text x="286.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (2 samples, 0.56%)</title><rect x="293" y="324" width="7" height="15" fill="rgb(253,79,54)"/><text x="296.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.56%)</title><rect x="293" y="340" width="7" height="15" fill="rgb(230,171,39)"/><text x="296.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.56%)</title><rect x="293" y="356" width="7" height="15" fill="rgb(228,39,20)"/><text x="296.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="296" y="372" width="4" height="15" fill="rgb(254,95,13)"/><text x="299.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="300" y="324" width="3" height="15" fill="rgb(220,17,35)"/><text x="303.00" y="334.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1341) (1 samples, 0.28%)</title><rect x="300" y="340" width="3" height="15" fill="rgb(237,1,53)"/><text x="303.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.28%)</title><rect x="303" y="340" width="3" height="15" fill="rgb(216,192,15)"/><text x="306.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.28%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(247,71,22)"/><text x="306.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.28%)</title><rect x="306" y="372" width="3" height="15" fill="rgb(214,130,13)"/><text x="309.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.28%)</title><rect x="306" y="388" width="3" height="15" fill="rgb(253,160,46)"/><text x="309.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.28%)</title><rect x="309" y="372" width="4" height="15" fill="rgb(207,137,4)"/><text x="312.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.28%)</title><rect x="313" y="372" width="3" height="15" fill="rgb(211,165,28)"/><text x="316.00" y="382.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.28%)</title><rect x="313" y="388" width="3" height="15" fill="rgb(234,60,52)"/><text x="316.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="316" y="372" width="3" height="15" fill="rgb(238,6,32)"/><text x="319.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2758) (1 samples, 0.28%)</title><rect x="316" y="388" width="3" height="15" fill="rgb(205,51,22)"/><text x="319.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (5 samples, 1.40%)</title><rect x="306" y="356" width="17" height="15" fill="rgb(243,4,9)"/><text x="309.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.28%)</title><rect x="319" y="372" width="4" height="15" fill="rgb(206,6,27)"/><text x="322.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1660) (1 samples, 0.28%)</title><rect x="319" y="388" width="4" height="15" fill="rgb(248,90,48)"/><text x="322.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (48 samples, 13.41%)</title><rect x="168" y="276" width="158" height="15" fill="rgb(239,89,33)"/><text x="171.00" y="286.50">_accumulate_predicti..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 2.23%)</title><rect x="300" y="292" width="26" height="15" fill="rgb(229,150,17)"/><text x="303.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 2.23%)</title><rect x="300" y="308" width="26" height="15" fill="rgb(223,141,36)"/><text x="303.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.96%)</title><rect x="303" y="324" width="23" height="15" fill="rgb(241,186,43)"/><text x="306.00" y="334.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.68%)</title><rect x="306" y="340" width="20" height="15" fill="rgb(245,158,15)"/><text x="309.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="323" y="356" width="3" height="15" fill="rgb(252,39,10)"/><text x="326.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.28%)</title><rect x="323" y="372" width="3" height="15" fill="rgb(249,211,3)"/><text x="326.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.28%)</title><rect x="323" y="388" width="3" height="15" fill="rgb(207,82,24)"/><text x="326.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.28%)</title><rect x="326" y="276" width="3" height="15" fill="rgb(224,228,36)"/><text x="329.00" y="286.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (2 samples, 0.56%)</title><rect x="329" y="276" width="7" height="15" fill="rgb(245,126,30)"/><text x="332.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="333" y="292" width="3" height="15" fill="rgb(251,176,11)"/><text x="336.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="333" y="308" width="3" height="15" fill="rgb(246,74,35)"/><text x="336.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.28%)</title><rect x="333" y="324" width="3" height="15" fill="rgb(233,15,42)"/><text x="336.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (52 samples, 14.53%)</title><rect x="168" y="260" width="171" height="15" fill="rgb(244,131,13)"/><text x="171.00" y="270.50">&lt;listcomp&gt; (joblib/par..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.28%)</title><rect x="336" y="276" width="3" height="15" fill="rgb(226,91,28)"/><text x="339.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (59 samples, 16.48%)</title><rect x="148" y="212" width="194" height="15" fill="rgb(250,187,53)"/><text x="151.00" y="222.50">apply_async (joblib/_para..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (59 samples, 16.48%)</title><rect x="148" y="228" width="194" height="15" fill="rgb(247,136,31)"/><text x="151.00" y="238.50">__init__ (joblib/_paralle..</text></g><g><title>__call__ (joblib/parallel.py:256) (53 samples, 14.80%)</title><rect x="168" y="244" width="174" height="15" fill="rgb(230,78,14)"/><text x="171.00" y="254.50">__call__ (joblib/paral..</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.28%)</title><rect x="339" y="260" width="3" height="15" fill="rgb(246,114,26)"/><text x="342.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.56%)</title><rect x="346" y="228" width="6" height="15" fill="rgb(237,69,7)"/><text x="349.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:335) (1 samples, 0.28%)</title><rect x="352" y="228" width="4" height="15" fill="rgb(220,16,53)"/><text x="355.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.28%)</title><rect x="356" y="228" width="3" height="15" fill="rgb(216,24,53)"/><text x="359.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (66 samples, 18.44%)</title><rect x="145" y="196" width="217" height="15" fill="rgb(210,143,22)"/><text x="148.00" y="206.50">_dispatch (joblib/parallel.p..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (6 samples, 1.68%)</title><rect x="342" y="212" width="20" height="15" fill="rgb(237,167,47)"/><text x="345.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.28%)</title><rect x="359" y="228" width="3" height="15" fill="rgb(239,65,21)"/><text x="362.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (99 samples, 27.65%)</title><rect x="39" y="164" width="326" height="15" fill="rgb(251,50,45)"/><text x="42.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (68 samples, 18.99%)</title><rect x="141" y="180" width="224" height="15" fill="rgb(205,178,32)"/><text x="144.00" y="190.50">dispatch_one_batch (joblib/pa..</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.28%)</title><rect x="362" y="196" width="3" height="15" fill="rgb(209,72,6)"/><text x="365.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1015) (1 samples, 0.28%)</title><rect x="365" y="164" width="4" height="15" fill="rgb(217,168,40)"/><text x="368.00" y="174.50"></text></g><g><title>helper (contextlib.py:239) (1 samples, 0.28%)</title><rect x="365" y="180" width="4" height="15" fill="rgb(246,145,26)"/><text x="368.00" y="190.50"></text></g><g><title>__init__ (contextlib.py:85) (1 samples, 0.28%)</title><rect x="365" y="196" width="4" height="15" fill="rgb(232,102,29)"/><text x="368.00" y="206.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:18) (103 samples, 28.77%)</title><rect x="33" y="100" width="339" height="15" fill="rgb(231,3,20)"/><text x="36.00" y="110.50">profile (bench_RandomForestClassifier_default..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (103 samples, 28.77%)</title><rect x="33" y="116" width="339" height="15" fill="rgb(252,166,43)"/><text x="36.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (103 samples, 28.77%)</title><rect x="33" y="132" width="339" height="15" fill="rgb(226,40,8)"/><text x="36.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (103 samples, 28.77%)</title><rect x="33" y="148" width="339" height="15" fill="rgb(250,147,42)"/><text x="36.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:66..</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.28%)</title><rect x="369" y="164" width="3" height="15" fill="rgb(227,175,54)"/><text x="372.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.28%)</title><rect x="369" y="180" width="3" height="15" fill="rgb(222,46,2)"/><text x="372.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.28%)</title><rect x="372" y="148" width="3" height="15" fill="rgb(210,189,19)"/><text x="375.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:183) (1 samples, 0.28%)</title><rect x="372" y="164" width="3" height="15" fill="rgb(236,12,33)"/><text x="375.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="372" y="180" width="3" height="15" fill="rgb(212,96,31)"/><text x="375.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="372" y="196" width="3" height="15" fill="rgb(246,125,45)"/><text x="375.00" y="206.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.28%)</title><rect x="372" y="212" width="3" height="15" fill="rgb(245,182,51)"/><text x="375.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.28%)</title><rect x="372" y="228" width="3" height="15" fill="rgb(236,16,7)"/><text x="375.00" y="238.50"></text></g><g><title>array_cumsum (methods.c:2239) (1 samples, 0.28%)</title><rect x="372" y="244" width="3" height="15" fill="rgb(208,11,23)"/><text x="375.00" y="254.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (1 samples, 0.28%)</title><rect x="372" y="260" width="3" height="15" fill="rgb(235,115,41)"/><text x="375.00" y="270.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (1 samples, 0.28%)</title><rect x="372" y="276" width="3" height="15" fill="rgb(210,78,29)"/><text x="375.00" y="286.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.28%)</title><rect x="372" y="292" width="3" height="15" fill="rgb(218,14,35)"/><text x="375.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4519) (1 samples, 0.28%)</title><rect x="372" y="308" width="3" height="15" fill="rgb(230,59,49)"/><text x="375.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.28%)</title><rect x="372" y="324" width="3" height="15" fill="rgb(247,29,7)"/><text x="375.00" y="334.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.28%)</title><rect x="375" y="148" width="4" height="15" fill="rgb(205,6,6)"/><text x="378.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.28%)</title><rect x="375" y="164" width="4" height="15" fill="rgb(250,118,15)"/><text x="378.00" y="174.50"></text></g><g><title>__init__ (queue.py:49) (1 samples, 0.28%)</title><rect x="375" y="180" width="4" height="15" fill="rgb(222,215,26)"/><text x="378.00" y="190.50"></text></g><g><title>__init__ (threading.py:231) (1 samples, 0.28%)</title><rect x="375" y="196" width="4" height="15" fill="rgb(251,9,12)"/><text x="378.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.28%)</title><rect x="379" y="180" width="3" height="15" fill="rgb(242,76,43)"/><text x="382.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.28%)</title><rect x="382" y="180" width="3" height="15" fill="rgb(218,42,11)"/><text x="385.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.28%)</title><rect x="382" y="196" width="3" height="15" fill="rgb(237,188,43)"/><text x="385.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.28%)</title><rect x="385" y="212" width="4" height="15" fill="rgb(218,202,45)"/><text x="388.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.28%)</title><rect x="385" y="228" width="4" height="15" fill="rgb(223,88,22)"/><text x="388.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.28%)</title><rect x="385" y="244" width="4" height="15" fill="rgb(215,104,16)"/><text x="388.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.28%)</title><rect x="385" y="260" width="4" height="15" fill="rgb(231,178,9)"/><text x="388.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="385" y="276" width="4" height="15" fill="rgb(237,131,5)"/><text x="388.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="385" y="292" width="4" height="15" fill="rgb(239,96,38)"/><text x="388.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="385" y="308" width="4" height="15" fill="rgb(213,41,46)"/><text x="388.00" y="318.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (4 samples, 1.12%)</title><rect x="379" y="164" width="13" height="15" fill="rgb(220,94,44)"/><text x="382.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.56%)</title><rect x="385" y="180" width="7" height="15" fill="rgb(237,30,43)"/><text x="388.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.56%)</title><rect x="385" y="196" width="7" height="15" fill="rgb(209,9,1)"/><text x="388.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.28%)</title><rect x="389" y="212" width="3" height="15" fill="rgb(251,136,4)"/><text x="392.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.28%)</title><rect x="389" y="228" width="3" height="15" fill="rgb(247,7,17)"/><text x="392.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.28%)</title><rect x="402" y="180" width="3" height="15" fill="rgb(237,20,54)"/><text x="405.00" y="190.50"></text></g><g><title>get (queue.py:164) (3 samples, 0.84%)</title><rect x="408" y="196" width="10" height="15" fill="rgb(233,200,20)"/><text x="411.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (3 samples, 0.84%)</title><rect x="408" y="212" width="10" height="15" fill="rgb(217,146,21)"/><text x="411.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (3 samples, 0.84%)</title><rect x="408" y="228" width="10" height="15" fill="rgb(222,97,19)"/><text x="411.00" y="238.50"></text></g><g><title>get (queue.py:167) (3 samples, 0.84%)</title><rect x="418" y="196" width="10" height="15" fill="rgb(234,162,4)"/><text x="421.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (9 samples, 2.51%)</title><rect x="405" y="180" width="30" height="15" fill="rgb(221,177,29)"/><text x="408.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (2 samples, 0.56%)</title><rect x="428" y="196" width="7" height="15" fill="rgb(220,152,3)"/><text x="431.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.56%)</title><rect x="428" y="212" width="7" height="15" fill="rgb(208,183,53)"/><text x="431.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (2 samples, 0.56%)</title><rect x="435" y="180" width="6" height="15" fill="rgb(238,196,24)"/><text x="438.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.28%)</title><rect x="441" y="180" width="4" height="15" fill="rgb(249,38,12)"/><text x="444.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.28%)</title><rect x="464" y="228" width="4" height="15" fill="rgb(229,155,40)"/><text x="467.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.28%)</title><rect x="468" y="228" width="3" height="15" fill="rgb(225,22,31)"/><text x="471.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (6 samples, 1.68%)</title><rect x="471" y="228" width="20" height="15" fill="rgb(234,68,36)"/><text x="474.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (13 samples, 3.63%)</title><rect x="464" y="212" width="43" height="15" fill="rgb(212,123,11)"/><text x="467.00" y="222.50">dela..</text></g><g><title>update_wrapper (functools.py:60) (5 samples, 1.40%)</title><rect x="491" y="228" width="16" height="15" fill="rgb(218,126,14)"/><text x="494.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (20 samples, 5.59%)</title><rect x="445" y="180" width="66" height="15" fill="rgb(249,206,4)"/><text x="448.00" y="190.50">dispatc..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (16 samples, 4.47%)</title><rect x="458" y="196" width="53" height="15" fill="rgb(206,110,13)"/><text x="461.00" y="206.50">&lt;gene..</text></g><g><title>delayed_function (joblib/parallel.py:306) (1 samples, 0.28%)</title><rect x="507" y="212" width="4" height="15" fill="rgb(224,184,26)"/><text x="510.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.28%)</title><rect x="511" y="180" width="3" height="15" fill="rgb(237,125,7)"/><text x="514.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.28%)</title><rect x="514" y="180" width="3" height="15" fill="rgb(213,198,5)"/><text x="517.00" y="190.50"></text></g><g><title>0x7fd9f68d3e50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="543" y="212" width="4" height="15" fill="rgb(252,13,45)"/><text x="546.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.56%)</title><rect x="547" y="212" width="6" height="15" fill="rgb(226,63,54)"/><text x="550.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (4 samples, 1.12%)</title><rect x="553" y="212" width="14" height="15" fill="rgb(213,132,48)"/><text x="556.00" y="222.50"></text></g><g><title>0x7fd9f68ce6d4 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="563" y="228" width="4" height="15" fill="rgb(223,56,46)"/><text x="566.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (16 samples, 4.47%)</title><rect x="517" y="196" width="53" height="15" fill="rgb(205,101,33)"/><text x="520.00" y="206.50">get_n..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="567" y="212" width="3" height="15" fill="rgb(220,81,29)"/><text x="570.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.28%)</title><rect x="573" y="228" width="3" height="15" fill="rgb(225,202,42)"/><text x="576.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.56%)</title><rect x="573" y="212" width="7" height="15" fill="rgb(226,44,14)"/><text x="576.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.28%)</title><rect x="576" y="228" width="4" height="15" fill="rgb(213,200,5)"/><text x="579.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.28%)</title><rect x="580" y="212" width="3" height="15" fill="rgb(230,21,31)"/><text x="583.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.28%)</title><rect x="583" y="212" width="3" height="15" fill="rgb(226,57,35)"/><text x="586.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.28%)</title><rect x="586" y="212" width="4" height="15" fill="rgb(205,28,20)"/><text x="589.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (23 samples, 6.42%)</title><rect x="517" y="180" width="76" height="15" fill="rgb(236,54,21)"/><text x="520.00" y="190.50">dispatch..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (7 samples, 1.96%)</title><rect x="570" y="196" width="23" height="15" fill="rgb(243,137,23)"/><text x="573.00" y="206.50">g..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.28%)</title><rect x="590" y="212" width="3" height="15" fill="rgb(246,219,14)"/><text x="593.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (1 samples, 0.28%)</title><rect x="593" y="196" width="3" height="15" fill="rgb(230,102,16)"/><text x="596.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.28%)</title><rect x="596" y="196" width="4" height="15" fill="rgb(217,198,39)"/><text x="599.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.84%)</title><rect x="593" y="180" width="10" height="15" fill="rgb(226,39,22)"/><text x="596.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.28%)</title><rect x="600" y="196" width="3" height="15" fill="rgb(213,187,14)"/><text x="603.00" y="206.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.28%)</title><rect x="609" y="196" width="4" height="15" fill="rgb(224,19,53)"/><text x="612.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (7 samples, 1.96%)</title><rect x="603" y="180" width="23" height="15" fill="rgb(244,226,11)"/><text x="606.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (4 samples, 1.12%)</title><rect x="613" y="196" width="13" height="15" fill="rgb(209,202,9)"/><text x="616.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.56%)</title><rect x="619" y="212" width="7" height="15" fill="rgb(230,183,21)"/><text x="622.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.28%)</title><rect x="626" y="196" width="3" height="15" fill="rgb(231,103,30)"/><text x="629.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.28%)</title><rect x="626" y="212" width="3" height="15" fill="rgb(206,144,51)"/><text x="629.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.28%)</title><rect x="626" y="228" width="3" height="15" fill="rgb(205,165,16)"/><text x="629.00" y="238.50"></text></g><g><title>get (queue.py:180) (3 samples, 0.84%)</title><rect x="629" y="196" width="10" height="15" fill="rgb(206,229,47)"/><text x="632.00" y="206.50"></text></g><g><title>_get (queue.py:217) (1 samples, 0.28%)</title><rect x="636" y="212" width="3" height="15" fill="rgb(219,110,42)"/><text x="639.00" y="222.50"></text></g><g><title>notify (threading.py:347) (1 samples, 0.28%)</title><rect x="639" y="212" width="3" height="15" fill="rgb(242,93,28)"/><text x="642.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 1.68%)</title><rect x="626" y="180" width="20" height="15" fill="rgb(226,63,44)"/><text x="629.00" y="190.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.56%)</title><rect x="639" y="196" width="7" height="15" fill="rgb(254,178,14)"/><text x="642.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.28%)</title><rect x="642" y="212" width="4" height="15" fill="rgb(221,22,0)"/><text x="645.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (4 samples, 1.12%)</title><rect x="646" y="180" width="13" height="15" fill="rgb(253,186,38)"/><text x="649.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.28%)</title><rect x="659" y="196" width="3" height="15" fill="rgb(226,1,53)"/><text x="662.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.56%)</title><rect x="662" y="196" width="7" height="15" fill="rgb(253,48,44)"/><text x="665.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py:258) (1 samples, 0.28%)</title><rect x="665" y="212" width="4" height="15" fill="rgb(207,149,43)"/><text x="668.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.28%)</title><rect x="685" y="260" width="3" height="15" fill="rgb(211,18,42)"/><text x="688.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.56%)</title><rect x="688" y="260" width="7" height="15" fill="rgb(209,49,46)"/><text x="691.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (6 samples, 1.68%)</title><rect x="679" y="244" width="19" height="15" fill="rgb(211,27,44)"/><text x="682.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.28%)</title><rect x="695" y="260" width="3" height="15" fill="rgb(225,32,14)"/><text x="698.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.28%)</title><rect x="705" y="260" width="3" height="15" fill="rgb(248,144,41)"/><text x="708.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.56%)</title><rect x="725" y="308" width="6" height="15" fill="rgb(242,61,42)"/><text x="728.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.28%)</title><rect x="731" y="308" width="4" height="15" fill="rgb(252,22,38)"/><text x="734.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.28%)</title><rect x="738" y="324" width="3" height="15" fill="rgb(229,23,35)"/><text x="741.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.28%)</title><rect x="758" y="340" width="3" height="15" fill="rgb(241,111,12)"/><text x="761.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.51%)</title><rect x="741" y="324" width="30" height="15" fill="rgb(239,90,39)"/><text x="744.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.84%)</title><rect x="761" y="340" width="10" height="15" fill="rgb(231,156,1)"/><text x="764.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (19 samples, 5.31%)</title><rect x="721" y="292" width="63" height="15" fill="rgb(230,7,16)"/><text x="724.00" y="302.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 4.19%)</title><rect x="735" y="308" width="49" height="15" fill="rgb(248,19,44)"/><text x="738.00" y="318.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.12%)</title><rect x="771" y="324" width="13" height="15" fill="rgb(239,118,11)"/><text x="774.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.56%)</title><rect x="777" y="340" width="7" height="15" fill="rgb(252,17,43)"/><text x="780.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (2 samples, 0.56%)</title><rect x="784" y="292" width="7" height="15" fill="rgb(237,149,21)"/><text x="787.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.28%)</title><rect x="787" y="308" width="4" height="15" fill="rgb(236,187,17)"/><text x="790.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="787" y="324" width="4" height="15" fill="rgb(234,39,20)"/><text x="790.00" y="334.50"></text></g><g><title>0x7fd9f68de144 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="787" y="340" width="4" height="15" fill="rgb(224,9,37)"/><text x="790.00" y="350.50"></text></g><g><title>0x7fd9d02f0cd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="791" y="340" width="3" height="15" fill="rgb(251,137,38)"/><text x="794.00" y="350.50"></text></g><g><title>0x7fd9d02f0d11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="794" y="340" width="3" height="15" fill="rgb(214,180,9)"/><text x="797.00" y="350.50"></text></g><g><title>0x7fd9d0300f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.84%)</title><rect x="791" y="324" width="10" height="15" fill="rgb(250,79,13)"/><text x="794.00" y="334.50"></text></g><g><title>0x7fd9d02f0d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="797" y="340" width="4" height="15" fill="rgb(251,214,8)"/><text x="800.00" y="350.50"></text></g><g><title>0x7fd9d02ddbbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="797" y="356" width="4" height="15" fill="rgb(253,186,22)"/><text x="800.00" y="366.50"></text></g><g><title>0x7fd9d02e4d60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="797" y="372" width="4" height="15" fill="rgb(228,96,46)"/><text x="800.00" y="382.50"></text></g><g><title>0x7fd9d030f225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="801" y="356" width="3" height="15" fill="rgb(228,11,28)"/><text x="804.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.28%)</title><rect x="801" y="372" width="3" height="15" fill="rgb(248,221,17)"/><text x="804.00" y="382.50"></text></g><g><title>0x7fd9d02e910c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="804" y="404" width="3" height="15" fill="rgb(211,166,3)"/><text x="807.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:770) (1 samples, 0.28%)</title><rect x="807" y="420" width="3" height="15" fill="rgb(224,98,18)"/><text x="810.00" y="430.50"></text></g><g><title>0x7fd9d02f3d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.84%)</title><rect x="804" y="372" width="10" height="15" fill="rgb(247,29,13)"/><text x="807.00" y="382.50"></text></g><g><title>0x7fd9d02f3666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.84%)</title><rect x="804" y="388" width="10" height="15" fill="rgb(232,49,16)"/><text x="807.00" y="398.50"></text></g><g><title>0x7fd9d02e92fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="807" y="404" width="7" height="15" fill="rgb(242,183,13)"/><text x="810.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.28%)</title><rect x="810" y="420" width="4" height="15" fill="rgb(240,196,27)"/><text x="813.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.28%)</title><rect x="810" y="436" width="4" height="15" fill="rgb(247,94,46)"/><text x="813.00" y="446.50"></text></g><g><title>0x7fd9d030f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.12%)</title><rect x="804" y="356" width="13" height="15" fill="rgb(228,110,27)"/><text x="807.00" y="366.50"></text></g><g><title>0x7fd9d02f400e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="814" y="372" width="3" height="15" fill="rgb(234,180,2)"/><text x="817.00" y="382.50"></text></g><g><title>0x7fd9d030f511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="817" y="356" width="3" height="15" fill="rgb(248,81,44)"/><text x="820.00" y="366.50"></text></g><g><title>0x7fd9f699b134 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="817" y="372" width="3" height="15" fill="rgb(216,115,44)"/><text x="820.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.28%)</title><rect x="820" y="388" width="4" height="15" fill="rgb(210,222,19)"/><text x="823.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.28%)</title><rect x="820" y="404" width="4" height="15" fill="rgb(232,197,38)"/><text x="823.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.28%)</title><rect x="820" y="420" width="4" height="15" fill="rgb(234,82,30)"/><text x="823.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.28%)</title><rect x="820" y="436" width="4" height="15" fill="rgb(245,183,38)"/><text x="823.00" y="446.50"></text></g><g><title>0x7fd9d030f592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="820" y="356" width="7" height="15" fill="rgb(241,201,36)"/><text x="823.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.56%)</title><rect x="820" y="372" width="7" height="15" fill="rgb(243,114,37)"/><text x="823.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="824" y="388" width="3" height="15" fill="rgb(241,199,29)"/><text x="827.00" y="398.50"></text></g><g><title>0x7fd9d030f59c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="827" y="356" width="3" height="15" fill="rgb(223,208,8)"/><text x="830.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.28%)</title><rect x="830" y="404" width="4" height="15" fill="rgb(243,208,41)"/><text x="833.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.28%)</title><rect x="830" y="420" width="4" height="15" fill="rgb(247,17,1)"/><text x="833.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="830" y="436" width="4" height="15" fill="rgb(240,114,26)"/><text x="833.00" y="446.50"></text></g><g><title>0x7fd9d0310405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.07%)</title><rect x="801" y="340" width="36" height="15" fill="rgb(249,211,3)"/><text x="804.00" y="350.50">0x7..</text></g><g><title>0x7fd9d030fc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="830" y="356" width="7" height="15" fill="rgb(234,128,17)"/><text x="833.00" y="366.50"></text></g><g><title>0x7fd9d02e7529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="830" y="372" width="7" height="15" fill="rgb(238,188,2)"/><text x="833.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.56%)</title><rect x="830" y="388" width="7" height="15" fill="rgb(247,169,7)"/><text x="833.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.28%)</title><rect x="834" y="404" width="3" height="15" fill="rgb(241,195,36)"/><text x="837.00" y="414.50"></text></g><g><title>0x7fd9d0300fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.35%)</title><rect x="801" y="324" width="39" height="15" fill="rgb(229,208,54)"/><text x="804.00" y="334.50">0x7..</text></g><g><title>0x7fd9d0310540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="837" y="340" width="3" height="15" fill="rgb(238,81,16)"/><text x="840.00" y="350.50"></text></g><g><title>0x7fd9d02e5178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="837" y="356" width="3" height="15" fill="rgb(210,123,19)"/><text x="840.00" y="366.50"></text></g><g><title>0x7fd9d0300fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="840" y="324" width="3" height="15" fill="rgb(210,48,10)"/><text x="843.00" y="334.50"></text></g><g><title>0x7fd9d0301011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="843" y="324" width="4" height="15" fill="rgb(251,216,48)"/><text x="846.00" y="334.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.28%)</title><rect x="847" y="356" width="3" height="15" fill="rgb(239,67,13)"/><text x="850.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.56%)</title><rect x="847" y="340" width="6" height="15" fill="rgb(213,51,24)"/><text x="850.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.28%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(221,83,9)"/><text x="853.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:626) (1 samples, 0.28%)</title><rect x="850" y="372" width="3" height="15" fill="rgb(223,148,39)"/><text x="853.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.28%)</title><rect x="853" y="356" width="4" height="15" fill="rgb(209,17,33)"/><text x="856.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.28%)</title><rect x="853" y="372" width="4" height="15" fill="rgb(245,44,23)"/><text x="856.00" y="382.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="853" y="388" width="4" height="15" fill="rgb(247,215,16)"/><text x="856.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.28%)</title><rect x="857" y="404" width="3" height="15" fill="rgb(236,29,14)"/><text x="860.00" y="414.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1605) (1 samples, 0.28%)</title><rect x="857" y="420" width="3" height="15" fill="rgb(224,227,39)"/><text x="860.00" y="430.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (2 samples, 0.56%)</title><rect x="857" y="356" width="6" height="15" fill="rgb(248,198,49)"/><text x="860.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (2 samples, 0.56%)</title><rect x="857" y="372" width="6" height="15" fill="rgb(247,187,44)"/><text x="860.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.56%)</title><rect x="857" y="388" width="6" height="15" fill="rgb(233,26,41)"/><text x="860.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.28%)</title><rect x="860" y="404" width="3" height="15" fill="rgb(222,72,19)"/><text x="863.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.28%)</title><rect x="860" y="420" width="3" height="15" fill="rgb(237,151,44)"/><text x="863.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.28%)</title><rect x="860" y="436" width="3" height="15" fill="rgb(238,212,46)"/><text x="863.00" y="446.50"></text></g><g><title>0x7fd9d030105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.68%)</title><rect x="847" y="324" width="19" height="15" fill="rgb(206,173,7)"/><text x="850.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (4 samples, 1.12%)</title><rect x="853" y="340" width="13" height="15" fill="rgb(220,129,44)"/><text x="856.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.28%)</title><rect x="863" y="356" width="3" height="15" fill="rgb(227,84,49)"/><text x="866.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.28%)</title><rect x="863" y="372" width="3" height="15" fill="rgb(249,193,19)"/><text x="866.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.28%)</title><rect x="863" y="388" width="3" height="15" fill="rgb(218,218,30)"/><text x="866.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.28%)</title><rect x="863" y="404" width="3" height="15" fill="rgb(242,150,21)"/><text x="866.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.28%)</title><rect x="863" y="420" width="3" height="15" fill="rgb(247,51,9)"/><text x="866.00" y="430.50"></text></g><g><title>0x7fd9d0301328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="866" y="324" width="4" height="15" fill="rgb(236,173,38)"/><text x="869.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.28%)</title><rect x="866" y="340" width="4" height="15" fill="rgb(242,113,17)"/><text x="869.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.28%)</title><rect x="866" y="356" width="4" height="15" fill="rgb(227,18,33)"/><text x="869.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:194) (1 samples, 0.28%)</title><rect x="866" y="372" width="4" height="15" fill="rgb(239,78,6)"/><text x="869.00" y="382.50"></text></g><g><title>0x7fd9d0301554 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="870" y="324" width="3" height="15" fill="rgb(240,208,22)"/><text x="873.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (26 samples, 7.26%)</title><rect x="791" y="292" width="85" height="15" fill="rgb(216,85,36)"/><text x="794.00" y="302.50">predict_pr..</text></g><g><title>0x7fd9d0301d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 7.26%)</title><rect x="791" y="308" width="85" height="15" fill="rgb(205,210,52)"/><text x="794.00" y="318.50">0x7fd9d030..</text></g><g><title>0x7fd9d030155e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="873" y="324" width="3" height="15" fill="rgb(205,101,32)"/><text x="876.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.28%)</title><rect x="876" y="292" width="4" height="15" fill="rgb(251,152,25)"/><text x="879.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.28%)</title><rect x="890" y="372" width="3" height="15" fill="rgb(232,74,28)"/><text x="893.00" y="382.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.56%)</title><rect x="890" y="356" width="6" height="15" fill="rgb(214,17,35)"/><text x="893.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="893" y="372" width="3" height="15" fill="rgb(241,206,16)"/><text x="896.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.28%)</title><rect x="893" y="388" width="3" height="15" fill="rgb(252,69,16)"/><text x="896.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.28%)</title><rect x="893" y="404" width="3" height="15" fill="rgb(236,168,5)"/><text x="896.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (2 samples, 0.56%)</title><rect x="896" y="372" width="7" height="15" fill="rgb(215,93,19)"/><text x="899.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2076) (1 samples, 0.28%)</title><rect x="903" y="436" width="3" height="15" fill="rgb(239,29,0)"/><text x="906.00" y="446.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.28%)</title><rect x="903" y="452" width="3" height="15" fill="rgb(212,12,48)"/><text x="906.00" y="462.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.28%)</title><rect x="906" y="436" width="3" height="15" fill="rgb(230,76,43)"/><text x="909.00" y="446.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1742) (1 samples, 0.28%)</title><rect x="906" y="452" width="3" height="15" fill="rgb(226,22,38)"/><text x="909.00" y="462.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.28%)</title><rect x="909" y="452" width="4" height="15" fill="rgb(254,12,45)"/><text x="912.00" y="462.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (2 samples, 0.56%)</title><rect x="909" y="436" width="7" height="15" fill="rgb(245,211,33)"/><text x="912.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.28%)</title><rect x="913" y="452" width="3" height="15" fill="rgb(213,71,36)"/><text x="916.00" y="462.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.28%)</title><rect x="913" y="468" width="3" height="15" fill="rgb(209,120,4)"/><text x="916.00" y="478.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (5 samples, 1.40%)</title><rect x="903" y="388" width="16" height="15" fill="rgb(209,104,40)"/><text x="906.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (5 samples, 1.40%)</title><rect x="903" y="404" width="16" height="15" fill="rgb(246,137,23)"/><text x="906.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (5 samples, 1.40%)</title><rect x="903" y="420" width="16" height="15" fill="rgb(218,108,24)"/><text x="906.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.28%)</title><rect x="916" y="436" width="3" height="15" fill="rgb(246,209,52)"/><text x="919.00" y="446.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.28%)</title><rect x="916" y="452" width="3" height="15" fill="rgb(241,85,9)"/><text x="919.00" y="462.50"></text></g><g><title>0x7fd9f68758b8 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="919" y="468" width="4" height="15" fill="rgb(250,66,21)"/><text x="922.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.56%)</title><rect x="919" y="404" width="7" height="15" fill="rgb(215,134,19)"/><text x="922.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.56%)</title><rect x="919" y="420" width="7" height="15" fill="rgb(237,132,12)"/><text x="922.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (2 samples, 0.56%)</title><rect x="919" y="436" width="7" height="15" fill="rgb(214,185,8)"/><text x="922.00" y="446.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.56%)</title><rect x="919" y="452" width="7" height="15" fill="rgb(206,177,52)"/><text x="922.00" y="462.50"></text></g><g><title>0x7fd9f68759e8 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="923" y="468" width="3" height="15" fill="rgb(234,77,1)"/><text x="926.00" y="478.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:52) (1 samples, 0.28%)</title><rect x="926" y="452" width="3" height="15" fill="rgb(229,41,10)"/><text x="929.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.28%)</title><rect x="926" y="468" width="3" height="15" fill="rgb(237,4,54)"/><text x="929.00" y="478.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.28%)</title><rect x="929" y="468" width="3" height="15" fill="rgb(223,126,49)"/><text x="932.00" y="478.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="929" y="484" width="3" height="15" fill="rgb(223,153,37)"/><text x="932.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 0.84%)</title><rect x="926" y="404" width="10" height="15" fill="rgb(210,214,13)"/><text x="929.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.84%)</title><rect x="926" y="420" width="10" height="15" fill="rgb(235,210,7)"/><text x="929.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 0.84%)</title><rect x="926" y="436" width="10" height="15" fill="rgb(226,153,6)"/><text x="929.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (2 samples, 0.56%)</title><rect x="929" y="452" width="7" height="15" fill="rgb(218,1,54)"/><text x="932.00" y="462.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3895) (1 samples, 0.28%)</title><rect x="932" y="468" width="4" height="15" fill="rgb(223,78,4)"/><text x="935.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.28%)</title><rect x="936" y="420" width="3" height="15" fill="rgb(216,118,28)"/><text x="939.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.28%)</title><rect x="936" y="436" width="3" height="15" fill="rgb(207,200,26)"/><text x="939.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.28%)</title><rect x="936" y="452" width="3" height="15" fill="rgb(207,127,20)"/><text x="939.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="939" y="420" width="3" height="15" fill="rgb(241,165,22)"/><text x="942.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1540) (1 samples, 0.28%)</title><rect x="939" y="436" width="3" height="15" fill="rgb(232,183,50)"/><text x="942.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (20 samples, 5.59%)</title><rect x="880" y="292" width="66" height="15" fill="rgb(206,40,46)"/><text x="883.00" y="302.50">predict..</text></g><g><title>array_sum (methods.c:2215) (19 samples, 5.31%)</title><rect x="883" y="308" width="63" height="15" fill="rgb(247,40,21)"/><text x="886.00" y="318.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 5.31%)</title><rect x="883" y="324" width="63" height="15" fill="rgb(222,127,8)"/><text x="886.00" y="334.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 4.75%)</title><rect x="890" y="340" width="56" height="15" fill="rgb(231,35,51)"/><text x="893.00" y="350.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 4.19%)</title><rect x="896" y="356" width="50" height="15" fill="rgb(237,106,16)"/><text x="899.00" y="366.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (13 samples, 3.63%)</title><rect x="903" y="372" width="43" height="15" fill="rgb(226,119,34)"/><text x="906.00" y="382.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 2.23%)</title><rect x="919" y="388" width="27" height="15" fill="rgb(232,76,4)"/><text x="922.00" y="398.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.84%)</title><rect x="936" y="404" width="10" height="15" fill="rgb(233,121,5)"/><text x="939.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.28%)</title><rect x="942" y="420" width="4" height="15" fill="rgb(227,93,53)"/><text x="945.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3260) (1 samples, 0.28%)</title><rect x="942" y="436" width="4" height="15" fill="rgb(246,209,53)"/><text x="945.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:1801) (1 samples, 0.28%)</title><rect x="946" y="308" width="3" height="15" fill="rgb(207,48,47)"/><text x="949.00" y="318.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.28%)</title><rect x="946" y="324" width="3" height="15" fill="rgb(230,40,53)"/><text x="949.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.28%)</title><rect x="949" y="308" width="3" height="15" fill="rgb(231,35,48)"/><text x="952.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.28%)</title><rect x="949" y="324" width="3" height="15" fill="rgb(227,33,47)"/><text x="952.00" y="334.50"></text></g><g><title>unpack_indices (mapping.c:269) (1 samples, 0.28%)</title><rect x="949" y="340" width="3" height="15" fill="rgb(228,4,4)"/><text x="952.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c:1388) (1 samples, 0.28%)</title><rect x="952" y="308" width="3" height="15" fill="rgb(227,84,21)"/><text x="955.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.28%)</title><rect x="955" y="308" width="4" height="15" fill="rgb(209,100,52)"/><text x="958.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.28%)</title><rect x="955" y="324" width="4" height="15" fill="rgb(230,204,32)"/><text x="958.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:112) (1 samples, 0.28%)</title><rect x="955" y="340" width="4" height="15" fill="rgb(248,211,2)"/><text x="958.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.28%)</title><rect x="959" y="340" width="3" height="15" fill="rgb(226,123,45)"/><text x="962.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.28%)</title><rect x="959" y="356" width="3" height="15" fill="rgb(225,139,46)"/><text x="962.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.28%)</title><rect x="959" y="372" width="3" height="15" fill="rgb(252,67,40)"/><text x="962.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1161) (1 samples, 0.28%)</title><rect x="959" y="388" width="3" height="15" fill="rgb(233,178,9)"/><text x="962.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1875) (1 samples, 0.28%)</title><rect x="962" y="372" width="3" height="15" fill="rgb(234,156,5)"/><text x="965.00" y="382.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (2 samples, 0.56%)</title><rect x="962" y="356" width="7" height="15" fill="rgb(237,150,13)"/><text x="965.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.28%)</title><rect x="965" y="372" width="4" height="15" fill="rgb(210,92,13)"/><text x="968.00" y="382.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.28%)</title><rect x="965" y="388" width="4" height="15" fill="rgb(229,75,16)"/><text x="968.00" y="398.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1094) (1 samples, 0.28%)</title><rect x="965" y="404" width="4" height="15" fill="rgb(248,0,19)"/><text x="968.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.84%)</title><rect x="962" y="340" width="10" height="15" fill="rgb(205,12,25)"/><text x="965.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.28%)</title><rect x="969" y="356" width="3" height="15" fill="rgb(213,53,20)"/><text x="972.00" y="366.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.28%)</title><rect x="969" y="372" width="3" height="15" fill="rgb(244,12,43)"/><text x="972.00" y="382.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.28%)</title><rect x="969" y="388" width="3" height="15" fill="rgb(214,201,40)"/><text x="972.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (9 samples, 2.51%)</title><rect x="946" y="292" width="29" height="15" fill="rgb(227,160,25)"/><text x="949.00" y="302.50">pr..</text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 1.40%)</title><rect x="959" y="308" width="16" height="15" fill="rgb(214,135,34)"/><text x="962.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.40%)</title><rect x="959" y="324" width="16" height="15" fill="rgb(221,5,32)"/><text x="962.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="972" y="340" width="3" height="15" fill="rgb(219,130,3)"/><text x="975.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.28%)</title><rect x="972" y="356" width="3" height="15" fill="rgb(242,196,21)"/><text x="975.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="975" y="324" width="4" height="15" fill="rgb(216,161,11)"/><text x="978.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.28%)</title><rect x="975" y="340" width="4" height="15" fill="rgb(231,135,43)"/><text x="978.00" y="350.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.28%)</title><rect x="975" y="356" width="4" height="15" fill="rgb(232,176,35)"/><text x="978.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.28%)</title><rect x="979" y="324" width="3" height="15" fill="rgb(253,130,11)"/><text x="982.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2011) (1 samples, 0.28%)</title><rect x="979" y="340" width="3" height="15" fill="rgb(240,112,15)"/><text x="982.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.28%)</title><rect x="982" y="372" width="3" height="15" fill="rgb(215,68,5)"/><text x="985.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="982" y="388" width="3" height="15" fill="rgb(206,49,15)"/><text x="985.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.56%)</title><rect x="982" y="356" width="6" height="15" fill="rgb(231,193,17)"/><text x="985.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.28%)</title><rect x="985" y="372" width="3" height="15" fill="rgb(214,23,27)"/><text x="988.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.28%)</title><rect x="985" y="388" width="3" height="15" fill="rgb(216,0,51)"/><text x="988.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="988" y="356" width="4" height="15" fill="rgb(224,49,10)"/><text x="991.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.28%)</title><rect x="988" y="372" width="4" height="15" fill="rgb(235,69,9)"/><text x="991.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.28%)</title><rect x="988" y="388" width="4" height="15" fill="rgb(249,165,51)"/><text x="991.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.68%)</title><rect x="975" y="308" width="20" height="15" fill="rgb(221,148,14)"/><text x="978.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.12%)</title><rect x="982" y="324" width="13" height="15" fill="rgb(220,87,18)"/><text x="985.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.12%)</title><rect x="982" y="340" width="13" height="15" fill="rgb(250,129,24)"/><text x="985.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.28%)</title><rect x="992" y="356" width="3" height="15" fill="rgb(246,117,40)"/><text x="995.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1742) (1 samples, 0.28%)</title><rect x="992" y="372" width="3" height="15" fill="rgb(208,41,21)"/><text x="995.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.28%)</title><rect x="995" y="308" width="3" height="15" fill="rgb(220,42,44)"/><text x="998.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (88 samples, 24.58%)</title><rect x="712" y="276" width="290" height="15" fill="rgb(215,104,6)"/><text x="715.00" y="286.50">_accumulate_prediction (sklearn/ensemb..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 2.23%)</title><rect x="975" y="292" width="27" height="15" fill="rgb(229,180,50)"/><text x="978.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.28%)</title><rect x="998" y="308" width="4" height="15" fill="rgb(254,53,15)"/><text x="1001.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (4 samples, 1.12%)</title><rect x="1002" y="276" width="13" height="15" fill="rgb(219,45,49)"/><text x="1005.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.56%)</title><rect x="1008" y="292" width="7" height="15" fill="rgb(243,80,12)"/><text x="1011.00" y="302.50"></text></g><g><title>0x7fd9f68d3757 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1012" y="308" width="3" height="15" fill="rgb(235,181,52)"/><text x="1015.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.28%)</title><rect x="1015" y="292" width="3" height="15" fill="rgb(227,135,53)"/><text x="1018.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="1018" y="324" width="3" height="15" fill="rgb(222,19,0)"/><text x="1021.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.28%)</title><rect x="1018" y="340" width="3" height="15" fill="rgb(214,75,12)"/><text x="1021.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.28%)</title><rect x="1021" y="356" width="4" height="15" fill="rgb(238,45,17)"/><text x="1024.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.28%)</title><rect x="1021" y="372" width="4" height="15" fill="rgb(248,185,31)"/><text x="1024.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1021" y="388" width="4" height="15" fill="rgb(251,34,3)"/><text x="1024.00" y="398.50"></text></g><g><title>0x7fd9f68ddd6f (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1021" y="404" width="4" height="15" fill="rgb(253,16,52)"/><text x="1024.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.56%)</title><rect x="1021" y="324" width="7" height="15" fill="rgb(213,225,29)"/><text x="1024.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.56%)</title><rect x="1021" y="340" width="7" height="15" fill="rgb(221,5,43)"/><text x="1024.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.28%)</title><rect x="1025" y="356" width="3" height="15" fill="rgb(253,83,30)"/><text x="1028.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.28%)</title><rect x="1025" y="372" width="3" height="15" fill="rgb(248,37,50)"/><text x="1028.00" y="382.50"></text></g><g><title>0x7fd9f68bd97c (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1025" y="388" width="3" height="15" fill="rgb(205,134,31)"/><text x="1028.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.12%)</title><rect x="1018" y="292" width="13" height="15" fill="rgb(245,64,3)"/><text x="1021.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.12%)</title><rect x="1018" y="308" width="13" height="15" fill="rgb(238,203,17)"/><text x="1021.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.28%)</title><rect x="1028" y="324" width="3" height="15" fill="rgb(244,214,51)"/><text x="1031.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:806) (1 samples, 0.28%)</title><rect x="1028" y="340" width="3" height="15" fill="rgb(212,12,27)"/><text x="1031.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (6 samples, 1.68%)</title><rect x="1015" y="276" width="20" height="15" fill="rgb(242,117,33)"/><text x="1018.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.28%)</title><rect x="1031" y="292" width="4" height="15" fill="rgb(221,124,26)"/><text x="1034.00" y="302.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (2 samples, 0.56%)</title><rect x="1035" y="276" width="6" height="15" fill="rgb(220,193,24)"/><text x="1038.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.28%)</title><rect x="1038" y="292" width="3" height="15" fill="rgb(216,134,49)"/><text x="1041.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.28%)</title><rect x="1038" y="308" width="3" height="15" fill="rgb(208,84,28)"/><text x="1041.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (102 samples, 28.49%)</title><rect x="708" y="260" width="336" height="15" fill="rgb(216,51,54)"/><text x="711.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="1041" y="276" width="3" height="15" fill="rgb(220,118,21)"/><text x="1044.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="1041" y="292" width="3" height="15" fill="rgb(218,108,2)"/><text x="1044.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="1041" y="308" width="3" height="15" fill="rgb(205,188,34)"/><text x="1044.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.28%)</title><rect x="1051" y="276" width="3" height="15" fill="rgb(236,119,22)"/><text x="1054.00" y="286.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.28%)</title><rect x="1054" y="276" width="4" height="15" fill="rgb(250,171,8)"/><text x="1057.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (119 samples, 33.24%)</title><rect x="669" y="212" width="392" height="15" fill="rgb(241,157,28)"/><text x="672.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (118 samples, 32.96%)</title><rect x="672" y="228" width="389" height="15" fill="rgb(236,204,16)"/><text x="675.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (110 samples, 30.73%)</title><rect x="698" y="244" width="363" height="15" fill="rgb(236,53,17)"/><text x="701.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (5 samples, 1.40%)</title><rect x="1044" y="260" width="17" height="15" fill="rgb(232,198,33)"/><text x="1047.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.28%)</title><rect x="1058" y="276" width="3" height="15" fill="rgb(224,45,20)"/><text x="1061.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (2 samples, 0.56%)</title><rect x="1061" y="228" width="7" height="15" fill="rgb(247,22,6)"/><text x="1064.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:335) (1 samples, 0.28%)</title><rect x="1068" y="228" width="3" height="15" fill="rgb(208,106,27)"/><text x="1071.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.28%)</title><rect x="1071" y="228" width="3" height="15" fill="rgb(226,219,29)"/><text x="1074.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.28%)</title><rect x="1071" y="244" width="3" height="15" fill="rgb(254,186,20)"/><text x="1074.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.28%)</title><rect x="1074" y="228" width="3" height="15" fill="rgb(227,154,27)"/><text x="1077.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (125 samples, 34.92%)</title><rect x="669" y="196" width="412" height="15" fill="rgb(240,103,38)"/><text x="672.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (6 samples, 1.68%)</title><rect x="1061" y="212" width="20" height="15" fill="rgb(230,227,28)"/><text x="1064.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.28%)</title><rect x="1077" y="228" width="4" height="15" fill="rgb(222,192,50)"/><text x="1080.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (211 samples, 58.94%)</title><rect x="392" y="164" width="695" height="15" fill="rgb(235,82,18)"/><text x="395.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (130 samples, 36.31%)</title><rect x="659" y="180" width="428" height="15" fill="rgb(230,61,8)"/><text x="662.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.56%)</title><rect x="1081" y="196" width="6" height="15" fill="rgb(205,205,32)"/><text x="1084.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.28%)</title><rect x="1087" y="164" width="4" height="15" fill="rgb(225,23,41)"/><text x="1090.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.28%)</title><rect x="1087" y="180" width="4" height="15" fill="rgb(225,208,30)"/><text x="1090.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (217 samples, 60.61%)</title><rect x="379" y="148" width="715" height="15" fill="rgb(214,30,54)"/><text x="382.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1021) (1 samples, 0.28%)</title><rect x="1091" y="164" width="3" height="15" fill="rgb(223,67,10)"/><text x="1094.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:38) (323 samples, 90.22%)</title><rect x="33" y="52" width="1064" height="15" fill="rgb(232,74,47)"/><text x="36.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:37) (323 samples, 90.22%)</title><rect x="33" y="68" width="1064" height="15" fill="rgb(206,134,41)"/><text x="36.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:29) (323 samples, 90.22%)</title><rect x="33" y="84" width="1064" height="15" fill="rgb(236,108,25)"/><text x="36.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:23) (220 samples, 61.45%)</title><rect x="372" y="100" width="725" height="15" fill="rgb(241,36,0)"/><text x="375.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (220 samples, 61.45%)</title><rect x="372" y="116" width="725" height="15" fill="rgb(234,227,2)"/><text x="375.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (220 samples, 61.45%)</title><rect x="372" y="132" width="725" height="15" fill="rgb(246,195,13)"/><text x="375.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:672) (1 samples, 0.28%)</title><rect x="1094" y="148" width="3" height="15" fill="rgb(220,191,30)"/><text x="1097.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="1094" y="164" width="3" height="15" fill="rgb(239,97,25)"/><text x="1097.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="1094" y="180" width="3" height="15" fill="rgb(222,12,4)"/><text x="1097.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.28%)</title><rect x="1094" y="196" width="3" height="15" fill="rgb(217,4,3)"/><text x="1097.00" y="206.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.28%)</title><rect x="1094" y="212" width="3" height="15" fill="rgb(227,220,13)"/><text x="1097.00" y="222.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:718) (1 samples, 0.28%)</title><rect x="1094" y="228" width="3" height="15" fill="rgb(212,162,21)"/><text x="1097.00" y="238.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:1) (1 samples, 0.28%)</title><rect x="1097" y="148" width="4" height="15" fill="rgb(227,170,33)"/><text x="1100.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="164" width="4" height="15" fill="rgb(219,223,30)"/><text x="1100.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="180" width="4" height="15" fill="rgb(221,11,16)"/><text x="1100.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="196" width="4" height="15" fill="rgb(213,167,4)"/><text x="1100.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="212" width="4" height="15" fill="rgb(248,110,23)"/><text x="1100.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="228" width="4" height="15" fill="rgb(234,85,18)"/><text x="1100.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.28%)</title><rect x="1097" y="244" width="4" height="15" fill="rgb(229,94,26)"/><text x="1100.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="1097" y="260" width="4" height="15" fill="rgb(235,53,31)"/><text x="1100.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="276" width="4" height="15" fill="rgb(210,160,31)"/><text x="1100.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="292" width="4" height="15" fill="rgb(224,200,6)"/><text x="1100.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="308" width="4" height="15" fill="rgb(244,5,45)"/><text x="1100.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="324" width="4" height="15" fill="rgb(240,6,46)"/><text x="1100.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="340" width="4" height="15" fill="rgb(246,46,19)"/><text x="1100.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="356" width="4" height="15" fill="rgb(224,9,10)"/><text x="1100.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.28%)</title><rect x="1097" y="372" width="4" height="15" fill="rgb(233,113,6)"/><text x="1100.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="1097" y="388" width="4" height="15" fill="rgb(212,147,23)"/><text x="1100.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="404" width="4" height="15" fill="rgb(244,136,44)"/><text x="1100.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="420" width="4" height="15" fill="rgb(221,117,0)"/><text x="1100.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="436" width="4" height="15" fill="rgb(229,62,34)"/><text x="1100.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="452" width="4" height="15" fill="rgb(234,143,32)"/><text x="1100.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="468" width="4" height="15" fill="rgb(224,153,47)"/><text x="1100.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="484" width="4" height="15" fill="rgb(240,197,24)"/><text x="1100.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.28%)</title><rect x="1097" y="500" width="4" height="15" fill="rgb(252,133,40)"/><text x="1100.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="516" width="4" height="15" fill="rgb(231,31,15)"/><text x="1100.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="532" width="4" height="15" fill="rgb(221,122,49)"/><text x="1100.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="548" width="4" height="15" fill="rgb(233,11,45)"/><text x="1100.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="564" width="4" height="15" fill="rgb(230,190,45)"/><text x="1100.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="580" width="4" height="15" fill="rgb(206,172,28)"/><text x="1100.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.28%)</title><rect x="1097" y="596" width="4" height="15" fill="rgb(215,217,32)"/><text x="1100.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="612" width="4" height="15" fill="rgb(217,110,42)"/><text x="1100.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="628" width="4" height="15" fill="rgb(236,41,3)"/><text x="1100.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="644" width="4" height="15" fill="rgb(237,161,40)"/><text x="1100.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="660" width="4" height="15" fill="rgb(212,202,32)"/><text x="1100.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="676" width="4" height="15" fill="rgb(248,75,7)"/><text x="1100.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py:155) (1 samples, 0.28%)</title><rect x="1097" y="692" width="4" height="15" fill="rgb(226,73,21)"/><text x="1100.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="708" width="4" height="15" fill="rgb(207,31,47)"/><text x="1100.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="724" width="4" height="15" fill="rgb(222,14,42)"/><text x="1100.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="740" width="4" height="15" fill="rgb(233,38,48)"/><text x="1100.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="756" width="4" height="15" fill="rgb(206,128,35)"/><text x="1100.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="772" width="4" height="15" fill="rgb(219,216,44)"/><text x="1100.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py:8) (1 samples, 0.28%)</title><rect x="1097" y="788" width="4" height="15" fill="rgb(236,196,23)"/><text x="1100.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="804" width="4" height="15" fill="rgb(223,172,40)"/><text x="1100.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="820" width="4" height="15" fill="rgb(242,54,18)"/><text x="1100.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="836" width="4" height="15" fill="rgb(234,206,23)"/><text x="1100.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="852" width="4" height="15" fill="rgb(247,106,26)"/><text x="1100.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="868" width="4" height="15" fill="rgb(209,96,32)"/><text x="1100.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py:5) (1 samples, 0.28%)</title><rect x="1097" y="884" width="4" height="15" fill="rgb(220,76,33)"/><text x="1100.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="900" width="4" height="15" fill="rgb(241,8,54)"/><text x="1100.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="916" width="4" height="15" fill="rgb(208,1,34)"/><text x="1100.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="932" width="4" height="15" fill="rgb(242,179,39)"/><text x="1100.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="948" width="4" height="15" fill="rgb(229,23,18)"/><text x="1100.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="964" width="4" height="15" fill="rgb(242,200,29)"/><text x="1100.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py:11) (1 samples, 0.28%)</title><rect x="1097" y="980" width="4" height="15" fill="rgb(222,4,6)"/><text x="1100.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1097" y="996" width="4" height="15" fill="rgb(231,69,35)"/><text x="1100.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1097" y="1012" width="4" height="15" fill="rgb(229,30,44)"/><text x="1100.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1097" y="1028" width="4" height="15" fill="rgb(240,100,49)"/><text x="1100.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1097" y="1044" width="4" height="15" fill="rgb(251,21,42)"/><text x="1100.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1097" y="1060" width="4" height="15" fill="rgb(217,167,0)"/><text x="1100.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py:38) (1 samples, 0.28%)</title><rect x="1097" y="1076" width="4" height="15" fill="rgb(206,169,44)"/><text x="1100.00" y="1086.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="1097" y="1092" width="4" height="15" fill="rgb(222,75,44)"/><text x="1100.00" y="1102.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="1097" y="1108" width="4" height="15" fill="rgb(231,159,18)"/><text x="1100.00" y="1118.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="1097" y="1124" width="4" height="15" fill="rgb(218,34,19)"/><text x="1100.00" y="1134.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.28%)</title><rect x="1097" y="1140" width="4" height="15" fill="rgb(243,172,16)"/><text x="1100.00" y="1150.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="1097" y="1156" width="4" height="15" fill="rgb(221,77,9)"/><text x="1100.00" y="1166.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="1097" y="1172" width="4" height="15" fill="rgb(235,44,5)"/><text x="1100.00" y="1182.50"></text></g><g><title>_parse_sub (sre_parse.py:427) (1 samples, 0.28%)</title><rect x="1097" y="1188" width="4" height="15" fill="rgb(243,206,41)"/><text x="1100.00" y="1198.50"></text></g><g><title>match (sre_parse.py:251) (1 samples, 0.28%)</title><rect x="1097" y="1204" width="4" height="15" fill="rgb(215,10,36)"/><text x="1100.00" y="1214.50"></text></g><g><title>__next (sre_parse.py:240) (1 samples, 0.28%)</title><rect x="1097" y="1220" width="4" height="15" fill="rgb(231,61,15)"/><text x="1100.00" y="1230.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.28%)</title><rect x="1101" y="916" width="3" height="15" fill="rgb(233,141,54)"/><text x="1104.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.28%)</title><rect x="1101" y="932" width="3" height="15" fill="rgb(254,65,24)"/><text x="1104.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.84%)</title><rect x="1101" y="852" width="9" height="15" fill="rgb(247,26,5)"/><text x="1104.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.84%)</title><rect x="1101" y="868" width="9" height="15" fill="rgb(218,17,35)"/><text x="1104.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.84%)</title><rect x="1101" y="884" width="9" height="15" fill="rgb(226,211,12)"/><text x="1104.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.84%)</title><rect x="1101" y="900" width="9" height="15" fill="rgb(206,92,0)"/><text x="1104.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.56%)</title><rect x="1104" y="916" width="6" height="15" fill="rgb(206,13,25)"/><text x="1107.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.28%)</title><rect x="1107" y="932" width="3" height="15" fill="rgb(254,128,47)"/><text x="1110.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.28%)</title><rect x="1107" y="948" width="3" height="15" fill="rgb(226,59,41)"/><text x="1110.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="1107" y="964" width="3" height="15" fill="rgb(235,52,37)"/><text x="1110.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1107" y="980" width="3" height="15" fill="rgb(230,59,19)"/><text x="1110.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.28%)</title><rect x="1110" y="964" width="4" height="15" fill="rgb(223,208,8)"/><text x="1113.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.28%)</title><rect x="1110" y="980" width="4" height="15" fill="rgb(220,144,28)"/><text x="1113.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.28%)</title><rect x="1110" y="996" width="4" height="15" fill="rgb(250,198,19)"/><text x="1113.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.28%)</title><rect x="1110" y="1012" width="4" height="15" fill="rgb(229,8,22)"/><text x="1113.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="1110" y="1028" width="4" height="15" fill="rgb(215,46,48)"/><text x="1113.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.28%)</title><rect x="1110" y="1044" width="4" height="15" fill="rgb(241,46,35)"/><text x="1113.00" y="1054.50"></text></g><g><title>mbstowcs (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1110" y="1060" width="4" height="15" fill="rgb(213,213,45)"/><text x="1113.00" y="1070.50"></text></g><g><title>mbsrtowcs (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1110" y="1076" width="4" height="15" fill="rgb(246,216,9)"/><text x="1113.00" y="1086.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.56%)</title><rect x="1110" y="932" width="7" height="15" fill="rgb(207,43,23)"/><text x="1113.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.56%)</title><rect x="1110" y="948" width="7" height="15" fill="rgb(215,35,31)"/><text x="1113.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.28%)</title><rect x="1114" y="964" width="3" height="15" fill="rgb(226,113,46)"/><text x="1117.00" y="974.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.84%)</title><rect x="1110" y="884" width="10" height="15" fill="rgb(218,128,25)"/><text x="1113.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.84%)</title><rect x="1110" y="900" width="10" height="15" fill="rgb(220,102,3)"/><text x="1113.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.84%)</title><rect x="1110" y="916" width="10" height="15" fill="rgb(210,71,25)"/><text x="1113.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.28%)</title><rect x="1117" y="932" width="3" height="15" fill="rgb(214,80,21)"/><text x="1120.00" y="942.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="1117" y="948" width="3" height="15" fill="rgb(250,212,49)"/><text x="1120.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 1.12%)</title><rect x="1110" y="852" width="14" height="15" fill="rgb(254,125,40)"/><text x="1113.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 1.12%)</title><rect x="1110" y="868" width="14" height="15" fill="rgb(248,152,24)"/><text x="1113.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.28%)</title><rect x="1120" y="884" width="4" height="15" fill="rgb(223,34,25)"/><text x="1123.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.28%)</title><rect x="1120" y="900" width="4" height="15" fill="rgb(242,10,46)"/><text x="1123.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.28%)</title><rect x="1120" y="916" width="4" height="15" fill="rgb(245,157,22)"/><text x="1123.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.28%)</title><rect x="1120" y="932" width="4" height="15" fill="rgb(234,185,0)"/><text x="1123.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.28%)</title><rect x="1120" y="948" width="4" height="15" fill="rgb(249,177,48)"/><text x="1123.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.28%)</title><rect x="1120" y="964" width="4" height="15" fill="rgb(207,91,35)"/><text x="1123.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.28%)</title><rect x="1120" y="980" width="4" height="15" fill="rgb(226,71,18)"/><text x="1123.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.28%)</title><rect x="1120" y="996" width="4" height="15" fill="rgb(219,191,44)"/><text x="1123.00" y="1006.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.28%)</title><rect x="1124" y="948" width="3" height="15" fill="rgb(250,174,50)"/><text x="1127.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.28%)</title><rect x="1124" y="964" width="3" height="15" fill="rgb(210,106,29)"/><text x="1127.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:2) (9 samples, 2.51%)</title><rect x="1101" y="148" width="29" height="15" fill="rgb(246,31,36)"/><text x="1104.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="164" width="29" height="15" fill="rgb(248,71,28)"/><text x="1104.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.51%)</title><rect x="1101" y="180" width="29" height="15" fill="rgb(247,128,17)"/><text x="1104.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="196" width="29" height="15" fill="rgb(252,157,49)"/><text x="1104.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="212" width="29" height="15" fill="rgb(206,120,32)"/><text x="1104.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.51%)</title><rect x="1101" y="228" width="29" height="15" fill="rgb(250,24,33)"/><text x="1104.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.51%)</title><rect x="1101" y="244" width="29" height="15" fill="rgb(224,184,11)"/><text x="1104.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.51%)</title><rect x="1101" y="260" width="29" height="15" fill="rgb(212,146,2)"/><text x="1104.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="276" width="29" height="15" fill="rgb(222,101,51)"/><text x="1104.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 2.51%)</title><rect x="1101" y="292" width="29" height="15" fill="rgb(217,95,22)"/><text x="1104.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="308" width="29" height="15" fill="rgb(209,29,48)"/><text x="1104.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.51%)</title><rect x="1101" y="324" width="29" height="15" fill="rgb(215,198,47)"/><text x="1104.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.51%)</title><rect x="1101" y="340" width="29" height="15" fill="rgb(236,132,13)"/><text x="1104.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.51%)</title><rect x="1101" y="356" width="29" height="15" fill="rgb(207,56,2)"/><text x="1104.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="372" width="29" height="15" fill="rgb(235,9,5)"/><text x="1104.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 2.51%)</title><rect x="1101" y="388" width="29" height="15" fill="rgb(234,165,30)"/><text x="1104.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="404" width="29" height="15" fill="rgb(247,137,38)"/><text x="1104.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.51%)</title><rect x="1101" y="420" width="29" height="15" fill="rgb(229,46,40)"/><text x="1104.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.51%)</title><rect x="1101" y="436" width="29" height="15" fill="rgb(218,5,35)"/><text x="1104.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.51%)</title><rect x="1101" y="452" width="29" height="15" fill="rgb(207,158,29)"/><text x="1104.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="468" width="29" height="15" fill="rgb(242,155,48)"/><text x="1104.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 2.51%)</title><rect x="1101" y="484" width="29" height="15" fill="rgb(225,35,37)"/><text x="1104.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="500" width="29" height="15" fill="rgb(227,32,51)"/><text x="1104.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.51%)</title><rect x="1101" y="516" width="29" height="15" fill="rgb(228,176,38)"/><text x="1104.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.51%)</title><rect x="1101" y="532" width="29" height="15" fill="rgb(223,137,25)"/><text x="1104.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.51%)</title><rect x="1101" y="548" width="29" height="15" fill="rgb(233,92,44)"/><text x="1104.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="564" width="29" height="15" fill="rgb(219,216,39)"/><text x="1104.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 2.51%)</title><rect x="1101" y="580" width="29" height="15" fill="rgb(212,14,10)"/><text x="1104.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="596" width="29" height="15" fill="rgb(240,104,54)"/><text x="1104.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 2.51%)</title><rect x="1101" y="612" width="29" height="15" fill="rgb(226,133,25)"/><text x="1104.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="628" width="29" height="15" fill="rgb(222,197,52)"/><text x="1104.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="644" width="29" height="15" fill="rgb(217,148,35)"/><text x="1104.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.51%)</title><rect x="1101" y="660" width="29" height="15" fill="rgb(253,112,46)"/><text x="1104.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.51%)</title><rect x="1101" y="676" width="29" height="15" fill="rgb(244,200,31)"/><text x="1104.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.51%)</title><rect x="1101" y="692" width="29" height="15" fill="rgb(247,113,35)"/><text x="1104.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="708" width="29" height="15" fill="rgb(219,130,2)"/><text x="1104.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 2.51%)</title><rect x="1101" y="724" width="29" height="15" fill="rgb(218,206,25)"/><text x="1104.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.51%)</title><rect x="1101" y="740" width="29" height="15" fill="rgb(236,31,29)"/><text x="1104.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.51%)</title><rect x="1101" y="756" width="29" height="15" fill="rgb(224,0,8)"/><text x="1104.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.51%)</title><rect x="1101" y="772" width="29" height="15" fill="rgb(223,113,4)"/><text x="1104.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.51%)</title><rect x="1101" y="788" width="29" height="15" fill="rgb(233,218,16)"/><text x="1104.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.51%)</title><rect x="1101" y="804" width="29" height="15" fill="rgb(208,90,0)"/><text x="1104.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (9 samples, 2.51%)</title><rect x="1101" y="820" width="29" height="15" fill="rgb(234,188,10)"/><text x="1104.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (9 samples, 2.51%)</title><rect x="1101" y="836" width="29" height="15" fill="rgb(228,124,1)"/><text x="1104.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.56%)</title><rect x="1124" y="852" width="6" height="15" fill="rgb(212,196,27)"/><text x="1127.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.56%)</title><rect x="1124" y="868" width="6" height="15" fill="rgb(223,121,32)"/><text x="1127.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.56%)</title><rect x="1124" y="884" width="6" height="15" fill="rgb(209,0,4)"/><text x="1127.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.56%)</title><rect x="1124" y="900" width="6" height="15" fill="rgb(230,93,11)"/><text x="1127.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.56%)</title><rect x="1124" y="916" width="6" height="15" fill="rgb(210,73,42)"/><text x="1127.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.56%)</title><rect x="1124" y="932" width="6" height="15" fill="rgb(236,103,21)"/><text x="1127.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.28%)</title><rect x="1127" y="948" width="3" height="15" fill="rgb(227,69,51)"/><text x="1130.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.28%)</title><rect x="1127" y="964" width="3" height="15" fill="rgb(217,11,6)"/><text x="1130.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:152) (1 samples, 0.28%)</title><rect x="1127" y="980" width="3" height="15" fill="rgb(210,4,27)"/><text x="1130.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:4) (1 samples, 0.28%)</title><rect x="1130" y="148" width="3" height="15" fill="rgb(214,4,33)"/><text x="1133.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="164" width="3" height="15" fill="rgb(232,156,1)"/><text x="1133.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="1130" y="180" width="3" height="15" fill="rgb(241,71,43)"/><text x="1133.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="196" width="3" height="15" fill="rgb(230,13,39)"/><text x="1133.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="212" width="3" height="15" fill="rgb(235,18,37)"/><text x="1133.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="228" width="3" height="15" fill="rgb(208,0,3)"/><text x="1133.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="244" width="3" height="15" fill="rgb(240,86,51)"/><text x="1133.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="260" width="3" height="15" fill="rgb(216,150,4)"/><text x="1133.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="276" width="3" height="15" fill="rgb(212,38,51)"/><text x="1133.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.28%)</title><rect x="1130" y="292" width="3" height="15" fill="rgb(240,162,19)"/><text x="1133.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="308" width="3" height="15" fill="rgb(205,0,41)"/><text x="1133.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="324" width="3" height="15" fill="rgb(237,11,25)"/><text x="1133.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="340" width="3" height="15" fill="rgb(205,62,24)"/><text x="1133.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="356" width="3" height="15" fill="rgb(210,215,27)"/><text x="1133.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="372" width="3" height="15" fill="rgb(216,86,32)"/><text x="1133.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.28%)</title><rect x="1130" y="388" width="3" height="15" fill="rgb(220,213,52)"/><text x="1133.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="404" width="3" height="15" fill="rgb(214,118,15)"/><text x="1133.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="420" width="3" height="15" fill="rgb(246,91,51)"/><text x="1133.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="436" width="3" height="15" fill="rgb(239,59,1)"/><text x="1133.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="452" width="3" height="15" fill="rgb(249,220,29)"/><text x="1133.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="468" width="3" height="15" fill="rgb(250,52,35)"/><text x="1133.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.28%)</title><rect x="1130" y="484" width="3" height="15" fill="rgb(234,8,42)"/><text x="1133.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="1130" y="500" width="3" height="15" fill="rgb(240,157,19)"/><text x="1133.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="516" width="3" height="15" fill="rgb(247,18,37)"/><text x="1133.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="532" width="3" height="15" fill="rgb(253,2,49)"/><text x="1133.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="548" width="3" height="15" fill="rgb(241,206,18)"/><text x="1133.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="564" width="3" height="15" fill="rgb(227,191,34)"/><text x="1133.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="580" width="3" height="15" fill="rgb(249,155,43)"/><text x="1133.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="596" width="3" height="15" fill="rgb(226,173,25)"/><text x="1133.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.28%)</title><rect x="1130" y="612" width="3" height="15" fill="rgb(244,74,19)"/><text x="1133.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="628" width="3" height="15" fill="rgb(253,39,1)"/><text x="1133.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="644" width="3" height="15" fill="rgb(216,1,34)"/><text x="1133.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="660" width="3" height="15" fill="rgb(228,110,24)"/><text x="1133.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="676" width="3" height="15" fill="rgb(254,154,14)"/><text x="1133.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="692" width="3" height="15" fill="rgb(253,30,21)"/><text x="1133.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.28%)</title><rect x="1130" y="708" width="3" height="15" fill="rgb(220,127,32)"/><text x="1133.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="724" width="3" height="15" fill="rgb(240,178,54)"/><text x="1133.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="740" width="3" height="15" fill="rgb(232,66,12)"/><text x="1133.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="756" width="3" height="15" fill="rgb(240,176,23)"/><text x="1133.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="772" width="3" height="15" fill="rgb(254,176,43)"/><text x="1133.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="788" width="3" height="15" fill="rgb(247,188,15)"/><text x="1133.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:26) (1 samples, 0.28%)</title><rect x="1130" y="804" width="3" height="15" fill="rgb(254,172,53)"/><text x="1133.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="820" width="3" height="15" fill="rgb(231,106,52)"/><text x="1133.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="836" width="3" height="15" fill="rgb(216,225,0)"/><text x="1133.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="852" width="3" height="15" fill="rgb(254,184,7)"/><text x="1133.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1130" y="868" width="3" height="15" fill="rgb(246,134,0)"/><text x="1133.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1130" y="884" width="3" height="15" fill="rgb(254,3,13)"/><text x="1133.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/func_inspect.py:18) (1 samples, 0.28%)</title><rect x="1130" y="900" width="3" height="15" fill="rgb(221,28,39)"/><text x="1133.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1130" y="916" width="3" height="15" fill="rgb(227,220,38)"/><text x="1133.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1130" y="932" width="3" height="15" fill="rgb(253,82,53)"/><text x="1133.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1130" y="948" width="3" height="15" fill="rgb(229,182,48)"/><text x="1133.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="1130" y="964" width="3" height="15" fill="rgb(208,24,18)"/><text x="1133.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.28%)</title><rect x="1130" y="980" width="3" height="15" fill="rgb(240,3,25)"/><text x="1133.00" y="990.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.28%)</title><rect x="1133" y="580" width="4" height="15" fill="rgb(227,176,37)"/><text x="1136.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1133" y="596" width="4" height="15" fill="rgb(215,200,13)"/><text x="1136.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1133" y="612" width="4" height="15" fill="rgb(239,132,44)"/><text x="1136.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1133" y="628" width="4" height="15" fill="rgb(239,113,8)"/><text x="1136.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1133" y="644" width="4" height="15" fill="rgb(252,43,31)"/><text x="1136.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1133" y="660" width="4" height="15" fill="rgb(234,40,50)"/><text x="1136.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.28%)</title><rect x="1133" y="676" width="4" height="15" fill="rgb(235,5,12)"/><text x="1136.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1133" y="692" width="4" height="15" fill="rgb(244,182,36)"/><text x="1136.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1133" y="708" width="4" height="15" fill="rgb(205,205,50)"/><text x="1136.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1133" y="724" width="4" height="15" fill="rgb(231,104,11)"/><text x="1136.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1133" y="740" width="4" height="15" fill="rgb(206,11,5)"/><text x="1136.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1133" y="756" width="4" height="15" fill="rgb(242,98,48)"/><text x="1136.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.28%)</title><rect x="1133" y="772" width="4" height="15" fill="rgb(211,114,38)"/><text x="1136.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="1133" y="788" width="4" height="15" fill="rgb(251,50,31)"/><text x="1136.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="1133" y="804" width="4" height="15" fill="rgb(213,183,4)"/><text x="1136.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="1133" y="820" width="4" height="15" fill="rgb(228,41,27)"/><text x="1136.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.28%)</title><rect x="1133" y="836" width="4" height="15" fill="rgb(211,75,46)"/><text x="1136.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="1133" y="852" width="4" height="15" fill="rgb(242,18,46)"/><text x="1136.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="1133" y="868" width="4" height="15" fill="rgb(208,219,30)"/><text x="1136.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="1133" y="884" width="4" height="15" fill="rgb(221,6,16)"/><text x="1136.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.28%)</title><rect x="1133" y="900" width="4" height="15" fill="rgb(250,16,31)"/><text x="1136.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.28%)</title><rect x="1133" y="916" width="4" height="15" fill="rgb(210,170,52)"/><text x="1136.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.28%)</title><rect x="1133" y="932" width="4" height="15" fill="rgb(229,99,54)"/><text x="1136.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.12%)</title><rect x="1133" y="244" width="14" height="15" fill="rgb(237,26,12)"/><text x="1136.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="1133" y="260" width="14" height="15" fill="rgb(205,67,14)"/><text x="1136.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="1133" y="276" width="14" height="15" fill="rgb(224,170,9)"/><text x="1136.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="1133" y="292" width="14" height="15" fill="rgb(245,51,48)"/><text x="1136.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="1133" y="308" width="14" height="15" fill="rgb(230,134,19)"/><text x="1136.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="1133" y="324" width="14" height="15" fill="rgb(236,195,3)"/><text x="1136.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.12%)</title><rect x="1133" y="340" width="14" height="15" fill="rgb(233,117,33)"/><text x="1136.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="1133" y="356" width="14" height="15" fill="rgb(226,224,49)"/><text x="1136.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.12%)</title><rect x="1133" y="372" width="14" height="15" fill="rgb(210,197,25)"/><text x="1136.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="1133" y="388" width="14" height="15" fill="rgb(222,152,28)"/><text x="1136.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="1133" y="404" width="14" height="15" fill="rgb(234,142,17)"/><text x="1136.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="1133" y="420" width="14" height="15" fill="rgb(230,67,16)"/><text x="1136.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="1133" y="436" width="14" height="15" fill="rgb(205,164,12)"/><text x="1136.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="1133" y="452" width="14" height="15" fill="rgb(205,165,44)"/><text x="1136.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="1133" y="468" width="14" height="15" fill="rgb(224,27,36)"/><text x="1136.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (4 samples, 1.12%)</title><rect x="1133" y="484" width="14" height="15" fill="rgb(234,108,35)"/><text x="1136.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="1133" y="500" width="14" height="15" fill="rgb(228,102,19)"/><text x="1136.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="1133" y="516" width="14" height="15" fill="rgb(216,88,51)"/><text x="1136.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="1133" y="532" width="14" height="15" fill="rgb(251,65,40)"/><text x="1136.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="1133" y="548" width="14" height="15" fill="rgb(249,99,27)"/><text x="1136.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="1133" y="564" width="14" height="15" fill="rgb(254,106,18)"/><text x="1136.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (3 samples, 0.84%)</title><rect x="1137" y="580" width="10" height="15" fill="rgb(229,161,4)"/><text x="1140.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="596" width="10" height="15" fill="rgb(217,133,30)"/><text x="1140.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.84%)</title><rect x="1137" y="612" width="10" height="15" fill="rgb(246,0,52)"/><text x="1140.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="628" width="10" height="15" fill="rgb(242,172,10)"/><text x="1140.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="644" width="10" height="15" fill="rgb(237,19,45)"/><text x="1140.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="660" width="10" height="15" fill="rgb(246,138,29)"/><text x="1140.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="676" width="10" height="15" fill="rgb(217,127,10)"/><text x="1140.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1137" y="692" width="10" height="15" fill="rgb(212,174,19)"/><text x="1140.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="708" width="10" height="15" fill="rgb(234,38,3)"/><text x="1140.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (3 samples, 0.84%)</title><rect x="1137" y="724" width="10" height="15" fill="rgb(228,57,41)"/><text x="1140.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="740" width="10" height="15" fill="rgb(213,163,20)"/><text x="1140.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="756" width="10" height="15" fill="rgb(240,112,6)"/><text x="1140.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="772" width="10" height="15" fill="rgb(242,213,37)"/><text x="1140.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1137" y="788" width="10" height="15" fill="rgb(206,196,53)"/><text x="1140.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="804" width="10" height="15" fill="rgb(237,202,17)"/><text x="1140.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (3 samples, 0.84%)</title><rect x="1137" y="820" width="10" height="15" fill="rgb(250,132,19)"/><text x="1140.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="836" width="10" height="15" fill="rgb(254,224,17)"/><text x="1140.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="852" width="10" height="15" fill="rgb(218,64,26)"/><text x="1140.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="868" width="10" height="15" fill="rgb(249,165,9)"/><text x="1140.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1137" y="884" width="10" height="15" fill="rgb(225,5,11)"/><text x="1140.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="900" width="10" height="15" fill="rgb(241,191,13)"/><text x="1140.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (3 samples, 0.84%)</title><rect x="1137" y="916" width="10" height="15" fill="rgb(240,49,23)"/><text x="1140.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="932" width="10" height="15" fill="rgb(230,202,30)"/><text x="1140.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.84%)</title><rect x="1137" y="948" width="10" height="15" fill="rgb(224,27,47)"/><text x="1140.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="964" width="10" height="15" fill="rgb(213,178,23)"/><text x="1140.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="980" width="10" height="15" fill="rgb(229,148,19)"/><text x="1140.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="996" width="10" height="15" fill="rgb(241,114,22)"/><text x="1140.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="1012" width="10" height="15" fill="rgb(206,5,50)"/><text x="1140.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1137" y="1028" width="10" height="15" fill="rgb(231,225,27)"/><text x="1140.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="1044" width="10" height="15" fill="rgb(232,131,45)"/><text x="1140.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (3 samples, 0.84%)</title><rect x="1137" y="1060" width="10" height="15" fill="rgb(251,12,43)"/><text x="1140.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="1076" width="10" height="15" fill="rgb(212,190,8)"/><text x="1140.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="1092" width="10" height="15" fill="rgb(221,141,34)"/><text x="1140.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="1108" width="10" height="15" fill="rgb(213,76,10)"/><text x="1140.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1137" y="1124" width="10" height="15" fill="rgb(244,105,8)"/><text x="1140.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="1140" width="10" height="15" fill="rgb(239,116,22)"/><text x="1140.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (3 samples, 0.84%)</title><rect x="1137" y="1156" width="10" height="15" fill="rgb(223,112,26)"/><text x="1140.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.84%)</title><rect x="1137" y="1172" width="10" height="15" fill="rgb(205,105,52)"/><text x="1140.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="1188" width="10" height="15" fill="rgb(234,144,44)"/><text x="1140.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="1204" width="10" height="15" fill="rgb(242,0,49)"/><text x="1140.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="1220" width="10" height="15" fill="rgb(248,184,6)"/><text x="1140.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="1236" width="10" height="15" fill="rgb(219,71,1)"/><text x="1140.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1137" y="1252" width="10" height="15" fill="rgb(214,36,38)"/><text x="1140.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="1268" width="10" height="15" fill="rgb(214,180,39)"/><text x="1140.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:13) (3 samples, 0.84%)</title><rect x="1137" y="1284" width="10" height="15" fill="rgb(207,131,9)"/><text x="1140.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="1300" width="10" height="15" fill="rgb(221,47,46)"/><text x="1140.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.84%)</title><rect x="1137" y="1316" width="10" height="15" fill="rgb(251,159,11)"/><text x="1140.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1137" y="1332" width="10" height="15" fill="rgb(246,122,24)"/><text x="1140.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1137" y="1348" width="10" height="15" fill="rgb(241,189,37)"/><text x="1140.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1137" y="1364" width="10" height="15" fill="rgb(215,62,3)"/><text x="1140.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1137" y="1380" width="10" height="15" fill="rgb(224,46,41)"/><text x="1140.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (3 samples, 0.84%)</title><rect x="1137" y="1396" width="10" height="15" fill="rgb(250,148,24)"/><text x="1140.00" y="1406.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (3 samples, 0.84%)</title><rect x="1137" y="1412" width="10" height="15" fill="rgb(224,151,35)"/><text x="1140.00" y="1422.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (3 samples, 0.84%)</title><rect x="1137" y="1428" width="10" height="15" fill="rgb(240,181,12)"/><text x="1140.00" y="1438.50"></text></g><g><title>0x7fd9f699b143 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1143" y="1444" width="4" height="15" fill="rgb(248,32,39)"/><text x="1146.00" y="1454.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.28%)</title><rect x="1147" y="628" width="3" height="15" fill="rgb(252,227,8)"/><text x="1150.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1147" y="644" width="3" height="15" fill="rgb(211,95,29)"/><text x="1150.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1147" y="660" width="3" height="15" fill="rgb(238,63,54)"/><text x="1150.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1147" y="676" width="3" height="15" fill="rgb(210,134,21)"/><text x="1150.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1147" y="692" width="3" height="15" fill="rgb(208,41,3)"/><text x="1150.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1147" y="708" width="3" height="15" fill="rgb(207,78,22)"/><text x="1150.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:21) (1 samples, 0.28%)</title><rect x="1147" y="724" width="3" height="15" fill="rgb(228,209,18)"/><text x="1150.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1147" y="740" width="3" height="15" fill="rgb(205,177,51)"/><text x="1150.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1147" y="756" width="3" height="15" fill="rgb(245,217,11)"/><text x="1150.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1147" y="772" width="3" height="15" fill="rgb(232,96,51)"/><text x="1150.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="1147" y="788" width="3" height="15" fill="rgb(222,174,54)"/><text x="1150.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="1147" y="804" width="3" height="15" fill="rgb(245,90,49)"/><text x="1150.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="1147" y="820" width="3" height="15" fill="rgb(247,207,11)"/><text x="1150.00" y="830.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.28%)</title><rect x="1150" y="724" width="3" height="15" fill="rgb(226,137,22)"/><text x="1153.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="740" width="3" height="15" fill="rgb(208,8,16)"/><text x="1153.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="756" width="3" height="15" fill="rgb(253,204,27)"/><text x="1153.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="772" width="3" height="15" fill="rgb(211,72,4)"/><text x="1153.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="788" width="3" height="15" fill="rgb(237,122,6)"/><text x="1153.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="804" width="3" height="15" fill="rgb(221,87,22)"/><text x="1153.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.28%)</title><rect x="1150" y="820" width="3" height="15" fill="rgb(220,42,53)"/><text x="1153.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="836" width="3" height="15" fill="rgb(218,8,26)"/><text x="1153.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="852" width="3" height="15" fill="rgb(210,112,26)"/><text x="1153.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="868" width="3" height="15" fill="rgb(207,95,46)"/><text x="1153.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="884" width="3" height="15" fill="rgb(246,115,23)"/><text x="1153.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="900" width="3" height="15" fill="rgb(239,72,5)"/><text x="1153.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.28%)</title><rect x="1150" y="916" width="3" height="15" fill="rgb(250,119,34)"/><text x="1153.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="932" width="3" height="15" fill="rgb(208,142,45)"/><text x="1153.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="948" width="3" height="15" fill="rgb(229,55,50)"/><text x="1153.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="964" width="3" height="15" fill="rgb(243,159,13)"/><text x="1153.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="980" width="3" height="15" fill="rgb(253,142,26)"/><text x="1153.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="996" width="3" height="15" fill="rgb(229,149,0)"/><text x="1153.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.28%)</title><rect x="1150" y="1012" width="3" height="15" fill="rgb(226,179,4)"/><text x="1153.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="1028" width="3" height="15" fill="rgb(205,59,29)"/><text x="1153.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="1044" width="3" height="15" fill="rgb(227,113,4)"/><text x="1153.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="1060" width="3" height="15" fill="rgb(221,0,1)"/><text x="1153.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="1076" width="3" height="15" fill="rgb(208,134,27)"/><text x="1153.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="1092" width="3" height="15" fill="rgb(223,169,19)"/><text x="1153.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.28%)</title><rect x="1150" y="1108" width="3" height="15" fill="rgb(235,65,22)"/><text x="1153.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="1124" width="3" height="15" fill="rgb(223,59,32)"/><text x="1153.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="1140" width="3" height="15" fill="rgb(236,209,53)"/><text x="1153.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="1156" width="3" height="15" fill="rgb(234,51,48)"/><text x="1153.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="1172" width="3" height="15" fill="rgb(220,135,20)"/><text x="1153.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="1188" width="3" height="15" fill="rgb(221,33,13)"/><text x="1153.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.28%)</title><rect x="1150" y="1204" width="3" height="15" fill="rgb(238,214,52)"/><text x="1153.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="1220" width="3" height="15" fill="rgb(252,104,22)"/><text x="1153.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="1236" width="3" height="15" fill="rgb(208,205,18)"/><text x="1153.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="1252" width="3" height="15" fill="rgb(250,106,42)"/><text x="1153.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="1268" width="3" height="15" fill="rgb(253,208,4)"/><text x="1153.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="1284" width="3" height="15" fill="rgb(246,110,26)"/><text x="1153.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.28%)</title><rect x="1150" y="1300" width="3" height="15" fill="rgb(217,125,8)"/><text x="1153.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="1316" width="3" height="15" fill="rgb(252,125,6)"/><text x="1153.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="1332" width="3" height="15" fill="rgb(250,200,12)"/><text x="1153.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="1348" width="3" height="15" fill="rgb(212,216,46)"/><text x="1153.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1150" y="1364" width="3" height="15" fill="rgb(225,76,20)"/><text x="1153.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1150" y="1380" width="3" height="15" fill="rgb(253,163,15)"/><text x="1153.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.28%)</title><rect x="1150" y="1396" width="3" height="15" fill="rgb(238,109,17)"/><text x="1153.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1150" y="1412" width="3" height="15" fill="rgb(222,220,32)"/><text x="1153.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1150" y="1428" width="3" height="15" fill="rgb(233,35,18)"/><text x="1153.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1150" y="1444" width="3" height="15" fill="rgb(235,218,34)"/><text x="1153.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="1150" y="1460" width="3" height="15" fill="rgb(253,219,0)"/><text x="1153.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="1150" y="1476" width="3" height="15" fill="rgb(253,49,26)"/><text x="1153.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="1150" y="1492" width="3" height="15" fill="rgb(244,74,49)"/><text x="1153.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.84%)</title><rect x="1147" y="532" width="10" height="15" fill="rgb(223,97,51)"/><text x="1150.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="1147" y="548" width="10" height="15" fill="rgb(215,5,8)"/><text x="1150.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="1147" y="564" width="10" height="15" fill="rgb(222,31,26)"/><text x="1150.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="1147" y="580" width="10" height="15" fill="rgb(210,89,43)"/><text x="1150.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="1147" y="596" width="10" height="15" fill="rgb(250,181,54)"/><text x="1150.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="1147" y="612" width="10" height="15" fill="rgb(208,72,51)"/><text x="1150.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.56%)</title><rect x="1150" y="628" width="7" height="15" fill="rgb(225,182,43)"/><text x="1153.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1150" y="644" width="7" height="15" fill="rgb(240,52,28)"/><text x="1153.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1150" y="660" width="7" height="15" fill="rgb(215,132,48)"/><text x="1153.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1150" y="676" width="7" height="15" fill="rgb(238,111,6)"/><text x="1153.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1150" y="692" width="7" height="15" fill="rgb(248,20,6)"/><text x="1153.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1150" y="708" width="7" height="15" fill="rgb(215,149,3)"/><text x="1153.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.28%)</title><rect x="1153" y="724" width="4" height="15" fill="rgb(254,105,50)"/><text x="1156.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1153" y="740" width="4" height="15" fill="rgb(232,218,4)"/><text x="1156.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="1153" y="756" width="4" height="15" fill="rgb(240,57,20)"/><text x="1156.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1153" y="772" width="4" height="15" fill="rgb(209,103,13)"/><text x="1156.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1153" y="788" width="4" height="15" fill="rgb(243,116,27)"/><text x="1156.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1153" y="804" width="4" height="15" fill="rgb(250,134,13)"/><text x="1156.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1153" y="820" width="4" height="15" fill="rgb(230,71,29)"/><text x="1156.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1153" y="836" width="4" height="15" fill="rgb(250,48,24)"/><text x="1156.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1153" y="852" width="4" height="15" fill="rgb(233,141,46)"/><text x="1156.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:8) (1 samples, 0.28%)</title><rect x="1153" y="868" width="4" height="15" fill="rgb(254,203,3)"/><text x="1156.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1153" y="884" width="4" height="15" fill="rgb(205,196,46)"/><text x="1156.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1153" y="900" width="4" height="15" fill="rgb(240,39,37)"/><text x="1156.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1153" y="916" width="4" height="15" fill="rgb(209,128,10)"/><text x="1156.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1153" y="932" width="4" height="15" fill="rgb(234,188,15)"/><text x="1156.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1153" y="948" width="4" height="15" fill="rgb(223,203,8)"/><text x="1156.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py:1777) (1 samples, 0.28%)</title><rect x="1153" y="964" width="4" height="15" fill="rgb(206,179,14)"/><text x="1156.00" y="974.50"></text></g><g><title>_add_comparison_ops (pandas/core/arrays/base.py:1059) (1 samples, 0.28%)</title><rect x="1153" y="980" width="4" height="15" fill="rgb(250,201,18)"/><text x="1156.00" y="990.50"></text></g><g><title>_dt_array_cmp (pandas/core/arrays/datetimes.py:235) (1 samples, 0.28%)</title><rect x="1153" y="996" width="4" height="15" fill="rgb(216,102,27)"/><text x="1156.00" y="1006.50"></text></g><g><title>set_function_name (pandas/compat/__init__.py:35) (1 samples, 0.28%)</title><rect x="1153" y="1012" width="4" height="15" fill="rgb(238,17,35)"/><text x="1156.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.12%)</title><rect x="1147" y="436" width="13" height="15" fill="rgb(210,34,32)"/><text x="1150.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="1147" y="452" width="13" height="15" fill="rgb(240,18,41)"/><text x="1150.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="1147" y="468" width="13" height="15" fill="rgb(219,118,48)"/><text x="1150.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="1147" y="484" width="13" height="15" fill="rgb(227,210,9)"/><text x="1150.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="1147" y="500" width="13" height="15" fill="rgb(227,205,19)"/><text x="1150.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="1147" y="516" width="13" height="15" fill="rgb(244,39,44)"/><text x="1150.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:19) (1 samples, 0.28%)</title><rect x="1157" y="532" width="3" height="15" fill="rgb(235,36,32)"/><text x="1160.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1157" y="548" width="3" height="15" fill="rgb(242,149,49)"/><text x="1160.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1157" y="564" width="3" height="15" fill="rgb(239,175,37)"/><text x="1160.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1157" y="580" width="3" height="15" fill="rgb(230,23,19)"/><text x="1160.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="1157" y="596" width="3" height="15" fill="rgb(225,180,2)"/><text x="1160.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="1157" y="612" width="3" height="15" fill="rgb(218,179,16)"/><text x="1160.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="1157" y="628" width="3" height="15" fill="rgb(253,40,19)"/><text x="1160.00" y="638.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.28%)</title><rect x="1160" y="1108" width="3" height="15" fill="rgb(252,116,42)"/><text x="1163.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1160" y="1124" width="3" height="15" fill="rgb(251,165,11)"/><text x="1163.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1160" y="1140" width="3" height="15" fill="rgb(239,62,40)"/><text x="1163.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1160" y="1156" width="3" height="15" fill="rgb(212,155,29)"/><text x="1163.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1160" y="1172" width="3" height="15" fill="rgb(237,114,4)"/><text x="1163.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1160" y="1188" width="3" height="15" fill="rgb(217,3,26)"/><text x="1163.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.28%)</title><rect x="1160" y="1204" width="3" height="15" fill="rgb(216,0,31)"/><text x="1163.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1160" y="1220" width="3" height="15" fill="rgb(241,100,45)"/><text x="1163.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1160" y="1236" width="3" height="15" fill="rgb(210,158,26)"/><text x="1163.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1160" y="1252" width="3" height="15" fill="rgb(214,143,14)"/><text x="1163.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1160" y="1268" width="3" height="15" fill="rgb(247,91,22)"/><text x="1163.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1160" y="1284" width="3" height="15" fill="rgb(226,90,1)"/><text x="1163.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.28%)</title><rect x="1160" y="1300" width="3" height="15" fill="rgb(220,91,31)"/><text x="1163.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.28%)</title><rect x="1160" y="1316" width="3" height="15" fill="rgb(212,53,46)"/><text x="1163.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.28%)</title><rect x="1160" y="1332" width="3" height="15" fill="rgb(215,202,28)"/><text x="1163.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.28%)</title><rect x="1160" y="1348" width="3" height="15" fill="rgb(223,34,47)"/><text x="1163.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.28%)</title><rect x="1160" y="1364" width="3" height="15" fill="rgb(205,211,39)"/><text x="1163.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py:920) (1 samples, 0.28%)</title><rect x="1160" y="1380" width="3" height="15" fill="rgb(233,83,2)"/><text x="1163.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:4) (21 samples, 5.87%)</title><rect x="1097" y="52" width="69" height="15" fill="rgb(250,124,39)"/><text x="1100.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (21 samples, 5.87%)</title><rect x="1097" y="68" width="69" height="15" fill="rgb(252,101,25)"/><text x="1100.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (21 samples, 5.87%)</title><rect x="1097" y="84" width="69" height="15" fill="rgb(206,84,5)"/><text x="1100.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (21 samples, 5.87%)</title><rect x="1097" y="100" width="69" height="15" fill="rgb(228,44,3)"/><text x="1100.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (21 samples, 5.87%)</title><rect x="1097" y="116" width="69" height="15" fill="rgb(220,131,17)"/><text x="1100.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (21 samples, 5.87%)</title><rect x="1097" y="132" width="69" height="15" fill="rgb(238,157,47)"/><text x="1100.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:7) (10 samples, 2.79%)</title><rect x="1133" y="148" width="33" height="15" fill="rgb(236,94,25)"/><text x="1136.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.79%)</title><rect x="1133" y="164" width="33" height="15" fill="rgb(224,66,45)"/><text x="1136.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.79%)</title><rect x="1133" y="180" width="33" height="15" fill="rgb(208,28,53)"/><text x="1136.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.79%)</title><rect x="1133" y="196" width="33" height="15" fill="rgb(234,58,46)"/><text x="1136.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.79%)</title><rect x="1133" y="212" width="33" height="15" fill="rgb(213,78,9)"/><text x="1136.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.79%)</title><rect x="1133" y="228" width="33" height="15" fill="rgb(236,61,37)"/><text x="1136.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.68%)</title><rect x="1147" y="244" width="19" height="15" fill="rgb(222,100,34)"/><text x="1150.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.68%)</title><rect x="1147" y="260" width="19" height="15" fill="rgb(238,14,4)"/><text x="1150.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.68%)</title><rect x="1147" y="276" width="19" height="15" fill="rgb(251,127,19)"/><text x="1150.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.68%)</title><rect x="1147" y="292" width="19" height="15" fill="rgb(230,53,14)"/><text x="1150.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.68%)</title><rect x="1147" y="308" width="19" height="15" fill="rgb(227,190,37)"/><text x="1150.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.68%)</title><rect x="1147" y="324" width="19" height="15" fill="rgb(208,116,24)"/><text x="1150.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.68%)</title><rect x="1147" y="340" width="19" height="15" fill="rgb(217,125,27)"/><text x="1150.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.68%)</title><rect x="1147" y="356" width="19" height="15" fill="rgb(244,207,51)"/><text x="1150.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.68%)</title><rect x="1147" y="372" width="19" height="15" fill="rgb(235,187,34)"/><text x="1150.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.68%)</title><rect x="1147" y="388" width="19" height="15" fill="rgb(237,224,9)"/><text x="1150.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.68%)</title><rect x="1147" y="404" width="19" height="15" fill="rgb(216,113,21)"/><text x="1150.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.68%)</title><rect x="1147" y="420" width="19" height="15" fill="rgb(219,163,47)"/><text x="1150.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.56%)</title><rect x="1160" y="436" width="6" height="15" fill="rgb(229,219,48)"/><text x="1163.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="452" width="6" height="15" fill="rgb(215,99,42)"/><text x="1163.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="1160" y="468" width="6" height="15" fill="rgb(218,92,40)"/><text x="1163.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="484" width="6" height="15" fill="rgb(225,153,12)"/><text x="1163.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="500" width="6" height="15" fill="rgb(245,203,36)"/><text x="1163.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1160" y="516" width="6" height="15" fill="rgb(213,9,22)"/><text x="1163.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1160" y="532" width="6" height="15" fill="rgb(213,42,13)"/><text x="1163.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1160" y="548" width="6" height="15" fill="rgb(232,24,12)"/><text x="1163.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="564" width="6" height="15" fill="rgb(220,192,37)"/><text x="1163.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.56%)</title><rect x="1160" y="580" width="6" height="15" fill="rgb(228,136,30)"/><text x="1163.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="596" width="6" height="15" fill="rgb(243,186,22)"/><text x="1163.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1160" y="612" width="6" height="15" fill="rgb(224,127,48)"/><text x="1163.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1160" y="628" width="6" height="15" fill="rgb(212,110,49)"/><text x="1163.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1160" y="644" width="6" height="15" fill="rgb(243,156,46)"/><text x="1163.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="660" width="6" height="15" fill="rgb(232,10,7)"/><text x="1163.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.56%)</title><rect x="1160" y="676" width="6" height="15" fill="rgb(240,33,23)"/><text x="1163.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="692" width="6" height="15" fill="rgb(222,28,2)"/><text x="1163.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1160" y="708" width="6" height="15" fill="rgb(209,64,40)"/><text x="1163.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1160" y="724" width="6" height="15" fill="rgb(230,8,29)"/><text x="1163.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1160" y="740" width="6" height="15" fill="rgb(210,148,39)"/><text x="1163.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="756" width="6" height="15" fill="rgb(253,60,25)"/><text x="1163.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.56%)</title><rect x="1160" y="772" width="6" height="15" fill="rgb(217,153,0)"/><text x="1163.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="788" width="6" height="15" fill="rgb(216,108,0)"/><text x="1163.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1160" y="804" width="6" height="15" fill="rgb(219,93,6)"/><text x="1163.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1160" y="820" width="6" height="15" fill="rgb(218,92,52)"/><text x="1163.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1160" y="836" width="6" height="15" fill="rgb(213,39,50)"/><text x="1163.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="852" width="6" height="15" fill="rgb(227,122,19)"/><text x="1163.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.56%)</title><rect x="1160" y="868" width="6" height="15" fill="rgb(244,57,8)"/><text x="1163.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="884" width="6" height="15" fill="rgb(212,226,14)"/><text x="1163.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="1160" y="900" width="6" height="15" fill="rgb(235,111,31)"/><text x="1163.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="916" width="6" height="15" fill="rgb(227,119,43)"/><text x="1163.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="932" width="6" height="15" fill="rgb(216,60,48)"/><text x="1163.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1160" y="948" width="6" height="15" fill="rgb(254,19,7)"/><text x="1163.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1160" y="964" width="6" height="15" fill="rgb(212,199,28)"/><text x="1163.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1160" y="980" width="6" height="15" fill="rgb(228,70,35)"/><text x="1163.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="996" width="6" height="15" fill="rgb(234,183,0)"/><text x="1163.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.56%)</title><rect x="1160" y="1012" width="6" height="15" fill="rgb(242,197,13)"/><text x="1163.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1160" y="1028" width="6" height="15" fill="rgb(238,148,17)"/><text x="1163.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1160" y="1044" width="6" height="15" fill="rgb(244,37,39)"/><text x="1163.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1160" y="1060" width="6" height="15" fill="rgb(253,210,40)"/><text x="1163.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1160" y="1076" width="6" height="15" fill="rgb(244,173,2)"/><text x="1163.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1160" y="1092" width="6" height="15" fill="rgb(247,175,28)"/><text x="1163.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.28%)</title><rect x="1163" y="1108" width="3" height="15" fill="rgb(231,109,10)"/><text x="1166.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="1163" y="1124" width="3" height="15" fill="rgb(232,222,31)"/><text x="1166.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1163" y="1140" width="3" height="15" fill="rgb(233,170,14)"/><text x="1166.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1163" y="1156" width="3" height="15" fill="rgb(248,136,34)"/><text x="1166.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1163" y="1172" width="3" height="15" fill="rgb(242,188,7)"/><text x="1166.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1163" y="1188" width="3" height="15" fill="rgb(209,27,53)"/><text x="1166.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1163" y="1204" width="3" height="15" fill="rgb(251,171,35)"/><text x="1166.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1163" y="1220" width="3" height="15" fill="rgb(232,72,25)"/><text x="1166.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.28%)</title><rect x="1163" y="1236" width="3" height="15" fill="rgb(227,167,35)"/><text x="1166.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="1163" y="1252" width="3" height="15" fill="rgb(210,3,13)"/><text x="1166.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1163" y="1268" width="3" height="15" fill="rgb(227,100,40)"/><text x="1166.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1163" y="1284" width="3" height="15" fill="rgb(223,201,48)"/><text x="1166.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1163" y="1300" width="3" height="15" fill="rgb(235,104,35)"/><text x="1166.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1163" y="1316" width="3" height="15" fill="rgb(216,13,34)"/><text x="1166.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1163" y="1332" width="3" height="15" fill="rgb(229,85,15)"/><text x="1166.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1163" y="1348" width="3" height="15" fill="rgb(245,41,24)"/><text x="1166.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.28%)</title><rect x="1163" y="1364" width="3" height="15" fill="rgb(222,43,16)"/><text x="1166.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="1163" y="1380" width="3" height="15" fill="rgb(220,64,18)"/><text x="1166.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="1163" y="1396" width="3" height="15" fill="rgb(217,145,49)"/><text x="1166.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="1163" y="1412" width="3" height="15" fill="rgb(205,98,4)"/><text x="1166.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="1163" y="1428" width="3" height="15" fill="rgb(223,4,49)"/><text x="1166.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="1163" y="1444" width="3" height="15" fill="rgb(221,92,27)"/><text x="1166.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.28%)</title><rect x="1163" y="1460" width="3" height="15" fill="rgb(239,189,54)"/><text x="1166.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.28%)</title><rect x="1163" y="1476" width="3" height="15" fill="rgb(216,145,15)"/><text x="1166.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.28%)</title><rect x="1163" y="1492" width="3" height="15" fill="rgb(220,16,32)"/><text x="1166.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.28%)</title><rect x="1163" y="1508" width="3" height="15" fill="rgb(222,21,2)"/><text x="1166.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:45) (1 samples, 0.28%)</title><rect x="1166" y="52" width="4" height="15" fill="rgb(236,225,21)"/><text x="1169.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:44) (1 samples, 0.28%)</title><rect x="1166" y="68" width="4" height="15" fill="rgb(218,185,45)"/><text x="1169.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:29) (1 samples, 0.28%)</title><rect x="1166" y="84" width="4" height="15" fill="rgb(205,119,18)"/><text x="1169.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:23) (1 samples, 0.28%)</title><rect x="1166" y="100" width="4" height="15" fill="rgb(242,202,52)"/><text x="1169.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.28%)</title><rect x="1166" y="116" width="4" height="15" fill="rgb(236,121,46)"/><text x="1169.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.28%)</title><rect x="1166" y="132" width="4" height="15" fill="rgb(226,185,45)"/><text x="1169.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.28%)</title><rect x="1166" y="148" width="4" height="15" fill="rgb(232,96,12)"/><text x="1169.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.28%)</title><rect x="1166" y="164" width="4" height="15" fill="rgb(236,68,1)"/><text x="1169.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.28%)</title><rect x="1166" y="180" width="4" height="15" fill="rgb(234,40,46)"/><text x="1169.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.28%)</title><rect x="1166" y="196" width="4" height="15" fill="rgb(211,141,29)"/><text x="1169.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.28%)</title><rect x="1166" y="212" width="4" height="15" fill="rgb(224,138,21)"/><text x="1169.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (1 samples, 0.28%)</title><rect x="1166" y="228" width="4" height="15" fill="rgb(232,170,37)"/><text x="1169.00" y="238.50"></text></g><g><title>0x7fd9b755b422 (?) (1 samples, 0.28%)</title><rect x="1166" y="244" width="4" height="15" fill="rgb(205,59,43)"/><text x="1169.00" y="254.50"></text></g><g><title>0x7fd9b756189e (?) (1 samples, 0.28%)</title><rect x="1166" y="260" width="4" height="15" fill="rgb(253,152,0)"/><text x="1169.00" y="270.50"></text></g><g><title>0x7fd9b756174f (?) (1 samples, 0.28%)</title><rect x="1166" y="276" width="4" height="15" fill="rgb(221,5,19)"/><text x="1169.00" y="286.50"></text></g><g><title>0x7fd9b7567a3a (?) (1 samples, 0.28%)</title><rect x="1166" y="292" width="4" height="15" fill="rgb(237,58,38)"/><text x="1169.00" y="302.50"></text></g><g><title>0x7fd9c0883ab9 (?) (1 samples, 0.28%)</title><rect x="1166" y="308" width="4" height="15" fill="rgb(238,20,27)"/><text x="1169.00" y="318.50"></text></g><g><title>0x7fd9c0884ea9 (?) (1 samples, 0.28%)</title><rect x="1166" y="324" width="4" height="15" fill="rgb(223,77,18)"/><text x="1169.00" y="334.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.28%)</title><rect x="1170" y="116" width="3" height="15" fill="rgb(217,21,19)"/><text x="1173.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.28%)</title><rect x="1170" y="132" width="3" height="15" fill="rgb(234,11,28)"/><text x="1173.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.28%)</title><rect x="1170" y="148" width="3" height="15" fill="rgb(236,1,45)"/><text x="1173.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.28%)</title><rect x="1170" y="164" width="3" height="15" fill="rgb(226,199,38)"/><text x="1173.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.28%)</title><rect x="1170" y="180" width="3" height="15" fill="rgb(240,216,50)"/><text x="1173.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.28%)</title><rect x="1170" y="196" width="3" height="15" fill="rgb(217,181,40)"/><text x="1173.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.28%)</title><rect x="1170" y="212" width="3" height="15" fill="rgb(251,128,43)"/><text x="1173.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.28%)</title><rect x="1170" y="228" width="3" height="15" fill="rgb(240,154,3)"/><text x="1173.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="1170" y="244" width="3" height="15" fill="rgb(245,161,25)"/><text x="1173.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.28%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(239,79,51)"/><text x="1173.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.28%)</title><rect x="1170" y="276" width="3" height="15" fill="rgb(233,111,43)"/><text x="1173.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.28%)</title><rect x="1170" y="292" width="3" height="15" fill="rgb(245,221,35)"/><text x="1173.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.28%)</title><rect x="1170" y="308" width="3" height="15" fill="rgb(205,36,53)"/><text x="1173.00" y="318.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.28%)</title><rect x="1170" y="324" width="3" height="15" fill="rgb(253,155,17)"/><text x="1173.00" y="334.50"></text></g><g><title>0x7fd9b02239a4 (?) (1 samples, 0.28%)</title><rect x="1173" y="724" width="3" height="15" fill="rgb(230,154,14)"/><text x="1176.00" y="734.50"></text></g><g><title>_dl_addr (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1173" y="740" width="3" height="15" fill="rgb(233,59,2)"/><text x="1176.00" y="750.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:28) (3 samples, 0.84%)</title><rect x="1170" y="84" width="10" height="15" fill="rgb(214,203,42)"/><text x="1173.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.84%)</title><rect x="1170" y="100" width="10" height="15" fill="rgb(241,53,51)"/><text x="1173.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.56%)</title><rect x="1173" y="116" width="7" height="15" fill="rgb(224,199,34)"/><text x="1176.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.56%)</title><rect x="1173" y="132" width="7" height="15" fill="rgb(246,10,35)"/><text x="1176.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.56%)</title><rect x="1173" y="148" width="7" height="15" fill="rgb(250,5,28)"/><text x="1176.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.56%)</title><rect x="1173" y="164" width="7" height="15" fill="rgb(210,154,33)"/><text x="1176.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1173" y="180" width="7" height="15" fill="rgb(206,220,38)"/><text x="1176.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1173" y="196" width="7" height="15" fill="rgb(249,10,14)"/><text x="1176.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1173" y="212" width="7" height="15" fill="rgb(242,167,16)"/><text x="1176.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1173" y="228" width="7" height="15" fill="rgb(241,80,13)"/><text x="1176.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1173" y="244" width="7" height="15" fill="rgb(214,40,12)"/><text x="1176.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.56%)</title><rect x="1173" y="260" width="7" height="15" fill="rgb(252,151,54)"/><text x="1176.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1173" y="276" width="7" height="15" fill="rgb(252,172,28)"/><text x="1176.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1173" y="292" width="7" height="15" fill="rgb(212,140,27)"/><text x="1176.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1173" y="308" width="7" height="15" fill="rgb(248,112,26)"/><text x="1176.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1173" y="324" width="7" height="15" fill="rgb(242,168,14)"/><text x="1176.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1173" y="340" width="7" height="15" fill="rgb(216,13,33)"/><text x="1176.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.56%)</title><rect x="1173" y="356" width="7" height="15" fill="rgb(217,28,48)"/><text x="1176.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1173" y="372" width="7" height="15" fill="rgb(217,135,2)"/><text x="1176.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1173" y="388" width="7" height="15" fill="rgb(236,170,13)"/><text x="1176.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="1173" y="404" width="7" height="15" fill="rgb(252,44,38)"/><text x="1176.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="1173" y="420" width="7" height="15" fill="rgb(238,149,18)"/><text x="1176.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1173" y="436" width="7" height="15" fill="rgb(248,160,15)"/><text x="1176.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.56%)</title><rect x="1173" y="452" width="7" height="15" fill="rgb(243,154,16)"/><text x="1176.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="1173" y="468" width="7" height="15" fill="rgb(252,183,10)"/><text x="1176.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="1173" y="484" width="7" height="15" fill="rgb(215,186,0)"/><text x="1176.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.56%)</title><rect x="1173" y="500" width="7" height="15" fill="rgb(216,106,17)"/><text x="1176.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.56%)</title><rect x="1173" y="516" width="7" height="15" fill="rgb(254,55,12)"/><text x="1176.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.56%)</title><rect x="1173" y="532" width="7" height="15" fill="rgb(254,59,38)"/><text x="1176.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="1173" y="548" width="7" height="15" fill="rgb(217,111,21)"/><text x="1176.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="564" width="7" height="15" fill="rgb(218,212,3)"/><text x="1176.00" y="574.50"></text></g><g><title>0x7fd9f6b45995 (libdl-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="580" width="7" height="15" fill="rgb(230,105,36)"/><text x="1176.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="596" width="7" height="15" fill="rgb(230,108,46)"/><text x="1176.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="612" width="7" height="15" fill="rgb(209,39,3)"/><text x="1176.00" y="622.50"></text></g><g><title>0x7fd9f6b45258 (libdl-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="628" width="7" height="15" fill="rgb(225,41,31)"/><text x="1176.00" y="638.50"></text></g><g><title>0x7fd9f6b92d7a (ld-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="644" width="7" height="15" fill="rgb(240,56,37)"/><text x="1176.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="660" width="7" height="15" fill="rgb(221,186,45)"/><text x="1176.00" y="670.50"></text></g><g><title>0x7fd9f6b93473 (ld-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="676" width="7" height="15" fill="rgb(205,225,42)"/><text x="1176.00" y="686.50"></text></g><g><title>0x7fd9f6b8f6b9 (ld-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="692" width="7" height="15" fill="rgb(253,112,49)"/><text x="1176.00" y="702.50"></text></g><g><title>0x7fd9f6b8f5ba (ld-2.29.so) (2 samples, 0.56%)</title><rect x="1173" y="708" width="7" height="15" fill="rgb(239,2,47)"/><text x="1176.00" y="718.50"></text></g><g><title>__sti__$E (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.28%)</title><rect x="1176" y="724" width="4" height="15" fill="rgb(251,46,13)"/><text x="1179.00" y="734.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1180" y="340" width="3" height="15" fill="rgb(235,220,17)"/><text x="1183.00" y="350.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.56%)</title><rect x="1180" y="164" width="6" height="15" fill="rgb(214,148,7)"/><text x="1183.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.56%)</title><rect x="1180" y="180" width="6" height="15" fill="rgb(225,158,53)"/><text x="1183.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.56%)</title><rect x="1180" y="196" width="6" height="15" fill="rgb(241,56,24)"/><text x="1183.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="212" width="6" height="15" fill="rgb(206,220,45)"/><text x="1183.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="228" width="6" height="15" fill="rgb(244,40,35)"/><text x="1183.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="244" width="6" height="15" fill="rgb(232,27,26)"/><text x="1183.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="260" width="6" height="15" fill="rgb(205,219,33)"/><text x="1183.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="276" width="6" height="15" fill="rgb(242,166,2)"/><text x="1183.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="292" width="6" height="15" fill="rgb(239,229,52)"/><text x="1183.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="308" width="6" height="15" fill="rgb(246,5,41)"/><text x="1183.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1180" y="324" width="6" height="15" fill="rgb(230,200,36)"/><text x="1183.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1183" y="340" width="3" height="15" fill="rgb(229,5,9)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(239,161,23)"/><text x="1186.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1183" y="372" width="3" height="15" fill="rgb(238,120,24)"/><text x="1186.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1183" y="388" width="3" height="15" fill="rgb(225,73,47)"/><text x="1186.00" y="398.50"></text></g><g><title>all (358 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,66,33)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:52) (6 samples, 1.68%)</title><rect x="1170" y="52" width="20" height="15" fill="rgb(208,43,18)"/><text x="1173.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:51) (6 samples, 1.68%)</title><rect x="1170" y="68" width="20" height="15" fill="rgb(228,40,2)"/><text x="1173.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:29) (3 samples, 0.84%)</title><rect x="1180" y="84" width="10" height="15" fill="rgb(228,185,39)"/><text x="1183.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1_50_12_float_.py:23) (3 samples, 0.84%)</title><rect x="1180" y="100" width="10" height="15" fill="rgb(238,210,37)"/><text x="1183.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.84%)</title><rect x="1180" y="116" width="10" height="15" fill="rgb(217,225,37)"/><text x="1183.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (3 samples, 0.84%)</title><rect x="1180" y="132" width="10" height="15" fill="rgb(236,163,23)"/><text x="1183.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (3 samples, 0.84%)</title><rect x="1180" y="148" width="10" height="15" fill="rgb(252,145,40)"/><text x="1183.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.28%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(254,173,7)"/><text x="1189.00" y="174.50"></text></g></g></svg>