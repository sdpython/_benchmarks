<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1606" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1589.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1589.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="980" width="4" height="15" fill="rgb(229,8,11)"/><text x="17.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="996" width="4" height="15" fill="rgb(225,96,9)"/><text x="17.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="14" y="1012" width="4" height="15" fill="rgb(236,18,32)"/><text x="17.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="14" y="1028" width="4" height="15" fill="rgb(245,38,52)"/><text x="17.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="14" y="1044" width="4" height="15" fill="rgb(218,132,25)"/><text x="17.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 1.04%)</title><rect x="10" y="868" width="12" height="15" fill="rgb(235,153,6)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 1.04%)</title><rect x="10" y="884" width="12" height="15" fill="rgb(230,176,16)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 1.04%)</title><rect x="10" y="900" width="12" height="15" fill="rgb(235,76,10)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 1.04%)</title><rect x="10" y="916" width="12" height="15" fill="rgb(227,182,44)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="10" y="932" width="12" height="15" fill="rgb(251,216,10)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="14" y="948" width="8" height="15" fill="rgb(205,37,43)"/><text x="17.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="14" y="964" width="8" height="15" fill="rgb(233,2,41)"/><text x="17.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="18" y="980" width="4" height="15" fill="rgb(228,135,30)"/><text x="21.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(215,162,3)"/><text x="25.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(222,82,21)"/><text x="25.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(207,41,16)"/><text x="25.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(207,95,10)"/><text x="25.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(212,136,15)"/><text x="25.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(236,152,51)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(247,173,30)"/><text x="25.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(219,59,47)"/><text x="25.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(218,127,50)"/><text x="25.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(226,10,30)"/><text x="25.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(243,191,22)"/><text x="25.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split.cold.51 (python3.7) (1 samples, 0.35%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(246,4,43)"/><text x="25.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(216,132,38)"/><text x="25.00" y="1070.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(233,156,37)"/><text x="29.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(247,11,0)"/><text x="29.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(252,203,36)"/><text x="29.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(230,7,41)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(224,74,20)"/><text x="29.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 2.08%)</title><rect x="10" y="836" width="24" height="15" fill="rgb(207,126,50)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 2.08%)</title><rect x="10" y="852" width="24" height="15" fill="rgb(242,118,43)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="26" y="868" width="8" height="15" fill="rgb(218,102,5)"/><text x="29.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.69%)</title><rect x="26" y="884" width="8" height="15" fill="rgb(254,59,8)"/><text x="29.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="30" y="900" width="4" height="15" fill="rgb(213,26,41)"/><text x="33.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="30" y="916" width="4" height="15" fill="rgb(205,40,39)"/><text x="33.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="30" y="932" width="4" height="15" fill="rgb(246,185,13)"/><text x="33.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="30" y="948" width="4" height="15" fill="rgb(230,164,20)"/><text x="33.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.35%)</title><rect x="30" y="964" width="4" height="15" fill="rgb(213,143,37)"/><text x="33.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.35%)</title><rect x="30" y="980" width="4" height="15" fill="rgb(212,109,38)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="196" width="28" height="15" fill="rgb(210,39,2)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="212" width="28" height="15" fill="rgb(220,18,23)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="228" width="28" height="15" fill="rgb(236,0,1)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="244" width="28" height="15" fill="rgb(224,109,54)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.42%)</title><rect x="10" y="260" width="28" height="15" fill="rgb(235,31,42)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="276" width="28" height="15" fill="rgb(254,90,12)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 2.42%)</title><rect x="10" y="292" width="28" height="15" fill="rgb(252,205,4)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="308" width="28" height="15" fill="rgb(227,124,40)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="324" width="28" height="15" fill="rgb(241,114,27)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="340" width="28" height="15" fill="rgb(233,61,14)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.42%)</title><rect x="10" y="356" width="28" height="15" fill="rgb(230,105,17)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="372" width="28" height="15" fill="rgb(237,3,2)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 2.42%)</title><rect x="10" y="388" width="28" height="15" fill="rgb(233,21,32)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="404" width="28" height="15" fill="rgb(210,23,27)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="420" width="28" height="15" fill="rgb(249,122,35)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="436" width="28" height="15" fill="rgb(210,87,18)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.42%)</title><rect x="10" y="452" width="28" height="15" fill="rgb(229,101,21)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="468" width="28" height="15" fill="rgb(249,227,12)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 2.42%)</title><rect x="10" y="484" width="28" height="15" fill="rgb(219,183,18)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="500" width="28" height="15" fill="rgb(225,57,41)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="516" width="28" height="15" fill="rgb(243,28,30)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="532" width="28" height="15" fill="rgb(223,225,19)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.42%)</title><rect x="10" y="548" width="28" height="15" fill="rgb(248,58,52)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="564" width="28" height="15" fill="rgb(244,186,2)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 2.42%)</title><rect x="10" y="580" width="28" height="15" fill="rgb(252,209,44)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="596" width="28" height="15" fill="rgb(237,57,10)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="612" width="28" height="15" fill="rgb(207,152,5)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="628" width="28" height="15" fill="rgb(232,16,42)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="644" width="28" height="15" fill="rgb(226,7,42)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="660" width="28" height="15" fill="rgb(251,123,21)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="676" width="28" height="15" fill="rgb(246,205,43)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.42%)</title><rect x="10" y="692" width="28" height="15" fill="rgb(208,44,2)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="708" width="28" height="15" fill="rgb(248,220,45)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 2.42%)</title><rect x="10" y="724" width="28" height="15" fill="rgb(236,151,31)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="740" width="28" height="15" fill="rgb(248,154,36)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="756" width="28" height="15" fill="rgb(207,149,15)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="772" width="28" height="15" fill="rgb(244,75,52)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.42%)</title><rect x="10" y="788" width="28" height="15" fill="rgb(236,131,31)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.42%)</title><rect x="10" y="804" width="28" height="15" fill="rgb(221,229,49)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 2.42%)</title><rect x="10" y="820" width="28" height="15" fill="rgb(235,22,50)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(246,159,48)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(244,73,4)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(215,186,45)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(235,89,1)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(235,1,8)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.35%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(247,126,9)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(223,19,23)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(240,12,21)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(223,219,10)"/><text x="37.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(219,41,19)"/><text x="37.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.35%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(224,1,49)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(222,197,43)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(248,61,1)"/><text x="37.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(215,179,53)"/><text x="37.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(205,212,18)"/><text x="37.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(243,174,20)"/><text x="37.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="34" y="1092" width="4" height="15" fill="rgb(208,95,30)"/><text x="37.00" y="1102.50"></text></g><g><title>setParseAction (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="34" y="1108" width="4" height="15" fill="rgb(228,67,22)"/><text x="37.00" y="1118.50"></text></g><g><title>_trim_arity (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="34" y="1124" width="4" height="15" fill="rgb(239,162,36)"/><text x="37.00" y="1134.50"></text></g><g><title>extract_stack (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="34" y="1140" width="4" height="15" fill="rgb(242,9,11)"/><text x="37.00" y="1150.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.35%)</title><rect x="34" y="1156" width="4" height="15" fill="rgb(236,123,8)"/><text x="37.00" y="1166.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.35%)</title><rect x="34" y="1172" width="4" height="15" fill="rgb(241,136,29)"/><text x="37.00" y="1182.50"></text></g><g><title>line (traceback.py) (1 samples, 0.35%)</title><rect x="34" y="1188" width="4" height="15" fill="rgb(212,121,45)"/><text x="37.00" y="1198.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.35%)</title><rect x="34" y="1204" width="4" height="15" fill="rgb(223,64,34)"/><text x="37.00" y="1214.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.35%)</title><rect x="34" y="1220" width="4" height="15" fill="rgb(250,70,28)"/><text x="37.00" y="1230.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.35%)</title><rect x="34" y="1236" width="4" height="15" fill="rgb(229,1,21)"/><text x="37.00" y="1246.50"></text></g><g><title>decode (codecs.py) (1 samples, 0.35%)</title><rect x="34" y="1252" width="4" height="15" fill="rgb(226,220,18)"/><text x="37.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="38" y="340" width="4" height="15" fill="rgb(224,212,8)"/><text x="41.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="356" width="4" height="15" fill="rgb(217,25,24)"/><text x="41.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="372" width="4" height="15" fill="rgb(238,149,32)"/><text x="41.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="388" width="4" height="15" fill="rgb(238,133,16)"/><text x="41.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="404" width="4" height="15" fill="rgb(242,119,35)"/><text x="41.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="420" width="4" height="15" fill="rgb(229,164,14)"/><text x="41.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="436" width="4" height="15" fill="rgb(210,18,35)"/><text x="41.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="452" width="4" height="15" fill="rgb(238,161,48)"/><text x="41.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="468" width="4" height="15" fill="rgb(234,219,32)"/><text x="41.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="484" width="4" height="15" fill="rgb(236,132,8)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="500" width="4" height="15" fill="rgb(228,156,25)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="516" width="4" height="15" fill="rgb(213,76,53)"/><text x="41.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="532" width="4" height="15" fill="rgb(229,67,5)"/><text x="41.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="548" width="4" height="15" fill="rgb(227,159,50)"/><text x="41.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="564" width="4" height="15" fill="rgb(231,33,27)"/><text x="41.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="580" width="4" height="15" fill="rgb(234,156,30)"/><text x="41.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="596" width="4" height="15" fill="rgb(227,49,29)"/><text x="41.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="612" width="4" height="15" fill="rgb(237,170,25)"/><text x="41.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="628" width="4" height="15" fill="rgb(245,190,16)"/><text x="41.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="644" width="4" height="15" fill="rgb(222,83,5)"/><text x="41.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="660" width="4" height="15" fill="rgb(215,118,23)"/><text x="41.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.35%)</title><rect x="38" y="676" width="4" height="15" fill="rgb(215,173,35)"/><text x="41.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="692" width="4" height="15" fill="rgb(222,61,0)"/><text x="41.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="708" width="4" height="15" fill="rgb(240,181,44)"/><text x="41.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="724" width="4" height="15" fill="rgb(241,122,37)"/><text x="41.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="740" width="4" height="15" fill="rgb(234,141,29)"/><text x="41.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="756" width="4" height="15" fill="rgb(234,195,7)"/><text x="41.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="772" width="4" height="15" fill="rgb(211,94,51)"/><text x="41.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="788" width="4" height="15" fill="rgb(213,134,11)"/><text x="41.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="804" width="4" height="15" fill="rgb(233,175,11)"/><text x="41.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="820" width="4" height="15" fill="rgb(211,185,15)"/><text x="41.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="836" width="4" height="15" fill="rgb(211,184,27)"/><text x="41.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="852" width="4" height="15" fill="rgb(254,7,37)"/><text x="41.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.35%)</title><rect x="38" y="868" width="4" height="15" fill="rgb(245,89,49)"/><text x="41.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="884" width="4" height="15" fill="rgb(205,143,13)"/><text x="41.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="900" width="4" height="15" fill="rgb(209,202,20)"/><text x="41.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(236,205,39)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="932" width="4" height="15" fill="rgb(220,151,36)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="948" width="4" height="15" fill="rgb(237,199,19)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="964" width="4" height="15" fill="rgb(228,128,45)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="980" width="4" height="15" fill="rgb(239,7,34)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="996" width="4" height="15" fill="rgb(225,57,38)"/><text x="41.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.35%)</title><rect x="38" y="1012" width="4" height="15" fill="rgb(218,229,41)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1028" width="4" height="15" fill="rgb(206,89,41)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1044" width="4" height="15" fill="rgb(242,140,7)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1060" width="4" height="15" fill="rgb(220,133,8)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1076" width="4" height="15" fill="rgb(252,95,9)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1092" width="4" height="15" fill="rgb(252,180,33)"/><text x="41.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.35%)</title><rect x="38" y="1108" width="4" height="15" fill="rgb(209,96,4)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1124" width="4" height="15" fill="rgb(231,80,54)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1140" width="4" height="15" fill="rgb(218,31,8)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1156" width="4" height="15" fill="rgb(205,216,15)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1172" width="4" height="15" fill="rgb(233,195,26)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1188" width="4" height="15" fill="rgb(245,8,13)"/><text x="41.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.35%)</title><rect x="38" y="1204" width="4" height="15" fill="rgb(250,130,32)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1220" width="4" height="15" fill="rgb(247,200,6)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1236" width="4" height="15" fill="rgb(249,110,29)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1252" width="4" height="15" fill="rgb(206,22,53)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="38" y="1268" width="4" height="15" fill="rgb(237,35,17)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="38" y="1284" width="4" height="15" fill="rgb(227,164,51)"/><text x="41.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.35%)</title><rect x="38" y="1300" width="4" height="15" fill="rgb(250,189,51)"/><text x="41.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.35%)</title><rect x="38" y="1316" width="4" height="15" fill="rgb(233,179,35)"/><text x="41.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.35%)</title><rect x="38" y="1332" width="4" height="15" fill="rgb(225,38,35)"/><text x="41.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.35%)</title><rect x="38" y="1348" width="4" height="15" fill="rgb(234,70,42)"/><text x="41.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.35%)</title><rect x="38" y="1364" width="4" height="15" fill="rgb(244,55,37)"/><text x="41.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.35%)</title><rect x="38" y="1380" width="4" height="15" fill="rgb(254,142,22)"/><text x="41.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.35%)</title><rect x="38" y="1396" width="4" height="15" fill="rgb(232,129,38)"/><text x="41.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.35%)</title><rect x="38" y="1412" width="4" height="15" fill="rgb(234,185,53)"/><text x="41.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="788" width="4" height="15" fill="rgb(249,29,10)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="804" width="4" height="15" fill="rgb(247,158,17)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="820" width="4" height="15" fill="rgb(239,194,12)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="836" width="4" height="15" fill="rgb(227,176,31)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="852" width="4" height="15" fill="rgb(220,47,43)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.35%)</title><rect x="42" y="868" width="4" height="15" fill="rgb(243,19,9)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="884" width="4" height="15" fill="rgb(247,127,34)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="900" width="4" height="15" fill="rgb(251,122,17)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="916" width="4" height="15" fill="rgb(233,113,17)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="932" width="4" height="15" fill="rgb(222,189,21)"/><text x="45.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="948" width="4" height="15" fill="rgb(218,109,9)"/><text x="45.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.35%)</title><rect x="42" y="964" width="4" height="15" fill="rgb(242,46,27)"/><text x="45.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="980" width="4" height="15" fill="rgb(237,159,31)"/><text x="45.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="996" width="4" height="15" fill="rgb(223,196,27)"/><text x="45.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1012" width="4" height="15" fill="rgb(220,180,25)"/><text x="45.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="1028" width="4" height="15" fill="rgb(232,92,16)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1044" width="4" height="15" fill="rgb(212,64,4)"/><text x="45.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.35%)</title><rect x="42" y="1060" width="4" height="15" fill="rgb(213,166,45)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1076" width="4" height="15" fill="rgb(242,134,0)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1092" width="4" height="15" fill="rgb(220,53,48)"/><text x="45.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1108" width="4" height="15" fill="rgb(205,209,11)"/><text x="45.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1124" width="4" height="15" fill="rgb(244,221,28)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1140" width="4" height="15" fill="rgb(238,90,22)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1156" width="4" height="15" fill="rgb(232,39,8)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="1172" width="4" height="15" fill="rgb(218,157,33)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1188" width="4" height="15" fill="rgb(210,57,37)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.35%)</title><rect x="42" y="1204" width="4" height="15" fill="rgb(234,35,0)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1220" width="4" height="15" fill="rgb(250,97,40)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1236" width="4" height="15" fill="rgb(206,12,27)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1252" width="4" height="15" fill="rgb(206,152,11)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="1268" width="4" height="15" fill="rgb(238,207,3)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1284" width="4" height="15" fill="rgb(211,203,1)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.35%)</title><rect x="42" y="1300" width="4" height="15" fill="rgb(239,57,8)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1316" width="4" height="15" fill="rgb(235,9,7)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1332" width="4" height="15" fill="rgb(207,187,13)"/><text x="45.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1348" width="4" height="15" fill="rgb(245,132,12)"/><text x="45.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="42" y="1364" width="4" height="15" fill="rgb(239,28,54)"/><text x="45.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="42" y="1380" width="4" height="15" fill="rgb(207,58,12)"/><text x="45.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.35%)</title><rect x="42" y="1396" width="4" height="15" fill="rgb(224,15,21)"/><text x="45.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.35%)</title><rect x="42" y="1412" width="4" height="15" fill="rgb(244,87,28)"/><text x="45.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.35%)</title><rect x="42" y="1428" width="4" height="15" fill="rgb(243,20,36)"/><text x="45.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.35%)</title><rect x="42" y="1444" width="4" height="15" fill="rgb(210,60,8)"/><text x="45.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1460" width="4" height="15" fill="rgb(230,90,51)"/><text x="45.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1476" width="4" height="15" fill="rgb(240,118,53)"/><text x="45.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1492" width="4" height="15" fill="rgb(218,4,17)"/><text x="45.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1508" width="4" height="15" fill="rgb(222,172,3)"/><text x="45.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1524" width="4" height="15" fill="rgb(237,61,44)"/><text x="45.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1540" width="4" height="15" fill="rgb(228,100,45)"/><text x="45.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.35%)</title><rect x="42" y="1556" width="4" height="15" fill="rgb(207,201,52)"/><text x="45.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1108" width="4" height="15" fill="rgb(246,223,54)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1124" width="4" height="15" fill="rgb(244,227,4)"/><text x="49.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="46" y="1140" width="4" height="15" fill="rgb(237,96,25)"/><text x="49.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1156" width="4" height="15" fill="rgb(253,152,33)"/><text x="49.00" y="1166.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1172" width="4" height="15" fill="rgb(244,203,53)"/><text x="49.00" y="1182.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="46" y="1188" width="4" height="15" fill="rgb(213,170,54)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 1.38%)</title><rect x="38" y="244" width="16" height="15" fill="rgb(249,158,44)"/><text x="41.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="38" y="260" width="16" height="15" fill="rgb(248,198,0)"/><text x="41.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="38" y="276" width="16" height="15" fill="rgb(211,173,0)"/><text x="41.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="38" y="292" width="16" height="15" fill="rgb(245,70,8)"/><text x="41.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.38%)</title><rect x="38" y="308" width="16" height="15" fill="rgb(234,56,3)"/><text x="41.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.38%)</title><rect x="38" y="324" width="16" height="15" fill="rgb(210,177,42)"/><text x="41.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.04%)</title><rect x="42" y="340" width="12" height="15" fill="rgb(218,148,42)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="356" width="12" height="15" fill="rgb(226,223,36)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="372" width="12" height="15" fill="rgb(220,142,17)"/><text x="45.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="388" width="12" height="15" fill="rgb(208,107,33)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="404" width="12" height="15" fill="rgb(221,36,8)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="420" width="12" height="15" fill="rgb(235,145,39)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="436" width="12" height="15" fill="rgb(249,42,38)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="452" width="12" height="15" fill="rgb(248,181,28)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="468" width="12" height="15" fill="rgb(221,77,45)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.04%)</title><rect x="42" y="484" width="12" height="15" fill="rgb(229,97,15)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="500" width="12" height="15" fill="rgb(232,219,46)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="516" width="12" height="15" fill="rgb(228,208,52)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="532" width="12" height="15" fill="rgb(206,70,47)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="548" width="12" height="15" fill="rgb(242,135,39)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="564" width="12" height="15" fill="rgb(224,1,11)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 1.04%)</title><rect x="42" y="580" width="12" height="15" fill="rgb(207,138,27)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="596" width="12" height="15" fill="rgb(228,226,4)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="612" width="12" height="15" fill="rgb(218,49,13)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="628" width="12" height="15" fill="rgb(236,157,37)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="644" width="12" height="15" fill="rgb(216,168,9)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="660" width="12" height="15" fill="rgb(227,82,26)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 1.04%)</title><rect x="42" y="676" width="12" height="15" fill="rgb(226,77,46)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="692" width="12" height="15" fill="rgb(209,77,5)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="708" width="12" height="15" fill="rgb(206,113,11)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="724" width="12" height="15" fill="rgb(223,182,40)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.04%)</title><rect x="42" y="740" width="12" height="15" fill="rgb(219,173,24)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.04%)</title><rect x="42" y="756" width="12" height="15" fill="rgb(254,121,22)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 1.04%)</title><rect x="42" y="772" width="12" height="15" fill="rgb(220,90,41)"/><text x="45.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="788" width="8" height="15" fill="rgb(209,190,37)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="804" width="8" height="15" fill="rgb(244,147,20)"/><text x="49.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="820" width="8" height="15" fill="rgb(254,153,45)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="836" width="8" height="15" fill="rgb(208,43,49)"/><text x="49.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="852" width="8" height="15" fill="rgb(221,191,14)"/><text x="49.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="46" y="868" width="8" height="15" fill="rgb(235,92,35)"/><text x="49.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="884" width="8" height="15" fill="rgb(226,218,6)"/><text x="49.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.69%)</title><rect x="46" y="900" width="8" height="15" fill="rgb(205,45,1)"/><text x="49.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="916" width="8" height="15" fill="rgb(253,59,11)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="932" width="8" height="15" fill="rgb(211,214,34)"/><text x="49.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="948" width="8" height="15" fill="rgb(238,153,40)"/><text x="49.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="46" y="964" width="8" height="15" fill="rgb(239,220,1)"/><text x="49.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="980" width="8" height="15" fill="rgb(233,3,29)"/><text x="49.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (2 samples, 0.69%)</title><rect x="46" y="996" width="8" height="15" fill="rgb(225,82,12)"/><text x="49.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="1012" width="8" height="15" fill="rgb(218,150,49)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="1028" width="8" height="15" fill="rgb(234,140,37)"/><text x="49.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="1044" width="8" height="15" fill="rgb(252,155,14)"/><text x="49.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.69%)</title><rect x="46" y="1060" width="8" height="15" fill="rgb(216,132,14)"/><text x="49.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="46" y="1076" width="8" height="15" fill="rgb(213,69,16)"/><text x="49.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (2 samples, 0.69%)</title><rect x="46" y="1092" width="8" height="15" fill="rgb(243,134,18)"/><text x="49.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="1108" width="4" height="15" fill="rgb(231,225,7)"/><text x="53.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="1124" width="4" height="15" fill="rgb(250,217,11)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="1140" width="4" height="15" fill="rgb(234,214,33)"/><text x="53.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="1156" width="4" height="15" fill="rgb(238,220,37)"/><text x="53.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="1172" width="4" height="15" fill="rgb(215,216,45)"/><text x="53.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="50" y="1188" width="4" height="15" fill="rgb(253,187,22)"/><text x="53.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="50" y="1204" width="4" height="15" fill="rgb(252,212,53)"/><text x="53.00" y="1214.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/kdf/scrypt.py) (1 samples, 0.35%)</title><rect x="50" y="1220" width="4" height="15" fill="rgb(218,154,3)"/><text x="53.00" y="1230.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.35%)</title><rect x="50" y="1236" width="4" height="15" fill="rgb(248,121,44)"/><text x="53.00" y="1246.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.35%)</title><rect x="50" y="1252" width="4" height="15" fill="rgb(212,38,10)"/><text x="53.00" y="1262.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.35%)</title><rect x="50" y="1268" width="4" height="15" fill="rgb(219,41,0)"/><text x="53.00" y="1278.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.35%)</title><rect x="50" y="1284" width="4" height="15" fill="rgb(209,1,30)"/><text x="53.00" y="1294.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.35%)</title><rect x="50" y="1300" width="4" height="15" fill="rgb(241,82,25)"/><text x="53.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(213,97,10)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(210,223,10)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(241,5,54)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 4.15%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(227,51,21)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(208,206,54)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (12 samples, 4.15%)</title><rect x="10" y="148" width="48" height="15" fill="rgb(207,60,21)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="164" width="48" height="15" fill="rgb(239,172,36)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 4.15%)</title><rect x="10" y="180" width="48" height="15" fill="rgb(212,134,22)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="38" y="196" width="20" height="15" fill="rgb(242,127,14)"/><text x="41.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.73%)</title><rect x="38" y="212" width="20" height="15" fill="rgb(225,135,32)"/><text x="41.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.73%)</title><rect x="38" y="228" width="20" height="15" fill="rgb(231,45,32)"/><text x="41.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="244" width="4" height="15" fill="rgb(217,204,39)"/><text x="57.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="260" width="4" height="15" fill="rgb(207,203,8)"/><text x="57.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="276" width="4" height="15" fill="rgb(209,34,8)"/><text x="57.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="292" width="4" height="15" fill="rgb(226,50,51)"/><text x="57.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="308" width="4" height="15" fill="rgb(216,218,7)"/><text x="57.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="324" width="4" height="15" fill="rgb(236,67,11)"/><text x="57.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="340" width="4" height="15" fill="rgb(229,44,52)"/><text x="57.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="356" width="4" height="15" fill="rgb(250,135,46)"/><text x="57.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="372" width="4" height="15" fill="rgb(236,163,25)"/><text x="57.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="388" width="4" height="15" fill="rgb(216,54,2)"/><text x="57.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="404" width="4" height="15" fill="rgb(239,226,44)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="420" width="4" height="15" fill="rgb(215,51,30)"/><text x="57.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="436" width="4" height="15" fill="rgb(219,210,22)"/><text x="57.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="452" width="4" height="15" fill="rgb(248,198,3)"/><text x="57.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="468" width="4" height="15" fill="rgb(216,206,38)"/><text x="57.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="484" width="4" height="15" fill="rgb(243,65,1)"/><text x="57.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.35%)</title><rect x="54" y="500" width="4" height="15" fill="rgb(225,160,1)"/><text x="57.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="516" width="4" height="15" fill="rgb(216,195,27)"/><text x="57.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="532" width="4" height="15" fill="rgb(212,111,41)"/><text x="57.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="548" width="4" height="15" fill="rgb(242,150,3)"/><text x="57.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="564" width="4" height="15" fill="rgb(227,199,16)"/><text x="57.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="580" width="4" height="15" fill="rgb(252,9,50)"/><text x="57.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="596" width="4" height="15" fill="rgb(205,41,52)"/><text x="57.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="612" width="4" height="15" fill="rgb(238,121,18)"/><text x="57.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.35%)</title><rect x="54" y="628" width="4" height="15" fill="rgb(253,222,26)"/><text x="57.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="644" width="4" height="15" fill="rgb(241,56,52)"/><text x="57.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="660" width="4" height="15" fill="rgb(250,150,3)"/><text x="57.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="676" width="4" height="15" fill="rgb(249,194,45)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="692" width="4" height="15" fill="rgb(240,17,40)"/><text x="57.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="708" width="4" height="15" fill="rgb(243,62,40)"/><text x="57.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="724" width="4" height="15" fill="rgb(228,162,16)"/><text x="57.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="54" y="740" width="4" height="15" fill="rgb(240,38,46)"/><text x="57.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="756" width="4" height="15" fill="rgb(241,2,30)"/><text x="57.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.35%)</title><rect x="54" y="772" width="4" height="15" fill="rgb(254,174,2)"/><text x="57.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="788" width="4" height="15" fill="rgb(231,58,5)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="804" width="4" height="15" fill="rgb(236,116,49)"/><text x="57.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="820" width="4" height="15" fill="rgb(215,115,32)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="54" y="836" width="4" height="15" fill="rgb(230,89,35)"/><text x="57.00" y="846.50"></text></g><g><title>unicode_length (python3.7) (1 samples, 0.35%)</title><rect x="54" y="852" width="4" height="15" fill="rgb(212,82,46)"/><text x="57.00" y="862.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.69%)</title><rect x="120" y="212" width="8" height="15" fill="rgb(244,1,34)"/><text x="123.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.35%)</title><rect x="124" y="228" width="4" height="15" fill="rgb(230,42,2)"/><text x="127.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.35%)</title><rect x="124" y="244" width="4" height="15" fill="rgb(247,104,40)"/><text x="127.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.35%)</title><rect x="124" y="260" width="4" height="15" fill="rgb(226,190,45)"/><text x="127.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.35%)</title><rect x="124" y="276" width="4" height="15" fill="rgb(252,85,25)"/><text x="127.00" y="286.50"></text></g><g><title>0x7f2648966d94 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="124" y="292" width="4" height="15" fill="rgb(239,217,34)"/><text x="127.00" y="302.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 3.11%)</title><rect x="132" y="244" width="37" height="15" fill="rgb(205,188,48)"/><text x="135.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 3.11%)</title><rect x="132" y="260" width="37" height="15" fill="rgb(251,120,30)"/><text x="135.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (9 samples, 3.11%)</title><rect x="132" y="276" width="37" height="15" fill="rgb(216,29,49)"/><text x="135.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (8 samples, 2.77%)</title><rect x="136" y="292" width="33" height="15" fill="rgb(251,180,40)"/><text x="139.00" y="302.50">_w..</text></g><g><title>array_argmax (methods.c) (5 samples, 1.73%)</title><rect x="148" y="308" width="21" height="15" fill="rgb(217,36,52)"/><text x="151.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (4 samples, 1.38%)</title><rect x="152" y="324" width="17" height="15" fill="rgb(229,63,26)"/><text x="155.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src) (3 samples, 1.04%)</title><rect x="156" y="340" width="13" height="15" fill="rgb(207,67,53)"/><text x="159.00" y="350.50"></text></g><g><title>0x7f2648967103 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="173" y="340" width="4" height="15" fill="rgb(252,151,21)"/><text x="176.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.35%)</title><rect x="177" y="340" width="4" height="15" fill="rgb(205,54,48)"/><text x="180.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 4.84%)</title><rect x="173" y="276" width="57" height="15" fill="rgb(235,178,11)"/><text x="176.00" y="286.50">array_..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (14 samples, 4.84%)</title><rect x="173" y="292" width="57" height="15" fill="rgb(226,156,39)"/><text x="176.00" y="302.50">array_..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (14 samples, 4.84%)</title><rect x="173" y="308" width="57" height="15" fill="rgb(250,61,27)"/><text x="176.00" y="318.50">PyArra..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (14 samples, 4.84%)</title><rect x="173" y="324" width="57" height="15" fill="rgb(230,0,4)"/><text x="176.00" y="334.50">cblas_..</text></g><g><title>gemm (cblasfuncs.c) (12 samples, 4.15%)</title><rect x="181" y="340" width="49" height="15" fill="rgb(214,198,36)"/><text x="184.00" y="350.50">gemm..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 4.15%)</title><rect x="181" y="356" width="49" height="15" fill="rgb(231,52,15)"/><text x="184.00" y="366.50">cbla..</text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 4.15%)</title><rect x="181" y="372" width="49" height="15" fill="rgb(223,97,5)"/><text x="184.00" y="382.50">dgem..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 4.15%)</title><rect x="181" y="388" width="49" height="15" fill="rgb(249,154,45)"/><text x="184.00" y="398.50">dgem..</text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.69%)</title><rect x="230" y="276" width="8" height="15" fill="rgb(219,190,38)"/><text x="233.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (38 samples, 13.15%)</title><rect x="169" y="244" width="155" height="15" fill="rgb(242,96,33)"/><text x="172.00" y="254.50">numpy_dot_inplace (..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (38 samples, 13.15%)</title><rect x="169" y="260" width="155" height="15" fill="rgb(232,50,53)"/><text x="172.00" y="270.50">dot (&lt;__array_funct..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 7.27%)</title><rect x="238" y="276" width="86" height="15" fill="rgb(252,88,19)"/><text x="241.00" y="286.50">dgemm_kern..</text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.69%)</title><rect x="324" y="260" width="8" height="15" fill="rgb(211,226,27)"/><text x="327.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.69%)</title><rect x="324" y="276" width="8" height="15" fill="rgb(216,71,50)"/><text x="327.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.35%)</title><rect x="328" y="292" width="4" height="15" fill="rgb(218,88,53)"/><text x="331.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.35%)</title><rect x="332" y="324" width="4" height="15" fill="rgb(210,223,10)"/><text x="335.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="332" y="340" width="4" height="15" fill="rgb(251,144,29)"/><text x="335.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="332" y="356" width="4" height="15" fill="rgb(213,210,3)"/><text x="335.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.69%)</title><rect x="332" y="308" width="8" height="15" fill="rgb(210,2,15)"/><text x="335.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.35%)</title><rect x="336" y="324" width="4" height="15" fill="rgb(248,113,20)"/><text x="339.00" y="334.50"></text></g><g><title>0x7f2648966d50 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="352" y="356" width="5" height="15" fill="rgb(216,166,2)"/><text x="355.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 2.77%)</title><rect x="332" y="292" width="33" height="15" fill="rgb(244,201,30)"/><text x="335.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 2.08%)</title><rect x="340" y="308" width="25" height="15" fill="rgb(225,32,44)"/><text x="343.00" y="318.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 2.08%)</title><rect x="340" y="324" width="25" height="15" fill="rgb(224,116,11)"/><text x="343.00" y="334.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.73%)</title><rect x="344" y="340" width="21" height="15" fill="rgb(249,82,26)"/><text x="347.00" y="350.50"></text></g><g><title>0x7f2648966d6a (libc-2.29.so) (2 samples, 0.69%)</title><rect x="357" y="356" width="8" height="15" fill="rgb(214,11,14)"/><text x="360.00" y="366.50"></text></g><g><title>0x7f2633c2f9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="365" y="308" width="4" height="15" fill="rgb(237,74,28)"/><text x="368.00" y="318.50"></text></g><g><title>0x7f2633c50254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="369" y="324" width="4" height="15" fill="rgb(205,120,38)"/><text x="372.00" y="334.50"></text></g><g><title>0x7f2633c0dfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.69%)</title><rect x="373" y="340" width="8" height="15" fill="rgb(248,126,30)"/><text x="376.00" y="350.50"></text></g><g><title>0x7f2633d599f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="381" y="340" width="4" height="15" fill="rgb(237,226,5)"/><text x="384.00" y="350.50"></text></g><g><title>0x7f2648a921b0 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="385" y="356" width="4" height="15" fill="rgb(216,121,10)"/><text x="388.00" y="366.50"></text></g><g><title>0x7f2648b18bb4 (libm-2.29.so) (2 samples, 0.69%)</title><rect x="389" y="356" width="8" height="15" fill="rgb(251,114,51)"/><text x="392.00" y="366.50"></text></g><g><title>0x7f2648b18bd3 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="397" y="356" width="4" height="15" fill="rgb(206,166,7)"/><text x="400.00" y="366.50"></text></g><g><title>0x7f2648b18be7 (libm-2.29.so) (2 samples, 0.69%)</title><rect x="401" y="356" width="9" height="15" fill="rgb(250,119,6)"/><text x="404.00" y="366.50"></text></g><g><title>0x7f2648b18c07 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="410" y="356" width="4" height="15" fill="rgb(205,198,3)"/><text x="413.00" y="366.50"></text></g><g><title>0x7f2633c50265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 3.81%)</title><rect x="373" y="324" width="45" height="15" fill="rgb(232,99,9)"/><text x="376.00" y="334.50">0x7f..</text></g><g><title>exp (libm-2.29.so) (8 samples, 2.77%)</title><rect x="385" y="340" width="33" height="15" fill="rgb(221,72,18)"/><text x="388.00" y="350.50">ex..</text></g><g><title>0x7f2648b18c18 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="414" y="356" width="4" height="15" fill="rgb(244,110,5)"/><text x="417.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (75 samples, 25.95%)</title><rect x="128" y="228" width="306" height="15" fill="rgb(208,178,49)"/><text x="131.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_linear_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (27 samples, 9.34%)</title><rect x="324" y="244" width="110" height="15" fill="rgb(250,127,17)"/><text x="327.00" y="254.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (25 samples, 8.65%)</title><rect x="332" y="260" width="102" height="15" fill="rgb(211,175,12)"/><text x="335.00" y="270.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (25 samples, 8.65%)</title><rect x="332" y="276" width="102" height="15" fill="rgb(206,64,9)"/><text x="335.00" y="286.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (17 samples, 5.88%)</title><rect x="365" y="292" width="69" height="15" fill="rgb(252,196,42)"/><text x="368.00" y="302.50">trivial..</text></g><g><title>0x7f2633c2f9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 5.54%)</title><rect x="369" y="308" width="65" height="15" fill="rgb(249,93,39)"/><text x="372.00" y="318.50">0x7f263..</text></g><g><title>0x7f2633c50279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.38%)</title><rect x="418" y="324" width="16" height="15" fill="rgb(236,37,2)"/><text x="421.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="446" y="260" width="4" height="15" fill="rgb(206,186,3)"/><text x="449.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="446" y="276" width="4" height="15" fill="rgb(228,126,9)"/><text x="449.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="446" y="292" width="4" height="15" fill="rgb(244,6,7)"/><text x="449.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="455" y="324" width="4" height="15" fill="rgb(244,176,28)"/><text x="458.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="455" y="340" width="4" height="15" fill="rgb(249,117,20)"/><text x="458.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.35%)</title><rect x="455" y="356" width="4" height="15" fill="rgb(239,70,48)"/><text x="458.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.35%)</title><rect x="455" y="372" width="4" height="15" fill="rgb(223,79,19)"/><text x="458.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.35%)</title><rect x="455" y="388" width="4" height="15" fill="rgb(224,204,12)"/><text x="458.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="459" y="372" width="4" height="15" fill="rgb(205,132,40)"/><text x="462.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.35%)</title><rect x="459" y="388" width="4" height="15" fill="rgb(211,24,1)"/><text x="462.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.35%)</title><rect x="459" y="404" width="4" height="15" fill="rgb(232,33,38)"/><text x="462.00" y="414.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.35%)</title><rect x="463" y="404" width="4" height="15" fill="rgb(246,51,39)"/><text x="466.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="467" y="404" width="4" height="15" fill="rgb(208,35,35)"/><text x="470.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="467" y="420" width="4" height="15" fill="rgb(232,138,29)"/><text x="470.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="467" y="436" width="4" height="15" fill="rgb(232,217,33)"/><text x="470.00" y="446.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 1.04%)</title><rect x="463" y="372" width="12" height="15" fill="rgb(243,224,30)"/><text x="466.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 1.04%)</title><rect x="463" y="388" width="12" height="15" fill="rgb(246,100,44)"/><text x="466.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="471" y="404" width="4" height="15" fill="rgb(229,37,48)"/><text x="474.00" y="414.50"></text></g><g><title>0x7f26488fea19 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="471" y="420" width="4" height="15" fill="rgb(228,89,10)"/><text x="474.00" y="430.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.35%)</title><rect x="471" y="436" width="4" height="15" fill="rgb(224,209,4)"/><text x="474.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 3.81%)</title><rect x="475" y="388" width="45" height="15" fill="rgb(245,130,48)"/><text x="478.00" y="398.50">DOUB..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 1.38%)</title><rect x="504" y="404" width="16" height="15" fill="rgb(211,165,6)"/><text x="507.00" y="414.50"></text></g><g><title>array_sum (methods.c) (19 samples, 6.57%)</title><rect x="450" y="260" width="78" height="15" fill="rgb(214,85,9)"/><text x="453.00" y="270.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c) (19 samples, 6.57%)</title><rect x="450" y="276" width="78" height="15" fill="rgb(210,117,24)"/><text x="453.00" y="286.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 6.57%)</title><rect x="450" y="292" width="78" height="15" fill="rgb(237,196,48)"/><text x="453.00" y="302.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 6.23%)</title><rect x="455" y="308" width="73" height="15" fill="rgb(232,178,46)"/><text x="458.00" y="318.50">ufunc_re..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (17 samples, 5.88%)</title><rect x="459" y="324" width="69" height="15" fill="rgb(246,124,25)"/><text x="462.00" y="334.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (17 samples, 5.88%)</title><rect x="459" y="340" width="69" height="15" fill="rgb(206,189,51)"/><text x="462.00" y="350.50">PyUFunc..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (17 samples, 5.88%)</title><rect x="459" y="356" width="69" height="15" fill="rgb(241,81,47)"/><text x="462.00" y="366.50">PyUFunc..</text></g><g><title>reduce_loop (ufunc_object.c) (13 samples, 4.50%)</title><rect x="475" y="372" width="53" height="15" fill="rgb(224,166,33)"/><text x="478.00" y="382.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.69%)</title><rect x="520" y="388" width="8" height="15" fill="rgb(237,216,39)"/><text x="523.00" y="398.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.35%)</title><rect x="528" y="292" width="4" height="15" fill="rgb(244,56,40)"/><text x="531.00" y="302.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.35%)</title><rect x="532" y="292" width="4" height="15" fill="rgb(221,134,1)"/><text x="535.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="536" y="308" width="4" height="15" fill="rgb(219,29,20)"/><text x="539.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.35%)</title><rect x="536" y="324" width="4" height="15" fill="rgb(239,174,45)"/><text x="539.00" y="334.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (7 samples, 2.42%)</title><rect x="540" y="324" width="29" height="15" fill="rgb(226,25,23)"/><text x="543.00" y="334.50">DO..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (7 samples, 2.42%)</title><rect x="540" y="340" width="29" height="15" fill="rgb(224,19,7)"/><text x="543.00" y="350.50">ru..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (7 samples, 2.42%)</title><rect x="540" y="356" width="29" height="15" fill="rgb(235,36,33)"/><text x="543.00" y="366.50">ss..</text></g><g><title>_mm_store_pd (emmintrin.h) (7 samples, 2.42%)</title><rect x="540" y="372" width="29" height="15" fill="rgb(205,219,10)"/><text x="543.00" y="382.50">_m..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.73%)</title><rect x="569" y="340" width="20" height="15" fill="rgb(220,12,37)"/><text x="572.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.73%)</title><rect x="569" y="356" width="20" height="15" fill="rgb(244,30,37)"/><text x="572.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.35%)</title><rect x="585" y="372" width="4" height="15" fill="rgb(240,98,20)"/><text x="588.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 4.50%)</title><rect x="540" y="308" width="53" height="15" fill="rgb(225,30,23)"/><text x="543.00" y="318.50">itera..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 2.08%)</title><rect x="569" y="324" width="24" height="15" fill="rgb(252,190,11)"/><text x="572.00" y="334.50">N..</text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.35%)</title><rect x="589" y="340" width="4" height="15" fill="rgb(244,137,31)"/><text x="592.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 5.19%)</title><rect x="536" y="292" width="61" height="15" fill="rgb(241,123,19)"/><text x="539.00" y="302.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="593" y="308" width="4" height="15" fill="rgb(252,202,9)"/><text x="596.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src) (1 samples, 0.35%)</title><rect x="593" y="324" width="4" height="15" fill="rgb(242,108,21)"/><text x="596.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src) (1 samples, 0.35%)</title><rect x="593" y="340" width="4" height="15" fill="rgb(248,195,4)"/><text x="596.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src) (1 samples, 0.35%)</title><rect x="593" y="356" width="4" height="15" fill="rgb(225,5,20)"/><text x="596.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.35%)</title><rect x="593" y="372" width="4" height="15" fill="rgb(232,33,8)"/><text x="596.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (18 samples, 6.23%)</title><rect x="528" y="276" width="74" height="15" fill="rgb(225,40,50)"/><text x="531.00" y="286.50">PyUFunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.35%)</title><rect x="597" y="292" width="5" height="15" fill="rgb(219,145,39)"/><text x="600.00" y="302.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (134 samples, 46.37%)</title><rect x="58" y="68" width="548" height="15" fill="rgb(221,1,50)"/><text x="61.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_10..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (134 samples, 46.37%)</title><rect x="58" y="84" width="548" height="15" fill="rgb(216,54,50)"/><text x="61.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (134 samples, 46.37%)</title><rect x="58" y="100" width="548" height="15" fill="rgb(239,92,16)"/><text x="61.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (133 samples, 46.02%)</title><rect x="63" y="116" width="543" height="15" fill="rgb(242,31,13)"/><text x="66.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 45.67%)</title><rect x="67" y="132" width="539" height="15" fill="rgb(230,208,43)"/><text x="70.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (132 samples, 45.67%)</title><rect x="67" y="148" width="539" height="15" fill="rgb(208,222,17)"/><text x="70.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (130 samples, 44.98%)</title><rect x="75" y="164" width="531" height="15" fill="rgb(236,115,1)"/><text x="78.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (130 samples, 44.98%)</title><rect x="75" y="180" width="531" height="15" fill="rgb(253,217,25)"/><text x="78.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (121 samples, 41.87%)</title><rect x="112" y="196" width="494" height="15" fill="rgb(233,40,28)"/><text x="115.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (117 samples, 40.48%)</title><rect x="128" y="212" width="478" height="15" fill="rgb(231,202,7)"/><text x="131.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (42 samples, 14.53%)</title><rect x="434" y="228" width="172" height="15" fill="rgb(248,61,45)"/><text x="437.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (41 samples, 14.19%)</title><rect x="438" y="244" width="168" height="15" fill="rgb(211,76,29)"/><text x="441.00" y="254.50">norm_l1 (mlprodict/on..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (19 samples, 6.57%)</title><rect x="528" y="260" width="78" height="15" fill="rgb(236,61,0)"/><text x="531.00" y="270.50">ufunc_gen..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.35%)</title><rect x="602" y="276" width="4" height="15" fill="rgb(223,125,46)"/><text x="605.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="634" y="244" width="4" height="15" fill="rgb(239,177,22)"/><text x="637.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="634" y="260" width="4" height="15" fill="rgb(216,107,6)"/><text x="637.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.35%)</title><rect x="634" y="276" width="4" height="15" fill="rgb(246,139,50)"/><text x="637.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.35%)</title><rect x="634" y="292" width="4" height="15" fill="rgb(217,201,4)"/><text x="637.00" y="302.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.35%)</title><rect x="634" y="308" width="4" height="15" fill="rgb(215,120,29)"/><text x="637.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="638" y="292" width="4" height="15" fill="rgb(239,10,45)"/><text x="641.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.35%)</title><rect x="638" y="308" width="4" height="15" fill="rgb(247,178,42)"/><text x="641.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.35%)</title><rect x="638" y="324" width="4" height="15" fill="rgb(246,136,21)"/><text x="641.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="642" y="356" width="4" height="15" fill="rgb(240,176,46)"/><text x="645.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="642" y="372" width="4" height="15" fill="rgb(221,17,24)"/><text x="645.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.35%)</title><rect x="642" y="388" width="4" height="15" fill="rgb(240,155,50)"/><text x="645.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="642" y="404" width="4" height="15" fill="rgb(224,70,48)"/><text x="645.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.69%)</title><rect x="642" y="292" width="9" height="15" fill="rgb(254,18,33)"/><text x="645.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.69%)</title><rect x="642" y="308" width="9" height="15" fill="rgb(244,200,25)"/><text x="645.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.69%)</title><rect x="642" y="324" width="9" height="15" fill="rgb(247,190,36)"/><text x="645.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.69%)</title><rect x="642" y="340" width="9" height="15" fill="rgb(239,156,53)"/><text x="645.00" y="350.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.35%)</title><rect x="646" y="356" width="5" height="15" fill="rgb(219,161,38)"/><text x="649.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.69%)</title><rect x="667" y="308" width="8" height="15" fill="rgb(207,219,40)"/><text x="670.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 3.81%)</title><rect x="638" y="276" width="45" height="15" fill="rgb(250,201,10)"/><text x="641.00" y="286.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (8 samples, 2.77%)</title><rect x="651" y="292" width="32" height="15" fill="rgb(228,80,6)"/><text x="654.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.69%)</title><rect x="675" y="308" width="8" height="15" fill="rgb(209,80,12)"/><text x="678.00" y="318.50"></text></g><g><title>array_sum (methods.c) (13 samples, 4.50%)</title><rect x="634" y="180" width="53" height="15" fill="rgb(243,228,9)"/><text x="637.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 4.50%)</title><rect x="634" y="196" width="53" height="15" fill="rgb(214,8,21)"/><text x="637.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 4.50%)</title><rect x="634" y="212" width="53" height="15" fill="rgb(249,3,33)"/><text x="637.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.50%)</title><rect x="634" y="228" width="53" height="15" fill="rgb(254,20,54)"/><text x="637.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (12 samples, 4.15%)</title><rect x="638" y="244" width="49" height="15" fill="rgb(252,96,0)"/><text x="641.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (12 samples, 4.15%)</title><rect x="638" y="260" width="49" height="15" fill="rgb(224,96,24)"/><text x="641.00" y="270.50">PyUF..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.35%)</title><rect x="683" y="276" width="4" height="15" fill="rgb(213,162,24)"/><text x="686.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="683" y="292" width="4" height="15" fill="rgb(219,46,22)"/><text x="686.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="683" y="308" width="4" height="15" fill="rgb(242,71,9)"/><text x="686.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="683" y="324" width="4" height="15" fill="rgb(216,72,15)"/><text x="686.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.35%)</title><rect x="691" y="196" width="4" height="15" fill="rgb(252,123,21)"/><text x="694.00" y="206.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.35%)</title><rect x="700" y="276" width="4" height="15" fill="rgb(209,195,42)"/><text x="703.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.35%)</title><rect x="700" y="292" width="4" height="15" fill="rgb(205,124,17)"/><text x="703.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.35%)</title><rect x="700" y="308" width="4" height="15" fill="rgb(215,17,6)"/><text x="703.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.35%)</title><rect x="700" y="324" width="4" height="15" fill="rgb(227,128,40)"/><text x="703.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 1.38%)</title><rect x="704" y="292" width="16" height="15" fill="rgb(233,71,36)"/><text x="707.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 1.38%)</title><rect x="704" y="308" width="16" height="15" fill="rgb(243,95,24)"/><text x="707.00" y="318.50"></text></g><g><title>array_add (number.c) (7 samples, 2.42%)</title><rect x="695" y="196" width="29" height="15" fill="rgb(215,190,25)"/><text x="698.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.08%)</title><rect x="700" y="212" width="24" height="15" fill="rgb(233,163,26)"/><text x="703.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.08%)</title><rect x="700" y="228" width="24" height="15" fill="rgb(219,155,33)"/><text x="703.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.08%)</title><rect x="700" y="244" width="24" height="15" fill="rgb(254,204,3)"/><text x="703.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.08%)</title><rect x="700" y="260" width="24" height="15" fill="rgb(206,24,17)"/><text x="703.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.73%)</title><rect x="704" y="276" width="20" height="15" fill="rgb(205,208,33)"/><text x="707.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.35%)</title><rect x="720" y="292" width="4" height="15" fill="rgb(241,126,41)"/><text x="723.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="724" y="196" width="4" height="15" fill="rgb(254,156,13)"/><text x="727.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="724" y="212" width="4" height="15" fill="rgb(219,112,13)"/><text x="727.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.69%)</title><rect x="740" y="212" width="9" height="15" fill="rgb(219,145,43)"/><text x="743.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.35%)</title><rect x="749" y="212" width="4" height="15" fill="rgb(215,164,54)"/><text x="752.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 1.04%)</title><rect x="753" y="212" width="12" height="15" fill="rgb(230,196,52)"/><text x="756.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.69%)</title><rect x="757" y="228" width="8" height="15" fill="rgb(252,143,44)"/><text x="760.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.04%)</title><rect x="765" y="212" width="12" height="15" fill="rgb(226,140,37)"/><text x="768.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.35%)</title><rect x="773" y="228" width="4" height="15" fill="rgb(244,26,38)"/><text x="776.00" y="238.50"></text></g><g><title>0x7f2648967124 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="785" y="228" width="4" height="15" fill="rgb(206,54,3)"/><text x="788.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (4 samples, 1.38%)</title><rect x="777" y="212" width="16" height="15" fill="rgb(239,188,5)"/><text x="780.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.35%)</title><rect x="789" y="228" width="4" height="15" fill="rgb(252,137,54)"/><text x="792.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (19 samples, 6.57%)</title><rect x="728" y="196" width="78" height="15" fill="rgb(217,223,24)"/><text x="731.00" y="206.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.04%)</title><rect x="793" y="212" width="13" height="15" fill="rgb(215,119,46)"/><text x="796.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.69%)</title><rect x="798" y="228" width="8" height="15" fill="rgb(243,73,18)"/><text x="801.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 2.08%)</title><rect x="806" y="196" width="24" height="15" fill="rgb(223,64,49)"/><text x="809.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 2.08%)</title><rect x="806" y="212" width="24" height="15" fill="rgb(210,89,20)"/><text x="809.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.69%)</title><rect x="822" y="228" width="8" height="15" fill="rgb(211,9,41)"/><text x="825.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="830" y="212" width="4" height="15" fill="rgb(209,144,13)"/><text x="833.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 8.30%)</title><rect x="834" y="212" width="98" height="15" fill="rgb(208,206,3)"/><text x="837.00" y="222.50">dgemm_kerne..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="932" y="228" width="4" height="15" fill="rgb(207,1,6)"/><text x="935.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="932" y="244" width="4" height="15" fill="rgb(240,137,35)"/><text x="935.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.35%)</title><rect x="932" y="260" width="4" height="15" fill="rgb(248,199,41)"/><text x="935.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (16 samples, 5.54%)</title><rect x="945" y="260" width="65" height="15" fill="rgb(247,224,54)"/><text x="948.00" y="270.50">DOUBLE_..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 5.54%)</title><rect x="945" y="276" width="65" height="15" fill="rgb(209,206,20)"/><text x="948.00" y="286.50">cblas_d..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 5.54%)</title><rect x="945" y="292" width="65" height="15" fill="rgb(242,187,11)"/><text x="948.00" y="302.50">dgemm_n..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (16 samples, 5.54%)</title><rect x="945" y="308" width="65" height="15" fill="rgb(212,1,8)"/><text x="948.00" y="318.50">dgemm_o..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.69%)</title><rect x="1010" y="276" width="8" height="15" fill="rgb(209,158,6)"/><text x="1013.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1014" y="292" width="4" height="15" fill="rgb(226,170,13)"/><text x="1017.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="1014" y="308" width="4" height="15" fill="rgb(247,228,1)"/><text x="1017.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="1014" y="324" width="4" height="15" fill="rgb(237,185,16)"/><text x="1017.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="1014" y="340" width="4" height="15" fill="rgb(232,212,34)"/><text x="1017.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="1014" y="356" width="4" height="15" fill="rgb(246,225,19)"/><text x="1017.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.35%)</title><rect x="1014" y="372" width="4" height="15" fill="rgb(205,152,11)"/><text x="1017.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1014" y="388" width="4" height="15" fill="rgb(205,123,9)"/><text x="1017.00" y="398.50"></text></g><g><title>0x7f2648947b68 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1014" y="404" width="4" height="15" fill="rgb(241,67,48)"/><text x="1017.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.04%)</title><rect x="1010" y="260" width="12" height="15" fill="rgb(246,136,39)"/><text x="1013.00" y="270.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1018" y="276" width="4" height="15" fill="rgb(247,175,43)"/><text x="1021.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (83 samples, 28.72%)</title><rect x="687" y="180" width="339" height="15" fill="rgb(209,60,54)"/><text x="690.00" y="190.50">decision_function (sklearn/linear_model/_base..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (48 samples, 16.61%)</title><rect x="830" y="196" width="196" height="15" fill="rgb(229,228,29)"/><text x="833.00" y="206.50">safe_sparse_dot (sklearn/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (23 samples, 7.96%)</title><rect x="932" y="212" width="94" height="15" fill="rgb(220,225,50)"/><text x="935.00" y="222.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 7.61%)</title><rect x="936" y="228" width="90" height="15" fill="rgb(208,93,50)"/><text x="939.00" y="238.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (22 samples, 7.61%)</title><rect x="936" y="244" width="90" height="15" fill="rgb(231,157,32)"/><text x="939.00" y="254.50">PyUFunc_Ge..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1022" y="260" width="4" height="15" fill="rgb(207,51,30)"/><text x="1025.00" y="270.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (2 samples, 0.69%)</title><rect x="1026" y="244" width="8" height="15" fill="rgb(249,41,7)"/><text x="1029.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (2 samples, 0.69%)</title><rect x="1026" y="260" width="8" height="15" fill="rgb(207,144,18)"/><text x="1029.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (2 samples, 0.69%)</title><rect x="1026" y="276" width="8" height="15" fill="rgb(215,152,26)"/><text x="1029.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.69%)</title><rect x="1026" y="292" width="8" height="15" fill="rgb(241,122,7)"/><text x="1029.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1034" y="244" width="4" height="15" fill="rgb(226,217,32)"/><text x="1037.00" y="254.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1034" y="260" width="4" height="15" fill="rgb(211,143,51)"/><text x="1037.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="1034" y="276" width="4" height="15" fill="rgb(241,16,6)"/><text x="1037.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.08%)</title><rect x="1026" y="228" width="25" height="15" fill="rgb(246,39,14)"/><text x="1029.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 1.04%)</title><rect x="1038" y="244" width="13" height="15" fill="rgb(221,10,13)"/><text x="1041.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 1.04%)</title><rect x="1038" y="260" width="13" height="15" fill="rgb(222,40,27)"/><text x="1041.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 1.04%)</title><rect x="1038" y="276" width="13" height="15" fill="rgb(240,117,38)"/><text x="1041.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 1.04%)</title><rect x="1038" y="292" width="13" height="15" fill="rgb(243,8,24)"/><text x="1041.00" y="302.50"></text></g><g><title>0x7f2633c2f9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.69%)</title><rect x="1051" y="244" width="8" height="15" fill="rgb(218,82,40)"/><text x="1054.00" y="254.50"></text></g><g><title>0x7f2633c2f9dd (?) (1 samples, 0.35%)</title><rect x="1059" y="244" width="4" height="15" fill="rgb(226,212,54)"/><text x="1062.00" y="254.50"></text></g><g><title>0x7f2633c50275 (?) (1 samples, 0.35%)</title><rect x="1059" y="260" width="4" height="15" fill="rgb(254,30,11)"/><text x="1062.00" y="270.50"></text></g><g><title>0x7f2633c0dfe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.69%)</title><rect x="1067" y="276" width="8" height="15" fill="rgb(243,153,51)"/><text x="1070.00" y="286.50"></text></g><g><title>0x7f2633d599f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.69%)</title><rect x="1075" y="276" width="8" height="15" fill="rgb(221,175,20)"/><text x="1078.00" y="286.50"></text></g><g><title>0x7f2648a921b0 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1092" y="292" width="4" height="15" fill="rgb(215,137,45)"/><text x="1095.00" y="302.50"></text></g><g><title>0x7f2648b18bd3 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1096" y="292" width="4" height="15" fill="rgb(248,25,20)"/><text x="1099.00" y="302.50"></text></g><g><title>0x7f2648b18be7 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1100" y="292" width="4" height="15" fill="rgb(224,209,29)"/><text x="1103.00" y="302.50"></text></g><g><title>0x7f2648b18bf9 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1104" y="292" width="4" height="15" fill="rgb(216,182,53)"/><text x="1107.00" y="302.50"></text></g><g><title>0x7f2648b18c07 (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1108" y="292" width="4" height="15" fill="rgb(231,44,27)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f2648b18c2e (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1112" y="292" width="4" height="15" fill="rgb(222,59,46)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f2633c50265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.84%)</title><rect x="1063" y="260" width="57" height="15" fill="rgb(209,87,8)"/><text x="1066.00" y="270.50">0x7f26..</text></g><g><title>exp (libm-2.29.so) (9 samples, 3.11%)</title><rect x="1083" y="276" width="37" height="15" fill="rgb(209,204,13)"/><text x="1086.00" y="286.50">exp..</text></g><g><title>0x7f2648b18c7b (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1116" y="292" width="4" height="15" fill="rgb(251,157,43)"/><text x="1119.00" y="302.50"></text></g><g><title>0x7f2633c50275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.35%)</title><rect x="1120" y="260" width="4" height="15" fill="rgb(217,194,2)"/><text x="1123.00" y="270.50"></text></g><g><title>0x7f2633c2f9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (24 samples, 8.30%)</title><rect x="1063" y="244" width="98" height="15" fill="rgb(210,11,6)"/><text x="1066.00" y="254.50">0x7f2633c2f..</text></g><g><title>0x7f2633c50279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.11%)</title><rect x="1124" y="260" width="37" height="15" fill="rgb(225,207,32)"/><text x="1127.00" y="270.50">0x7..</text></g><g><title>0x7f2633c2f9e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.69%)</title><rect x="1161" y="244" width="8" height="15" fill="rgb(205,167,36)"/><text x="1164.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (36 samples, 12.46%)</title><rect x="1026" y="196" width="147" height="15" fill="rgb(239,160,37)"/><text x="1029.00" y="206.50">PyUFunc_GenericFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (36 samples, 12.46%)</title><rect x="1026" y="212" width="147" height="15" fill="rgb(243,150,47)"/><text x="1029.00" y="222.50">execute_legacy_ufu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (30 samples, 10.38%)</title><rect x="1051" y="228" width="122" height="15" fill="rgb(237,117,36)"/><text x="1054.00" y="238.50">trivial_two_ope..</text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="1169" y="244" width="4" height="15" fill="rgb(249,0,36)"/><text x="1172.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (136 samples, 47.06%)</title><rect x="622" y="164" width="555" height="15" fill="rgb(207,131,28)"/><text x="625.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (37 samples, 12.80%)</title><rect x="1026" y="180" width="151" height="15" fill="rgb(230,24,52)"/><text x="1029.00" y="190.50">ufunc_generic_call ..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1173" y="196" width="4" height="15" fill="rgb(238,192,26)"/><text x="1176.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.35%)</title><rect x="1181" y="180" width="4" height="15" fill="rgb(253,22,49)"/><text x="1184.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.35%)</title><rect x="1181" y="196" width="4" height="15" fill="rgb(246,110,3)"/><text x="1184.00" y="206.50"></text></g><g><title>all (289 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,105,9)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (289 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(243,67,16)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (143 samples, 49.48%)</title><rect x="606" y="68" width="584" height="15" fill="rgb(240,118,32)"/><text x="609.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (143 samples, 49.48%)</title><rect x="606" y="84" width="584" height="15" fill="rgb(251,153,14)"/><text x="609.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_5..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py) (143 samples, 49.48%)</title><rect x="606" y="100" width="584" height="15" fill="rgb(248,49,21)"/><text x="609.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_d..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (142 samples, 49.13%)</title><rect x="610" y="116" width="580" height="15" fill="rgb(237,50,52)"/><text x="613.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (142 samples, 49.13%)</title><rect x="610" y="132" width="580" height="15" fill="rgb(249,205,33)"/><text x="613.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (142 samples, 49.13%)</title><rect x="610" y="148" width="580" height="15" fill="rgb(228,215,50)"/><text x="613.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 1.04%)</title><rect x="1177" y="164" width="13" height="15" fill="rgb(217,173,3)"/><text x="1180.00" y="174.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.35%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(241,153,28)"/><text x="1188.00" y="190.50"></text></g></g></svg>