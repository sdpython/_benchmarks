<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1766" onload="init(evt)" viewBox="0 0 1200 1766" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1766" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1749.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1749.00"> </text><g id="frames"><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(222,44,29)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(213,92,35)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(223,120,46)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(218,224,4)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(213,183,46)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.12%)</title><rect x="10" y="1060" width="1" height="15" fill="rgb(223,13,18)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1076" width="1" height="15" fill="rgb(232,211,40)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1092" width="1" height="15" fill="rgb(222,135,43)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1108" width="1" height="15" fill="rgb(248,204,14)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1124" width="1" height="15" fill="rgb(223,224,33)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1140" width="1" height="15" fill="rgb(237,19,12)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="1156" width="1" height="15" fill="rgb(216,162,8)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1172" width="1" height="15" fill="rgb(230,211,23)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1188" width="1" height="15" fill="rgb(244,51,8)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1204" width="1" height="15" fill="rgb(231,149,26)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1220" width="1" height="15" fill="rgb(205,105,28)"/><text x="13.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1236" width="1" height="15" fill="rgb(207,144,18)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.12%)</title><rect x="10" y="1252" width="1" height="15" fill="rgb(217,183,33)"/><text x="13.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1268" width="1" height="15" fill="rgb(234,31,26)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1284" width="1" height="15" fill="rgb(224,102,51)"/><text x="13.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1300" width="1" height="15" fill="rgb(241,59,4)"/><text x="13.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1316" width="1" height="15" fill="rgb(253,62,12)"/><text x="13.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1332" width="1" height="15" fill="rgb(242,122,37)"/><text x="13.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="1348" width="1" height="15" fill="rgb(227,146,25)"/><text x="13.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1364" width="1" height="15" fill="rgb(205,30,24)"/><text x="13.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1380" width="1" height="15" fill="rgb(251,78,45)"/><text x="13.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1396" width="1" height="15" fill="rgb(217,132,54)"/><text x="13.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1412" width="1" height="15" fill="rgb(220,91,11)"/><text x="13.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1428" width="1" height="15" fill="rgb(220,84,53)"/><text x="13.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.12%)</title><rect x="10" y="1444" width="1" height="15" fill="rgb(253,70,7)"/><text x="13.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1460" width="1" height="15" fill="rgb(247,180,22)"/><text x="13.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1476" width="1" height="15" fill="rgb(252,41,44)"/><text x="13.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1492" width="1" height="15" fill="rgb(216,190,16)"/><text x="13.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1508" width="1" height="15" fill="rgb(205,156,31)"/><text x="13.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1524" width="1" height="15" fill="rgb(250,123,18)"/><text x="13.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.12%)</title><rect x="10" y="1540" width="1" height="15" fill="rgb(239,168,30)"/><text x="13.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1556" width="1" height="15" fill="rgb(249,36,39)"/><text x="13.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1572" width="1" height="15" fill="rgb(250,28,16)"/><text x="13.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1588" width="1" height="15" fill="rgb(206,152,34)"/><text x="13.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="10" y="1604" width="1" height="15" fill="rgb(240,194,14)"/><text x="13.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1620" width="1" height="15" fill="rgb(231,89,44)"/><text x="13.00" y="1630.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.12%)</title><rect x="10" y="1636" width="1" height="15" fill="rgb(206,101,15)"/><text x="13.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1652" width="1" height="15" fill="rgb(206,51,4)"/><text x="13.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1668" width="1" height="15" fill="rgb(216,12,8)"/><text x="13.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1684" width="1" height="15" fill="rgb(221,205,33)"/><text x="13.00" y="1694.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1700" width="1" height="15" fill="rgb(206,182,29)"/><text x="13.00" y="1710.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="10" y="1716" width="1" height="15" fill="rgb(239,25,3)"/><text x="13.00" y="1726.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.12%)</title><rect x="11" y="1364" width="1" height="15" fill="rgb(208,138,4)"/><text x="14.00" y="1374.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.12%)</title><rect x="12" y="1364" width="2" height="15" fill="rgb(207,161,45)"/><text x="15.00" y="1374.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.12%)</title><rect x="14" y="1364" width="1" height="15" fill="rgb(222,165,15)"/><text x="17.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.12%)</title><rect x="14" y="1380" width="1" height="15" fill="rgb(253,151,41)"/><text x="17.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.12%)</title><rect x="14" y="1396" width="1" height="15" fill="rgb(233,186,49)"/><text x="17.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="14" y="1412" width="1" height="15" fill="rgb(243,58,27)"/><text x="17.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.12%)</title><rect x="14" y="1428" width="1" height="15" fill="rgb(220,180,53)"/><text x="17.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.60%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(240,28,37)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(223,191,12)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(234,110,44)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(232,175,6)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.60%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(247,179,20)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(240,95,38)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.60%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(214,43,38)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(248,69,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(249,9,37)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(231,69,6)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(239,168,52)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(238,4,27)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(213,154,10)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.60%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(239,173,43)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(232,116,0)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.60%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(237,103,54)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(241,25,23)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(235,214,39)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(226,219,9)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.60%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(240,222,35)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.60%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(252,189,14)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.60%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(232,183,37)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="980" width="6" height="15" fill="rgb(234,122,25)"/><text x="14.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="996" width="6" height="15" fill="rgb(213,2,53)"/><text x="14.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1012" width="6" height="15" fill="rgb(208,166,27)"/><text x="14.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1028" width="6" height="15" fill="rgb(209,48,51)"/><text x="14.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1044" width="6" height="15" fill="rgb(230,17,35)"/><text x="14.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="11" y="1060" width="6" height="15" fill="rgb(239,196,39)"/><text x="14.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1076" width="6" height="15" fill="rgb(218,229,28)"/><text x="14.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 0.48%)</title><rect x="11" y="1092" width="6" height="15" fill="rgb(235,192,5)"/><text x="14.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1108" width="6" height="15" fill="rgb(217,8,26)"/><text x="14.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1124" width="6" height="15" fill="rgb(221,23,27)"/><text x="14.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1140" width="6" height="15" fill="rgb(244,153,37)"/><text x="14.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1156" width="6" height="15" fill="rgb(230,22,22)"/><text x="14.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1172" width="6" height="15" fill="rgb(205,179,38)"/><text x="14.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="11" y="1188" width="6" height="15" fill="rgb(219,161,40)"/><text x="14.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1204" width="6" height="15" fill="rgb(241,101,38)"/><text x="14.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 0.48%)</title><rect x="11" y="1220" width="6" height="15" fill="rgb(232,195,0)"/><text x="14.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1236" width="6" height="15" fill="rgb(208,102,24)"/><text x="14.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1252" width="6" height="15" fill="rgb(242,151,19)"/><text x="14.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1268" width="6" height="15" fill="rgb(206,196,1)"/><text x="14.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="11" y="1284" width="6" height="15" fill="rgb(251,12,10)"/><text x="14.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="11" y="1300" width="6" height="15" fill="rgb(209,83,15)"/><text x="14.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.48%)</title><rect x="11" y="1316" width="6" height="15" fill="rgb(240,154,6)"/><text x="14.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.48%)</title><rect x="11" y="1332" width="6" height="15" fill="rgb(234,63,13)"/><text x="14.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 0.48%)</title><rect x="11" y="1348" width="6" height="15" fill="rgb(230,108,0)"/><text x="14.00" y="1358.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(234,82,3)"/><text x="18.00" y="1374.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(214,115,27)"/><text x="18.00" y="1390.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(215,210,13)"/><text x="18.00" y="1406.50"></text></g><g><title>onnx::OpSet_Onnx_ver1::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(205,39,20)"/><text x="18.00" y="1422.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::Loop_Onnx_ver1&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(241,224,1)"/><text x="18.00" y="1438.50"></text></g><g><title>onnx::OpSchema::TypeConstraint (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(205,13,26)"/><text x="18.00" y="1454.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1460" width="2" height="15" fill="rgb(228,97,46)"/><text x="18.00" y="1470.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="15" y="1476" width="2" height="15" fill="rgb(210,135,52)"/><text x="18.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(215,30,20)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(245,134,15)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(205,10,5)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="388" width="9" height="15" fill="rgb(233,53,52)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.84%)</title><rect x="10" y="404" width="9" height="15" fill="rgb(221,145,16)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="420" width="9" height="15" fill="rgb(225,51,7)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 0.84%)</title><rect x="10" y="436" width="9" height="15" fill="rgb(215,145,42)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="452" width="9" height="15" fill="rgb(231,61,33)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="468" width="9" height="15" fill="rgb(229,142,46)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="484" width="9" height="15" fill="rgb(253,71,31)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.84%)</title><rect x="10" y="500" width="9" height="15" fill="rgb(247,155,34)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="516" width="9" height="15" fill="rgb(207,1,45)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 0.84%)</title><rect x="10" y="532" width="9" height="15" fill="rgb(216,188,25)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="548" width="9" height="15" fill="rgb(243,92,37)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="564" width="9" height="15" fill="rgb(205,3,28)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="580" width="9" height="15" fill="rgb(207,191,5)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.84%)</title><rect x="10" y="596" width="9" height="15" fill="rgb(231,110,9)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.84%)</title><rect x="10" y="612" width="9" height="15" fill="rgb(252,75,35)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.24%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(240,173,1)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(229,4,38)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(244,185,47)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(209,144,24)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(240,153,48)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(246,208,17)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.24%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(232,12,8)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(240,25,23)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(236,80,13)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(218,9,13)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(253,225,22)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(231,50,50)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.24%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(238,157,54)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(231,160,47)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(236,43,7)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(209,146,44)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(231,147,38)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(213,88,39)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.24%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(252,202,15)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(238,80,37)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(253,179,35)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(227,190,38)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(217,111,28)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(237,157,3)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.24%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(218,11,11)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(223,32,18)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(244,195,31)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(213,25,46)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(235,149,7)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(206,211,52)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.24%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(240,87,53)"/><text x="20.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(227,159,11)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(226,216,29)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(235,105,47)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(254,161,4)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(222,136,34)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(228,108,15)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(206,115,37)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.24%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(233,225,31)"/><text x="20.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(240,143,22)"/><text x="20.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(231,27,26)"/><text x="20.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(215,159,2)"/><text x="20.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(245,5,3)"/><text x="20.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(213,106,45)"/><text x="20.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (2 samples, 0.24%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(231,20,41)"/><text x="20.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(217,163,22)"/><text x="20.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(205,97,26)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(253,224,39)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(224,113,21)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(251,146,48)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(246,223,40)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(207,225,7)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (2 samples, 0.24%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(241,128,14)"/><text x="20.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(228,126,2)"/><text x="20.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(239,175,25)"/><text x="20.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(243,65,15)"/><text x="20.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(247,106,51)"/><text x="20.00" y="1534.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(249,23,8)"/><text x="20.00" y="1550.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="17" y="1556" width="2" height="15" fill="rgb(236,55,53)"/><text x="20.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 0.96%)</title><rect x="10" y="292" width="11" height="15" fill="rgb(229,120,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.96%)</title><rect x="10" y="308" width="11" height="15" fill="rgb(241,121,38)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.96%)</title><rect x="10" y="324" width="11" height="15" fill="rgb(223,73,15)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="340" width="2" height="15" fill="rgb(251,79,12)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="356" width="2" height="15" fill="rgb(214,105,36)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="372" width="2" height="15" fill="rgb(224,4,10)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="19" y="388" width="2" height="15" fill="rgb(216,1,1)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="404" width="2" height="15" fill="rgb(243,164,54)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="420" width="2" height="15" fill="rgb(212,87,44)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="436" width="2" height="15" fill="rgb(221,83,45)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="452" width="2" height="15" fill="rgb(231,54,27)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="468" width="2" height="15" fill="rgb(233,86,40)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="484" width="2" height="15" fill="rgb(242,53,9)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="500" width="2" height="15" fill="rgb(224,216,7)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="516" width="2" height="15" fill="rgb(243,61,34)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="532" width="2" height="15" fill="rgb(222,74,10)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="548" width="2" height="15" fill="rgb(254,60,27)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="564" width="2" height="15" fill="rgb(211,35,41)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(207,127,36)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(221,70,32)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(231,69,16)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(252,1,54)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(205,30,23)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(227,103,17)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(213,223,1)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(231,62,50)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(209,23,4)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(222,201,30)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(221,6,21)"/><text x="22.00" y="750.50"></text></g><g><title>0x7ff9de75040e (?) (1 samples, 0.12%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(227,101,22)"/><text x="22.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(227,18,26)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(216,148,40)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(248,106,49)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(229,229,52)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(209,205,40)"/><text x="22.00" y="846.50"></text></g><g><title>0x7ff9de509cd2 (?) (1 samples, 0.12%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(238,169,10)"/><text x="22.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(220,10,24)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(242,105,29)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(227,135,13)"/><text x="22.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(239,102,12)"/><text x="22.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(219,48,49)"/><text x="22.00" y="942.50"></text></g><g><title>0x7ff9ddbff0e5 (?) (1 samples, 0.12%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(235,223,9)"/><text x="22.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(225,216,8)"/><text x="22.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(242,120,33)"/><text x="22.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(205,8,42)"/><text x="22.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(209,19,4)"/><text x="22.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(221,52,10)"/><text x="22.00" y="1038.50"></text></g><g><title>0x7ff9dd983e68 (?) (1 samples, 0.12%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(226,118,11)"/><text x="22.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(214,62,7)"/><text x="22.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(238,139,28)"/><text x="22.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(218,214,14)"/><text x="22.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(243,73,15)"/><text x="22.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(227,89,41)"/><text x="22.00" y="1134.50"></text></g><g><title>0x7ff9dd7142fb (?) (1 samples, 0.12%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(231,128,16)"/><text x="22.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(231,36,15)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(219,152,22)"/><text x="22.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1188" width="2" height="15" fill="rgb(219,68,36)"/><text x="22.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1204" width="2" height="15" fill="rgb(241,215,54)"/><text x="22.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1220" width="2" height="15" fill="rgb(227,184,50)"/><text x="22.00" y="1230.50"></text></g><g><title>0x7ff9dd4f8153 (?) (1 samples, 0.12%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(240,75,44)"/><text x="22.00" y="1246.50"></text></g><g><title>0x7ff9dd4f6c13 (?) (1 samples, 0.12%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(237,74,36)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(239,120,40)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(210,71,3)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(215,65,36)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(237,186,36)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="19" y="1332" width="2" height="15" fill="rgb(238,126,18)"/><text x="22.00" y="1342.50"></text></g><g><title>0x7ff9dd293181 (?) (1 samples, 0.12%)</title><rect x="19" y="1348" width="2" height="15" fill="rgb(205,14,5)"/><text x="22.00" y="1358.50"></text></g><g><title>0x7ff9dd2961c9 (?) (1 samples, 0.12%)</title><rect x="19" y="1364" width="2" height="15" fill="rgb(225,129,30)"/><text x="22.00" y="1374.50"></text></g><g><title>0x7ff9dd2c2167 (?) (1 samples, 0.12%)</title><rect x="19" y="1380" width="2" height="15" fill="rgb(220,17,35)"/><text x="22.00" y="1390.50"></text></g><g><title>0x7ff9dd2bdb64 (?) (1 samples, 0.12%)</title><rect x="19" y="1396" width="2" height="15" fill="rgb(229,80,31)"/><text x="22.00" y="1406.50"></text></g><g><title>0x7ff9dd2a107b (?) (1 samples, 0.12%)</title><rect x="19" y="1412" width="2" height="15" fill="rgb(251,96,10)"/><text x="22.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="19" y="1428" width="2" height="15" fill="rgb(213,214,50)"/><text x="22.00" y="1438.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.12%)</title><rect x="19" y="1444" width="2" height="15" fill="rgb(246,156,31)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="1460" width="2" height="15" fill="rgb(231,113,3)"/><text x="22.00" y="1470.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="1476" width="2" height="15" fill="rgb(211,25,9)"/><text x="22.00" y="1486.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.12%)</title><rect x="19" y="1492" width="2" height="15" fill="rgb(241,78,26)"/><text x="22.00" y="1502.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(213,113,6)"/><text x="24.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(237,125,21)"/><text x="24.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(224,114,7)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(245,35,38)"/><text x="24.00" y="926.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(214,79,38)"/><text x="25.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(216,186,2)"/><text x="25.00" y="942.50"></text></g><g><title>__getattr__ (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(225,125,0)"/><text x="25.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.44%)</title><rect x="10" y="196" width="16" height="15" fill="rgb(211,63,3)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.44%)</title><rect x="10" y="212" width="16" height="15" fill="rgb(237,6,50)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.44%)</title><rect x="10" y="228" width="16" height="15" fill="rgb(215,14,31)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.44%)</title><rect x="10" y="244" width="16" height="15" fill="rgb(215,82,9)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.44%)</title><rect x="10" y="260" width="16" height="15" fill="rgb(215,70,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.44%)</title><rect x="10" y="276" width="16" height="15" fill="rgb(213,159,20)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.48%)</title><rect x="21" y="292" width="5" height="15" fill="rgb(213,227,18)"/><text x="24.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="308" width="5" height="15" fill="rgb(220,108,9)"/><text x="24.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="324" width="5" height="15" fill="rgb(231,130,27)"/><text x="24.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="340" width="5" height="15" fill="rgb(221,22,43)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="21" y="356" width="5" height="15" fill="rgb(253,18,8)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="372" width="5" height="15" fill="rgb(209,149,16)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.48%)</title><rect x="21" y="388" width="5" height="15" fill="rgb(234,51,17)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="404" width="5" height="15" fill="rgb(239,76,4)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="420" width="5" height="15" fill="rgb(240,129,4)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="436" width="5" height="15" fill="rgb(223,182,42)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="21" y="452" width="5" height="15" fill="rgb(236,177,36)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="468" width="5" height="15" fill="rgb(226,4,0)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.48%)</title><rect x="21" y="484" width="5" height="15" fill="rgb(241,73,29)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="500" width="5" height="15" fill="rgb(231,133,33)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="516" width="5" height="15" fill="rgb(216,53,24)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="532" width="5" height="15" fill="rgb(251,226,33)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="21" y="548" width="5" height="15" fill="rgb(247,7,39)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="564" width="5" height="15" fill="rgb(210,173,30)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.48%)</title><rect x="21" y="580" width="5" height="15" fill="rgb(248,73,25)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="596" width="5" height="15" fill="rgb(252,219,3)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="612" width="5" height="15" fill="rgb(208,194,14)"/><text x="24.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="628" width="5" height="15" fill="rgb(235,52,30)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="644" width="5" height="15" fill="rgb(247,132,29)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="660" width="5" height="15" fill="rgb(219,200,29)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="676" width="5" height="15" fill="rgb(232,157,36)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="21" y="692" width="5" height="15" fill="rgb(226,103,45)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="708" width="5" height="15" fill="rgb(220,17,50)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.48%)</title><rect x="21" y="724" width="5" height="15" fill="rgb(215,221,50)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="740" width="5" height="15" fill="rgb(254,63,44)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="756" width="5" height="15" fill="rgb(227,88,22)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="772" width="5" height="15" fill="rgb(244,220,2)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="21" y="788" width="5" height="15" fill="rgb(206,24,42)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="21" y="804" width="5" height="15" fill="rgb(239,124,51)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.48%)</title><rect x="21" y="820" width="5" height="15" fill="rgb(205,146,15)"/><text x="24.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.48%)</title><rect x="21" y="836" width="5" height="15" fill="rgb(217,228,0)"/><text x="24.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.48%)</title><rect x="21" y="852" width="5" height="15" fill="rgb(242,127,43)"/><text x="24.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.36%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(219,199,43)"/><text x="25.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.36%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(241,152,4)"/><text x="25.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.36%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(253,4,39)"/><text x="25.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.24%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(231,53,54)"/><text x="27.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="932" width="1" height="15" fill="rgb(214,215,18)"/><text x="28.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="948" width="1" height="15" fill="rgb(233,58,31)"/><text x="28.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.12%)</title><rect x="25" y="964" width="1" height="15" fill="rgb(252,77,1)"/><text x="28.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="25" y="980" width="1" height="15" fill="rgb(223,201,6)"/><text x="28.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="25" y="996" width="1" height="15" fill="rgb(239,2,50)"/><text x="28.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.12%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(217,110,39)"/><text x="28.00" y="1022.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(236,189,21)"/><text x="28.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(240,156,3)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.12%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(222,9,7)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(216,15,37)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(245,47,54)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(205,115,48)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(228,154,38)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(223,164,28)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.12%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(206,114,1)"/><text x="29.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(246,52,48)"/><text x="29.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(208,180,14)"/><text x="29.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(206,153,16)"/><text x="29.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(254,119,8)"/><text x="29.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(218,26,31)"/><text x="29.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(224,104,45)"/><text x="29.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.12%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(253,2,43)"/><text x="29.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.12%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(246,199,42)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.24%)</title><rect x="26" y="580" width="3" height="15" fill="rgb(205,75,26)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="26" y="596" width="3" height="15" fill="rgb(228,52,11)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="26" y="612" width="3" height="15" fill="rgb(250,121,19)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.24%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(239,172,24)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.24%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(231,185,44)"/><text x="29.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="28" y="660" width="1" height="15" fill="rgb(238,10,12)"/><text x="31.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="28" y="676" width="1" height="15" fill="rgb(233,186,36)"/><text x="31.00" y="686.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (3 samples, 0.36%)</title><rect x="26" y="244" width="5" height="15" fill="rgb(208,133,13)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="260" width="5" height="15" fill="rgb(210,54,20)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="276" width="5" height="15" fill="rgb(218,13,27)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="292" width="5" height="15" fill="rgb(212,163,16)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="26" y="308" width="5" height="15" fill="rgb(249,7,14)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="324" width="5" height="15" fill="rgb(230,5,17)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.36%)</title><rect x="26" y="340" width="5" height="15" fill="rgb(219,40,11)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="356" width="5" height="15" fill="rgb(252,162,29)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="372" width="5" height="15" fill="rgb(246,106,52)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="388" width="5" height="15" fill="rgb(241,67,8)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="404" width="5" height="15" fill="rgb(227,31,34)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="420" width="5" height="15" fill="rgb(214,211,44)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="436" width="5" height="15" fill="rgb(246,186,0)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="26" y="452" width="5" height="15" fill="rgb(206,79,26)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="468" width="5" height="15" fill="rgb(222,202,31)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.36%)</title><rect x="26" y="484" width="5" height="15" fill="rgb(238,26,10)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="500" width="5" height="15" fill="rgb(210,154,2)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="516" width="5" height="15" fill="rgb(205,73,27)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="532" width="5" height="15" fill="rgb(213,67,40)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.36%)</title><rect x="26" y="548" width="5" height="15" fill="rgb(229,170,1)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.36%)</title><rect x="26" y="564" width="5" height="15" fill="rgb(250,108,49)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.12%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(238,73,49)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(231,4,41)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(239,206,26)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(209,209,18)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(214,195,0)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(245,157,38)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.12%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(244,120,32)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(240,190,38)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(223,94,22)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(222,32,39)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(211,61,19)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(215,164,41)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.12%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(240,56,24)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(238,9,20)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(218,108,7)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(205,92,49)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(253,211,48)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(232,171,41)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.12%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(206,32,40)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(206,69,17)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(240,70,7)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(251,125,6)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(212,169,51)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(254,62,52)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.12%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(228,181,43)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(207,200,28)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(228,85,28)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1012" width="2" height="15" fill="rgb(240,166,1)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="1028" width="2" height="15" fill="rgb(243,166,33)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(206,221,31)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.12%)</title><rect x="29" y="1060" width="2" height="15" fill="rgb(214,67,28)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1076" width="2" height="15" fill="rgb(238,129,14)"/><text x="32.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1092" width="2" height="15" fill="rgb(235,161,24)"/><text x="32.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(235,19,35)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(252,34,40)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(253,9,18)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(247,194,49)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="1172" width="2" height="15" fill="rgb(254,140,24)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1188" width="2" height="15" fill="rgb(252,48,33)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.12%)</title><rect x="29" y="1204" width="2" height="15" fill="rgb(225,145,10)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1220" width="2" height="15" fill="rgb(247,186,27)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1236" width="2" height="15" fill="rgb(238,58,12)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1252" width="2" height="15" fill="rgb(209,115,21)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="1268" width="2" height="15" fill="rgb(227,108,4)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1284" width="2" height="15" fill="rgb(249,112,26)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.12%)</title><rect x="29" y="1300" width="2" height="15" fill="rgb(213,138,28)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1316" width="2" height="15" fill="rgb(241,49,49)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1332" width="2" height="15" fill="rgb(220,89,39)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1348" width="2" height="15" fill="rgb(224,29,49)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="29" y="1364" width="2" height="15" fill="rgb(244,204,46)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="29" y="1380" width="2" height="15" fill="rgb(240,55,15)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.12%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(238,121,3)"/><text x="32.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.12%)</title><rect x="29" y="1412" width="2" height="15" fill="rgb(210,195,10)"/><text x="32.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.12%)</title><rect x="29" y="1428" width="2" height="15" fill="rgb(222,43,50)"/><text x="32.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1444" width="2" height="15" fill="rgb(238,146,51)"/><text x="32.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1460" width="2" height="15" fill="rgb(250,82,6)"/><text x="32.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1476" width="2" height="15" fill="rgb(241,45,51)"/><text x="32.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1492" width="2" height="15" fill="rgb(227,219,6)"/><text x="32.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1508" width="2" height="15" fill="rgb(244,99,35)"/><text x="32.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1524" width="2" height="15" fill="rgb(243,169,38)"/><text x="32.00" y="1534.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.12%)</title><rect x="29" y="1540" width="2" height="15" fill="rgb(218,209,11)"/><text x="32.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.91%)</title><rect x="10" y="68" width="22" height="15" fill="rgb(221,174,41)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.91%)</title><rect x="10" y="84" width="22" height="15" fill="rgb(221,58,39)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.91%)</title><rect x="10" y="100" width="22" height="15" fill="rgb(250,142,2)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 1.91%)</title><rect x="10" y="116" width="22" height="15" fill="rgb(243,145,33)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.91%)</title><rect x="10" y="132" width="22" height="15" fill="rgb(240,218,49)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (16 samples, 1.91%)</title><rect x="10" y="148" width="22" height="15" fill="rgb(209,91,28)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.91%)</title><rect x="10" y="164" width="22" height="15" fill="rgb(235,156,39)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 1.91%)</title><rect x="10" y="180" width="22" height="15" fill="rgb(211,196,28)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="26" y="196" width="6" height="15" fill="rgb(220,57,23)"/><text x="29.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.48%)</title><rect x="26" y="212" width="6" height="15" fill="rgb(214,79,38)"/><text x="29.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.48%)</title><rect x="26" y="228" width="6" height="15" fill="rgb(228,189,18)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(238,68,46)"/><text x="34.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(218,129,16)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(208,19,12)"/><text x="34.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="292" width="1" height="15" fill="rgb(210,200,45)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="308" width="1" height="15" fill="rgb(246,119,51)"/><text x="34.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="324" width="1" height="15" fill="rgb(232,48,29)"/><text x="34.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="340" width="1" height="15" fill="rgb(250,58,16)"/><text x="34.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="356" width="1" height="15" fill="rgb(223,140,42)"/><text x="34.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.12%)</title><rect x="31" y="372" width="1" height="15" fill="rgb(239,163,17)"/><text x="34.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="388" width="1" height="15" fill="rgb(220,162,32)"/><text x="34.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="404" width="1" height="15" fill="rgb(227,146,17)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="420" width="1" height="15" fill="rgb(248,19,36)"/><text x="34.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="436" width="1" height="15" fill="rgb(249,42,36)"/><text x="34.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="452" width="1" height="15" fill="rgb(226,122,5)"/><text x="34.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.12%)</title><rect x="31" y="468" width="1" height="15" fill="rgb(249,211,37)"/><text x="34.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="31" y="484" width="1" height="15" fill="rgb(231,219,17)"/><text x="34.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.12%)</title><rect x="31" y="500" width="1" height="15" fill="rgb(219,109,31)"/><text x="34.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.12%)</title><rect x="31" y="516" width="1" height="15" fill="rgb(250,188,6)"/><text x="34.00" y="526.50"></text></g><g><title>0x7ff9f1f09bc6 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="79" y="132" width="1" height="15" fill="rgb(249,104,1)"/><text x="82.00" y="142.50"></text></g><g><title>0x7ff9f1f09bdf (libc-2.29.so) (2 samples, 0.24%)</title><rect x="80" y="132" width="3" height="15" fill="rgb(225,19,2)"/><text x="83.00" y="142.50"></text></g><g><title>0x7ff9f1f09c04 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="83" y="132" width="1" height="15" fill="rgb(247,29,17)"/><text x="86.00" y="142.50"></text></g><g><title>0x7ff9f1f09c14 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="84" y="132" width="2" height="15" fill="rgb(208,6,44)"/><text x="87.00" y="142.50"></text></g><g><title>0x7ff9f1f09c1c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="86" y="132" width="1" height="15" fill="rgb(250,83,6)"/><text x="89.00" y="142.50"></text></g><g><title>0x7ff9f1f09c2d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="87" y="132" width="2" height="15" fill="rgb(210,80,9)"/><text x="90.00" y="142.50"></text></g><g><title>0x7ff9f1f09c3d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="89" y="132" width="1" height="15" fill="rgb(213,98,38)"/><text x="92.00" y="142.50"></text></g><g><title>0x7ff9f1f09c49 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="90" y="132" width="1" height="15" fill="rgb(230,224,54)"/><text x="93.00" y="142.50"></text></g><g><title>0x7ff9f1f09aa4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="91" y="148" width="2" height="15" fill="rgb(211,97,21)"/><text x="94.00" y="158.50"></text></g><g><title>0x7ff9f1f09ac1 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="93" y="148" width="3" height="15" fill="rgb(210,126,8)"/><text x="96.00" y="158.50"></text></g><g><title>0x7ff9f1f09c73 (libc-2.29.so) (4 samples, 0.48%)</title><rect x="91" y="132" width="6" height="15" fill="rgb(251,149,26)"/><text x="94.00" y="142.50"></text></g><g><title>0x7ff9f1f09ad5 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="96" y="148" width="1" height="15" fill="rgb(250,46,1)"/><text x="99.00" y="158.50"></text></g><g><title>0x7ff9f1f0aeb0 (libc-2.29.so) (14 samples, 1.67%)</title><rect x="79" y="116" width="19" height="15" fill="rgb(217,160,17)"/><text x="82.00" y="126.50"></text></g><g><title>0x7ff9f1f09ca7 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="97" y="132" width="1" height="15" fill="rgb(215,178,51)"/><text x="100.00" y="142.50"></text></g><g><title>0x7ff9f1f09ab9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="97" y="148" width="1" height="15" fill="rgb(208,113,15)"/><text x="100.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.12%)</title><rect x="98" y="116" width="2" height="15" fill="rgb(233,169,39)"/><text x="101.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.12%)</title><rect x="98" y="132" width="2" height="15" fill="rgb(239,145,17)"/><text x="101.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.12%)</title><rect x="98" y="148" width="2" height="15" fill="rgb(231,74,13)"/><text x="101.00" y="158.50"></text></g><g><title>0x7ff9b2773ff9 (?) (1 samples, 0.12%)</title><rect x="111" y="212" width="2" height="15" fill="rgb(227,133,31)"/><text x="114.00" y="222.50"></text></g><g><title>0x7ff9b276eef6 (?) (1 samples, 0.12%)</title><rect x="111" y="228" width="2" height="15" fill="rgb(244,135,27)"/><text x="114.00" y="238.50"></text></g><g><title>0x7ff9b2763c99 (?) (1 samples, 0.12%)</title><rect x="111" y="244" width="2" height="15" fill="rgb(205,219,20)"/><text x="114.00" y="254.50"></text></g><g><title>0x7ff9b2781ced (?) (1 samples, 0.12%)</title><rect x="111" y="260" width="2" height="15" fill="rgb(215,13,19)"/><text x="114.00" y="270.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="114" y="244" width="1" height="15" fill="rgb(245,119,6)"/><text x="117.00" y="254.50"></text></g><g><title>0x7ff9f1f0a998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="114" y="260" width="1" height="15" fill="rgb(211,15,42)"/><text x="117.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.36%)</title><rect x="113" y="212" width="4" height="15" fill="rgb(206,133,42)"/><text x="116.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="114" y="228" width="3" height="15" fill="rgb(222,125,42)"/><text x="117.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="115" y="244" width="2" height="15" fill="rgb(219,100,13)"/><text x="118.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="115" y="260" width="2" height="15" fill="rgb(218,100,44)"/><text x="118.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="115" y="276" width="2" height="15" fill="rgb(211,160,50)"/><text x="118.00" y="286.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.12%)</title><rect x="117" y="212" width="1" height="15" fill="rgb(220,126,52)"/><text x="120.00" y="222.50"></text></g><g><title>0x7ffc6a9fcb6d ([vdso]) (1 samples, 0.12%)</title><rect x="117" y="228" width="1" height="15" fill="rgb(247,214,40)"/><text x="120.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="122" y="260" width="2" height="15" fill="rgb(209,195,18)"/><text x="125.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="125" y="292" width="2" height="15" fill="rgb(219,39,43)"/><text x="128.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="125" y="308" width="2" height="15" fill="rgb(248,172,44)"/><text x="128.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="125" y="324" width="2" height="15" fill="rgb(210,66,7)"/><text x="128.00" y="334.50"></text></g><g><title>0x7ff9f1f0be07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="125" y="340" width="2" height="15" fill="rgb(241,156,23)"/><text x="128.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="127" y="292" width="1" height="15" fill="rgb(227,186,30)"/><text x="130.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="128" y="340" width="1" height="15" fill="rgb(215,136,36)"/><text x="131.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="128" y="356" width="1" height="15" fill="rgb(243,42,49)"/><text x="131.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="128" y="372" width="1" height="15" fill="rgb(215,83,4)"/><text x="131.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="128" y="388" width="1" height="15" fill="rgb(235,82,0)"/><text x="131.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="129" y="340" width="2" height="15" fill="rgb(248,136,52)"/><text x="132.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="129" y="356" width="2" height="15" fill="rgb(216,91,12)"/><text x="132.00" y="366.50"></text></g><g><title>0x7ff9f1f2ad97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="319" y="372" width="1" height="15" fill="rgb(233,85,44)"/><text x="322.00" y="382.50"></text></g><g><title>0x7ff9f1f2adb3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="320" y="372" width="1" height="15" fill="rgb(214,171,52)"/><text x="323.00" y="382.50"></text></g><g><title>0x7ff9f2089e27 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="321" y="372" width="2" height="15" fill="rgb(240,81,26)"/><text x="324.00" y="382.50"></text></g><g><title>0x7ff9f2089e6d (libm-2.29.so) (1 samples, 0.12%)</title><rect x="323" y="372" width="1" height="15" fill="rgb(219,225,31)"/><text x="326.00" y="382.50"></text></g><g><title>0x7ff9f2089e76 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="324" y="372" width="3" height="15" fill="rgb(245,33,48)"/><text x="327.00" y="382.50"></text></g><g><title>0x7ff9f2089e7a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="327" y="372" width="1" height="15" fill="rgb(213,16,10)"/><text x="330.00" y="382.50"></text></g><g><title>0x7ff9f2089e92 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(220,48,32)"/><text x="331.00" y="382.50"></text></g><g><title>0x7ff9f2089e96 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="330" y="372" width="3" height="15" fill="rgb(252,101,43)"/><text x="333.00" y="382.50"></text></g><g><title>0x7ff9f2089e9e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="333" y="372" width="1" height="15" fill="rgb(222,137,28)"/><text x="336.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (146 samples, 17.46%)</title><rect x="131" y="340" width="206" height="15" fill="rgb(227,142,16)"/><text x="134.00" y="350.50">onnxruntime::ml::LinearClas..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 3.11%)</title><rect x="300" y="356" width="37" height="15" fill="rgb(209,229,34)"/><text x="303.00" y="366.50">onn..</text></g><g><title>0x7ff9f2089ea6 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="334" y="372" width="3" height="15" fill="rgb(229,129,1)"/><text x="337.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.44%)</title><rect x="337" y="340" width="17" height="15" fill="rgb(252,191,38)"/><text x="340.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.44%)</title><rect x="337" y="356" width="17" height="15" fill="rgb(207,192,44)"/><text x="340.00" y="366.50"></text></g><g><title>0x7ff9b273a930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="379" y="356" width="2" height="15" fill="rgb(224,203,44)"/><text x="382.00" y="366.50"></text></g><g><title>0x7ff9e19d6d50 (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="382" y="372" width="3" height="15" fill="rgb(223,211,32)"/><text x="385.00" y="382.50"></text></g><g><title>0x7ff9f1f0bb12 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="450" y="388" width="3" height="15" fill="rgb(208,211,21)"/><text x="453.00" y="398.50"></text></g><g><title>0x7ff9f1f0bb1c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="453" y="388" width="1" height="15" fill="rgb(254,224,29)"/><text x="456.00" y="398.50"></text></g><g><title>0x7ff9f1f0bb39 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="454" y="388" width="2" height="15" fill="rgb(211,163,13)"/><text x="457.00" y="398.50"></text></g><g><title>0x7ff9f1f0bb61 (libc-2.29.so) (3 samples, 0.36%)</title><rect x="456" y="388" width="4" height="15" fill="rgb(234,3,48)"/><text x="459.00" y="398.50"></text></g><g><title>0x7ff9f1f0bd27 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="460" y="388" width="3" height="15" fill="rgb(216,153,18)"/><text x="463.00" y="398.50"></text></g><g><title>0x7ff9f1f0bd36 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="463" y="388" width="1" height="15" fill="rgb(212,39,12)"/><text x="466.00" y="398.50"></text></g><g><title>0x7ff9f1f0bd48 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="464" y="388" width="1" height="15" fill="rgb(251,97,23)"/><text x="467.00" y="398.50"></text></g><g><title>0x7ff9f1f0bd67 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="465" y="388" width="2" height="15" fill="rgb(208,173,45)"/><text x="468.00" y="398.50"></text></g><g><title>0x7ff9f1f0bd8a (libc-2.29.so) (3 samples, 0.36%)</title><rect x="467" y="388" width="4" height="15" fill="rgb(239,159,4)"/><text x="470.00" y="398.50"></text></g><g><title>0x7ff9f1f0bdc2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="471" y="388" width="1" height="15" fill="rgb(225,155,16)"/><text x="474.00" y="398.50"></text></g><g><title>0x7ff9f1f0bdd2 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="472" y="388" width="2" height="15" fill="rgb(212,199,0)"/><text x="475.00" y="398.50"></text></g><g><title>0x7ff9f1f0bde0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="474" y="388" width="1" height="15" fill="rgb(213,15,35)"/><text x="477.00" y="398.50"></text></g><g><title>0x7ff9f1f0bdec (libc-2.29.so) (1 samples, 0.12%)</title><rect x="475" y="388" width="2" height="15" fill="rgb(244,15,0)"/><text x="478.00" y="398.50"></text></g><g><title>0x7ff9f1f0bdf9 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="477" y="388" width="1" height="15" fill="rgb(212,167,51)"/><text x="480.00" y="398.50"></text></g><g><title>0x7ff9f1f0be19 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="478" y="388" width="3" height="15" fill="rgb(234,81,54)"/><text x="481.00" y="398.50"></text></g><g><title>0x7ff9f1f0bf2a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="481" y="388" width="1" height="15" fill="rgb(217,205,5)"/><text x="484.00" y="398.50"></text></g><g><title>0x7ff9f1f0c033 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="482" y="388" width="3" height="15" fill="rgb(238,30,0)"/><text x="485.00" y="398.50"></text></g><g><title>0x7ff9f1f0c050 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="485" y="388" width="2" height="15" fill="rgb(208,142,47)"/><text x="488.00" y="398.50"></text></g><g><title>0x7ff9f1f0c064 (libc-2.29.so) (3 samples, 0.36%)</title><rect x="487" y="388" width="4" height="15" fill="rgb(248,177,16)"/><text x="490.00" y="398.50"></text></g><g><title>0x7ff9f1f0c0a3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="491" y="388" width="1" height="15" fill="rgb(242,30,4)"/><text x="494.00" y="398.50"></text></g><g><title>0x7ff9f1f0c39d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="492" y="388" width="2" height="15" fill="rgb(207,208,1)"/><text x="495.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (81 samples, 9.69%)</title><rect x="381" y="356" width="114" height="15" fill="rgb(209,100,1)"/><text x="384.00" y="366.50">operator new (..</text></g><g><title>malloc (libc-2.29.so) (78 samples, 9.33%)</title><rect x="385" y="372" width="110" height="15" fill="rgb(213,158,45)"/><text x="388.00" y="382.50">malloc (libc-..</text></g><g><title>0x7ff9f1f0c3ca (libc-2.29.so) (1 samples, 0.12%)</title><rect x="494" y="388" width="1" height="15" fill="rgb(247,109,37)"/><text x="497.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.24%)</title><rect x="495" y="356" width="3" height="15" fill="rgb(224,76,20)"/><text x="498.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.08%)</title><rect x="498" y="356" width="13" height="15" fill="rgb(208,125,0)"/><text x="501.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="506" y="372" width="5" height="15" fill="rgb(205,24,48)"/><text x="509.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (272 samples, 32.54%)</title><rect x="128" y="308" width="384" height="15" fill="rgb(220,184,30)"/><text x="131.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (272 samples, 32.54%)</title><rect x="128" y="324" width="384" height="15" fill="rgb(239,146,49)"/><text x="131.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (112 samples, 13.40%)</title><rect x="354" y="340" width="158" height="15" fill="rgb(205,155,9)"/><text x="357.00" y="350.50">onnxruntime::ml::Zip..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="511" y="356" width="1" height="15" fill="rgb(226,102,10)"/><text x="514.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (276 samples, 33.01%)</title><rect x="124" y="276" width="389" height="15" fill="rgb(217,152,41)"/><text x="127.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (273 samples, 32.66%)</title><rect x="128" y="292" width="385" height="15" fill="rgb(244,59,13)"/><text x="131.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="512" y="308" width="1" height="15" fill="rgb(223,89,28)"/><text x="515.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="512" y="324" width="1" height="15" fill="rgb(235,160,11)"/><text x="515.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="512" y="340" width="1" height="15" fill="rgb(237,186,32)"/><text x="515.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (277 samples, 33.13%)</title><rect x="124" y="260" width="391" height="15" fill="rgb(253,120,37)"/><text x="127.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="513" y="276" width="2" height="15" fill="rgb(209,136,18)"/><text x="516.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="513" y="292" width="2" height="15" fill="rgb(238,134,15)"/><text x="516.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="513" y="308" width="2" height="15" fill="rgb(244,152,42)"/><text x="516.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="515" y="260" width="1" height="15" fill="rgb(253,195,46)"/><text x="518.00" y="270.50"></text></g><g><title>0x7ff9f1f2ad50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="516" y="276" width="2" height="15" fill="rgb(226,192,35)"/><text x="519.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.12%)</title><rect x="518" y="308" width="1" height="15" fill="rgb(226,127,25)"/><text x="521.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.12%)</title><rect x="518" y="324" width="1" height="15" fill="rgb(233,189,7)"/><text x="521.00" y="334.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.12%)</title><rect x="518" y="340" width="1" height="15" fill="rgb(212,146,52)"/><text x="521.00" y="350.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="516" y="260" width="4" height="15" fill="rgb(237,0,43)"/><text x="519.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.24%)</title><rect x="518" y="276" width="2" height="15" fill="rgb(247,75,18)"/><text x="521.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.24%)</title><rect x="518" y="292" width="2" height="15" fill="rgb(250,101,21)"/><text x="521.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.12%)</title><rect x="519" y="308" width="1" height="15" fill="rgb(214,117,39)"/><text x="522.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.12%)</title><rect x="519" y="324" width="1" height="15" fill="rgb(238,93,42)"/><text x="522.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.12%)</title><rect x="519" y="340" width="1" height="15" fill="rgb(227,210,31)"/><text x="522.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="519" y="356" width="1" height="15" fill="rgb(219,190,14)"/><text x="522.00" y="366.50"></text></g><g><title>0x7ff9f1f0c700 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="519" y="372" width="1" height="15" fill="rgb(224,7,18)"/><text x="522.00" y="382.50"></text></g><g><title>0x7ff9f1f09aa4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="519" y="388" width="1" height="15" fill="rgb(240,205,42)"/><text x="522.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="520" y="260" width="2" height="15" fill="rgb(226,173,17)"/><text x="523.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="520" y="276" width="2" height="15" fill="rgb(227,205,0)"/><text x="523.00" y="286.50"></text></g><g><title>0x7ff9b273b570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="618" y="276" width="1" height="15" fill="rgb(242,20,6)"/><text x="621.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.39%)</title><rect x="619" y="276" width="28" height="15" fill="rgb(206,135,50)"/><text x="622.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (95 samples, 11.36%)</title><rect x="522" y="260" width="134" height="15" fill="rgb(241,113,21)"/><text x="525.00" y="270.50">pybind11::detail..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (6 samples, 0.72%)</title><rect x="647" y="276" width="9" height="15" fill="rgb(211,14,23)"/><text x="650.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="656" y="260" width="1" height="15" fill="rgb(244,220,7)"/><text x="659.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="656" y="276" width="1" height="15" fill="rgb(210,139,22)"/><text x="659.00" y="286.50"></text></g><g><title>0x7ff9f1f2b103 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="656" y="292" width="1" height="15" fill="rgb(249,189,39)"/><text x="659.00" y="302.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="657" y="260" width="2" height="15" fill="rgb(231,28,26)"/><text x="660.00" y="270.50"></text></g><g><title>0x7ff9f1f2b120 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="657" y="276" width="2" height="15" fill="rgb(242,87,41)"/><text x="660.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="276" width="1" height="15" fill="rgb(214,17,34)"/><text x="662.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="292" width="1" height="15" fill="rgb(214,49,15)"/><text x="662.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="308" width="1" height="15" fill="rgb(227,218,39)"/><text x="662.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="324" width="1" height="15" fill="rgb(228,75,12)"/><text x="662.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="340" width="1" height="15" fill="rgb(237,157,43)"/><text x="662.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="356" width="1" height="15" fill="rgb(252,62,42)"/><text x="662.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="372" width="1" height="15" fill="rgb(209,172,33)"/><text x="662.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RegionManager::RegionFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="659" y="388" width="1" height="15" fill="rgb(218,47,20)"/><text x="662.00" y="398.50"></text></g><g><title>0x7ff9f1f0a906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="662" y="292" width="1" height="15" fill="rgb(235,156,45)"/><text x="665.00" y="302.50"></text></g><g><title>0x7ff9f1f0a90e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="663" y="292" width="1" height="15" fill="rgb(223,85,45)"/><text x="666.00" y="302.50"></text></g><g><title>0x7ff9f1f0a91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="664" y="292" width="2" height="15" fill="rgb(217,105,7)"/><text x="667.00" y="302.50"></text></g><g><title>0x7ff9f1f0a92c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="666" y="292" width="1" height="15" fill="rgb(223,155,32)"/><text x="669.00" y="302.50"></text></g><g><title>0x7ff9f1f0a971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="667" y="292" width="2" height="15" fill="rgb(213,3,44)"/><text x="670.00" y="302.50"></text></g><g><title>0x7ff9f1f0a9d3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="669" y="292" width="1" height="15" fill="rgb(216,204,27)"/><text x="672.00" y="302.50"></text></g><g><title>0x7ff9f1f0a9ed (libc-2.29.so) (1 samples, 0.12%)</title><rect x="670" y="292" width="1" height="15" fill="rgb(211,95,16)"/><text x="673.00" y="302.50"></text></g><g><title>0x7ff9f1f0ad07 (libc-2.29.so) (9 samples, 1.08%)</title><rect x="671" y="292" width="13" height="15" fill="rgb(241,174,22)"/><text x="674.00" y="302.50"></text></g><g><title>0x7ff9f1f0ad13 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="684" y="292" width="2" height="15" fill="rgb(205,120,5)"/><text x="687.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.48%)</title><rect x="686" y="292" width="5" height="15" fill="rgb(207,228,31)"/><text x="689.00" y="302.50"></text></g><g><title>0x7ff9f1f0a91e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="693" y="308" width="1" height="15" fill="rgb(211,102,35)"/><text x="696.00" y="318.50"></text></g><g><title>0x7ff9f1f0a982 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="694" y="308" width="1" height="15" fill="rgb(218,210,35)"/><text x="697.00" y="318.50"></text></g><g><title>0x7ff9f1f0a9b3 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="695" y="308" width="2" height="15" fill="rgb(215,157,18)"/><text x="698.00" y="318.50"></text></g><g><title>0x7ff9f1f0aa51 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="697" y="308" width="1" height="15" fill="rgb(217,29,3)"/><text x="700.00" y="318.50"></text></g><g><title>0x7ff9f1f0acf0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="698" y="308" width="2" height="15" fill="rgb(236,27,41)"/><text x="701.00" y="318.50"></text></g><g><title>0x7ff9f1f0ad07 (libc-2.29.so) (2 samples, 0.24%)</title><rect x="700" y="308" width="3" height="15" fill="rgb(224,190,29)"/><text x="703.00" y="318.50"></text></g><g><title>0x7ff9f1f0ad13 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="703" y="308" width="1" height="15" fill="rgb(212,22,2)"/><text x="706.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="704" y="308" width="1" height="15" fill="rgb(238,187,25)"/><text x="707.00" y="318.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.24%)</title><rect x="705" y="308" width="3" height="15" fill="rgb(229,118,24)"/><text x="708.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (421 samples, 50.36%)</title><rect x="118" y="244" width="594" height="15" fill="rgb(214,13,25)"/><text x="121.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::In..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (38 samples, 4.55%)</title><rect x="659" y="260" width="53" height="15" fill="rgb(207,178,44)"/><text x="662.00" y="270.50">std::..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 4.43%)</title><rect x="660" y="276" width="52" height="15" fill="rgb(246,206,8)"/><text x="663.00" y="286.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.79%)</title><rect x="691" y="292" width="21" height="15" fill="rgb(249,13,37)"/><text x="694.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.36%)</title><rect x="708" y="308" width="4" height="15" fill="rgb(244,47,6)"/><text x="711.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (435 samples, 52.03%)</title><rect x="100" y="132" width="614" height="15" fill="rgb(237,159,49)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (434 samples, 51.91%)</title><rect x="101" y="148" width="613" height="15" fill="rgb(207,99,36)"/><text x="104.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (434 samples, 51.91%)</title><rect x="101" y="164" width="613" height="15" fill="rgb(206,16,33)"/><text x="104.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (428 samples, 51.20%)</title><rect x="110" y="180" width="604" height="15" fill="rgb(247,27,54)"/><text x="113.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (427 samples, 51.08%)</title><rect x="111" y="196" width="603" height="15" fill="rgb(238,156,51)"/><text x="114.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (422 samples, 50.48%)</title><rect x="118" y="212" width="596" height="15" fill="rgb(228,71,25)"/><text x="121.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (422 samples, 50.48%)</title><rect x="118" y="228" width="596" height="15" fill="rgb(230,126,8)"/><text x="121.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybi..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="712" y="244" width="2" height="15" fill="rgb(234,78,41)"/><text x="715.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="712" y="260" width="2" height="15" fill="rgb(226,137,40)"/><text x="715.00" y="270.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (484 samples, 57.89%)</title><rect x="32" y="68" width="683" height="15" fill="rgb(213,200,40)"/><text x="35.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (484 samples, 57.89%)</title><rect x="32" y="84" width="683" height="15" fill="rgb(242,48,23)"/><text x="35.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_...</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (484 samples, 57.89%)</title><rect x="32" y="100" width="683" height="15" fill="rgb(238,79,6)"/><text x="35.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (436 samples, 52.15%)</title><rect x="100" y="116" width="615" height="15" fill="rgb(226,113,36)"/><text x="103.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.12%)</title><rect x="714" y="132" width="1" height="15" fill="rgb(231,218,20)"/><text x="717.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.12%)</title><rect x="715" y="116" width="2" height="15" fill="rgb(207,222,28)"/><text x="718.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.12%)</title><rect x="715" y="132" width="2" height="15" fill="rgb(221,169,37)"/><text x="718.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.12%)</title><rect x="715" y="148" width="2" height="15" fill="rgb(222,28,29)"/><text x="718.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.12%)</title><rect x="718" y="180" width="1" height="15" fill="rgb(252,66,36)"/><text x="721.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.12%)</title><rect x="736" y="196" width="2" height="15" fill="rgb(234,179,29)"/><text x="739.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.12%)</title><rect x="738" y="212" width="1" height="15" fill="rgb(226,142,54)"/><text x="741.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.12%)</title><rect x="738" y="228" width="1" height="15" fill="rgb(241,206,14)"/><text x="741.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.12%)</title><rect x="738" y="244" width="1" height="15" fill="rgb(218,157,3)"/><text x="741.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.12%)</title><rect x="738" y="260" width="1" height="15" fill="rgb(225,114,34)"/><text x="741.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.12%)</title><rect x="738" y="276" width="1" height="15" fill="rgb(253,227,43)"/><text x="741.00" y="286.50"></text></g><g><title>0x7ff9f1f2b1ef (libc-2.29.so) (1 samples, 0.12%)</title><rect x="741" y="244" width="1" height="15" fill="rgb(242,183,19)"/><text x="744.00" y="254.50"></text></g><g><title>0x7ff9f1f20730 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="745" y="324" width="1" height="15" fill="rgb(239,189,33)"/><text x="748.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.36%)</title><rect x="746" y="324" width="5" height="15" fill="rgb(247,53,6)"/><text x="749.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (3 samples, 0.36%)</title><rect x="746" y="340" width="5" height="15" fill="rgb(213,7,25)"/><text x="749.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 0.84%)</title><rect x="742" y="244" width="10" height="15" fill="rgb(228,176,11)"/><text x="745.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 0.84%)</title><rect x="742" y="260" width="10" height="15" fill="rgb(244,198,7)"/><text x="745.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 0.72%)</title><rect x="743" y="276" width="9" height="15" fill="rgb(243,67,52)"/><text x="746.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.60%)</title><rect x="745" y="292" width="7" height="15" fill="rgb(250,211,33)"/><text x="748.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 0.60%)</title><rect x="745" y="308" width="7" height="15" fill="rgb(236,11,20)"/><text x="748.00" y="318.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.12%)</title><rect x="751" y="324" width="1" height="15" fill="rgb(233,64,12)"/><text x="754.00" y="334.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.12%)</title><rect x="752" y="244" width="1" height="15" fill="rgb(241,19,13)"/><text x="755.00" y="254.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c) (1 samples, 0.12%)</title><rect x="752" y="260" width="1" height="15" fill="rgb(220,171,0)"/><text x="755.00" y="270.50"></text></g><g><title>0x7ff9f1f2b103 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="755" y="340" width="1" height="15" fill="rgb(229,9,5)"/><text x="758.00" y="350.50"></text></g><g><title>gemm (cblasfuncs.c) (6 samples, 0.72%)</title><rect x="756" y="340" width="9" height="15" fill="rgb(221,89,37)"/><text x="759.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.72%)</title><rect x="756" y="356" width="9" height="15" fill="rgb(215,198,9)"/><text x="759.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.72%)</title><rect x="756" y="372" width="9" height="15" fill="rgb(251,142,19)"/><text x="759.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.72%)</title><rect x="756" y="388" width="9" height="15" fill="rgb(250,191,31)"/><text x="759.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 0.96%)</title><rect x="755" y="276" width="11" height="15" fill="rgb(236,79,0)"/><text x="758.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 0.96%)</title><rect x="755" y="292" width="11" height="15" fill="rgb(230,15,29)"/><text x="758.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 0.96%)</title><rect x="755" y="308" width="11" height="15" fill="rgb(217,13,6)"/><text x="758.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (8 samples, 0.96%)</title><rect x="755" y="324" width="11" height="15" fill="rgb(231,160,18)"/><text x="758.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.12%)</title><rect x="765" y="340" width="1" height="15" fill="rgb(227,141,23)"/><text x="768.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.12%)</title><rect x="765" y="356" width="1" height="15" fill="rgb(207,105,39)"/><text x="768.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.12%)</title><rect x="765" y="372" width="1" height="15" fill="rgb(211,70,9)"/><text x="768.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.12%)</title><rect x="765" y="388" width="1" height="15" fill="rgb(207,34,34)"/><text x="768.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.12%)</title><rect x="765" y="404" width="1" height="15" fill="rgb(229,21,17)"/><text x="768.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.12%)</title><rect x="765" y="420" width="1" height="15" fill="rgb(230,120,50)"/><text x="768.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="765" y="436" width="1" height="15" fill="rgb(222,206,25)"/><text x="768.00" y="446.50"></text></g><g><title>0x7ff9f1f0c723 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="765" y="452" width="1" height="15" fill="rgb(214,69,50)"/><text x="768.00" y="462.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="766" y="276" width="1" height="15" fill="rgb(225,15,11)"/><text x="769.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (57 samples, 6.82%)</title><rect x="753" y="244" width="81" height="15" fill="rgb(229,124,16)"/><text x="756.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (56 samples, 6.70%)</title><rect x="755" y="260" width="79" height="15" fill="rgb(240,165,19)"/><text x="758.00" y="270.50">dot (&lt;__a..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (47 samples, 5.62%)</title><rect x="767" y="276" width="67" height="15" fill="rgb(231,200,19)"/><text x="770.00" y="286.50">sgemm_k..</text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.12%)</title><rect x="835" y="292" width="2" height="15" fill="rgb(251,147,1)"/><text x="838.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.12%)</title><rect x="835" y="308" width="2" height="15" fill="rgb(252,207,12)"/><text x="838.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.12%)</title><rect x="835" y="324" width="2" height="15" fill="rgb(210,51,27)"/><text x="838.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.12%)</title><rect x="835" y="340" width="2" height="15" fill="rgb(241,64,36)"/><text x="838.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.12%)</title><rect x="835" y="356" width="2" height="15" fill="rgb(211,162,16)"/><text x="838.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.12%)</title><rect x="835" y="372" width="2" height="15" fill="rgb(213,102,54)"/><text x="838.00" y="382.50"></text></g><g><title>PyArray_DTYPE (ndarraytypes.h) (1 samples, 0.12%)</title><rect x="837" y="340" width="1" height="15" fill="rgb(216,103,31)"/><text x="840.00" y="350.50"></text></g><g><title>0x7ff9f1f2ad50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="839" y="356" width="2" height="15" fill="rgb(213,216,5)"/><text x="842.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.48%)</title><rect x="837" y="292" width="5" height="15" fill="rgb(223,18,48)"/><text x="840.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.48%)</title><rect x="837" y="308" width="5" height="15" fill="rgb(242,136,20)"/><text x="840.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.48%)</title><rect x="837" y="324" width="5" height="15" fill="rgb(250,215,4)"/><text x="840.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.36%)</title><rect x="838" y="340" width="4" height="15" fill="rgb(220,192,1)"/><text x="841.00" y="350.50"></text></g><g><title>0x7ff9f1f2adbe (libc-2.29.so) (1 samples, 0.12%)</title><rect x="841" y="356" width="1" height="15" fill="rgb(220,75,14)"/><text x="844.00" y="366.50"></text></g><g><title>0x7ff9d4331204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="842" y="324" width="2" height="15" fill="rgb(208,15,24)"/><text x="845.00" y="334.50"></text></g><g><title>0x7ff9d443ac70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="844" y="340" width="1" height="15" fill="rgb(245,29,9)"/><text x="847.00" y="350.50"></text></g><g><title>0x7ff9f2089e00 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="852" y="356" width="2" height="15" fill="rgb(214,71,11)"/><text x="855.00" y="366.50"></text></g><g><title>0x7ff9f2089e0e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="854" y="356" width="1" height="15" fill="rgb(247,58,20)"/><text x="857.00" y="366.50"></text></g><g><title>0x7ff9f2089e37 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="855" y="356" width="1" height="15" fill="rgb(211,44,26)"/><text x="858.00" y="366.50"></text></g><g><title>0x7ff9f2089e4e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="856" y="356" width="2" height="15" fill="rgb(239,133,4)"/><text x="859.00" y="366.50"></text></g><g><title>0x7ff9f2089e62 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="858" y="356" width="3" height="15" fill="rgb(223,125,38)"/><text x="861.00" y="366.50"></text></g><g><title>0x7ff9f2089e71 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="861" y="356" width="1" height="15" fill="rgb(251,176,32)"/><text x="864.00" y="366.50"></text></g><g><title>0x7ff9f2089e76 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="862" y="356" width="1" height="15" fill="rgb(221,109,0)"/><text x="865.00" y="366.50"></text></g><g><title>0x7ff9f2089e7e (libm-2.29.so) (3 samples, 0.36%)</title><rect x="863" y="356" width="5" height="15" fill="rgb(234,46,27)"/><text x="866.00" y="366.50"></text></g><g><title>0x7ff9d4331214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.15%)</title><rect x="844" y="324" width="25" height="15" fill="rgb(231,162,6)"/><text x="847.00" y="334.50">0..</text></g><g><title>expf (libm-2.29.so) (17 samples, 2.03%)</title><rect x="845" y="340" width="24" height="15" fill="rgb(241,103,43)"/><text x="848.00" y="350.50">e..</text></g><g><title>0x7ff9f2089ea6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="868" y="356" width="1" height="15" fill="rgb(207,84,19)"/><text x="871.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (100 samples, 11.96%)</title><rect x="739" y="228" width="141" height="15" fill="rgb(224,87,16)"/><text x="742.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (33 samples, 3.95%)</title><rect x="834" y="244" width="46" height="15" fill="rgb(230,84,51)"/><text x="837.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (33 samples, 3.95%)</title><rect x="834" y="260" width="46" height="15" fill="rgb(217,140,4)"/><text x="837.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (32 samples, 3.83%)</title><rect x="835" y="276" width="45" height="15" fill="rgb(206,137,19)"/><text x="838.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (27 samples, 3.23%)</title><rect x="842" y="292" width="38" height="15" fill="rgb(221,29,50)"/><text x="845.00" y="302.50">tri..</text></g><g><title>0x7ff9d430f33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (27 samples, 3.23%)</title><rect x="842" y="308" width="38" height="15" fill="rgb(211,140,40)"/><text x="845.00" y="318.50">0x7..</text></g><g><title>0x7ff9d4331228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.96%)</title><rect x="869" y="324" width="11" height="15" fill="rgb(219,193,41)"/><text x="872.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.12%)</title><rect x="887" y="260" width="2" height="15" fill="rgb(207,186,50)"/><text x="890.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.12%)</title><rect x="887" y="276" width="2" height="15" fill="rgb(248,108,34)"/><text x="890.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.12%)</title><rect x="887" y="292" width="2" height="15" fill="rgb(231,109,20)"/><text x="890.00" y="302.50"></text></g><g><title>0x7ff9f1f0bb12 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="889" y="420" width="1" height="15" fill="rgb(239,157,21)"/><text x="892.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.24%)</title><rect x="889" y="372" width="3" height="15" fill="rgb(210,118,0)"/><text x="892.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (2 samples, 0.24%)</title><rect x="889" y="388" width="3" height="15" fill="rgb(248,90,24)"/><text x="892.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.24%)</title><rect x="889" y="404" width="3" height="15" fill="rgb(224,160,11)"/><text x="892.00" y="414.50"></text></g><g><title>0x7ff9f1f0c6df (libc-2.29.so) (1 samples, 0.12%)</title><rect x="890" y="420" width="2" height="15" fill="rgb(223,203,48)"/><text x="893.00" y="430.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="892" y="420" width="1" height="15" fill="rgb(211,26,52)"/><text x="895.00" y="430.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.24%)</title><rect x="892" y="372" width="3" height="15" fill="rgb(242,141,26)"/><text x="895.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.24%)</title><rect x="892" y="388" width="3" height="15" fill="rgb(245,128,2)"/><text x="895.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.24%)</title><rect x="892" y="404" width="3" height="15" fill="rgb(206,91,23)"/><text x="895.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="893" y="420" width="2" height="15" fill="rgb(215,171,45)"/><text x="896.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 0.48%)</title><rect x="900" y="388" width="6" height="15" fill="rgb(246,113,31)"/><text x="903.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.12%)</title><rect x="904" y="404" width="2" height="15" fill="rgb(246,34,37)"/><text x="907.00" y="414.50"></text></g><g><title>array_sum (methods.c) (15 samples, 1.79%)</title><rect x="889" y="260" width="21" height="15" fill="rgb(221,53,9)"/><text x="892.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 1.79%)</title><rect x="889" y="276" width="21" height="15" fill="rgb(209,184,6)"/><text x="892.00" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 1.79%)</title><rect x="889" y="292" width="21" height="15" fill="rgb(206,44,26)"/><text x="892.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 1.79%)</title><rect x="889" y="308" width="21" height="15" fill="rgb(251,41,34)"/><text x="892.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 1.79%)</title><rect x="889" y="324" width="21" height="15" fill="rgb(237,152,4)"/><text x="892.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (15 samples, 1.79%)</title><rect x="889" y="340" width="21" height="15" fill="rgb(219,62,9)"/><text x="892.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (15 samples, 1.79%)</title><rect x="889" y="356" width="21" height="15" fill="rgb(220,129,53)"/><text x="892.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (11 samples, 1.32%)</title><rect x="895" y="372" width="15" height="15" fill="rgb(209,91,44)"/><text x="898.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.36%)</title><rect x="906" y="388" width="4" height="15" fill="rgb(217,204,5)"/><text x="909.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.12%)</title><rect x="910" y="276" width="1" height="15" fill="rgb(250,200,34)"/><text x="913.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.12%)</title><rect x="910" y="292" width="1" height="15" fill="rgb(228,7,11)"/><text x="913.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.12%)</title><rect x="910" y="308" width="1" height="15" fill="rgb(226,169,52)"/><text x="913.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.12%)</title><rect x="910" y="324" width="1" height="15" fill="rgb(234,171,33)"/><text x="913.00" y="334.50"></text></g><g><title>0x7ff9f1fe8130 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="910" y="340" width="1" height="15" fill="rgb(228,126,19)"/><text x="913.00" y="350.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.12%)</title><rect x="911" y="292" width="2" height="15" fill="rgb(220,76,19)"/><text x="914.00" y="302.50"></text></g><g><title>FLOAT_divide (loops.c.src) (2 samples, 0.24%)</title><rect x="914" y="324" width="3" height="15" fill="rgb(227,138,33)"/><text x="917.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (2 samples, 0.24%)</title><rect x="914" y="340" width="3" height="15" fill="rgb(207,56,42)"/><text x="917.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.24%)</title><rect x="914" y="356" width="3" height="15" fill="rgb(243,90,11)"/><text x="917.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.24%)</title><rect x="914" y="372" width="3" height="15" fill="rgb(211,118,10)"/><text x="917.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.72%)</title><rect x="913" y="308" width="8" height="15" fill="rgb(239,183,45)"/><text x="916.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.36%)</title><rect x="917" y="324" width="4" height="15" fill="rgb(244,44,35)"/><text x="920.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.36%)</title><rect x="917" y="340" width="4" height="15" fill="rgb(229,31,12)"/><text x="920.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.36%)</title><rect x="917" y="356" width="4" height="15" fill="rgb(217,102,52)"/><text x="920.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.24%)</title><rect x="918" y="372" width="3" height="15" fill="rgb(254,102,2)"/><text x="921.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.84%)</title><rect x="913" y="292" width="10" height="15" fill="rgb(238,121,20)"/><text x="916.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.12%)</title><rect x="921" y="308" width="2" height="15" fill="rgb(219,42,46)"/><text x="924.00" y="318.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (148 samples, 17.70%)</title><rect x="715" y="68" width="209" height="15" fill="rgb(209,39,37)"/><text x="718.00" y="78.50">profile_pyrt (bench_Logisti..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (148 samples, 17.70%)</title><rect x="715" y="84" width="209" height="15" fill="rgb(235,174,24)"/><text x="718.00" y="94.50">setup_profile (bench_Logist..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (148 samples, 17.70%)</title><rect x="715" y="100" width="209" height="15" fill="rgb(228,47,1)"/><text x="718.00" y="110.50">profile (bench_LogisticRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 17.58%)</title><rect x="717" y="116" width="207" height="15" fill="rgb(205,202,45)"/><text x="720.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 17.58%)</title><rect x="717" y="132" width="207" height="15" fill="rgb(215,37,42)"/><text x="720.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (146 samples, 17.46%)</title><rect x="718" y="148" width="206" height="15" fill="rgb(237,206,6)"/><text x="721.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (146 samples, 17.46%)</title><rect x="718" y="164" width="206" height="15" fill="rgb(246,100,7)"/><text x="721.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (145 samples, 17.34%)</title><rect x="719" y="180" width="205" height="15" fill="rgb(246,48,25)"/><text x="722.00" y="190.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (132 samples, 15.79%)</title><rect x="738" y="196" width="186" height="15" fill="rgb(224,184,22)"/><text x="741.00" y="206.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (131 samples, 15.67%)</title><rect x="739" y="212" width="185" height="15" fill="rgb(218,224,0)"/><text x="742.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (31 samples, 3.71%)</title><rect x="880" y="228" width="44" height="15" fill="rgb(217,222,29)"/><text x="883.00" y="238.50">_run..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (30 samples, 3.59%)</title><rect x="882" y="244" width="42" height="15" fill="rgb(240,222,16)"/><text x="885.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.20%)</title><rect x="910" y="260" width="14" height="15" fill="rgb(218,160,50)"/><text x="913.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.08%)</title><rect x="911" y="276" width="13" height="15" fill="rgb(250,37,53)"/><text x="914.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.12%)</title><rect x="923" y="292" width="1" height="15" fill="rgb(238,143,54)"/><text x="926.00" y="302.50"></text></g><g><title>0x7ff9f1fe8d21 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="928" y="164" width="2" height="15" fill="rgb(218,52,24)"/><text x="931.00" y="174.50"></text></g><g><title>0x7ff9f1f2b144 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="931" y="180" width="2" height="15" fill="rgb(236,198,43)"/><text x="934.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.12%)</title><rect x="933" y="180" width="1" height="15" fill="rgb(219,17,2)"/><text x="936.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.12%)</title><rect x="933" y="196" width="1" height="15" fill="rgb(251,150,37)"/><text x="936.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.12%)</title><rect x="938" y="244" width="2" height="15" fill="rgb(216,220,6)"/><text x="941.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.12%)</title><rect x="938" y="260" width="2" height="15" fill="rgb(236,187,40)"/><text x="941.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.12%)</title><rect x="938" y="276" width="2" height="15" fill="rgb(244,144,19)"/><text x="941.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.12%)</title><rect x="938" y="292" width="2" height="15" fill="rgb(242,124,48)"/><text x="941.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.12%)</title><rect x="938" y="308" width="2" height="15" fill="rgb(214,146,1)"/><text x="941.00" y="318.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.12%)</title><rect x="940" y="260" width="1" height="15" fill="rgb(206,204,44)"/><text x="943.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.12%)</title><rect x="941" y="308" width="1" height="15" fill="rgb(211,211,9)"/><text x="944.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="941" y="324" width="1" height="15" fill="rgb(244,77,15)"/><text x="944.00" y="334.50"></text></g><g><title>0x7ff9f1f0bb12 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="941" y="340" width="1" height="15" fill="rgb(213,150,53)"/><text x="944.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.24%)</title><rect x="941" y="292" width="3" height="15" fill="rgb(251,75,25)"/><text x="944.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.12%)</title><rect x="942" y="308" width="2" height="15" fill="rgb(244,78,23)"/><text x="945.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.12%)</title><rect x="942" y="324" width="2" height="15" fill="rgb(233,80,6)"/><text x="945.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.12%)</title><rect x="944" y="292" width="1" height="15" fill="rgb(236,220,28)"/><text x="947.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.12%)</title><rect x="944" y="308" width="1" height="15" fill="rgb(218,134,17)"/><text x="947.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.12%)</title><rect x="944" y="324" width="1" height="15" fill="rgb(223,220,44)"/><text x="947.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.12%)</title><rect x="944" y="340" width="1" height="15" fill="rgb(230,18,12)"/><text x="947.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 0.96%)</title><rect x="945" y="308" width="12" height="15" fill="rgb(228,172,26)"/><text x="948.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (6 samples, 0.72%)</title><rect x="948" y="324" width="9" height="15" fill="rgb(210,24,46)"/><text x="951.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (14 samples, 1.67%)</title><rect x="941" y="276" width="20" height="15" fill="rgb(246,199,45)"/><text x="944.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (11 samples, 1.32%)</title><rect x="945" y="292" width="16" height="15" fill="rgb(251,32,4)"/><text x="948.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.36%)</title><rect x="957" y="308" width="4" height="15" fill="rgb(207,101,32)"/><text x="960.00" y="318.50"></text></g><g><title>array_sum (methods.c) (20 samples, 2.39%)</title><rect x="934" y="180" width="28" height="15" fill="rgb(216,82,5)"/><text x="937.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (20 samples, 2.39%)</title><rect x="934" y="196" width="28" height="15" fill="rgb(215,193,2)"/><text x="937.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 2.27%)</title><rect x="935" y="212" width="27" height="15" fill="rgb(207,119,11)"/><text x="938.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 2.15%)</title><rect x="937" y="228" width="25" height="15" fill="rgb(225,16,20)"/><text x="940.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (16 samples, 1.91%)</title><rect x="940" y="244" width="22" height="15" fill="rgb(223,151,46)"/><text x="943.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (15 samples, 1.79%)</title><rect x="941" y="260" width="21" height="15" fill="rgb(227,126,5)"/><text x="944.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.12%)</title><rect x="961" y="276" width="1" height="15" fill="rgb(228,8,46)"/><text x="964.00" y="286.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.12%)</title><rect x="961" y="292" width="1" height="15" fill="rgb(224,181,34)"/><text x="964.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.12%)</title><rect x="965" y="276" width="1" height="15" fill="rgb(233,131,13)"/><text x="968.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.12%)</title><rect x="965" y="292" width="1" height="15" fill="rgb(229,138,12)"/><text x="968.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.12%)</title><rect x="965" y="308" width="1" height="15" fill="rgb(249,40,25)"/><text x="968.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.12%)</title><rect x="965" y="324" width="1" height="15" fill="rgb(222,212,34)"/><text x="968.00" y="334.50"></text></g><g><title>0x7ff9f1f2ad62 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="968" y="324" width="1" height="15" fill="rgb(212,112,2)"/><text x="971.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 0.84%)</title><rect x="964" y="228" width="10" height="15" fill="rgb(245,191,19)"/><text x="967.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 0.84%)</title><rect x="964" y="244" width="10" height="15" fill="rgb(206,174,27)"/><text x="967.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 0.84%)</title><rect x="964" y="260" width="10" height="15" fill="rgb(208,219,5)"/><text x="967.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 0.60%)</title><rect x="966" y="276" width="8" height="15" fill="rgb(232,202,38)"/><text x="969.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.60%)</title><rect x="966" y="292" width="8" height="15" fill="rgb(232,90,46)"/><text x="969.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.60%)</title><rect x="966" y="308" width="8" height="15" fill="rgb(237,117,10)"/><text x="969.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (3 samples, 0.36%)</title><rect x="969" y="324" width="5" height="15" fill="rgb(220,225,34)"/><text x="972.00" y="334.50"></text></g><g><title>array_add (number.c) (8 samples, 0.96%)</title><rect x="964" y="196" width="11" height="15" fill="rgb(225,215,25)"/><text x="967.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 0.96%)</title><rect x="964" y="212" width="11" height="15" fill="rgb(251,166,11)"/><text x="967.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.12%)</title><rect x="974" y="228" width="1" height="15" fill="rgb(226,5,13)"/><text x="977.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.12%)</title><rect x="974" y="244" width="1" height="15" fill="rgb(236,68,17)"/><text x="977.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.12%)</title><rect x="975" y="196" width="1" height="15" fill="rgb(213,88,43)"/><text x="978.00" y="206.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.12%)</title><rect x="975" y="212" width="1" height="15" fill="rgb(235,219,19)"/><text x="978.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.12%)</title><rect x="975" y="228" width="1" height="15" fill="rgb(220,57,0)"/><text x="978.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.24%)</title><rect x="986" y="212" width="3" height="15" fill="rgb(214,87,30)"/><text x="989.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.12%)</title><rect x="989" y="212" width="1" height="15" fill="rgb(228,223,10)"/><text x="992.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="996" y="228" width="2" height="15" fill="rgb(238,115,24)"/><text x="999.00" y="238.50"></text></g><g><title>0x7ff9f1f20e7a (libc-2.29.so) (1 samples, 0.12%)</title><rect x="996" y="244" width="2" height="15" fill="rgb(231,10,51)"/><text x="999.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 0.72%)</title><rect x="990" y="212" width="9" height="15" fill="rgb(243,154,34)"/><text x="993.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.12%)</title><rect x="998" y="228" width="1" height="15" fill="rgb(235,78,44)"/><text x="1001.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.12%)</title><rect x="999" y="212" width="1" height="15" fill="rgb(225,28,34)"/><text x="1002.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.24%)</title><rect x="1000" y="212" width="3" height="15" fill="rgb(248,34,42)"/><text x="1003.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.24%)</title><rect x="1000" y="228" width="3" height="15" fill="rgb(231,133,17)"/><text x="1003.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.12%)</title><rect x="1002" y="244" width="1" height="15" fill="rgb(224,216,12)"/><text x="1005.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.12%)</title><rect x="1003" y="212" width="2" height="15" fill="rgb(229,37,31)"/><text x="1006.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.12%)</title><rect x="1003" y="228" width="2" height="15" fill="rgb(245,14,52)"/><text x="1006.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (21 samples, 2.51%)</title><rect x="976" y="196" width="30" height="15" fill="rgb(249,132,53)"/><text x="979.00" y="206.50">ch..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.12%)</title><rect x="1005" y="212" width="1" height="15" fill="rgb(210,136,9)"/><text x="1008.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.12%)</title><rect x="1005" y="228" width="1" height="15" fill="rgb(219,18,52)"/><text x="1008.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.12%)</title><rect x="1014" y="228" width="2" height="15" fill="rgb(226,105,32)"/><text x="1017.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 0.96%)</title><rect x="1006" y="196" width="11" height="15" fill="rgb(216,96,53)"/><text x="1009.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 0.96%)</title><rect x="1006" y="212" width="11" height="15" fill="rgb(212,11,21)"/><text x="1009.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="1016" y="228" width="1" height="15" fill="rgb(241,13,3)"/><text x="1019.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.24%)</title><rect x="1019" y="212" width="3" height="15" fill="rgb(205,221,8)"/><text x="1022.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (28 samples, 3.35%)</title><rect x="1022" y="212" width="39" height="15" fill="rgb(210,102,19)"/><text x="1025.00" y="222.50">dge..</text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src) (1 samples, 0.12%)</title><rect x="1061" y="276" width="1" height="15" fill="rgb(207,63,7)"/><text x="1064.00" y="286.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.12%)</title><rect x="1065" y="308" width="2" height="15" fill="rgb(246,209,50)"/><text x="1068.00" y="318.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.56%)</title><rect x="1062" y="276" width="19" height="15" fill="rgb(212,104,41)"/><text x="1065.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 1.56%)</title><rect x="1062" y="292" width="19" height="15" fill="rgb(219,218,46)"/><text x="1065.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (10 samples, 1.20%)</title><rect x="1067" y="308" width="14" height="15" fill="rgb(233,214,54)"/><text x="1070.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (15 samples, 1.79%)</title><rect x="1061" y="260" width="21" height="15" fill="rgb(206,107,46)"/><text x="1064.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.12%)</title><rect x="1081" y="276" width="1" height="15" fill="rgb(234,84,32)"/><text x="1084.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (24 samples, 2.87%)</title><rect x="1082" y="292" width="34" height="15" fill="rgb(234,218,20)"/><text x="1085.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (24 samples, 2.87%)</title><rect x="1082" y="308" width="34" height="15" fill="rgb(246,23,37)"/><text x="1085.00" y="318.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (24 samples, 2.87%)</title><rect x="1082" y="324" width="34" height="15" fill="rgb(223,161,39)"/><text x="1085.00" y="334.50">_a..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (25 samples, 2.99%)</title><rect x="1082" y="260" width="36" height="15" fill="rgb(218,202,33)"/><text x="1085.00" y="270.50">Npy..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (25 samples, 2.99%)</title><rect x="1082" y="276" width="36" height="15" fill="rgb(234,136,42)"/><text x="1085.00" y="286.50">npy..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.12%)</title><rect x="1116" y="292" width="2" height="15" fill="rgb(246,69,21)"/><text x="1119.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.12%)</title><rect x="1116" y="308" width="2" height="15" fill="rgb(207,38,23)"/><text x="1119.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.12%)</title><rect x="1116" y="324" width="2" height="15" fill="rgb(241,67,39)"/><text x="1119.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1116" y="340" width="2" height="15" fill="rgb(227,226,3)"/><text x="1119.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.12%)</title><rect x="1118" y="260" width="1" height="15" fill="rgb(224,98,1)"/><text x="1121.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.12%)</title><rect x="1118" y="276" width="1" height="15" fill="rgb(240,67,25)"/><text x="1121.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.12%)</title><rect x="1118" y="292" width="1" height="15" fill="rgb(225,59,14)"/><text x="1121.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.12%)</title><rect x="1118" y="308" width="1" height="15" fill="rgb(249,215,0)"/><text x="1121.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1119" y="260" width="1" height="15" fill="rgb(206,87,0)"/><text x="1122.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (113 samples, 13.52%)</title><rect x="962" y="180" width="160" height="15" fill="rgb(215,41,29)"/><text x="965.00" y="190.50">decision_function (s..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (74 samples, 8.85%)</title><rect x="1017" y="196" width="105" height="15" fill="rgb(205,204,16)"/><text x="1020.00" y="206.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (43 samples, 5.14%)</title><rect x="1061" y="212" width="61" height="15" fill="rgb(227,205,21)"/><text x="1064.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (43 samples, 5.14%)</title><rect x="1061" y="228" width="61" height="15" fill="rgb(250,66,50)"/><text x="1064.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (43 samples, 5.14%)</title><rect x="1061" y="244" width="61" height="15" fill="rgb(251,29,0)"/><text x="1064.00" y="254.50">PyUFun..</text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1120" y="260" width="2" height="15" fill="rgb(232,86,42)"/><text x="1123.00" y="270.50"></text></g><g><title>0x7ff9f1fe8130 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1122" y="260" width="1" height="15" fill="rgb(253,9,48)"/><text x="1125.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.24%)</title><rect x="1122" y="196" width="3" height="15" fill="rgb(225,142,38)"/><text x="1125.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.24%)</title><rect x="1122" y="212" width="3" height="15" fill="rgb(209,216,30)"/><text x="1125.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.24%)</title><rect x="1122" y="228" width="3" height="15" fill="rgb(225,8,34)"/><text x="1125.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (2 samples, 0.24%)</title><rect x="1122" y="244" width="3" height="15" fill="rgb(243,5,13)"/><text x="1125.00" y="254.50"></text></g><g><title>0x7ff9f1fe9004 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1123" y="260" width="2" height="15" fill="rgb(237,115,34)"/><text x="1126.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1126" y="212" width="1" height="15" fill="rgb(232,192,47)"/><text x="1129.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.12%)</title><rect x="1127" y="228" width="2" height="15" fill="rgb(216,62,3)"/><text x="1130.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.12%)</title><rect x="1127" y="244" width="2" height="15" fill="rgb(244,108,1)"/><text x="1130.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.12%)</title><rect x="1127" y="260" width="2" height="15" fill="rgb(220,126,22)"/><text x="1130.00" y="270.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.12%)</title><rect x="1127" y="276" width="2" height="15" fill="rgb(224,119,32)"/><text x="1130.00" y="286.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.12%)</title><rect x="1127" y="292" width="2" height="15" fill="rgb(247,165,46)"/><text x="1130.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (3 samples, 0.36%)</title><rect x="1129" y="244" width="4" height="15" fill="rgb(253,47,12)"/><text x="1132.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (3 samples, 0.36%)</title><rect x="1129" y="260" width="4" height="15" fill="rgb(214,223,42)"/><text x="1132.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (3 samples, 0.36%)</title><rect x="1129" y="276" width="4" height="15" fill="rgb(240,65,42)"/><text x="1132.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.36%)</title><rect x="1129" y="292" width="4" height="15" fill="rgb(254,117,5)"/><text x="1132.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 0.84%)</title><rect x="1129" y="228" width="10" height="15" fill="rgb(220,150,35)"/><text x="1132.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.48%)</title><rect x="1133" y="244" width="6" height="15" fill="rgb(249,32,10)"/><text x="1136.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.48%)</title><rect x="1133" y="260" width="6" height="15" fill="rgb(249,143,25)"/><text x="1136.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.48%)</title><rect x="1133" y="276" width="6" height="15" fill="rgb(231,67,26)"/><text x="1136.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.12%)</title><rect x="1137" y="292" width="2" height="15" fill="rgb(215,180,16)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7ff9d4331254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="1139" y="260" width="1" height="15" fill="rgb(245,227,13)"/><text x="1142.00" y="270.50"></text></g><g><title>0x7ff9d443a9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="1140" y="276" width="2" height="15" fill="rgb(242,199,37)"/><text x="1143.00" y="286.50"></text></g><g><title>0x7ff9f20dcba0 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1149" y="292" width="4" height="15" fill="rgb(223,47,25)"/><text x="1152.00" y="302.50"></text></g><g><title>0x7ff9f20dcbb4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1153" y="292" width="1" height="15" fill="rgb(210,10,53)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7ff9f20dcbd3 (libm-2.29.so) (2 samples, 0.24%)</title><rect x="1154" y="292" width="3" height="15" fill="rgb(210,45,6)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7ff9f20dcbe7 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1157" y="292" width="1" height="15" fill="rgb(237,150,27)"/><text x="1160.00" y="302.50"></text></g><g><title>0x7ff9f20dcc07 (libm-2.29.so) (3 samples, 0.36%)</title><rect x="1158" y="292" width="5" height="15" fill="rgb(226,88,4)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7ff9f20dcc2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1163" y="292" width="1" height="15" fill="rgb(210,148,11)"/><text x="1166.00" y="302.50"></text></g><g><title>0x7ff9f20dcc3e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1164" y="292" width="2" height="15" fill="rgb(208,75,16)"/><text x="1167.00" y="302.50"></text></g><g><title>0x7ff9d4331265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (19 samples, 2.27%)</title><rect x="1140" y="260" width="27" height="15" fill="rgb(246,223,29)"/><text x="1143.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (18 samples, 2.15%)</title><rect x="1142" y="276" width="25" height="15" fill="rgb(208,37,49)"/><text x="1145.00" y="286.50">e..</text></g><g><title>0x7ff9f20dcc56 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1166" y="292" width="1" height="15" fill="rgb(215,37,15)"/><text x="1169.00" y="302.50"></text></g><g><title>0x7ff9d4331275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="1167" y="260" width="1" height="15" fill="rgb(242,157,10)"/><text x="1170.00" y="270.50"></text></g><g><title>0x7ff9d43109dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (30 samples, 3.59%)</title><rect x="1139" y="244" width="42" height="15" fill="rgb(206,211,5)"/><text x="1142.00" y="254.50">0x7..</text></g><g><title>0x7ff9d4331279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.08%)</title><rect x="1168" y="260" width="13" height="15" fill="rgb(213,53,35)"/><text x="1171.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (40 samples, 4.78%)</title><rect x="1127" y="212" width="57" height="15" fill="rgb(232,124,36)"/><text x="1130.00" y="222.50">execut..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (32 samples, 3.83%)</title><rect x="1139" y="228" width="45" height="15" fill="rgb(212,226,28)"/><text x="1142.00" y="238.50">triv..</text></g><g><title>0x7ff9d43109e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.24%)</title><rect x="1181" y="244" width="3" height="15" fill="rgb(215,185,50)"/><text x="1184.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (181 samples, 21.65%)</title><rect x="930" y="164" width="255" height="15" fill="rgb(234,180,43)"/><text x="933.00" y="174.50">_predict_proba_lr (sklearn/linear_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (45 samples, 5.38%)</title><rect x="1122" y="180" width="63" height="15" fill="rgb(224,221,34)"/><text x="1125.00" y="190.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (43 samples, 5.14%)</title><rect x="1125" y="196" width="60" height="15" fill="rgb(214,159,53)"/><text x="1128.00" y="206.50">PyUFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.12%)</title><rect x="1184" y="212" width="1" height="15" fill="rgb(232,46,8)"/><text x="1187.00" y="222.50"></text></g><g><title>all (836 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,39,11)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (836 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(225,93,8)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (188 samples, 22.49%)</title><rect x="924" y="68" width="266" height="15" fill="rgb(214,64,2)"/><text x="927.00" y="78.50">profile_skl (bench_LogisticRegressi..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (188 samples, 22.49%)</title><rect x="924" y="84" width="266" height="15" fill="rgb(244,9,42)"/><text x="927.00" y="94.50">setup_profile (bench_LogisticRegres..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_50_12_float_.py) (188 samples, 22.49%)</title><rect x="924" y="100" width="266" height="15" fill="rgb(214,18,12)"/><text x="927.00" y="110.50">profile (bench_LogisticRegression_l..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (186 samples, 22.25%)</title><rect x="927" y="116" width="263" height="15" fill="rgb(252,187,19)"/><text x="930.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (186 samples, 22.25%)</title><rect x="927" y="132" width="263" height="15" fill="rgb(226,118,34)"/><text x="930.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (186 samples, 22.25%)</title><rect x="927" y="148" width="263" height="15" fill="rgb(242,228,37)"/><text x="930.00" y="158.50">predict_proba (sklearn/linear_model..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.36%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(227,121,53)"/><text x="1188.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.24%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(233,187,19)"/><text x="1190.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.24%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(254,167,9)"/><text x="1190.00" y="206.50"></text></g></g></svg>