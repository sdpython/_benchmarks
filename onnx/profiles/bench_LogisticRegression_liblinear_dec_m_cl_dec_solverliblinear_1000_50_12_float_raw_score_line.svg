<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:18) (2 samples, 0.42%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(227,77,1)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.42%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(232,65,12)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (2 samples, 0.42%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(233,202,53)"/><text x="13.00" y="142.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (2 samples, 0.42%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(227,124,48)"/><text x="13.00" y="158.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (2 samples, 0.42%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(207,42,33)"/><text x="13.00" y="174.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.42%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(224,101,27)"/><text x="13.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 0.42%)</title><rect x="19" y="164" width="5" height="15" fill="rgb(246,183,37)"/><text x="22.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.21%)</title><rect x="27" y="196" width="2" height="15" fill="rgb(250,77,11)"/><text x="30.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.42%)</title><rect x="27" y="180" width="5" height="15" fill="rgb(218,5,4)"/><text x="30.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.21%)</title><rect x="29" y="196" width="3" height="15" fill="rgb(227,117,7)"/><text x="32.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (6 samples, 1.26%)</title><rect x="19" y="148" width="15" height="15" fill="rgb(234,129,31)"/><text x="22.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.84%)</title><rect x="24" y="164" width="10" height="15" fill="rgb(243,60,18)"/><text x="27.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.21%)</title><rect x="32" y="180" width="2" height="15" fill="rgb(228,123,5)"/><text x="35.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (2 samples, 0.42%)</title><rect x="34" y="164" width="5" height="15" fill="rgb(217,29,23)"/><text x="37.00" y="174.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.21%)</title><rect x="42" y="180" width="2" height="15" fill="rgb(230,150,17)"/><text x="45.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (3 samples, 0.63%)</title><rect x="44" y="180" width="7" height="15" fill="rgb(233,218,17)"/><text x="47.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 1.26%)</title><rect x="39" y="164" width="15" height="15" fill="rgb(247,66,4)"/><text x="42.00" y="174.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.21%)</title><rect x="51" y="180" width="3" height="15" fill="rgb(222,212,8)"/><text x="54.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.42%)</title><rect x="54" y="164" width="5" height="15" fill="rgb(225,94,3)"/><text x="57.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.42%)</title><rect x="54" y="180" width="5" height="15" fill="rgb(209,149,23)"/><text x="57.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.42%)</title><rect x="54" y="196" width="5" height="15" fill="rgb(253,220,18)"/><text x="57.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.21%)</title><rect x="59" y="164" width="2" height="15" fill="rgb(212,60,22)"/><text x="62.00" y="174.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.21%)</title><rect x="59" y="180" width="2" height="15" fill="rgb(229,111,34)"/><text x="62.00" y="190.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1756) (1 samples, 0.21%)</title><rect x="59" y="196" width="2" height="15" fill="rgb(226,168,29)"/><text x="62.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.21%)</title><rect x="61" y="164" width="3" height="15" fill="rgb(250,84,46)"/><text x="64.00" y="174.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.21%)</title><rect x="61" y="180" width="3" height="15" fill="rgb(237,83,38)"/><text x="64.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.21%)</title><rect x="64" y="164" width="2" height="15" fill="rgb(210,50,7)"/><text x="67.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.21%)</title><rect x="64" y="180" width="2" height="15" fill="rgb(218,35,52)"/><text x="67.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.21%)</title><rect x="66" y="196" width="3" height="15" fill="rgb(253,185,43)"/><text x="69.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (3 samples, 0.63%)</title><rect x="66" y="180" width="8" height="15" fill="rgb(252,79,32)"/><text x="69.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (2 samples, 0.42%)</title><rect x="69" y="196" width="5" height="15" fill="rgb(240,197,29)"/><text x="72.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (4 samples, 0.84%)</title><rect x="66" y="164" width="10" height="15" fill="rgb(209,208,35)"/><text x="69.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.21%)</title><rect x="74" y="180" width="2" height="15" fill="rgb(240,143,43)"/><text x="77.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.63%)</title><rect x="76" y="180" width="8" height="15" fill="rgb(232,158,46)"/><text x="79.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.84%)</title><rect x="76" y="164" width="10" height="15" fill="rgb(206,145,11)"/><text x="79.00" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.21%)</title><rect x="84" y="180" width="2" height="15" fill="rgb(210,32,10)"/><text x="87.00" y="190.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.21%)</title><rect x="84" y="196" width="2" height="15" fill="rgb(235,170,10)"/><text x="87.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.63%)</title><rect x="86" y="180" width="7" height="15" fill="rgb(254,4,43)"/><text x="89.00" y="190.50"></text></g><g><title>0x7ff6c150de7a (libc-2.29.so) (1 samples, 0.21%)</title><rect x="91" y="196" width="2" height="15" fill="rgb(218,149,15)"/><text x="94.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.21%)</title><rect x="93" y="180" width="3" height="15" fill="rgb(225,214,44)"/><text x="96.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.21%)</title><rect x="93" y="196" width="3" height="15" fill="rgb(212,102,42)"/><text x="96.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.21%)</title><rect x="96" y="180" width="2" height="15" fill="rgb(246,226,51)"/><text x="99.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.84%)</title><rect x="98" y="180" width="10" height="15" fill="rgb(248,100,9)"/><text x="101.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.42%)</title><rect x="103" y="196" width="5" height="15" fill="rgb(252,149,32)"/><text x="106.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.21%)</title><rect x="106" y="212" width="2" height="15" fill="rgb(230,9,18)"/><text x="109.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 2.09%)</title><rect x="86" y="164" width="25" height="15" fill="rgb(253,157,30)"/><text x="89.00" y="174.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.21%)</title><rect x="108" y="180" width="3" height="15" fill="rgb(230,153,0)"/><text x="111.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (32 samples, 6.69%)</title><rect x="34" y="148" width="79" height="15" fill="rgb(246,113,4)"/><text x="37.00" y="158.50">decision_..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.21%)</title><rect x="111" y="164" width="2" height="15" fill="rgb(218,218,21)"/><text x="114.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.21%)</title><rect x="113" y="148" width="3" height="15" fill="rgb(212,142,11)"/><text x="116.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.21%)</title><rect x="118" y="180" width="3" height="15" fill="rgb(253,132,32)"/><text x="121.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:460) (1 samples, 0.21%)</title><rect x="118" y="196" width="3" height="15" fill="rgb(205,175,14)"/><text x="121.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4724) (1 samples, 0.21%)</title><rect x="121" y="180" width="2" height="15" fill="rgb(207,129,29)"/><text x="124.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.21%)</title><rect x="123" y="196" width="3" height="15" fill="rgb(217,103,23)"/><text x="126.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.21%)</title><rect x="123" y="212" width="3" height="15" fill="rgb(254,198,18)"/><text x="126.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.21%)</title><rect x="126" y="196" width="2" height="15" fill="rgb(251,77,27)"/><text x="129.00" y="206.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.21%)</title><rect x="126" y="212" width="2" height="15" fill="rgb(252,194,26)"/><text x="129.00" y="222.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.21%)</title><rect x="126" y="228" width="2" height="15" fill="rgb(214,116,29)"/><text x="129.00" y="238.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1795) (1 samples, 0.21%)</title><rect x="126" y="244" width="2" height="15" fill="rgb(207,112,20)"/><text x="129.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.21%)</title><rect x="128" y="196" width="2" height="15" fill="rgb(222,5,53)"/><text x="131.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.21%)</title><rect x="128" y="212" width="2" height="15" fill="rgb(220,48,23)"/><text x="131.00" y="222.50"></text></g><g><title>_find_array_method (ufunc_object.c:167) (1 samples, 0.21%)</title><rect x="128" y="228" width="2" height="15" fill="rgb(219,16,10)"/><text x="131.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.21%)</title><rect x="130" y="244" width="3" height="15" fill="rgb(215,50,47)"/><text x="133.00" y="254.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1871) (1 samples, 0.21%)</title><rect x="130" y="260" width="3" height="15" fill="rgb(238,128,45)"/><text x="133.00" y="270.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h:155) (1 samples, 0.21%)</title><rect x="130" y="276" width="3" height="15" fill="rgb(227,119,5)"/><text x="133.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.42%)</title><rect x="130" y="228" width="5" height="15" fill="rgb(222,134,37)"/><text x="133.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.21%)</title><rect x="133" y="244" width="2" height="15" fill="rgb(209,47,25)"/><text x="136.00" y="254.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1288) (1 samples, 0.21%)</title><rect x="133" y="260" width="2" height="15" fill="rgb(207,19,13)"/><text x="136.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.21%)</title><rect x="135" y="276" width="3" height="15" fill="rgb(250,36,9)"/><text x="138.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.42%)</title><rect x="138" y="276" width="5" height="15" fill="rgb(223,103,22)"/><text x="141.00" y="286.50"></text></g><g><title>0x7ff6c1517d50 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="143" y="292" width="2" height="15" fill="rgb(230,8,2)"/><text x="146.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.26%)</title><rect x="135" y="228" width="15" height="15" fill="rgb(246,19,5)"/><text x="138.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.26%)</title><rect x="135" y="244" width="15" height="15" fill="rgb(222,150,8)"/><text x="138.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.26%)</title><rect x="135" y="260" width="15" height="15" fill="rgb(213,96,25)"/><text x="138.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.63%)</title><rect x="143" y="276" width="7" height="15" fill="rgb(234,178,22)"/><text x="146.00" y="286.50"></text></g><g><title>0x7ff6c1517d6f (libc-2.29.so) (2 samples, 0.42%)</title><rect x="145" y="292" width="5" height="15" fill="rgb(240,64,36)"/><text x="148.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.21%)</title><rect x="150" y="276" width="3" height="15" fill="rgb(217,87,19)"/><text x="153.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.21%)</title><rect x="150" y="292" width="3" height="15" fill="rgb(212,93,32)"/><text x="153.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.42%)</title><rect x="150" y="228" width="5" height="15" fill="rgb(225,103,30)"/><text x="153.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.42%)</title><rect x="150" y="244" width="5" height="15" fill="rgb(216,100,45)"/><text x="153.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.42%)</title><rect x="150" y="260" width="5" height="15" fill="rgb(208,202,41)"/><text x="153.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.21%)</title><rect x="153" y="276" width="2" height="15" fill="rgb(215,17,25)"/><text x="156.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.21%)</title><rect x="153" y="292" width="2" height="15" fill="rgb(219,222,23)"/><text x="156.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.21%)</title><rect x="155" y="244" width="3" height="15" fill="rgb(216,159,45)"/><text x="158.00" y="254.50"></text></g><g><title>0x7ff6c14f7f71 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="155" y="260" width="3" height="15" fill="rgb(235,188,7)"/><text x="158.00" y="270.50"></text></g><g><title>array_add (number.c:330) (17 samples, 3.56%)</title><rect x="118" y="164" width="42" height="15" fill="rgb(234,196,31)"/><text x="121.00" y="174.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 3.14%)</title><rect x="123" y="180" width="37" height="15" fill="rgb(237,17,22)"/><text x="126.00" y="190.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 2.51%)</title><rect x="130" y="196" width="30" height="15" fill="rgb(215,126,3)"/><text x="133.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (12 samples, 2.51%)</title><rect x="130" y="212" width="30" height="15" fill="rgb(236,3,0)"/><text x="133.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.42%)</title><rect x="155" y="228" width="5" height="15" fill="rgb(243,213,11)"/><text x="158.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.21%)</title><rect x="158" y="244" width="2" height="15" fill="rgb(208,92,54)"/><text x="161.00" y="254.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.84%)</title><rect x="160" y="180" width="10" height="15" fill="rgb(224,156,40)"/><text x="163.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (34 samples, 7.11%)</title><rect x="170" y="180" width="84" height="15" fill="rgb(206,44,18)"/><text x="173.00" y="190.50">dgemm_ker..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2645) (1 samples, 0.21%)</title><rect x="254" y="212" width="2" height="15" fill="rgb(217,119,22)"/><text x="257.00" y="222.50"></text></g><g><title>_validate_num_dims (ufunc_object.c:2047) (1 samples, 0.21%)</title><rect x="254" y="228" width="2" height="15" fill="rgb(233,77,21)"/><text x="257.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.21%)</title><rect x="256" y="244" width="3" height="15" fill="rgb(252,62,13)"/><text x="259.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.21%)</title><rect x="256" y="260" width="3" height="15" fill="rgb(211,210,8)"/><text x="259.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.21%)</title><rect x="256" y="276" width="3" height="15" fill="rgb(248,183,37)"/><text x="259.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.21%)</title><rect x="256" y="292" width="3" height="15" fill="rgb(210,74,35)"/><text x="259.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.21%)</title><rect x="256" y="308" width="3" height="15" fill="rgb(240,218,38)"/><text x="259.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.21%)</title><rect x="256" y="324" width="3" height="15" fill="rgb(238,64,24)"/><text x="259.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.21%)</title><rect x="256" y="340" width="3" height="15" fill="rgb(218,60,34)"/><text x="259.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="256" y="356" width="3" height="15" fill="rgb(228,104,38)"/><text x="259.00" y="366.50"></text></g><g><title>0x7ff6c14f8b68 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="256" y="372" width="3" height="15" fill="rgb(211,41,14)"/><text x="259.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.21%)</title><rect x="259" y="244" width="2" height="15" fill="rgb(251,145,45)"/><text x="262.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.21%)</title><rect x="259" y="260" width="2" height="15" fill="rgb(228,81,20)"/><text x="262.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.21%)</title><rect x="259" y="276" width="2" height="15" fill="rgb(252,75,14)"/><text x="262.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.21%)</title><rect x="259" y="292" width="2" height="15" fill="rgb(248,129,5)"/><text x="262.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.21%)</title><rect x="259" y="308" width="2" height="15" fill="rgb(237,84,47)"/><text x="262.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.21%)</title><rect x="259" y="324" width="2" height="15" fill="rgb(215,163,11)"/><text x="262.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (30 samples, 6.28%)</title><rect x="261" y="244" width="74" height="15" fill="rgb(241,5,49)"/><text x="264.00" y="254.50">npyiter_..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (30 samples, 6.28%)</title><rect x="261" y="260" width="74" height="15" fill="rgb(217,188,34)"/><text x="264.00" y="270.50">PyArray_..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (30 samples, 6.28%)</title><rect x="261" y="276" width="74" height="15" fill="rgb(205,97,38)"/><text x="264.00" y="286.50">raw_arra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (30 samples, 6.28%)</title><rect x="261" y="292" width="74" height="15" fill="rgb(227,202,30)"/><text x="264.00" y="302.50">_aligned..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (2 samples, 0.42%)</title><rect x="335" y="244" width="5" height="15" fill="rgb(246,209,9)"/><text x="338.00" y="254.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:2016) (2 samples, 0.42%)</title><rect x="335" y="260" width="5" height="15" fill="rgb(254,147,34)"/><text x="338.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (35 samples, 7.32%)</title><rect x="256" y="212" width="87" height="15" fill="rgb(235,100,38)"/><text x="259.00" y="222.50">PyUFunc_Ge..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (35 samples, 7.32%)</title><rect x="256" y="228" width="87" height="15" fill="rgb(252,91,24)"/><text x="259.00" y="238.50">NpyIter_Ad..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.21%)</title><rect x="340" y="244" width="3" height="15" fill="rgb(235,165,4)"/><text x="343.00" y="254.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.21%)</title><rect x="340" y="260" width="3" height="15" fill="rgb(226,129,3)"/><text x="343.00" y="270.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.21%)</title><rect x="340" y="276" width="3" height="15" fill="rgb(226,70,36)"/><text x="343.00" y="286.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="343" y="260" width="2" height="15" fill="rgb(235,215,41)"/><text x="346.00" y="270.50"></text></g><g><title>0x7ff6bea437e0 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="343" y="276" width="2" height="15" fill="rgb(227,203,27)"/><text x="346.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (62 samples, 12.97%)</title><rect x="254" y="196" width="153" height="15" fill="rgb(208,159,6)"/><text x="257.00" y="206.50">PyUFunc_GenericFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (26 samples, 5.44%)</title><rect x="343" y="212" width="64" height="15" fill="rgb(211,198,8)"/><text x="346.00" y="222.50">PyUFunc..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (26 samples, 5.44%)</title><rect x="343" y="228" width="64" height="15" fill="rgb(213,152,22)"/><text x="346.00" y="238.50">DOUBLE_..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 5.44%)</title><rect x="343" y="244" width="64" height="15" fill="rgb(215,226,50)"/><text x="346.00" y="254.50">cblas_d..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (25 samples, 5.23%)</title><rect x="345" y="260" width="62" height="15" fill="rgb(232,104,33)"/><text x="348.00" y="270.50">dgemm_..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 5.02%)</title><rect x="348" y="276" width="59" height="15" fill="rgb(244,111,48)"/><text x="351.00" y="286.50">dgemm_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (101 samples, 21.13%)</title><rect x="160" y="164" width="249" height="15" fill="rgb(224,197,32)"/><text x="163.00" y="174.50">safe_sparse_dot (sklearn/utils/ex..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (63 samples, 13.18%)</title><rect x="254" y="180" width="155" height="15" fill="rgb(210,107,23)"/><text x="257.00" y="190.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.21%)</title><rect x="407" y="196" width="2" height="15" fill="rgb(216,202,28)"/><text x="410.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:252) (161 samples, 33.68%)</title><rect x="19" y="132" width="398" height="15" fill="rgb(221,75,27)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:25..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (122 samples, 25.52%)</title><rect x="116" y="148" width="301" height="15" fill="rgb(237,177,27)"/><text x="119.00" y="158.50">decision_function (sklearn/linear_model/..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (3 samples, 0.63%)</title><rect x="409" y="164" width="8" height="15" fill="rgb(224,126,51)"/><text x="412.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.21%)</title><rect x="414" y="180" width="3" height="15" fill="rgb(212,226,45)"/><text x="417.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:38) (167 samples, 34.94%)</title><rect x="10" y="52" width="412" height="15" fill="rgb(214,33,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_de..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:37) (167 samples, 34.94%)</title><rect x="10" y="68" width="412" height="15" fill="rgb(224,17,34)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_m_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:29) (167 samples, 34.94%)</title><rect x="10" y="84" width="412" height="15" fill="rgb(249,160,22)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:23) (165 samples, 34.52%)</title><rect x="14" y="100" width="408" height="15" fill="rgb(227,195,22)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_de..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (165 samples, 34.52%)</title><rect x="14" y="116" width="408" height="15" fill="rgb(245,114,22)"/><text x="17.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.42%)</title><rect x="417" y="132" width="5" height="15" fill="rgb(245,137,41)"/><text x="420.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:1) (1 samples, 0.21%)</title><rect x="422" y="148" width="2" height="15" fill="rgb(231,0,42)"/><text x="425.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="164" width="2" height="15" fill="rgb(253,41,3)"/><text x="425.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="180" width="2" height="15" fill="rgb(216,24,5)"/><text x="425.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="196" width="2" height="15" fill="rgb(218,14,0)"/><text x="425.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="422" y="212" width="2" height="15" fill="rgb(229,191,4)"/><text x="425.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="228" width="2" height="15" fill="rgb(215,121,20)"/><text x="425.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.21%)</title><rect x="422" y="244" width="2" height="15" fill="rgb(217,213,0)"/><text x="425.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="422" y="260" width="2" height="15" fill="rgb(226,50,19)"/><text x="425.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="276" width="2" height="15" fill="rgb(238,132,1)"/><text x="425.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="292" width="2" height="15" fill="rgb(225,67,33)"/><text x="425.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="308" width="2" height="15" fill="rgb(250,14,10)"/><text x="425.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="324" width="2" height="15" fill="rgb(218,73,21)"/><text x="425.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="422" y="340" width="2" height="15" fill="rgb(238,36,3)"/><text x="425.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="356" width="2" height="15" fill="rgb(214,201,12)"/><text x="425.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.21%)</title><rect x="422" y="372" width="2" height="15" fill="rgb(213,136,28)"/><text x="425.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="422" y="388" width="2" height="15" fill="rgb(208,183,27)"/><text x="425.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="404" width="2" height="15" fill="rgb(230,214,38)"/><text x="425.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="420" width="2" height="15" fill="rgb(215,195,20)"/><text x="425.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="436" width="2" height="15" fill="rgb(223,161,20)"/><text x="425.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="452" width="2" height="15" fill="rgb(238,128,40)"/><text x="425.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="422" y="468" width="2" height="15" fill="rgb(229,36,53)"/><text x="425.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="484" width="2" height="15" fill="rgb(205,195,49)"/><text x="425.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.21%)</title><rect x="422" y="500" width="2" height="15" fill="rgb(250,27,28)"/><text x="425.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="422" y="516" width="2" height="15" fill="rgb(224,159,32)"/><text x="425.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="532" width="2" height="15" fill="rgb(215,226,5)"/><text x="425.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="548" width="2" height="15" fill="rgb(223,212,8)"/><text x="425.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="564" width="2" height="15" fill="rgb(230,147,4)"/><text x="425.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="580" width="2" height="15" fill="rgb(205,124,24)"/><text x="425.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="422" y="596" width="2" height="15" fill="rgb(239,139,33)"/><text x="425.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="612" width="2" height="15" fill="rgb(242,12,15)"/><text x="425.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.21%)</title><rect x="422" y="628" width="2" height="15" fill="rgb(237,172,42)"/><text x="425.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="644" width="2" height="15" fill="rgb(217,211,19)"/><text x="425.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="422" y="660" width="2" height="15" fill="rgb(244,141,33)"/><text x="425.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="676" width="2" height="15" fill="rgb(250,138,19)"/><text x="425.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="692" width="2" height="15" fill="rgb(224,213,23)"/><text x="425.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="708" width="2" height="15" fill="rgb(222,107,41)"/><text x="425.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="724" width="2" height="15" fill="rgb(230,80,19)"/><text x="425.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="422" y="740" width="2" height="15" fill="rgb(216,186,44)"/><text x="425.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="756" width="2" height="15" fill="rgb(206,142,5)"/><text x="425.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.21%)</title><rect x="422" y="772" width="2" height="15" fill="rgb(241,23,18)"/><text x="425.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="422" y="788" width="2" height="15" fill="rgb(227,4,42)"/><text x="425.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="804" width="2" height="15" fill="rgb(253,60,0)"/><text x="425.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="820" width="2" height="15" fill="rgb(212,74,9)"/><text x="425.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="836" width="2" height="15" fill="rgb(212,201,23)"/><text x="425.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="852" width="2" height="15" fill="rgb(212,166,49)"/><text x="425.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="422" y="868" width="2" height="15" fill="rgb(209,74,46)"/><text x="425.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="422" y="884" width="2" height="15" fill="rgb(210,166,38)"/><text x="425.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:16) (1 samples, 0.21%)</title><rect x="422" y="900" width="2" height="15" fill="rgb(216,55,17)"/><text x="425.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="422" y="916" width="2" height="15" fill="rgb(252,153,13)"/><text x="425.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="422" y="932" width="2" height="15" fill="rgb(236,78,27)"/><text x="425.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="422" y="948" width="2" height="15" fill="rgb(241,35,31)"/><text x="425.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="422" y="964" width="2" height="15" fill="rgb(225,204,32)"/><text x="425.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.21%)</title><rect x="422" y="980" width="2" height="15" fill="rgb(243,20,27)"/><text x="425.00" y="990.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.21%)</title><rect x="422" y="996" width="2" height="15" fill="rgb(231,100,22)"/><text x="425.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.21%)</title><rect x="424" y="852" width="3" height="15" fill="rgb(240,118,10)"/><text x="427.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.21%)</title><rect x="424" y="868" width="3" height="15" fill="rgb(207,169,48)"/><text x="427.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.21%)</title><rect x="424" y="884" width="3" height="15" fill="rgb(249,44,27)"/><text x="427.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.21%)</title><rect x="424" y="900" width="3" height="15" fill="rgb(206,120,22)"/><text x="427.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.21%)</title><rect x="424" y="916" width="3" height="15" fill="rgb(252,157,51)"/><text x="427.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.21%)</title><rect x="424" y="932" width="3" height="15" fill="rgb(206,10,27)"/><text x="427.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.21%)</title><rect x="424" y="948" width="3" height="15" fill="rgb(209,157,17)"/><text x="427.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="424" y="964" width="3" height="15" fill="rgb(234,219,21)"/><text x="427.00" y="974.50"></text></g><g><title>0x7ff6c1537237 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="424" y="980" width="3" height="15" fill="rgb(247,99,13)"/><text x="427.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:2) (3 samples, 0.63%)</title><rect x="424" y="148" width="8" height="15" fill="rgb(244,216,42)"/><text x="427.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="164" width="8" height="15" fill="rgb(227,140,25)"/><text x="427.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.63%)</title><rect x="424" y="180" width="8" height="15" fill="rgb(211,52,29)"/><text x="427.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="196" width="8" height="15" fill="rgb(211,96,42)"/><text x="427.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="212" width="8" height="15" fill="rgb(240,52,41)"/><text x="427.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.63%)</title><rect x="424" y="228" width="8" height="15" fill="rgb(235,84,51)"/><text x="427.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.63%)</title><rect x="424" y="244" width="8" height="15" fill="rgb(226,89,27)"/><text x="427.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.63%)</title><rect x="424" y="260" width="8" height="15" fill="rgb(238,43,26)"/><text x="427.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="276" width="8" height="15" fill="rgb(241,223,28)"/><text x="427.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.63%)</title><rect x="424" y="292" width="8" height="15" fill="rgb(243,161,34)"/><text x="427.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="308" width="8" height="15" fill="rgb(215,33,37)"/><text x="427.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.63%)</title><rect x="424" y="324" width="8" height="15" fill="rgb(228,163,52)"/><text x="427.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.63%)</title><rect x="424" y="340" width="8" height="15" fill="rgb(218,10,31)"/><text x="427.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.63%)</title><rect x="424" y="356" width="8" height="15" fill="rgb(226,128,10)"/><text x="427.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="372" width="8" height="15" fill="rgb(239,179,12)"/><text x="427.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.63%)</title><rect x="424" y="388" width="8" height="15" fill="rgb(221,227,35)"/><text x="427.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="404" width="8" height="15" fill="rgb(246,147,16)"/><text x="427.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.63%)</title><rect x="424" y="420" width="8" height="15" fill="rgb(211,88,12)"/><text x="427.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.63%)</title><rect x="424" y="436" width="8" height="15" fill="rgb(233,177,13)"/><text x="427.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.63%)</title><rect x="424" y="452" width="8" height="15" fill="rgb(239,145,10)"/><text x="427.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="468" width="8" height="15" fill="rgb(223,229,41)"/><text x="427.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.63%)</title><rect x="424" y="484" width="8" height="15" fill="rgb(248,194,39)"/><text x="427.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="500" width="8" height="15" fill="rgb(228,39,49)"/><text x="427.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.63%)</title><rect x="424" y="516" width="8" height="15" fill="rgb(210,84,28)"/><text x="427.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.63%)</title><rect x="424" y="532" width="8" height="15" fill="rgb(214,131,25)"/><text x="427.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.63%)</title><rect x="424" y="548" width="8" height="15" fill="rgb(228,228,34)"/><text x="427.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="564" width="8" height="15" fill="rgb(235,101,3)"/><text x="427.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.63%)</title><rect x="424" y="580" width="8" height="15" fill="rgb(234,108,10)"/><text x="427.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="596" width="8" height="15" fill="rgb(218,78,24)"/><text x="427.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.63%)</title><rect x="424" y="612" width="8" height="15" fill="rgb(246,180,46)"/><text x="427.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="628" width="8" height="15" fill="rgb(223,106,5)"/><text x="427.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="644" width="8" height="15" fill="rgb(205,126,27)"/><text x="427.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.63%)</title><rect x="424" y="660" width="8" height="15" fill="rgb(243,197,54)"/><text x="427.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.63%)</title><rect x="424" y="676" width="8" height="15" fill="rgb(207,77,39)"/><text x="427.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.63%)</title><rect x="424" y="692" width="8" height="15" fill="rgb(236,73,24)"/><text x="427.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="708" width="8" height="15" fill="rgb(214,11,36)"/><text x="427.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.63%)</title><rect x="424" y="724" width="8" height="15" fill="rgb(242,187,16)"/><text x="427.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="424" y="740" width="8" height="15" fill="rgb(233,138,11)"/><text x="427.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.63%)</title><rect x="424" y="756" width="8" height="15" fill="rgb(252,135,30)"/><text x="427.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.63%)</title><rect x="424" y="772" width="8" height="15" fill="rgb(232,50,25)"/><text x="427.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.63%)</title><rect x="424" y="788" width="8" height="15" fill="rgb(217,86,0)"/><text x="427.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.63%)</title><rect x="424" y="804" width="8" height="15" fill="rgb(247,212,19)"/><text x="427.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.63%)</title><rect x="424" y="820" width="8" height="15" fill="rgb(247,55,45)"/><text x="427.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.63%)</title><rect x="424" y="836" width="8" height="15" fill="rgb(216,221,17)"/><text x="427.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.42%)</title><rect x="427" y="852" width="5" height="15" fill="rgb(217,93,50)"/><text x="430.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.42%)</title><rect x="427" y="868" width="5" height="15" fill="rgb(220,30,3)"/><text x="430.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.21%)</title><rect x="429" y="884" width="3" height="15" fill="rgb(233,94,28)"/><text x="432.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.21%)</title><rect x="429" y="900" width="3" height="15" fill="rgb(250,156,46)"/><text x="432.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.21%)</title><rect x="429" y="916" width="3" height="15" fill="rgb(252,9,2)"/><text x="432.00" y="926.50"></text></g><g><title>splitext (posixpath.py:123) (1 samples, 0.21%)</title><rect x="429" y="932" width="3" height="15" fill="rgb(214,182,27)"/><text x="432.00" y="942.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.21%)</title><rect x="432" y="900" width="2" height="15" fill="rgb(207,15,34)"/><text x="435.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="432" y="916" width="2" height="15" fill="rgb(244,113,18)"/><text x="435.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="432" y="932" width="2" height="15" fill="rgb(234,95,0)"/><text x="435.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="432" y="948" width="2" height="15" fill="rgb(231,20,1)"/><text x="435.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="432" y="964" width="2" height="15" fill="rgb(216,130,0)"/><text x="435.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="980" width="2" height="15" fill="rgb(239,13,24)"/><text x="435.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.21%)</title><rect x="432" y="996" width="2" height="15" fill="rgb(237,143,36)"/><text x="435.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="432" y="1012" width="2" height="15" fill="rgb(240,125,25)"/><text x="435.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="1028" width="2" height="15" fill="rgb(236,228,28)"/><text x="435.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="432" y="1044" width="2" height="15" fill="rgb(239,19,35)"/><text x="435.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="432" y="1060" width="2" height="15" fill="rgb(224,65,5)"/><text x="435.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="432" y="1076" width="2" height="15" fill="rgb(206,101,37)"/><text x="435.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="432" y="1092" width="2" height="15" fill="rgb(232,226,34)"/><text x="435.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="1108" width="2" height="15" fill="rgb(242,127,2)"/><text x="435.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.21%)</title><rect x="432" y="1124" width="2" height="15" fill="rgb(247,143,5)"/><text x="435.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="432" y="1140" width="2" height="15" fill="rgb(223,189,52)"/><text x="435.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="432" y="1156" width="2" height="15" fill="rgb(219,47,33)"/><text x="435.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="432" y="1172" width="2" height="15" fill="rgb(230,101,51)"/><text x="435.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="432" y="1188" width="2" height="15" fill="rgb(251,77,12)"/><text x="435.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="1204" width="2" height="15" fill="rgb(215,76,33)"/><text x="435.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:21) (1 samples, 0.21%)</title><rect x="432" y="1220" width="2" height="15" fill="rgb(219,44,2)"/><text x="435.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="432" y="1236" width="2" height="15" fill="rgb(208,41,54)"/><text x="435.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="1252" width="2" height="15" fill="rgb(240,103,8)"/><text x="435.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="432" y="1268" width="2" height="15" fill="rgb(250,2,54)"/><text x="435.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="432" y="1284" width="2" height="15" fill="rgb(251,173,40)"/><text x="435.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="432" y="1300" width="2" height="15" fill="rgb(237,149,50)"/><text x="435.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="432" y="1316" width="2" height="15" fill="rgb(218,116,6)"/><text x="435.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="432" y="1332" width="2" height="15" fill="rgb(221,45,34)"/><text x="435.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py:1543) (1 samples, 0.21%)</title><rect x="432" y="1348" width="2" height="15" fill="rgb(215,143,22)"/><text x="435.00" y="1358.50"></text></g><g><title>_nonlin_wrapper (scipy/optimize/nonlin.py:1532) (1 samples, 0.21%)</title><rect x="432" y="1364" width="2" height="15" fill="rgb(222,96,52)"/><text x="435.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="432" y="180" width="5" height="15" fill="rgb(224,19,0)"/><text x="435.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="196" width="5" height="15" fill="rgb(253,165,10)"/><text x="435.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="212" width="5" height="15" fill="rgb(235,53,31)"/><text x="435.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="228" width="5" height="15" fill="rgb(208,208,47)"/><text x="435.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="244" width="5" height="15" fill="rgb(252,11,27)"/><text x="435.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="260" width="5" height="15" fill="rgb(221,122,29)"/><text x="435.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="276" width="5" height="15" fill="rgb(234,207,2)"/><text x="435.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.42%)</title><rect x="432" y="292" width="5" height="15" fill="rgb(223,138,7)"/><text x="435.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="308" width="5" height="15" fill="rgb(214,156,49)"/><text x="435.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="324" width="5" height="15" fill="rgb(228,173,45)"/><text x="435.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="340" width="5" height="15" fill="rgb(208,97,34)"/><text x="435.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="356" width="5" height="15" fill="rgb(230,211,21)"/><text x="435.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="372" width="5" height="15" fill="rgb(219,165,24)"/><text x="435.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.42%)</title><rect x="432" y="388" width="5" height="15" fill="rgb(247,35,15)"/><text x="435.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="404" width="5" height="15" fill="rgb(245,144,18)"/><text x="435.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="420" width="5" height="15" fill="rgb(221,180,0)"/><text x="435.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="436" width="5" height="15" fill="rgb(212,208,16)"/><text x="435.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="452" width="5" height="15" fill="rgb(222,133,50)"/><text x="435.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="468" width="5" height="15" fill="rgb(242,179,30)"/><text x="435.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.42%)</title><rect x="432" y="484" width="5" height="15" fill="rgb(211,218,37)"/><text x="435.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="500" width="5" height="15" fill="rgb(253,161,24)"/><text x="435.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="516" width="5" height="15" fill="rgb(237,184,45)"/><text x="435.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="532" width="5" height="15" fill="rgb(248,103,38)"/><text x="435.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="548" width="5" height="15" fill="rgb(247,29,50)"/><text x="435.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="564" width="5" height="15" fill="rgb(220,95,27)"/><text x="435.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.42%)</title><rect x="432" y="580" width="5" height="15" fill="rgb(248,165,40)"/><text x="435.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="596" width="5" height="15" fill="rgb(226,194,49)"/><text x="435.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="612" width="5" height="15" fill="rgb(254,72,17)"/><text x="435.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="628" width="5" height="15" fill="rgb(220,125,48)"/><text x="435.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="644" width="5" height="15" fill="rgb(219,183,15)"/><text x="435.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="660" width="5" height="15" fill="rgb(245,98,1)"/><text x="435.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.42%)</title><rect x="432" y="676" width="5" height="15" fill="rgb(213,95,32)"/><text x="435.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="692" width="5" height="15" fill="rgb(241,47,7)"/><text x="435.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="708" width="5" height="15" fill="rgb(243,157,2)"/><text x="435.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="724" width="5" height="15" fill="rgb(213,216,33)"/><text x="435.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="740" width="5" height="15" fill="rgb(217,30,26)"/><text x="435.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="756" width="5" height="15" fill="rgb(226,78,47)"/><text x="435.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.42%)</title><rect x="432" y="772" width="5" height="15" fill="rgb(207,113,3)"/><text x="435.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.42%)</title><rect x="432" y="788" width="5" height="15" fill="rgb(206,48,2)"/><text x="435.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="804" width="5" height="15" fill="rgb(251,149,50)"/><text x="435.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="432" y="820" width="5" height="15" fill="rgb(232,112,24)"/><text x="435.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="432" y="836" width="5" height="15" fill="rgb(242,215,33)"/><text x="435.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="432" y="852" width="5" height="15" fill="rgb(209,0,24)"/><text x="435.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="432" y="868" width="5" height="15" fill="rgb(227,66,36)"/><text x="435.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="432" y="884" width="5" height="15" fill="rgb(207,143,50)"/><text x="435.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.21%)</title><rect x="434" y="900" width="3" height="15" fill="rgb(235,117,17)"/><text x="437.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="434" y="916" width="3" height="15" fill="rgb(246,151,6)"/><text x="437.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="434" y="932" width="3" height="15" fill="rgb(221,202,10)"/><text x="437.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="434" y="948" width="3" height="15" fill="rgb(209,197,51)"/><text x="437.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="434" y="964" width="3" height="15" fill="rgb(224,38,15)"/><text x="437.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="434" y="980" width="3" height="15" fill="rgb(224,52,24)"/><text x="437.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="434" y="996" width="3" height="15" fill="rgb(209,91,16)"/><text x="437.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="434" y="1012" width="3" height="15" fill="rgb(248,140,15)"/><text x="437.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:4345) (1 samples, 0.21%)</title><rect x="434" y="1028" width="3" height="15" fill="rgb(247,51,40)"/><text x="437.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.21%)</title><rect x="434" y="1044" width="3" height="15" fill="rgb(215,101,14)"/><text x="437.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.21%)</title><rect x="434" y="1060" width="3" height="15" fill="rgb(223,186,14)"/><text x="437.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:62) (1 samples, 0.21%)</title><rect x="434" y="1076" width="3" height="15" fill="rgb(216,140,14)"/><text x="437.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:4) (3 samples, 0.63%)</title><rect x="432" y="148" width="7" height="15" fill="rgb(246,163,43)"/><text x="435.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.63%)</title><rect x="432" y="164" width="7" height="15" fill="rgb(224,191,31)"/><text x="435.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="437" y="180" width="2" height="15" fill="rgb(212,222,10)"/><text x="440.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="437" y="196" width="2" height="15" fill="rgb(225,198,24)"/><text x="440.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="437" y="212" width="2" height="15" fill="rgb(219,88,12)"/><text x="440.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="437" y="228" width="2" height="15" fill="rgb(233,205,30)"/><text x="440.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:21) (1 samples, 0.21%)</title><rect x="437" y="244" width="2" height="15" fill="rgb(219,50,21)"/><text x="440.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="437" y="260" width="2" height="15" fill="rgb(220,71,7)"/><text x="440.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="437" y="276" width="2" height="15" fill="rgb(206,78,48)"/><text x="440.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="437" y="292" width="2" height="15" fill="rgb(226,158,37)"/><text x="440.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="437" y="308" width="2" height="15" fill="rgb(224,207,47)"/><text x="440.00" y="318.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.21%)</title><rect x="437" y="324" width="2" height="15" fill="rgb(231,53,32)"/><text x="440.00" y="334.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.21%)</title><rect x="437" y="340" width="2" height="15" fill="rgb(220,132,21)"/><text x="440.00" y="350.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.21%)</title><rect x="439" y="484" width="3" height="15" fill="rgb(209,39,47)"/><text x="442.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="439" y="500" width="3" height="15" fill="rgb(217,138,41)"/><text x="442.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="439" y="516" width="3" height="15" fill="rgb(241,121,16)"/><text x="442.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="439" y="532" width="3" height="15" fill="rgb(235,21,10)"/><text x="442.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="439" y="548" width="3" height="15" fill="rgb(214,26,25)"/><text x="442.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="564" width="3" height="15" fill="rgb(206,184,53)"/><text x="442.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.21%)</title><rect x="439" y="580" width="3" height="15" fill="rgb(238,128,26)"/><text x="442.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="439" y="596" width="3" height="15" fill="rgb(221,12,16)"/><text x="442.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="439" y="612" width="3" height="15" fill="rgb(209,141,31)"/><text x="442.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="439" y="628" width="3" height="15" fill="rgb(207,11,49)"/><text x="442.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="439" y="644" width="3" height="15" fill="rgb(247,149,8)"/><text x="442.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="660" width="3" height="15" fill="rgb(254,206,37)"/><text x="442.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.21%)</title><rect x="439" y="676" width="3" height="15" fill="rgb(210,80,33)"/><text x="442.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="439" y="692" width="3" height="15" fill="rgb(215,29,10)"/><text x="442.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="439" y="708" width="3" height="15" fill="rgb(230,83,45)"/><text x="442.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="439" y="724" width="3" height="15" fill="rgb(248,227,24)"/><text x="442.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="439" y="740" width="3" height="15" fill="rgb(208,149,38)"/><text x="442.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="756" width="3" height="15" fill="rgb(209,31,35)"/><text x="442.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:113) (1 samples, 0.21%)</title><rect x="439" y="772" width="3" height="15" fill="rgb(211,159,45)"/><text x="442.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="439" y="788" width="3" height="15" fill="rgb(240,116,52)"/><text x="442.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="804" width="3" height="15" fill="rgb(235,157,54)"/><text x="442.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="439" y="820" width="3" height="15" fill="rgb(211,175,49)"/><text x="442.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="439" y="836" width="3" height="15" fill="rgb(213,2,51)"/><text x="442.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="439" y="852" width="3" height="15" fill="rgb(236,19,26)"/><text x="442.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="439" y="868" width="3" height="15" fill="rgb(238,172,20)"/><text x="442.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="884" width="3" height="15" fill="rgb(224,107,14)"/><text x="442.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py:7) (1 samples, 0.21%)</title><rect x="439" y="900" width="3" height="15" fill="rgb(219,79,5)"/><text x="442.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="439" y="916" width="3" height="15" fill="rgb(243,138,7)"/><text x="442.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="439" y="932" width="3" height="15" fill="rgb(248,71,2)"/><text x="442.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="439" y="948" width="3" height="15" fill="rgb(212,111,43)"/><text x="442.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="439" y="964" width="3" height="15" fill="rgb(217,175,54)"/><text x="442.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="980" width="3" height="15" fill="rgb(229,215,29)"/><text x="442.00" y="990.50"></text></g><g><title>&lt;module&gt; (idna/__init__.py:2) (1 samples, 0.21%)</title><rect x="439" y="996" width="3" height="15" fill="rgb(226,36,16)"/><text x="442.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="439" y="1012" width="3" height="15" fill="rgb(222,221,47)"/><text x="442.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="439" y="1028" width="3" height="15" fill="rgb(211,154,2)"/><text x="442.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="439" y="1044" width="3" height="15" fill="rgb(251,136,0)"/><text x="442.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="439" y="1060" width="3" height="15" fill="rgb(251,86,32)"/><text x="442.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="439" y="1076" width="3" height="15" fill="rgb(222,62,2)"/><text x="442.00" y="1086.50"></text></g><g><title>&lt;module&gt; (idna/core.py:10) (1 samples, 0.21%)</title><rect x="439" y="1092" width="3" height="15" fill="rgb(234,175,13)"/><text x="442.00" y="1102.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.21%)</title><rect x="439" y="1108" width="3" height="15" fill="rgb(230,186,5)"/><text x="442.00" y="1118.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.21%)</title><rect x="439" y="1124" width="3" height="15" fill="rgb(217,93,28)"/><text x="442.00" y="1134.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.21%)</title><rect x="439" y="1140" width="3" height="15" fill="rgb(231,7,3)"/><text x="442.00" y="1150.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.21%)</title><rect x="439" y="1156" width="3" height="15" fill="rgb(253,75,45)"/><text x="442.00" y="1166.50"></text></g><g><title>_compile_info (sre_compile.py:590) (1 samples, 0.21%)</title><rect x="439" y="1172" width="3" height="15" fill="rgb(226,204,21)"/><text x="442.00" y="1182.50"></text></g><g><title>_optimize_charset (sre_compile.py:395) (1 samples, 0.21%)</title><rect x="439" y="1188" width="3" height="15" fill="rgb(238,21,22)"/><text x="442.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.42%)</title><rect x="439" y="244" width="5" height="15" fill="rgb(224,188,6)"/><text x="442.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="439" y="260" width="5" height="15" fill="rgb(233,19,45)"/><text x="442.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="439" y="276" width="5" height="15" fill="rgb(227,66,16)"/><text x="442.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="439" y="292" width="5" height="15" fill="rgb(251,79,6)"/><text x="442.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="439" y="308" width="5" height="15" fill="rgb(249,30,15)"/><text x="442.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="439" y="324" width="5" height="15" fill="rgb(224,85,23)"/><text x="442.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.42%)</title><rect x="439" y="340" width="5" height="15" fill="rgb(234,130,52)"/><text x="442.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="439" y="356" width="5" height="15" fill="rgb(244,15,40)"/><text x="442.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="439" y="372" width="5" height="15" fill="rgb(251,168,7)"/><text x="442.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="439" y="388" width="5" height="15" fill="rgb(218,27,43)"/><text x="442.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="439" y="404" width="5" height="15" fill="rgb(224,130,30)"/><text x="442.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="439" y="420" width="5" height="15" fill="rgb(207,106,9)"/><text x="442.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="439" y="436" width="5" height="15" fill="rgb(240,108,45)"/><text x="442.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="439" y="452" width="5" height="15" fill="rgb(231,203,12)"/><text x="442.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="439" y="468" width="5" height="15" fill="rgb(245,8,2)"/><text x="442.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.21%)</title><rect x="442" y="484" width="2" height="15" fill="rgb(224,77,6)"/><text x="445.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="500" width="2" height="15" fill="rgb(210,154,49)"/><text x="445.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="516" width="2" height="15" fill="rgb(222,33,12)"/><text x="445.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="532" width="2" height="15" fill="rgb(210,54,18)"/><text x="445.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="442" y="548" width="2" height="15" fill="rgb(242,181,6)"/><text x="445.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="564" width="2" height="15" fill="rgb(223,29,11)"/><text x="445.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.21%)</title><rect x="442" y="580" width="2" height="15" fill="rgb(222,25,31)"/><text x="445.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="596" width="2" height="15" fill="rgb(224,182,43)"/><text x="445.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="442" y="612" width="2" height="15" fill="rgb(214,96,30)"/><text x="445.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="628" width="2" height="15" fill="rgb(213,62,41)"/><text x="445.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="644" width="2" height="15" fill="rgb(206,206,5)"/><text x="445.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="660" width="2" height="15" fill="rgb(240,114,38)"/><text x="445.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="676" width="2" height="15" fill="rgb(224,10,21)"/><text x="445.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="442" y="692" width="2" height="15" fill="rgb(254,112,47)"/><text x="445.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="708" width="2" height="15" fill="rgb(221,134,27)"/><text x="445.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.21%)</title><rect x="442" y="724" width="2" height="15" fill="rgb(229,109,51)"/><text x="445.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="740" width="2" height="15" fill="rgb(209,19,35)"/><text x="445.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="756" width="2" height="15" fill="rgb(250,183,0)"/><text x="445.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="772" width="2" height="15" fill="rgb(236,7,35)"/><text x="445.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="442" y="788" width="2" height="15" fill="rgb(239,226,41)"/><text x="445.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="804" width="2" height="15" fill="rgb(248,193,20)"/><text x="445.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.21%)</title><rect x="442" y="820" width="2" height="15" fill="rgb(245,116,24)"/><text x="445.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="836" width="2" height="15" fill="rgb(228,142,22)"/><text x="445.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="852" width="2" height="15" fill="rgb(240,78,46)"/><text x="445.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="868" width="2" height="15" fill="rgb(248,208,11)"/><text x="445.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="442" y="884" width="2" height="15" fill="rgb(215,92,45)"/><text x="445.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="900" width="2" height="15" fill="rgb(235,141,46)"/><text x="445.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.21%)</title><rect x="442" y="916" width="2" height="15" fill="rgb(244,40,16)"/><text x="445.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="932" width="2" height="15" fill="rgb(224,50,44)"/><text x="445.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.21%)</title><rect x="442" y="948" width="2" height="15" fill="rgb(226,66,8)"/><text x="445.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="964" width="2" height="15" fill="rgb(214,120,2)"/><text x="445.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="980" width="2" height="15" fill="rgb(229,118,50)"/><text x="445.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="996" width="2" height="15" fill="rgb(238,17,14)"/><text x="445.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="1012" width="2" height="15" fill="rgb(253,66,49)"/><text x="445.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="442" y="1028" width="2" height="15" fill="rgb(222,8,23)"/><text x="445.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="442" y="1044" width="2" height="15" fill="rgb(238,223,33)"/><text x="445.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.21%)</title><rect x="442" y="1060" width="2" height="15" fill="rgb(205,176,25)"/><text x="445.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="442" y="1076" width="2" height="15" fill="rgb(230,195,37)"/><text x="445.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="442" y="1092" width="2" height="15" fill="rgb(211,45,53)"/><text x="445.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="442" y="1108" width="2" height="15" fill="rgb(251,183,38)"/><text x="445.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="442" y="1124" width="2" height="15" fill="rgb(246,217,38)"/><text x="445.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.21%)</title><rect x="442" y="1140" width="2" height="15" fill="rgb(251,126,22)"/><text x="445.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.21%)</title><rect x="442" y="1156" width="2" height="15" fill="rgb(254,70,28)"/><text x="445.00" y="1166.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.21%)</title><rect x="444" y="1012" width="2" height="15" fill="rgb(210,51,13)"/><text x="447.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="444" y="1028" width="2" height="15" fill="rgb(211,15,14)"/><text x="447.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="444" y="1044" width="2" height="15" fill="rgb(228,220,47)"/><text x="447.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="444" y="1060" width="2" height="15" fill="rgb(238,83,8)"/><text x="447.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="444" y="1076" width="2" height="15" fill="rgb(250,170,27)"/><text x="447.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.21%)</title><rect x="444" y="1092" width="2" height="15" fill="rgb(254,201,4)"/><text x="447.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.21%)</title><rect x="444" y="1108" width="2" height="15" fill="rgb(249,112,31)"/><text x="447.00" y="1118.50"></text></g><g><title>from_list (matplotlib/colors.py:748) (1 samples, 0.21%)</title><rect x="446" y="1812" width="3" height="15" fill="rgb(207,1,29)"/><text x="449.00" y="1822.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;:6) (1 samples, 0.21%)</title><rect x="446" y="1828" width="3" height="15" fill="rgb(228,60,2)"/><text x="449.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.21%)</title><rect x="446" y="1844" width="3" height="15" fill="rgb(223,45,3)"/><text x="449.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py:143) (1 samples, 0.21%)</title><rect x="446" y="1860" width="3" height="15" fill="rgb(208,73,53)"/><text x="449.00" y="1870.50"></text></g><g><title>0x7ff6c15181d6 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="446" y="1876" width="3" height="15" fill="rgb(241,14,54)"/><text x="449.00" y="1886.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (2 samples, 0.42%)</title><rect x="446" y="1588" width="5" height="15" fill="rgb(222,207,49)"/><text x="449.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="446" y="1604" width="5" height="15" fill="rgb(224,221,28)"/><text x="449.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="446" y="1620" width="5" height="15" fill="rgb(208,229,6)"/><text x="449.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="446" y="1636" width="5" height="15" fill="rgb(244,117,1)"/><text x="449.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="446" y="1652" width="5" height="15" fill="rgb(238,69,36)"/><text x="449.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="446" y="1668" width="5" height="15" fill="rgb(244,130,26)"/><text x="449.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (2 samples, 0.42%)</title><rect x="446" y="1684" width="5" height="15" fill="rgb(246,76,23)"/><text x="449.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="446" y="1700" width="5" height="15" fill="rgb(228,211,1)"/><text x="449.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="446" y="1716" width="5" height="15" fill="rgb(205,198,27)"/><text x="449.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="446" y="1732" width="5" height="15" fill="rgb(224,166,3)"/><text x="449.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="446" y="1748" width="5" height="15" fill="rgb(224,46,0)"/><text x="449.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="446" y="1764" width="5" height="15" fill="rgb(213,137,16)"/><text x="449.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (2 samples, 0.42%)</title><rect x="446" y="1780" width="5" height="15" fill="rgb(208,169,6)"/><text x="449.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (2 samples, 0.42%)</title><rect x="446" y="1796" width="5" height="15" fill="rgb(206,40,10)"/><text x="449.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:756) (1 samples, 0.21%)</title><rect x="449" y="1812" width="2" height="15" fill="rgb(209,5,25)"/><text x="452.00" y="1822.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.21%)</title><rect x="451" y="1780" width="3" height="15" fill="rgb(212,42,12)"/><text x="454.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="451" y="1796" width="3" height="15" fill="rgb(220,218,16)"/><text x="454.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="451" y="1812" width="3" height="15" fill="rgb(225,96,26)"/><text x="454.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="451" y="1828" width="3" height="15" fill="rgb(249,126,35)"/><text x="454.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="451" y="1844" width="3" height="15" fill="rgb(218,148,45)"/><text x="454.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="451" y="1860" width="3" height="15" fill="rgb(211,214,27)"/><text x="454.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:600) (1 samples, 0.21%)</title><rect x="451" y="1876" width="3" height="15" fill="rgb(206,140,19)"/><text x="454.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.21%)</title><rect x="451" y="1892" width="3" height="15" fill="rgb(248,118,33)"/><text x="454.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.21%)</title><rect x="451" y="1908" width="3" height="15" fill="rgb(229,24,43)"/><text x="454.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.21%)</title><rect x="451" y="1924" width="3" height="15" fill="rgb(210,168,14)"/><text x="454.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py:1126) (1 samples, 0.21%)</title><rect x="451" y="1940" width="3" height="15" fill="rgb(237,211,43)"/><text x="454.00" y="1950.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.21%)</title><rect x="451" y="1956" width="3" height="15" fill="rgb(250,204,17)"/><text x="454.00" y="1966.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.21%)</title><rect x="451" y="1972" width="3" height="15" fill="rgb(240,174,30)"/><text x="454.00" y="1982.50"></text></g><g><title>__init__ (inspect.py:2802) (1 samples, 0.21%)</title><rect x="451" y="1988" width="3" height="15" fill="rgb(214,38,14)"/><text x="454.00" y="1998.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 1.05%)</title><rect x="444" y="436" width="12" height="15" fill="rgb(209,29,47)"/><text x="447.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.05%)</title><rect x="444" y="452" width="12" height="15" fill="rgb(232,99,51)"/><text x="447.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.05%)</title><rect x="444" y="468" width="12" height="15" fill="rgb(217,174,46)"/><text x="447.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.05%)</title><rect x="444" y="484" width="12" height="15" fill="rgb(227,183,45)"/><text x="447.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.05%)</title><rect x="444" y="500" width="12" height="15" fill="rgb(244,99,22)"/><text x="447.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.05%)</title><rect x="444" y="516" width="12" height="15" fill="rgb(237,23,50)"/><text x="447.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 1.05%)</title><rect x="444" y="532" width="12" height="15" fill="rgb(218,212,14)"/><text x="447.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.05%)</title><rect x="444" y="548" width="12" height="15" fill="rgb(241,129,51)"/><text x="447.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.05%)</title><rect x="444" y="564" width="12" height="15" fill="rgb(243,41,7)"/><text x="447.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.05%)</title><rect x="444" y="580" width="12" height="15" fill="rgb(246,111,16)"/><text x="447.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.05%)</title><rect x="444" y="596" width="12" height="15" fill="rgb(215,120,17)"/><text x="447.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.05%)</title><rect x="444" y="612" width="12" height="15" fill="rgb(224,74,39)"/><text x="447.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (5 samples, 1.05%)</title><rect x="444" y="628" width="12" height="15" fill="rgb(238,4,16)"/><text x="447.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.05%)</title><rect x="444" y="644" width="12" height="15" fill="rgb(226,225,17)"/><text x="447.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.05%)</title><rect x="444" y="660" width="12" height="15" fill="rgb(205,60,54)"/><text x="447.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.05%)</title><rect x="444" y="676" width="12" height="15" fill="rgb(253,64,46)"/><text x="447.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.05%)</title><rect x="444" y="692" width="12" height="15" fill="rgb(232,123,50)"/><text x="447.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.05%)</title><rect x="444" y="708" width="12" height="15" fill="rgb(240,123,51)"/><text x="447.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (5 samples, 1.05%)</title><rect x="444" y="724" width="12" height="15" fill="rgb(245,109,29)"/><text x="447.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.05%)</title><rect x="444" y="740" width="12" height="15" fill="rgb(206,184,21)"/><text x="447.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.05%)</title><rect x="444" y="756" width="12" height="15" fill="rgb(229,222,39)"/><text x="447.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.05%)</title><rect x="444" y="772" width="12" height="15" fill="rgb(244,77,46)"/><text x="447.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.05%)</title><rect x="444" y="788" width="12" height="15" fill="rgb(229,176,33)"/><text x="447.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.05%)</title><rect x="444" y="804" width="12" height="15" fill="rgb(225,104,1)"/><text x="447.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (5 samples, 1.05%)</title><rect x="444" y="820" width="12" height="15" fill="rgb(209,190,41)"/><text x="447.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.05%)</title><rect x="444" y="836" width="12" height="15" fill="rgb(235,183,25)"/><text x="447.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.05%)</title><rect x="444" y="852" width="12" height="15" fill="rgb(209,97,45)"/><text x="447.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.05%)</title><rect x="444" y="868" width="12" height="15" fill="rgb(206,226,40)"/><text x="447.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.05%)</title><rect x="444" y="884" width="12" height="15" fill="rgb(230,152,3)"/><text x="447.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.05%)</title><rect x="444" y="900" width="12" height="15" fill="rgb(209,73,9)"/><text x="447.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (5 samples, 1.05%)</title><rect x="444" y="916" width="12" height="15" fill="rgb(251,155,26)"/><text x="447.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.05%)</title><rect x="444" y="932" width="12" height="15" fill="rgb(237,18,29)"/><text x="447.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.05%)</title><rect x="444" y="948" width="12" height="15" fill="rgb(206,99,47)"/><text x="447.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.05%)</title><rect x="444" y="964" width="12" height="15" fill="rgb(209,145,29)"/><text x="447.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.05%)</title><rect x="444" y="980" width="12" height="15" fill="rgb(207,27,14)"/><text x="447.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.05%)</title><rect x="444" y="996" width="12" height="15" fill="rgb(253,31,21)"/><text x="447.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (4 samples, 0.84%)</title><rect x="446" y="1012" width="10" height="15" fill="rgb(208,173,15)"/><text x="449.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.84%)</title><rect x="446" y="1028" width="10" height="15" fill="rgb(237,176,21)"/><text x="449.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.84%)</title><rect x="446" y="1044" width="10" height="15" fill="rgb(233,104,17)"/><text x="449.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.84%)</title><rect x="446" y="1060" width="10" height="15" fill="rgb(209,57,50)"/><text x="449.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.84%)</title><rect x="446" y="1076" width="10" height="15" fill="rgb(230,184,32)"/><text x="449.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.84%)</title><rect x="446" y="1092" width="10" height="15" fill="rgb(247,152,35)"/><text x="449.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (4 samples, 0.84%)</title><rect x="446" y="1108" width="10" height="15" fill="rgb(206,126,50)"/><text x="449.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.84%)</title><rect x="446" y="1124" width="10" height="15" fill="rgb(237,200,27)"/><text x="449.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.84%)</title><rect x="446" y="1140" width="10" height="15" fill="rgb(248,84,23)"/><text x="449.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.84%)</title><rect x="446" y="1156" width="10" height="15" fill="rgb(239,132,46)"/><text x="449.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.84%)</title><rect x="446" y="1172" width="10" height="15" fill="rgb(237,126,3)"/><text x="449.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.84%)</title><rect x="446" y="1188" width="10" height="15" fill="rgb(214,24,53)"/><text x="449.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (4 samples, 0.84%)</title><rect x="446" y="1204" width="10" height="15" fill="rgb(206,56,0)"/><text x="449.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.84%)</title><rect x="446" y="1220" width="10" height="15" fill="rgb(241,164,18)"/><text x="449.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.84%)</title><rect x="446" y="1236" width="10" height="15" fill="rgb(230,71,3)"/><text x="449.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.84%)</title><rect x="446" y="1252" width="10" height="15" fill="rgb(246,228,49)"/><text x="449.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.84%)</title><rect x="446" y="1268" width="10" height="15" fill="rgb(238,209,20)"/><text x="449.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.84%)</title><rect x="446" y="1284" width="10" height="15" fill="rgb(252,71,5)"/><text x="449.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (4 samples, 0.84%)</title><rect x="446" y="1300" width="10" height="15" fill="rgb(229,99,46)"/><text x="449.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.84%)</title><rect x="446" y="1316" width="10" height="15" fill="rgb(208,124,45)"/><text x="449.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.84%)</title><rect x="446" y="1332" width="10" height="15" fill="rgb(212,95,39)"/><text x="449.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.84%)</title><rect x="446" y="1348" width="10" height="15" fill="rgb(210,79,34)"/><text x="449.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.84%)</title><rect x="446" y="1364" width="10" height="15" fill="rgb(253,187,26)"/><text x="449.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.84%)</title><rect x="446" y="1380" width="10" height="15" fill="rgb(241,73,31)"/><text x="449.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (4 samples, 0.84%)</title><rect x="446" y="1396" width="10" height="15" fill="rgb(237,165,51)"/><text x="449.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.84%)</title><rect x="446" y="1412" width="10" height="15" fill="rgb(210,198,47)"/><text x="449.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.84%)</title><rect x="446" y="1428" width="10" height="15" fill="rgb(220,123,30)"/><text x="449.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.84%)</title><rect x="446" y="1444" width="10" height="15" fill="rgb(240,135,45)"/><text x="449.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.84%)</title><rect x="446" y="1460" width="10" height="15" fill="rgb(209,62,16)"/><text x="449.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.84%)</title><rect x="446" y="1476" width="10" height="15" fill="rgb(239,66,24)"/><text x="449.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (4 samples, 0.84%)</title><rect x="446" y="1492" width="10" height="15" fill="rgb(225,220,45)"/><text x="449.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.84%)</title><rect x="446" y="1508" width="10" height="15" fill="rgb(241,73,49)"/><text x="449.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.84%)</title><rect x="446" y="1524" width="10" height="15" fill="rgb(229,70,8)"/><text x="449.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.84%)</title><rect x="446" y="1540" width="10" height="15" fill="rgb(241,157,4)"/><text x="449.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.84%)</title><rect x="446" y="1556" width="10" height="15" fill="rgb(246,130,52)"/><text x="449.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.84%)</title><rect x="446" y="1572" width="10" height="15" fill="rgb(238,113,43)"/><text x="449.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (2 samples, 0.42%)</title><rect x="451" y="1588" width="5" height="15" fill="rgb(240,85,1)"/><text x="454.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="451" y="1604" width="5" height="15" fill="rgb(229,34,49)"/><text x="454.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="451" y="1620" width="5" height="15" fill="rgb(244,67,1)"/><text x="454.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="451" y="1636" width="5" height="15" fill="rgb(253,94,33)"/><text x="454.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="451" y="1652" width="5" height="15" fill="rgb(245,82,13)"/><text x="454.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="451" y="1668" width="5" height="15" fill="rgb(212,63,33)"/><text x="454.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (2 samples, 0.42%)</title><rect x="451" y="1684" width="5" height="15" fill="rgb(249,45,14)"/><text x="454.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="451" y="1700" width="5" height="15" fill="rgb(248,169,6)"/><text x="454.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="451" y="1716" width="5" height="15" fill="rgb(210,89,9)"/><text x="454.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="451" y="1732" width="5" height="15" fill="rgb(209,54,34)"/><text x="454.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="451" y="1748" width="5" height="15" fill="rgb(216,52,25)"/><text x="454.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="451" y="1764" width="5" height="15" fill="rgb(253,145,44)"/><text x="454.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.21%)</title><rect x="454" y="1780" width="2" height="15" fill="rgb(218,145,14)"/><text x="457.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="454" y="1796" width="2" height="15" fill="rgb(242,62,1)"/><text x="457.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="454" y="1812" width="2" height="15" fill="rgb(229,226,43)"/><text x="457.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="454" y="1828" width="2" height="15" fill="rgb(245,93,35)"/><text x="457.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="454" y="1844" width="2" height="15" fill="rgb(231,153,30)"/><text x="457.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="454" y="1860" width="2" height="15" fill="rgb(235,51,32)"/><text x="457.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:1654) (1 samples, 0.21%)</title><rect x="454" y="1876" width="2" height="15" fill="rgb(214,88,19)"/><text x="457.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.21%)</title><rect x="454" y="1892" width="2" height="15" fill="rgb(220,20,45)"/><text x="457.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.21%)</title><rect x="454" y="1908" width="2" height="15" fill="rgb(245,78,28)"/><text x="457.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.21%)</title><rect x="454" y="1924" width="2" height="15" fill="rgb(233,168,45)"/><text x="457.00" y="1934.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.21%)</title><rect x="456" y="1108" width="3" height="15" fill="rgb(247,170,21)"/><text x="459.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="456" y="1124" width="3" height="15" fill="rgb(215,138,12)"/><text x="459.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="456" y="1140" width="3" height="15" fill="rgb(211,80,24)"/><text x="459.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="456" y="1156" width="3" height="15" fill="rgb(221,122,26)"/><text x="459.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="456" y="1172" width="3" height="15" fill="rgb(217,171,38)"/><text x="459.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="456" y="1188" width="3" height="15" fill="rgb(252,94,54)"/><text x="459.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.21%)</title><rect x="456" y="1204" width="3" height="15" fill="rgb(240,117,27)"/><text x="459.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="456" y="1220" width="3" height="15" fill="rgb(235,193,23)"/><text x="459.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="456" y="1236" width="3" height="15" fill="rgb(232,27,48)"/><text x="459.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="456" y="1252" width="3" height="15" fill="rgb(206,166,44)"/><text x="459.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="456" y="1268" width="3" height="15" fill="rgb(230,44,46)"/><text x="459.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="456" y="1284" width="3" height="15" fill="rgb(231,144,40)"/><text x="459.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.21%)</title><rect x="456" y="1300" width="3" height="15" fill="rgb(210,221,9)"/><text x="459.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.21%)</title><rect x="456" y="1316" width="3" height="15" fill="rgb(243,134,4)"/><text x="459.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.21%)</title><rect x="456" y="1332" width="3" height="15" fill="rgb(230,220,48)"/><text x="459.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.21%)</title><rect x="456" y="1348" width="3" height="15" fill="rgb(252,218,6)"/><text x="459.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.21%)</title><rect x="456" y="1364" width="3" height="15" fill="rgb(211,175,33)"/><text x="459.00" y="1374.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:4) (16 samples, 3.35%)</title><rect x="422" y="52" width="39" height="15" fill="rgb(221,224,48)"/><text x="425.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 3.35%)</title><rect x="422" y="68" width="39" height="15" fill="rgb(227,1,46)"/><text x="425.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 3.35%)</title><rect x="422" y="84" width="39" height="15" fill="rgb(215,147,1)"/><text x="425.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 3.35%)</title><rect x="422" y="100" width="39" height="15" fill="rgb(229,222,41)"/><text x="425.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 3.35%)</title><rect x="422" y="116" width="39" height="15" fill="rgb(220,199,4)"/><text x="425.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 3.35%)</title><rect x="422" y="132" width="39" height="15" fill="rgb(225,109,36)"/><text x="425.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear.py:7) (9 samples, 1.88%)</title><rect x="439" y="148" width="22" height="15" fill="rgb(230,174,25)"/><text x="442.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.88%)</title><rect x="439" y="164" width="22" height="15" fill="rgb(229,204,20)"/><text x="442.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.88%)</title><rect x="439" y="180" width="22" height="15" fill="rgb(211,164,30)"/><text x="442.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.88%)</title><rect x="439" y="196" width="22" height="15" fill="rgb(217,206,10)"/><text x="442.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.88%)</title><rect x="439" y="212" width="22" height="15" fill="rgb(222,212,19)"/><text x="442.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.88%)</title><rect x="439" y="228" width="22" height="15" fill="rgb(222,165,0)"/><text x="442.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.46%)</title><rect x="444" y="244" width="17" height="15" fill="rgb(236,222,4)"/><text x="447.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.46%)</title><rect x="444" y="260" width="17" height="15" fill="rgb(224,95,45)"/><text x="447.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.46%)</title><rect x="444" y="276" width="17" height="15" fill="rgb(215,178,47)"/><text x="447.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.46%)</title><rect x="444" y="292" width="17" height="15" fill="rgb(218,219,3)"/><text x="447.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.46%)</title><rect x="444" y="308" width="17" height="15" fill="rgb(209,152,28)"/><text x="447.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.46%)</title><rect x="444" y="324" width="17" height="15" fill="rgb(236,174,17)"/><text x="447.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.46%)</title><rect x="444" y="340" width="17" height="15" fill="rgb(235,188,41)"/><text x="447.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.46%)</title><rect x="444" y="356" width="17" height="15" fill="rgb(237,158,14)"/><text x="447.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.46%)</title><rect x="444" y="372" width="17" height="15" fill="rgb(238,34,16)"/><text x="447.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.46%)</title><rect x="444" y="388" width="17" height="15" fill="rgb(243,175,43)"/><text x="447.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.46%)</title><rect x="444" y="404" width="17" height="15" fill="rgb(217,78,17)"/><text x="447.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.46%)</title><rect x="444" y="420" width="17" height="15" fill="rgb(243,45,29)"/><text x="447.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.42%)</title><rect x="456" y="436" width="5" height="15" fill="rgb(218,122,15)"/><text x="459.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="452" width="5" height="15" fill="rgb(227,106,43)"/><text x="459.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="456" y="468" width="5" height="15" fill="rgb(251,189,10)"/><text x="459.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="484" width="5" height="15" fill="rgb(221,73,32)"/><text x="459.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="500" width="5" height="15" fill="rgb(216,145,35)"/><text x="459.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="456" y="516" width="5" height="15" fill="rgb(231,65,19)"/><text x="459.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="456" y="532" width="5" height="15" fill="rgb(219,55,16)"/><text x="459.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="456" y="548" width="5" height="15" fill="rgb(216,46,15)"/><text x="459.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="564" width="5" height="15" fill="rgb(231,46,50)"/><text x="459.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.42%)</title><rect x="456" y="580" width="5" height="15" fill="rgb(229,169,6)"/><text x="459.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="596" width="5" height="15" fill="rgb(227,161,26)"/><text x="459.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="456" y="612" width="5" height="15" fill="rgb(245,160,52)"/><text x="459.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="456" y="628" width="5" height="15" fill="rgb(222,72,19)"/><text x="459.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="456" y="644" width="5" height="15" fill="rgb(250,122,11)"/><text x="459.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="660" width="5" height="15" fill="rgb(214,158,52)"/><text x="459.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.42%)</title><rect x="456" y="676" width="5" height="15" fill="rgb(234,222,17)"/><text x="459.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="692" width="5" height="15" fill="rgb(228,164,46)"/><text x="459.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="456" y="708" width="5" height="15" fill="rgb(231,138,2)"/><text x="459.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="456" y="724" width="5" height="15" fill="rgb(221,130,54)"/><text x="459.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="456" y="740" width="5" height="15" fill="rgb(252,169,8)"/><text x="459.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="756" width="5" height="15" fill="rgb(221,156,35)"/><text x="459.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.42%)</title><rect x="456" y="772" width="5" height="15" fill="rgb(230,84,21)"/><text x="459.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="788" width="5" height="15" fill="rgb(238,149,16)"/><text x="459.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="456" y="804" width="5" height="15" fill="rgb(242,203,17)"/><text x="459.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="456" y="820" width="5" height="15" fill="rgb(246,10,38)"/><text x="459.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="456" y="836" width="5" height="15" fill="rgb(224,174,6)"/><text x="459.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="852" width="5" height="15" fill="rgb(250,20,7)"/><text x="459.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.42%)</title><rect x="456" y="868" width="5" height="15" fill="rgb(252,128,45)"/><text x="459.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="884" width="5" height="15" fill="rgb(219,126,54)"/><text x="459.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.42%)</title><rect x="456" y="900" width="5" height="15" fill="rgb(233,35,35)"/><text x="459.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="916" width="5" height="15" fill="rgb(244,192,30)"/><text x="459.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="932" width="5" height="15" fill="rgb(238,147,11)"/><text x="459.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="456" y="948" width="5" height="15" fill="rgb(205,21,24)"/><text x="459.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="456" y="964" width="5" height="15" fill="rgb(253,21,0)"/><text x="459.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="456" y="980" width="5" height="15" fill="rgb(229,165,49)"/><text x="459.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="996" width="5" height="15" fill="rgb(219,115,41)"/><text x="459.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.42%)</title><rect x="456" y="1012" width="5" height="15" fill="rgb(246,66,2)"/><text x="459.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.42%)</title><rect x="456" y="1028" width="5" height="15" fill="rgb(242,70,15)"/><text x="459.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.42%)</title><rect x="456" y="1044" width="5" height="15" fill="rgb(239,151,38)"/><text x="459.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.42%)</title><rect x="456" y="1060" width="5" height="15" fill="rgb(238,137,13)"/><text x="459.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.42%)</title><rect x="456" y="1076" width="5" height="15" fill="rgb(208,62,39)"/><text x="459.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.42%)</title><rect x="456" y="1092" width="5" height="15" fill="rgb(249,190,12)"/><text x="459.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.21%)</title><rect x="459" y="1108" width="2" height="15" fill="rgb(231,66,6)"/><text x="462.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="459" y="1124" width="2" height="15" fill="rgb(242,18,45)"/><text x="462.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="459" y="1140" width="2" height="15" fill="rgb(218,130,34)"/><text x="462.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="459" y="1156" width="2" height="15" fill="rgb(219,12,1)"/><text x="462.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="459" y="1172" width="2" height="15" fill="rgb(254,24,18)"/><text x="462.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="459" y="1188" width="2" height="15" fill="rgb(211,149,36)"/><text x="462.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="459" y="1204" width="2" height="15" fill="rgb(238,136,0)"/><text x="462.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="459" y="1220" width="2" height="15" fill="rgb(237,217,20)"/><text x="462.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.21%)</title><rect x="459" y="1236" width="2" height="15" fill="rgb(242,213,51)"/><text x="462.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.21%)</title><rect x="459" y="1252" width="2" height="15" fill="rgb(240,217,4)"/><text x="462.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="459" y="1268" width="2" height="15" fill="rgb(236,220,18)"/><text x="462.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="459" y="1284" width="2" height="15" fill="rgb(242,107,19)"/><text x="462.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="459" y="1300" width="2" height="15" fill="rgb(212,84,37)"/><text x="462.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="459" y="1316" width="2" height="15" fill="rgb(206,53,46)"/><text x="462.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="459" y="1332" width="2" height="15" fill="rgb(224,1,0)"/><text x="462.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="459" y="1348" width="2" height="15" fill="rgb(227,155,42)"/><text x="462.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.21%)</title><rect x="459" y="1364" width="2" height="15" fill="rgb(218,107,24)"/><text x="462.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="459" y="1380" width="2" height="15" fill="rgb(250,67,18)"/><text x="462.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="459" y="1396" width="2" height="15" fill="rgb(207,172,2)"/><text x="462.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="459" y="1412" width="2" height="15" fill="rgb(233,8,22)"/><text x="462.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="459" y="1428" width="2" height="15" fill="rgb(223,91,30)"/><text x="462.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="459" y="1444" width="2" height="15" fill="rgb(229,164,24)"/><text x="462.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.21%)</title><rect x="459" y="1460" width="2" height="15" fill="rgb(232,93,1)"/><text x="462.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.21%)</title><rect x="459" y="1476" width="2" height="15" fill="rgb(238,141,4)"/><text x="462.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.21%)</title><rect x="459" y="1492" width="2" height="15" fill="rgb(245,47,11)"/><text x="462.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.21%)</title><rect x="459" y="1508" width="2" height="15" fill="rgb(207,16,49)"/><text x="462.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.21%)</title><rect x="459" y="1524" width="2" height="15" fill="rgb(205,144,43)"/><text x="462.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.21%)</title><rect x="459" y="1540" width="2" height="15" fill="rgb(234,78,50)"/><text x="462.00" y="1550.50"></text></g><g><title>new_context (jinja2/environment.py:1064) (1 samples, 0.21%)</title><rect x="459" y="1556" width="2" height="15" fill="rgb(231,223,10)"/><text x="462.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py:77) (1 samples, 0.21%)</title><rect x="459" y="1572" width="2" height="15" fill="rgb(249,186,14)"/><text x="462.00" y="1582.50"></text></g><g><title>__init__ (jinja2/runtime.py:161) (1 samples, 0.21%)</title><rect x="459" y="1588" width="2" height="15" fill="rgb(206,116,5)"/><text x="462.00" y="1598.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:28) (1 samples, 0.21%)</title><rect x="461" y="84" width="3" height="15" fill="rgb(217,4,28)"/><text x="464.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.21%)</title><rect x="461" y="100" width="3" height="15" fill="rgb(230,182,48)"/><text x="464.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:255) (1 samples, 0.21%)</title><rect x="461" y="116" width="3" height="15" fill="rgb(250,138,36)"/><text x="464.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.21%)</title><rect x="461" y="132" width="3" height="15" fill="rgb(240,6,29)"/><text x="464.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.21%)</title><rect x="461" y="148" width="3" height="15" fill="rgb(215,12,51)"/><text x="464.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.21%)</title><rect x="461" y="164" width="3" height="15" fill="rgb(208,2,5)"/><text x="464.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.21%)</title><rect x="461" y="180" width="3" height="15" fill="rgb(243,207,24)"/><text x="464.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.21%)</title><rect x="461" y="196" width="3" height="15" fill="rgb(245,23,54)"/><text x="464.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="461" y="212" width="3" height="15" fill="rgb(221,210,14)"/><text x="464.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="461" y="228" width="3" height="15" fill="rgb(246,48,11)"/><text x="464.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="461" y="244" width="3" height="15" fill="rgb(227,103,37)"/><text x="464.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="461" y="260" width="3" height="15" fill="rgb(217,189,26)"/><text x="464.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="461" y="276" width="3" height="15" fill="rgb(219,142,46)"/><text x="464.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.21%)</title><rect x="461" y="292" width="3" height="15" fill="rgb(225,137,30)"/><text x="464.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="461" y="308" width="3" height="15" fill="rgb(215,209,3)"/><text x="464.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="461" y="324" width="3" height="15" fill="rgb(217,6,26)"/><text x="464.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="461" y="340" width="3" height="15" fill="rgb(211,192,36)"/><text x="464.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.21%)</title><rect x="461" y="356" width="3" height="15" fill="rgb(231,122,20)"/><text x="464.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.21%)</title><rect x="461" y="372" width="3" height="15" fill="rgb(234,55,53)"/><text x="464.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:72) (1 samples, 0.21%)</title><rect x="461" y="388" width="3" height="15" fill="rgb(252,204,50)"/><text x="464.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.21%)</title><rect x="461" y="404" width="3" height="15" fill="rgb(237,209,10)"/><text x="464.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.21%)</title><rect x="461" y="420" width="3" height="15" fill="rgb(235,55,2)"/><text x="464.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.21%)</title><rect x="461" y="436" width="3" height="15" fill="rgb(244,29,44)"/><text x="464.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.21%)</title><rect x="461" y="452" width="3" height="15" fill="rgb(239,34,46)"/><text x="464.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.21%)</title><rect x="461" y="468" width="3" height="15" fill="rgb(210,90,33)"/><text x="464.00" y="478.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.21%)</title><rect x="461" y="484" width="3" height="15" fill="rgb(219,125,41)"/><text x="464.00" y="494.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="461" y="500" width="3" height="15" fill="rgb(240,12,35)"/><text x="464.00" y="510.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:18) (1 samples, 0.21%)</title><rect x="464" y="100" width="2" height="15" fill="rgb(246,200,41)"/><text x="467.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.21%)</title><rect x="464" y="116" width="2" height="15" fill="rgb(210,181,7)"/><text x="467.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (1 samples, 0.21%)</title><rect x="464" y="132" width="2" height="15" fill="rgb(214,209,49)"/><text x="467.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.21%)</title><rect x="464" y="148" width="2" height="15" fill="rgb(208,158,36)"/><text x="467.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.21%)</title><rect x="464" y="164" width="2" height="15" fill="rgb(218,58,22)"/><text x="467.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.21%)</title><rect x="464" y="180" width="2" height="15" fill="rgb(225,63,19)"/><text x="467.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.21%)</title><rect x="464" y="196" width="2" height="15" fill="rgb(248,71,9)"/><text x="467.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.21%)</title><rect x="464" y="212" width="2" height="15" fill="rgb(253,227,20)"/><text x="467.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.21%)</title><rect x="464" y="228" width="2" height="15" fill="rgb(228,206,1)"/><text x="467.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.21%)</title><rect x="464" y="244" width="2" height="15" fill="rgb(208,14,45)"/><text x="467.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.21%)</title><rect x="464" y="260" width="2" height="15" fill="rgb(250,136,27)"/><text x="467.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.21%)</title><rect x="464" y="276" width="2" height="15" fill="rgb(249,177,21)"/><text x="467.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.21%)</title><rect x="466" y="148" width="3" height="15" fill="rgb(241,85,2)"/><text x="469.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.21%)</title><rect x="469" y="164" width="2" height="15" fill="rgb(214,228,52)"/><text x="472.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.42%)</title><rect x="474" y="180" width="5" height="15" fill="rgb(249,62,4)"/><text x="477.00" y="190.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.21%)</title><rect x="481" y="244" width="2" height="15" fill="rgb(252,63,21)"/><text x="484.00" y="254.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:635) (1 samples, 0.21%)</title><rect x="488" y="324" width="3" height="15" fill="rgb(244,198,31)"/><text x="491.00" y="334.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.21%)</title><rect x="488" y="340" width="3" height="15" fill="rgb(228,124,30)"/><text x="491.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="488" y="356" width="3" height="15" fill="rgb(228,130,38)"/><text x="491.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (20 samples, 4.18%)</title><rect x="488" y="276" width="50" height="15" fill="rgb(248,147,46)"/><text x="491.00" y="286.50">array..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (20 samples, 4.18%)</title><rect x="488" y="292" width="50" height="15" fill="rgb(253,225,18)"/><text x="491.00" y="302.50">array..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (20 samples, 4.18%)</title><rect x="488" y="308" width="50" height="15" fill="rgb(220,213,23)"/><text x="491.00" y="318.50">PyArr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (19 samples, 3.97%)</title><rect x="491" y="324" width="47" height="15" fill="rgb(246,68,20)"/><text x="494.00" y="334.50">cbla..</text></g><g><title>gemm (cblasfuncs.c:40) (19 samples, 3.97%)</title><rect x="491" y="340" width="47" height="15" fill="rgb(232,175,35)"/><text x="494.00" y="350.50">gemm..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 3.97%)</title><rect x="491" y="356" width="47" height="15" fill="rgb(242,189,33)"/><text x="494.00" y="366.50">cbla..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 3.97%)</title><rect x="491" y="372" width="47" height="15" fill="rgb(217,130,2)"/><text x="494.00" y="382.50">sgem..</text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 3.77%)</title><rect x="493" y="388" width="45" height="15" fill="rgb(235,60,5)"/><text x="496.00" y="398.50">sgem..</text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.84%)</title><rect x="538" y="276" width="10" height="15" fill="rgb(207,189,25)"/><text x="541.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (76 samples, 15.90%)</title><rect x="479" y="228" width="187" height="15" fill="rgb(218,101,8)"/><text x="482.00" y="238.50">_run (mlprodict/onnxrt/o..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (74 samples, 15.48%)</title><rect x="483" y="244" width="183" height="15" fill="rgb(230,218,4)"/><text x="486.00" y="254.50">numpy_dot_inplace (mlpr..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (73 samples, 15.27%)</title><rect x="486" y="260" width="180" height="15" fill="rgb(211,76,0)"/><text x="489.00" y="270.50">dot (&lt;__array_function_..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (48 samples, 10.04%)</title><rect x="548" y="276" width="118" height="15" fill="rgb(238,214,21)"/><text x="551.00" y="286.50">sgemm_kernel_S..</text></g><g><title>0x7ff6c1518124 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="669" y="244" width="2" height="15" fill="rgb(249,185,11)"/><text x="672.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.21%)</title><rect x="671" y="260" width="3" height="15" fill="rgb(207,77,16)"/><text x="674.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.21%)</title><rect x="671" y="276" width="3" height="15" fill="rgb(210,96,52)"/><text x="674.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.21%)</title><rect x="674" y="260" width="2" height="15" fill="rgb(226,166,48)"/><text x="677.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.21%)</title><rect x="674" y="276" width="2" height="15" fill="rgb(253,183,21)"/><text x="677.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:229) (1 samples, 0.21%)</title><rect x="674" y="292" width="2" height="15" fill="rgb(237,35,22)"/><text x="677.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.21%)</title><rect x="676" y="276" width="2" height="15" fill="rgb(206,39,21)"/><text x="679.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.21%)</title><rect x="676" y="292" width="2" height="15" fill="rgb(243,79,20)"/><text x="679.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.21%)</title><rect x="678" y="292" width="3" height="15" fill="rgb(217,12,48)"/><text x="681.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:855) (1 samples, 0.21%)</title><rect x="678" y="308" width="3" height="15" fill="rgb(251,143,42)"/><text x="681.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.42%)</title><rect x="681" y="340" width="5" height="15" fill="rgb(223,15,21)"/><text x="684.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (9 samples, 1.88%)</title><rect x="666" y="228" width="22" height="15" fill="rgb(249,68,54)"/><text x="669.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.46%)</title><rect x="671" y="244" width="17" height="15" fill="rgb(246,45,32)"/><text x="674.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.05%)</title><rect x="676" y="260" width="12" height="15" fill="rgb(249,17,14)"/><text x="679.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.84%)</title><rect x="678" y="276" width="10" height="15" fill="rgb(238,197,8)"/><text x="681.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.63%)</title><rect x="681" y="292" width="7" height="15" fill="rgb(210,45,4)"/><text x="684.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.63%)</title><rect x="681" y="308" width="7" height="15" fill="rgb(207,124,14)"/><text x="684.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.63%)</title><rect x="681" y="324" width="7" height="15" fill="rgb(251,147,22)"/><text x="684.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.21%)</title><rect x="686" y="340" width="2" height="15" fill="rgb(235,100,52)"/><text x="689.00" y="350.50"></text></g><g><title>0x7ff6c1517dbe (libc-2.29.so) (1 samples, 0.21%)</title><rect x="686" y="356" width="2" height="15" fill="rgb(224,22,2)"/><text x="689.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (2 samples, 0.42%)</title><rect x="688" y="228" width="5" height="15" fill="rgb(229,156,33)"/><text x="691.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.21%)</title><rect x="693" y="308" width="3" height="15" fill="rgb(236,217,23)"/><text x="696.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.21%)</title><rect x="696" y="324" width="2" height="15" fill="rgb(241,215,40)"/><text x="699.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.21%)</title><rect x="696" y="340" width="2" height="15" fill="rgb(228,53,23)"/><text x="699.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.21%)</title><rect x="698" y="340" width="3" height="15" fill="rgb(251,64,0)"/><text x="701.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (2 samples, 0.42%)</title><rect x="701" y="340" width="5" height="15" fill="rgb(231,159,17)"/><text x="704.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (2 samples, 0.42%)</title><rect x="706" y="340" width="5" height="15" fill="rgb(215,11,32)"/><text x="709.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (7 samples, 1.46%)</title><rect x="698" y="324" width="18" height="15" fill="rgb(205,110,53)"/><text x="701.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (2 samples, 0.42%)</title><rect x="711" y="340" width="5" height="15" fill="rgb(210,217,35)"/><text x="714.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (97 samples, 20.29%)</title><rect x="479" y="196" width="239" height="15" fill="rgb(222,163,16)"/><text x="482.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (97 samples, 20.29%)</title><rect x="479" y="212" width="239" height="15" fill="rgb(214,106,42)"/><text x="482.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (10 samples, 2.09%)</title><rect x="693" y="228" width="25" height="15" fill="rgb(215,161,7)"/><text x="696.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (10 samples, 2.09%)</title><rect x="693" y="244" width="25" height="15" fill="rgb(239,127,35)"/><text x="696.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 2.09%)</title><rect x="693" y="260" width="25" height="15" fill="rgb(218,99,35)"/><text x="696.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (10 samples, 2.09%)</title><rect x="693" y="276" width="25" height="15" fill="rgb(226,57,34)"/><text x="696.00" y="286.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (10 samples, 2.09%)</title><rect x="693" y="292" width="25" height="15" fill="rgb(219,4,50)"/><text x="696.00" y="302.50">_..</text></g><g><title>array_argmax (methods.c:302) (9 samples, 1.88%)</title><rect x="696" y="308" width="22" height="15" fill="rgb(219,13,34)"/><text x="699.00" y="318.50">a..</text></g><g><title>PyArray_ArgMax (calculation.c:132) (1 samples, 0.21%)</title><rect x="716" y="324" width="2" height="15" fill="rgb(235,52,32)"/><text x="719.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (98 samples, 20.50%)</title><rect x="479" y="180" width="241" height="15" fill="rgb(251,211,9)"/><text x="482.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.21%)</title><rect x="718" y="196" width="2" height="15" fill="rgb(231,5,33)"/><text x="721.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.21%)</title><rect x="718" y="212" width="2" height="15" fill="rgb(223,150,34)"/><text x="721.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.21%)</title><rect x="718" y="228" width="2" height="15" fill="rgb(215,133,48)"/><text x="721.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.21%)</title><rect x="720" y="180" width="3" height="15" fill="rgb(230,146,40)"/><text x="723.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.21%)</title><rect x="723" y="180" width="2" height="15" fill="rgb(237,191,35)"/><text x="726.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (104 samples, 21.76%)</title><rect x="471" y="164" width="257" height="15" fill="rgb(207,183,9)"/><text x="474.00" y="174.50">_run_sequence_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.21%)</title><rect x="725" y="180" width="3" height="15" fill="rgb(249,26,26)"/><text x="728.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.21%)</title><rect x="728" y="164" width="2" height="15" fill="rgb(224,18,41)"/><text x="731.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.21%)</title><rect x="728" y="180" width="2" height="15" fill="rgb(205,138,18)"/><text x="731.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:45) (110 samples, 23.01%)</title><rect x="461" y="52" width="272" height="15" fill="rgb(230,171,4)"/><text x="464.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_l..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:44) (110 samples, 23.01%)</title><rect x="461" y="68" width="272" height="15" fill="rgb(205,196,6)"/><text x="464.00" y="78.50">profile_pyrt (bench_LogisticRegressi..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:29) (109 samples, 22.80%)</title><rect x="464" y="84" width="269" height="15" fill="rgb(253,182,18)"/><text x="467.00" y="94.50">setup_profile (bench_LogisticRegres..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:23) (108 samples, 22.59%)</title><rect x="466" y="100" width="267" height="15" fill="rgb(232,25,8)"/><text x="469.00" y="110.50">profile (bench_LogisticRegression_l..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (108 samples, 22.59%)</title><rect x="466" y="116" width="267" height="15" fill="rgb(241,119,45)"/><text x="469.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (108 samples, 22.59%)</title><rect x="466" y="132" width="267" height="15" fill="rgb(212,215,40)"/><text x="469.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (107 samples, 22.38%)</title><rect x="469" y="148" width="264" height="15" fill="rgb(250,93,3)"/><text x="472.00" y="158.50">run (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:546) (1 samples, 0.21%)</title><rect x="730" y="164" width="3" height="15" fill="rgb(223,45,0)"/><text x="733.00" y="174.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:18) (1 samples, 0.21%)</title><rect x="733" y="100" width="2" height="15" fill="rgb(233,122,33)"/><text x="736.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.21%)</title><rect x="733" y="116" width="2" height="15" fill="rgb(223,63,14)"/><text x="736.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (1 samples, 0.21%)</title><rect x="733" y="132" width="2" height="15" fill="rgb(249,126,33)"/><text x="736.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.21%)</title><rect x="733" y="148" width="2" height="15" fill="rgb(253,169,26)"/><text x="736.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.21%)</title><rect x="733" y="164" width="2" height="15" fill="rgb(245,219,1)"/><text x="736.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.21%)</title><rect x="733" y="180" width="2" height="15" fill="rgb(210,51,23)"/><text x="736.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.21%)</title><rect x="733" y="196" width="2" height="15" fill="rgb(208,94,30)"/><text x="736.00" y="206.50"></text></g><g><title>0x7ff681567ff9 (?) (1 samples, 0.21%)</title><rect x="733" y="212" width="2" height="15" fill="rgb(209,80,28)"/><text x="736.00" y="222.50"></text></g><g><title>0x7ff681562ef6 (?) (1 samples, 0.21%)</title><rect x="733" y="228" width="2" height="15" fill="rgb(241,227,26)"/><text x="736.00" y="238.50"></text></g><g><title>0x7ff681557962 (?) (1 samples, 0.21%)</title><rect x="733" y="244" width="2" height="15" fill="rgb(240,166,9)"/><text x="736.00" y="254.50"></text></g><g><title>0x7ff68158b7a7 (?) (1 samples, 0.21%)</title><rect x="733" y="260" width="2" height="15" fill="rgb(252,150,17)"/><text x="736.00" y="270.50"></text></g><g><title>0x7ff68158b379 (?) (1 samples, 0.21%)</title><rect x="733" y="276" width="2" height="15" fill="rgb(212,118,31)"/><text x="736.00" y="286.50"></text></g><g><title>0x7ff6819e98b8 (?) (1 samples, 0.21%)</title><rect x="733" y="292" width="2" height="15" fill="rgb(222,29,43)"/><text x="736.00" y="302.50"></text></g><g><title>0x7ff6819e7c7f (?) (1 samples, 0.21%)</title><rect x="733" y="308" width="2" height="15" fill="rgb(209,35,48)"/><text x="736.00" y="318.50"></text></g><g><title>0x7ff6819fa99c (?) (1 samples, 0.21%)</title><rect x="733" y="324" width="2" height="15" fill="rgb(252,164,47)"/><text x="736.00" y="334.50"></text></g><g><title>0x7ff6816dfb33 (?) (1 samples, 0.21%)</title><rect x="733" y="340" width="2" height="15" fill="rgb(231,127,26)"/><text x="736.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.21%)</title><rect x="738" y="148" width="2" height="15" fill="rgb(240,10,4)"/><text x="741.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.63%)</title><rect x="743" y="196" width="7" height="15" fill="rgb(215,72,0)"/><text x="746.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (3 samples, 0.63%)</title><rect x="743" y="212" width="7" height="15" fill="rgb(250,185,31)"/><text x="746.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="748" y="228" width="2" height="15" fill="rgb(242,136,37)"/><text x="751.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="748" y="244" width="2" height="15" fill="rgb(218,19,17)"/><text x="751.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="748" y="260" width="2" height="15" fill="rgb(209,27,10)"/><text x="751.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="748" y="276" width="2" height="15" fill="rgb(208,201,6)"/><text x="751.00" y="286.50"></text></g><g><title>0x7ff6c150de98 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="748" y="292" width="2" height="15" fill="rgb(221,108,26)"/><text x="751.00" y="302.50"></text></g><g><title>0x7ff6c14f79d3 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="750" y="228" width="3" height="15" fill="rgb(250,60,47)"/><text x="753.00" y="238.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="753" y="260" width="2" height="15" fill="rgb(209,185,21)"/><text x="756.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="755" y="292" width="2" height="15" fill="rgb(254,172,34)"/><text x="758.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="755" y="308" width="2" height="15" fill="rgb(243,10,14)"/><text x="758.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="755" y="324" width="2" height="15" fill="rgb(220,73,49)"/><text x="758.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="757" y="292" width="3" height="15" fill="rgb(205,205,6)"/><text x="760.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="760" y="292" width="2" height="15" fill="rgb(245,132,27)"/><text x="763.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="760" y="308" width="2" height="15" fill="rgb(239,200,1)"/><text x="763.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="760" y="324" width="2" height="15" fill="rgb(226,18,36)"/><text x="763.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="760" y="340" width="2" height="15" fill="rgb(239,222,35)"/><text x="763.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="762" y="340" width="3" height="15" fill="rgb(252,168,14)"/><text x="765.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="762" y="356" width="3" height="15" fill="rgb(225,95,1)"/><text x="765.00" y="366.50"></text></g><g><title>0x7ff68152e850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1162" y="372" width="3" height="15" fill="rgb(226,189,10)"/><text x="1165.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.63%)</title><rect x="1160" y="356" width="7" height="15" fill="rgb(243,65,19)"/><text x="1163.00" y="366.50"></text></g><g><title>0x7ff6c1517dae (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1165" y="372" width="2" height="15" fill="rgb(229,24,43)"/><text x="1168.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 34.52%)</title><rect x="762" y="308" width="408" height="15" fill="rgb(226,23,4)"/><text x="765.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 34.52%)</title><rect x="762" y="324" width="408" height="15" fill="rgb(252,30,0)"/><text x="765.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/c..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (164 samples, 34.31%)</title><rect x="765" y="340" width="405" height="15" fill="rgb(212,9,31)"/><text x="768.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnx..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="1167" y="356" width="3" height="15" fill="rgb(230,141,10)"/><text x="1170.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1167" y="372" width="3" height="15" fill="rgb(210,7,43)"/><text x="1170.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (170 samples, 35.56%)</title><rect x="755" y="260" width="420" height="15" fill="rgb(219,48,0)"/><text x="758.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (170 samples, 35.56%)</title><rect x="755" y="276" width="420" height="15" fill="rgb(222,73,33)"/><text x="758.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 34.94%)</title><rect x="762" y="292" width="413" height="15" fill="rgb(217,0,44)"/><text x="765.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxr..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1170" y="308" width="5" height="15" fill="rgb(217,65,24)"/><text x="1173.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1172" y="324" width="3" height="15" fill="rgb(238,129,42)"/><text x="1175.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.21%)</title><rect x="1172" y="340" width="3" height="15" fill="rgb(216,123,24)"/><text x="1175.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="260" width="2" height="15" fill="rgb(251,15,18)"/><text x="1178.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="276" width="2" height="15" fill="rgb(227,37,28)"/><text x="1178.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="292" width="2" height="15" fill="rgb(209,133,50)"/><text x="1178.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="308" width="2" height="15" fill="rgb(226,53,27)"/><text x="1178.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1175" y="324" width="2" height="15" fill="rgb(250,53,42)"/><text x="1178.00" y="334.50"></text></g><g><title>0x7ff6c1517d94 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1177" y="276" width="3" height="15" fill="rgb(242,192,25)"/><text x="1180.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.21%)</title><rect x="1180" y="276" width="2" height="15" fill="rgb(239,45,25)"/><text x="1183.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4427) (1 samples, 0.21%)</title><rect x="1180" y="292" width="2" height="15" fill="rgb(225,19,17)"/><text x="1183.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (175 samples, 36.61%)</title><rect x="753" y="244" width="432" height="15" fill="rgb(250,1,54)"/><text x="756.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.63%)</title><rect x="1177" y="260" width="8" height="15" fill="rgb(241,221,54)"/><text x="1180.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.21%)</title><rect x="1182" y="276" width="3" height="15" fill="rgb(222,80,46)"/><text x="1185.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.21%)</title><rect x="1182" y="292" width="3" height="15" fill="rgb(222,151,38)"/><text x="1185.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.21%)</title><rect x="1182" y="308" width="3" height="15" fill="rgb(231,205,35)"/><text x="1185.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.21%)</title><rect x="1182" y="324" width="3" height="15" fill="rgb(210,76,18)"/><text x="1185.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.21%)</title><rect x="1182" y="340" width="3" height="15" fill="rgb(207,192,19)"/><text x="1185.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1182" y="356" width="3" height="15" fill="rgb(250,9,39)"/><text x="1185.00" y="366.50"></text></g><g><title>0x7ff6c14f9028 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1182" y="372" width="3" height="15" fill="rgb(211,127,3)"/><text x="1185.00" y="382.50"></text></g><g><title>0x7ff6c14f6b72 (libc-2.29.so) (1 samples, 0.21%)</title><rect x="1182" y="388" width="3" height="15" fill="rgb(219,42,5)"/><text x="1185.00" y="398.50"></text></g><g><title>all (478 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,119,7)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:52) (185 samples, 38.70%)</title><rect x="733" y="52" width="457" height="15" fill="rgb(217,90,10)"/><text x="736.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_m_cl_dec_solv..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:51) (185 samples, 38.70%)</title><rect x="733" y="68" width="457" height="15" fill="rgb(229,170,15)"/><text x="736.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_dec_m_cl_dec_s..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:29) (185 samples, 38.70%)</title><rect x="733" y="84" width="457" height="15" fill="rgb(228,224,20)"/><text x="736.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_m_cl_dec..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solverliblinear_1000_50_12_float_raw_score.py:23) (184 samples, 38.49%)</title><rect x="735" y="100" width="455" height="15" fill="rgb(235,97,33)"/><text x="738.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_m_cl_dec_solve..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (184 samples, 38.49%)</title><rect x="735" y="116" width="455" height="15" fill="rgb(215,134,28)"/><text x="738.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256) (183 samples, 38.28%)</title><rect x="738" y="132" width="452" height="15" fill="rgb(243,99,42)"/><text x="741.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:256)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (182 samples, 38.08%)</title><rect x="740" y="148" width="450" height="15" fill="rgb(216,120,15)"/><text x="743.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (182 samples, 38.08%)</title><rect x="740" y="164" width="450" height="15" fill="rgb(208,210,23)"/><text x="743.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (181 samples, 37.87%)</title><rect x="743" y="180" width="447" height="15" fill="rgb(240,53,32)"/><text x="746.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (178 samples, 37.24%)</title><rect x="750" y="196" width="440" height="15" fill="rgb(213,2,40)"/><text x="753.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (178 samples, 37.24%)</title><rect x="750" y="212" width="440" height="15" fill="rgb(220,25,36)"/><text x="753.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (177 samples, 37.03%)</title><rect x="753" y="228" width="437" height="15" fill="rgb(215,182,30)"/><text x="756.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(242,68,39)"/><text x="1188.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.42%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(230,172,2)"/><text x="1188.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.21%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(235,21,46)"/><text x="1190.00" y="286.50"></text></g></g></svg>