<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2070" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2053.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2053.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(245,148,34)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(238,158,38)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(205,97,26)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(236,224,48)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(244,173,8)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(237,92,29)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(245,55,25)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(210,155,50)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(220,193,23)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(214,20,36)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.13%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(237,32,40)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.13%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(244,142,4)"/><text x="13.00" y="1054.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(209,105,48)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(209,137,15)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(254,76,6)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(242,79,41)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(247,45,3)"/><text x="14.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(233,218,47)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(224,0,0)"/><text x="14.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(214,10,31)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(220,10,40)"/><text x="14.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.13%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(220,2,51)"/><text x="14.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.13%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(241,102,34)"/><text x="14.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.13%)</title><rect x="11" y="1044" width="2" height="15" fill="rgb(208,50,45)"/><text x="14.00" y="1054.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="1060" width="2" height="15" fill="rgb(229,98,51)"/><text x="14.00" y="1070.50"></text></g><g><title>0x7fdc20930276 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="1076" width="2" height="15" fill="rgb(223,45,40)"/><text x="14.00" y="1086.50"></text></g><g><title>0x7fdc2094df4a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="1092" width="2" height="15" fill="rgb(243,132,19)"/><text x="14.00" y="1102.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(215,84,21)"/><text x="16.00" y="926.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(213,44,25)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(208,161,32)"/><text x="16.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(207,18,47)"/><text x="17.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(239,49,43)"/><text x="17.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(235,40,22)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(206,147,49)"/><text x="17.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.13%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(211,218,41)"/><text x="17.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.13%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(229,191,26)"/><text x="17.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.13%)</title><rect x="14" y="1012" width="2" height="15" fill="rgb(221,3,28)"/><text x="17.00" y="1022.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.67%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(254,156,46)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.67%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(220,26,16)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.40%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(241,20,42)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.40%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(252,214,26)"/><text x="16.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(231,163,42)"/><text x="19.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.13%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(239,7,10)"/><text x="19.00" y="926.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(231,127,3)"/><text x="19.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.80%)</title><rect x="10" y="292" width="9" height="15" fill="rgb(246,10,40)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="308" width="9" height="15" fill="rgb(220,84,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="324" width="9" height="15" fill="rgb(247,15,37)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(215,86,20)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.80%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(230,161,23)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(223,160,14)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.80%)</title><rect x="10" y="388" width="9" height="15" fill="rgb(229,168,21)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="404" width="9" height="15" fill="rgb(252,54,39)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="420" width="9" height="15" fill="rgb(217,182,2)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="436" width="9" height="15" fill="rgb(215,189,10)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.80%)</title><rect x="10" y="452" width="9" height="15" fill="rgb(214,50,5)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="468" width="9" height="15" fill="rgb(253,194,48)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.80%)</title><rect x="10" y="484" width="9" height="15" fill="rgb(214,9,10)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="500" width="9" height="15" fill="rgb(221,146,0)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="516" width="9" height="15" fill="rgb(209,145,47)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="532" width="9" height="15" fill="rgb(230,207,18)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.80%)</title><rect x="10" y="548" width="9" height="15" fill="rgb(211,198,22)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="564" width="9" height="15" fill="rgb(207,42,47)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.80%)</title><rect x="10" y="580" width="9" height="15" fill="rgb(215,106,38)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="596" width="9" height="15" fill="rgb(205,212,10)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="612" width="9" height="15" fill="rgb(244,178,17)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="628" width="9" height="15" fill="rgb(233,111,9)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="644" width="9" height="15" fill="rgb(232,220,36)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="660" width="9" height="15" fill="rgb(248,93,24)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="676" width="9" height="15" fill="rgb(234,11,54)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.80%)</title><rect x="10" y="692" width="9" height="15" fill="rgb(214,66,45)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="708" width="9" height="15" fill="rgb(238,208,26)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.80%)</title><rect x="10" y="724" width="9" height="15" fill="rgb(213,173,35)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="740" width="9" height="15" fill="rgb(223,152,15)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="756" width="9" height="15" fill="rgb(218,154,11)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="772" width="9" height="15" fill="rgb(213,119,3)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.80%)</title><rect x="10" y="788" width="9" height="15" fill="rgb(214,184,35)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="10" y="804" width="9" height="15" fill="rgb(245,181,49)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.80%)</title><rect x="10" y="820" width="9" height="15" fill="rgb(210,228,14)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(227,175,37)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(206,6,12)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(245,55,53)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(237,137,8)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(223,221,12)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.13%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(221,111,0)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(217,54,24)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(243,0,26)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(216,225,17)"/><text x="20.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(239,3,29)"/><text x="20.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.13%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(212,44,29)"/><text x="20.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(228,16,24)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(253,174,31)"/><text x="20.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(227,28,18)"/><text x="20.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(219,63,2)"/><text x="20.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(246,93,24)"/><text x="20.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.13%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(235,206,51)"/><text x="20.00" y="1102.50"></text></g><g><title>setParseAction (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.13%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(206,226,25)"/><text x="20.00" y="1118.50"></text></g><g><title>_trim_arity (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.13%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(215,48,24)"/><text x="20.00" y="1134.50"></text></g><g><title>extract_stack (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.13%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(229,78,53)"/><text x="20.00" y="1150.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.13%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(226,187,16)"/><text x="20.00" y="1166.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.13%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(250,151,31)"/><text x="20.00" y="1182.50"></text></g><g><title>line (traceback.py) (1 samples, 0.13%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(222,34,19)"/><text x="20.00" y="1198.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.13%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(244,1,17)"/><text x="20.00" y="1214.50"></text></g><g><title>getlines (linecache.py) (1 samples, 0.13%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(240,181,10)"/><text x="20.00" y="1230.50"></text></g><g><title>updatecache (linecache.py) (1 samples, 0.13%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(242,222,9)"/><text x="20.00" y="1246.50"></text></g><g><title>decode (codecs.py) (1 samples, 0.13%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(228,220,15)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.93%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(233,19,31)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.93%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(208,20,23)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.93%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(221,186,0)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.93%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(222,51,9)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.93%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(229,204,5)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.93%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(231,152,51)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="292" width="1" height="15" fill="rgb(238,131,3)"/><text x="22.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="308" width="1" height="15" fill="rgb(228,54,7)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="324" width="1" height="15" fill="rgb(222,152,32)"/><text x="22.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="340" width="1" height="15" fill="rgb(238,193,39)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="356" width="1" height="15" fill="rgb(253,211,45)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="372" width="1" height="15" fill="rgb(205,215,43)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.13%)</title><rect x="19" y="388" width="1" height="15" fill="rgb(216,163,34)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="404" width="1" height="15" fill="rgb(248,148,24)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="420" width="1" height="15" fill="rgb(207,17,35)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="436" width="1" height="15" fill="rgb(221,198,50)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="452" width="1" height="15" fill="rgb(248,156,0)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="468" width="1" height="15" fill="rgb(245,199,53)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="484" width="1" height="15" fill="rgb(205,66,30)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="500" width="1" height="15" fill="rgb(233,57,7)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="516" width="1" height="15" fill="rgb(222,113,37)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="532" width="1" height="15" fill="rgb(227,228,35)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="548" width="1" height="15" fill="rgb(244,204,54)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="564" width="1" height="15" fill="rgb(240,146,0)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.13%)</title><rect x="19" y="580" width="1" height="15" fill="rgb(251,226,38)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="596" width="1" height="15" fill="rgb(220,76,28)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="612" width="1" height="15" fill="rgb(246,60,0)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="628" width="1" height="15" fill="rgb(213,161,38)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="644" width="1" height="15" fill="rgb(222,176,2)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="660" width="1" height="15" fill="rgb(228,33,50)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="676" width="1" height="15" fill="rgb(216,123,22)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="692" width="1" height="15" fill="rgb(214,206,17)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="708" width="1" height="15" fill="rgb(233,73,19)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="724" width="1" height="15" fill="rgb(238,109,43)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="740" width="1" height="15" fill="rgb(205,83,25)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="756" width="1" height="15" fill="rgb(233,206,8)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py) (1 samples, 0.13%)</title><rect x="19" y="772" width="1" height="15" fill="rgb(226,18,6)"/><text x="22.00" y="782.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.13%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(212,57,24)"/><text x="22.00" y="798.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="19" y="804" width="1" height="15" fill="rgb(211,60,22)"/><text x="22.00" y="814.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="19" y="820" width="1" height="15" fill="rgb(222,158,31)"/><text x="22.00" y="830.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="19" y="836" width="1" height="15" fill="rgb(208,205,18)"/><text x="22.00" y="846.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.13%)</title><rect x="19" y="852" width="1" height="15" fill="rgb(238,169,53)"/><text x="22.00" y="862.50"></text></g><g><title>0x7fdc1fb510c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="19" y="868" width="1" height="15" fill="rgb(253,10,19)"/><text x="22.00" y="878.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.13%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(254,94,14)"/><text x="23.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.13%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(241,4,52)"/><text x="23.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="484" width="5" height="15" fill="rgb(244,136,22)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="500" width="5" height="15" fill="rgb(215,19,17)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="516" width="5" height="15" fill="rgb(217,51,44)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="532" width="5" height="15" fill="rgb(226,216,42)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="548" width="5" height="15" fill="rgb(213,159,51)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="564" width="5" height="15" fill="rgb(224,173,25)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.40%)</title><rect x="20" y="580" width="5" height="15" fill="rgb(228,164,46)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="596" width="5" height="15" fill="rgb(211,46,53)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="612" width="5" height="15" fill="rgb(231,208,46)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="628" width="5" height="15" fill="rgb(245,73,52)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="644" width="5" height="15" fill="rgb(239,108,51)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="660" width="5" height="15" fill="rgb(250,218,36)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.40%)</title><rect x="20" y="676" width="5" height="15" fill="rgb(208,39,45)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="692" width="5" height="15" fill="rgb(242,207,42)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="708" width="5" height="15" fill="rgb(246,203,44)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="724" width="5" height="15" fill="rgb(247,156,48)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="740" width="5" height="15" fill="rgb(208,7,46)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="756" width="5" height="15" fill="rgb(205,3,35)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.40%)</title><rect x="20" y="772" width="5" height="15" fill="rgb(224,100,0)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="788" width="5" height="15" fill="rgb(226,11,23)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="804" width="5" height="15" fill="rgb(239,71,6)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="820" width="5" height="15" fill="rgb(248,62,38)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="836" width="5" height="15" fill="rgb(209,54,36)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="852" width="5" height="15" fill="rgb(220,108,5)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.40%)</title><rect x="20" y="868" width="5" height="15" fill="rgb(254,46,52)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="884" width="5" height="15" fill="rgb(251,57,43)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="900" width="5" height="15" fill="rgb(252,98,15)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(249,61,31)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(207,205,36)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(245,103,13)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(239,110,35)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(215,220,51)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="996" width="5" height="15" fill="rgb(246,185,12)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.40%)</title><rect x="20" y="1012" width="5" height="15" fill="rgb(237,49,31)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1028" width="5" height="15" fill="rgb(245,66,26)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1044" width="5" height="15" fill="rgb(241,156,41)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1060" width="5" height="15" fill="rgb(229,42,26)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="1076" width="5" height="15" fill="rgb(229,172,40)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1092" width="5" height="15" fill="rgb(214,46,5)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.40%)</title><rect x="20" y="1108" width="5" height="15" fill="rgb(215,179,9)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1124" width="5" height="15" fill="rgb(205,165,8)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1140" width="5" height="15" fill="rgb(212,36,28)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1156" width="5" height="15" fill="rgb(208,183,24)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="1172" width="5" height="15" fill="rgb(213,151,19)"/><text x="23.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1188" width="5" height="15" fill="rgb(240,194,12)"/><text x="23.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (3 samples, 0.40%)</title><rect x="20" y="1204" width="5" height="15" fill="rgb(252,226,46)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1220" width="5" height="15" fill="rgb(228,58,24)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1236" width="5" height="15" fill="rgb(207,39,33)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1252" width="5" height="15" fill="rgb(232,55,35)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="20" y="1268" width="5" height="15" fill="rgb(242,14,6)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="20" y="1284" width="5" height="15" fill="rgb(208,102,9)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (3 samples, 0.40%)</title><rect x="20" y="1300" width="5" height="15" fill="rgb(224,75,8)"/><text x="23.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (3 samples, 0.40%)</title><rect x="20" y="1316" width="5" height="15" fill="rgb(220,229,50)"/><text x="23.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (3 samples, 0.40%)</title><rect x="20" y="1332" width="5" height="15" fill="rgb(240,125,2)"/><text x="23.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (3 samples, 0.40%)</title><rect x="20" y="1348" width="5" height="15" fill="rgb(207,73,43)"/><text x="23.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (3 samples, 0.40%)</title><rect x="20" y="1364" width="5" height="15" fill="rgb(207,81,46)"/><text x="23.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py) (2 samples, 0.27%)</title><rect x="22" y="1380" width="3" height="15" fill="rgb(210,223,0)"/><text x="25.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="772" width="2" height="15" fill="rgb(248,104,40)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="788" width="2" height="15" fill="rgb(239,96,42)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="804" width="2" height="15" fill="rgb(249,75,43)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="820" width="2" height="15" fill="rgb(218,220,21)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="25" y="836" width="2" height="15" fill="rgb(215,116,11)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="852" width="2" height="15" fill="rgb(252,37,39)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.13%)</title><rect x="25" y="868" width="2" height="15" fill="rgb(243,51,35)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="884" width="2" height="15" fill="rgb(224,19,53)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="900" width="2" height="15" fill="rgb(210,229,26)"/><text x="28.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(230,22,39)"/><text x="28.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(243,41,21)"/><text x="28.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(236,35,14)"/><text x="28.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(227,83,4)"/><text x="28.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.67%)</title><rect x="20" y="340" width="8" height="15" fill="rgb(231,187,0)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="20" y="356" width="8" height="15" fill="rgb(249,194,23)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="20" y="372" width="8" height="15" fill="rgb(243,72,13)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="20" y="388" width="8" height="15" fill="rgb(248,169,26)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.67%)</title><rect x="20" y="404" width="8" height="15" fill="rgb(205,64,0)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="20" y="420" width="8" height="15" fill="rgb(229,13,30)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.67%)</title><rect x="20" y="436" width="8" height="15" fill="rgb(242,125,22)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="20" y="452" width="8" height="15" fill="rgb(243,108,16)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="20" y="468" width="8" height="15" fill="rgb(218,66,19)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="484" width="3" height="15" fill="rgb(209,79,19)"/><text x="28.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="25" y="500" width="3" height="15" fill="rgb(238,131,31)"/><text x="28.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="516" width="3" height="15" fill="rgb(232,142,6)"/><text x="28.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.27%)</title><rect x="25" y="532" width="3" height="15" fill="rgb(216,4,26)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="548" width="3" height="15" fill="rgb(249,47,25)"/><text x="28.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="564" width="3" height="15" fill="rgb(218,194,32)"/><text x="28.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="580" width="3" height="15" fill="rgb(243,35,18)"/><text x="28.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="25" y="596" width="3" height="15" fill="rgb(221,70,27)"/><text x="28.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="612" width="3" height="15" fill="rgb(245,78,48)"/><text x="28.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.27%)</title><rect x="25" y="628" width="3" height="15" fill="rgb(241,170,36)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="644" width="3" height="15" fill="rgb(242,7,43)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="660" width="3" height="15" fill="rgb(234,130,12)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="676" width="3" height="15" fill="rgb(218,107,34)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="25" y="692" width="3" height="15" fill="rgb(230,43,54)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="708" width="3" height="15" fill="rgb(217,183,40)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.27%)</title><rect x="25" y="724" width="3" height="15" fill="rgb(227,198,20)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="740" width="3" height="15" fill="rgb(254,187,11)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="25" y="756" width="3" height="15" fill="rgb(217,15,42)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="772" width="1" height="15" fill="rgb(229,122,54)"/><text x="30.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="788" width="1" height="15" fill="rgb(238,65,25)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="804" width="1" height="15" fill="rgb(253,220,51)"/><text x="30.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.13%)</title><rect x="27" y="820" width="1" height="15" fill="rgb(218,103,11)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="836" width="1" height="15" fill="rgb(235,66,31)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="852" width="1" height="15" fill="rgb(253,186,31)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="868" width="1" height="15" fill="rgb(233,98,27)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="884" width="1" height="15" fill="rgb(218,187,32)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="900" width="1" height="15" fill="rgb(213,60,26)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.13%)</title><rect x="27" y="916" width="1" height="15" fill="rgb(242,162,34)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="932" width="1" height="15" fill="rgb(206,134,17)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="948" width="1" height="15" fill="rgb(246,181,3)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="964" width="1" height="15" fill="rgb(233,61,22)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="980" width="1" height="15" fill="rgb(210,47,51)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="996" width="1" height="15" fill="rgb(207,187,50)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.13%)</title><rect x="27" y="1012" width="1" height="15" fill="rgb(222,36,27)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1028" width="1" height="15" fill="rgb(209,184,18)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1044" width="1" height="15" fill="rgb(246,73,30)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1060" width="1" height="15" fill="rgb(252,225,38)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1076" width="1" height="15" fill="rgb(230,38,37)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1092" width="1" height="15" fill="rgb(222,200,2)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.13%)</title><rect x="27" y="1108" width="1" height="15" fill="rgb(248,59,1)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1124" width="1" height="15" fill="rgb(241,163,41)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1140" width="1" height="15" fill="rgb(246,104,3)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1156" width="1" height="15" fill="rgb(252,93,36)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1172" width="1" height="15" fill="rgb(221,12,19)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1188" width="1" height="15" fill="rgb(233,123,5)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.13%)</title><rect x="27" y="1204" width="1" height="15" fill="rgb(232,14,47)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1220" width="1" height="15" fill="rgb(239,106,52)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1236" width="1" height="15" fill="rgb(237,214,38)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1252" width="1" height="15" fill="rgb(227,195,21)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1268" width="1" height="15" fill="rgb(225,85,47)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1284" width="1" height="15" fill="rgb(211,33,39)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.13%)</title><rect x="27" y="1300" width="1" height="15" fill="rgb(241,90,25)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1316" width="1" height="15" fill="rgb(221,52,25)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1332" width="1" height="15" fill="rgb(206,220,8)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1348" width="1" height="15" fill="rgb(206,19,43)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1364" width="1" height="15" fill="rgb(212,32,1)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1380" width="1" height="15" fill="rgb(230,189,37)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="27" y="1396" width="1" height="15" fill="rgb(240,107,3)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1412" width="1" height="15" fill="rgb(232,2,16)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1428" width="1" height="15" fill="rgb(230,71,51)"/><text x="30.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1444" width="1" height="15" fill="rgb(248,61,46)"/><text x="30.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1460" width="1" height="15" fill="rgb(247,211,41)"/><text x="30.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1476" width="1" height="15" fill="rgb(212,131,11)"/><text x="30.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.13%)</title><rect x="27" y="1492" width="1" height="15" fill="rgb(231,177,45)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1508" width="1" height="15" fill="rgb(212,40,0)"/><text x="30.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1524" width="1" height="15" fill="rgb(239,196,44)"/><text x="30.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1540" width="1" height="15" fill="rgb(229,112,0)"/><text x="30.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1556" width="1" height="15" fill="rgb(250,124,45)"/><text x="30.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1572" width="1" height="15" fill="rgb(243,205,37)"/><text x="30.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.13%)</title><rect x="27" y="1588" width="1" height="15" fill="rgb(207,114,50)"/><text x="30.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1604" width="1" height="15" fill="rgb(215,51,1)"/><text x="30.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1620" width="1" height="15" fill="rgb(248,155,42)"/><text x="30.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1636" width="1" height="15" fill="rgb(234,193,4)"/><text x="30.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1652" width="1" height="15" fill="rgb(223,157,43)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1668" width="1" height="15" fill="rgb(248,94,13)"/><text x="30.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.13%)</title><rect x="27" y="1684" width="1" height="15" fill="rgb(251,90,19)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1700" width="1" height="15" fill="rgb(225,225,49)"/><text x="30.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1716" width="1" height="15" fill="rgb(217,203,44)"/><text x="30.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1732" width="1" height="15" fill="rgb(220,221,18)"/><text x="30.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1748" width="1" height="15" fill="rgb(214,82,4)"/><text x="30.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1764" width="1" height="15" fill="rgb(237,46,29)"/><text x="30.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.13%)</title><rect x="27" y="1780" width="1" height="15" fill="rgb(223,188,46)"/><text x="30.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1796" width="1" height="15" fill="rgb(217,126,32)"/><text x="30.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1812" width="1" height="15" fill="rgb(209,183,3)"/><text x="30.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1828" width="1" height="15" fill="rgb(243,0,31)"/><text x="30.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="27" y="1844" width="1" height="15" fill="rgb(208,98,22)"/><text x="30.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="27" y="1860" width="1" height="15" fill="rgb(248,41,3)"/><text x="30.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.13%)</title><rect x="27" y="1876" width="1" height="15" fill="rgb(209,2,38)"/><text x="30.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="27" y="1892" width="1" height="15" fill="rgb(208,108,13)"/><text x="30.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="27" y="1908" width="1" height="15" fill="rgb(228,77,51)"/><text x="30.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.13%)</title><rect x="27" y="1924" width="1" height="15" fill="rgb(225,136,48)"/><text x="30.00" y="1934.50"></text></g><g><title>search (re.py) (1 samples, 0.13%)</title><rect x="27" y="1940" width="1" height="15" fill="rgb(218,76,50)"/><text x="30.00" y="1950.50"></text></g><g><title>_compile (re.py) (1 samples, 0.13%)</title><rect x="27" y="1956" width="1" height="15" fill="rgb(241,223,54)"/><text x="30.00" y="1966.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="27" y="1972" width="1" height="15" fill="rgb(254,42,51)"/><text x="30.00" y="1982.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.13%)</title><rect x="27" y="1988" width="1" height="15" fill="rgb(234,160,40)"/><text x="30.00" y="1998.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="27" y="2004" width="1" height="15" fill="rgb(251,166,49)"/><text x="30.00" y="2014.50"></text></g><g><title>_simple (sre_compile.py) (1 samples, 0.13%)</title><rect x="27" y="2020" width="1" height="15" fill="rgb(229,86,10)"/><text x="30.00" y="2030.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1524" width="2" height="15" fill="rgb(251,106,17)"/><text x="31.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1540" width="2" height="15" fill="rgb(224,175,33)"/><text x="31.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1556" width="2" height="15" fill="rgb(242,40,39)"/><text x="31.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1572" width="2" height="15" fill="rgb(254,133,40)"/><text x="31.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1588" width="2" height="15" fill="rgb(229,98,51)"/><text x="31.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1604" width="2" height="15" fill="rgb(250,173,50)"/><text x="31.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1620" width="2" height="15" fill="rgb(221,57,23)"/><text x="31.00" y="1630.50"></text></g><g><title>_uniq (sre_parse.py) (1 samples, 0.13%)</title><rect x="28" y="1636" width="2" height="15" fill="rgb(222,5,18)"/><text x="31.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(246,188,16)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(250,76,35)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(239,142,39)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(206,21,21)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(215,26,51)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (2 samples, 0.27%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(245,164,43)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(234,154,37)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(221,222,39)"/><text x="31.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(217,209,8)"/><text x="31.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(241,185,41)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(205,183,38)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (2 samples, 0.27%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(246,122,17)"/><text x="31.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(241,108,37)"/><text x="31.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(241,126,47)"/><text x="31.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(248,107,27)"/><text x="31.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(237,111,14)"/><text x="31.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(207,164,45)"/><text x="31.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (2 samples, 0.27%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(228,186,35)"/><text x="31.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(244,64,47)"/><text x="31.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(233,152,27)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(220,193,23)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(245,41,48)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1140" width="3" height="15" fill="rgb(212,194,35)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1156" width="3" height="15" fill="rgb(219,25,39)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="28" y="1172" width="3" height="15" fill="rgb(248,127,21)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1188" width="3" height="15" fill="rgb(221,91,11)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (2 samples, 0.27%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(229,134,19)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(213,149,34)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(222,51,32)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(219,2,15)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(218,173,29)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1284" width="3" height="15" fill="rgb(234,51,21)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (2 samples, 0.27%)</title><rect x="28" y="1300" width="3" height="15" fill="rgb(241,19,42)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1316" width="3" height="15" fill="rgb(237,94,6)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1332" width="3" height="15" fill="rgb(218,76,15)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1348" width="3" height="15" fill="rgb(213,121,21)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(236,141,33)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(208,8,54)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (2 samples, 0.27%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(231,219,54)"/><text x="31.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.27%)</title><rect x="28" y="1412" width="3" height="15" fill="rgb(224,131,7)"/><text x="31.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.27%)</title><rect x="28" y="1428" width="3" height="15" fill="rgb(224,190,47)"/><text x="31.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.27%)</title><rect x="28" y="1444" width="3" height="15" fill="rgb(233,226,52)"/><text x="31.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (2 samples, 0.27%)</title><rect x="28" y="1460" width="3" height="15" fill="rgb(236,65,21)"/><text x="31.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.27%)</title><rect x="28" y="1476" width="3" height="15" fill="rgb(220,107,36)"/><text x="31.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.27%)</title><rect x="28" y="1492" width="3" height="15" fill="rgb(240,163,22)"/><text x="31.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.27%)</title><rect x="28" y="1508" width="3" height="15" fill="rgb(232,61,31)"/><text x="31.00" y="1518.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="30" y="1524" width="1" height="15" fill="rgb(217,183,19)"/><text x="33.00" y="1534.50"></text></g><g><title>0x7fdc20930276 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="30" y="1540" width="1" height="15" fill="rgb(231,104,44)"/><text x="33.00" y="1550.50"></text></g><g><title>0x7fdc2094dd50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="30" y="1556" width="1" height="15" fill="rgb(232,82,6)"/><text x="33.00" y="1566.50"></text></g><g><title>&lt;module&gt; (simplejson/decoder.py) (1 samples, 0.13%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(247,94,39)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(237,136,8)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(223,28,18)"/><text x="34.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1332" width="2" height="15" fill="rgb(240,33,5)"/><text x="34.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="31" y="1348" width="2" height="15" fill="rgb(217,63,43)"/><text x="34.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1364" width="2" height="15" fill="rgb(227,78,2)"/><text x="34.00" y="1374.50"></text></g><g><title>&lt;module&gt; (simplejson/scanner.py) (1 samples, 0.13%)</title><rect x="31" y="1380" width="2" height="15" fill="rgb(249,32,34)"/><text x="34.00" y="1390.50"></text></g><g><title>_import_c_make_scanner (simplejson/scanner.py) (1 samples, 0.13%)</title><rect x="31" y="1396" width="2" height="15" fill="rgb(219,148,24)"/><text x="34.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1412" width="2" height="15" fill="rgb(215,200,52)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1428" width="2" height="15" fill="rgb(234,188,34)"/><text x="34.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1444" width="2" height="15" fill="rgb(222,192,33)"/><text x="34.00" y="1454.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1460" width="2" height="15" fill="rgb(245,114,46)"/><text x="34.00" y="1470.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="31" y="1476" width="2" height="15" fill="rgb(246,80,14)"/><text x="34.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="31" y="1492" width="2" height="15" fill="rgb(236,3,22)"/><text x="34.00" y="1502.50"></text></g><g><title>0x7fdc20925016 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="31" y="1508" width="2" height="15" fill="rgb(226,53,24)"/><text x="34.00" y="1518.50"></text></g><g><title>0x7fdc20912c86 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="31" y="1524" width="2" height="15" fill="rgb(249,202,49)"/><text x="34.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 1.20%)</title><rect x="20" y="244" width="15" height="15" fill="rgb(223,216,35)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="20" y="260" width="15" height="15" fill="rgb(230,104,35)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="20" y="276" width="15" height="15" fill="rgb(238,32,19)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="20" y="292" width="15" height="15" fill="rgb(229,82,24)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.20%)</title><rect x="20" y="308" width="15" height="15" fill="rgb(251,179,9)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.20%)</title><rect x="20" y="324" width="15" height="15" fill="rgb(230,207,20)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 0.53%)</title><rect x="28" y="340" width="7" height="15" fill="rgb(251,76,38)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="356" width="7" height="15" fill="rgb(254,140,29)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="372" width="7" height="15" fill="rgb(218,40,40)"/><text x="31.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="388" width="7" height="15" fill="rgb(226,70,43)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="404" width="7" height="15" fill="rgb(219,47,8)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="420" width="7" height="15" fill="rgb(226,58,50)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="436" width="7" height="15" fill="rgb(207,16,45)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.53%)</title><rect x="28" y="452" width="7" height="15" fill="rgb(215,49,8)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="468" width="7" height="15" fill="rgb(232,12,44)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 0.53%)</title><rect x="28" y="484" width="7" height="15" fill="rgb(222,154,8)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="500" width="7" height="15" fill="rgb(212,200,50)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="516" width="7" height="15" fill="rgb(248,15,44)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="532" width="7" height="15" fill="rgb(220,55,15)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.53%)</title><rect x="28" y="548" width="7" height="15" fill="rgb(232,8,41)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="564" width="7" height="15" fill="rgb(234,22,15)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (4 samples, 0.53%)</title><rect x="28" y="580" width="7" height="15" fill="rgb(220,116,21)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="596" width="7" height="15" fill="rgb(248,39,19)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="612" width="7" height="15" fill="rgb(250,83,12)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="628" width="7" height="15" fill="rgb(244,135,35)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.53%)</title><rect x="28" y="644" width="7" height="15" fill="rgb(249,180,11)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="660" width="7" height="15" fill="rgb(240,117,7)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (4 samples, 0.53%)</title><rect x="28" y="676" width="7" height="15" fill="rgb(225,42,12)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="692" width="7" height="15" fill="rgb(220,208,23)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="708" width="7" height="15" fill="rgb(224,197,29)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="724" width="7" height="15" fill="rgb(229,145,44)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.53%)</title><rect x="28" y="740" width="7" height="15" fill="rgb(229,4,54)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="28" y="756" width="7" height="15" fill="rgb(239,90,33)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (4 samples, 0.53%)</title><rect x="28" y="772" width="7" height="15" fill="rgb(237,136,49)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="788" width="4" height="15" fill="rgb(226,76,32)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="804" width="4" height="15" fill="rgb(237,223,22)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(208,58,41)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(219,111,11)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(252,162,45)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(220,13,16)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(229,158,20)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (2 samples, 0.27%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(238,221,45)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(244,181,37)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(223,21,17)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(223,223,2)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(246,68,19)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(243,164,16)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (2 samples, 0.27%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(232,187,13)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(226,130,3)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(225,110,22)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(224,25,14)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(216,166,15)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(216,36,41)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (2 samples, 0.27%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(234,39,49)"/><text x="34.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(243,114,47)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(207,163,23)"/><text x="34.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(223,217,37)"/><text x="34.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(211,71,53)"/><text x="34.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(249,177,7)"/><text x="34.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py) (2 samples, 0.27%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(208,25,8)"/><text x="34.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(243,103,34)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(253,156,42)"/><text x="34.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1236" width="4" height="15" fill="rgb(231,150,38)"/><text x="34.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="31" y="1252" width="4" height="15" fill="rgb(239,208,41)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="31" y="1268" width="4" height="15" fill="rgb(228,107,12)"/><text x="34.00" y="1278.50"></text></g><g><title>&lt;module&gt; (simplejson/encoder.py) (1 samples, 0.13%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(211,117,40)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.26%)</title><rect x="10" y="68" width="26" height="15" fill="rgb(242,172,16)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.26%)</title><rect x="10" y="84" width="26" height="15" fill="rgb(221,114,10)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.26%)</title><rect x="10" y="100" width="26" height="15" fill="rgb(218,141,35)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 2.26%)</title><rect x="10" y="116" width="26" height="15" fill="rgb(225,41,29)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.26%)</title><rect x="10" y="132" width="26" height="15" fill="rgb(213,169,34)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_linear_b_cl_probabilityTrue_kernellinear.py) (17 samples, 2.26%)</title><rect x="10" y="148" width="26" height="15" fill="rgb(224,24,8)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.26%)</title><rect x="10" y="164" width="26" height="15" fill="rgb(241,41,15)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.26%)</title><rect x="10" y="180" width="26" height="15" fill="rgb(215,107,42)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="20" y="196" width="16" height="15" fill="rgb(249,173,28)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.33%)</title><rect x="20" y="212" width="16" height="15" fill="rgb(233,109,4)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.33%)</title><rect x="20" y="228" width="16" height="15" fill="rgb(208,216,17)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.13%)</title><rect x="35" y="244" width="1" height="15" fill="rgb(245,111,29)"/><text x="38.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="260" width="1" height="15" fill="rgb(213,65,7)"/><text x="38.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="276" width="1" height="15" fill="rgb(205,71,30)"/><text x="38.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="292" width="1" height="15" fill="rgb(241,48,6)"/><text x="38.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="308" width="1" height="15" fill="rgb(205,89,40)"/><text x="38.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="324" width="1" height="15" fill="rgb(228,207,20)"/><text x="38.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="35" y="340" width="1" height="15" fill="rgb(208,13,21)"/><text x="38.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="356" width="1" height="15" fill="rgb(215,17,21)"/><text x="38.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.13%)</title><rect x="35" y="372" width="1" height="15" fill="rgb(253,228,36)"/><text x="38.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="388" width="1" height="15" fill="rgb(210,206,16)"/><text x="38.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="404" width="1" height="15" fill="rgb(225,108,8)"/><text x="38.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="420" width="1" height="15" fill="rgb(220,228,53)"/><text x="38.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="35" y="436" width="1" height="15" fill="rgb(223,21,9)"/><text x="38.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="452" width="1" height="15" fill="rgb(248,141,19)"/><text x="38.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py) (1 samples, 0.13%)</title><rect x="35" y="468" width="1" height="15" fill="rgb(244,51,29)"/><text x="38.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="484" width="1" height="15" fill="rgb(234,65,14)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="500" width="1" height="15" fill="rgb(234,195,22)"/><text x="38.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="516" width="1" height="15" fill="rgb(227,3,13)"/><text x="38.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="35" y="532" width="1" height="15" fill="rgb(214,104,3)"/><text x="38.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="548" width="1" height="15" fill="rgb(237,224,3)"/><text x="38.00" y="558.50"></text></g><g><title>&lt;module&gt; (decimal.py) (1 samples, 0.13%)</title><rect x="35" y="564" width="1" height="15" fill="rgb(231,19,47)"/><text x="38.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="580" width="1" height="15" fill="rgb(229,3,5)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="596" width="1" height="15" fill="rgb(233,59,1)"/><text x="38.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="612" width="1" height="15" fill="rgb(215,198,23)"/><text x="38.00" y="622.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="628" width="1" height="15" fill="rgb(232,83,43)"/><text x="38.00" y="638.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="35" y="644" width="1" height="15" fill="rgb(221,195,26)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="660" width="1" height="15" fill="rgb(225,189,25)"/><text x="38.00" y="670.50"></text></g><g><title>0x7fdc13725abc (?) (1 samples, 0.13%)</title><rect x="35" y="676" width="1" height="15" fill="rgb(218,107,52)"/><text x="38.00" y="686.50"></text></g><g><title>0x7fdc2092dea8 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="47" y="116" width="3" height="15" fill="rgb(221,227,38)"/><text x="50.00" y="126.50"></text></g><g><title>0x7fdc2092cbc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="50" y="132" width="2" height="15" fill="rgb(233,39,28)"/><text x="53.00" y="142.50"></text></g><g><title>0x7fdc2092cbdf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="52" y="132" width="1" height="15" fill="rgb(207,58,41)"/><text x="55.00" y="142.50"></text></g><g><title>0x7fdc2092cc0c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="53" y="132" width="2" height="15" fill="rgb(221,119,44)"/><text x="56.00" y="142.50"></text></g><g><title>0x7fdc2092deb0 (libc-2.29.so) (4 samples, 0.53%)</title><rect x="50" y="116" width="7" height="15" fill="rgb(235,67,54)"/><text x="53.00" y="126.50"></text></g><g><title>0x7fdc2092cc20 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="55" y="132" width="2" height="15" fill="rgb(249,191,26)"/><text x="58.00" y="142.50"></text></g><g><title>0x7fdbe099dff9 (?) (1 samples, 0.13%)</title><rect x="60" y="212" width="1" height="15" fill="rgb(237,194,17)"/><text x="63.00" y="222.50"></text></g><g><title>0x7fdbe0998ef6 (?) (1 samples, 0.13%)</title><rect x="60" y="228" width="1" height="15" fill="rgb(246,100,12)"/><text x="63.00" y="238.50"></text></g><g><title>0x7fdbe098d962 (?) (1 samples, 0.13%)</title><rect x="60" y="244" width="1" height="15" fill="rgb(232,196,10)"/><text x="63.00" y="254.50"></text></g><g><title>0x7fdbe09c17a7 (?) (1 samples, 0.13%)</title><rect x="60" y="260" width="1" height="15" fill="rgb(226,206,22)"/><text x="63.00" y="270.50"></text></g><g><title>0x7fdbe09c1379 (?) (1 samples, 0.13%)</title><rect x="60" y="276" width="1" height="15" fill="rgb(212,226,41)"/><text x="63.00" y="286.50"></text></g><g><title>0x7fdbe0e1f8b8 (?) (1 samples, 0.13%)</title><rect x="60" y="292" width="1" height="15" fill="rgb(221,192,1)"/><text x="63.00" y="302.50"></text></g><g><title>0x7fdbe0e1dc7f (?) (1 samples, 0.13%)</title><rect x="60" y="308" width="1" height="15" fill="rgb(237,226,25)"/><text x="63.00" y="318.50"></text></g><g><title>0x7fdbe0e3099c (?) (1 samples, 0.13%)</title><rect x="60" y="324" width="1" height="15" fill="rgb(209,90,24)"/><text x="63.00" y="334.50"></text></g><g><title>0x7fdbe0b35e49 (?) (1 samples, 0.13%)</title><rect x="60" y="340" width="1" height="15" fill="rgb(205,171,6)"/><text x="63.00" y="350.50"></text></g><g><title>0x7fdc2094e12f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="60" y="356" width="1" height="15" fill="rgb(239,32,51)"/><text x="63.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.27%)</title><rect x="61" y="212" width="3" height="15" fill="rgb(238,58,36)"/><text x="64.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="61" y="228" width="3" height="15" fill="rgb(224,43,53)"/><text x="64.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="63" y="244" width="1" height="15" fill="rgb(210,132,9)"/><text x="66.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="63" y="260" width="1" height="15" fill="rgb(208,7,8)"/><text x="66.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="63" y="276" width="1" height="15" fill="rgb(231,148,4)"/><text x="66.00" y="286.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="66" y="356" width="2" height="15" fill="rgb(218,198,53)"/><text x="69.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="66" y="372" width="2" height="15" fill="rgb(240,227,49)"/><text x="69.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="66" y="340" width="3" height="15" fill="rgb(241,166,1)"/><text x="69.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="68" y="356" width="1" height="15" fill="rgb(215,143,18)"/><text x="71.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="69" y="340" width="2" height="15" fill="rgb(235,61,17)"/><text x="72.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="69" y="356" width="2" height="15" fill="rgb(221,8,44)"/><text x="72.00" y="366.50"></text></g><g><title>0x7fdbe09650f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="209" y="356" width="2" height="15" fill="rgb(224,150,43)"/><text x="212.00" y="366.50"></text></g><g><title>0x7fdc103fa7a0 (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="211" y="356" width="3" height="15" fill="rgb(218,70,42)"/><text x="214.00" y="366.50"></text></g><g><title>0x7fdc2092d945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="214" y="356" width="1" height="15" fill="rgb(251,80,11)"/><text x="217.00" y="366.50"></text></g><g><title>0x7fdc2092d998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="215" y="356" width="2" height="15" fill="rgb(211,208,9)"/><text x="218.00" y="366.50"></text></g><g><title>0x7fdc2092da55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="217" y="356" width="1" height="15" fill="rgb(236,31,5)"/><text x="220.00" y="366.50"></text></g><g><title>0x7fdc2092dbe8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="218" y="356" width="2" height="15" fill="rgb(212,188,24)"/><text x="221.00" y="366.50"></text></g><g><title>0x7fdc2094dd97 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="220" y="356" width="2" height="15" fill="rgb(219,84,8)"/><text x="223.00" y="366.50"></text></g><g><title>0x7fdc20aace14 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(227,210,40)"/><text x="225.00" y="366.50"></text></g><g><title>0x7fdc20aace6d (libm-2.29.so) (1 samples, 0.13%)</title><rect x="223" y="356" width="2" height="15" fill="rgb(246,3,54)"/><text x="226.00" y="366.50"></text></g><g><title>0x7fdc20aace9e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="225" y="356" width="1" height="15" fill="rgb(254,184,52)"/><text x="228.00" y="366.50"></text></g><g><title>0x7fdc20aacea2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="226" y="356" width="2" height="15" fill="rgb(230,6,24)"/><text x="229.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.27%)</title><rect x="228" y="356" width="3" height="15" fill="rgb(252,76,15)"/><text x="231.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="231" y="356" width="2" height="15" fill="rgb(235,148,35)"/><text x="234.00" y="366.50"></text></g><g><title>0x7fdbe09650f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="314" y="372" width="2" height="15" fill="rgb(212,87,13)"/><text x="317.00" y="382.50"></text></g><g><title>0x7fdc2092d998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="319" y="388" width="2" height="15" fill="rgb(253,147,24)"/><text x="322.00" y="398.50"></text></g><g><title>0x7fdc2092da4c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="321" y="388" width="1" height="15" fill="rgb(210,3,45)"/><text x="324.00" y="398.50"></text></g><g><title>0x7fdc2092da55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="322" y="388" width="2" height="15" fill="rgb(209,32,37)"/><text x="325.00" y="398.50"></text></g><g><title>0x7fdc2094dd50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="324" y="388" width="1" height="15" fill="rgb(213,83,22)"/><text x="327.00" y="398.50"></text></g><g><title>0x7fdc2094dd97 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="325" y="388" width="2" height="15" fill="rgb(239,127,23)"/><text x="328.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.53%)</title><rect x="327" y="388" width="6" height="15" fill="rgb(252,81,15)"/><text x="330.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 10.12%)</title><rect x="233" y="356" width="119" height="15" fill="rgb(253,81,7)"/><text x="236.00" y="366.50">onnxruntime::m..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.06%)</title><rect x="316" y="372" width="36" height="15" fill="rgb(220,170,7)"/><text x="319.00" y="382.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.60%)</title><rect x="333" y="388" width="19" height="15" fill="rgb(208,168,16)"/><text x="336.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (12 samples, 1.60%)</title><rect x="333" y="404" width="19" height="15" fill="rgb(234,68,45)"/><text x="336.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="352" y="356" width="3" height="15" fill="rgb(244,19,8)"/><text x="355.00" y="366.50"></text></g><g><title>0x7fdc2094ddbb (libc-2.29.so) (1 samples, 0.13%)</title><rect x="354" y="372" width="1" height="15" fill="rgb(209,93,31)"/><text x="357.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="355" y="356" width="5" height="15" fill="rgb(237,223,25)"/><text x="358.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="357" y="372" width="3" height="15" fill="rgb(223,87,3)"/><text x="360.00" y="382.50"></text></g><g><title>0x7fdc2092d90e (libc-2.29.so) (2 samples, 0.27%)</title><rect x="372" y="372" width="4" height="15" fill="rgb(244,14,14)"/><text x="375.00" y="382.50"></text></g><g><title>0x7fdc2092d96a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="376" y="372" width="1" height="15" fill="rgb(229,139,25)"/><text x="379.00" y="382.50"></text></g><g><title>0x7fdc2092d991 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="377" y="372" width="3" height="15" fill="rgb(244,137,51)"/><text x="380.00" y="382.50"></text></g><g><title>0x7fdc2092d998 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="380" y="372" width="3" height="15" fill="rgb(241,18,37)"/><text x="383.00" y="382.50"></text></g><g><title>0x7fdc2092da4d (libc-2.29.so) (2 samples, 0.27%)</title><rect x="383" y="372" width="4" height="15" fill="rgb(205,154,13)"/><text x="386.00" y="382.50"></text></g><g><title>0x7fdc2092dbe8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="387" y="372" width="1" height="15" fill="rgb(239,78,40)"/><text x="390.00" y="382.50"></text></g><g><title>0x7fdc2094dd50 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="388" y="372" width="2" height="15" fill="rgb(226,29,7)"/><text x="391.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="390" y="372" width="1" height="15" fill="rgb(251,45,38)"/><text x="393.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="391" y="372" width="2" height="15" fill="rgb(209,159,46)"/><text x="394.00" y="382.50"></text></g><g><title>0x7fdc103f9d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="394" y="388" width="2" height="15" fill="rgb(208,140,45)"/><text x="397.00" y="398.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.73%)</title><rect x="360" y="356" width="44" height="15" fill="rgb(233,214,28)"/><text x="363.00" y="366.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.93%)</title><rect x="393" y="372" width="11" height="15" fill="rgb(208,73,37)"/><text x="396.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.67%)</title><rect x="396" y="388" width="8" height="15" fill="rgb(211,195,34)"/><text x="399.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (217 samples, 28.89%)</title><rect x="71" y="340" width="341" height="15" fill="rgb(205,6,25)"/><text x="74.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.67%)</title><rect x="404" y="356" width="8" height="15" fill="rgb(230,75,9)"/><text x="407.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="409" y="372" width="3" height="15" fill="rgb(238,39,7)"/><text x="412.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="410" y="388" width="2" height="15" fill="rgb(210,71,11)"/><text x="413.00" y="398.50"></text></g><g><title>0x7fdc2092ed67 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="431" y="388" width="1" height="15" fill="rgb(216,29,39)"/><text x="434.00" y="398.50"></text></g><g><title>0x7fdc2092edc2 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="432" y="388" width="2" height="15" fill="rgb(233,219,17)"/><text x="435.00" y="398.50"></text></g><g><title>0x7fdc2092ee07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="434" y="388" width="1" height="15" fill="rgb(241,200,25)"/><text x="437.00" y="398.50"></text></g><g><title>0x7fdc2092efe6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(227,19,13)"/><text x="438.00" y="398.50"></text></g><g><title>0x7fdc2092f097 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="437" y="388" width="1" height="15" fill="rgb(228,185,37)"/><text x="440.00" y="398.50"></text></g><g><title>0x7fdc2092f3bd (libc-2.29.so) (1 samples, 0.13%)</title><rect x="438" y="388" width="2" height="15" fill="rgb(227,24,24)"/><text x="441.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (17 samples, 2.26%)</title><rect x="415" y="356" width="27" height="15" fill="rgb(252,52,43)"/><text x="418.00" y="366.50">o..</text></g><g><title>malloc (libc-2.29.so) (16 samples, 2.13%)</title><rect x="416" y="372" width="26" height="15" fill="rgb(236,51,26)"/><text x="419.00" y="382.50">m..</text></g><g><title>0x7fdc2092f3c4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="440" y="388" width="2" height="15" fill="rgb(215,16,44)"/><text x="443.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="442" y="356" width="1" height="15" fill="rgb(208,85,21)"/><text x="445.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="443" y="356" width="2" height="15" fill="rgb(236,219,0)"/><text x="446.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="445" y="356" width="3" height="15" fill="rgb(250,211,37)"/><text x="448.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (247 samples, 32.89%)</title><rect x="64" y="260" width="389" height="15" fill="rgb(234,80,9)"/><text x="67.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 32.76%)</title><rect x="66" y="276" width="387" height="15" fill="rgb(223,185,50)"/><text x="69.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 32.76%)</title><rect x="66" y="292" width="387" height="15" fill="rgb(214,0,43)"/><text x="69.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 32.76%)</title><rect x="66" y="308" width="387" height="15" fill="rgb(251,88,12)"/><text x="69.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (246 samples, 32.76%)</title><rect x="66" y="324" width="387" height="15" fill="rgb(207,41,53)"/><text x="69.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 3.46%)</title><rect x="412" y="340" width="41" height="15" fill="rgb(249,109,32)"/><text x="415.00" y="350.50">onn..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="448" y="356" width="5" height="15" fill="rgb(224,61,37)"/><text x="451.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="453" y="260" width="1" height="15" fill="rgb(209,200,29)"/><text x="456.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="453" y="276" width="1" height="15" fill="rgb(220,64,32)"/><text x="456.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="453" y="292" width="1" height="15" fill="rgb(251,24,52)"/><text x="456.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="453" y="308" width="1" height="15" fill="rgb(244,13,25)"/><text x="456.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="453" y="324" width="1" height="15" fill="rgb(225,56,42)"/><text x="456.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="454" y="260" width="2" height="15" fill="rgb(235,153,13)"/><text x="457.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.13%)</title><rect x="454" y="276" width="2" height="15" fill="rgb(211,224,1)"/><text x="457.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="454" y="292" width="2" height="15" fill="rgb(230,141,10)"/><text x="457.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="454" y="308" width="2" height="15" fill="rgb(213,56,6)"/><text x="457.00" y="318.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.66%)</title><rect x="456" y="260" width="31" height="15" fill="rgb(244,138,4)"/><text x="459.00" y="270.50">py..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.67%)</title><rect x="479" y="276" width="8" height="15" fill="rgb(244,212,51)"/><text x="482.00" y="286.50"></text></g><g><title>0x7fdc2092d945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="487" y="292" width="2" height="15" fill="rgb(210,117,23)"/><text x="490.00" y="302.50"></text></g><g><title>0x7fdc2092d982 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="489" y="292" width="3" height="15" fill="rgb(244,79,15)"/><text x="492.00" y="302.50"></text></g><g><title>0x7fdc2092d99b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="492" y="292" width="1" height="15" fill="rgb(227,124,11)"/><text x="495.00" y="302.50"></text></g><g><title>0x7fdc2092dd07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="493" y="292" width="2" height="15" fill="rgb(224,100,19)"/><text x="496.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="495" y="292" width="2" height="15" fill="rgb(235,87,30)"/><text x="498.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="497" y="292" width="1" height="15" fill="rgb(242,77,17)"/><text x="500.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 37.02%)</title><rect x="64" y="244" width="437" height="15" fill="rgb(205,70,21)"/><text x="67.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.20%)</title><rect x="487" y="260" width="14" height="15" fill="rgb(231,156,13)"/><text x="490.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.20%)</title><rect x="487" y="276" width="14" height="15" fill="rgb(221,125,17)"/><text x="490.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.27%)</title><rect x="498" y="292" width="3" height="15" fill="rgb(240,229,37)"/><text x="501.00" y="302.50"></text></g><g><title>0x7fdc2092da51 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="498" y="308" width="3" height="15" fill="rgb(233,176,45)"/><text x="501.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (284 samples, 37.82%)</title><rect x="57" y="132" width="446" height="15" fill="rgb(242,49,38)"/><text x="60.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (284 samples, 37.82%)</title><rect x="57" y="148" width="446" height="15" fill="rgb(236,125,53)"/><text x="60.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (282 samples, 37.55%)</title><rect x="60" y="164" width="443" height="15" fill="rgb(227,146,46)"/><text x="63.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (282 samples, 37.55%)</title><rect x="60" y="180" width="443" height="15" fill="rgb(227,14,35)"/><text x="63.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (282 samples, 37.55%)</title><rect x="60" y="196" width="443" height="15" fill="rgb(246,145,41)"/><text x="63.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 37.15%)</title><rect x="64" y="212" width="439" height="15" fill="rgb(250,1,47)"/><text x="67.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (279 samples, 37.15%)</title><rect x="64" y="228" width="439" height="15" fill="rgb(238,41,35)"/><text x="67.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python:..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="501" y="244" width="2" height="15" fill="rgb(249,19,33)"/><text x="504.00" y="254.50"></text></g><g><title>profile_ort (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (298 samples, 39.68%)</title><rect x="36" y="68" width="468" height="15" fill="rgb(211,167,42)"/><text x="39.00" y="78.50">profile_ort (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (298 samples, 39.68%)</title><rect x="36" y="84" width="468" height="15" fill="rgb(214,134,25)"/><text x="39.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinea..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (298 samples, 39.68%)</title><rect x="36" y="100" width="468" height="15" fill="rgb(246,71,10)"/><text x="39.00" y="110.50">profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (285 samples, 37.95%)</title><rect x="57" y="116" width="447" height="15" fill="rgb(215,133,35)"/><text x="60.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.13%)</title><rect x="503" y="132" width="1" height="15" fill="rgb(247,113,31)"/><text x="506.00" y="142.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.27%)</title><rect x="504" y="212" width="4" height="15" fill="rgb(253,111,35)"/><text x="507.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.13%)</title><rect x="506" y="228" width="2" height="15" fill="rgb(223,107,28)"/><text x="509.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.13%)</title><rect x="506" y="244" width="2" height="15" fill="rgb(229,182,52)"/><text x="509.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="506" y="260" width="2" height="15" fill="rgb(237,197,46)"/><text x="509.00" y="270.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.13%)</title><rect x="506" y="276" width="2" height="15" fill="rgb(235,94,12)"/><text x="509.00" y="286.50"></text></g><g><title>0x7fdbe1a9cc29 (?) (1 samples, 0.13%)</title><rect x="509" y="244" width="2" height="15" fill="rgb(243,7,39)"/><text x="512.00" y="254.50"></text></g><g><title>0x7fdbe1aa3d9e (?) (1 samples, 0.13%)</title><rect x="509" y="260" width="2" height="15" fill="rgb(245,108,36)"/><text x="512.00" y="270.50"></text></g><g><title>0x7fdbe1aa3c56 (?) (1 samples, 0.13%)</title><rect x="509" y="276" width="2" height="15" fill="rgb(243,35,29)"/><text x="512.00" y="286.50"></text></g><g><title>0x7fdbe1aa9ac7 (?) (1 samples, 0.13%)</title><rect x="509" y="292" width="2" height="15" fill="rgb(253,126,9)"/><text x="512.00" y="302.50"></text></g><g><title>0x7fdbe1aa9328 (?) (1 samples, 0.13%)</title><rect x="509" y="308" width="2" height="15" fill="rgb(240,57,53)"/><text x="512.00" y="318.50"></text></g><g><title>0x7fdbe1aa17ce (?) (1 samples, 0.13%)</title><rect x="509" y="324" width="2" height="15" fill="rgb(252,210,54)"/><text x="512.00" y="334.50"></text></g><g><title>0x7fdc2092d906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="509" y="340" width="2" height="15" fill="rgb(226,53,38)"/><text x="512.00" y="350.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.13%)</title><rect x="511" y="244" width="1" height="15" fill="rgb(214,201,1)"/><text x="514.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.13%)</title><rect x="511" y="260" width="1" height="15" fill="rgb(242,194,53)"/><text x="514.00" y="270.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.13%)</title><rect x="511" y="276" width="1" height="15" fill="rgb(218,11,0)"/><text x="514.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="511" y="292" width="1" height="15" fill="rgb(208,42,5)"/><text x="514.00" y="302.50"></text></g><g><title>0x7fdbe1a8c810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="559" y="468" width="2" height="15" fill="rgb(215,201,42)"/><text x="562.00" y="478.50"></text></g><g><title>0x7fdc2092d991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="561" y="468" width="2" height="15" fill="rgb(213,133,37)"/><text x="564.00" y="478.50"></text></g><g><title>0x7fdbe1a8be60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="578" y="484" width="3" height="15" fill="rgb(209,180,30)"/><text x="581.00" y="494.50"></text></g><g><title>0x7fdbe1a8c2b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="581" y="484" width="2" height="15" fill="rgb(222,198,42)"/><text x="584.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (61 samples, 8.12%)</title><rect x="563" y="468" width="95" height="15" fill="rgb(248,165,22)"/><text x="566.00" y="478.50">RuntimeSVMC..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (48 samples, 6.39%)</title><rect x="583" y="484" width="75" height="15" fill="rgb(210,90,32)"/><text x="586.00" y="494.50">vector_d..</text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="658" y="468" width="2" height="15" fill="rgb(226,199,51)"/><text x="661.00" y="478.50"></text></g><g><title>0x7fdc20aace62 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="666" y="500" width="2" height="15" fill="rgb(205,179,29)"/><text x="669.00" y="510.50"></text></g><g><title>0x7fdc20aace6d (libm-2.29.so) (1 samples, 0.13%)</title><rect x="668" y="500" width="1" height="15" fill="rgb(234,92,7)"/><text x="671.00" y="510.50"></text></g><g><title>0x7fdc20aace7a (libm-2.29.so) (1 samples, 0.13%)</title><rect x="669" y="500" width="2" height="15" fill="rgb(250,136,27)"/><text x="672.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (8 samples, 1.07%)</title><rect x="660" y="468" width="13" height="15" fill="rgb(206,226,14)"/><text x="663.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (7 samples, 0.93%)</title><rect x="662" y="484" width="11" height="15" fill="rgb(209,91,22)"/><text x="665.00" y="494.50"></text></g><g><title>0x7fdc20aacea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="671" y="500" width="2" height="15" fill="rgb(252,196,22)"/><text x="674.00" y="510.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h) (1 samples, 0.13%)</title><rect x="673" y="468" width="1" height="15" fill="rgb(219,131,50)"/><text x="676.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h) (1 samples, 0.13%)</title><rect x="673" y="484" width="1" height="15" fill="rgb(229,99,21)"/><text x="676.00" y="494.50"></text></g><g><title>0x7fdc2092d982 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="685" y="484" width="2" height="15" fill="rgb(249,26,48)"/><text x="688.00" y="494.50"></text></g><g><title>0x7fdc2092da41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="687" y="484" width="1" height="15" fill="rgb(211,162,19)"/><text x="690.00" y="494.50"></text></g><g><title>0x7fdc2092dbc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="688" y="484" width="2" height="15" fill="rgb(217,227,20)"/><text x="691.00" y="494.50"></text></g><g><title>0x7fdc2094dd6f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="690" y="484" width="1" height="15" fill="rgb(252,98,5)"/><text x="693.00" y="494.50"></text></g><g><title>0x7fdbe1a8c2d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="693" y="532" width="3" height="15" fill="rgb(213,179,5)"/><text x="696.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (12 samples, 1.60%)</title><rect x="691" y="484" width="19" height="15" fill="rgb(238,41,53)"/><text x="694.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (11 samples, 1.46%)</title><rect x="693" y="500" width="17" height="15" fill="rgb(211,13,4)"/><text x="696.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (11 samples, 1.46%)</title><rect x="693" y="516" width="17" height="15" fill="rgb(238,44,32)"/><text x="696.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.20%)</title><rect x="696" y="532" width="14" height="15" fill="rgb(210,34,21)"/><text x="699.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.20%)</title><rect x="696" y="548" width="14" height="15" fill="rgb(239,101,47)"/><text x="699.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (25 samples, 3.33%)</title><rect x="674" y="468" width="39" height="15" fill="rgb(225,111,43)"/><text x="677.00" y="478.50">std..</text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="710" y="484" width="3" height="15" fill="rgb(241,56,42)"/><text x="713.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="710" y="500" width="3" height="15" fill="rgb(235,85,33)"/><text x="713.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="710" y="516" width="3" height="15" fill="rgb(248,177,0)"/><text x="713.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.27%)</title><rect x="710" y="532" width="3" height="15" fill="rgb(208,212,16)"/><text x="713.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="710" y="548" width="3" height="15" fill="rgb(232,110,44)"/><text x="713.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="710" y="564" width="3" height="15" fill="rgb(229,164,39)"/><text x="713.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="710" y="580" width="3" height="15" fill="rgb(239,133,51)"/><text x="713.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (2 samples, 0.27%)</title><rect x="710" y="596" width="3" height="15" fill="rgb(211,121,45)"/><text x="713.00" y="606.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h) (1 samples, 0.13%)</title><rect x="721" y="484" width="2" height="15" fill="rgb(247,67,40)"/><text x="724.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h) (1 samples, 0.13%)</title><rect x="721" y="500" width="2" height="15" fill="rgb(237,197,8)"/><text x="724.00" y="510.50"></text></g><g><title>0x7fdc2092d90e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="728" y="516" width="1" height="15" fill="rgb(239,17,24)"/><text x="731.00" y="526.50"></text></g><g><title>0x7fdc2092d96a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="729" y="516" width="2" height="15" fill="rgb(236,35,5)"/><text x="732.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.53%)</title><rect x="731" y="516" width="6" height="15" fill="rgb(245,151,10)"/><text x="734.00" y="526.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="737" y="516" width="2" height="15" fill="rgb(244,34,52)"/><text x="740.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.27%)</title><rect x="739" y="516" width="3" height="15" fill="rgb(210,123,16)"/><text x="742.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.27%)</title><rect x="739" y="532" width="3" height="15" fill="rgb(246,185,10)"/><text x="742.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.27%)</title><rect x="739" y="548" width="3" height="15" fill="rgb(230,81,28)"/><text x="742.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="739" y="564" width="3" height="15" fill="rgb(219,44,46)"/><text x="742.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="739" y="580" width="3" height="15" fill="rgb(231,36,4)"/><text x="742.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (19 samples, 2.53%)</title><rect x="713" y="468" width="30" height="15" fill="rgb(245,131,7)"/><text x="716.00" y="478.50">st..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (13 samples, 1.73%)</title><rect x="723" y="484" width="20" height="15" fill="rgb(227,25,43)"/><text x="726.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (11 samples, 1.46%)</title><rect x="726" y="500" width="17" height="15" fill="rgb(208,139,45)"/><text x="729.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="742" y="516" width="1" height="15" fill="rgb(211,216,14)"/><text x="745.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="742" y="532" width="1" height="15" fill="rgb(229,187,4)"/><text x="745.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="742" y="548" width="1" height="15" fill="rgb(220,22,32)"/><text x="745.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="742" y="564" width="1" height="15" fill="rgb(207,181,46)"/><text x="745.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="742" y="580" width="1" height="15" fill="rgb(236,166,45)"/><text x="745.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="742" y="596" width="1" height="15" fill="rgb(219,178,14)"/><text x="745.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="742" y="612" width="1" height="15" fill="rgb(207,128,52)"/><text x="745.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="742" y="628" width="1" height="15" fill="rgb(250,190,52)"/><text x="745.00" y="638.50"></text></g><g><title>0x7fdc2092d93b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="806" y="500" width="2" height="15" fill="rgb(206,173,21)"/><text x="809.00" y="510.50"></text></g><g><title>std::fabs (cmath) (1 samples, 0.13%)</title><rect x="808" y="500" width="1" height="15" fill="rgb(249,147,7)"/><text x="811.00" y="510.50"></text></g><g><title>0x7fdc2092d906 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="822" y="516" width="3" height="15" fill="rgb(248,74,26)"/><text x="825.00" y="526.50"></text></g><g><title>0x7fdc2092d96a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="825" y="516" width="2" height="15" fill="rgb(206,138,29)"/><text x="828.00" y="526.50"></text></g><g><title>0x7fdc2092d998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="827" y="516" width="1" height="15" fill="rgb(238,192,41)"/><text x="830.00" y="526.50"></text></g><g><title>0x7fdc2092da41 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="828" y="516" width="2" height="15" fill="rgb(244,31,23)"/><text x="831.00" y="526.50"></text></g><g><title>0x7fdc2092dbc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="830" y="516" width="1" height="15" fill="rgb(236,51,34)"/><text x="833.00" y="526.50"></text></g><g><title>0x7fdc2092dbd8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="831" y="516" width="2" height="15" fill="rgb(234,59,54)"/><text x="834.00" y="526.50"></text></g><g><title>0x7fdc2094dd97 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="833" y="516" width="1" height="15" fill="rgb(235,14,3)"/><text x="836.00" y="526.50"></text></g><g><title>0x7fdc2094ddbf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="834" y="516" width="2" height="15" fill="rgb(212,172,12)"/><text x="837.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="836" y="516" width="2" height="15" fill="rgb(210,46,43)"/><text x="839.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (8 samples, 1.07%)</title><rect x="838" y="516" width="12" height="15" fill="rgb(210,24,38)"/><text x="841.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (8 samples, 1.07%)</title><rect x="838" y="532" width="12" height="15" fill="rgb(219,197,4)"/><text x="841.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (8 samples, 1.07%)</title><rect x="838" y="548" width="12" height="15" fill="rgb(225,12,8)"/><text x="841.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.07%)</title><rect x="838" y="564" width="12" height="15" fill="rgb(249,11,9)"/><text x="841.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.93%)</title><rect x="839" y="580" width="11" height="15" fill="rgb(253,156,19)"/><text x="842.00" y="590.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="850" y="516" width="2" height="15" fill="rgb(239,161,32)"/><text x="853.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="850" y="532" width="2" height="15" fill="rgb(239,213,25)"/><text x="853.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="850" y="548" width="2" height="15" fill="rgb(219,17,26)"/><text x="853.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="850" y="564" width="2" height="15" fill="rgb(218,210,11)"/><text x="853.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="850" y="580" width="2" height="15" fill="rgb(240,10,40)"/><text x="853.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="850" y="596" width="2" height="15" fill="rgb(216,111,40)"/><text x="853.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="850" y="612" width="2" height="15" fill="rgb(231,229,30)"/><text x="853.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="850" y="628" width="2" height="15" fill="rgb(242,101,39)"/><text x="853.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (28 samples, 3.73%)</title><rect x="809" y="500" width="44" height="15" fill="rgb(236,193,41)"/><text x="812.00" y="510.50">std:..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.13%)</title><rect x="852" y="516" width="1" height="15" fill="rgb(234,62,19)"/><text x="855.00" y="526.50"></text></g><g><title>0x7fdbe1a8c2a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="853" y="516" width="2" height="15" fill="rgb(215,10,53)"/><text x="856.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (72 samples, 9.59%)</title><rect x="743" y="484" width="113" height="15" fill="rgb(245,151,47)"/><text x="746.00" y="494.50">multiclass_pr..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (2 samples, 0.27%)</title><rect x="853" y="500" width="3" height="15" fill="rgb(237,21,22)"/><text x="856.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="855" y="516" width="1" height="15" fill="rgb(243,114,18)"/><text x="858.00" y="526.50"></text></g><g><title>0x7fdc2094dd97 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="858" y="500" width="2" height="15" fill="rgb(209,3,44)"/><text x="861.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (75 samples, 9.99%)</title><rect x="743" y="468" width="118" height="15" fill="rgb(237,63,7)"/><text x="746.00" y="478.50">std::vector&lt;fl..</text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (3 samples, 0.40%)</title><rect x="856" y="484" width="5" height="15" fill="rgb(207,157,29)"/><text x="859.00" y="494.50"></text></g><g><title>0x7fdc2094ddbe (libc-2.29.so) (1 samples, 0.13%)</title><rect x="860" y="500" width="1" height="15" fill="rgb(205,226,27)"/><text x="863.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (2 samples, 0.27%)</title><rect x="861" y="468" width="3" height="15" fill="rgb(232,20,33)"/><text x="864.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (2 samples, 0.27%)</title><rect x="861" y="484" width="3" height="15" fill="rgb(212,190,45)"/><text x="864.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (2 samples, 0.27%)</title><rect x="861" y="500" width="3" height="15" fill="rgb(214,115,24)"/><text x="864.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.27%)</title><rect x="861" y="516" width="3" height="15" fill="rgb(236,183,1)"/><text x="864.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="861" y="532" width="3" height="15" fill="rgb(229,77,5)"/><text x="864.00" y="542.50"></text></g><g><title>0x7fdc2092d95e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="864" y="484" width="2" height="15" fill="rgb(223,75,35)"/><text x="867.00" y="494.50"></text></g><g><title>0x7fdc2092d998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="866" y="484" width="1" height="15" fill="rgb(212,92,22)"/><text x="869.00" y="494.50"></text></g><g><title>0x7fdc2092d99b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="867" y="484" width="2" height="15" fill="rgb(220,118,3)"/><text x="870.00" y="494.50"></text></g><g><title>0x7fdc2092da38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="869" y="484" width="2" height="15" fill="rgb(230,36,9)"/><text x="872.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="871" y="484" width="1" height="15" fill="rgb(216,55,42)"/><text x="874.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (8 samples, 1.07%)</title><rect x="864" y="468" width="13" height="15" fill="rgb(210,15,31)"/><text x="867.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h) (3 samples, 0.40%)</title><rect x="872" y="484" width="5" height="15" fill="rgb(251,219,54)"/><text x="875.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (3 samples, 0.40%)</title><rect x="872" y="500" width="5" height="15" fill="rgb(211,141,1)"/><text x="875.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (3 samples, 0.40%)</title><rect x="872" y="516" width="5" height="15" fill="rgb(215,74,17)"/><text x="875.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (3 samples, 0.40%)</title><rect x="872" y="532" width="5" height="15" fill="rgb(254,152,27)"/><text x="875.00" y="542.50"></text></g><g><title>0x7fdc2092d945 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="874" y="548" width="3" height="15" fill="rgb(249,133,20)"/><text x="877.00" y="558.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.13%)</title><rect x="877" y="468" width="1" height="15" fill="rgb(240,128,3)"/><text x="880.00" y="478.50"></text></g><g><title>profile_pyrt (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (245 samples, 32.62%)</title><rect x="504" y="68" width="385" height="15" fill="rgb(207,226,12)"/><text x="507.00" y="78.50">profile_pyrt (bench_SVC_linear_b_cl_probabilityTrue_..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (245 samples, 32.62%)</title><rect x="504" y="84" width="385" height="15" fill="rgb(249,189,10)"/><text x="507.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_probabilityTrue..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (245 samples, 32.62%)</title><rect x="504" y="100" width="385" height="15" fill="rgb(239,218,7)"/><text x="507.00" y="110.50">profile (bench_SVC_linear_b_cl_probabilityTrue_kerne..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (245 samples, 32.62%)</title><rect x="504" y="116" width="385" height="15" fill="rgb(230,85,7)"/><text x="507.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (245 samples, 32.62%)</title><rect x="504" y="132" width="385" height="15" fill="rgb(227,81,33)"/><text x="507.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (245 samples, 32.62%)</title><rect x="504" y="148" width="385" height="15" fill="rgb(218,55,26)"/><text x="507.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (245 samples, 32.62%)</title><rect x="504" y="164" width="385" height="15" fill="rgb(235,167,13)"/><text x="507.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (245 samples, 32.62%)</title><rect x="504" y="180" width="385" height="15" fill="rgb(218,11,4)"/><text x="507.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (245 samples, 32.62%)</title><rect x="504" y="196" width="385" height="15" fill="rgb(219,116,4)"/><text x="507.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (243 samples, 32.36%)</title><rect x="508" y="212" width="381" height="15" fill="rgb(212,192,8)"/><text x="511.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (243 samples, 32.36%)</title><rect x="508" y="228" width="381" height="15" fill="rgb(226,51,2)"/><text x="511.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (240 samples, 31.96%)</title><rect x="512" y="244" width="377" height="15" fill="rgb(209,23,17)"/><text x="515.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (240 samples, 31.96%)</title><rect x="512" y="260" width="377" height="15" fill="rgb(206,197,44)"/><text x="515.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (240 samples, 31.96%)</title><rect x="512" y="276" width="377" height="15" fill="rgb(225,95,5)"/><text x="515.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::c..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (240 samples, 31.96%)</title><rect x="512" y="292" width="377" height="15" fill="rgb(211,31,8)"/><text x="515.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassif..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (240 samples, 31.96%)</title><rect x="512" y="308" width="377" height="15" fill="rgb(254,146,54)"/><text x="515.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassif..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (240 samples, 31.96%)</title><rect x="512" y="324" width="377" height="15" fill="rgb(252,58,49)"/><text x="515.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tupl..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (240 samples, 31.96%)</title><rect x="512" y="340" width="377" height="15" fill="rgb(205,126,3)"/><text x="515.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (240 samples, 31.96%)</title><rect x="512" y="356" width="377" height="15" fill="rgb(221,217,35)"/><text x="515.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (240 samples, 31.96%)</title><rect x="512" y="372" width="377" height="15" fill="rgb(214,135,21)"/><text x="515.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (240 samples, 31.96%)</title><rect x="512" y="388" width="377" height="15" fill="rgb(221,83,11)"/><text x="515.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (240 samples, 31.96%)</title><rect x="512" y="404" width="377" height="15" fill="rgb(209,136,4)"/><text x="515.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (240 samples, 31.96%)</title><rect x="512" y="420" width="377" height="15" fill="rgb(217,105,43)"/><text x="515.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onn..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (240 samples, 31.96%)</title><rect x="512" y="436" width="377" height="15" fill="rgb(226,112,33)"/><text x="515.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (240 samples, 31.96%)</title><rect x="512" y="452" width="377" height="15" fill="rgb(214,46,27)"/><text x="515.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlpr..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (7 samples, 0.93%)</title><rect x="878" y="468" width="11" height="15" fill="rgb(237,200,2)"/><text x="881.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (7 samples, 0.93%)</title><rect x="878" y="484" width="11" height="15" fill="rgb(244,183,2)"/><text x="881.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (7 samples, 0.93%)</title><rect x="878" y="500" width="11" height="15" fill="rgb(250,90,53)"/><text x="881.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (4 samples, 0.53%)</title><rect x="883" y="516" width="6" height="15" fill="rgb(245,59,47)"/><text x="886.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (4 samples, 0.53%)</title><rect x="883" y="532" width="6" height="15" fill="rgb(244,177,6)"/><text x="886.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (4 samples, 0.53%)</title><rect x="883" y="548" width="6" height="15" fill="rgb(209,19,14)"/><text x="886.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.53%)</title><rect x="883" y="564" width="6" height="15" fill="rgb(253,195,48)"/><text x="886.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.53%)</title><rect x="883" y="580" width="6" height="15" fill="rgb(234,132,19)"/><text x="886.00" y="590.50"></text></g><g><title>0x7fdbfb41e3fd (?) (1 samples, 0.13%)</title><rect x="891" y="180" width="2" height="15" fill="rgb(245,213,40)"/><text x="894.00" y="190.50"></text></g><g><title>0x7fdbfb41c553 (?) (1 samples, 0.13%)</title><rect x="891" y="196" width="2" height="15" fill="rgb(253,92,50)"/><text x="894.00" y="206.50"></text></g><g><title>0x7fdbfb417a09 (?) (1 samples, 0.13%)</title><rect x="891" y="212" width="2" height="15" fill="rgb(212,102,35)"/><text x="894.00" y="222.50"></text></g><g><title>0x7fdbfb42a778 (?) (1 samples, 0.13%)</title><rect x="891" y="228" width="2" height="15" fill="rgb(230,225,41)"/><text x="894.00" y="238.50"></text></g><g><title>0x7fdbfb41beb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="893" y="196" width="1" height="15" fill="rgb(250,173,20)"/><text x="896.00" y="206.50"></text></g><g><title>0x7fdbfb405e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="893" y="212" width="1" height="15" fill="rgb(223,227,46)"/><text x="896.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.13%)</title><rect x="893" y="228" width="1" height="15" fill="rgb(232,190,18)"/><text x="896.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.13%)</title><rect x="893" y="244" width="1" height="15" fill="rgb(207,179,15)"/><text x="896.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.13%)</title><rect x="893" y="260" width="1" height="15" fill="rgb(226,134,8)"/><text x="896.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.13%)</title><rect x="893" y="276" width="1" height="15" fill="rgb(207,193,53)"/><text x="896.00" y="286.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.13%)</title><rect x="893" y="292" width="1" height="15" fill="rgb(206,91,10)"/><text x="896.00" y="302.50"></text></g><g><title>0x7fdbfb41c12f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="894" y="196" width="2" height="15" fill="rgb(211,67,18)"/><text x="897.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="894" y="212" width="2" height="15" fill="rgb(228,198,38)"/><text x="897.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.13%)</title><rect x="894" y="228" width="2" height="15" fill="rgb(246,174,14)"/><text x="897.00" y="238.50"></text></g><g><title>0x7fdbfb3fee80 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="981" y="244" width="1" height="15" fill="rgb(227,179,23)"/><text x="984.00" y="254.50"></text></g><g><title>0x7fdc2092d902 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="982" y="244" width="2" height="15" fill="rgb(239,228,15)"/><text x="985.00" y="254.50"></text></g><g><title>0x7fdc2092d971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="984" y="244" width="1" height="15" fill="rgb(205,221,45)"/><text x="987.00" y="254.50"></text></g><g><title>0x7fdc2092d991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="985" y="244" width="2" height="15" fill="rgb(251,172,2)"/><text x="988.00" y="254.50"></text></g><g><title>0x7fdc2092d99b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="987" y="244" width="1" height="15" fill="rgb(247,193,35)"/><text x="990.00" y="254.50"></text></g><g><title>0x7fdc2092d9f0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="988" y="244" width="2" height="15" fill="rgb(227,35,22)"/><text x="991.00" y="254.50"></text></g><g><title>0x7fdc2092da38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="990" y="244" width="2" height="15" fill="rgb(234,227,41)"/><text x="993.00" y="254.50"></text></g><g><title>0x7fdc2092da51 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="992" y="244" width="3" height="15" fill="rgb(220,26,28)"/><text x="995.00" y="254.50"></text></g><g><title>0x7fdc2092dcf0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="995" y="244" width="1" height="15" fill="rgb(215,16,15)"/><text x="998.00" y="254.50"></text></g><g><title>0x7fdc2092dd07 (libc-2.29.so) (4 samples, 0.53%)</title><rect x="996" y="244" width="7" height="15" fill="rgb(246,221,9)"/><text x="999.00" y="254.50"></text></g><g><title>0x7fdc2092dd13 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1003" y="244" width="1" height="15" fill="rgb(233,14,21)"/><text x="1006.00" y="254.50"></text></g><g><title>0x7fdc20affba0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1010" y="260" width="2" height="15" fill="rgb(244,84,23)"/><text x="1013.00" y="270.50"></text></g><g><title>0x7fdc20affbd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1012" y="260" width="2" height="15" fill="rgb(233,157,47)"/><text x="1015.00" y="270.50"></text></g><g><title>0x7fdc20affbf9 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1014" y="260" width="1" height="15" fill="rgb(207,93,51)"/><text x="1017.00" y="270.50"></text></g><g><title>0x7fdc20affc32 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1015" y="260" width="2" height="15" fill="rgb(219,89,21)"/><text x="1018.00" y="270.50"></text></g><g><title>0x7fdc20affc52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1017" y="260" width="1" height="15" fill="rgb(211,29,2)"/><text x="1020.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (10 samples, 1.33%)</title><rect x="1004" y="244" width="16" height="15" fill="rgb(217,66,11)"/><text x="1007.00" y="254.50"></text></g><g><title>0x7fdc20affc56 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1018" y="260" width="2" height="15" fill="rgb(222,91,6)"/><text x="1021.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.40%)</title><rect x="1020" y="244" width="5" height="15" fill="rgb(235,111,41)"/><text x="1023.00" y="254.50"></text></g><g><title>0x7fdc2092eba8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1045" y="260" width="2" height="15" fill="rgb(235,68,5)"/><text x="1048.00" y="270.50"></text></g><g><title>0x7fdc2092ec04 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1047" y="260" width="1" height="15" fill="rgb(253,186,45)"/><text x="1050.00" y="270.50"></text></g><g><title>0x7fdc2092ec38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1048" y="260" width="2" height="15" fill="rgb(225,11,19)"/><text x="1051.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (19 samples, 2.53%)</title><rect x="1025" y="244" width="29" height="15" fill="rgb(217,213,46)"/><text x="1028.00" y="254.50">ma..</text></g><g><title>0x7fdc2092f00a (libc-2.29.so) (3 samples, 0.40%)</title><rect x="1050" y="260" width="4" height="15" fill="rgb(224,33,16)"/><text x="1053.00" y="270.50"></text></g><g><title>0x7fdc2092d906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1087" y="260" width="2" height="15" fill="rgb(243,1,14)"/><text x="1090.00" y="270.50"></text></g><g><title>0x7fdc2092d90e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1089" y="260" width="2" height="15" fill="rgb(242,116,37)"/><text x="1092.00" y="270.50"></text></g><g><title>0x7fdc2092d991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1091" y="260" width="1" height="15" fill="rgb(224,92,39)"/><text x="1094.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1092" y="260" width="2" height="15" fill="rgb(218,106,5)"/><text x="1095.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.80%)</title><rect x="1094" y="260" width="9" height="15" fill="rgb(225,59,17)"/><text x="1097.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (32 samples, 4.26%)</title><rect x="1103" y="260" width="50" height="15" fill="rgb(210,130,0)"/><text x="1106.00" y="270.50">svm::..</text></g><g><title>0x7fdbfb41c553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (170 samples, 22.64%)</title><rect x="896" y="196" width="267" height="15" fill="rgb(245,88,22)"/><text x="899.00" y="206.50">0x7fdbfb41c553 (sklearn/svm/_libsvm..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (170 samples, 22.64%)</title><rect x="896" y="212" width="267" height="15" fill="rgb(238,175,5)"/><text x="899.00" y="222.50">copy_predict_proba (sklearn/svm/_li..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (170 samples, 22.64%)</title><rect x="896" y="228" width="267" height="15" fill="rgb(227,193,10)"/><text x="899.00" y="238.50">svm_predict_probability (sklearn/sv..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (69 samples, 9.19%)</title><rect x="1054" y="244" width="109" height="15" fill="rgb(252,203,33)"/><text x="1057.00" y="254.50">svm_predict_v..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.80%)</title><rect x="1153" y="260" width="10" height="15" fill="rgb(251,92,54)"/><text x="1156.00" y="270.50"></text></g><g><title>0x7fdbfb41c7b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1163" y="196" width="1" height="15" fill="rgb(216,181,53)"/><text x="1166.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1163" y="212" width="1" height="15" fill="rgb(234,188,35)"/><text x="1166.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="1163" y="228" width="1" height="15" fill="rgb(231,4,9)"/><text x="1166.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="1163" y="244" width="1" height="15" fill="rgb(232,162,6)"/><text x="1166.00" y="254.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (176 samples, 23.44%)</title><rect x="889" y="164" width="277" height="15" fill="rgb(246,206,11)"/><text x="892.00" y="174.50">_dense_predict_proba (sklearn/svm/_ba..</text></g><g><title>0x7fdbfb41e3fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (174 samples, 23.17%)</title><rect x="893" y="180" width="273" height="15" fill="rgb(219,190,9)"/><text x="896.00" y="190.50">0x7fdbfb41e3fd (sklearn/svm/_libsvm...</text></g><g><title>0x7fdbfb41dd06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1164" y="196" width="2" height="15" fill="rgb(238,6,0)"/><text x="1167.00" y="206.50"></text></g><g><title>0x7fdbfb40567f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1164" y="212" width="2" height="15" fill="rgb(238,75,3)"/><text x="1167.00" y="222.50"></text></g><g><title>0x7fdbfb405359 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1164" y="228" width="2" height="15" fill="rgb(246,3,27)"/><text x="1167.00" y="238.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.13%)</title><rect x="1168" y="196" width="1" height="15" fill="rgb(250,69,48)"/><text x="1171.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="1169" y="212" width="3" height="15" fill="rgb(218,150,19)"/><text x="1172.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.40%)</title><rect x="1169" y="196" width="5" height="15" fill="rgb(210,117,22)"/><text x="1172.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1172" y="212" width="2" height="15" fill="rgb(241,167,40)"/><text x="1175.00" y="222.50"></text></g><g><title>0x7fdc2093e6d0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1172" y="228" width="2" height="15" fill="rgb(229,183,37)"/><text x="1175.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.40%)</title><rect x="1174" y="196" width="5" height="15" fill="rgb(220,167,14)"/><text x="1177.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.27%)</title><rect x="1175" y="212" width="4" height="15" fill="rgb(241,225,36)"/><text x="1178.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.13%)</title><rect x="1177" y="228" width="2" height="15" fill="rgb(211,204,10)"/><text x="1180.00" y="238.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1179" y="292" width="1" height="15" fill="rgb(215,191,38)"/><text x="1182.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 1.33%)</title><rect x="1166" y="180" width="16" height="15" fill="rgb(218,192,14)"/><text x="1169.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.27%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(240,187,22)"/><text x="1182.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.27%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(237,145,6)"/><text x="1182.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.27%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(223,186,7)"/><text x="1182.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.27%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(222,107,8)"/><text x="1182.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.27%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(248,90,48)"/><text x="1182.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.27%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(231,34,29)"/><text x="1182.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1180" y="292" width="2" height="15" fill="rgb(214,101,16)"/><text x="1183.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="1180" y="308" width="2" height="15" fill="rgb(206,53,33)"/><text x="1183.00" y="318.50"></text></g><g><title>all (751 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,53,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (751 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(223,226,48)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (191 samples, 25.43%)</title><rect x="889" y="68" width="301" height="15" fill="rgb(240,118,39)"/><text x="892.00" y="78.50">profile_skl (bench_SVC_linear_b_cl_proba..</text></g><g><title>setup_profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (191 samples, 25.43%)</title><rect x="889" y="84" width="301" height="15" fill="rgb(240,183,46)"/><text x="892.00" y="94.50">setup_profile (bench_SVC_linear_b_cl_pro..</text></g><g><title>profile (bench_SVC_linear_b_cl_probabilityTrue_kernellinear_1000_4_12_float_.py) (191 samples, 25.43%)</title><rect x="889" y="100" width="301" height="15" fill="rgb(219,229,18)"/><text x="892.00" y="110.50">profile (bench_SVC_linear_b_cl_probabili..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (191 samples, 25.43%)</title><rect x="889" y="116" width="301" height="15" fill="rgb(243,78,36)"/><text x="892.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (191 samples, 25.43%)</title><rect x="889" y="132" width="301" height="15" fill="rgb(210,84,54)"/><text x="892.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (191 samples, 25.43%)</title><rect x="889" y="148" width="301" height="15" fill="rgb(211,222,47)"/><text x="892.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (15 samples, 2.00%)</title><rect x="1166" y="164" width="24" height="15" fill="rgb(245,22,9)"/><text x="1169.00" y="174.50">_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 0.67%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(216,196,34)"/><text x="1185.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 0.53%)</title><rect x="1183" y="196" width="7" height="15" fill="rgb(217,110,17)"/><text x="1186.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.27%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(242,133,20)"/><text x="1189.00" y="222.50"></text></g></g></svg>