<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2374" onload="init(evt)" viewBox="0 0 1200 2374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2374" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2357.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2357.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 1.06%)</title><rect x="10" y="868" width="12" height="15" fill="rgb(228,7,11)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 1.06%)</title><rect x="10" y="884" width="12" height="15" fill="rgb(222,152,32)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 1.06%)</title><rect x="10" y="900" width="12" height="15" fill="rgb(233,145,27)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 1.06%)</title><rect x="10" y="916" width="12" height="15" fill="rgb(217,213,27)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="932" width="12" height="15" fill="rgb(254,99,32)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="948" width="12" height="15" fill="rgb(205,183,11)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="964" width="12" height="15" fill="rgb(231,52,43)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="980" width="12" height="15" fill="rgb(214,89,33)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="10" y="996" width="12" height="15" fill="rgb(237,110,1)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="14" y="1012" width="8" height="15" fill="rgb(249,209,13)"/><text x="17.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.71%)</title><rect x="14" y="1028" width="8" height="15" fill="rgb(217,4,27)"/><text x="17.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="18" y="1044" width="4" height="15" fill="rgb(226,95,35)"/><text x="21.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.42%)</title><rect x="10" y="292" width="16" height="15" fill="rgb(239,144,2)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="308" width="16" height="15" fill="rgb(231,219,25)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="324" width="16" height="15" fill="rgb(209,74,34)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="340" width="16" height="15" fill="rgb(227,181,13)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="10" y="356" width="16" height="15" fill="rgb(238,224,40)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="372" width="16" height="15" fill="rgb(206,83,45)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.42%)</title><rect x="10" y="388" width="16" height="15" fill="rgb(225,167,21)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="404" width="16" height="15" fill="rgb(228,141,45)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="420" width="16" height="15" fill="rgb(230,0,41)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="436" width="16" height="15" fill="rgb(214,17,21)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="10" y="452" width="16" height="15" fill="rgb(253,66,4)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="468" width="16" height="15" fill="rgb(243,203,7)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.42%)</title><rect x="10" y="484" width="16" height="15" fill="rgb(245,176,9)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="500" width="16" height="15" fill="rgb(218,152,31)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="516" width="16" height="15" fill="rgb(207,7,44)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="532" width="16" height="15" fill="rgb(226,189,43)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="10" y="548" width="16" height="15" fill="rgb(216,144,53)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="564" width="16" height="15" fill="rgb(214,8,4)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.42%)</title><rect x="10" y="580" width="16" height="15" fill="rgb(205,100,48)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="596" width="16" height="15" fill="rgb(211,17,9)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="612" width="16" height="15" fill="rgb(210,192,16)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="628" width="16" height="15" fill="rgb(234,127,47)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="644" width="16" height="15" fill="rgb(236,43,30)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="660" width="16" height="15" fill="rgb(250,202,8)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="676" width="16" height="15" fill="rgb(251,82,50)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="10" y="692" width="16" height="15" fill="rgb(219,118,4)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="708" width="16" height="15" fill="rgb(253,113,35)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.42%)</title><rect x="10" y="724" width="16" height="15" fill="rgb(250,74,28)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="740" width="16" height="15" fill="rgb(253,60,49)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="756" width="16" height="15" fill="rgb(237,184,25)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="772" width="16" height="15" fill="rgb(238,131,1)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="10" y="788" width="16" height="15" fill="rgb(217,35,9)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="10" y="804" width="16" height="15" fill="rgb(209,160,1)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.42%)</title><rect x="10" y="820" width="16" height="15" fill="rgb(217,157,16)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.42%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(245,134,48)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.42%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(224,0,38)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(217,116,44)"/><text x="25.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(211,153,33)"/><text x="25.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(214,216,19)"/><text x="25.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(220,205,20)"/><text x="25.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(243,122,12)"/><text x="25.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(214,169,9)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(209,2,3)"/><text x="25.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(211,86,48)"/><text x="25.00" y="990.50"></text></g><g><title>sub (re.py) (1 samples, 0.35%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(223,85,19)"/><text x="25.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.35%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(253,54,11)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(222,75,7)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(231,116,20)"/><text x="29.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(215,212,41)"/><text x="29.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(223,226,50)"/><text x="29.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(232,170,27)"/><text x="29.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(249,99,53)"/><text x="29.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(248,23,18)"/><text x="29.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(251,73,42)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(212,83,35)"/><text x="29.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1060" width="4" height="15" fill="rgb(207,115,46)"/><text x="29.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1076" width="4" height="15" fill="rgb(209,159,27)"/><text x="29.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1092" width="4" height="15" fill="rgb(229,165,6)"/><text x="29.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1108" width="4" height="15" fill="rgb(236,217,52)"/><text x="29.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(240,92,23)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(211,151,2)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(249,189,26)"/><text x="29.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(231,33,34)"/><text x="29.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(239,196,34)"/><text x="29.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(251,50,51)"/><text x="29.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.35%)</title><rect x="26" y="1220" width="4" height="15" fill="rgb(225,3,3)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1236" width="4" height="15" fill="rgb(249,149,43)"/><text x="29.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1252" width="4" height="15" fill="rgb(222,4,47)"/><text x="29.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1268" width="4" height="15" fill="rgb(213,9,50)"/><text x="29.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1284" width="4" height="15" fill="rgb(233,44,21)"/><text x="29.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1300" width="4" height="15" fill="rgb(206,152,50)"/><text x="29.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="1316" width="4" height="15" fill="rgb(214,203,29)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1332" width="4" height="15" fill="rgb(228,106,53)"/><text x="29.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1348" width="4" height="15" fill="rgb(253,229,35)"/><text x="29.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1364" width="4" height="15" fill="rgb(232,120,22)"/><text x="29.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1380" width="4" height="15" fill="rgb(238,27,6)"/><text x="29.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1396" width="4" height="15" fill="rgb(238,192,17)"/><text x="29.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.35%)</title><rect x="26" y="1412" width="4" height="15" fill="rgb(227,92,17)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1428" width="4" height="15" fill="rgb(244,100,21)"/><text x="29.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1444" width="4" height="15" fill="rgb(220,44,30)"/><text x="29.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1460" width="4" height="15" fill="rgb(212,56,14)"/><text x="29.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1476" width="4" height="15" fill="rgb(239,163,50)"/><text x="29.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1492" width="4" height="15" fill="rgb(248,61,17)"/><text x="29.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="1508" width="4" height="15" fill="rgb(249,102,14)"/><text x="29.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1524" width="4" height="15" fill="rgb(223,36,32)"/><text x="29.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1540" width="4" height="15" fill="rgb(219,112,50)"/><text x="29.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1556" width="4" height="15" fill="rgb(205,5,47)"/><text x="29.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1572" width="4" height="15" fill="rgb(248,88,53)"/><text x="29.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1588" width="4" height="15" fill="rgb(251,174,46)"/><text x="29.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/dsolve/__init__.py) (1 samples, 0.35%)</title><rect x="26" y="1604" width="4" height="15" fill="rgb(252,53,49)"/><text x="29.00" y="1614.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1620" width="4" height="15" fill="rgb(217,96,36)"/><text x="29.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1636" width="4" height="15" fill="rgb(251,103,16)"/><text x="29.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1652" width="4" height="15" fill="rgb(213,170,47)"/><text x="29.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1668" width="4" height="15" fill="rgb(231,170,30)"/><text x="29.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="26" y="1684" width="4" height="15" fill="rgb(219,130,14)"/><text x="29.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1700" width="4" height="15" fill="rgb(233,221,4)"/><text x="29.00" y="1710.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1716" width="4" height="15" fill="rgb(253,123,41)"/><text x="29.00" y="1726.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="26" y="1732" width="4" height="15" fill="rgb(245,96,14)"/><text x="29.00" y="1742.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(253,229,5)"/><text x="33.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.35%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(232,220,18)"/><text x="33.00" y="1070.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 1.06%)</title><rect x="26" y="900" width="13" height="15" fill="rgb(249,198,37)"/><text x="29.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="30" y="916" width="9" height="15" fill="rgb(216,210,25)"/><text x="33.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="30" y="932" width="9" height="15" fill="rgb(220,100,48)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="30" y="948" width="9" height="15" fill="rgb(254,113,7)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="30" y="964" width="9" height="15" fill="rgb(214,31,15)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="30" y="980" width="9" height="15" fill="rgb(224,204,35)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="30" y="996" width="9" height="15" fill="rgb(246,178,39)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="30" y="1012" width="9" height="15" fill="rgb(234,136,54)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.71%)</title><rect x="30" y="1028" width="9" height="15" fill="rgb(236,139,7)"/><text x="33.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1044" width="4" height="15" fill="rgb(219,52,3)"/><text x="38.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1060" width="4" height="15" fill="rgb(247,33,13)"/><text x="38.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1076" width="4" height="15" fill="rgb(211,187,43)"/><text x="38.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1092" width="4" height="15" fill="rgb(226,79,30)"/><text x="38.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1108" width="4" height="15" fill="rgb(234,197,20)"/><text x="38.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="35" y="1124" width="4" height="15" fill="rgb(232,27,40)"/><text x="38.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1140" width="4" height="15" fill="rgb(241,169,12)"/><text x="38.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py) (1 samples, 0.35%)</title><rect x="35" y="1156" width="4" height="15" fill="rgb(241,115,37)"/><text x="38.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1172" width="4" height="15" fill="rgb(209,36,0)"/><text x="38.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1188" width="4" height="15" fill="rgb(241,100,47)"/><text x="38.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1204" width="4" height="15" fill="rgb(246,18,51)"/><text x="38.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="35" y="1220" width="4" height="15" fill="rgb(238,170,10)"/><text x="38.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1236" width="4" height="15" fill="rgb(246,201,38)"/><text x="38.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py) (1 samples, 0.35%)</title><rect x="35" y="1252" width="4" height="15" fill="rgb(254,227,37)"/><text x="38.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1268" width="4" height="15" fill="rgb(212,62,38)"/><text x="38.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1284" width="4" height="15" fill="rgb(211,115,42)"/><text x="38.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1300" width="4" height="15" fill="rgb(237,200,12)"/><text x="38.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="35" y="1316" width="4" height="15" fill="rgb(231,30,47)"/><text x="38.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="35" y="1332" width="4" height="15" fill="rgb(227,69,7)"/><text x="38.00" y="1342.50"></text></g><g><title>0x7f6429c77d9f (?) (1 samples, 0.35%)</title><rect x="35" y="1348" width="4" height="15" fill="rgb(242,72,10)"/><text x="38.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="500" width="17" height="15" fill="rgb(221,8,1)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="516" width="17" height="15" fill="rgb(243,141,48)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="532" width="17" height="15" fill="rgb(220,10,23)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="26" y="548" width="17" height="15" fill="rgb(242,196,15)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="564" width="17" height="15" fill="rgb(235,181,41)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 1.42%)</title><rect x="26" y="580" width="17" height="15" fill="rgb(251,119,28)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="596" width="17" height="15" fill="rgb(245,211,26)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="612" width="17" height="15" fill="rgb(243,197,44)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="628" width="17" height="15" fill="rgb(242,227,16)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="26" y="644" width="17" height="15" fill="rgb(221,68,28)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="660" width="17" height="15" fill="rgb(242,185,45)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 1.42%)</title><rect x="26" y="676" width="17" height="15" fill="rgb(250,219,51)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="692" width="17" height="15" fill="rgb(244,193,44)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="708" width="17" height="15" fill="rgb(247,118,47)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="724" width="17" height="15" fill="rgb(223,43,11)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="26" y="740" width="17" height="15" fill="rgb(231,206,43)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="756" width="17" height="15" fill="rgb(251,80,48)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 1.42%)</title><rect x="26" y="772" width="17" height="15" fill="rgb(209,120,41)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="788" width="17" height="15" fill="rgb(228,73,54)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="804" width="17" height="15" fill="rgb(206,208,14)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="820" width="17" height="15" fill="rgb(206,50,54)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="836" width="17" height="15" fill="rgb(253,31,38)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="852" width="17" height="15" fill="rgb(226,58,11)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="26" y="868" width="17" height="15" fill="rgb(251,87,0)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="26" y="884" width="17" height="15" fill="rgb(236,14,6)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py) (1 samples, 0.35%)</title><rect x="39" y="900" width="4" height="15" fill="rgb(209,47,10)"/><text x="42.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="500" width="4" height="15" fill="rgb(239,6,48)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="516" width="4" height="15" fill="rgb(232,27,7)"/><text x="46.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="532" width="4" height="15" fill="rgb(243,171,0)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="548" width="4" height="15" fill="rgb(253,199,12)"/><text x="46.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="564" width="4" height="15" fill="rgb(205,148,24)"/><text x="46.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="580" width="4" height="15" fill="rgb(210,79,52)"/><text x="46.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="596" width="4" height="15" fill="rgb(250,10,36)"/><text x="46.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.35%)</title><rect x="43" y="612" width="4" height="15" fill="rgb(210,111,35)"/><text x="46.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="628" width="4" height="15" fill="rgb(219,32,3)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="644" width="4" height="15" fill="rgb(240,96,25)"/><text x="46.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="660" width="4" height="15" fill="rgb(214,143,17)"/><text x="46.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="676" width="4" height="15" fill="rgb(211,159,34)"/><text x="46.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="692" width="4" height="15" fill="rgb(236,42,15)"/><text x="46.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.35%)</title><rect x="43" y="708" width="4" height="15" fill="rgb(233,152,44)"/><text x="46.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="724" width="4" height="15" fill="rgb(248,172,46)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="740" width="4" height="15" fill="rgb(240,181,25)"/><text x="46.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="756" width="4" height="15" fill="rgb(210,166,7)"/><text x="46.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="772" width="4" height="15" fill="rgb(232,71,48)"/><text x="46.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="788" width="4" height="15" fill="rgb(219,221,53)"/><text x="46.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.35%)</title><rect x="43" y="804" width="4" height="15" fill="rgb(254,217,49)"/><text x="46.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="820" width="4" height="15" fill="rgb(253,192,48)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="836" width="4" height="15" fill="rgb(246,27,0)"/><text x="46.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="852" width="4" height="15" fill="rgb(238,192,38)"/><text x="46.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="868" width="4" height="15" fill="rgb(211,77,52)"/><text x="46.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="884" width="4" height="15" fill="rgb(246,5,7)"/><text x="46.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.35%)</title><rect x="43" y="900" width="4" height="15" fill="rgb(228,147,44)"/><text x="46.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="916" width="4" height="15" fill="rgb(243,148,6)"/><text x="46.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="932" width="4" height="15" fill="rgb(232,6,3)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="948" width="4" height="15" fill="rgb(216,219,3)"/><text x="46.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="964" width="4" height="15" fill="rgb(236,152,20)"/><text x="46.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="980" width="4" height="15" fill="rgb(224,62,37)"/><text x="46.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="996" width="4" height="15" fill="rgb(243,78,14)"/><text x="46.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="1012" width="4" height="15" fill="rgb(215,169,52)"/><text x="46.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.35%)</title><rect x="43" y="1028" width="4" height="15" fill="rgb(218,113,6)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="1044" width="4" height="15" fill="rgb(233,138,7)"/><text x="46.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="1060" width="4" height="15" fill="rgb(242,7,19)"/><text x="46.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="1076" width="4" height="15" fill="rgb(240,90,33)"/><text x="46.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="43" y="1092" width="4" height="15" fill="rgb(216,94,7)"/><text x="46.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="43" y="1108" width="4" height="15" fill="rgb(250,175,23)"/><text x="46.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.35%)</title><rect x="43" y="1124" width="4" height="15" fill="rgb(243,54,21)"/><text x="46.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="10" y="196" width="41" height="15" fill="rgb(208,59,28)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="10" y="212" width="41" height="15" fill="rgb(216,184,29)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="10" y="228" width="41" height="15" fill="rgb(229,72,49)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="10" y="244" width="41" height="15" fill="rgb(249,140,13)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.55%)</title><rect x="10" y="260" width="41" height="15" fill="rgb(208,39,3)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="10" y="276" width="41" height="15" fill="rgb(237,70,49)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (6 samples, 2.13%)</title><rect x="26" y="292" width="25" height="15" fill="rgb(222,15,32)"/><text x="29.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="308" width="25" height="15" fill="rgb(239,17,21)"/><text x="29.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="324" width="25" height="15" fill="rgb(233,139,17)"/><text x="29.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="340" width="25" height="15" fill="rgb(244,64,28)"/><text x="29.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.13%)</title><rect x="26" y="356" width="25" height="15" fill="rgb(248,7,52)"/><text x="29.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="372" width="25" height="15" fill="rgb(240,197,51)"/><text x="29.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (sklearn/base.py) (6 samples, 2.13%)</title><rect x="26" y="388" width="25" height="15" fill="rgb(211,87,42)"/><text x="29.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="404" width="25" height="15" fill="rgb(211,144,19)"/><text x="29.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="420" width="25" height="15" fill="rgb(228,190,41)"/><text x="29.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="436" width="25" height="15" fill="rgb(244,27,48)"/><text x="29.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.13%)</title><rect x="26" y="452" width="25" height="15" fill="rgb(216,102,6)"/><text x="29.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.13%)</title><rect x="26" y="468" width="25" height="15" fill="rgb(217,161,15)"/><text x="29.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (6 samples, 2.13%)</title><rect x="26" y="484" width="25" height="15" fill="rgb(219,12,7)"/><text x="29.00" y="494.50">&lt;..</text></g><g><title>mmap64 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="47" y="500" width="4" height="15" fill="rgb(243,161,10)"/><text x="50.00" y="510.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.35%)</title><rect x="51" y="1204" width="5" height="15" fill="rgb(233,206,14)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1220" width="5" height="15" fill="rgb(209,185,7)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1236" width="5" height="15" fill="rgb(247,186,53)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1252" width="5" height="15" fill="rgb(217,152,50)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="51" y="1268" width="5" height="15" fill="rgb(254,72,14)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1284" width="5" height="15" fill="rgb(211,221,15)"/><text x="54.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.35%)</title><rect x="51" y="1300" width="5" height="15" fill="rgb(220,176,16)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1316" width="5" height="15" fill="rgb(223,226,41)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1332" width="5" height="15" fill="rgb(215,12,44)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="51" y="1348" width="5" height="15" fill="rgb(215,46,31)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="51" y="1364" width="5" height="15" fill="rgb(245,223,32)"/><text x="54.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="51" y="1380" width="5" height="15" fill="rgb(220,52,53)"/><text x="54.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="51" y="1396" width="5" height="15" fill="rgb(221,179,26)"/><text x="54.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="51" y="1124" width="9" height="15" fill="rgb(232,45,23)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="51" y="1140" width="9" height="15" fill="rgb(247,102,31)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="51" y="1156" width="9" height="15" fill="rgb(216,203,31)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="51" y="1172" width="9" height="15" fill="rgb(217,146,54)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="51" y="1188" width="9" height="15" fill="rgb(207,150,54)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py) (1 samples, 0.35%)</title><rect x="56" y="1204" width="4" height="15" fill="rgb(205,101,20)"/><text x="59.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py) (1 samples, 0.35%)</title><rect x="56" y="1220" width="4" height="15" fill="rgb(212,73,19)"/><text x="59.00" y="1230.50"></text></g><g><title>get_distribution (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="56" y="1236" width="4" height="15" fill="rgb(228,112,8)"/><text x="59.00" y="1246.50"></text></g><g><title>parse (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="56" y="1252" width="4" height="15" fill="rgb(234,0,18)"/><text x="59.00" y="1262.50"></text></g><g><title>parse_requirements (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="56" y="1268" width="4" height="15" fill="rgb(228,139,47)"/><text x="59.00" y="1278.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.35%)</title><rect x="56" y="1284" width="4" height="15" fill="rgb(208,182,16)"/><text x="59.00" y="1294.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.35%)</title><rect x="56" y="1300" width="4" height="15" fill="rgb(233,228,5)"/><text x="59.00" y="1310.50"></text></g><g><title>parseString (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1316" width="4" height="15" fill="rgb(217,186,3)"/><text x="59.00" y="1326.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1332" width="4" height="15" fill="rgb(221,202,29)"/><text x="59.00" y="1342.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1348" width="4" height="15" fill="rgb(209,113,53)"/><text x="59.00" y="1358.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1364" width="4" height="15" fill="rgb(230,97,1)"/><text x="59.00" y="1374.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1380" width="4" height="15" fill="rgb(249,214,27)"/><text x="59.00" y="1390.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1396" width="4" height="15" fill="rgb(234,111,1)"/><text x="59.00" y="1406.50"></text></g><g><title>streamline (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.35%)</title><rect x="56" y="1412" width="4" height="15" fill="rgb(236,108,23)"/><text x="59.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="484" width="13" height="15" fill="rgb(234,76,32)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="500" width="13" height="15" fill="rgb(217,212,30)"/><text x="54.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="516" width="13" height="15" fill="rgb(240,69,35)"/><text x="54.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="532" width="13" height="15" fill="rgb(207,191,14)"/><text x="54.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="51" y="548" width="13" height="15" fill="rgb(245,38,12)"/><text x="54.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="564" width="13" height="15" fill="rgb(219,20,46)"/><text x="54.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 1.06%)</title><rect x="51" y="580" width="13" height="15" fill="rgb(219,111,22)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="596" width="13" height="15" fill="rgb(211,162,44)"/><text x="54.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="612" width="13" height="15" fill="rgb(207,142,35)"/><text x="54.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="628" width="13" height="15" fill="rgb(232,77,53)"/><text x="54.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="51" y="644" width="13" height="15" fill="rgb(217,42,39)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="660" width="13" height="15" fill="rgb(232,75,49)"/><text x="54.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 1.06%)</title><rect x="51" y="676" width="13" height="15" fill="rgb(241,73,18)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="692" width="13" height="15" fill="rgb(240,184,22)"/><text x="54.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="708" width="13" height="15" fill="rgb(223,175,38)"/><text x="54.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="724" width="13" height="15" fill="rgb(210,23,20)"/><text x="54.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="51" y="740" width="13" height="15" fill="rgb(234,142,9)"/><text x="54.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="756" width="13" height="15" fill="rgb(235,98,31)"/><text x="54.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.06%)</title><rect x="51" y="772" width="13" height="15" fill="rgb(242,1,27)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="788" width="13" height="15" fill="rgb(231,183,34)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="804" width="13" height="15" fill="rgb(206,68,3)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="820" width="13" height="15" fill="rgb(225,145,13)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="51" y="836" width="13" height="15" fill="rgb(236,183,34)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="852" width="13" height="15" fill="rgb(221,114,22)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.06%)</title><rect x="51" y="868" width="13" height="15" fill="rgb(212,69,38)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="884" width="13" height="15" fill="rgb(227,6,38)"/><text x="54.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="900" width="13" height="15" fill="rgb(214,73,27)"/><text x="54.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="916" width="13" height="15" fill="rgb(251,25,40)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="932" width="13" height="15" fill="rgb(222,175,32)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="948" width="13" height="15" fill="rgb(214,160,51)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="964" width="13" height="15" fill="rgb(213,61,46)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="51" y="980" width="13" height="15" fill="rgb(252,95,7)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="996" width="13" height="15" fill="rgb(237,53,48)"/><text x="54.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 1.06%)</title><rect x="51" y="1012" width="13" height="15" fill="rgb(242,71,18)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="1028" width="13" height="15" fill="rgb(231,189,32)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="1044" width="13" height="15" fill="rgb(218,111,35)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="1060" width="13" height="15" fill="rgb(239,185,25)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="51" y="1076" width="13" height="15" fill="rgb(210,72,23)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="51" y="1092" width="13" height="15" fill="rgb(206,191,36)"/><text x="54.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 1.06%)</title><rect x="51" y="1108" width="13" height="15" fill="rgb(247,128,2)"/><text x="54.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1124" width="4" height="15" fill="rgb(244,145,48)"/><text x="63.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1140" width="4" height="15" fill="rgb(213,50,12)"/><text x="63.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1156" width="4" height="15" fill="rgb(238,21,21)"/><text x="63.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1172" width="4" height="15" fill="rgb(243,42,7)"/><text x="63.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1188" width="4" height="15" fill="rgb(231,16,0)"/><text x="63.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="60" y="1204" width="4" height="15" fill="rgb(223,102,8)"/><text x="63.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1220" width="4" height="15" fill="rgb(211,211,38)"/><text x="63.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.35%)</title><rect x="60" y="1236" width="4" height="15" fill="rgb(227,186,23)"/><text x="63.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1252" width="4" height="15" fill="rgb(207,10,25)"/><text x="63.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1268" width="4" height="15" fill="rgb(243,36,29)"/><text x="63.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1284" width="4" height="15" fill="rgb(227,12,45)"/><text x="63.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1300" width="4" height="15" fill="rgb(217,196,1)"/><text x="63.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1316" width="4" height="15" fill="rgb(253,219,43)"/><text x="63.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="60" y="1332" width="4" height="15" fill="rgb(212,48,39)"/><text x="63.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1348" width="4" height="15" fill="rgb(208,136,54)"/><text x="63.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.35%)</title><rect x="60" y="1364" width="4" height="15" fill="rgb(217,20,52)"/><text x="63.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1380" width="4" height="15" fill="rgb(247,10,22)"/><text x="63.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1396" width="4" height="15" fill="rgb(234,189,40)"/><text x="63.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1412" width="4" height="15" fill="rgb(254,42,46)"/><text x="63.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="60" y="1428" width="4" height="15" fill="rgb(242,205,20)"/><text x="63.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="60" y="1444" width="4" height="15" fill="rgb(217,133,53)"/><text x="63.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="60" y="1460" width="4" height="15" fill="rgb(236,43,28)"/><text x="63.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="60" y="1476" width="4" height="15" fill="rgb(243,166,5)"/><text x="63.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.35%)</title><rect x="60" y="1492" width="4" height="15" fill="rgb(208,168,46)"/><text x="63.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="60" y="1508" width="4" height="15" fill="rgb(254,140,45)"/><text x="63.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.35%)</title><rect x="60" y="1524" width="4" height="15" fill="rgb(221,192,6)"/><text x="63.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.35%)</title><rect x="60" y="1540" width="4" height="15" fill="rgb(205,69,14)"/><text x="63.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.35%)</title><rect x="60" y="1556" width="4" height="15" fill="rgb(237,114,19)"/><text x="63.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.35%)</title><rect x="60" y="1572" width="4" height="15" fill="rgb(212,77,37)"/><text x="63.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.35%)</title><rect x="60" y="1588" width="4" height="15" fill="rgb(236,74,41)"/><text x="63.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.35%)</title><rect x="60" y="1604" width="4" height="15" fill="rgb(208,150,43)"/><text x="63.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.35%)</title><rect x="60" y="1620" width="4" height="15" fill="rgb(253,209,36)"/><text x="63.00" y="1630.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="60" y="1636" width="4" height="15" fill="rgb(228,34,37)"/><text x="63.00" y="1646.50"></text></g><g><title>0x7f644e6db18b (ld-2.29.so) (1 samples, 0.35%)</title><rect x="64" y="1316" width="4" height="15" fill="rgb(211,12,20)"/><text x="67.00" y="1326.50"></text></g><g><title>0x7f644e6d0b9a (ld-2.29.so) (1 samples, 0.35%)</title><rect x="64" y="1332" width="4" height="15" fill="rgb(254,60,5)"/><text x="67.00" y="1342.50"></text></g><g><title>0x7f644e6e2fbb (ld-2.29.so) (1 samples, 0.35%)</title><rect x="64" y="1348" width="4" height="15" fill="rgb(225,110,10)"/><text x="67.00" y="1358.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="64" y="1364" width="4" height="15" fill="rgb(254,201,46)"/><text x="67.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="772" width="8" height="15" fill="rgb(222,228,42)"/><text x="67.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="788" width="8" height="15" fill="rgb(236,170,25)"/><text x="67.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="804" width="8" height="15" fill="rgb(208,21,26)"/><text x="67.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="820" width="8" height="15" fill="rgb(242,120,47)"/><text x="67.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="64" y="836" width="8" height="15" fill="rgb(239,100,43)"/><text x="67.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="852" width="8" height="15" fill="rgb(211,131,40)"/><text x="67.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.71%)</title><rect x="64" y="868" width="8" height="15" fill="rgb(240,204,34)"/><text x="67.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="884" width="8" height="15" fill="rgb(220,34,39)"/><text x="67.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="900" width="8" height="15" fill="rgb(252,140,1)"/><text x="67.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="916" width="8" height="15" fill="rgb(226,97,42)"/><text x="67.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="64" y="932" width="8" height="15" fill="rgb(254,175,18)"/><text x="67.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="948" width="8" height="15" fill="rgb(229,159,2)"/><text x="67.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (2 samples, 0.71%)</title><rect x="64" y="964" width="8" height="15" fill="rgb(251,39,41)"/><text x="67.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="980" width="8" height="15" fill="rgb(232,133,43)"/><text x="67.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="996" width="8" height="15" fill="rgb(224,215,5)"/><text x="67.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1012" width="8" height="15" fill="rgb(220,62,1)"/><text x="67.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="64" y="1028" width="8" height="15" fill="rgb(208,39,18)"/><text x="67.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1044" width="8" height="15" fill="rgb(233,73,39)"/><text x="67.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (2 samples, 0.71%)</title><rect x="64" y="1060" width="8" height="15" fill="rgb(253,2,6)"/><text x="67.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1076" width="8" height="15" fill="rgb(230,208,47)"/><text x="67.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1092" width="8" height="15" fill="rgb(216,204,13)"/><text x="67.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1108" width="8" height="15" fill="rgb(253,180,34)"/><text x="67.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1124" width="8" height="15" fill="rgb(213,176,52)"/><text x="67.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1140" width="8" height="15" fill="rgb(240,87,40)"/><text x="67.00" y="1150.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1156" width="8" height="15" fill="rgb(218,153,8)"/><text x="67.00" y="1166.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="64" y="1172" width="8" height="15" fill="rgb(231,149,46)"/><text x="67.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="64" y="1188" width="8" height="15" fill="rgb(243,84,12)"/><text x="67.00" y="1198.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1204" width="8" height="15" fill="rgb(215,123,7)"/><text x="67.00" y="1214.50"></text></g><g><title>0x7f644e68d995 (libdl-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1220" width="8" height="15" fill="rgb(234,122,52)"/><text x="67.00" y="1230.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1236" width="8" height="15" fill="rgb(206,217,7)"/><text x="67.00" y="1246.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1252" width="8" height="15" fill="rgb(241,41,38)"/><text x="67.00" y="1262.50"></text></g><g><title>0x7f644e68d258 (libdl-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1268" width="8" height="15" fill="rgb(246,6,50)"/><text x="67.00" y="1278.50"></text></g><g><title>0x7f644e6dad7a (ld-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1284" width="8" height="15" fill="rgb(245,108,8)"/><text x="67.00" y="1294.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.71%)</title><rect x="64" y="1300" width="8" height="15" fill="rgb(218,227,32)"/><text x="67.00" y="1310.50"></text></g><g><title>0x7f644e6db345 (ld-2.29.so) (1 samples, 0.35%)</title><rect x="68" y="1316" width="4" height="15" fill="rgb(210,204,40)"/><text x="71.00" y="1326.50"></text></g><g><title>0x7f644e6d43d4 (ld-2.29.so) (1 samples, 0.35%)</title><rect x="68" y="1332" width="4" height="15" fill="rgb(230,160,11)"/><text x="71.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1540" width="5" height="15" fill="rgb(222,1,44)"/><text x="79.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1556" width="5" height="15" fill="rgb(224,29,40)"/><text x="79.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1572" width="5" height="15" fill="rgb(223,0,33)"/><text x="79.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1588" width="5" height="15" fill="rgb(218,23,16)"/><text x="79.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="76" y="1604" width="5" height="15" fill="rgb(238,126,25)"/><text x="79.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1620" width="5" height="15" fill="rgb(249,26,15)"/><text x="79.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.35%)</title><rect x="76" y="1636" width="5" height="15" fill="rgb(253,136,36)"/><text x="79.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1652" width="5" height="15" fill="rgb(250,3,54)"/><text x="79.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1668" width="5" height="15" fill="rgb(211,145,44)"/><text x="79.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1684" width="5" height="15" fill="rgb(235,3,36)"/><text x="79.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1700" width="5" height="15" fill="rgb(253,100,42)"/><text x="79.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1716" width="5" height="15" fill="rgb(214,201,47)"/><text x="79.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="76" y="1732" width="5" height="15" fill="rgb(209,198,50)"/><text x="79.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1748" width="5" height="15" fill="rgb(243,157,13)"/><text x="79.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.35%)</title><rect x="76" y="1764" width="5" height="15" fill="rgb(234,227,5)"/><text x="79.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1780" width="5" height="15" fill="rgb(229,203,3)"/><text x="79.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1796" width="5" height="15" fill="rgb(225,209,36)"/><text x="79.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1812" width="5" height="15" fill="rgb(247,188,2)"/><text x="79.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="76" y="1828" width="5" height="15" fill="rgb(234,17,29)"/><text x="79.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1844" width="5" height="15" fill="rgb(239,45,1)"/><text x="79.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.35%)</title><rect x="76" y="1860" width="5" height="15" fill="rgb(205,109,15)"/><text x="79.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1876" width="5" height="15" fill="rgb(231,15,31)"/><text x="79.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1892" width="5" height="15" fill="rgb(235,92,2)"/><text x="79.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1908" width="5" height="15" fill="rgb(242,152,51)"/><text x="79.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="76" y="1924" width="5" height="15" fill="rgb(220,13,17)"/><text x="79.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="76" y="1940" width="5" height="15" fill="rgb(221,29,6)"/><text x="79.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="1956" width="5" height="15" fill="rgb(248,200,11)"/><text x="79.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="1972" width="5" height="15" fill="rgb(237,107,23)"/><text x="79.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="1988" width="5" height="15" fill="rgb(227,137,1)"/><text x="79.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2004" width="5" height="15" fill="rgb(241,149,54)"/><text x="79.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2020" width="5" height="15" fill="rgb(205,63,6)"/><text x="79.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2036" width="5" height="15" fill="rgb(240,112,16)"/><text x="79.00" y="2046.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2052" width="5" height="15" fill="rgb(227,72,2)"/><text x="79.00" y="2062.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2068" width="5" height="15" fill="rgb(236,136,52)"/><text x="79.00" y="2078.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2084" width="5" height="15" fill="rgb(233,206,49)"/><text x="79.00" y="2094.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2100" width="5" height="15" fill="rgb(215,108,17)"/><text x="79.00" y="2110.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2116" width="5" height="15" fill="rgb(235,122,12)"/><text x="79.00" y="2126.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2132" width="5" height="15" fill="rgb(238,60,6)"/><text x="79.00" y="2142.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2148" width="5" height="15" fill="rgb(211,159,31)"/><text x="79.00" y="2158.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2164" width="5" height="15" fill="rgb(235,108,46)"/><text x="79.00" y="2174.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2180" width="5" height="15" fill="rgb(217,55,47)"/><text x="79.00" y="2190.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2196" width="5" height="15" fill="rgb(253,133,1)"/><text x="79.00" y="2206.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2212" width="5" height="15" fill="rgb(250,64,10)"/><text x="79.00" y="2222.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2228" width="5" height="15" fill="rgb(207,211,28)"/><text x="79.00" y="2238.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2244" width="5" height="15" fill="rgb(239,104,43)"/><text x="79.00" y="2254.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2260" width="5" height="15" fill="rgb(229,85,15)"/><text x="79.00" y="2270.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2276" width="5" height="15" fill="rgb(249,108,38)"/><text x="79.00" y="2286.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.35%)</title><rect x="76" y="2292" width="5" height="15" fill="rgb(205,194,33)"/><text x="79.00" y="2302.50"></text></g><g><title>copy (copy.py) (1 samples, 0.35%)</title><rect x="76" y="2308" width="5" height="15" fill="rgb(229,29,36)"/><text x="79.00" y="2318.50"></text></g><g><title>_reconstruct (copy.py) (1 samples, 0.35%)</title><rect x="76" y="2324" width="5" height="15" fill="rgb(216,121,19)"/><text x="79.00" y="2334.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.35%)</title><rect x="81" y="1684" width="4" height="15" fill="rgb(225,197,0)"/><text x="84.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="81" y="1700" width="4" height="15" fill="rgb(216,141,16)"/><text x="84.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="81" y="1716" width="4" height="15" fill="rgb(237,3,19)"/><text x="84.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="81" y="1732" width="4" height="15" fill="rgb(206,185,53)"/><text x="84.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="81" y="1748" width="4" height="15" fill="rgb(246,137,44)"/><text x="84.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="81" y="1764" width="4" height="15" fill="rgb(225,56,40)"/><text x="84.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.35%)</title><rect x="81" y="1780" width="4" height="15" fill="rgb(247,135,41)"/><text x="84.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.35%)</title><rect x="81" y="1796" width="4" height="15" fill="rgb(244,13,34)"/><text x="84.00" y="1806.50"></text></g><g><title>__init__ (matplotlib/colors.py) (1 samples, 0.35%)</title><rect x="81" y="1812" width="4" height="15" fill="rgb(230,145,4)"/><text x="84.00" y="1822.50"></text></g><g><title>__init__ (matplotlib/colors.py) (1 samples, 0.35%)</title><rect x="81" y="1828" width="4" height="15" fill="rgb(220,188,8)"/><text x="84.00" y="1838.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="1892" width="4" height="15" fill="rgb(236,1,32)"/><text x="88.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="1908" width="4" height="15" fill="rgb(231,219,9)"/><text x="88.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="1924" width="4" height="15" fill="rgb(209,35,48)"/><text x="88.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="85" y="1940" width="4" height="15" fill="rgb(241,173,15)"/><text x="88.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="1956" width="4" height="15" fill="rgb(249,162,11)"/><text x="88.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.35%)</title><rect x="85" y="1972" width="4" height="15" fill="rgb(208,12,2)"/><text x="88.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="1988" width="4" height="15" fill="rgb(219,33,25)"/><text x="88.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="2004" width="4" height="15" fill="rgb(218,85,32)"/><text x="88.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="2020" width="4" height="15" fill="rgb(244,173,30)"/><text x="88.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="2036" width="4" height="15" fill="rgb(231,22,14)"/><text x="88.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="2052" width="4" height="15" fill="rgb(209,21,46)"/><text x="88.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="85" y="2068" width="4" height="15" fill="rgb(237,103,36)"/><text x="88.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="85" y="2084" width="4" height="15" fill="rgb(244,157,42)"/><text x="88.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/dviread.py) (1 samples, 0.35%)</title><rect x="85" y="2100" width="4" height="15" fill="rgb(216,48,29)"/><text x="88.00" y="2110.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.35%)</title><rect x="85" y="2116" width="4" height="15" fill="rgb(230,198,42)"/><text x="88.00" y="2126.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.35%)</title><rect x="85" y="2132" width="4" height="15" fill="rgb(253,66,40)"/><text x="88.00" y="2142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="51" y="420" width="42" height="15" fill="rgb(213,187,7)"/><text x="54.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 3.55%)</title><rect x="51" y="436" width="42" height="15" fill="rgb(222,106,0)"/><text x="54.00" y="446.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="51" y="452" width="42" height="15" fill="rgb(212,50,45)"/><text x="54.00" y="462.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.55%)</title><rect x="51" y="468" width="42" height="15" fill="rgb(234,169,33)"/><text x="54.00" y="478.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="484" width="29" height="15" fill="rgb(254,104,2)"/><text x="67.00" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.48%)</title><rect x="64" y="500" width="29" height="15" fill="rgb(249,55,22)"/><text x="67.00" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="516" width="29" height="15" fill="rgb(241,119,46)"/><text x="67.00" y="526.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (7 samples, 2.48%)</title><rect x="64" y="532" width="29" height="15" fill="rgb(220,223,12)"/><text x="67.00" y="542.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="548" width="29" height="15" fill="rgb(213,54,31)"/><text x="67.00" y="558.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="564" width="29" height="15" fill="rgb(254,186,31)"/><text x="67.00" y="574.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="580" width="29" height="15" fill="rgb(221,144,5)"/><text x="67.00" y="590.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.48%)</title><rect x="64" y="596" width="29" height="15" fill="rgb(226,219,8)"/><text x="67.00" y="606.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="612" width="29" height="15" fill="rgb(236,24,44)"/><text x="67.00" y="622.50">_c..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (7 samples, 2.48%)</title><rect x="64" y="628" width="29" height="15" fill="rgb(235,18,6)"/><text x="67.00" y="638.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="644" width="29" height="15" fill="rgb(243,82,36)"/><text x="67.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="660" width="29" height="15" fill="rgb(235,76,5)"/><text x="67.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="676" width="29" height="15" fill="rgb(254,107,41)"/><text x="67.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.48%)</title><rect x="64" y="692" width="29" height="15" fill="rgb(211,28,35)"/><text x="67.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="708" width="29" height="15" fill="rgb(231,73,29)"/><text x="67.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (7 samples, 2.48%)</title><rect x="64" y="724" width="29" height="15" fill="rgb(236,99,21)"/><text x="67.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="740" width="29" height="15" fill="rgb(240,11,49)"/><text x="67.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.48%)</title><rect x="64" y="756" width="29" height="15" fill="rgb(225,94,39)"/><text x="67.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="772" width="21" height="15" fill="rgb(209,103,5)"/><text x="75.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="788" width="21" height="15" fill="rgb(228,210,49)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="804" width="21" height="15" fill="rgb(250,153,8)"/><text x="75.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (5 samples, 1.77%)</title><rect x="72" y="820" width="21" height="15" fill="rgb(232,29,2)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="836" width="21" height="15" fill="rgb(212,13,50)"/><text x="75.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="852" width="21" height="15" fill="rgb(237,221,41)"/><text x="75.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="868" width="21" height="15" fill="rgb(221,47,32)"/><text x="75.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="884" width="21" height="15" fill="rgb(210,167,16)"/><text x="75.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="900" width="21" height="15" fill="rgb(228,24,13)"/><text x="75.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (5 samples, 1.77%)</title><rect x="72" y="916" width="21" height="15" fill="rgb(245,145,52)"/><text x="75.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="932" width="21" height="15" fill="rgb(237,133,31)"/><text x="75.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="948" width="21" height="15" fill="rgb(242,123,2)"/><text x="75.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="964" width="21" height="15" fill="rgb(237,81,25)"/><text x="75.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="980" width="21" height="15" fill="rgb(217,196,38)"/><text x="75.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="996" width="21" height="15" fill="rgb(231,5,3)"/><text x="75.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (5 samples, 1.77%)</title><rect x="72" y="1012" width="21" height="15" fill="rgb(221,26,19)"/><text x="75.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1028" width="21" height="15" fill="rgb(237,105,44)"/><text x="75.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1044" width="21" height="15" fill="rgb(232,126,26)"/><text x="75.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1060" width="21" height="15" fill="rgb(237,33,52)"/><text x="75.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="1076" width="21" height="15" fill="rgb(235,49,21)"/><text x="75.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1092" width="21" height="15" fill="rgb(242,227,37)"/><text x="75.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (5 samples, 1.77%)</title><rect x="72" y="1108" width="21" height="15" fill="rgb(240,51,24)"/><text x="75.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1124" width="21" height="15" fill="rgb(208,19,19)"/><text x="75.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1140" width="21" height="15" fill="rgb(219,191,5)"/><text x="75.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1156" width="21" height="15" fill="rgb(242,226,28)"/><text x="75.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="1172" width="21" height="15" fill="rgb(251,165,2)"/><text x="75.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1188" width="21" height="15" fill="rgb(225,54,18)"/><text x="75.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (5 samples, 1.77%)</title><rect x="72" y="1204" width="21" height="15" fill="rgb(224,219,13)"/><text x="75.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1220" width="21" height="15" fill="rgb(212,68,24)"/><text x="75.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1236" width="21" height="15" fill="rgb(244,217,39)"/><text x="75.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1252" width="21" height="15" fill="rgb(232,111,11)"/><text x="75.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="1268" width="21" height="15" fill="rgb(225,123,7)"/><text x="75.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1284" width="21" height="15" fill="rgb(219,52,29)"/><text x="75.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (5 samples, 1.77%)</title><rect x="72" y="1300" width="21" height="15" fill="rgb(213,193,43)"/><text x="75.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1316" width="21" height="15" fill="rgb(236,119,3)"/><text x="75.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1332" width="21" height="15" fill="rgb(238,129,3)"/><text x="75.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1348" width="21" height="15" fill="rgb(233,55,1)"/><text x="75.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.77%)</title><rect x="72" y="1364" width="21" height="15" fill="rgb(210,198,34)"/><text x="75.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1380" width="21" height="15" fill="rgb(221,216,6)"/><text x="75.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (5 samples, 1.77%)</title><rect x="72" y="1396" width="21" height="15" fill="rgb(209,190,29)"/><text x="75.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.77%)</title><rect x="72" y="1412" width="21" height="15" fill="rgb(242,104,11)"/><text x="75.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="76" y="1428" width="17" height="15" fill="rgb(231,224,11)"/><text x="79.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="76" y="1444" width="17" height="15" fill="rgb(223,5,47)"/><text x="79.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.42%)</title><rect x="76" y="1460" width="17" height="15" fill="rgb(214,59,9)"/><text x="79.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="76" y="1476" width="17" height="15" fill="rgb(241,14,34)"/><text x="79.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (4 samples, 1.42%)</title><rect x="76" y="1492" width="17" height="15" fill="rgb(215,158,35)"/><text x="79.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="76" y="1508" width="17" height="15" fill="rgb(231,169,21)"/><text x="79.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.42%)</title><rect x="76" y="1524" width="17" height="15" fill="rgb(248,165,24)"/><text x="79.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="81" y="1540" width="12" height="15" fill="rgb(212,29,30)"/><text x="84.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="81" y="1556" width="12" height="15" fill="rgb(214,180,53)"/><text x="84.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="81" y="1572" width="12" height="15" fill="rgb(237,141,24)"/><text x="84.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (3 samples, 1.06%)</title><rect x="81" y="1588" width="12" height="15" fill="rgb(225,45,47)"/><text x="84.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="81" y="1604" width="12" height="15" fill="rgb(211,210,0)"/><text x="84.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="81" y="1620" width="12" height="15" fill="rgb(238,8,15)"/><text x="84.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="81" y="1636" width="12" height="15" fill="rgb(209,117,37)"/><text x="84.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="81" y="1652" width="12" height="15" fill="rgb(245,72,24)"/><text x="84.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="81" y="1668" width="12" height="15" fill="rgb(234,211,40)"/><text x="84.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.71%)</title><rect x="85" y="1684" width="8" height="15" fill="rgb(219,109,36)"/><text x="88.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1700" width="8" height="15" fill="rgb(235,127,0)"/><text x="88.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1716" width="8" height="15" fill="rgb(244,120,15)"/><text x="88.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1732" width="8" height="15" fill="rgb(243,9,29)"/><text x="88.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="85" y="1748" width="8" height="15" fill="rgb(238,125,21)"/><text x="88.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1764" width="8" height="15" fill="rgb(228,147,51)"/><text x="88.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.71%)</title><rect x="85" y="1780" width="8" height="15" fill="rgb(231,24,24)"/><text x="88.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1796" width="8" height="15" fill="rgb(243,123,1)"/><text x="88.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1812" width="8" height="15" fill="rgb(228,132,29)"/><text x="88.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1828" width="8" height="15" fill="rgb(214,71,45)"/><text x="88.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="85" y="1844" width="8" height="15" fill="rgb(232,183,54)"/><text x="88.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="85" y="1860" width="8" height="15" fill="rgb(243,148,37)"/><text x="88.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.71%)</title><rect x="85" y="1876" width="8" height="15" fill="rgb(233,150,36)"/><text x="88.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="89" y="1892" width="4" height="15" fill="rgb(214,215,29)"/><text x="92.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="89" y="1908" width="4" height="15" fill="rgb(215,85,18)"/><text x="92.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="89" y="1924" width="4" height="15" fill="rgb(212,136,20)"/><text x="92.00" y="1934.50"></text></g><g><title>is_alias (matplotlib/artist.py) (1 samples, 0.35%)</title><rect x="89" y="1940" width="4" height="15" fill="rgb(216,144,4)"/><text x="92.00" y="1950.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.35%)</title><rect x="89" y="1956" width="4" height="15" fill="rgb(243,195,6)"/><text x="92.00" y="1966.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.35%)</title><rect x="89" y="1972" width="4" height="15" fill="rgb(241,105,19)"/><text x="92.00" y="1982.50"></text></g><g><title>unicode_lstrip (python3.7) (1 samples, 0.35%)</title><rect x="89" y="1988" width="4" height="15" fill="rgb(246,7,38)"/><text x="92.00" y="1998.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 3.90%)</title><rect x="51" y="244" width="46" height="15" fill="rgb(219,58,38)"/><text x="54.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="260" width="46" height="15" fill="rgb(212,189,14)"/><text x="54.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="276" width="46" height="15" fill="rgb(252,21,1)"/><text x="54.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="292" width="46" height="15" fill="rgb(219,144,3)"/><text x="54.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.90%)</title><rect x="51" y="308" width="46" height="15" fill="rgb(227,191,32)"/><text x="54.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="324" width="46" height="15" fill="rgb(212,24,48)"/><text x="54.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 3.90%)</title><rect x="51" y="340" width="46" height="15" fill="rgb(219,5,25)"/><text x="54.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="356" width="46" height="15" fill="rgb(208,133,3)"/><text x="54.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="372" width="46" height="15" fill="rgb(208,3,8)"/><text x="54.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.90%)</title><rect x="51" y="388" width="46" height="15" fill="rgb(212,184,52)"/><text x="54.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.90%)</title><rect x="51" y="404" width="46" height="15" fill="rgb(248,46,53)"/><text x="54.00" y="414.50">exec..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="93" y="420" width="4" height="15" fill="rgb(211,18,53)"/><text x="96.00" y="430.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="93" y="436" width="4" height="15" fill="rgb(223,9,50)"/><text x="96.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="260" width="5" height="15" fill="rgb(237,138,43)"/><text x="100.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="276" width="5" height="15" fill="rgb(247,168,45)"/><text x="100.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="292" width="5" height="15" fill="rgb(227,115,6)"/><text x="100.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="97" y="308" width="5" height="15" fill="rgb(242,223,15)"/><text x="100.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="324" width="5" height="15" fill="rgb(247,58,37)"/><text x="100.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.35%)</title><rect x="97" y="340" width="5" height="15" fill="rgb(226,149,31)"/><text x="100.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="356" width="5" height="15" fill="rgb(215,47,11)"/><text x="100.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="372" width="5" height="15" fill="rgb(237,218,41)"/><text x="100.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="388" width="5" height="15" fill="rgb(211,146,23)"/><text x="100.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="97" y="404" width="5" height="15" fill="rgb(242,152,20)"/><text x="100.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="420" width="5" height="15" fill="rgb(218,87,34)"/><text x="100.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.35%)</title><rect x="97" y="436" width="5" height="15" fill="rgb(247,150,23)"/><text x="100.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="452" width="5" height="15" fill="rgb(241,48,11)"/><text x="100.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="468" width="5" height="15" fill="rgb(205,50,17)"/><text x="100.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="484" width="5" height="15" fill="rgb(253,222,24)"/><text x="100.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="97" y="500" width="5" height="15" fill="rgb(233,185,36)"/><text x="100.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="516" width="5" height="15" fill="rgb(239,143,49)"/><text x="100.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.35%)</title><rect x="97" y="532" width="5" height="15" fill="rgb(241,91,3)"/><text x="100.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="548" width="5" height="15" fill="rgb(252,26,45)"/><text x="100.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="564" width="5" height="15" fill="rgb(218,122,3)"/><text x="100.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="580" width="5" height="15" fill="rgb(245,155,3)"/><text x="100.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="97" y="596" width="5" height="15" fill="rgb(253,173,6)"/><text x="100.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="97" y="612" width="5" height="15" fill="rgb(244,172,53)"/><text x="100.00" y="622.50"></text></g><g><title>&lt;module&gt; (logging/__init__.py) (1 samples, 0.35%)</title><rect x="97" y="628" width="5" height="15" fill="rgb(252,26,33)"/><text x="100.00" y="638.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.35%)</title><rect x="102" y="372" width="4" height="15" fill="rgb(242,107,22)"/><text x="105.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="102" y="388" width="4" height="15" fill="rgb(228,68,48)"/><text x="105.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="102" y="404" width="4" height="15" fill="rgb(241,197,42)"/><text x="105.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="102" y="420" width="4" height="15" fill="rgb(212,67,30)"/><text x="105.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="102" y="436" width="4" height="15" fill="rgb(207,226,5)"/><text x="105.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="102" y="452" width="4" height="15" fill="rgb(224,70,38)"/><text x="105.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="102" y="468" width="4" height="15" fill="rgb(214,80,32)"/><text x="105.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="102" y="484" width="4" height="15" fill="rgb(246,43,31)"/><text x="105.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.35%)</title><rect x="102" y="500" width="4" height="15" fill="rgb(232,107,43)"/><text x="105.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.35%)</title><rect x="102" y="516" width="4" height="15" fill="rgb(214,168,40)"/><text x="105.00" y="526.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.35%)</title><rect x="102" y="532" width="4" height="15" fill="rgb(233,44,49)"/><text x="105.00" y="542.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.35%)</title><rect x="102" y="548" width="4" height="15" fill="rgb(226,204,35)"/><text x="105.00" y="558.50"></text></g><g><title>getargs (numpy/compat/_inspect.py) (1 samples, 0.35%)</title><rect x="102" y="564" width="4" height="15" fill="rgb(253,75,38)"/><text x="105.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (25 samples, 8.87%)</title><rect x="10" y="68" width="104" height="15" fill="rgb(229,113,44)"/><text x="13.00" y="78.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 8.87%)</title><rect x="10" y="84" width="104" height="15" fill="rgb(223,97,7)"/><text x="13.00" y="94.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 8.87%)</title><rect x="10" y="100" width="104" height="15" fill="rgb(218,96,30)"/><text x="13.00" y="110.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (25 samples, 8.87%)</title><rect x="10" y="116" width="104" height="15" fill="rgb(248,93,24)"/><text x="13.00" y="126.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (25 samples, 8.87%)</title><rect x="10" y="132" width="104" height="15" fill="rgb(247,223,34)"/><text x="13.00" y="142.50">_call_with_f..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py) (25 samples, 8.87%)</title><rect x="10" y="148" width="104" height="15" fill="rgb(217,142,46)"/><text x="13.00" y="158.50">&lt;module&gt; (pr..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (25 samples, 8.87%)</title><rect x="10" y="164" width="104" height="15" fill="rgb(226,113,17)"/><text x="13.00" y="174.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (25 samples, 8.87%)</title><rect x="10" y="180" width="104" height="15" fill="rgb(251,157,14)"/><text x="13.00" y="190.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.32%)</title><rect x="51" y="196" width="63" height="15" fill="rgb(208,68,32)"/><text x="54.00" y="206.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 5.32%)</title><rect x="51" y="212" width="63" height="15" fill="rgb(253,162,10)"/><text x="54.00" y="222.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 5.32%)</title><rect x="51" y="228" width="63" height="15" fill="rgb(212,185,53)"/><text x="54.00" y="238.50">_call_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (4 samples, 1.42%)</title><rect x="97" y="244" width="17" height="15" fill="rgb(241,19,15)"/><text x="100.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="102" y="260" width="12" height="15" fill="rgb(230,165,29)"/><text x="105.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="102" y="276" width="12" height="15" fill="rgb(208,18,21)"/><text x="105.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="102" y="292" width="12" height="15" fill="rgb(234,178,51)"/><text x="105.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="102" y="308" width="12" height="15" fill="rgb(219,113,3)"/><text x="105.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="102" y="324" width="12" height="15" fill="rgb(213,153,15)"/><text x="105.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.06%)</title><rect x="102" y="340" width="12" height="15" fill="rgb(241,213,26)"/><text x="105.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.06%)</title><rect x="102" y="356" width="12" height="15" fill="rgb(213,9,51)"/><text x="105.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.71%)</title><rect x="106" y="372" width="8" height="15" fill="rgb(242,105,29)"/><text x="109.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="388" width="8" height="15" fill="rgb(250,128,39)"/><text x="109.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="404" width="8" height="15" fill="rgb(252,211,3)"/><text x="109.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="420" width="8" height="15" fill="rgb(226,182,36)"/><text x="109.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="106" y="436" width="8" height="15" fill="rgb(205,188,9)"/><text x="109.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="452" width="8" height="15" fill="rgb(226,7,13)"/><text x="109.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (2 samples, 0.71%)</title><rect x="106" y="468" width="8" height="15" fill="rgb(234,139,10)"/><text x="109.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="484" width="8" height="15" fill="rgb(208,44,10)"/><text x="109.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="500" width="8" height="15" fill="rgb(237,122,28)"/><text x="109.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="516" width="8" height="15" fill="rgb(226,133,52)"/><text x="109.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="106" y="532" width="8" height="15" fill="rgb(211,214,19)"/><text x="109.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="548" width="8" height="15" fill="rgb(206,99,7)"/><text x="109.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (2 samples, 0.71%)</title><rect x="106" y="564" width="8" height="15" fill="rgb(243,154,47)"/><text x="109.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="580" width="8" height="15" fill="rgb(223,115,7)"/><text x="109.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="596" width="8" height="15" fill="rgb(228,68,10)"/><text x="109.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="612" width="8" height="15" fill="rgb(242,140,46)"/><text x="109.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="106" y="628" width="8" height="15" fill="rgb(208,122,18)"/><text x="109.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="644" width="8" height="15" fill="rgb(238,190,24)"/><text x="109.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (2 samples, 0.71%)</title><rect x="106" y="660" width="8" height="15" fill="rgb(228,185,51)"/><text x="109.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="676" width="8" height="15" fill="rgb(221,119,4)"/><text x="109.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="692" width="8" height="15" fill="rgb(216,141,16)"/><text x="109.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="708" width="8" height="15" fill="rgb(237,52,52)"/><text x="109.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="106" y="724" width="8" height="15" fill="rgb(207,33,17)"/><text x="109.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="740" width="8" height="15" fill="rgb(219,192,54)"/><text x="109.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (2 samples, 0.71%)</title><rect x="106" y="756" width="8" height="15" fill="rgb(242,145,5)"/><text x="109.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="772" width="8" height="15" fill="rgb(229,157,48)"/><text x="109.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="788" width="8" height="15" fill="rgb(224,109,27)"/><text x="109.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="804" width="8" height="15" fill="rgb(223,174,46)"/><text x="109.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.71%)</title><rect x="106" y="820" width="8" height="15" fill="rgb(251,158,52)"/><text x="109.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.71%)</title><rect x="106" y="836" width="8" height="15" fill="rgb(208,155,7)"/><text x="109.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (2 samples, 0.71%)</title><rect x="106" y="852" width="8" height="15" fill="rgb(209,67,16)"/><text x="109.00" y="862.50"></text></g><g><title>decorator (numpy/core/overrides.py) (2 samples, 0.71%)</title><rect x="106" y="868" width="8" height="15" fill="rgb(222,120,32)"/><text x="109.00" y="878.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.35%)</title><rect x="110" y="884" width="4" height="15" fill="rgb(248,33,48)"/><text x="113.00" y="894.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="110" y="900" width="4" height="15" fill="rgb(213,81,32)"/><text x="113.00" y="910.50"></text></g><g><title>0x7f644e4e3151 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="110" y="916" width="4" height="15" fill="rgb(226,122,33)"/><text x="113.00" y="926.50"></text></g><g><title>0x7f640e448ff9 (?) (1 samples, 0.35%)</title><rect x="139" y="212" width="4" height="15" fill="rgb(215,213,13)"/><text x="142.00" y="222.50"></text></g><g><title>0x7f640e443ef6 (?) (1 samples, 0.35%)</title><rect x="139" y="228" width="4" height="15" fill="rgb(238,93,17)"/><text x="142.00" y="238.50"></text></g><g><title>0x7f640e438962 (?) (1 samples, 0.35%)</title><rect x="139" y="244" width="4" height="15" fill="rgb(254,190,32)"/><text x="142.00" y="254.50"></text></g><g><title>0x7f640e46c7a7 (?) (1 samples, 0.35%)</title><rect x="139" y="260" width="4" height="15" fill="rgb(252,63,6)"/><text x="142.00" y="270.50"></text></g><g><title>0x7f640e46c379 (?) (1 samples, 0.35%)</title><rect x="139" y="276" width="4" height="15" fill="rgb(254,229,29)"/><text x="142.00" y="286.50"></text></g><g><title>0x7f640e8ca8b8 (?) (1 samples, 0.35%)</title><rect x="139" y="292" width="4" height="15" fill="rgb(247,145,47)"/><text x="142.00" y="302.50"></text></g><g><title>0x7f640e8c8c7f (?) (1 samples, 0.35%)</title><rect x="139" y="308" width="4" height="15" fill="rgb(219,160,44)"/><text x="142.00" y="318.50"></text></g><g><title>0x7f640e8db99c (?) (1 samples, 0.35%)</title><rect x="139" y="324" width="4" height="15" fill="rgb(208,172,45)"/><text x="142.00" y="334.50"></text></g><g><title>0x7f640e52455e (?) (1 samples, 0.35%)</title><rect x="139" y="340" width="4" height="15" fill="rgb(222,174,25)"/><text x="142.00" y="350.50"></text></g><g><title>0x7f640e5229d4 (?) (1 samples, 0.35%)</title><rect x="139" y="356" width="4" height="15" fill="rgb(226,135,6)"/><text x="142.00" y="366.50"></text></g><g><title>0x7f640e4486ee (?) (1 samples, 0.35%)</title><rect x="139" y="372" width="4" height="15" fill="rgb(226,155,10)"/><text x="142.00" y="382.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="143" y="292" width="5" height="15" fill="rgb(232,19,32)"/><text x="146.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="143" y="308" width="5" height="15" fill="rgb(244,209,35)"/><text x="146.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="143" y="324" width="5" height="15" fill="rgb(242,71,54)"/><text x="146.00" y="334.50"></text></g><g><title>0x7f644e40700a (libc-2.29.so) (1 samples, 0.35%)</title><rect x="143" y="340" width="5" height="15" fill="rgb(246,96,9)"/><text x="146.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="148" y="292" width="4" height="15" fill="rgb(253,22,30)"/><text x="151.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="148" y="308" width="4" height="15" fill="rgb(237,124,10)"/><text x="151.00" y="318.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="160" y="372" width="4" height="15" fill="rgb(227,45,5)"/><text x="163.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="160" y="388" width="4" height="15" fill="rgb(208,47,40)"/><text x="163.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="160" y="404" width="4" height="15" fill="rgb(238,33,23)"/><text x="163.00" y="414.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="160" y="340" width="9" height="15" fill="rgb(251,119,30)"/><text x="163.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="160" y="356" width="9" height="15" fill="rgb(223,146,48)"/><text x="163.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="164" y="372" width="5" height="15" fill="rgb(217,2,50)"/><text x="167.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="164" y="388" width="5" height="15" fill="rgb(226,158,35)"/><text x="167.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="164" y="404" width="5" height="15" fill="rgb(235,146,50)"/><text x="167.00" y="414.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="340" width="4" height="15" fill="rgb(238,114,11)"/><text x="172.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="356" width="4" height="15" fill="rgb(252,92,51)"/><text x="172.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="372" width="4" height="15" fill="rgb(230,75,6)"/><text x="172.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="388" width="4" height="15" fill="rgb(222,141,2)"/><text x="172.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="404" width="4" height="15" fill="rgb(250,213,33)"/><text x="172.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="420" width="4" height="15" fill="rgb(205,126,31)"/><text x="172.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="436" width="4" height="15" fill="rgb(244,48,0)"/><text x="172.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="452" width="4" height="15" fill="rgb(218,226,23)"/><text x="172.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="468" width="4" height="15" fill="rgb(219,33,53)"/><text x="172.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="169" y="484" width="4" height="15" fill="rgb(246,206,47)"/><text x="172.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="173" y="356" width="4" height="15" fill="rgb(207,107,3)"/><text x="176.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="173" y="372" width="4" height="15" fill="rgb(230,204,49)"/><text x="176.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="173" y="388" width="4" height="15" fill="rgb(212,51,18)"/><text x="176.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="173" y="340" width="8" height="15" fill="rgb(245,101,16)"/><text x="176.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="177" y="356" width="4" height="15" fill="rgb(248,229,4)"/><text x="180.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="177" y="372" width="4" height="15" fill="rgb(254,190,1)"/><text x="180.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="177" y="388" width="4" height="15" fill="rgb(238,58,46)"/><text x="180.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="177" y="404" width="4" height="15" fill="rgb(249,29,26)"/><text x="180.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="177" y="420" width="4" height="15" fill="rgb(227,66,18)"/><text x="180.00" y="430.50"></text></g><g><title>0x7f644e406e61 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="177" y="436" width="4" height="15" fill="rgb(249,55,21)"/><text x="180.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="340" width="4" height="15" fill="rgb(248,170,35)"/><text x="184.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="356" width="4" height="15" fill="rgb(246,116,22)"/><text x="184.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="372" width="4" height="15" fill="rgb(251,52,45)"/><text x="184.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="388" width="4" height="15" fill="rgb(232,25,18)"/><text x="184.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="404" width="4" height="15" fill="rgb(239,119,11)"/><text x="184.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="420" width="4" height="15" fill="rgb(246,89,25)"/><text x="184.00" y="430.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="181" y="436" width="4" height="15" fill="rgb(234,172,17)"/><text x="184.00" y="446.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="181" y="452" width="4" height="15" fill="rgb(225,122,33)"/><text x="184.00" y="462.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="340" width="4" height="15" fill="rgb(233,166,16)"/><text x="188.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="356" width="4" height="15" fill="rgb(250,130,29)"/><text x="188.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="372" width="4" height="15" fill="rgb(223,118,23)"/><text x="188.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="388" width="4" height="15" fill="rgb(211,15,43)"/><text x="188.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="185" y="404" width="4" height="15" fill="rgb(249,162,5)"/><text x="188.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="185" y="420" width="4" height="15" fill="rgb(215,94,13)"/><text x="188.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="185" y="436" width="4" height="15" fill="rgb(236,165,9)"/><text x="188.00" y="446.50"></text></g><g><title>mkl_blas_errchk_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.35%)</title><rect x="189" y="404" width="5" height="15" fill="rgb(206,23,41)"/><text x="192.00" y="414.50"></text></g><g><title>mkl_serv_lsame (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.35%)</title><rect x="189" y="420" width="5" height="15" fill="rgb(239,0,2)"/><text x="192.00" y="430.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="189" y="340" width="9" height="15" fill="rgb(224,173,47)"/><text x="192.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="189" y="356" width="9" height="15" fill="rgb(218,10,52)"/><text x="192.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.71%)</title><rect x="189" y="372" width="9" height="15" fill="rgb(235,113,34)"/><text x="192.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.71%)</title><rect x="189" y="388" width="9" height="15" fill="rgb(218,201,43)"/><text x="192.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.35%)</title><rect x="194" y="404" width="4" height="15" fill="rgb(243,14,21)"/><text x="197.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.35%)</title><rect x="194" y="420" width="4" height="15" fill="rgb(220,156,37)"/><text x="197.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.35%)</title><rect x="194" y="436" width="4" height="15" fill="rgb(235,142,54)"/><text x="197.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.35%)</title><rect x="194" y="452" width="4" height="15" fill="rgb(225,63,2)"/><text x="197.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="198" y="340" width="4" height="15" fill="rgb(252,55,2)"/><text x="201.00" y="350.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="202" y="340" width="4" height="15" fill="rgb(242,8,27)"/><text x="205.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="202" y="356" width="4" height="15" fill="rgb(229,185,26)"/><text x="205.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="202" y="372" width="4" height="15" fill="rgb(236,32,30)"/><text x="205.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="206" y="372" width="4" height="15" fill="rgb(218,149,34)"/><text x="209.00" y="382.50"></text></g><g><title>0x7f644e40591c (libc-2.29.so) (1 samples, 0.35%)</title><rect x="206" y="388" width="4" height="15" fill="rgb(219,87,8)"/><text x="209.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.03%)</title><rect x="143" y="260" width="72" height="15" fill="rgb(206,202,53)"/><text x="146.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 6.03%)</title><rect x="143" y="276" width="72" height="15" fill="rgb(234,97,52)"/><text x="146.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.32%)</title><rect x="152" y="292" width="63" height="15" fill="rgb(239,9,19)"/><text x="155.00" y="302.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.32%)</title><rect x="152" y="308" width="63" height="15" fill="rgb(216,124,31)"/><text x="155.00" y="318.50">onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.32%)</title><rect x="152" y="324" width="63" height="15" fill="rgb(228,150,50)"/><text x="155.00" y="334.50">onnxru..</text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="206" y="340" width="9" height="15" fill="rgb(225,199,20)"/><text x="209.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="206" y="356" width="9" height="15" fill="rgb(235,174,8)"/><text x="209.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="210" y="372" width="5" height="15" fill="rgb(218,171,34)"/><text x="213.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="210" y="388" width="5" height="15" fill="rgb(242,35,28)"/><text x="213.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="210" y="404" width="5" height="15" fill="rgb(225,114,42)"/><text x="213.00" y="414.50"></text></g><g><title>0x7f644e407372 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="210" y="420" width="5" height="15" fill="rgb(248,44,37)"/><text x="213.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="215" y="260" width="4" height="15" fill="rgb(227,140,32)"/><text x="218.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="215" y="276" width="4" height="15" fill="rgb(236,104,17)"/><text x="218.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 6.74%)</title><rect x="143" y="244" width="80" height="15" fill="rgb(227,16,49)"/><text x="146.00" y="254.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="219" y="260" width="4" height="15" fill="rgb(229,51,29)"/><text x="222.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="219" y="276" width="4" height="15" fill="rgb(209,178,15)"/><text x="222.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="219" y="292" width="4" height="15" fill="rgb(249,16,16)"/><text x="222.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.35%)</title><rect x="219" y="308" width="4" height="15" fill="rgb(244,133,2)"/><text x="222.00" y="318.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (27 samples, 9.57%)</title><rect x="114" y="68" width="113" height="15" fill="rgb(238,26,43)"/><text x="117.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (27 samples, 9.57%)</title><rect x="114" y="84" width="113" height="15" fill="rgb(214,33,35)"/><text x="117.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (27 samples, 9.57%)</title><rect x="114" y="100" width="113" height="15" fill="rgb(208,93,25)"/><text x="117.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (27 samples, 9.57%)</title><rect x="114" y="116" width="113" height="15" fill="rgb(249,216,53)"/><text x="117.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 8.87%)</title><rect x="122" y="132" width="105" height="15" fill="rgb(244,105,21)"/><text x="125.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (25 samples, 8.87%)</title><rect x="122" y="148" width="105" height="15" fill="rgb(242,73,2)"/><text x="125.00" y="158.50">run (mlprodi..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (24 samples, 8.51%)</title><rect x="127" y="164" width="100" height="15" fill="rgb(238,88,12)"/><text x="130.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (23 samples, 8.16%)</title><rect x="131" y="180" width="96" height="15" fill="rgb(221,98,33)"/><text x="134.00" y="190.50">run (mlprod..</text></g><g><title>run (onnxruntime/capi/session.py) (23 samples, 8.16%)</title><rect x="131" y="196" width="96" height="15" fill="rgb(205,114,41)"/><text x="134.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.09%)</title><rect x="143" y="212" width="84" height="15" fill="rgb(248,209,4)"/><text x="146.00" y="222.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 7.09%)</title><rect x="143" y="228" width="84" height="15" fill="rgb(247,150,19)"/><text x="146.00" y="238.50">void pybi..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="223" y="244" width="4" height="15" fill="rgb(237,91,13)"/><text x="226.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (5 samples, 1.77%)</title><rect x="420" y="196" width="20" height="15" fill="rgb(213,17,43)"/><text x="423.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.35%)</title><rect x="457" y="228" width="4" height="15" fill="rgb(228,98,1)"/><text x="460.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.35%)</title><rect x="457" y="244" width="4" height="15" fill="rgb(246,208,28)"/><text x="460.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="457" y="260" width="4" height="15" fill="rgb(246,47,19)"/><text x="460.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="461" y="260" width="5" height="15" fill="rgb(207,59,47)"/><text x="464.00" y="270.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.35%)</title><rect x="461" y="276" width="5" height="15" fill="rgb(249,139,2)"/><text x="464.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.71%)</title><rect x="461" y="244" width="9" height="15" fill="rgb(227,130,40)"/><text x="464.00" y="254.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.35%)</title><rect x="466" y="260" width="4" height="15" fill="rgb(207,164,50)"/><text x="469.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (4 samples, 1.42%)</title><rect x="457" y="212" width="17" height="15" fill="rgb(217,95,52)"/><text x="460.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 1.06%)</title><rect x="461" y="228" width="13" height="15" fill="rgb(226,196,29)"/><text x="464.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.35%)</title><rect x="470" y="244" width="4" height="15" fill="rgb(250,179,13)"/><text x="473.00" y="254.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="478" y="292" width="4" height="15" fill="rgb(221,52,33)"/><text x="481.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="478" y="308" width="4" height="15" fill="rgb(228,102,40)"/><text x="481.00" y="318.50"></text></g><g><title>0x7f644e3bd8b8 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="478" y="324" width="4" height="15" fill="rgb(235,229,1)"/><text x="481.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="482" y="292" width="5" height="15" fill="rgb(208,227,50)"/><text x="485.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="487" y="292" width="4" height="15" fill="rgb(214,229,53)"/><text x="490.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.77%)</title><rect x="474" y="212" width="21" height="15" fill="rgb(211,202,47)"/><text x="477.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.77%)</title><rect x="474" y="228" width="21" height="15" fill="rgb(239,132,31)"/><text x="477.00" y="238.50"></text></g><g><title>array_astype (methods.c) (5 samples, 1.77%)</title><rect x="474" y="244" width="21" height="15" fill="rgb(211,127,33)"/><text x="477.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 1.42%)</title><rect x="478" y="260" width="17" height="15" fill="rgb(226,10,2)"/><text x="481.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 1.42%)</title><rect x="478" y="276" width="17" height="15" fill="rgb(215,219,14)"/><text x="481.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="491" y="292" width="4" height="15" fill="rgb(238,127,18)"/><text x="494.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (2 samples, 0.71%)</title><rect x="495" y="212" width="8" height="15" fill="rgb(216,182,54)"/><text x="498.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.71%)</title><rect x="495" y="228" width="8" height="15" fill="rgb(208,102,26)"/><text x="498.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.35%)</title><rect x="499" y="244" width="4" height="15" fill="rgb(232,50,27)"/><text x="502.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.35%)</title><rect x="499" y="260" width="4" height="15" fill="rgb(233,121,46)"/><text x="502.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.35%)</title><rect x="499" y="276" width="4" height="15" fill="rgb(250,23,32)"/><text x="502.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.35%)</title><rect x="499" y="292" width="4" height="15" fill="rgb(238,127,23)"/><text x="502.00" y="302.50"></text></g><g><title>long_index (scalartypes.c.src) (1 samples, 0.35%)</title><rect x="499" y="308" width="4" height="15" fill="rgb(245,53,22)"/><text x="502.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.35%)</title><rect x="507" y="276" width="5" height="15" fill="rgb(237,208,35)"/><text x="510.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="512" y="276" width="4" height="15" fill="rgb(250,95,53)"/><text x="515.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.35%)</title><rect x="512" y="292" width="4" height="15" fill="rgb(239,93,30)"/><text x="515.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.35%)</title><rect x="512" y="308" width="4" height="15" fill="rgb(219,3,20)"/><text x="515.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.35%)</title><rect x="512" y="324" width="4" height="15" fill="rgb(211,107,29)"/><text x="515.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.35%)</title><rect x="512" y="340" width="4" height="15" fill="rgb(218,114,45)"/><text x="515.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (4 samples, 1.42%)</title><rect x="503" y="212" width="17" height="15" fill="rgb(207,133,31)"/><text x="506.00" y="222.50"></text></g><g><title>array_add (number.c) (3 samples, 1.06%)</title><rect x="507" y="228" width="13" height="15" fill="rgb(227,55,11)"/><text x="510.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.06%)</title><rect x="507" y="244" width="13" height="15" fill="rgb(223,73,40)"/><text x="510.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.06%)</title><rect x="507" y="260" width="13" height="15" fill="rgb(252,187,5)"/><text x="510.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.35%)</title><rect x="516" y="276" width="4" height="15" fill="rgb(250,13,33)"/><text x="519.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.35%)</title><rect x="516" y="292" width="4" height="15" fill="rgb(229,212,28)"/><text x="519.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="516" y="308" width="4" height="15" fill="rgb(247,88,41)"/><text x="519.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="516" y="324" width="4" height="15" fill="rgb(245,142,31)"/><text x="519.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="516" y="340" width="4" height="15" fill="rgb(234,30,20)"/><text x="519.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.71%)</title><rect x="520" y="212" width="8" height="15" fill="rgb(253,169,20)"/><text x="523.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.71%)</title><rect x="520" y="228" width="8" height="15" fill="rgb(244,112,18)"/><text x="523.00" y="238.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.35%)</title><rect x="528" y="212" width="5" height="15" fill="rgb(222,195,52)"/><text x="531.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.35%)</title><rect x="533" y="212" width="4" height="15" fill="rgb(247,152,50)"/><text x="536.00" y="222.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.35%)</title><rect x="549" y="324" width="4" height="15" fill="rgb(228,40,8)"/><text x="552.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.35%)</title><rect x="549" y="340" width="4" height="15" fill="rgb(238,68,44)"/><text x="552.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.71%)</title><rect x="549" y="292" width="9" height="15" fill="rgb(231,74,27)"/><text x="552.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.71%)</title><rect x="549" y="308" width="9" height="15" fill="rgb(228,8,9)"/><text x="552.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.35%)</title><rect x="553" y="324" width="5" height="15" fill="rgb(238,38,14)"/><text x="556.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.35%)</title><rect x="553" y="340" width="5" height="15" fill="rgb(206,215,1)"/><text x="556.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.35%)</title><rect x="553" y="356" width="5" height="15" fill="rgb(239,183,0)"/><text x="556.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.06%)</title><rect x="549" y="276" width="13" height="15" fill="rgb(230,146,13)"/><text x="552.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="558" y="292" width="4" height="15" fill="rgb(251,130,0)"/><text x="561.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (6 samples, 2.13%)</title><rect x="541" y="228" width="25" height="15" fill="rgb(209,170,39)"/><text x="544.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.77%)</title><rect x="545" y="244" width="21" height="15" fill="rgb(248,218,1)"/><text x="548.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.42%)</title><rect x="549" y="260" width="17" height="15" fill="rgb(215,222,14)"/><text x="552.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.35%)</title><rect x="562" y="276" width="4" height="15" fill="rgb(219,48,5)"/><text x="565.00" y="286.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.35%)</title><rect x="570" y="292" width="4" height="15" fill="rgb(243,3,5)"/><text x="573.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 1.06%)</title><rect x="579" y="356" width="12" height="15" fill="rgb(236,216,51)"/><text x="582.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.71%)</title><rect x="583" y="372" width="8" height="15" fill="rgb(246,197,33)"/><text x="586.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.71%)</title><rect x="583" y="388" width="8" height="15" fill="rgb(236,214,43)"/><text x="586.00" y="398.50"></text></g><g><title>0x7f644e425dbb (libc-2.29.so) (1 samples, 0.35%)</title><rect x="587" y="404" width="4" height="15" fill="rgb(211,205,45)"/><text x="590.00" y="414.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (6 samples, 2.13%)</title><rect x="570" y="276" width="25" height="15" fill="rgb(212,31,39)"/><text x="573.00" y="286.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.77%)</title><rect x="574" y="292" width="21" height="15" fill="rgb(238,83,2)"/><text x="577.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.77%)</title><rect x="574" y="308" width="21" height="15" fill="rgb(220,91,4)"/><text x="577.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.77%)</title><rect x="574" y="324" width="21" height="15" fill="rgb(251,82,17)"/><text x="577.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 1.77%)</title><rect x="574" y="340" width="21" height="15" fill="rgb(252,100,29)"/><text x="577.00" y="350.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.35%)</title><rect x="591" y="356" width="4" height="15" fill="rgb(235,226,37)"/><text x="594.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="595" y="324" width="5" height="15" fill="rgb(213,31,53)"/><text x="598.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="595" y="340" width="5" height="15" fill="rgb(208,191,48)"/><text x="598.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.71%)</title><rect x="595" y="292" width="9" height="15" fill="rgb(222,167,51)"/><text x="598.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.71%)</title><rect x="595" y="308" width="9" height="15" fill="rgb(243,221,49)"/><text x="598.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="600" y="324" width="4" height="15" fill="rgb(217,134,35)"/><text x="603.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="600" y="340" width="4" height="15" fill="rgb(254,135,15)"/><text x="603.00" y="350.50"></text></g><g><title>0x7f644e3bda19 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="600" y="356" width="4" height="15" fill="rgb(237,69,9)"/><text x="603.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.35%)</title><rect x="600" y="372" width="4" height="15" fill="rgb(249,47,4)"/><text x="603.00" y="382.50"></text></g><g><title>array_astype (methods.c) (3 samples, 1.06%)</title><rect x="595" y="276" width="13" height="15" fill="rgb(205,53,50)"/><text x="598.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.35%)</title><rect x="604" y="292" width="4" height="15" fill="rgb(207,182,19)"/><text x="607.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="604" y="308" width="4" height="15" fill="rgb(238,146,14)"/><text x="607.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.35%)</title><rect x="604" y="324" width="4" height="15" fill="rgb(234,181,12)"/><text x="607.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="604" y="340" width="4" height="15" fill="rgb(235,143,0)"/><text x="607.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.35%)</title><rect x="604" y="356" width="4" height="15" fill="rgb(220,114,27)"/><text x="607.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="604" y="372" width="4" height="15" fill="rgb(205,214,51)"/><text x="607.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.35%)</title><rect x="604" y="388" width="4" height="15" fill="rgb(251,122,45)"/><text x="607.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (11 samples, 3.90%)</title><rect x="566" y="228" width="46" height="15" fill="rgb(213,147,52)"/><text x="569.00" y="238.50">_run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (11 samples, 3.90%)</title><rect x="566" y="244" width="46" height="15" fill="rgb(253,190,32)"/><text x="569.00" y="254.50">_run..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (11 samples, 3.90%)</title><rect x="566" y="260" width="46" height="15" fill="rgb(233,68,54)"/><text x="569.00" y="270.50">_arg..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.35%)</title><rect x="608" y="276" width="4" height="15" fill="rgb(232,26,0)"/><text x="611.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.35%)</title><rect x="608" y="292" width="4" height="15" fill="rgb(240,29,10)"/><text x="611.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.35%)</title><rect x="608" y="308" width="4" height="15" fill="rgb(219,124,26)"/><text x="611.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.35%)</title><rect x="608" y="324" width="4" height="15" fill="rgb(208,8,16)"/><text x="611.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.35%)</title><rect x="608" y="340" width="4" height="15" fill="rgb(214,29,43)"/><text x="611.00" y="350.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.35%)</title><rect x="608" y="356" width="4" height="15" fill="rgb(223,162,5)"/><text x="611.00" y="366.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="625" y="276" width="4" height="15" fill="rgb(211,221,4)"/><text x="628.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.35%)</title><rect x="629" y="276" width="4" height="15" fill="rgb(220,212,17)"/><text x="632.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="633" y="276" width="4" height="15" fill="rgb(249,188,23)"/><text x="636.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.35%)</title><rect x="633" y="292" width="4" height="15" fill="rgb(240,115,30)"/><text x="636.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="633" y="308" width="4" height="15" fill="rgb(224,61,1)"/><text x="636.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.35%)</title><rect x="633" y="324" width="4" height="15" fill="rgb(208,17,28)"/><text x="636.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.35%)</title><rect x="633" y="340" width="4" height="15" fill="rgb(221,53,50)"/><text x="636.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.35%)</title><rect x="633" y="356" width="4" height="15" fill="rgb(210,221,40)"/><text x="636.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.35%)</title><rect x="633" y="372" width="4" height="15" fill="rgb(231,206,43)"/><text x="636.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (7 samples, 2.48%)</title><rect x="612" y="228" width="29" height="15" fill="rgb(215,185,22)"/><text x="615.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.42%)</title><rect x="625" y="244" width="16" height="15" fill="rgb(226,203,6)"/><text x="628.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.42%)</title><rect x="625" y="260" width="16" height="15" fill="rgb(241,85,7)"/><text x="628.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.35%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(250,152,9)"/><text x="640.00" y="286.50"></text></g><g><title>arrayflags_getitem (flagsobject.c) (1 samples, 0.35%)</title><rect x="646" y="260" width="4" height="15" fill="rgb(209,157,9)"/><text x="649.00" y="270.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (1 samples, 0.35%)</title><rect x="658" y="340" width="4" height="15" fill="rgb(212,22,34)"/><text x="661.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (1 samples, 0.35%)</title><rect x="658" y="356" width="4" height="15" fill="rgb(223,182,3)"/><text x="661.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.35%)</title><rect x="658" y="372" width="4" height="15" fill="rgb(209,21,43)"/><text x="661.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.35%)</title><rect x="658" y="388" width="4" height="15" fill="rgb(229,135,10)"/><text x="661.00" y="398.50"></text></g><g><title>0x7f644e4261ef (libc-2.29.so) (1 samples, 0.35%)</title><rect x="658" y="404" width="4" height="15" fill="rgb(253,58,8)"/><text x="661.00" y="414.50"></text></g><g><title>gemv (cblasfuncs.c) (2 samples, 0.71%)</title><rect x="662" y="340" width="9" height="15" fill="rgb(248,152,54)"/><text x="665.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="666" y="356" width="5" height="15" fill="rgb(225,28,45)"/><text x="669.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.35%)</title><rect x="666" y="372" width="5" height="15" fill="rgb(218,5,46)"/><text x="669.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (8 samples, 2.84%)</title><rect x="641" y="228" width="34" height="15" fill="rgb(239,179,20)"/><text x="644.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (8 samples, 2.84%)</title><rect x="641" y="244" width="34" height="15" fill="rgb(215,143,45)"/><text x="644.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (6 samples, 2.13%)</title><rect x="650" y="260" width="25" height="15" fill="rgb(220,227,43)"/><text x="653.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.77%)</title><rect x="654" y="276" width="21" height="15" fill="rgb(220,156,39)"/><text x="657.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.77%)</title><rect x="654" y="292" width="21" height="15" fill="rgb(207,100,21)"/><text x="657.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.77%)</title><rect x="654" y="308" width="21" height="15" fill="rgb(209,102,40)"/><text x="657.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 1.77%)</title><rect x="654" y="324" width="21" height="15" fill="rgb(244,54,26)"/><text x="657.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.35%)</title><rect x="671" y="340" width="4" height="15" fill="rgb(206,74,19)"/><text x="674.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="671" y="356" width="4" height="15" fill="rgb(222,184,21)"/><text x="674.00" y="366.50"></text></g><g><title>strides_to_terms (mem_overlap.c) (1 samples, 0.35%)</title><rect x="671" y="372" width="4" height="15" fill="rgb(230,152,6)"/><text x="674.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="683" y="324" width="4" height="15" fill="rgb(215,21,27)"/><text x="686.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="683" y="340" width="4" height="15" fill="rgb(229,227,38)"/><text x="686.00" y="350.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (5 samples, 1.77%)</title><rect x="675" y="244" width="21" height="15" fill="rgb(215,111,52)"/><text x="678.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.77%)</title><rect x="675" y="260" width="21" height="15" fill="rgb(209,130,18)"/><text x="678.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (5 samples, 1.77%)</title><rect x="675" y="276" width="21" height="15" fill="rgb(223,80,3)"/><text x="678.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 1.77%)</title><rect x="675" y="292" width="21" height="15" fill="rgb(243,128,31)"/><text x="678.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.06%)</title><rect x="683" y="308" width="13" height="15" fill="rgb(222,28,53)"/><text x="686.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.71%)</title><rect x="687" y="324" width="9" height="15" fill="rgb(205,212,22)"/><text x="690.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.71%)</title><rect x="687" y="340" width="9" height="15" fill="rgb(209,154,8)"/><text x="690.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.71%)</title><rect x="687" y="356" width="9" height="15" fill="rgb(207,91,48)"/><text x="690.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="692" y="372" width="4" height="15" fill="rgb(251,1,31)"/><text x="695.00" y="382.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.35%)</title><rect x="692" y="388" width="4" height="15" fill="rgb(224,218,32)"/><text x="695.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (8 samples, 2.84%)</title><rect x="675" y="228" width="33" height="15" fill="rgb(228,102,17)"/><text x="678.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.06%)</title><rect x="696" y="244" width="12" height="15" fill="rgb(223,200,19)"/><text x="699.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.06%)</title><rect x="696" y="260" width="12" height="15" fill="rgb(235,172,18)"/><text x="699.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.71%)</title><rect x="700" y="276" width="8" height="15" fill="rgb(226,110,15)"/><text x="703.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.71%)</title><rect x="700" y="292" width="8" height="15" fill="rgb(225,136,25)"/><text x="703.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.71%)</title><rect x="700" y="308" width="8" height="15" fill="rgb(229,120,7)"/><text x="703.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="704" y="324" width="4" height="15" fill="rgb(222,195,1)"/><text x="707.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.35%)</title><rect x="704" y="340" width="4" height="15" fill="rgb(254,29,17)"/><text x="707.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="704" y="356" width="4" height="15" fill="rgb(246,111,18)"/><text x="707.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.42%)</title><rect x="733" y="356" width="17" height="15" fill="rgb(222,2,44)"/><text x="736.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 1.06%)</title><rect x="738" y="372" width="12" height="15" fill="rgb(238,91,36)"/><text x="741.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.71%)</title><rect x="742" y="388" width="8" height="15" fill="rgb(208,81,23)"/><text x="745.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="746" y="404" width="4" height="15" fill="rgb(206,131,10)"/><text x="749.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="746" y="420" width="4" height="15" fill="rgb(239,139,10)"/><text x="749.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (11 samples, 3.90%)</title><rect x="708" y="228" width="46" height="15" fill="rgb(240,195,51)"/><text x="711.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (9 samples, 3.19%)</title><rect x="717" y="244" width="37" height="15" fill="rgb(246,159,0)"/><text x="720.00" y="254.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.84%)</title><rect x="721" y="260" width="33" height="15" fill="rgb(252,215,8)"/><text x="724.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py) (8 samples, 2.84%)</title><rect x="721" y="276" width="33" height="15" fill="rgb(249,148,3)"/><text x="724.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (6 samples, 2.13%)</title><rect x="729" y="292" width="25" height="15" fill="rgb(240,103,38)"/><text x="732.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 1.77%)</title><rect x="733" y="308" width="21" height="15" fill="rgb(224,140,31)"/><text x="736.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.77%)</title><rect x="733" y="324" width="21" height="15" fill="rgb(232,129,24)"/><text x="736.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.77%)</title><rect x="733" y="340" width="21" height="15" fill="rgb(251,80,36)"/><text x="736.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.35%)</title><rect x="750" y="356" width="4" height="15" fill="rgb(225,224,19)"/><text x="753.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="750" y="372" width="4" height="15" fill="rgb(219,24,30)"/><text x="753.00" y="382.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (125 samples, 44.33%)</title><rect x="235" y="164" width="524" height="15" fill="rgb(221,212,20)"/><text x="238.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (115 samples, 40.78%)</title><rect x="277" y="180" width="482" height="15" fill="rgb(236,35,52)"/><text x="280.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (76 samples, 26.95%)</title><rect x="440" y="196" width="319" height="15" fill="rgb(235,59,30)"/><text x="443.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (53 samples, 18.79%)</title><rect x="537" y="212" width="222" height="15" fill="rgb(242,88,45)"/><text x="540.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>array_descr_get (getset.c) (1 samples, 0.35%)</title><rect x="754" y="228" width="5" height="15" fill="rgb(238,89,5)"/><text x="757.00" y="238.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (128 samples, 45.39%)</title><rect x="227" y="100" width="536" height="15" fill="rgb(213,60,24)"/><text x="230.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (128 samples, 45.39%)</title><rect x="227" y="116" width="536" height="15" fill="rgb(223,152,1)"/><text x="230.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (128 samples, 45.39%)</title><rect x="227" y="132" width="536" height="15" fill="rgb(217,100,43)"/><text x="230.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (127 samples, 45.04%)</title><rect x="231" y="148" width="532" height="15" fill="rgb(215,99,24)"/><text x="234.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="759" y="164" width="4" height="15" fill="rgb(232,159,38)"/><text x="762.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="759" y="180" width="4" height="15" fill="rgb(222,37,25)"/><text x="762.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="759" y="196" width="4" height="15" fill="rgb(244,96,8)"/><text x="762.00" y="206.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (129 samples, 45.74%)</title><rect x="227" y="68" width="540" height="15" fill="rgb(220,189,22)"/><text x="230.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (129 samples, 45.74%)</title><rect x="227" y="84" width="540" height="15" fill="rgb(218,141,43)"/><text x="230.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="763" y="100" width="4" height="15" fill="rgb(252,65,3)"/><text x="766.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="763" y="116" width="4" height="15" fill="rgb(236,124,10)"/><text x="766.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="763" y="132" width="4" height="15" fill="rgb(240,141,1)"/><text x="766.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="763" y="148" width="4" height="15" fill="rgb(247,227,44)"/><text x="766.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.35%)</title><rect x="763" y="164" width="4" height="15" fill="rgb(251,137,37)"/><text x="766.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.35%)</title><rect x="763" y="180" width="4" height="15" fill="rgb(214,23,21)"/><text x="766.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.35%)</title><rect x="763" y="196" width="4" height="15" fill="rgb(254,93,51)"/><text x="766.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="212" width="4" height="15" fill="rgb(231,50,30)"/><text x="766.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="228" width="4" height="15" fill="rgb(210,12,52)"/><text x="766.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="244" width="4" height="15" fill="rgb(229,57,50)"/><text x="766.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="763" y="260" width="4" height="15" fill="rgb(249,158,32)"/><text x="766.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="276" width="4" height="15" fill="rgb(238,147,4)"/><text x="766.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.35%)</title><rect x="763" y="292" width="4" height="15" fill="rgb(205,215,31)"/><text x="766.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="308" width="4" height="15" fill="rgb(226,121,29)"/><text x="766.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="324" width="4" height="15" fill="rgb(212,58,44)"/><text x="766.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="340" width="4" height="15" fill="rgb(209,12,32)"/><text x="766.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="763" y="356" width="4" height="15" fill="rgb(217,134,33)"/><text x="766.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="372" width="4" height="15" fill="rgb(232,176,46)"/><text x="766.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.35%)</title><rect x="763" y="388" width="4" height="15" fill="rgb(225,64,12)"/><text x="766.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="404" width="4" height="15" fill="rgb(209,202,17)"/><text x="766.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="420" width="4" height="15" fill="rgb(209,197,33)"/><text x="766.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="436" width="4" height="15" fill="rgb(251,213,52)"/><text x="766.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="763" y="452" width="4" height="15" fill="rgb(229,24,29)"/><text x="766.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="468" width="4" height="15" fill="rgb(250,109,2)"/><text x="766.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (1 samples, 0.35%)</title><rect x="763" y="484" width="4" height="15" fill="rgb(221,52,9)"/><text x="766.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="500" width="4" height="15" fill="rgb(226,131,18)"/><text x="766.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="516" width="4" height="15" fill="rgb(231,164,53)"/><text x="766.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="532" width="4" height="15" fill="rgb(251,167,17)"/><text x="766.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="548" width="4" height="15" fill="rgb(248,222,28)"/><text x="766.00" y="558.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.35%)</title><rect x="763" y="564" width="4" height="15" fill="rgb(227,156,51)"/><text x="766.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="763" y="580" width="4" height="15" fill="rgb(238,35,19)"/><text x="766.00" y="590.50"></text></g><g><title>0x7f640ee8fe83 (?) (1 samples, 0.35%)</title><rect x="763" y="596" width="4" height="15" fill="rgb(254,2,51)"/><text x="766.00" y="606.50"></text></g><g><title>0x7f640ee8f614 (?) (1 samples, 0.35%)</title><rect x="763" y="612" width="4" height="15" fill="rgb(220,78,2)"/><text x="766.00" y="622.50"></text></g><g><title>0x7f640eea2461 (?) (1 samples, 0.35%)</title><rect x="763" y="628" width="4" height="15" fill="rgb(223,108,22)"/><text x="766.00" y="638.50"></text></g><g><title>0x7f640ee9f2ed (?) (1 samples, 0.35%)</title><rect x="763" y="644" width="4" height="15" fill="rgb(254,99,47)"/><text x="766.00" y="654.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.35%)</title><rect x="763" y="660" width="4" height="15" fill="rgb(239,136,23)"/><text x="766.00" y="670.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.35%)</title><rect x="796" y="228" width="4" height="15" fill="rgb(211,11,45)"/><text x="799.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.35%)</title><rect x="800" y="228" width="5" height="15" fill="rgb(236,73,53)"/><text x="803.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.71%)</title><rect x="805" y="228" width="8" height="15" fill="rgb(242,63,33)"/><text x="808.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.35%)</title><rect x="813" y="228" width="4" height="15" fill="rgb(228,29,31)"/><text x="816.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (10 samples, 3.55%)</title><rect x="779" y="196" width="42" height="15" fill="rgb(219,106,50)"/><text x="782.00" y="206.50">_ch..</text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 3.55%)</title><rect x="779" y="212" width="42" height="15" fill="rgb(225,52,28)"/><text x="782.00" y="222.50">che..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.35%)</title><rect x="817" y="228" width="4" height="15" fill="rgb(252,191,46)"/><text x="820.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.35%)</title><rect x="817" y="244" width="4" height="15" fill="rgb(224,105,41)"/><text x="820.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (3 samples, 1.06%)</title><rect x="825" y="228" width="13" height="15" fill="rgb(228,174,36)"/><text x="828.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (3 samples, 1.06%)</title><rect x="825" y="244" width="13" height="15" fill="rgb(247,6,24)"/><text x="828.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.06%)</title><rect x="825" y="260" width="13" height="15" fill="rgb(213,102,49)"/><text x="828.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.35%)</title><rect x="834" y="276" width="4" height="15" fill="rgb(211,126,22)"/><text x="837.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.35%)</title><rect x="834" y="292" width="4" height="15" fill="rgb(252,126,49)"/><text x="837.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.35%)</title><rect x="834" y="308" width="4" height="15" fill="rgb(253,70,2)"/><text x="837.00" y="318.50"></text></g><g><title>array_assign_subscript (mapping.c) (5 samples, 1.77%)</title><rect x="825" y="212" width="21" height="15" fill="rgb(236,65,45)"/><text x="828.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.71%)</title><rect x="838" y="228" width="8" height="15" fill="rgb(242,149,4)"/><text x="841.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="842" y="244" width="4" height="15" fill="rgb(248,89,13)"/><text x="845.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="846" y="260" width="5" height="15" fill="rgb(238,86,24)"/><text x="849.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.35%)</title><rect x="846" y="276" width="5" height="15" fill="rgb(248,8,22)"/><text x="849.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.35%)</title><rect x="846" y="292" width="5" height="15" fill="rgb(234,93,17)"/><text x="849.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.35%)</title><rect x="846" y="308" width="5" height="15" fill="rgb(222,80,21)"/><text x="849.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c) (3 samples, 1.06%)</title><rect x="846" y="212" width="13" height="15" fill="rgb(215,65,47)"/><text x="849.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.06%)</title><rect x="846" y="228" width="13" height="15" fill="rgb(232,184,17)"/><text x="849.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.06%)</title><rect x="846" y="244" width="13" height="15" fill="rgb(248,138,45)"/><text x="849.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.71%)</title><rect x="851" y="260" width="8" height="15" fill="rgb(224,123,32)"/><text x="854.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.35%)</title><rect x="855" y="276" width="4" height="15" fill="rgb(249,52,1)"/><text x="858.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.35%)</title><rect x="855" y="292" width="4" height="15" fill="rgb(234,125,29)"/><text x="858.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="855" y="308" width="4" height="15" fill="rgb(233,27,4)"/><text x="858.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="855" y="324" width="4" height="15" fill="rgb(205,48,12)"/><text x="858.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.35%)</title><rect x="863" y="228" width="4" height="15" fill="rgb(217,16,8)"/><text x="866.00" y="238.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.35%)</title><rect x="867" y="228" width="4" height="15" fill="rgb(219,210,12)"/><text x="870.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.35%)</title><rect x="871" y="228" width="5" height="15" fill="rgb(230,170,54)"/><text x="874.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="876" y="228" width="4" height="15" fill="rgb(231,113,7)"/><text x="879.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c) (1 samples, 0.35%)</title><rect x="876" y="244" width="4" height="15" fill="rgb(217,80,9)"/><text x="879.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.35%)</title><rect x="876" y="260" width="4" height="15" fill="rgb(219,65,21)"/><text x="879.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.35%)</title><rect x="876" y="276" width="4" height="15" fill="rgb(240,104,35)"/><text x="879.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="876" y="292" width="4" height="15" fill="rgb(206,2,52)"/><text x="879.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="876" y="308" width="4" height="15" fill="rgb(235,48,7)"/><text x="879.00" y="318.50"></text></g><g><title>0x7f644e425d50 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="876" y="324" width="4" height="15" fill="rgb(232,175,7)"/><text x="879.00" y="334.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.71%)</title><rect x="880" y="228" width="8" height="15" fill="rgb(218,11,16)"/><text x="883.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.35%)</title><rect x="884" y="244" width="4" height="15" fill="rgb(254,36,44)"/><text x="887.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.71%)</title><rect x="888" y="228" width="9" height="15" fill="rgb(240,151,53)"/><text x="891.00" y="238.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;) (1 samples, 0.35%)</title><rect x="897" y="228" width="4" height="15" fill="rgb(248,180,6)"/><text x="900.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.35%)</title><rect x="897" y="244" width="4" height="15" fill="rgb(205,172,52)"/><text x="900.00" y="254.50"></text></g><g><title>array_may_share_memory (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="897" y="260" width="4" height="15" fill="rgb(216,22,54)"/><text x="900.00" y="270.50"></text></g><g><title>array_shares_memory_impl (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="897" y="276" width="4" height="15" fill="rgb(237,94,30)"/><text x="900.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.35%)</title><rect x="897" y="292" width="4" height="15" fill="rgb(242,96,28)"/><text x="900.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (13 samples, 4.61%)</title><rect x="859" y="212" width="54" height="15" fill="rgb(253,136,17)"/><text x="862.00" y="222.50">check..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.06%)</title><rect x="901" y="228" width="12" height="15" fill="rgb(216,84,18)"/><text x="904.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.35%)</title><rect x="909" y="244" width="4" height="15" fill="rgb(247,169,23)"/><text x="912.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="913" y="260" width="5" height="15" fill="rgb(217,140,38)"/><text x="916.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="913" y="276" width="5" height="15" fill="rgb(237,8,28)"/><text x="916.00" y="286.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (34 samples, 12.06%)</title><rect x="779" y="180" width="143" height="15" fill="rgb(234,84,16)"/><text x="782.00" y="190.50">_check_X (sklearn/..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (24 samples, 8.51%)</title><rect x="821" y="196" width="101" height="15" fill="rgb(217,102,50)"/><text x="824.00" y="206.50">binarize (sk..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.71%)</title><rect x="913" y="212" width="9" height="15" fill="rgb(230,65,16)"/><text x="916.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.71%)</title><rect x="913" y="228" width="9" height="15" fill="rgb(240,17,39)"/><text x="916.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.71%)</title><rect x="913" y="244" width="9" height="15" fill="rgb(220,73,5)"/><text x="916.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="918" y="260" width="4" height="15" fill="rgb(232,88,52)"/><text x="921.00" y="270.50"></text></g><g><title>BOOL_logical_not (loops.c.src) (1 samples, 0.35%)</title><rect x="918" y="276" width="4" height="15" fill="rgb(208,30,33)"/><text x="921.00" y="286.50"></text></g><g><title>array_sum (methods.c) (2 samples, 0.71%)</title><rect x="934" y="196" width="9" height="15" fill="rgb(220,104,33)"/><text x="937.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (2 samples, 0.71%)</title><rect x="934" y="212" width="9" height="15" fill="rgb(233,219,40)"/><text x="937.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (2 samples, 0.71%)</title><rect x="934" y="228" width="9" height="15" fill="rgb(221,86,29)"/><text x="937.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.35%)</title><rect x="938" y="244" width="5" height="15" fill="rgb(250,84,33)"/><text x="941.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.35%)</title><rect x="938" y="260" width="5" height="15" fill="rgb(232,164,21)"/><text x="941.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.35%)</title><rect x="938" y="276" width="5" height="15" fill="rgb(241,130,17)"/><text x="941.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.35%)</title><rect x="938" y="292" width="5" height="15" fill="rgb(232,24,48)"/><text x="941.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.35%)</title><rect x="951" y="260" width="4" height="15" fill="rgb(246,197,22)"/><text x="954.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (4 samples, 1.42%)</title><rect x="943" y="196" width="16" height="15" fill="rgb(248,20,3)"/><text x="946.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 1.06%)</title><rect x="947" y="212" width="12" height="15" fill="rgb(236,169,21)"/><text x="950.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.06%)</title><rect x="947" y="228" width="12" height="15" fill="rgb(226,220,37)"/><text x="950.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (3 samples, 1.06%)</title><rect x="947" y="244" width="12" height="15" fill="rgb(223,124,34)"/><text x="950.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="955" y="260" width="4" height="15" fill="rgb(208,197,27)"/><text x="958.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.35%)</title><rect x="955" y="276" width="4" height="15" fill="rgb(236,150,16)"/><text x="958.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.35%)</title><rect x="955" y="292" width="4" height="15" fill="rgb(238,21,12)"/><text x="958.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="955" y="308" width="4" height="15" fill="rgb(229,124,54)"/><text x="958.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="955" y="324" width="4" height="15" fill="rgb(252,112,26)"/><text x="958.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.35%)</title><rect x="955" y="340" width="4" height="15" fill="rgb(213,164,34)"/><text x="958.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.35%)</title><rect x="955" y="356" width="4" height="15" fill="rgb(250,146,21)"/><text x="958.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.35%)</title><rect x="964" y="244" width="4" height="15" fill="rgb(213,95,8)"/><text x="967.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="964" y="260" width="4" height="15" fill="rgb(220,180,5)"/><text x="967.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="964" y="276" width="4" height="15" fill="rgb(219,28,4)"/><text x="967.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.06%)</title><rect x="964" y="228" width="12" height="15" fill="rgb(217,71,52)"/><text x="967.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.71%)</title><rect x="968" y="244" width="8" height="15" fill="rgb(252,10,17)"/><text x="971.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.71%)</title><rect x="968" y="260" width="8" height="15" fill="rgb(227,102,15)"/><text x="971.00" y="270.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (15 samples, 5.32%)</title><rect x="922" y="180" width="62" height="15" fill="rgb(254,100,17)"/><text x="925.00" y="190.50">_joint..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 2.13%)</title><rect x="959" y="196" width="25" height="15" fill="rgb(216,167,0)"/><text x="962.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.13%)</title><rect x="959" y="212" width="25" height="15" fill="rgb(239,22,21)"/><text x="962.00" y="222.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.71%)</title><rect x="976" y="228" width="8" height="15" fill="rgb(210,110,53)"/><text x="979.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.71%)</title><rect x="976" y="244" width="8" height="15" fill="rgb(217,97,28)"/><text x="979.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.35%)</title><rect x="980" y="260" width="4" height="15" fill="rgb(208,82,7)"/><text x="983.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.35%)</title><rect x="980" y="276" width="4" height="15" fill="rgb(221,134,39)"/><text x="983.00" y="286.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.35%)</title><rect x="980" y="292" width="4" height="15" fill="rgb(244,195,27)"/><text x="983.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.35%)</title><rect x="980" y="308" width="4" height="15" fill="rgb(234,146,46)"/><text x="983.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.71%)</title><rect x="984" y="180" width="9" height="15" fill="rgb(209,208,41)"/><text x="987.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.71%)</title><rect x="984" y="196" width="9" height="15" fill="rgb(239,90,43)"/><text x="987.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.71%)</title><rect x="984" y="212" width="9" height="15" fill="rgb(213,193,14)"/><text x="987.00" y="222.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (3 samples, 1.06%)</title><rect x="993" y="180" width="12" height="15" fill="rgb(224,140,35)"/><text x="996.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.06%)</title><rect x="993" y="196" width="12" height="15" fill="rgb(217,72,27)"/><text x="996.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (3 samples, 1.06%)</title><rect x="993" y="212" width="12" height="15" fill="rgb(233,99,2)"/><text x="996.00" y="222.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.35%)</title><rect x="1001" y="228" width="4" height="15" fill="rgb(224,38,14)"/><text x="1004.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 1.42%)</title><rect x="1005" y="180" width="17" height="15" fill="rgb(220,73,0)"/><text x="1008.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 1.06%)</title><rect x="1010" y="196" width="12" height="15" fill="rgb(240,19,49)"/><text x="1013.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.35%)</title><rect x="1018" y="212" width="4" height="15" fill="rgb(246,26,47)"/><text x="1021.00" y="222.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (4 samples, 1.42%)</title><rect x="1043" y="196" width="17" height="15" fill="rgb(252,220,15)"/><text x="1046.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 1.06%)</title><rect x="1047" y="212" width="13" height="15" fill="rgb(240,17,15)"/><text x="1050.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.35%)</title><rect x="1056" y="228" width="4" height="15" fill="rgb(236,202,43)"/><text x="1059.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.71%)</title><rect x="1060" y="196" width="8" height="15" fill="rgb(223,141,52)"/><text x="1063.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.71%)</title><rect x="1060" y="212" width="8" height="15" fill="rgb(239,30,7)"/><text x="1063.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.35%)</title><rect x="1064" y="228" width="4" height="15" fill="rgb(207,176,20)"/><text x="1067.00" y="238.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py) (1 samples, 0.35%)</title><rect x="1068" y="196" width="4" height="15" fill="rgb(205,166,27)"/><text x="1071.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.35%)</title><rect x="1068" y="212" width="4" height="15" fill="rgb(223,65,42)"/><text x="1071.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.35%)</title><rect x="1085" y="276" width="4" height="15" fill="rgb(241,13,16)"/><text x="1088.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.35%)</title><rect x="1085" y="292" width="4" height="15" fill="rgb(215,143,1)"/><text x="1088.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.35%)</title><rect x="1085" y="308" width="4" height="15" fill="rgb(225,23,28)"/><text x="1088.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.35%)</title><rect x="1097" y="324" width="5" height="15" fill="rgb(206,200,36)"/><text x="1100.00" y="334.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.35%)</title><rect x="1097" y="340" width="5" height="15" fill="rgb(226,211,31)"/><text x="1100.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.35%)</title><rect x="1097" y="356" width="5" height="15" fill="rgb(226,192,5)"/><text x="1100.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.35%)</title><rect x="1102" y="324" width="4" height="15" fill="rgb(243,75,53)"/><text x="1105.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.35%)</title><rect x="1102" y="340" width="4" height="15" fill="rgb(232,19,26)"/><text x="1105.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.35%)</title><rect x="1102" y="356" width="4" height="15" fill="rgb(214,101,4)"/><text x="1105.00" y="366.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (9 samples, 3.19%)</title><rect x="1072" y="196" width="38" height="15" fill="rgb(233,225,26)"/><text x="1075.00" y="206.50">ama..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 3.19%)</title><rect x="1072" y="212" width="38" height="15" fill="rgb(216,121,39)"/><text x="1075.00" y="222.50">arr..</text></g><g><title>amax (numpy/core/fromnumeric.py) (9 samples, 3.19%)</title><rect x="1072" y="228" width="38" height="15" fill="rgb(249,133,20)"/><text x="1075.00" y="238.50">ama..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (9 samples, 3.19%)</title><rect x="1072" y="244" width="38" height="15" fill="rgb(213,5,33)"/><text x="1075.00" y="254.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 2.48%)</title><rect x="1081" y="260" width="29" height="15" fill="rgb(208,38,1)"/><text x="1084.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.77%)</title><rect x="1089" y="276" width="21" height="15" fill="rgb(229,87,22)"/><text x="1092.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.77%)</title><rect x="1089" y="292" width="21" height="15" fill="rgb(236,115,42)"/><text x="1092.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.77%)</title><rect x="1089" y="308" width="21" height="15" fill="rgb(244,195,9)"/><text x="1092.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1106" y="324" width="4" height="15" fill="rgb(233,170,16)"/><text x="1109.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1106" y="340" width="4" height="15" fill="rgb(206,43,32)"/><text x="1109.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.35%)</title><rect x="1110" y="196" width="4" height="15" fill="rgb(225,71,12)"/><text x="1113.00" y="206.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.35%)</title><rect x="1110" y="212" width="4" height="15" fill="rgb(205,181,31)"/><text x="1113.00" y="222.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.35%)</title><rect x="1110" y="228" width="4" height="15" fill="rgb(236,207,18)"/><text x="1113.00" y="238.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.35%)</title><rect x="1110" y="244" width="4" height="15" fill="rgb(254,78,39)"/><text x="1113.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1110" y="260" width="4" height="15" fill="rgb(246,197,2)"/><text x="1113.00" y="270.50"></text></g><g><title>0x7f644e3bd762 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1110" y="276" width="4" height="15" fill="rgb(221,68,38)"/><text x="1113.00" y="286.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.35%)</title><rect x="1114" y="196" width="4" height="15" fill="rgb(253,124,54)"/><text x="1117.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1114" y="212" width="4" height="15" fill="rgb(211,144,20)"/><text x="1117.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1114" y="228" width="4" height="15" fill="rgb(212,108,19)"/><text x="1117.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.35%)</title><rect x="1114" y="244" width="4" height="15" fill="rgb(247,192,37)"/><text x="1117.00" y="254.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;) (3 samples, 1.06%)</title><rect x="1118" y="196" width="13" height="15" fill="rgb(241,72,49)"/><text x="1121.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.71%)</title><rect x="1123" y="212" width="8" height="15" fill="rgb(217,152,37)"/><text x="1126.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py) (2 samples, 0.71%)</title><rect x="1123" y="228" width="8" height="15" fill="rgb(242,219,46)"/><text x="1126.00" y="238.50"></text></g><g><title>array_squeeze (methods.c) (2 samples, 0.71%)</title><rect x="1123" y="244" width="8" height="15" fill="rgb(247,25,42)"/><text x="1126.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.35%)</title><rect x="1127" y="260" width="4" height="15" fill="rgb(243,114,44)"/><text x="1130.00" y="270.50"></text></g><g><title>0x7f644e4e3151 (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1139" y="244" width="4" height="15" fill="rgb(245,23,33)"/><text x="1142.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.35%)</title><rect x="1143" y="260" width="5" height="15" fill="rgb(234,35,35)"/><text x="1146.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.35%)</title><rect x="1148" y="292" width="4" height="15" fill="rgb(242,174,36)"/><text x="1151.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.35%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(214,129,13)"/><text x="1159.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.71%)</title><rect x="1156" y="308" width="8" height="15" fill="rgb(236,228,45)"/><text x="1159.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1160" y="324" width="4" height="15" fill="rgb(213,62,10)"/><text x="1163.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.35%)</title><rect x="1160" y="340" width="4" height="15" fill="rgb(225,153,28)"/><text x="1163.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.35%)</title><rect x="1160" y="356" width="4" height="15" fill="rgb(214,19,5)"/><text x="1163.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (9 samples, 3.19%)</title><rect x="1131" y="196" width="38" height="15" fill="rgb(227,18,18)"/><text x="1134.00" y="206.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 3.19%)</title><rect x="1131" y="212" width="38" height="15" fill="rgb(223,114,54)"/><text x="1134.00" y="222.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py) (9 samples, 3.19%)</title><rect x="1131" y="228" width="38" height="15" fill="rgb(247,53,49)"/><text x="1134.00" y="238.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (6 samples, 2.13%)</title><rect x="1143" y="244" width="26" height="15" fill="rgb(237,38,13)"/><text x="1146.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 1.77%)</title><rect x="1148" y="260" width="21" height="15" fill="rgb(215,196,8)"/><text x="1151.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.77%)</title><rect x="1148" y="276" width="21" height="15" fill="rgb(216,55,42)"/><text x="1151.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 1.42%)</title><rect x="1152" y="292" width="17" height="15" fill="rgb(217,85,16)"/><text x="1155.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1164" y="308" width="5" height="15" fill="rgb(211,46,31)"/><text x="1167.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.35%)</title><rect x="1173" y="228" width="4" height="15" fill="rgb(242,74,1)"/><text x="1176.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.35%)</title><rect x="1177" y="244" width="4" height="15" fill="rgb(248,207,30)"/><text x="1180.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1177" y="260" width="4" height="15" fill="rgb(240,49,17)"/><text x="1180.00" y="270.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.35%)</title><rect x="1177" y="276" width="4" height="15" fill="rgb(234,82,13)"/><text x="1180.00" y="286.50"></text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (100 samples, 35.46%)</title><rect x="767" y="68" width="418" height="15" fill="rgb(231,67,0)"/><text x="770.00" y="78.50">profile_skl (bench_BernoulliNB_default_m_cl_1_4_12_float_..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (100 samples, 35.46%)</title><rect x="767" y="84" width="418" height="15" fill="rgb(254,129,16)"/><text x="770.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_4_12_floa..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (100 samples, 35.46%)</title><rect x="767" y="100" width="418" height="15" fill="rgb(251,152,25)"/><text x="770.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (100 samples, 35.46%)</title><rect x="767" y="116" width="418" height="15" fill="rgb(239,222,40)"/><text x="770.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (99 samples, 35.11%)</title><rect x="771" y="132" width="414" height="15" fill="rgb(211,63,12)"/><text x="774.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (99 samples, 35.11%)</title><rect x="771" y="148" width="414" height="15" fill="rgb(238,185,47)"/><text x="774.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (99 samples, 35.11%)</title><rect x="771" y="164" width="414" height="15" fill="rgb(247,206,34)"/><text x="774.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (39 samples, 13.83%)</title><rect x="1022" y="180" width="163" height="15" fill="rgb(208,199,0)"/><text x="1025.00" y="190.50">logsumexp (scipy/spec..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.42%)</title><rect x="1169" y="196" width="16" height="15" fill="rgb(215,34,0)"/><text x="1172.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.42%)</title><rect x="1169" y="212" width="16" height="15" fill="rgb(208,62,39)"/><text x="1172.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.71%)</title><rect x="1177" y="228" width="8" height="15" fill="rgb(211,45,49)"/><text x="1180.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.35%)</title><rect x="1181" y="244" width="4" height="15" fill="rgb(212,74,36)"/><text x="1184.00" y="254.50"></text></g><g><title>all (282 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(242,109,23)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (282 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(235,64,43)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_4_12_float_.py)</text></g><g><title>start (bench_BernoulliNB_default_m_cl_1_4_12_float_.py) (1 samples, 0.35%)</title><rect x="1185" y="68" width="5" height="15" fill="rgb(215,109,29)"/><text x="1188.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py) (1 samples, 0.35%)</title><rect x="1185" y="84" width="5" height="15" fill="rgb(206,225,52)"/><text x="1188.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.35%)</title><rect x="1185" y="100" width="5" height="15" fill="rgb(245,69,10)"/><text x="1188.00" y="110.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.35%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(223,110,16)"/><text x="1188.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.35%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(236,156,13)"/><text x="1188.00" y="142.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.35%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(215,221,2)"/><text x="1188.00" y="158.50"></text></g></g></svg>