<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2214" onload="init(evt)" viewBox="0 0 1200 2214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2214" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2197.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2197.00"> </text><g id="frames"><g><title>0x7f4a57fc9b1c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="10" y="52" width="2" height="15" fill="rgb(206,101,6)"/><text x="13.00" y="62.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.17%)</title><rect x="12" y="100" width="2" height="15" fill="rgb(237,102,41)"/><text x="15.00" y="110.50"></text></g><g><title>0x7f4a4d02d390 (?) (1 samples, 0.17%)</title><rect x="12" y="116" width="2" height="15" fill="rgb(230,201,48)"/><text x="15.00" y="126.50"></text></g><g><title>0x7f4a4d022336 (?) (1 samples, 0.17%)</title><rect x="12" y="132" width="2" height="15" fill="rgb(227,159,51)"/><text x="15.00" y="142.50"></text></g><g><title>0x7f4a4d0235b1 (?) (1 samples, 0.17%)</title><rect x="12" y="148" width="2" height="15" fill="rgb(236,97,29)"/><text x="15.00" y="158.50"></text></g><g><title>__setstate__ (sklearn/base.py:320) (1 samples, 0.17%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(253,207,44)"/><text x="15.00" y="174.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:169) (1 samples, 0.17%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(214,21,41)"/><text x="17.00" y="222.50"></text></g><g><title>0x7f4a319fc2fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(234,70,31)"/><text x="17.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(225,189,21)"/><text x="17.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(241,151,53)"/><text x="17.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.17%)</title><rect x="14" y="276" width="2" height="15" fill="rgb(239,100,49)"/><text x="17.00" y="286.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.52%)</title><rect x="12" y="84" width="6" height="15" fill="rgb(224,44,4)"/><text x="15.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.35%)</title><rect x="14" y="100" width="4" height="15" fill="rgb(221,170,22)"/><text x="17.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.35%)</title><rect x="14" y="116" width="4" height="15" fill="rgb(242,83,11)"/><text x="17.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.35%)</title><rect x="14" y="132" width="4" height="15" fill="rgb(229,184,41)"/><text x="17.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.35%)</title><rect x="14" y="148" width="4" height="15" fill="rgb(253,166,25)"/><text x="17.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.35%)</title><rect x="14" y="164" width="4" height="15" fill="rgb(232,103,2)"/><text x="17.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.35%)</title><rect x="14" y="180" width="4" height="15" fill="rgb(206,175,52)"/><text x="17.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (2 samples, 0.35%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(242,124,6)"/><text x="17.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.17%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(236,31,38)"/><text x="19.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.17%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(242,191,44)"/><text x="19.00" y="238.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.17%)</title><rect x="18" y="148" width="2" height="15" fill="rgb(236,170,52)"/><text x="21.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:182) (1 samples, 0.17%)</title><rect x="18" y="164" width="2" height="15" fill="rgb(214,204,25)"/><text x="21.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.17%)</title><rect x="18" y="180" width="2" height="15" fill="rgb(231,162,27)"/><text x="21.00" y="190.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.17%)</title><rect x="18" y="196" width="2" height="15" fill="rgb(212,58,54)"/><text x="21.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:663) (1 samples, 0.17%)</title><rect x="20" y="148" width="2" height="15" fill="rgb(222,60,33)"/><text x="23.00" y="158.50"></text></g><g><title>atleast_1d (&lt;__array_function__ internals&gt;:6) (1 samples, 0.17%)</title><rect x="20" y="164" width="2" height="15" fill="rgb(212,127,24)"/><text x="23.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.17%)</title><rect x="20" y="180" width="2" height="15" fill="rgb(233,47,13)"/><text x="23.00" y="190.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:66) (1 samples, 0.17%)</title><rect x="20" y="196" width="2" height="15" fill="rgb(223,136,43)"/><text x="23.00" y="206.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.17%)</title><rect x="20" y="212" width="2" height="15" fill="rgb(210,214,24)"/><text x="23.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.17%)</title><rect x="20" y="228" width="2" height="15" fill="rgb(218,12,4)"/><text x="23.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.17%)</title><rect x="22" y="180" width="2" height="15" fill="rgb(217,79,13)"/><text x="25.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.35%)</title><rect x="22" y="164" width="4" height="15" fill="rgb(239,142,1)"/><text x="25.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.17%)</title><rect x="24" y="180" width="2" height="15" fill="rgb(234,38,42)"/><text x="27.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.17%)</title><rect x="24" y="196" width="2" height="15" fill="rgb(230,22,40)"/><text x="27.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.17%)</title><rect x="24" y="212" width="2" height="15" fill="rgb(240,120,46)"/><text x="27.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.17%)</title><rect x="24" y="228" width="2" height="15" fill="rgb(211,148,26)"/><text x="27.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="24" y="244" width="2" height="15" fill="rgb(254,26,52)"/><text x="27.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="24" y="260" width="2" height="15" fill="rgb(254,198,49)"/><text x="27.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.17%)</title><rect x="24" y="276" width="2" height="15" fill="rgb(237,104,49)"/><text x="27.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (1 samples, 0.17%)</title><rect x="24" y="292" width="2" height="15" fill="rgb(244,155,23)"/><text x="27.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.17%)</title><rect x="24" y="308" width="2" height="15" fill="rgb(209,3,38)"/><text x="27.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.17%)</title><rect x="24" y="324" width="2" height="15" fill="rgb(221,58,38)"/><text x="27.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.17%)</title><rect x="24" y="340" width="2" height="15" fill="rgb(224,105,15)"/><text x="27.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1292) (1 samples, 0.17%)</title><rect x="24" y="356" width="2" height="15" fill="rgb(237,198,6)"/><text x="27.00" y="366.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.17%)</title><rect x="26" y="180" width="2" height="15" fill="rgb(246,180,7)"/><text x="29.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.17%)</title><rect x="28" y="196" width="2" height="15" fill="rgb(224,200,7)"/><text x="31.00" y="206.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.17%)</title><rect x="30" y="196" width="2" height="15" fill="rgb(220,1,30)"/><text x="33.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (3 samples, 0.52%)</title><rect x="28" y="180" width="6" height="15" fill="rgb(207,121,47)"/><text x="31.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.17%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(252,62,53)"/><text x="35.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (1 samples, 0.17%)</title><rect x="34" y="180" width="2" height="15" fill="rgb(244,205,10)"/><text x="37.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.17%)</title><rect x="38" y="212" width="2" height="15" fill="rgb(208,140,27)"/><text x="41.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.17%)</title><rect x="40" y="228" width="2" height="15" fill="rgb(251,34,51)"/><text x="43.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.35%)</title><rect x="42" y="228" width="4" height="15" fill="rgb(241,217,0)"/><text x="45.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (6 samples, 1.04%)</title><rect x="36" y="180" width="12" height="15" fill="rgb(211,62,6)"/><text x="39.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (6 samples, 1.04%)</title><rect x="36" y="196" width="12" height="15" fill="rgb(239,6,23)"/><text x="39.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (4 samples, 0.69%)</title><rect x="40" y="212" width="8" height="15" fill="rgb(235,8,46)"/><text x="43.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.17%)</title><rect x="46" y="228" width="2" height="15" fill="rgb(252,115,24)"/><text x="49.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.17%)</title><rect x="48" y="180" width="2" height="15" fill="rgb(223,127,44)"/><text x="51.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.17%)</title><rect x="50" y="180" width="2" height="15" fill="rgb(234,191,35)"/><text x="53.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (3 samples, 0.52%)</title><rect x="52" y="196" width="6" height="15" fill="rgb(220,16,12)"/><text x="55.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.35%)</title><rect x="54" y="212" width="4" height="15" fill="rgb(243,93,2)"/><text x="57.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.17%)</title><rect x="60" y="228" width="2" height="15" fill="rgb(212,102,46)"/><text x="63.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.52%)</title><rect x="58" y="212" width="7" height="15" fill="rgb(211,139,22)"/><text x="61.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.17%)</title><rect x="62" y="228" width="3" height="15" fill="rgb(249,165,54)"/><text x="65.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.17%)</title><rect x="65" y="212" width="2" height="15" fill="rgb(240,23,29)"/><text x="68.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (8 samples, 1.38%)</title><rect x="52" y="180" width="17" height="15" fill="rgb(205,66,4)"/><text x="55.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (5 samples, 0.86%)</title><rect x="58" y="196" width="11" height="15" fill="rgb(235,77,0)"/><text x="61.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.17%)</title><rect x="67" y="212" width="2" height="15" fill="rgb(210,198,37)"/><text x="70.00" y="222.50"></text></g><g><title>0x7f4a57fdfe7a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="67" y="228" width="2" height="15" fill="rgb(225,182,31)"/><text x="70.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.17%)</title><rect x="71" y="196" width="2" height="15" fill="rgb(208,60,1)"/><text x="74.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.52%)</title><rect x="69" y="180" width="6" height="15" fill="rgb(254,47,52)"/><text x="72.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:249) (1 samples, 0.17%)</title><rect x="73" y="196" width="2" height="15" fill="rgb(220,133,6)"/><text x="76.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.17%)</title><rect x="75" y="196" width="2" height="15" fill="rgb(217,163,7)"/><text x="78.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.17%)</title><rect x="75" y="212" width="2" height="15" fill="rgb(224,122,30)"/><text x="78.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (2 samples, 0.35%)</title><rect x="75" y="180" width="4" height="15" fill="rgb(223,89,37)"/><text x="78.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.17%)</title><rect x="77" y="196" width="2" height="15" fill="rgb(244,1,38)"/><text x="80.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.17%)</title><rect x="77" y="212" width="2" height="15" fill="rgb(252,61,47)"/><text x="80.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.17%)</title><rect x="77" y="228" width="2" height="15" fill="rgb(207,142,31)"/><text x="80.00" y="238.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.17%)</title><rect x="79" y="196" width="2" height="15" fill="rgb(215,51,46)"/><text x="82.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.17%)</title><rect x="79" y="212" width="2" height="15" fill="rgb(247,54,47)"/><text x="82.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (2 samples, 0.35%)</title><rect x="79" y="180" width="4" height="15" fill="rgb(244,55,47)"/><text x="82.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.17%)</title><rect x="81" y="196" width="2" height="15" fill="rgb(220,184,0)"/><text x="84.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.17%)</title><rect x="81" y="212" width="2" height="15" fill="rgb(247,103,3)"/><text x="84.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.17%)</title><rect x="83" y="180" width="2" height="15" fill="rgb(216,11,25)"/><text x="86.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (2 samples, 0.35%)</title><rect x="93" y="260" width="4" height="15" fill="rgb(219,158,40)"/><text x="96.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (3 samples, 0.52%)</title><rect x="97" y="260" width="6" height="15" fill="rgb(220,45,22)"/><text x="100.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (9 samples, 1.55%)</title><rect x="87" y="244" width="18" height="15" fill="rgb(220,41,17)"/><text x="90.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.17%)</title><rect x="103" y="260" width="2" height="15" fill="rgb(245,70,3)"/><text x="106.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.17%)</title><rect x="107" y="260" width="2" height="15" fill="rgb(226,225,5)"/><text x="110.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.17%)</title><rect x="111" y="324" width="2" height="15" fill="rgb(245,29,37)"/><text x="114.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.69%)</title><rect x="113" y="324" width="9" height="15" fill="rgb(226,7,8)"/><text x="116.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (7 samples, 1.21%)</title><rect x="109" y="292" width="15" height="15" fill="rgb(231,16,22)"/><text x="112.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.04%)</title><rect x="111" y="308" width="13" height="15" fill="rgb(248,163,47)"/><text x="114.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.17%)</title><rect x="122" y="324" width="2" height="15" fill="rgb(247,199,22)"/><text x="125.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="122" y="340" width="2" height="15" fill="rgb(205,18,14)"/><text x="125.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.17%)</title><rect x="124" y="292" width="2" height="15" fill="rgb(247,223,44)"/><text x="127.00" y="302.50"></text></g><g><title>0x7f4a31a0cf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="128" y="324" width="2" height="15" fill="rgb(253,63,22)"/><text x="131.00" y="334.50"></text></g><g><title>0x7f4a319fcd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="128" y="340" width="2" height="15" fill="rgb(209,41,28)"/><text x="131.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.17%)</title><rect x="128" y="356" width="2" height="15" fill="rgb(230,156,54)"/><text x="131.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.17%)</title><rect x="128" y="372" width="2" height="15" fill="rgb(237,13,48)"/><text x="131.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.17%)</title><rect x="128" y="388" width="2" height="15" fill="rgb(224,93,30)"/><text x="131.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:173) (1 samples, 0.17%)</title><rect x="128" y="404" width="2" height="15" fill="rgb(222,168,45)"/><text x="131.00" y="414.50"></text></g><g><title>PyArray_CLEARFLAGS (ndarraytypes.h:1627) (1 samples, 0.17%)</title><rect x="128" y="420" width="2" height="15" fill="rgb(214,146,19)"/><text x="131.00" y="430.50"></text></g><g><title>0x7f4a31a0cf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="130" y="324" width="2" height="15" fill="rgb(235,140,36)"/><text x="133.00" y="334.50"></text></g><g><title>0x7f4a319ffd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="132" y="372" width="2" height="15" fill="rgb(234,175,18)"/><text x="135.00" y="382.50"></text></g><g><title>0x7f4a319ff666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="132" y="388" width="2" height="15" fill="rgb(227,139,25)"/><text x="135.00" y="398.50"></text></g><g><title>0x7f4a319f52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="132" y="404" width="2" height="15" fill="rgb(205,193,15)"/><text x="135.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:763) (1 samples, 0.17%)</title><rect x="132" y="420" width="2" height="15" fill="rgb(241,193,37)"/><text x="135.00" y="430.50"></text></g><g><title>0x7f4a31a1b2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="132" y="356" width="4" height="15" fill="rgb(238,37,26)"/><text x="135.00" y="366.50"></text></g><g><title>0x7f4a319ffe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="134" y="372" width="2" height="15" fill="rgb(222,205,11)"/><text x="137.00" y="382.50"></text></g><g><title>0x7f4a319f2fd2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="134" y="388" width="2" height="15" fill="rgb(232,72,7)"/><text x="137.00" y="398.50"></text></g><g><title>0x7f4a31a1b4a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="136" y="356" width="2" height="15" fill="rgb(214,53,42)"/><text x="139.00" y="366.50"></text></g><g><title>0x7f4a31a1b4b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="138" y="356" width="2" height="15" fill="rgb(249,202,32)"/><text x="141.00" y="366.50"></text></g><g><title>0x7f4a31a1b592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="140" y="356" width="2" height="15" fill="rgb(226,9,36)"/><text x="143.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.17%)</title><rect x="140" y="372" width="2" height="15" fill="rgb(244,107,48)"/><text x="143.00" y="382.50"></text></g><g><title>0x7f4a31a1b693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="142" y="356" width="2" height="15" fill="rgb(245,152,36)"/><text x="145.00" y="366.50"></text></g><g><title>0x7f4a31a1b698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="144" y="356" width="2" height="15" fill="rgb(208,17,13)"/><text x="147.00" y="366.50"></text></g><g><title>0x7f4a31a1b6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="146" y="356" width="8" height="15" fill="rgb(246,90,28)"/><text x="149.00" y="366.50"></text></g><g><title>0x7f4a31a1b6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="154" y="356" width="2" height="15" fill="rgb(239,157,44)"/><text x="157.00" y="366.50"></text></g><g><title>0x7f4a31a1b7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="156" y="356" width="2" height="15" fill="rgb(216,58,36)"/><text x="159.00" y="366.50"></text></g><g><title>0x7f4a31a1c405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.42%)</title><rect x="132" y="340" width="28" height="15" fill="rgb(247,86,6)"/><text x="135.00" y="350.50">0..</text></g><g><title>0x7f4a31a1b92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="158" y="356" width="2" height="15" fill="rgb(207,217,7)"/><text x="161.00" y="366.50"></text></g><g><title>0x7f4a319f08a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="158" y="372" width="2" height="15" fill="rgb(210,209,22)"/><text x="161.00" y="382.50"></text></g><g><title>0x7f4a31a0cfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.59%)</title><rect x="132" y="324" width="30" height="15" fill="rgb(230,204,23)"/><text x="135.00" y="334.50">0x..</text></g><g><title>0x7f4a31a1c540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="160" y="340" width="2" height="15" fill="rgb(243,109,33)"/><text x="163.00" y="350.50"></text></g><g><title>0x7f4a319f12f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="160" y="356" width="2" height="15" fill="rgb(225,73,13)"/><text x="163.00" y="366.50"></text></g><g><title>0x7f4a319f0530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="160" y="372" width="2" height="15" fill="rgb(214,84,39)"/><text x="163.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.17%)</title><rect x="160" y="388" width="2" height="15" fill="rgb(205,30,51)"/><text x="163.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.17%)</title><rect x="162" y="340" width="2" height="15" fill="rgb(220,29,10)"/><text x="165.00" y="350.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.17%)</title><rect x="162" y="356" width="2" height="15" fill="rgb(240,174,51)"/><text x="165.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.17%)</title><rect x="164" y="372" width="2" height="15" fill="rgb(230,48,51)"/><text x="167.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.35%)</title><rect x="164" y="356" width="4" height="15" fill="rgb(206,82,41)"/><text x="167.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.17%)</title><rect x="166" y="372" width="2" height="15" fill="rgb(249,185,18)"/><text x="169.00" y="382.50"></text></g><g><title>0x7f4a31a0d05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="162" y="324" width="9" height="15" fill="rgb(229,173,5)"/><text x="165.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.52%)</title><rect x="164" y="340" width="7" height="15" fill="rgb(228,9,25)"/><text x="167.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.17%)</title><rect x="168" y="356" width="3" height="15" fill="rgb(232,6,19)"/><text x="171.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.17%)</title><rect x="168" y="372" width="3" height="15" fill="rgb(231,14,7)"/><text x="171.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.17%)</title><rect x="168" y="388" width="3" height="15" fill="rgb(242,38,4)"/><text x="171.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.17%)</title><rect x="168" y="404" width="3" height="15" fill="rgb(237,52,30)"/><text x="171.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.17%)</title><rect x="168" y="420" width="3" height="15" fill="rgb(244,203,23)"/><text x="171.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.17%)</title><rect x="168" y="436" width="3" height="15" fill="rgb(248,113,32)"/><text x="171.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="168" y="452" width="3" height="15" fill="rgb(207,106,49)"/><text x="171.00" y="462.50"></text></g><g><title>0x7f4a57fcb21f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="168" y="468" width="3" height="15" fill="rgb(236,105,2)"/><text x="171.00" y="478.50"></text></g><g><title>0x7f4a31a0d062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="171" y="324" width="2" height="15" fill="rgb(228,16,40)"/><text x="174.00" y="334.50"></text></g><g><title>0x7f4a319e7d00 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="171" y="340" width="2" height="15" fill="rgb(216,102,11)"/><text x="174.00" y="350.50"></text></g><g><title>0x7f4a31a0d18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="173" y="324" width="2" height="15" fill="rgb(235,17,23)"/><text x="176.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.17%)</title><rect x="175" y="340" width="2" height="15" fill="rgb(213,115,29)"/><text x="178.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:92) (1 samples, 0.17%)</title><rect x="175" y="356" width="2" height="15" fill="rgb(242,39,52)"/><text x="178.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (26 samples, 4.49%)</title><rect x="126" y="292" width="53" height="15" fill="rgb(249,161,18)"/><text x="129.00" y="302.50">predi..</text></g><g><title>0x7f4a31a0dd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 4.32%)</title><rect x="128" y="308" width="51" height="15" fill="rgb(240,155,38)"/><text x="131.00" y="318.50">0x7f4..</text></g><g><title>0x7f4a31a0d328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="175" y="324" width="4" height="15" fill="rgb(248,141,40)"/><text x="178.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.17%)</title><rect x="177" y="340" width="2" height="15" fill="rgb(230,112,52)"/><text x="180.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.17%)</title><rect x="177" y="356" width="2" height="15" fill="rgb(246,139,41)"/><text x="180.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.17%)</title><rect x="177" y="372" width="2" height="15" fill="rgb(222,105,15)"/><text x="180.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.17%)</title><rect x="177" y="388" width="2" height="15" fill="rgb(238,37,15)"/><text x="180.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.17%)</title><rect x="177" y="404" width="2" height="15" fill="rgb(250,53,5)"/><text x="180.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.17%)</title><rect x="177" y="420" width="2" height="15" fill="rgb(205,33,13)"/><text x="180.00" y="430.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.17%)</title><rect x="177" y="436" width="2" height="15" fill="rgb(224,154,10)"/><text x="180.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (4 samples, 0.69%)</title><rect x="179" y="292" width="8" height="15" fill="rgb(207,183,8)"/><text x="182.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.17%)</title><rect x="185" y="308" width="2" height="15" fill="rgb(225,74,11)"/><text x="188.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.17%)</title><rect x="193" y="356" width="2" height="15" fill="rgb(232,60,17)"/><text x="196.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.17%)</title><rect x="193" y="372" width="2" height="15" fill="rgb(236,186,43)"/><text x="196.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.17%)</title><rect x="193" y="388" width="2" height="15" fill="rgb(206,11,38)"/><text x="196.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.17%)</title><rect x="193" y="404" width="2" height="15" fill="rgb(207,210,2)"/><text x="196.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.17%)</title><rect x="193" y="420" width="2" height="15" fill="rgb(213,140,26)"/><text x="196.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.17%)</title><rect x="193" y="436" width="2" height="15" fill="rgb(253,221,39)"/><text x="196.00" y="446.50"></text></g><g><title>0x7f4a57fdfe93 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="193" y="452" width="2" height="15" fill="rgb(209,203,5)"/><text x="196.00" y="462.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.17%)</title><rect x="195" y="372" width="2" height="15" fill="rgb(236,148,8)"/><text x="198.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.17%)</title><rect x="195" y="388" width="2" height="15" fill="rgb(219,127,12)"/><text x="198.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.17%)</title><rect x="197" y="404" width="2" height="15" fill="rgb(252,178,28)"/><text x="200.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.17%)</title><rect x="197" y="420" width="2" height="15" fill="rgb(246,40,0)"/><text x="200.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.17%)</title><rect x="197" y="436" width="2" height="15" fill="rgb(208,27,16)"/><text x="200.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.17%)</title><rect x="197" y="452" width="2" height="15" fill="rgb(217,74,45)"/><text x="200.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.17%)</title><rect x="197" y="468" width="2" height="15" fill="rgb(235,210,38)"/><text x="200.00" y="478.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.17%)</title><rect x="197" y="484" width="2" height="15" fill="rgb(207,224,2)"/><text x="200.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.17%)</title><rect x="199" y="404" width="2" height="15" fill="rgb(206,161,28)"/><text x="202.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.17%)</title><rect x="199" y="420" width="2" height="15" fill="rgb(205,84,45)"/><text x="202.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.17%)</title><rect x="199" y="436" width="2" height="15" fill="rgb(247,34,16)"/><text x="202.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.17%)</title><rect x="199" y="452" width="2" height="15" fill="rgb(229,181,20)"/><text x="202.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.17%)</title><rect x="201" y="404" width="2" height="15" fill="rgb(240,83,19)"/><text x="204.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.17%)</title><rect x="201" y="420" width="2" height="15" fill="rgb(238,173,54)"/><text x="204.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.17%)</title><rect x="201" y="436" width="2" height="15" fill="rgb(205,108,13)"/><text x="204.00" y="446.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2599) (1 samples, 0.17%)</title><rect x="201" y="452" width="2" height="15" fill="rgb(209,126,42)"/><text x="204.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.17%)</title><rect x="203" y="404" width="2" height="15" fill="rgb(212,206,27)"/><text x="206.00" y="414.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.17%)</title><rect x="203" y="420" width="2" height="15" fill="rgb(254,140,6)"/><text x="206.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.17%)</title><rect x="205" y="420" width="2" height="15" fill="rgb(232,34,21)"/><text x="208.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.17%)</title><rect x="205" y="436" width="2" height="15" fill="rgb(211,57,39)"/><text x="208.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.17%)</title><rect x="207" y="436" width="2" height="15" fill="rgb(222,228,33)"/><text x="210.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (16 samples, 2.76%)</title><rect x="187" y="292" width="32" height="15" fill="rgb(245,185,20)"/><text x="190.00" y="302.50">pr..</text></g><g><title>array_sum (methods.c:2215) (15 samples, 2.59%)</title><rect x="189" y="308" width="30" height="15" fill="rgb(223,141,30)"/><text x="192.00" y="318.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 2.59%)</title><rect x="189" y="324" width="30" height="15" fill="rgb(210,21,8)"/><text x="192.00" y="334.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (14 samples, 2.42%)</title><rect x="191" y="340" width="28" height="15" fill="rgb(218,24,33)"/><text x="194.00" y="350.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (12 samples, 2.07%)</title><rect x="195" y="356" width="24" height="15" fill="rgb(250,5,47)"/><text x="198.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 1.90%)</title><rect x="197" y="372" width="22" height="15" fill="rgb(235,101,3)"/><text x="200.00" y="382.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 1.90%)</title><rect x="197" y="388" width="22" height="15" fill="rgb(218,157,26)"/><text x="200.00" y="398.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 1.21%)</title><rect x="205" y="404" width="14" height="15" fill="rgb(216,132,24)"/><text x="208.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.04%)</title><rect x="207" y="420" width="12" height="15" fill="rgb(208,4,33)"/><text x="210.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.86%)</title><rect x="209" y="436" width="10" height="15" fill="rgb(250,177,42)"/><text x="212.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.17%)</title><rect x="217" y="452" width="2" height="15" fill="rgb(206,164,17)"/><text x="220.00" y="462.50"></text></g><g><title>array_assign_subscript (mapping.c:1826) (1 samples, 0.17%)</title><rect x="221" y="308" width="2" height="15" fill="rgb(254,28,4)"/><text x="224.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:564) (1 samples, 0.17%)</title><rect x="221" y="324" width="2" height="15" fill="rgb(230,123,31)"/><text x="224.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.17%)</title><rect x="226" y="324" width="2" height="15" fill="rgb(205,71,53)"/><text x="229.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.17%)</title><rect x="226" y="340" width="2" height="15" fill="rgb(248,183,54)"/><text x="229.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.17%)</title><rect x="226" y="356" width="2" height="15" fill="rgb(220,80,32)"/><text x="229.00" y="366.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.17%)</title><rect x="226" y="372" width="2" height="15" fill="rgb(215,192,30)"/><text x="229.00" y="382.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.17%)</title><rect x="226" y="388" width="2" height="15" fill="rgb(233,221,50)"/><text x="229.00" y="398.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:899) (1 samples, 0.17%)</title><rect x="226" y="404" width="2" height="15" fill="rgb(218,210,21)"/><text x="229.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (5 samples, 0.86%)</title><rect x="219" y="292" width="11" height="15" fill="rgb(240,21,45)"/><text x="222.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (3 samples, 0.52%)</title><rect x="223" y="308" width="7" height="15" fill="rgb(209,60,16)"/><text x="226.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.17%)</title><rect x="228" y="324" width="2" height="15" fill="rgb(220,193,0)"/><text x="231.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.17%)</title><rect x="230" y="324" width="2" height="15" fill="rgb(240,106,13)"/><text x="233.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1967) (1 samples, 0.17%)</title><rect x="230" y="340" width="2" height="15" fill="rgb(231,194,41)"/><text x="233.00" y="350.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.17%)</title><rect x="230" y="356" width="2" height="15" fill="rgb(208,159,54)"/><text x="233.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.17%)</title><rect x="232" y="324" width="2" height="15" fill="rgb(222,223,31)"/><text x="235.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2008) (1 samples, 0.17%)</title><rect x="232" y="340" width="2" height="15" fill="rgb(224,83,35)"/><text x="235.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.17%)</title><rect x="234" y="372" width="2" height="15" fill="rgb(226,204,21)"/><text x="237.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1443) (1 samples, 0.17%)</title><rect x="234" y="388" width="2" height="15" fill="rgb(205,184,15)"/><text x="237.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.35%)</title><rect x="234" y="356" width="4" height="15" fill="rgb(223,197,6)"/><text x="237.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.17%)</title><rect x="236" y="372" width="2" height="15" fill="rgb(236,173,34)"/><text x="239.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3026) (1 samples, 0.17%)</title><rect x="236" y="388" width="2" height="15" fill="rgb(246,96,43)"/><text x="239.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.17%)</title><rect x="238" y="404" width="2" height="15" fill="rgb(228,202,33)"/><text x="241.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.17%)</title><rect x="240" y="420" width="2" height="15" fill="rgb(211,62,24)"/><text x="243.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.69%)</title><rect x="238" y="356" width="8" height="15" fill="rgb(245,204,44)"/><text x="241.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.69%)</title><rect x="238" y="372" width="8" height="15" fill="rgb(231,210,2)"/><text x="241.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.69%)</title><rect x="238" y="388" width="8" height="15" fill="rgb(218,36,41)"/><text x="241.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 0.52%)</title><rect x="240" y="404" width="6" height="15" fill="rgb(216,75,48)"/><text x="243.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.35%)</title><rect x="242" y="420" width="4" height="15" fill="rgb(212,37,38)"/><text x="245.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.07%)</title><rect x="230" y="308" width="24" height="15" fill="rgb(238,93,29)"/><text x="233.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.73%)</title><rect x="234" y="324" width="20" height="15" fill="rgb(209,113,40)"/><text x="237.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.73%)</title><rect x="234" y="340" width="20" height="15" fill="rgb(208,11,19)"/><text x="237.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.69%)</title><rect x="246" y="356" width="8" height="15" fill="rgb(215,228,40)"/><text x="249.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.69%)</title><rect x="246" y="372" width="8" height="15" fill="rgb(249,188,37)"/><text x="249.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.69%)</title><rect x="246" y="388" width="8" height="15" fill="rgb(242,146,54)"/><text x="249.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.69%)</title><rect x="246" y="404" width="8" height="15" fill="rgb(239,51,35)"/><text x="249.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.69%)</title><rect x="246" y="420" width="8" height="15" fill="rgb(242,77,32)"/><text x="249.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (72 samples, 12.44%)</title><rect x="109" y="276" width="147" height="15" fill="rgb(230,173,36)"/><text x="112.00" y="286.50">_accumulate_predic..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (13 samples, 2.25%)</title><rect x="230" y="292" width="26" height="15" fill="rgb(248,154,38)"/><text x="233.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.17%)</title><rect x="254" y="308" width="2" height="15" fill="rgb(214,50,25)"/><text x="257.00" y="318.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.17%)</title><rect x="254" y="324" width="2" height="15" fill="rgb(209,6,25)"/><text x="257.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.17%)</title><rect x="260" y="356" width="2" height="15" fill="rgb(208,120,20)"/><text x="263.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.17%)</title><rect x="260" y="372" width="2" height="15" fill="rgb(253,59,53)"/><text x="263.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.35%)</title><rect x="260" y="324" width="4" height="15" fill="rgb(230,4,21)"/><text x="263.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.35%)</title><rect x="260" y="340" width="4" height="15" fill="rgb(230,154,28)"/><text x="263.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.17%)</title><rect x="262" y="356" width="2" height="15" fill="rgb(220,11,4)"/><text x="265.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.17%)</title><rect x="262" y="372" width="2" height="15" fill="rgb(233,81,49)"/><text x="265.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:401) (1 samples, 0.17%)</title><rect x="262" y="388" width="2" height="15" fill="rgb(212,190,41)"/><text x="265.00" y="398.50"></text></g><g><title>safe_sub (npy_extint128.h:35) (1 samples, 0.17%)</title><rect x="262" y="404" width="2" height="15" fill="rgb(217,32,4)"/><text x="265.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.52%)</title><rect x="260" y="292" width="6" height="15" fill="rgb(236,169,40)"/><text x="263.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.52%)</title><rect x="260" y="308" width="6" height="15" fill="rgb(222,161,31)"/><text x="263.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.17%)</title><rect x="264" y="324" width="2" height="15" fill="rgb(254,67,21)"/><text x="267.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.17%)</title><rect x="264" y="340" width="2" height="15" fill="rgb(254,54,27)"/><text x="267.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.17%)</title><rect x="264" y="356" width="2" height="15" fill="rgb(251,180,2)"/><text x="267.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.17%)</title><rect x="264" y="372" width="2" height="15" fill="rgb(220,12,31)"/><text x="267.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.17%)</title><rect x="264" y="388" width="2" height="15" fill="rgb(245,162,22)"/><text x="267.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.17%)</title><rect x="264" y="404" width="2" height="15" fill="rgb(219,146,20)"/><text x="267.00" y="414.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (90 samples, 15.54%)</title><rect x="85" y="212" width="183" height="15" fill="rgb(214,114,15)"/><text x="88.00" y="222.50">apply_async (joblib/_pa..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (90 samples, 15.54%)</title><rect x="85" y="228" width="183" height="15" fill="rgb(231,190,42)"/><text x="88.00" y="238.50">__init__ (joblib/_paral..</text></g><g><title>__call__ (joblib/parallel.py:256) (80 samples, 13.82%)</title><rect x="105" y="244" width="163" height="15" fill="rgb(254,62,41)"/><text x="108.00" y="254.50">__call__ (joblib/para..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (78 samples, 13.47%)</title><rect x="109" y="260" width="159" height="15" fill="rgb(221,42,45)"/><text x="112.00" y="270.50">&lt;listcomp&gt; (joblib/p..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (6 samples, 1.04%)</title><rect x="256" y="276" width="12" height="15" fill="rgb(250,228,46)"/><text x="259.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.17%)</title><rect x="266" y="292" width="2" height="15" fill="rgb(229,100,9)"/><text x="269.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.17%)</title><rect x="266" y="308" width="2" height="15" fill="rgb(230,11,47)"/><text x="269.00" y="318.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (120 samples, 20.73%)</title><rect x="26" y="164" width="244" height="15" fill="rgb(222,229,33)"/><text x="29.00" y="174.50">__call__ (joblib/parallel.py:100..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (91 samples, 15.72%)</title><rect x="85" y="180" width="185" height="15" fill="rgb(210,67,17)"/><text x="88.00" y="190.50">dispatch_one_batch (jobl..</text></g><g><title>_dispatch (joblib/parallel.py:753) (91 samples, 15.72%)</title><rect x="85" y="196" width="185" height="15" fill="rgb(207,89,23)"/><text x="88.00" y="206.50">_dispatch (joblib/parall..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.17%)</title><rect x="268" y="212" width="2" height="15" fill="rgb(251,69,14)"/><text x="271.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.17%)</title><rect x="268" y="228" width="2" height="15" fill="rgb(216,156,13)"/><text x="271.00" y="238.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:18) (125 samples, 21.59%)</title><rect x="18" y="100" width="254" height="15" fill="rgb(208,156,32)"/><text x="21.00" y="110.50">profile (bench_RandomForestClassi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (125 samples, 21.59%)</title><rect x="18" y="116" width="254" height="15" fill="rgb(214,13,18)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (125 samples, 21.59%)</title><rect x="18" y="132" width="254" height="15" fill="rgb(212,192,6)"/><text x="21.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (123 samples, 21.24%)</title><rect x="22" y="148" width="250" height="15" fill="rgb(238,23,30)"/><text x="25.00" y="158.50">predict_proba (sklearn/ensemble/_..</text></g><g><title>__call__ (joblib/parallel.py:962) (1 samples, 0.17%)</title><rect x="270" y="164" width="2" height="15" fill="rgb(230,196,28)"/><text x="273.00" y="174.50"></text></g><g><title>_print (joblib/parallel.py:841) (1 samples, 0.17%)</title><rect x="270" y="180" width="2" height="15" fill="rgb(223,151,19)"/><text x="273.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:656) (1 samples, 0.17%)</title><rect x="272" y="148" width="2" height="15" fill="rgb(227,177,19)"/><text x="275.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.17%)</title><rect x="272" y="164" width="2" height="15" fill="rgb(241,224,12)"/><text x="275.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.17%)</title><rect x="272" y="180" width="2" height="15" fill="rgb(238,115,19)"/><text x="275.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.17%)</title><rect x="272" y="196" width="2" height="15" fill="rgb(234,50,34)"/><text x="275.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.17%)</title><rect x="272" y="212" width="2" height="15" fill="rgb(254,73,21)"/><text x="275.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.17%)</title><rect x="274" y="148" width="2" height="15" fill="rgb(244,92,26)"/><text x="277.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:183) (1 samples, 0.17%)</title><rect x="274" y="164" width="2" height="15" fill="rgb(225,219,5)"/><text x="277.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.17%)</title><rect x="274" y="180" width="2" height="15" fill="rgb(249,42,36)"/><text x="277.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.17%)</title><rect x="274" y="196" width="2" height="15" fill="rgb(212,16,8)"/><text x="277.00" y="206.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.17%)</title><rect x="274" y="212" width="2" height="15" fill="rgb(213,106,51)"/><text x="277.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.17%)</title><rect x="274" y="228" width="2" height="15" fill="rgb(242,223,24)"/><text x="277.00" y="238.50"></text></g><g><title>__init__ (queue.py:45) (1 samples, 0.17%)</title><rect x="279" y="180" width="2" height="15" fill="rgb(246,72,40)"/><text x="282.00" y="190.50"></text></g><g><title>__init__ (threading.py:219) (1 samples, 0.17%)</title><rect x="279" y="196" width="2" height="15" fill="rgb(245,159,30)"/><text x="282.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (3 samples, 0.52%)</title><rect x="276" y="164" width="7" height="15" fill="rgb(228,19,17)"/><text x="279.00" y="174.50"></text></g><g><title>__init__ (queue.py:49) (1 samples, 0.17%)</title><rect x="281" y="180" width="2" height="15" fill="rgb(232,14,11)"/><text x="284.00" y="190.50"></text></g><g><title>__init__ (threading.py:236) (1 samples, 0.17%)</title><rect x="281" y="196" width="2" height="15" fill="rgb(252,69,29)"/><text x="284.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (4 samples, 0.69%)</title><rect x="276" y="148" width="9" height="15" fill="rgb(218,13,35)"/><text x="279.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.17%)</title><rect x="283" y="164" width="2" height="15" fill="rgb(244,44,37)"/><text x="286.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py:304) (1 samples, 0.17%)</title><rect x="283" y="180" width="2" height="15" fill="rgb(215,96,17)"/><text x="286.00" y="190.50"></text></g><g><title>parse (distutils/version.py:316) (1 samples, 0.17%)</title><rect x="283" y="196" width="2" height="15" fill="rgb(234,207,43)"/><text x="286.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.35%)</title><rect x="285" y="164" width="4" height="15" fill="rgb(240,146,15)"/><text x="288.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.35%)</title><rect x="285" y="180" width="4" height="15" fill="rgb(212,53,1)"/><text x="288.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.35%)</title><rect x="285" y="196" width="4" height="15" fill="rgb(212,149,19)"/><text x="288.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.35%)</title><rect x="285" y="212" width="4" height="15" fill="rgb(214,82,49)"/><text x="288.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.17%)</title><rect x="287" y="228" width="2" height="15" fill="rgb(213,133,18)"/><text x="290.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="287" y="244" width="2" height="15" fill="rgb(205,160,7)"/><text x="290.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="287" y="260" width="2" height="15" fill="rgb(247,190,52)"/><text x="290.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.17%)</title><rect x="287" y="276" width="2" height="15" fill="rgb(248,157,6)"/><text x="290.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.17%)</title><rect x="287" y="292" width="2" height="15" fill="rgb(212,122,6)"/><text x="290.00" y="302.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.17%)</title><rect x="289" y="196" width="2" height="15" fill="rgb(240,135,20)"/><text x="292.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.17%)</title><rect x="289" y="212" width="2" height="15" fill="rgb(247,45,25)"/><text x="292.00" y="222.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.35%)</title><rect x="291" y="196" width="4" height="15" fill="rgb(223,139,8)"/><text x="294.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.17%)</title><rect x="293" y="212" width="2" height="15" fill="rgb(246,184,18)"/><text x="296.00" y="222.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.17%)</title><rect x="295" y="196" width="2" height="15" fill="rgb(207,29,23)"/><text x="298.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 0.86%)</title><rect x="289" y="180" width="10" height="15" fill="rgb(248,165,36)"/><text x="292.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.17%)</title><rect x="297" y="196" width="2" height="15" fill="rgb(220,221,27)"/><text x="300.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.17%)</title><rect x="309" y="212" width="2" height="15" fill="rgb(254,178,43)"/><text x="312.00" y="222.50"></text></g><g><title>0x7f4a57fea120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="315" y="228" width="2" height="15" fill="rgb(206,16,20)"/><text x="318.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (11 samples, 1.90%)</title><rect x="299" y="180" width="22" height="15" fill="rgb(242,188,16)"/><text x="302.00" y="190.50">d..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (8 samples, 1.38%)</title><rect x="305" y="196" width="16" height="15" fill="rgb(231,67,43)"/><text x="308.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (5 samples, 0.86%)</title><rect x="311" y="212" width="10" height="15" fill="rgb(218,197,24)"/><text x="314.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.35%)</title><rect x="317" y="228" width="4" height="15" fill="rgb(208,121,41)"/><text x="320.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.17%)</title><rect x="321" y="180" width="2" height="15" fill="rgb(236,47,48)"/><text x="324.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.35%)</title><rect x="323" y="180" width="4" height="15" fill="rgb(238,154,49)"/><text x="326.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (5 samples, 0.86%)</title><rect x="336" y="212" width="10" height="15" fill="rgb(242,29,13)"/><text x="339.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.17%)</title><rect x="346" y="212" width="2" height="15" fill="rgb(232,4,43)"/><text x="349.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (10 samples, 1.73%)</title><rect x="329" y="196" width="21" height="15" fill="rgb(254,189,49)"/><text x="332.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="348" y="212" width="2" height="15" fill="rgb(230,66,6)"/><text x="351.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.17%)</title><rect x="352" y="228" width="2" height="15" fill="rgb(208,104,31)"/><text x="355.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (6 samples, 1.04%)</title><rect x="350" y="212" width="12" height="15" fill="rgb(236,12,23)"/><text x="353.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (4 samples, 0.69%)</title><rect x="354" y="228" width="8" height="15" fill="rgb(240,145,2)"/><text x="357.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.17%)</title><rect x="360" y="244" width="2" height="15" fill="rgb(224,119,32)"/><text x="363.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (18 samples, 3.11%)</title><rect x="327" y="180" width="37" height="15" fill="rgb(254,80,42)"/><text x="330.00" y="190.50">dis..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (7 samples, 1.21%)</title><rect x="350" y="196" width="14" height="15" fill="rgb(245,85,37)"/><text x="353.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.17%)</title><rect x="362" y="212" width="2" height="15" fill="rgb(230,225,20)"/><text x="365.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.52%)</title><rect x="364" y="180" width="6" height="15" fill="rgb(221,3,10)"/><text x="367.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.17%)</title><rect x="368" y="196" width="2" height="15" fill="rgb(241,169,39)"/><text x="371.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.17%)</title><rect x="370" y="196" width="2" height="15" fill="rgb(246,228,46)"/><text x="373.00" y="206.50"></text></g><g><title>put (queue.py:133) (1 samples, 0.17%)</title><rect x="372" y="196" width="2" height="15" fill="rgb(237,30,54)"/><text x="375.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.17%)</title><rect x="374" y="196" width="2" height="15" fill="rgb(238,43,8)"/><text x="377.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.17%)</title><rect x="374" y="212" width="2" height="15" fill="rgb(207,96,53)"/><text x="377.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (6 samples, 1.04%)</title><rect x="370" y="180" width="12" height="15" fill="rgb(220,195,28)"/><text x="373.00" y="190.50"></text></g><g><title>put (queue.py:151) (3 samples, 0.52%)</title><rect x="376" y="196" width="6" height="15" fill="rgb(207,19,51)"/><text x="379.00" y="206.50"></text></g><g><title>notify (threading.py:345) (3 samples, 0.52%)</title><rect x="376" y="212" width="6" height="15" fill="rgb(228,177,29)"/><text x="379.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (3 samples, 0.52%)</title><rect x="376" y="228" width="6" height="15" fill="rgb(230,40,26)"/><text x="379.00" y="238.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.17%)</title><rect x="384" y="196" width="3" height="15" fill="rgb(212,118,22)"/><text x="387.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.52%)</title><rect x="382" y="180" width="7" height="15" fill="rgb(253,33,23)"/><text x="385.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.17%)</title><rect x="387" y="196" width="2" height="15" fill="rgb(220,107,0)"/><text x="390.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.17%)</title><rect x="389" y="180" width="2" height="15" fill="rgb(250,39,22)"/><text x="392.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.17%)</title><rect x="391" y="196" width="2" height="15" fill="rgb(246,163,22)"/><text x="394.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.17%)</title><rect x="393" y="196" width="2" height="15" fill="rgb(223,203,27)"/><text x="396.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (2 samples, 0.35%)</title><rect x="395" y="196" width="4" height="15" fill="rgb(226,166,41)"/><text x="398.00" y="206.50"></text></g><g><title>0x7f4a57fdf757 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="397" y="212" width="2" height="15" fill="rgb(236,144,42)"/><text x="400.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.17%)</title><rect x="409" y="260" width="2" height="15" fill="rgb(229,171,48)"/><text x="412.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.17%)</title><rect x="411" y="260" width="2" height="15" fill="rgb(214,84,46)"/><text x="414.00" y="270.50"></text></g><g><title>0x7f4a57fdfe7a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="411" y="276" width="2" height="15" fill="rgb(213,32,25)"/><text x="414.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 0.69%)</title><rect x="407" y="244" width="8" height="15" fill="rgb(246,56,15)"/><text x="410.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.17%)</title><rect x="413" y="260" width="2" height="15" fill="rgb(222,210,17)"/><text x="416.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.17%)</title><rect x="425" y="324" width="2" height="15" fill="rgb(246,37,3)"/><text x="428.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.04%)</title><rect x="427" y="324" width="13" height="15" fill="rgb(211,151,14)"/><text x="430.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.17%)</title><rect x="437" y="340" width="3" height="15" fill="rgb(215,136,43)"/><text x="440.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (9 samples, 1.55%)</title><rect x="425" y="292" width="19" height="15" fill="rgb(237,20,37)"/><text x="428.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.55%)</title><rect x="425" y="308" width="19" height="15" fill="rgb(226,64,54)"/><text x="428.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.35%)</title><rect x="440" y="324" width="4" height="15" fill="rgb(244,59,32)"/><text x="443.00" y="334.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.17%)</title><rect x="444" y="356" width="2" height="15" fill="rgb(230,116,10)"/><text x="447.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.17%)</title><rect x="444" y="372" width="2" height="15" fill="rgb(223,149,15)"/><text x="447.00" y="382.50"></text></g><g><title>0x7f4a319fcd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="444" y="340" width="4" height="15" fill="rgb(244,58,5)"/><text x="447.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.17%)</title><rect x="446" y="356" width="2" height="15" fill="rgb(232,11,48)"/><text x="449.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1035) (1 samples, 0.17%)</title><rect x="446" y="372" width="2" height="15" fill="rgb(230,39,13)"/><text x="449.00" y="382.50"></text></g><g><title>0x7f4a31a0cf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="444" y="324" width="6" height="15" fill="rgb(206,194,30)"/><text x="447.00" y="334.50"></text></g><g><title>0x7f4a319fcd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="448" y="340" width="2" height="15" fill="rgb(210,175,49)"/><text x="451.00" y="350.50"></text></g><g><title>0x7f4a319e9bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="448" y="356" width="2" height="15" fill="rgb(206,64,51)"/><text x="451.00" y="366.50"></text></g><g><title>0x7f4a319f0d60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="448" y="372" width="2" height="15" fill="rgb(249,162,15)"/><text x="451.00" y="382.50"></text></g><g><title>0x7f4a31a1b1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="450" y="356" width="2" height="15" fill="rgb(219,223,37)"/><text x="453.00" y="366.50"></text></g><g><title>0x7f4a319f510c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="452" y="404" width="2" height="15" fill="rgb(248,91,29)"/><text x="455.00" y="414.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.17%)</title><rect x="454" y="436" width="2" height="15" fill="rgb(251,81,9)"/><text x="457.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.17%)</title><rect x="454" y="452" width="2" height="15" fill="rgb(207,143,44)"/><text x="457.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="454" y="468" width="2" height="15" fill="rgb(222,102,47)"/><text x="457.00" y="478.50"></text></g><g><title>0x7f4a319ffd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="452" y="372" width="6" height="15" fill="rgb(238,98,36)"/><text x="455.00" y="382.50"></text></g><g><title>0x7f4a319ff666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="452" y="388" width="6" height="15" fill="rgb(238,197,32)"/><text x="455.00" y="398.50"></text></g><g><title>0x7f4a319f52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="454" y="404" width="4" height="15" fill="rgb(227,227,11)"/><text x="457.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.35%)</title><rect x="454" y="420" width="4" height="15" fill="rgb(242,18,13)"/><text x="457.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.17%)</title><rect x="456" y="436" width="2" height="15" fill="rgb(241,144,46)"/><text x="459.00" y="446.50"></text></g><g><title>0x7f4a31a1b2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="452" y="356" width="8" height="15" fill="rgb(237,220,5)"/><text x="455.00" y="366.50"></text></g><g><title>0x7f4a319ffe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="458" y="372" width="2" height="15" fill="rgb(241,200,7)"/><text x="461.00" y="382.50"></text></g><g><title>0x7f4a319f32bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="458" y="388" width="2" height="15" fill="rgb(238,13,18)"/><text x="461.00" y="398.50"></text></g><g><title>0x7f4a319f2dec (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="458" y="404" width="2" height="15" fill="rgb(211,189,34)"/><text x="461.00" y="414.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.17%)</title><rect x="460" y="372" width="2" height="15" fill="rgb(207,66,32)"/><text x="463.00" y="382.50"></text></g><g><title>0x7f4a57fdf757 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="460" y="388" width="2" height="15" fill="rgb(232,72,27)"/><text x="463.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.17%)</title><rect x="462" y="420" width="2" height="15" fill="rgb(232,88,5)"/><text x="465.00" y="430.50"></text></g><g><title>_array_fill_strides (ctors.c:4128) (1 samples, 0.17%)</title><rect x="462" y="436" width="2" height="15" fill="rgb(234,133,47)"/><text x="465.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (2 samples, 0.35%)</title><rect x="464" y="452" width="4" height="15" fill="rgb(217,134,4)"/><text x="467.00" y="462.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="466" y="468" width="2" height="15" fill="rgb(250,208,8)"/><text x="469.00" y="478.50"></text></g><g><title>0x7f4a57fcab12 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="468" y="484" width="2" height="15" fill="rgb(252,135,50)"/><text x="471.00" y="494.50"></text></g><g><title>0x7f4a31a1b592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.04%)</title><rect x="460" y="356" width="12" height="15" fill="rgb(225,78,13)"/><text x="463.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (5 samples, 0.86%)</title><rect x="462" y="372" width="10" height="15" fill="rgb(254,204,18)"/><text x="465.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (5 samples, 0.86%)</title><rect x="462" y="388" width="10" height="15" fill="rgb(222,211,47)"/><text x="465.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (5 samples, 0.86%)</title><rect x="462" y="404" width="10" height="15" fill="rgb(218,127,30)"/><text x="465.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (4 samples, 0.69%)</title><rect x="464" y="420" width="8" height="15" fill="rgb(231,135,36)"/><text x="467.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (4 samples, 0.69%)</title><rect x="464" y="436" width="8" height="15" fill="rgb(226,19,15)"/><text x="467.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.35%)</title><rect x="468" y="452" width="4" height="15" fill="rgb(232,161,42)"/><text x="471.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.35%)</title><rect x="468" y="468" width="4" height="15" fill="rgb(254,46,28)"/><text x="471.00" y="478.50"></text></g><g><title>0x7f4a57fea103 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="470" y="484" width="2" height="15" fill="rgb(249,168,31)"/><text x="473.00" y="494.50"></text></g><g><title>0x7f4a31a1b5d9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(248,131,6)"/><text x="475.00" y="366.50"></text></g><g><title>0x7f4a31a1b6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.04%)</title><rect x="474" y="356" width="12" height="15" fill="rgb(221,113,12)"/><text x="477.00" y="366.50"></text></g><g><title>0x7f4a31a1b6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="486" y="356" width="4" height="15" fill="rgb(238,148,32)"/><text x="489.00" y="366.50"></text></g><g><title>0x7f4a31a1b6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="490" y="356" width="3" height="15" fill="rgb(232,59,16)"/><text x="493.00" y="366.50"></text></g><g><title>0x7f4a31a1b6bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="493" y="356" width="2" height="15" fill="rgb(248,95,3)"/><text x="496.00" y="366.50"></text></g><g><title>0x7f4a31a1b6c2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="495" y="356" width="2" height="15" fill="rgb(240,27,4)"/><text x="498.00" y="366.50"></text></g><g><title>0x7f4a31a1b7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="497" y="356" width="2" height="15" fill="rgb(221,129,13)"/><text x="500.00" y="366.50"></text></g><g><title>0x7f4a31a1b92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="499" y="356" width="2" height="15" fill="rgb(245,215,21)"/><text x="502.00" y="366.50"></text></g><g><title>0x7f4a319f09af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="499" y="372" width="2" height="15" fill="rgb(221,95,42)"/><text x="502.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.17%)</title><rect x="501" y="404" width="2" height="15" fill="rgb(231,194,10)"/><text x="504.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.17%)</title><rect x="501" y="420" width="2" height="15" fill="rgb(234,65,33)"/><text x="504.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (1 samples, 0.17%)</title><rect x="501" y="436" width="2" height="15" fill="rgb(235,36,1)"/><text x="504.00" y="446.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.17%)</title><rect x="501" y="452" width="2" height="15" fill="rgb(223,102,2)"/><text x="504.00" y="462.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="501" y="468" width="2" height="15" fill="rgb(233,3,18)"/><text x="504.00" y="478.50"></text></g><g><title>0x7f4a31a1c405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 4.66%)</title><rect x="450" y="340" width="55" height="15" fill="rgb(208,191,24)"/><text x="453.00" y="350.50">0x7f4..</text></g><g><title>0x7f4a31a1bc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="501" y="356" width="4" height="15" fill="rgb(208,47,19)"/><text x="504.00" y="366.50"></text></g><g><title>0x7f4a319f3529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="501" y="372" width="4" height="15" fill="rgb(209,209,32)"/><text x="504.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.35%)</title><rect x="501" y="388" width="4" height="15" fill="rgb(222,60,2)"/><text x="504.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.17%)</title><rect x="503" y="404" width="2" height="15" fill="rgb(245,64,38)"/><text x="506.00" y="414.50"></text></g><g><title>0x7f4a31a0cfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 4.84%)</title><rect x="450" y="324" width="57" height="15" fill="rgb(237,214,49)"/><text x="453.00" y="334.50">0x7f4a..</text></g><g><title>0x7f4a31a1c540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="505" y="340" width="2" height="15" fill="rgb(229,81,31)"/><text x="508.00" y="350.50"></text></g><g><title>0x7f4a319f12f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="505" y="356" width="2" height="15" fill="rgb(222,41,51)"/><text x="508.00" y="366.50"></text></g><g><title>0x7f4a319f0530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="505" y="372" width="2" height="15" fill="rgb(243,89,16)"/><text x="508.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.17%)</title><rect x="505" y="388" width="2" height="15" fill="rgb(225,136,13)"/><text x="508.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.17%)</title><rect x="507" y="340" width="2" height="15" fill="rgb(233,9,38)"/><text x="510.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.17%)</title><rect x="507" y="356" width="2" height="15" fill="rgb(246,128,50)"/><text x="510.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.17%)</title><rect x="509" y="372" width="2" height="15" fill="rgb(238,197,9)"/><text x="512.00" y="382.50"></text></g><g><title>0x7f4a31a0d05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="507" y="324" width="8" height="15" fill="rgb(214,144,12)"/><text x="510.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.52%)</title><rect x="509" y="340" width="6" height="15" fill="rgb(208,85,39)"/><text x="512.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.52%)</title><rect x="509" y="356" width="6" height="15" fill="rgb(208,145,15)"/><text x="512.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.35%)</title><rect x="511" y="372" width="4" height="15" fill="rgb(216,68,37)"/><text x="514.00" y="382.50"></text></g><g><title>0x7f4a31a0d13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="515" y="324" width="2" height="15" fill="rgb(250,10,35)"/><text x="518.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.17%)</title><rect x="517" y="372" width="2" height="15" fill="rgb(227,98,45)"/><text x="520.00" y="382.50"></text></g><g><title>0x7f4a31a0d14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="517" y="324" width="4" height="15" fill="rgb(205,91,26)"/><text x="520.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.35%)</title><rect x="517" y="340" width="4" height="15" fill="rgb(207,128,13)"/><text x="520.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.35%)</title><rect x="517" y="356" width="4" height="15" fill="rgb(207,157,36)"/><text x="520.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.17%)</title><rect x="519" y="372" width="2" height="15" fill="rgb(214,178,51)"/><text x="522.00" y="382.50"></text></g><g><title>0x7f4a31a0d30c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="521" y="324" width="2" height="15" fill="rgb(219,92,15)"/><text x="524.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.17%)</title><rect x="523" y="340" width="2" height="15" fill="rgb(237,18,37)"/><text x="526.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.17%)</title><rect x="523" y="356" width="2" height="15" fill="rgb(232,127,16)"/><text x="526.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (41 samples, 7.08%)</title><rect x="444" y="292" width="83" height="15" fill="rgb(236,170,33)"/><text x="447.00" y="302.50">predict_p..</text></g><g><title>0x7f4a31a0dd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 7.08%)</title><rect x="444" y="308" width="83" height="15" fill="rgb(254,13,32)"/><text x="447.00" y="318.50">0x7f4a31a..</text></g><g><title>0x7f4a31a0d328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="523" y="324" width="4" height="15" fill="rgb(249,12,50)"/><text x="526.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.17%)</title><rect x="525" y="340" width="2" height="15" fill="rgb(241,146,18)"/><text x="528.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.17%)</title><rect x="525" y="356" width="2" height="15" fill="rgb(227,21,20)"/><text x="528.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.17%)</title><rect x="525" y="372" width="2" height="15" fill="rgb(249,202,30)"/><text x="528.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.17%)</title><rect x="525" y="388" width="2" height="15" fill="rgb(239,85,18)"/><text x="528.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.17%)</title><rect x="525" y="404" width="2" height="15" fill="rgb(208,4,27)"/><text x="528.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.17%)</title><rect x="529" y="324" width="2" height="15" fill="rgb(233,148,24)"/><text x="532.00" y="334.50"></text></g><g><title>0x7f4a571eb7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="529" y="340" width="2" height="15" fill="rgb(251,44,46)"/><text x="532.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.52%)</title><rect x="527" y="292" width="6" height="15" fill="rgb(217,162,42)"/><text x="530.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.35%)</title><rect x="529" y="308" width="4" height="15" fill="rgb(207,157,43)"/><text x="532.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(228,41,23)"/><text x="534.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.17%)</title><rect x="531" y="340" width="2" height="15" fill="rgb(219,20,34)"/><text x="534.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.17%)</title><rect x="541" y="308" width="2" height="15" fill="rgb(231,218,39)"/><text x="544.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:824) (1 samples, 0.17%)</title><rect x="541" y="324" width="2" height="15" fill="rgb(209,98,9)"/><text x="544.00" y="334.50"></text></g><g><title>multi_DECREF (mapping.c:149) (1 samples, 0.17%)</title><rect x="541" y="340" width="2" height="15" fill="rgb(229,52,52)"/><text x="544.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.17%)</title><rect x="548" y="404" width="2" height="15" fill="rgb(254,108,52)"/><text x="551.00" y="414.50"></text></g><g><title>0x7f4a57fdfe50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="550" y="452" width="2" height="15" fill="rgb(251,101,15)"/><text x="553.00" y="462.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.35%)</title><rect x="550" y="436" width="4" height="15" fill="rgb(206,120,47)"/><text x="553.00" y="446.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="552" y="452" width="2" height="15" fill="rgb(218,86,9)"/><text x="555.00" y="462.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (4 samples, 0.69%)</title><rect x="548" y="356" width="8" height="15" fill="rgb(238,68,15)"/><text x="551.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 0.69%)</title><rect x="548" y="372" width="8" height="15" fill="rgb(235,94,50)"/><text x="551.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (4 samples, 0.69%)</title><rect x="548" y="388" width="8" height="15" fill="rgb(229,221,1)"/><text x="551.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.52%)</title><rect x="550" y="404" width="6" height="15" fill="rgb(251,75,40)"/><text x="553.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.52%)</title><rect x="550" y="420" width="6" height="15" fill="rgb(246,168,37)"/><text x="553.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.17%)</title><rect x="554" y="436" width="2" height="15" fill="rgb(216,2,52)"/><text x="557.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.17%)</title><rect x="556" y="372" width="2" height="15" fill="rgb(233,45,46)"/><text x="559.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.17%)</title><rect x="558" y="404" width="2" height="15" fill="rgb(236,52,15)"/><text x="561.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.17%)</title><rect x="558" y="420" width="2" height="15" fill="rgb(221,186,54)"/><text x="561.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.17%)</title><rect x="558" y="436" width="2" height="15" fill="rgb(207,55,0)"/><text x="561.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.17%)</title><rect x="558" y="452" width="2" height="15" fill="rgb(234,47,46)"/><text x="561.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.17%)</title><rect x="558" y="468" width="2" height="15" fill="rgb(214,198,26)"/><text x="561.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.17%)</title><rect x="558" y="484" width="2" height="15" fill="rgb(228,147,23)"/><text x="561.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.17%)</title><rect x="558" y="500" width="2" height="15" fill="rgb(211,55,1)"/><text x="561.00" y="510.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.17%)</title><rect x="558" y="516" width="2" height="15" fill="rgb(209,212,22)"/><text x="561.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="558" y="532" width="2" height="15" fill="rgb(251,85,53)"/><text x="561.00" y="542.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.17%)</title><rect x="560" y="404" width="2" height="15" fill="rgb(213,98,2)"/><text x="563.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.17%)</title><rect x="560" y="420" width="2" height="15" fill="rgb(220,185,40)"/><text x="563.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.17%)</title><rect x="560" y="436" width="2" height="15" fill="rgb(213,172,48)"/><text x="563.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.17%)</title><rect x="560" y="452" width="2" height="15" fill="rgb(222,192,0)"/><text x="563.00" y="462.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="560" y="468" width="2" height="15" fill="rgb(231,1,36)"/><text x="563.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.17%)</title><rect x="562" y="404" width="2" height="15" fill="rgb(220,75,49)"/><text x="565.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.17%)</title><rect x="562" y="420" width="2" height="15" fill="rgb(238,23,31)"/><text x="565.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.17%)</title><rect x="562" y="436" width="2" height="15" fill="rgb(207,209,15)"/><text x="565.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="562" y="452" width="2" height="15" fill="rgb(230,199,18)"/><text x="565.00" y="462.50"></text></g><g><title>0x7f4a57fcab12 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="562" y="468" width="2" height="15" fill="rgb(228,41,0)"/><text x="565.00" y="478.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.35%)</title><rect x="564" y="436" width="4" height="15" fill="rgb(230,91,38)"/><text x="567.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.17%)</title><rect x="568" y="436" width="2" height="15" fill="rgb(227,182,36)"/><text x="571.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.17%)</title><rect x="578" y="452" width="2" height="15" fill="rgb(252,144,26)"/><text x="581.00" y="462.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 0.69%)</title><rect x="580" y="452" width="8" height="15" fill="rgb(221,104,25)"/><text x="583.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (10 samples, 1.73%)</title><rect x="570" y="436" width="20" height="15" fill="rgb(254,62,31)"/><text x="573.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.17%)</title><rect x="588" y="452" width="2" height="15" fill="rgb(232,73,24)"/><text x="591.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.35%)</title><rect x="590" y="436" width="4" height="15" fill="rgb(232,134,7)"/><text x="593.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.17%)</title><rect x="594" y="436" width="2" height="15" fill="rgb(234,82,22)"/><text x="597.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (17 samples, 2.94%)</title><rect x="564" y="404" width="34" height="15" fill="rgb(228,215,37)"/><text x="567.00" y="414.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (17 samples, 2.94%)</title><rect x="564" y="420" width="34" height="15" fill="rgb(243,133,38)"/><text x="567.00" y="430.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.17%)</title><rect x="596" y="436" width="2" height="15" fill="rgb(237,126,46)"/><text x="599.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (33 samples, 5.70%)</title><rect x="533" y="292" width="68" height="15" fill="rgb(232,174,16)"/><text x="536.00" y="302.50">predict..</text></g><g><title>array_sum (methods.c:2215) (28 samples, 4.84%)</title><rect x="543" y="308" width="58" height="15" fill="rgb(217,81,26)"/><text x="546.00" y="318.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 4.84%)</title><rect x="543" y="324" width="58" height="15" fill="rgb(223,165,8)"/><text x="546.00" y="334.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (27 samples, 4.66%)</title><rect x="545" y="340" width="56" height="15" fill="rgb(251,62,6)"/><text x="548.00" y="350.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (22 samples, 3.80%)</title><rect x="556" y="356" width="45" height="15" fill="rgb(251,84,54)"/><text x="559.00" y="366.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (21 samples, 3.63%)</title><rect x="558" y="372" width="43" height="15" fill="rgb(225,2,37)"/><text x="561.00" y="382.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (21 samples, 3.63%)</title><rect x="558" y="388" width="43" height="15" fill="rgb(238,13,35)"/><text x="561.00" y="398.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.17%)</title><rect x="598" y="404" width="3" height="15" fill="rgb(225,10,9)"/><text x="601.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:678) (1 samples, 0.17%)</title><rect x="598" y="420" width="3" height="15" fill="rgb(254,5,42)"/><text x="601.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.17%)</title><rect x="601" y="308" width="2" height="15" fill="rgb(254,48,46)"/><text x="604.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.17%)</title><rect x="601" y="324" width="2" height="15" fill="rgb(247,76,51)"/><text x="604.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2049) (1 samples, 0.17%)</title><rect x="601" y="340" width="2" height="15" fill="rgb(233,66,34)"/><text x="604.00" y="350.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:273) (1 samples, 0.17%)</title><rect x="605" y="324" width="2" height="15" fill="rgb(207,121,18)"/><text x="608.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.35%)</title><rect x="607" y="324" width="4" height="15" fill="rgb(223,42,45)"/><text x="610.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.35%)</title><rect x="607" y="340" width="4" height="15" fill="rgb(231,114,34)"/><text x="610.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.35%)</title><rect x="607" y="356" width="4" height="15" fill="rgb(216,54,40)"/><text x="610.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.35%)</title><rect x="607" y="372" width="4" height="15" fill="rgb(235,1,32)"/><text x="610.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (2 samples, 0.35%)</title><rect x="607" y="388" width="4" height="15" fill="rgb(225,87,23)"/><text x="610.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (2 samples, 0.35%)</title><rect x="607" y="404" width="4" height="15" fill="rgb(237,52,52)"/><text x="610.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:981) (2 samples, 0.35%)</title><rect x="607" y="420" width="4" height="15" fill="rgb(224,218,12)"/><text x="610.00" y="430.50"></text></g><g><title>_mm_cmpeq_pd (emmintrin.h:339) (2 samples, 0.35%)</title><rect x="607" y="436" width="4" height="15" fill="rgb(240,194,3)"/><text x="610.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (6 samples, 1.04%)</title><rect x="601" y="292" width="12" height="15" fill="rgb(243,172,16)"/><text x="604.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 0.86%)</title><rect x="603" y="308" width="10" height="15" fill="rgb(217,12,4)"/><text x="606.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.17%)</title><rect x="611" y="324" width="2" height="15" fill="rgb(242,33,13)"/><text x="614.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="611" y="340" width="2" height="15" fill="rgb(232,55,24)"/><text x="614.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="611" y="356" width="2" height="15" fill="rgb(212,94,17)"/><text x="614.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.17%)</title><rect x="611" y="372" width="2" height="15" fill="rgb(254,31,33)"/><text x="614.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3141) (1 samples, 0.17%)</title><rect x="617" y="324" width="2" height="15" fill="rgb(205,224,22)"/><text x="620.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.17%)</title><rect x="619" y="372" width="2" height="15" fill="rgb(233,155,30)"/><text x="622.00" y="382.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:871) (1 samples, 0.17%)</title><rect x="619" y="388" width="2" height="15" fill="rgb(216,32,10)"/><text x="622.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.35%)</title><rect x="619" y="356" width="4" height="15" fill="rgb(214,9,6)"/><text x="622.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.17%)</title><rect x="621" y="372" width="2" height="15" fill="rgb(234,20,10)"/><text x="624.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.17%)</title><rect x="621" y="388" width="2" height="15" fill="rgb(223,141,20)"/><text x="624.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1111) (1 samples, 0.17%)</title><rect x="621" y="404" width="2" height="15" fill="rgb(220,10,4)"/><text x="624.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.17%)</title><rect x="623" y="372" width="2" height="15" fill="rgb(213,144,42)"/><text x="626.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.17%)</title><rect x="623" y="388" width="2" height="15" fill="rgb(205,31,39)"/><text x="626.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="623" y="404" width="2" height="15" fill="rgb(224,114,5)"/><text x="626.00" y="414.50"></text></g><g><title>0x7f4a57fcab12 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="623" y="420" width="2" height="15" fill="rgb(231,118,50)"/><text x="626.00" y="430.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.17%)</title><rect x="625" y="404" width="2" height="15" fill="rgb(214,167,16)"/><text x="628.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.17%)</title><rect x="627" y="404" width="2" height="15" fill="rgb(232,115,2)"/><text x="630.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:199) (1 samples, 0.17%)</title><rect x="631" y="420" width="2" height="15" fill="rgb(251,128,43)"/><text x="634.00" y="430.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:212) (1 samples, 0.17%)</title><rect x="633" y="420" width="2" height="15" fill="rgb(207,84,15)"/><text x="636.00" y="430.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.17%)</title><rect x="635" y="420" width="2" height="15" fill="rgb(208,36,6)"/><text x="638.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (9 samples, 1.55%)</title><rect x="623" y="356" width="18" height="15" fill="rgb(226,79,14)"/><text x="626.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 1.38%)</title><rect x="625" y="372" width="16" height="15" fill="rgb(214,29,20)"/><text x="628.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (8 samples, 1.38%)</title><rect x="625" y="388" width="16" height="15" fill="rgb(239,214,51)"/><text x="628.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (6 samples, 1.04%)</title><rect x="629" y="404" width="12" height="15" fill="rgb(217,82,5)"/><text x="632.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (2 samples, 0.35%)</title><rect x="637" y="420" width="4" height="15" fill="rgb(229,108,22)"/><text x="640.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (8 samples, 1.38%)</title><rect x="641" y="356" width="17" height="15" fill="rgb(212,70,25)"/><text x="644.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (8 samples, 1.38%)</title><rect x="641" y="372" width="17" height="15" fill="rgb(229,151,25)"/><text x="644.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (8 samples, 1.38%)</title><rect x="641" y="388" width="17" height="15" fill="rgb(214,75,46)"/><text x="644.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (8 samples, 1.38%)</title><rect x="641" y="404" width="17" height="15" fill="rgb(239,199,29)"/><text x="644.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (8 samples, 1.38%)</title><rect x="641" y="420" width="17" height="15" fill="rgb(233,126,51)"/><text x="644.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 3.80%)</title><rect x="617" y="308" width="45" height="15" fill="rgb(226,200,25)"/><text x="620.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 3.63%)</title><rect x="619" y="324" width="43" height="15" fill="rgb(232,193,13)"/><text x="622.00" y="334.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (21 samples, 3.63%)</title><rect x="619" y="340" width="43" height="15" fill="rgb(228,110,11)"/><text x="622.00" y="350.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.35%)</title><rect x="658" y="356" width="4" height="15" fill="rgb(247,21,5)"/><text x="661.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (2 samples, 0.35%)</title><rect x="658" y="372" width="4" height="15" fill="rgb(231,135,48)"/><text x="661.00" y="382.50"></text></g><g><title>0x7f4a57fc9b87 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="660" y="388" width="2" height="15" fill="rgb(226,90,46)"/><text x="663.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (118 samples, 20.38%)</title><rect x="423" y="276" width="241" height="15" fill="rgb(229,75,1)"/><text x="426.00" y="286.50">_accumulate_prediction (sklearn/..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (25 samples, 4.32%)</title><rect x="613" y="292" width="51" height="15" fill="rgb(216,143,53)"/><text x="616.00" y="302.50">predi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.17%)</title><rect x="662" y="308" width="2" height="15" fill="rgb(213,228,22)"/><text x="665.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.17%)</title><rect x="662" y="324" width="2" height="15" fill="rgb(221,185,11)"/><text x="665.00" y="334.50"></text></g><g><title>0x7f4a57fea120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="662" y="340" width="2" height="15" fill="rgb(223,216,39)"/><text x="665.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.17%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(209,7,33)"/><text x="669.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (3 samples, 0.52%)</title><rect x="664" y="276" width="6" height="15" fill="rgb(254,134,22)"/><text x="667.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.35%)</title><rect x="666" y="292" width="4" height="15" fill="rgb(243,175,28)"/><text x="669.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.35%)</title><rect x="666" y="308" width="4" height="15" fill="rgb(253,48,10)"/><text x="669.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.17%)</title><rect x="668" y="324" width="2" height="15" fill="rgb(229,194,37)"/><text x="671.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.17%)</title><rect x="668" y="340" width="2" height="15" fill="rgb(238,113,9)"/><text x="671.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.17%)</title><rect x="668" y="356" width="2" height="15" fill="rgb(243,67,35)"/><text x="671.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.17%)</title><rect x="668" y="372" width="2" height="15" fill="rgb(243,190,32)"/><text x="671.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.17%)</title><rect x="668" y="388" width="2" height="15" fill="rgb(227,71,4)"/><text x="671.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.17%)</title><rect x="668" y="404" width="2" height="15" fill="rgb(205,67,10)"/><text x="671.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.17%)</title><rect x="670" y="276" width="2" height="15" fill="rgb(241,216,17)"/><text x="673.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.17%)</title><rect x="670" y="292" width="2" height="15" fill="rgb(209,217,47)"/><text x="673.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (125 samples, 21.59%)</title><rect x="419" y="260" width="255" height="15" fill="rgb(211,198,29)"/><text x="422.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.17%)</title><rect x="672" y="276" width="2" height="15" fill="rgb(223,50,2)"/><text x="675.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.17%)</title><rect x="672" y="292" width="2" height="15" fill="rgb(212,124,7)"/><text x="675.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.17%)</title><rect x="672" y="308" width="2" height="15" fill="rgb(227,50,21)"/><text x="675.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (135 samples, 23.32%)</title><rect x="401" y="212" width="275" height="15" fill="rgb(238,72,5)"/><text x="404.00" y="222.50">apply_async (joblib/_parallel_backen..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (133 samples, 22.97%)</title><rect x="405" y="228" width="271" height="15" fill="rgb(208,78,47)"/><text x="408.00" y="238.50">__init__ (joblib/_parallel_backends...</text></g><g><title>__call__ (joblib/parallel.py:256) (128 samples, 22.11%)</title><rect x="415" y="244" width="261" height="15" fill="rgb(248,158,21)"/><text x="418.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.17%)</title><rect x="674" y="260" width="2" height="15" fill="rgb(238,88,9)"/><text x="677.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.17%)</title><rect x="674" y="276" width="2" height="15" fill="rgb(218,224,22)"/><text x="677.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.35%)</title><rect x="676" y="228" width="4" height="15" fill="rgb(234,2,35)"/><text x="679.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:335) (1 samples, 0.17%)</title><rect x="680" y="228" width="2" height="15" fill="rgb(238,199,51)"/><text x="683.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (2 samples, 0.35%)</title><rect x="682" y="228" width="4" height="15" fill="rgb(240,149,52)"/><text x="685.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (196 samples, 33.85%)</title><rect x="289" y="164" width="399" height="15" fill="rgb(218,114,30)"/><text x="292.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (146 samples, 25.22%)</title><rect x="391" y="180" width="297" height="15" fill="rgb(245,71,54)"/><text x="394.00" y="190.50">dispatch_one_batch (joblib/parallel.py:..</text></g><g><title>_dispatch (joblib/parallel.py:753) (142 samples, 24.53%)</title><rect x="399" y="196" width="289" height="15" fill="rgb(223,0,43)"/><text x="402.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (6 samples, 1.04%)</title><rect x="676" y="212" width="12" height="15" fill="rgb(230,199,6)"/><text x="679.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.17%)</title><rect x="686" y="228" width="2" height="15" fill="rgb(224,61,21)"/><text x="689.00" y="238.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (199 samples, 34.37%)</title><rect x="285" y="148" width="405" height="15" fill="rgb(245,58,33)"/><text x="288.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.17%)</title><rect x="688" y="164" width="2" height="15" fill="rgb(240,139,28)"/><text x="691.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.17%)</title><rect x="688" y="180" width="2" height="15" fill="rgb(206,187,34)"/><text x="691.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:38) (334 samples, 57.69%)</title><rect x="12" y="52" width="680" height="15" fill="rgb(245,186,30)"/><text x="15.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:37) (334 samples, 57.69%)</title><rect x="12" y="68" width="680" height="15" fill="rgb(207,46,41)"/><text x="15.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29) (331 samples, 57.17%)</title><rect x="18" y="84" width="674" height="15" fill="rgb(230,107,49)"/><text x="21.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:23) (206 samples, 35.58%)</title><rect x="272" y="100" width="420" height="15" fill="rgb(240,29,39)"/><text x="275.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (206 samples, 35.58%)</title><rect x="272" y="116" width="420" height="15" fill="rgb(221,192,6)"/><text x="275.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (206 samples, 35.58%)</title><rect x="272" y="132" width="420" height="15" fill="rgb(227,23,1)"/><text x="275.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:672) (1 samples, 0.17%)</title><rect x="690" y="148" width="2" height="15" fill="rgb(216,29,9)"/><text x="693.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.17%)</title><rect x="690" y="164" width="2" height="15" fill="rgb(218,161,34)"/><text x="693.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.17%)</title><rect x="690" y="180" width="2" height="15" fill="rgb(221,175,3)"/><text x="693.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.17%)</title><rect x="690" y="196" width="2" height="15" fill="rgb(216,51,2)"/><text x="693.00" y="206.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.17%)</title><rect x="690" y="212" width="2" height="15" fill="rgb(217,188,49)"/><text x="693.00" y="222.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:766) (1 samples, 0.17%)</title><rect x="690" y="228" width="2" height="15" fill="rgb(214,227,2)"/><text x="693.00" y="238.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.17%)</title><rect x="690" y="244" width="2" height="15" fill="rgb(208,60,35)"/><text x="693.00" y="254.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.17%)</title><rect x="692" y="244" width="2" height="15" fill="rgb(249,52,4)"/><text x="695.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="692" y="260" width="2" height="15" fill="rgb(242,14,42)"/><text x="695.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="692" y="276" width="2" height="15" fill="rgb(215,165,53)"/><text x="695.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="692" y="292" width="2" height="15" fill="rgb(215,143,19)"/><text x="695.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="692" y="308" width="2" height="15" fill="rgb(234,94,54)"/><text x="695.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="692" y="324" width="2" height="15" fill="rgb(206,64,38)"/><text x="695.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="692" y="340" width="2" height="15" fill="rgb(235,129,13)"/><text x="695.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="692" y="356" width="2" height="15" fill="rgb(242,84,11)"/><text x="695.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.17%)</title><rect x="692" y="372" width="2" height="15" fill="rgb(226,120,41)"/><text x="695.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="692" y="388" width="2" height="15" fill="rgb(205,26,4)"/><text x="695.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="692" y="404" width="2" height="15" fill="rgb(225,74,24)"/><text x="695.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="692" y="420" width="2" height="15" fill="rgb(242,98,50)"/><text x="695.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="692" y="436" width="2" height="15" fill="rgb(231,6,33)"/><text x="695.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="692" y="452" width="2" height="15" fill="rgb(226,218,8)"/><text x="695.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="692" y="468" width="2" height="15" fill="rgb(211,38,54)"/><text x="695.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="692" y="484" width="2" height="15" fill="rgb(227,92,0)"/><text x="695.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.17%)</title><rect x="692" y="500" width="2" height="15" fill="rgb(241,211,32)"/><text x="695.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="692" y="516" width="2" height="15" fill="rgb(245,150,27)"/><text x="695.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="692" y="532" width="2" height="15" fill="rgb(246,229,26)"/><text x="695.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="692" y="548" width="2" height="15" fill="rgb(254,163,2)"/><text x="695.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="692" y="564" width="2" height="15" fill="rgb(209,145,29)"/><text x="695.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="692" y="580" width="2" height="15" fill="rgb(235,50,38)"/><text x="695.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:154) (1 samples, 0.17%)</title><rect x="692" y="596" width="2" height="15" fill="rgb(227,212,6)"/><text x="695.00" y="606.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.17%)</title><rect x="692" y="612" width="2" height="15" fill="rgb(245,159,8)"/><text x="695.00" y="622.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.17%)</title><rect x="692" y="628" width="2" height="15" fill="rgb(238,229,46)"/><text x="695.00" y="638.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.17%)</title><rect x="692" y="644" width="2" height="15" fill="rgb(227,156,5)"/><text x="695.00" y="654.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.17%)</title><rect x="692" y="660" width="2" height="15" fill="rgb(253,223,3)"/><text x="695.00" y="670.50"></text></g><g><title>_compile (sre_compile.py:170) (1 samples, 0.17%)</title><rect x="692" y="676" width="2" height="15" fill="rgb(209,182,14)"/><text x="695.00" y="686.50"></text></g><g><title>0x7f4a580a7d21 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="692" y="692" width="2" height="15" fill="rgb(247,63,8)"/><text x="695.00" y="702.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:1) (2 samples, 0.35%)</title><rect x="692" y="148" width="4" height="15" fill="rgb(232,71,34)"/><text x="695.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="692" y="164" width="4" height="15" fill="rgb(212,77,42)"/><text x="695.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="692" y="180" width="4" height="15" fill="rgb(236,217,41)"/><text x="695.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="692" y="196" width="4" height="15" fill="rgb(205,162,21)"/><text x="695.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="692" y="212" width="4" height="15" fill="rgb(232,140,9)"/><text x="695.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="692" y="228" width="4" height="15" fill="rgb(220,192,51)"/><text x="695.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.17%)</title><rect x="694" y="244" width="2" height="15" fill="rgb(237,149,14)"/><text x="697.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="694" y="260" width="2" height="15" fill="rgb(236,61,30)"/><text x="697.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="694" y="276" width="2" height="15" fill="rgb(217,133,54)"/><text x="697.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="694" y="292" width="2" height="15" fill="rgb(230,36,20)"/><text x="697.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="694" y="308" width="2" height="15" fill="rgb(246,22,31)"/><text x="697.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="694" y="324" width="2" height="15" fill="rgb(247,130,5)"/><text x="697.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:12) (1 samples, 0.17%)</title><rect x="694" y="340" width="2" height="15" fill="rgb(206,196,22)"/><text x="697.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="694" y="356" width="2" height="15" fill="rgb(218,201,25)"/><text x="697.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="694" y="372" width="2" height="15" fill="rgb(229,145,39)"/><text x="697.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="694" y="388" width="2" height="15" fill="rgb(253,15,43)"/><text x="697.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="694" y="404" width="2" height="15" fill="rgb(254,43,48)"/><text x="697.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="694" y="420" width="2" height="15" fill="rgb(213,98,10)"/><text x="697.00" y="430.50"></text></g><g><title>&lt;module&gt; (numpy/testing/_private/utils.py:1764) (1 samples, 0.17%)</title><rect x="694" y="436" width="2" height="15" fill="rgb(217,18,44)"/><text x="697.00" y="446.50"></text></g><g><title>contextmanager (contextlib.py:237) (1 samples, 0.17%)</title><rect x="694" y="452" width="2" height="15" fill="rgb(210,87,23)"/><text x="697.00" y="462.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.17%)</title><rect x="694" y="468" width="2" height="15" fill="rgb(207,199,50)"/><text x="697.00" y="478.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.17%)</title><rect x="696" y="900" width="2" height="15" fill="rgb(226,51,19)"/><text x="699.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.17%)</title><rect x="696" y="916" width="2" height="15" fill="rgb(247,148,42)"/><text x="699.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.17%)</title><rect x="696" y="932" width="2" height="15" fill="rgb(237,151,50)"/><text x="699.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.17%)</title><rect x="696" y="948" width="2" height="15" fill="rgb(211,186,0)"/><text x="699.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.17%)</title><rect x="696" y="964" width="2" height="15" fill="rgb(209,0,48)"/><text x="699.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.17%)</title><rect x="696" y="980" width="2" height="15" fill="rgb(221,161,21)"/><text x="699.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.17%)</title><rect x="696" y="996" width="2" height="15" fill="rgb(253,101,30)"/><text x="699.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.17%)</title><rect x="696" y="1012" width="2" height="15" fill="rgb(244,114,22)"/><text x="699.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.17%)</title><rect x="696" y="1028" width="2" height="15" fill="rgb(238,20,11)"/><text x="699.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.17%)</title><rect x="696" y="1044" width="2" height="15" fill="rgb(205,116,34)"/><text x="699.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.17%)</title><rect x="696" y="1060" width="2" height="15" fill="rgb(253,150,34)"/><text x="699.00" y="1070.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.35%)</title><rect x="696" y="852" width="4" height="15" fill="rgb(223,216,6)"/><text x="699.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.35%)</title><rect x="696" y="868" width="4" height="15" fill="rgb(248,119,3)"/><text x="699.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.35%)</title><rect x="696" y="884" width="4" height="15" fill="rgb(241,221,13)"/><text x="699.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.17%)</title><rect x="698" y="900" width="2" height="15" fill="rgb(227,120,26)"/><text x="701.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.17%)</title><rect x="698" y="916" width="2" height="15" fill="rgb(241,212,9)"/><text x="701.00" y="926.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.17%)</title><rect x="700" y="884" width="2" height="15" fill="rgb(223,206,5)"/><text x="703.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.17%)</title><rect x="700" y="900" width="2" height="15" fill="rgb(251,78,22)"/><text x="703.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.17%)</title><rect x="700" y="916" width="2" height="15" fill="rgb(249,66,53)"/><text x="703.00" y="926.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.17%)</title><rect x="700" y="932" width="2" height="15" fill="rgb(208,0,44)"/><text x="703.00" y="942.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.17%)</title><rect x="702" y="884" width="2" height="15" fill="rgb(237,11,20)"/><text x="705.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.17%)</title><rect x="702" y="900" width="2" height="15" fill="rgb(207,137,32)"/><text x="705.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1413) (1 samples, 0.17%)</title><rect x="702" y="916" width="2" height="15" fill="rgb(233,70,41)"/><text x="705.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.17%)</title><rect x="702" y="932" width="2" height="15" fill="rgb(252,26,52)"/><text x="705.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1487) (1 samples, 0.17%)</title><rect x="702" y="948" width="2" height="15" fill="rgb(212,23,50)"/><text x="705.00" y="958.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py:1547) (1 samples, 0.17%)</title><rect x="702" y="964" width="2" height="15" fill="rgb(222,86,11)"/><text x="705.00" y="974.50"></text></g><g><title>isabs (posixpath.py:68) (1 samples, 0.17%)</title><rect x="702" y="980" width="2" height="15" fill="rgb(222,14,9)"/><text x="705.00" y="990.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="702" y="996" width="2" height="15" fill="rgb(245,214,37)"/><text x="705.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:2) (5 samples, 0.86%)</title><rect x="696" y="148" width="10" height="15" fill="rgb(245,90,50)"/><text x="699.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="164" width="10" height="15" fill="rgb(224,117,37)"/><text x="699.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.86%)</title><rect x="696" y="180" width="10" height="15" fill="rgb(211,127,42)"/><text x="699.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="196" width="10" height="15" fill="rgb(225,33,36)"/><text x="699.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="212" width="10" height="15" fill="rgb(208,104,42)"/><text x="699.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.86%)</title><rect x="696" y="228" width="10" height="15" fill="rgb(207,146,36)"/><text x="699.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.86%)</title><rect x="696" y="244" width="10" height="15" fill="rgb(230,121,7)"/><text x="699.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.86%)</title><rect x="696" y="260" width="10" height="15" fill="rgb(252,220,25)"/><text x="699.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="276" width="10" height="15" fill="rgb(224,16,24)"/><text x="699.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.86%)</title><rect x="696" y="292" width="10" height="15" fill="rgb(207,210,40)"/><text x="699.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="308" width="10" height="15" fill="rgb(226,55,42)"/><text x="699.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.86%)</title><rect x="696" y="324" width="10" height="15" fill="rgb(232,187,34)"/><text x="699.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.86%)</title><rect x="696" y="340" width="10" height="15" fill="rgb(227,74,28)"/><text x="699.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.86%)</title><rect x="696" y="356" width="10" height="15" fill="rgb(214,130,43)"/><text x="699.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="372" width="10" height="15" fill="rgb(228,154,50)"/><text x="699.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.86%)</title><rect x="696" y="388" width="10" height="15" fill="rgb(224,168,22)"/><text x="699.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="404" width="10" height="15" fill="rgb(234,150,23)"/><text x="699.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.86%)</title><rect x="696" y="420" width="10" height="15" fill="rgb(220,125,40)"/><text x="699.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.86%)</title><rect x="696" y="436" width="10" height="15" fill="rgb(238,55,23)"/><text x="699.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.86%)</title><rect x="696" y="452" width="10" height="15" fill="rgb(216,6,48)"/><text x="699.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="468" width="10" height="15" fill="rgb(240,120,13)"/><text x="699.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.86%)</title><rect x="696" y="484" width="10" height="15" fill="rgb(208,32,4)"/><text x="699.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="500" width="10" height="15" fill="rgb(246,177,52)"/><text x="699.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.86%)</title><rect x="696" y="516" width="10" height="15" fill="rgb(235,156,22)"/><text x="699.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.86%)</title><rect x="696" y="532" width="10" height="15" fill="rgb(210,45,26)"/><text x="699.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.86%)</title><rect x="696" y="548" width="10" height="15" fill="rgb(218,199,23)"/><text x="699.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="564" width="10" height="15" fill="rgb(207,190,3)"/><text x="699.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.86%)</title><rect x="696" y="580" width="10" height="15" fill="rgb(223,66,37)"/><text x="699.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="596" width="10" height="15" fill="rgb(232,118,53)"/><text x="699.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.86%)</title><rect x="696" y="612" width="10" height="15" fill="rgb(223,203,5)"/><text x="699.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="628" width="10" height="15" fill="rgb(222,104,26)"/><text x="699.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="644" width="10" height="15" fill="rgb(226,120,23)"/><text x="699.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.86%)</title><rect x="696" y="660" width="10" height="15" fill="rgb(240,208,24)"/><text x="699.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.86%)</title><rect x="696" y="676" width="10" height="15" fill="rgb(206,229,26)"/><text x="699.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.86%)</title><rect x="696" y="692" width="10" height="15" fill="rgb(214,119,24)"/><text x="699.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="708" width="10" height="15" fill="rgb(236,186,48)"/><text x="699.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.86%)</title><rect x="696" y="724" width="10" height="15" fill="rgb(220,206,14)"/><text x="699.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.86%)</title><rect x="696" y="740" width="10" height="15" fill="rgb(245,125,20)"/><text x="699.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.86%)</title><rect x="696" y="756" width="10" height="15" fill="rgb(207,70,1)"/><text x="699.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.86%)</title><rect x="696" y="772" width="10" height="15" fill="rgb(211,179,38)"/><text x="699.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.86%)</title><rect x="696" y="788" width="10" height="15" fill="rgb(242,201,38)"/><text x="699.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.86%)</title><rect x="696" y="804" width="10" height="15" fill="rgb(231,3,9)"/><text x="699.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.86%)</title><rect x="696" y="820" width="10" height="15" fill="rgb(247,142,31)"/><text x="699.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.86%)</title><rect x="696" y="836" width="10" height="15" fill="rgb(216,129,47)"/><text x="699.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.52%)</title><rect x="700" y="852" width="6" height="15" fill="rgb(229,28,41)"/><text x="703.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.52%)</title><rect x="700" y="868" width="6" height="15" fill="rgb(238,143,47)"/><text x="703.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2785) (1 samples, 0.17%)</title><rect x="704" y="884" width="2" height="15" fill="rgb(240,21,13)"/><text x="707.00" y="894.50"></text></g><g><title>declare_namespace (pkg_resources/__init__.py:2284) (1 samples, 0.17%)</title><rect x="704" y="900" width="2" height="15" fill="rgb(212,54,45)"/><text x="707.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.17%)</title><rect x="704" y="916" width="2" height="15" fill="rgb(219,12,24)"/><text x="707.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.17%)</title><rect x="704" y="932" width="2" height="15" fill="rgb(228,81,54)"/><text x="707.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.17%)</title><rect x="704" y="948" width="2" height="15" fill="rgb(234,154,8)"/><text x="707.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.17%)</title><rect x="704" y="964" width="2" height="15" fill="rgb(219,182,16)"/><text x="707.00" y="974.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.17%)</title><rect x="706" y="772" width="3" height="15" fill="rgb(251,33,5)"/><text x="709.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="706" y="788" width="3" height="15" fill="rgb(247,210,25)"/><text x="709.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="706" y="804" width="3" height="15" fill="rgb(213,59,48)"/><text x="709.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="706" y="820" width="3" height="15" fill="rgb(230,148,1)"/><text x="709.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="706" y="836" width="3" height="15" fill="rgb(206,72,28)"/><text x="709.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="706" y="852" width="3" height="15" fill="rgb(247,65,32)"/><text x="709.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="706" y="868" width="3" height="15" fill="rgb(212,28,42)"/><text x="709.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="706" y="884" width="3" height="15" fill="rgb(230,134,32)"/><text x="709.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.17%)</title><rect x="706" y="900" width="3" height="15" fill="rgb(227,109,43)"/><text x="709.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="706" y="916" width="3" height="15" fill="rgb(232,141,38)"/><text x="709.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="706" y="932" width="3" height="15" fill="rgb(225,148,51)"/><text x="709.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="706" y="948" width="3" height="15" fill="rgb(248,117,13)"/><text x="709.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="706" y="964" width="3" height="15" fill="rgb(205,31,6)"/><text x="709.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="706" y="980" width="3" height="15" fill="rgb(239,91,9)"/><text x="709.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.17%)</title><rect x="706" y="996" width="3" height="15" fill="rgb(207,182,52)"/><text x="709.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="706" y="1012" width="3" height="15" fill="rgb(215,48,3)"/><text x="709.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="706" y="1028" width="3" height="15" fill="rgb(208,18,19)"/><text x="709.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="706" y="1044" width="3" height="15" fill="rgb(218,116,18)"/><text x="709.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="706" y="1060" width="3" height="15" fill="rgb(215,100,5)"/><text x="709.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="706" y="1076" width="3" height="15" fill="rgb(239,38,0)"/><text x="709.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="706" y="1092" width="3" height="15" fill="rgb(248,56,4)"/><text x="709.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="706" y="1108" width="3" height="15" fill="rgb(242,140,25)"/><text x="709.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:403) (1 samples, 0.17%)</title><rect x="706" y="1124" width="3" height="15" fill="rgb(245,193,48)"/><text x="709.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="706" y="1140" width="3" height="15" fill="rgb(227,167,22)"/><text x="709.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="706" y="1156" width="3" height="15" fill="rgb(253,7,0)"/><text x="709.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="706" y="1172" width="3" height="15" fill="rgb(244,227,23)"/><text x="709.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="706" y="1188" width="3" height="15" fill="rgb(215,72,0)"/><text x="709.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="706" y="1204" width="3" height="15" fill="rgb(218,17,26)"/><text x="709.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_linprog.py:25) (1 samples, 0.17%)</title><rect x="706" y="1220" width="3" height="15" fill="rgb(238,120,32)"/><text x="709.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="706" y="1236" width="3" height="15" fill="rgb(227,207,47)"/><text x="709.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.17%)</title><rect x="706" y="1252" width="3" height="15" fill="rgb(206,33,46)"/><text x="709.00" y="1262.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.17%)</title><rect x="706" y="1268" width="3" height="15" fill="rgb(227,204,45)"/><text x="709.00" y="1278.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.17%)</title><rect x="706" y="1284" width="3" height="15" fill="rgb(243,108,17)"/><text x="709.00" y="1294.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.17%)</title><rect x="706" y="1300" width="3" height="15" fill="rgb(233,63,27)"/><text x="709.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.17%)</title><rect x="706" y="1316" width="3" height="15" fill="rgb(211,116,4)"/><text x="709.00" y="1326.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.17%)</title><rect x="706" y="1332" width="3" height="15" fill="rgb(244,186,54)"/><text x="709.00" y="1342.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:4) (2 samples, 0.35%)</title><rect x="706" y="148" width="5" height="15" fill="rgb(212,40,52)"/><text x="709.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="164" width="5" height="15" fill="rgb(241,211,0)"/><text x="709.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.35%)</title><rect x="706" y="180" width="5" height="15" fill="rgb(242,138,49)"/><text x="709.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="196" width="5" height="15" fill="rgb(216,85,25)"/><text x="709.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="212" width="5" height="15" fill="rgb(211,183,7)"/><text x="709.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="706" y="228" width="5" height="15" fill="rgb(205,14,37)"/><text x="709.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="706" y="244" width="5" height="15" fill="rgb(224,54,22)"/><text x="709.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="706" y="260" width="5" height="15" fill="rgb(252,23,13)"/><text x="709.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="276" width="5" height="15" fill="rgb(208,8,14)"/><text x="709.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.35%)</title><rect x="706" y="292" width="5" height="15" fill="rgb(206,124,10)"/><text x="709.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="308" width="5" height="15" fill="rgb(206,83,39)"/><text x="709.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="706" y="324" width="5" height="15" fill="rgb(243,102,32)"/><text x="709.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="706" y="340" width="5" height="15" fill="rgb(239,121,15)"/><text x="709.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="706" y="356" width="5" height="15" fill="rgb(221,14,17)"/><text x="709.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="372" width="5" height="15" fill="rgb(247,110,49)"/><text x="709.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.35%)</title><rect x="706" y="388" width="5" height="15" fill="rgb(250,213,48)"/><text x="709.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="404" width="5" height="15" fill="rgb(210,169,20)"/><text x="709.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="706" y="420" width="5" height="15" fill="rgb(243,162,33)"/><text x="709.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="706" y="436" width="5" height="15" fill="rgb(225,83,24)"/><text x="709.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="706" y="452" width="5" height="15" fill="rgb(215,155,44)"/><text x="709.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="468" width="5" height="15" fill="rgb(246,128,18)"/><text x="709.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.35%)</title><rect x="706" y="484" width="5" height="15" fill="rgb(250,118,10)"/><text x="709.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="500" width="5" height="15" fill="rgb(229,151,6)"/><text x="709.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="706" y="516" width="5" height="15" fill="rgb(231,221,21)"/><text x="709.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="706" y="532" width="5" height="15" fill="rgb(219,172,14)"/><text x="709.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="706" y="548" width="5" height="15" fill="rgb(216,67,36)"/><text x="709.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="564" width="5" height="15" fill="rgb(211,64,2)"/><text x="709.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.35%)</title><rect x="706" y="580" width="5" height="15" fill="rgb(229,170,5)"/><text x="709.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="596" width="5" height="15" fill="rgb(240,62,1)"/><text x="709.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="706" y="612" width="5" height="15" fill="rgb(207,115,21)"/><text x="709.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="706" y="628" width="5" height="15" fill="rgb(232,163,3)"/><text x="709.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="706" y="644" width="5" height="15" fill="rgb(239,59,52)"/><text x="709.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="660" width="5" height="15" fill="rgb(241,10,33)"/><text x="709.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.35%)</title><rect x="706" y="676" width="5" height="15" fill="rgb(212,223,46)"/><text x="709.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="706" y="692" width="5" height="15" fill="rgb(221,48,5)"/><text x="709.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="706" y="708" width="5" height="15" fill="rgb(234,36,19)"/><text x="709.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="706" y="724" width="5" height="15" fill="rgb(247,114,33)"/><text x="709.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="706" y="740" width="5" height="15" fill="rgb(230,71,14)"/><text x="709.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="706" y="756" width="5" height="15" fill="rgb(206,53,14)"/><text x="709.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:1873) (1 samples, 0.17%)</title><rect x="709" y="772" width="2" height="15" fill="rgb(224,86,4)"/><text x="712.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.17%)</title><rect x="709" y="788" width="2" height="15" fill="rgb(236,224,12)"/><text x="712.00" y="798.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:16) (1 samples, 0.17%)</title><rect x="711" y="484" width="2" height="15" fill="rgb(231,25,44)"/><text x="714.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="711" y="500" width="2" height="15" fill="rgb(252,148,9)"/><text x="714.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="711" y="516" width="2" height="15" fill="rgb(239,94,21)"/><text x="714.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="711" y="532" width="2" height="15" fill="rgb(248,101,17)"/><text x="714.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="711" y="548" width="2" height="15" fill="rgb(221,97,39)"/><text x="714.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="711" y="564" width="2" height="15" fill="rgb(223,139,1)"/><text x="714.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/unittestclass.py:13) (1 samples, 0.17%)</title><rect x="711" y="580" width="2" height="15" fill="rgb(210,107,15)"/><text x="714.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="711" y="596" width="2" height="15" fill="rgb(206,203,13)"/><text x="714.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="711" y="612" width="2" height="15" fill="rgb(208,203,34)"/><text x="714.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="711" y="628" width="2" height="15" fill="rgb(254,40,2)"/><text x="714.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.17%)</title><rect x="711" y="644" width="2" height="15" fill="rgb(246,205,3)"/><text x="714.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.17%)</title><rect x="711" y="660" width="2" height="15" fill="rgb(211,211,46)"/><text x="714.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.17%)</title><rect x="711" y="676" width="2" height="15" fill="rgb(227,43,52)"/><text x="714.00" y="686.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.35%)</title><rect x="711" y="340" width="4" height="15" fill="rgb(254,192,54)"/><text x="714.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="711" y="356" width="4" height="15" fill="rgb(254,229,51)"/><text x="714.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.35%)</title><rect x="711" y="372" width="4" height="15" fill="rgb(209,218,8)"/><text x="714.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="711" y="388" width="4" height="15" fill="rgb(229,106,0)"/><text x="714.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="711" y="404" width="4" height="15" fill="rgb(248,196,50)"/><text x="714.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="711" y="420" width="4" height="15" fill="rgb(235,222,23)"/><text x="714.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="711" y="436" width="4" height="15" fill="rgb(233,92,48)"/><text x="714.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="711" y="452" width="4" height="15" fill="rgb(245,164,29)"/><text x="714.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="711" y="468" width="4" height="15" fill="rgb(233,116,49)"/><text x="714.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.17%)</title><rect x="713" y="484" width="2" height="15" fill="rgb(229,215,18)"/><text x="716.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="713" y="500" width="2" height="15" fill="rgb(254,48,35)"/><text x="716.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="713" y="516" width="2" height="15" fill="rgb(243,64,27)"/><text x="716.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="713" y="532" width="2" height="15" fill="rgb(245,146,1)"/><text x="716.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="713" y="548" width="2" height="15" fill="rgb(253,135,24)"/><text x="716.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="713" y="564" width="2" height="15" fill="rgb(252,169,33)"/><text x="716.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.17%)</title><rect x="713" y="580" width="2" height="15" fill="rgb(243,218,2)"/><text x="716.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="713" y="596" width="2" height="15" fill="rgb(248,54,10)"/><text x="716.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="713" y="612" width="2" height="15" fill="rgb(237,51,49)"/><text x="716.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="713" y="628" width="2" height="15" fill="rgb(237,194,47)"/><text x="716.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="713" y="644" width="2" height="15" fill="rgb(229,53,0)"/><text x="716.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="713" y="660" width="2" height="15" fill="rgb(254,66,26)"/><text x="716.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.17%)</title><rect x="713" y="676" width="2" height="15" fill="rgb(216,194,48)"/><text x="716.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="713" y="692" width="2" height="15" fill="rgb(236,203,28)"/><text x="716.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="713" y="708" width="2" height="15" fill="rgb(242,21,52)"/><text x="716.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="713" y="724" width="2" height="15" fill="rgb(212,70,7)"/><text x="716.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="713" y="740" width="2" height="15" fill="rgb(248,220,35)"/><text x="716.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="713" y="756" width="2" height="15" fill="rgb(206,228,45)"/><text x="716.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:151) (1 samples, 0.17%)</title><rect x="713" y="772" width="2" height="15" fill="rgb(220,179,0)"/><text x="716.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.17%)</title><rect x="713" y="788" width="2" height="15" fill="rgb(254,151,3)"/><text x="716.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.17%)</title><rect x="713" y="804" width="2" height="15" fill="rgb(237,94,7)"/><text x="716.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.17%)</title><rect x="713" y="820" width="2" height="15" fill="rgb(225,21,12)"/><text x="716.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.17%)</title><rect x="713" y="836" width="2" height="15" fill="rgb(217,174,36)"/><text x="716.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="713" y="852" width="2" height="15" fill="rgb(208,123,33)"/><text x="716.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.17%)</title><rect x="713" y="868" width="2" height="15" fill="rgb(245,198,21)"/><text x="716.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="713" y="884" width="2" height="15" fill="rgb(226,222,16)"/><text x="716.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:488) (1 samples, 0.17%)</title><rect x="713" y="900" width="2" height="15" fill="rgb(226,51,9)"/><text x="716.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.52%)</title><rect x="711" y="244" width="6" height="15" fill="rgb(221,11,24)"/><text x="714.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.52%)</title><rect x="711" y="260" width="6" height="15" fill="rgb(247,177,13)"/><text x="714.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.52%)</title><rect x="711" y="276" width="6" height="15" fill="rgb(212,196,7)"/><text x="714.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.52%)</title><rect x="711" y="292" width="6" height="15" fill="rgb(249,182,1)"/><text x="714.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.52%)</title><rect x="711" y="308" width="6" height="15" fill="rgb(217,155,4)"/><text x="714.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.52%)</title><rect x="711" y="324" width="6" height="15" fill="rgb(208,89,24)"/><text x="714.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.17%)</title><rect x="715" y="340" width="2" height="15" fill="rgb(221,209,22)"/><text x="718.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="715" y="356" width="2" height="15" fill="rgb(254,81,17)"/><text x="718.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="715" y="372" width="2" height="15" fill="rgb(222,184,43)"/><text x="718.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="715" y="388" width="2" height="15" fill="rgb(214,166,52)"/><text x="718.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="715" y="404" width="2" height="15" fill="rgb(244,182,4)"/><text x="718.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="715" y="420" width="2" height="15" fill="rgb(220,147,10)"/><text x="718.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="715" y="436" width="2" height="15" fill="rgb(209,194,17)"/><text x="718.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="715" y="452" width="2" height="15" fill="rgb(211,87,42)"/><text x="718.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="715" y="468" width="2" height="15" fill="rgb(243,159,47)"/><text x="718.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.17%)</title><rect x="715" y="484" width="2" height="15" fill="rgb(244,28,12)"/><text x="718.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="715" y="500" width="2" height="15" fill="rgb(219,147,16)"/><text x="718.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="715" y="516" width="2" height="15" fill="rgb(239,91,40)"/><text x="718.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="715" y="532" width="2" height="15" fill="rgb(205,5,5)"/><text x="718.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="715" y="548" width="2" height="15" fill="rgb(215,194,7)"/><text x="718.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="715" y="564" width="2" height="15" fill="rgb(209,187,24)"/><text x="718.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:9) (1 samples, 0.17%)</title><rect x="715" y="580" width="2" height="15" fill="rgb(239,212,40)"/><text x="718.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="715" y="596" width="2" height="15" fill="rgb(229,174,21)"/><text x="718.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="715" y="612" width="2" height="15" fill="rgb(227,34,24)"/><text x="718.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.17%)</title><rect x="717" y="340" width="2" height="15" fill="rgb(248,23,19)"/><text x="720.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="717" y="356" width="2" height="15" fill="rgb(252,193,13)"/><text x="720.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="717" y="372" width="2" height="15" fill="rgb(221,63,35)"/><text x="720.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="717" y="388" width="2" height="15" fill="rgb(230,82,53)"/><text x="720.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="717" y="404" width="2" height="15" fill="rgb(245,175,27)"/><text x="720.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="717" y="420" width="2" height="15" fill="rgb(252,162,40)"/><text x="720.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:22) (1 samples, 0.17%)</title><rect x="717" y="436" width="2" height="15" fill="rgb(205,46,4)"/><text x="720.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="717" y="452" width="2" height="15" fill="rgb(235,206,27)"/><text x="720.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="717" y="468" width="2" height="15" fill="rgb(225,158,13)"/><text x="720.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="717" y="484" width="2" height="15" fill="rgb(217,70,14)"/><text x="720.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="717" y="500" width="2" height="15" fill="rgb(226,124,21)"/><text x="720.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="717" y="516" width="2" height="15" fill="rgb(232,116,41)"/><text x="720.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py:49) (1 samples, 0.17%)</title><rect x="717" y="532" width="2" height="15" fill="rgb(210,117,49)"/><text x="720.00" y="542.50"></text></g><g><title>getLogger (logging/__init__.py:1937) (1 samples, 0.17%)</title><rect x="717" y="548" width="2" height="15" fill="rgb(249,72,40)"/><text x="720.00" y="558.50"></text></g><g><title>getLogger (logging/__init__.py:1250) (1 samples, 0.17%)</title><rect x="717" y="564" width="2" height="15" fill="rgb(251,122,53)"/><text x="720.00" y="574.50"></text></g><g><title>_fixupParents (logging/__init__.py:1280) (1 samples, 0.17%)</title><rect x="717" y="580" width="2" height="15" fill="rgb(238,146,0)"/><text x="720.00" y="590.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.17%)</title><rect x="719" y="436" width="2" height="15" fill="rgb(237,30,12)"/><text x="722.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="452" width="2" height="15" fill="rgb(205,155,49)"/><text x="722.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="468" width="2" height="15" fill="rgb(233,115,48)"/><text x="722.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="484" width="2" height="15" fill="rgb(230,117,5)"/><text x="722.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="500" width="2" height="15" fill="rgb(211,2,3)"/><text x="722.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="516" width="2" height="15" fill="rgb(212,79,48)"/><text x="722.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.17%)</title><rect x="719" y="532" width="2" height="15" fill="rgb(226,146,31)"/><text x="722.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="548" width="2" height="15" fill="rgb(229,118,8)"/><text x="722.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="564" width="2" height="15" fill="rgb(218,72,46)"/><text x="722.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="580" width="2" height="15" fill="rgb(229,208,34)"/><text x="722.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="596" width="2" height="15" fill="rgb(233,33,44)"/><text x="722.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="612" width="2" height="15" fill="rgb(215,166,32)"/><text x="722.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.17%)</title><rect x="719" y="628" width="2" height="15" fill="rgb(221,140,8)"/><text x="722.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="644" width="2" height="15" fill="rgb(215,204,38)"/><text x="722.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="660" width="2" height="15" fill="rgb(241,166,53)"/><text x="722.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="676" width="2" height="15" fill="rgb(235,117,6)"/><text x="722.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="692" width="2" height="15" fill="rgb(207,136,16)"/><text x="722.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="708" width="2" height="15" fill="rgb(246,81,47)"/><text x="722.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.17%)</title><rect x="719" y="724" width="2" height="15" fill="rgb(205,27,29)"/><text x="722.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="740" width="2" height="15" fill="rgb(249,149,35)"/><text x="722.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="756" width="2" height="15" fill="rgb(207,228,38)"/><text x="722.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="772" width="2" height="15" fill="rgb(210,30,51)"/><text x="722.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="788" width="2" height="15" fill="rgb(240,204,18)"/><text x="722.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="804" width="2" height="15" fill="rgb(251,97,38)"/><text x="722.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.17%)</title><rect x="719" y="820" width="2" height="15" fill="rgb(227,146,13)"/><text x="722.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="836" width="2" height="15" fill="rgb(212,13,53)"/><text x="722.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="852" width="2" height="15" fill="rgb(207,183,4)"/><text x="722.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="868" width="2" height="15" fill="rgb(223,200,48)"/><text x="722.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="884" width="2" height="15" fill="rgb(220,171,50)"/><text x="722.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="900" width="2" height="15" fill="rgb(222,3,9)"/><text x="722.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.17%)</title><rect x="719" y="916" width="2" height="15" fill="rgb(247,66,5)"/><text x="722.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="932" width="2" height="15" fill="rgb(230,181,23)"/><text x="722.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="948" width="2" height="15" fill="rgb(210,96,47)"/><text x="722.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="964" width="2" height="15" fill="rgb(235,111,21)"/><text x="722.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="980" width="2" height="15" fill="rgb(249,139,38)"/><text x="722.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="996" width="2" height="15" fill="rgb(233,116,39)"/><text x="722.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.17%)</title><rect x="719" y="1012" width="2" height="15" fill="rgb(241,33,46)"/><text x="722.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="1028" width="2" height="15" fill="rgb(209,86,37)"/><text x="722.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="1044" width="2" height="15" fill="rgb(252,49,35)"/><text x="722.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="1060" width="2" height="15" fill="rgb(207,53,33)"/><text x="722.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="1076" width="2" height="15" fill="rgb(234,51,48)"/><text x="722.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="1092" width="2" height="15" fill="rgb(244,130,51)"/><text x="722.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.17%)</title><rect x="719" y="1108" width="2" height="15" fill="rgb(211,0,40)"/><text x="722.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="1124" width="2" height="15" fill="rgb(241,200,20)"/><text x="722.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="1140" width="2" height="15" fill="rgb(240,89,34)"/><text x="722.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="1156" width="2" height="15" fill="rgb(243,3,30)"/><text x="722.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="1172" width="2" height="15" fill="rgb(213,166,54)"/><text x="722.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="1188" width="2" height="15" fill="rgb(212,3,25)"/><text x="722.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.17%)</title><rect x="719" y="1204" width="2" height="15" fill="rgb(239,202,42)"/><text x="722.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="1220" width="2" height="15" fill="rgb(215,120,11)"/><text x="722.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="1236" width="2" height="15" fill="rgb(238,97,41)"/><text x="722.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="1252" width="2" height="15" fill="rgb(236,30,49)"/><text x="722.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="1268" width="2" height="15" fill="rgb(217,23,42)"/><text x="722.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="1284" width="2" height="15" fill="rgb(239,107,48)"/><text x="722.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.17%)</title><rect x="719" y="1300" width="2" height="15" fill="rgb(245,20,35)"/><text x="722.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="719" y="1316" width="2" height="15" fill="rgb(219,169,15)"/><text x="722.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="719" y="1332" width="2" height="15" fill="rgb(253,135,42)"/><text x="722.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="719" y="1348" width="2" height="15" fill="rgb(250,229,45)"/><text x="722.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="719" y="1364" width="2" height="15" fill="rgb(245,114,11)"/><text x="722.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="719" y="1380" width="2" height="15" fill="rgb(239,11,31)"/><text x="722.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:19) (1 samples, 0.17%)</title><rect x="719" y="1396" width="2" height="15" fill="rgb(247,89,40)"/><text x="722.00" y="1406.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:4) (15 samples, 2.59%)</title><rect x="692" y="52" width="31" height="15" fill="rgb(251,221,27)"/><text x="695.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 2.59%)</title><rect x="692" y="68" width="31" height="15" fill="rgb(240,26,50)"/><text x="695.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 2.59%)</title><rect x="692" y="84" width="31" height="15" fill="rgb(205,79,39)"/><text x="695.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 2.59%)</title><rect x="692" y="100" width="31" height="15" fill="rgb(234,55,23)"/><text x="695.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 2.59%)</title><rect x="692" y="116" width="31" height="15" fill="rgb(228,121,50)"/><text x="695.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 2.59%)</title><rect x="692" y="132" width="31" height="15" fill="rgb(243,106,46)"/><text x="695.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:7) (6 samples, 1.04%)</title><rect x="711" y="148" width="12" height="15" fill="rgb(233,10,6)"/><text x="714.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.04%)</title><rect x="711" y="164" width="12" height="15" fill="rgb(253,199,54)"/><text x="714.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.04%)</title><rect x="711" y="180" width="12" height="15" fill="rgb(222,130,19)"/><text x="714.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.04%)</title><rect x="711" y="196" width="12" height="15" fill="rgb(233,52,29)"/><text x="714.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.04%)</title><rect x="711" y="212" width="12" height="15" fill="rgb(223,28,22)"/><text x="714.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.04%)</title><rect x="711" y="228" width="12" height="15" fill="rgb(216,201,23)"/><text x="714.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.52%)</title><rect x="717" y="244" width="6" height="15" fill="rgb(252,10,0)"/><text x="720.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.52%)</title><rect x="717" y="260" width="6" height="15" fill="rgb(236,70,53)"/><text x="720.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.52%)</title><rect x="717" y="276" width="6" height="15" fill="rgb(215,192,10)"/><text x="720.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.52%)</title><rect x="717" y="292" width="6" height="15" fill="rgb(224,98,36)"/><text x="720.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.52%)</title><rect x="717" y="308" width="6" height="15" fill="rgb(241,129,12)"/><text x="720.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.52%)</title><rect x="717" y="324" width="6" height="15" fill="rgb(218,65,33)"/><text x="720.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (2 samples, 0.35%)</title><rect x="719" y="340" width="4" height="15" fill="rgb(245,24,37)"/><text x="722.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="719" y="356" width="4" height="15" fill="rgb(240,84,3)"/><text x="722.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="719" y="372" width="4" height="15" fill="rgb(216,36,11)"/><text x="722.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="719" y="388" width="4" height="15" fill="rgb(243,203,27)"/><text x="722.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="719" y="404" width="4" height="15" fill="rgb(247,15,0)"/><text x="722.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="719" y="420" width="4" height="15" fill="rgb(247,140,39)"/><text x="722.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.17%)</title><rect x="721" y="436" width="2" height="15" fill="rgb(245,101,48)"/><text x="724.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="452" width="2" height="15" fill="rgb(232,133,24)"/><text x="724.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="721" y="468" width="2" height="15" fill="rgb(241,134,49)"/><text x="724.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="484" width="2" height="15" fill="rgb(234,177,24)"/><text x="724.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="500" width="2" height="15" fill="rgb(211,117,32)"/><text x="724.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="516" width="2" height="15" fill="rgb(225,142,42)"/><text x="724.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="532" width="2" height="15" fill="rgb(221,67,19)"/><text x="724.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="548" width="2" height="15" fill="rgb(228,51,35)"/><text x="724.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="564" width="2" height="15" fill="rgb(227,81,30)"/><text x="724.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.17%)</title><rect x="721" y="580" width="2" height="15" fill="rgb(239,224,35)"/><text x="724.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="596" width="2" height="15" fill="rgb(219,188,21)"/><text x="724.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="612" width="2" height="15" fill="rgb(211,215,37)"/><text x="724.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="628" width="2" height="15" fill="rgb(208,23,8)"/><text x="724.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="644" width="2" height="15" fill="rgb(254,79,11)"/><text x="724.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="660" width="2" height="15" fill="rgb(243,50,41)"/><text x="724.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.17%)</title><rect x="721" y="676" width="2" height="15" fill="rgb(219,3,6)"/><text x="724.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="692" width="2" height="15" fill="rgb(244,152,40)"/><text x="724.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="708" width="2" height="15" fill="rgb(228,154,9)"/><text x="724.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="724" width="2" height="15" fill="rgb(205,188,18)"/><text x="724.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="740" width="2" height="15" fill="rgb(232,68,15)"/><text x="724.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="756" width="2" height="15" fill="rgb(229,122,22)"/><text x="724.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.17%)</title><rect x="721" y="772" width="2" height="15" fill="rgb(235,179,0)"/><text x="724.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="788" width="2" height="15" fill="rgb(251,82,9)"/><text x="724.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="804" width="2" height="15" fill="rgb(239,12,29)"/><text x="724.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="820" width="2" height="15" fill="rgb(211,76,39)"/><text x="724.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="836" width="2" height="15" fill="rgb(225,41,49)"/><text x="724.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="852" width="2" height="15" fill="rgb(240,74,45)"/><text x="724.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.17%)</title><rect x="721" y="868" width="2" height="15" fill="rgb(222,211,27)"/><text x="724.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="884" width="2" height="15" fill="rgb(247,146,43)"/><text x="724.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="721" y="900" width="2" height="15" fill="rgb(225,167,49)"/><text x="724.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="916" width="2" height="15" fill="rgb(205,72,8)"/><text x="724.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="932" width="2" height="15" fill="rgb(225,130,43)"/><text x="724.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="948" width="2" height="15" fill="rgb(244,223,19)"/><text x="724.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="964" width="2" height="15" fill="rgb(236,15,42)"/><text x="724.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="980" width="2" height="15" fill="rgb(242,106,1)"/><text x="724.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="996" width="2" height="15" fill="rgb(216,9,27)"/><text x="724.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.17%)</title><rect x="721" y="1012" width="2" height="15" fill="rgb(229,169,7)"/><text x="724.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1028" width="2" height="15" fill="rgb(228,142,33)"/><text x="724.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1044" width="2" height="15" fill="rgb(252,124,8)"/><text x="724.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1060" width="2" height="15" fill="rgb(241,128,7)"/><text x="724.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1076" width="2" height="15" fill="rgb(247,200,16)"/><text x="724.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1092" width="2" height="15" fill="rgb(235,97,52)"/><text x="724.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.17%)</title><rect x="721" y="1108" width="2" height="15" fill="rgb(216,33,22)"/><text x="724.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="721" y="1124" width="2" height="15" fill="rgb(227,28,46)"/><text x="724.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1140" width="2" height="15" fill="rgb(222,149,27)"/><text x="724.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1156" width="2" height="15" fill="rgb(244,187,46)"/><text x="724.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1172" width="2" height="15" fill="rgb(223,48,17)"/><text x="724.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1188" width="2" height="15" fill="rgb(217,104,53)"/><text x="724.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1204" width="2" height="15" fill="rgb(229,94,5)"/><text x="724.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1220" width="2" height="15" fill="rgb(253,78,9)"/><text x="724.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.17%)</title><rect x="721" y="1236" width="2" height="15" fill="rgb(224,86,0)"/><text x="724.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="721" y="1252" width="2" height="15" fill="rgb(210,8,42)"/><text x="724.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1268" width="2" height="15" fill="rgb(209,144,7)"/><text x="724.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1284" width="2" height="15" fill="rgb(244,56,37)"/><text x="724.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1300" width="2" height="15" fill="rgb(252,2,40)"/><text x="724.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1316" width="2" height="15" fill="rgb(232,74,26)"/><text x="724.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1332" width="2" height="15" fill="rgb(232,81,23)"/><text x="724.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1348" width="2" height="15" fill="rgb(236,183,0)"/><text x="724.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.17%)</title><rect x="721" y="1364" width="2" height="15" fill="rgb(216,225,38)"/><text x="724.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1380" width="2" height="15" fill="rgb(231,224,45)"/><text x="724.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1396" width="2" height="15" fill="rgb(235,225,31)"/><text x="724.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1412" width="2" height="15" fill="rgb(230,190,12)"/><text x="724.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1428" width="2" height="15" fill="rgb(236,73,49)"/><text x="724.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1444" width="2" height="15" fill="rgb(208,91,10)"/><text x="724.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.17%)</title><rect x="721" y="1460" width="2" height="15" fill="rgb(218,46,33)"/><text x="724.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1476" width="2" height="15" fill="rgb(211,184,28)"/><text x="724.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1492" width="2" height="15" fill="rgb(216,194,39)"/><text x="724.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1508" width="2" height="15" fill="rgb(209,224,44)"/><text x="724.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1524" width="2" height="15" fill="rgb(232,99,0)"/><text x="724.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1540" width="2" height="15" fill="rgb(215,167,15)"/><text x="724.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.17%)</title><rect x="721" y="1556" width="2" height="15" fill="rgb(244,122,40)"/><text x="724.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.17%)</title><rect x="721" y="1572" width="2" height="15" fill="rgb(215,127,39)"/><text x="724.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1588" width="2" height="15" fill="rgb(230,147,15)"/><text x="724.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1604" width="2" height="15" fill="rgb(206,208,40)"/><text x="724.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1620" width="2" height="15" fill="rgb(218,135,2)"/><text x="724.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1636" width="2" height="15" fill="rgb(226,17,11)"/><text x="724.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1652" width="2" height="15" fill="rgb(247,55,0)"/><text x="724.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.17%)</title><rect x="721" y="1668" width="2" height="15" fill="rgb(239,64,39)"/><text x="724.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1684" width="2" height="15" fill="rgb(207,77,22)"/><text x="724.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1700" width="2" height="15" fill="rgb(227,146,44)"/><text x="724.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1716" width="2" height="15" fill="rgb(239,46,35)"/><text x="724.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1732" width="2" height="15" fill="rgb(240,69,16)"/><text x="724.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1748" width="2" height="15" fill="rgb(245,110,47)"/><text x="724.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.17%)</title><rect x="721" y="1764" width="2" height="15" fill="rgb(247,81,37)"/><text x="724.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="721" y="1780" width="2" height="15" fill="rgb(240,38,42)"/><text x="724.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1796" width="2" height="15" fill="rgb(218,151,23)"/><text x="724.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1812" width="2" height="15" fill="rgb(236,21,5)"/><text x="724.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1828" width="2" height="15" fill="rgb(212,125,16)"/><text x="724.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1844" width="2" height="15" fill="rgb(226,30,48)"/><text x="724.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1860" width="2" height="15" fill="rgb(237,6,39)"/><text x="724.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1876" width="2" height="15" fill="rgb(232,205,18)"/><text x="724.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.17%)</title><rect x="721" y="1892" width="2" height="15" fill="rgb(231,153,10)"/><text x="724.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="1908" width="2" height="15" fill="rgb(250,135,3)"/><text x="724.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="1924" width="2" height="15" fill="rgb(247,205,37)"/><text x="724.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="1940" width="2" height="15" fill="rgb(210,131,12)"/><text x="724.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="1956" width="2" height="15" fill="rgb(218,87,42)"/><text x="724.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="1972" width="2" height="15" fill="rgb(237,191,4)"/><text x="724.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:642) (1 samples, 0.17%)</title><rect x="721" y="1988" width="2" height="15" fill="rgb(252,48,12)"/><text x="724.00" y="1998.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="721" y="2004" width="2" height="15" fill="rgb(234,213,15)"/><text x="724.00" y="2014.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="721" y="2020" width="2" height="15" fill="rgb(207,98,21)"/><text x="724.00" y="2030.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="721" y="2036" width="2" height="15" fill="rgb(219,209,44)"/><text x="724.00" y="2046.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="721" y="2052" width="2" height="15" fill="rgb(235,30,52)"/><text x="724.00" y="2062.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="721" y="2068" width="2" height="15" fill="rgb(222,208,45)"/><text x="724.00" y="2078.50"></text></g><g><title>&lt;module&gt; (markupsafe/__init__.py:28) (1 samples, 0.17%)</title><rect x="721" y="2084" width="2" height="15" fill="rgb(209,2,21)"/><text x="724.00" y="2094.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.17%)</title><rect x="721" y="2100" width="2" height="15" fill="rgb(249,186,43)"/><text x="724.00" y="2110.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.17%)</title><rect x="721" y="2116" width="2" height="15" fill="rgb(250,95,21)"/><text x="724.00" y="2126.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.17%)</title><rect x="721" y="2132" width="2" height="15" fill="rgb(237,173,37)"/><text x="724.00" y="2142.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.17%)</title><rect x="721" y="2148" width="2" height="15" fill="rgb(224,18,51)"/><text x="724.00" y="2158.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="721" y="2164" width="2" height="15" fill="rgb(214,10,4)"/><text x="724.00" y="2174.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.17%)</title><rect x="723" y="116" width="2" height="15" fill="rgb(234,0,16)"/><text x="726.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.17%)</title><rect x="723" y="132" width="2" height="15" fill="rgb(237,222,14)"/><text x="726.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.17%)</title><rect x="723" y="148" width="2" height="15" fill="rgb(238,182,15)"/><text x="726.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.17%)</title><rect x="723" y="164" width="2" height="15" fill="rgb(251,66,5)"/><text x="726.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.17%)</title><rect x="723" y="180" width="2" height="15" fill="rgb(224,68,2)"/><text x="726.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.17%)</title><rect x="723" y="196" width="2" height="15" fill="rgb(237,117,21)"/><text x="726.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.17%)</title><rect x="723" y="212" width="2" height="15" fill="rgb(252,40,41)"/><text x="726.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.17%)</title><rect x="723" y="228" width="2" height="15" fill="rgb(227,224,50)"/><text x="726.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="723" y="244" width="2" height="15" fill="rgb(244,88,29)"/><text x="726.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.17%)</title><rect x="723" y="260" width="2" height="15" fill="rgb(238,206,16)"/><text x="726.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.17%)</title><rect x="723" y="276" width="2" height="15" fill="rgb(209,130,9)"/><text x="726.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.17%)</title><rect x="723" y="292" width="2" height="15" fill="rgb(210,91,18)"/><text x="726.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="725" y="564" width="2" height="15" fill="rgb(215,47,15)"/><text x="728.00" y="574.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="725" y="580" width="2" height="15" fill="rgb(211,19,38)"/><text x="728.00" y="590.50"></text></g><g><title>onnx::AttributeProto::AttributeProto (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="725" y="596" width="2" height="15" fill="rgb(251,23,22)"/><text x="728.00" y="606.50"></text></g><g><title>onnx::AttributeProto::MergeFrom (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="725" y="612" width="2" height="15" fill="rgb(235,199,9)"/><text x="728.00" y="622.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.52%)</title><rect x="723" y="84" width="6" height="15" fill="rgb(235,108,47)"/><text x="726.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.52%)</title><rect x="723" y="100" width="6" height="15" fill="rgb(225,18,9)"/><text x="726.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.35%)</title><rect x="725" y="116" width="4" height="15" fill="rgb(253,221,16)"/><text x="728.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.35%)</title><rect x="725" y="132" width="4" height="15" fill="rgb(223,123,44)"/><text x="728.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.35%)</title><rect x="725" y="148" width="4" height="15" fill="rgb(250,148,36)"/><text x="728.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.35%)</title><rect x="725" y="164" width="4" height="15" fill="rgb(220,37,43)"/><text x="728.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.35%)</title><rect x="725" y="180" width="4" height="15" fill="rgb(248,171,47)"/><text x="728.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.35%)</title><rect x="725" y="196" width="4" height="15" fill="rgb(239,52,25)"/><text x="728.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="725" y="212" width="4" height="15" fill="rgb(229,186,49)"/><text x="728.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="725" y="228" width="4" height="15" fill="rgb(225,15,45)"/><text x="728.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="725" y="244" width="4" height="15" fill="rgb(208,59,40)"/><text x="728.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="725" y="260" width="4" height="15" fill="rgb(221,35,33)"/><text x="728.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="725" y="276" width="4" height="15" fill="rgb(245,203,37)"/><text x="728.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.35%)</title><rect x="725" y="292" width="4" height="15" fill="rgb(208,196,38)"/><text x="728.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="725" y="308" width="4" height="15" fill="rgb(246,109,39)"/><text x="728.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="725" y="324" width="4" height="15" fill="rgb(247,208,49)"/><text x="728.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="725" y="340" width="4" height="15" fill="rgb(224,100,41)"/><text x="728.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="725" y="356" width="4" height="15" fill="rgb(245,141,41)"/><text x="728.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="725" y="372" width="4" height="15" fill="rgb(226,9,48)"/><text x="728.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (2 samples, 0.35%)</title><rect x="725" y="388" width="4" height="15" fill="rgb(219,13,29)"/><text x="728.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="725" y="404" width="4" height="15" fill="rgb(247,36,20)"/><text x="728.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="725" y="420" width="4" height="15" fill="rgb(213,205,33)"/><text x="728.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="725" y="436" width="4" height="15" fill="rgb(225,66,36)"/><text x="728.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="725" y="452" width="4" height="15" fill="rgb(238,42,34)"/><text x="728.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="725" y="468" width="4" height="15" fill="rgb(226,164,17)"/><text x="728.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (2 samples, 0.35%)</title><rect x="725" y="484" width="4" height="15" fill="rgb(242,200,0)"/><text x="728.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (2 samples, 0.35%)</title><rect x="725" y="500" width="4" height="15" fill="rgb(242,73,45)"/><text x="728.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="725" y="516" width="4" height="15" fill="rgb(220,4,13)"/><text x="728.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="725" y="532" width="4" height="15" fill="rgb(237,115,20)"/><text x="728.00" y="542.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="725" y="548" width="4" height="15" fill="rgb(246,127,35)"/><text x="728.00" y="558.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="727" y="564" width="2" height="15" fill="rgb(242,103,18)"/><text x="730.00" y="574.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="727" y="580" width="2" height="15" fill="rgb(214,170,52)"/><text x="730.00" y="590.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="727" y="596" width="2" height="15" fill="rgb(252,229,45)"/><text x="730.00" y="606.50"></text></g><g><title>0x7f4a57fcb00a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="727" y="612" width="2" height="15" fill="rgb(236,63,31)"/><text x="730.00" y="622.50"></text></g><g><title>0x7f4a18c67422 (?) (1 samples, 0.17%)</title><rect x="729" y="244" width="2" height="15" fill="rgb(244,202,13)"/><text x="732.00" y="254.50"></text></g><g><title>0x7f4a18c6d89e (?) (1 samples, 0.17%)</title><rect x="729" y="260" width="2" height="15" fill="rgb(217,209,12)"/><text x="732.00" y="270.50"></text></g><g><title>0x7f4a18c6d74f (?) (1 samples, 0.17%)</title><rect x="729" y="276" width="2" height="15" fill="rgb(244,157,7)"/><text x="732.00" y="286.50"></text></g><g><title>0x7f4a18c73a3a (?) (1 samples, 0.17%)</title><rect x="729" y="292" width="2" height="15" fill="rgb(241,85,30)"/><text x="732.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="729" y="308" width="2" height="15" fill="rgb(242,64,3)"/><text x="732.00" y="318.50"></text></g><g><title>0x7f4a18c6e96e (?) (1 samples, 0.17%)</title><rect x="729" y="324" width="2" height="15" fill="rgb(209,211,0)"/><text x="732.00" y="334.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:513) (1 samples, 0.17%)</title><rect x="731" y="484" width="2" height="15" fill="rgb(236,45,53)"/><text x="734.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.17%)</title><rect x="737" y="500" width="2" height="15" fill="rgb(218,127,49)"/><text x="740.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (4 samples, 0.69%)</title><rect x="733" y="484" width="8" height="15" fill="rgb(228,106,1)"/><text x="736.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.17%)</title><rect x="739" y="500" width="2" height="15" fill="rgb(231,222,20)"/><text x="742.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (1 samples, 0.17%)</title><rect x="741" y="532" width="2" height="15" fill="rgb(249,192,53)"/><text x="744.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (4 samples, 0.69%)</title><rect x="743" y="532" width="8" height="15" fill="rgb(227,121,52)"/><text x="746.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (8 samples, 1.38%)</title><rect x="741" y="484" width="16" height="15" fill="rgb(239,166,41)"/><text x="744.00" y="494.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (8 samples, 1.38%)</title><rect x="741" y="500" width="16" height="15" fill="rgb(237,173,43)"/><text x="744.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (8 samples, 1.38%)</title><rect x="741" y="516" width="16" height="15" fill="rgb(239,138,39)"/><text x="744.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1671) (3 samples, 0.52%)</title><rect x="751" y="532" width="6" height="15" fill="rgb(230,90,54)"/><text x="754.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (2 samples, 0.35%)</title><rect x="757" y="484" width="5" height="15" fill="rgb(207,19,53)"/><text x="760.00" y="494.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h:81) (1 samples, 0.17%)</title><rect x="762" y="500" width="2" height="15" fill="rgb(217,196,45)"/><text x="765.00" y="510.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:18) (18 samples, 3.11%)</title><rect x="729" y="100" width="37" height="15" fill="rgb(232,202,5)"/><text x="732.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (18 samples, 3.11%)</title><rect x="729" y="116" width="37" height="15" fill="rgb(217,13,24)"/><text x="732.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (18 samples, 3.11%)</title><rect x="729" y="132" width="37" height="15" fill="rgb(209,8,34)"/><text x="732.00" y="142.50">&lt;la..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (18 samples, 3.11%)</title><rect x="729" y="148" width="37" height="15" fill="rgb(212,137,48)"/><text x="732.00" y="158.50">run..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (18 samples, 3.11%)</title><rect x="729" y="164" width="37" height="15" fill="rgb(243,98,19)"/><text x="732.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (18 samples, 3.11%)</title><rect x="729" y="180" width="37" height="15" fill="rgb(217,184,6)"/><text x="732.00" y="190.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 3.11%)</title><rect x="729" y="196" width="37" height="15" fill="rgb(254,220,46)"/><text x="732.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 3.11%)</title><rect x="729" y="212" width="37" height="15" fill="rgb(243,34,8)"/><text x="732.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (18 samples, 3.11%)</title><rect x="729" y="228" width="37" height="15" fill="rgb(242,113,29)"/><text x="732.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (17 samples, 2.94%)</title><rect x="731" y="244" width="35" height="15" fill="rgb(205,0,53)"/><text x="734.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (17 samples, 2.94%)</title><rect x="731" y="260" width="35" height="15" fill="rgb(251,57,46)"/><text x="734.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (17 samples, 2.94%)</title><rect x="731" y="276" width="35" height="15" fill="rgb(217,5,22)"/><text x="734.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (17 samples, 2.94%)</title><rect x="731" y="292" width="35" height="15" fill="rgb(226,221,3)"/><text x="734.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (17 samples, 2.94%)</title><rect x="731" y="308" width="35" height="15" fill="rgb(228,225,47)"/><text x="734.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (17 samples, 2.94%)</title><rect x="731" y="324" width="35" height="15" fill="rgb(220,24,27)"/><text x="734.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (17 samples, 2.94%)</title><rect x="731" y="340" width="35" height="15" fill="rgb(214,204,26)"/><text x="734.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (17 samples, 2.94%)</title><rect x="731" y="356" width="35" height="15" fill="rgb(210,1,5)"/><text x="734.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (17 samples, 2.94%)</title><rect x="731" y="372" width="35" height="15" fill="rgb(224,167,38)"/><text x="734.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (17 samples, 2.94%)</title><rect x="731" y="388" width="35" height="15" fill="rgb(225,51,23)"/><text x="734.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (17 samples, 2.94%)</title><rect x="731" y="404" width="35" height="15" fill="rgb(238,80,15)"/><text x="734.00" y="414.50">py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (17 samples, 2.94%)</title><rect x="731" y="420" width="35" height="15" fill="rgb(238,40,13)"/><text x="734.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (17 samples, 2.94%)</title><rect x="731" y="436" width="35" height="15" fill="rgb(247,202,18)"/><text x="734.00" y="446.50">py..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (17 samples, 2.94%)</title><rect x="731" y="452" width="35" height="15" fill="rgb(247,225,17)"/><text x="734.00" y="462.50">GO..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (17 samples, 2.94%)</title><rect x="731" y="468" width="35" height="15" fill="rgb(207,35,47)"/><text x="734.00" y="478.50">Ru..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (2 samples, 0.35%)</title><rect x="762" y="484" width="4" height="15" fill="rgb(206,140,34)"/><text x="765.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:857) (1 samples, 0.17%)</title><rect x="764" y="500" width="2" height="15" fill="rgb(247,1,2)"/><text x="767.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:523) (1 samples, 0.17%)</title><rect x="768" y="484" width="2" height="15" fill="rgb(240,15,15)"/><text x="771.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (2 samples, 0.35%)</title><rect x="770" y="484" width="4" height="15" fill="rgb(228,53,27)"/><text x="773.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (2 samples, 0.35%)</title><rect x="770" y="500" width="4" height="15" fill="rgb(207,171,35)"/><text x="773.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (2 samples, 0.35%)</title><rect x="774" y="484" width="4" height="15" fill="rgb(218,130,12)"/><text x="777.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (11 samples, 1.90%)</title><rect x="778" y="532" width="22" height="15" fill="rgb(222,115,53)"/><text x="781.00" y="542.50">s..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (16 samples, 2.76%)</title><rect x="778" y="484" width="32" height="15" fill="rgb(245,40,41)"/><text x="781.00" y="494.50">Ru..</text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (16 samples, 2.76%)</title><rect x="778" y="500" width="32" height="15" fill="rgb(251,76,25)"/><text x="781.00" y="510.50">st..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (16 samples, 2.76%)</title><rect x="778" y="516" width="32" height="15" fill="rgb(247,172,15)"/><text x="781.00" y="526.50">st..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (5 samples, 0.86%)</title><rect x="800" y="532" width="10" height="15" fill="rgb(232,189,12)"/><text x="803.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (3 samples, 0.52%)</title><rect x="810" y="484" width="7" height="15" fill="rgb(209,63,34)"/><text x="813.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:45) (47 samples, 8.12%)</title><rect x="723" y="52" width="96" height="15" fill="rgb(229,121,28)"/><text x="726.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:44) (47 samples, 8.12%)</title><rect x="723" y="68" width="96" height="15" fill="rgb(220,73,38)"/><text x="726.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29) (44 samples, 7.60%)</title><rect x="729" y="84" width="90" height="15" fill="rgb(230,63,25)"/><text x="732.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:23) (26 samples, 4.49%)</title><rect x="766" y="100" width="53" height="15" fill="rgb(243,79,35)"/><text x="769.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (26 samples, 4.49%)</title><rect x="766" y="116" width="53" height="15" fill="rgb(222,151,10)"/><text x="769.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (26 samples, 4.49%)</title><rect x="766" y="132" width="53" height="15" fill="rgb(210,209,6)"/><text x="769.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (26 samples, 4.49%)</title><rect x="766" y="148" width="53" height="15" fill="rgb(227,84,3)"/><text x="769.00" y="158.50">run (..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (26 samples, 4.49%)</title><rect x="766" y="164" width="53" height="15" fill="rgb(241,185,5)"/><text x="769.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (26 samples, 4.49%)</title><rect x="766" y="180" width="53" height="15" fill="rgb(242,103,41)"/><text x="769.00" y="190.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (26 samples, 4.49%)</title><rect x="766" y="196" width="53" height="15" fill="rgb(240,15,49)"/><text x="769.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (26 samples, 4.49%)</title><rect x="766" y="212" width="53" height="15" fill="rgb(212,21,24)"/><text x="769.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (26 samples, 4.49%)</title><rect x="766" y="228" width="53" height="15" fill="rgb(220,115,20)"/><text x="769.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (26 samples, 4.49%)</title><rect x="766" y="244" width="53" height="15" fill="rgb(239,183,13)"/><text x="769.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (26 samples, 4.49%)</title><rect x="766" y="260" width="53" height="15" fill="rgb(253,88,30)"/><text x="769.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (26 samples, 4.49%)</title><rect x="766" y="276" width="53" height="15" fill="rgb(249,111,3)"/><text x="769.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (26 samples, 4.49%)</title><rect x="766" y="292" width="53" height="15" fill="rgb(216,187,21)"/><text x="769.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (26 samples, 4.49%)</title><rect x="766" y="308" width="53" height="15" fill="rgb(233,188,21)"/><text x="769.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (26 samples, 4.49%)</title><rect x="766" y="324" width="53" height="15" fill="rgb(244,229,54)"/><text x="769.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (26 samples, 4.49%)</title><rect x="766" y="340" width="53" height="15" fill="rgb(240,193,42)"/><text x="769.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (26 samples, 4.49%)</title><rect x="766" y="356" width="53" height="15" fill="rgb(244,189,48)"/><text x="769.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (26 samples, 4.49%)</title><rect x="766" y="372" width="53" height="15" fill="rgb(210,23,25)"/><text x="769.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (26 samples, 4.49%)</title><rect x="766" y="388" width="53" height="15" fill="rgb(246,120,12)"/><text x="769.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (26 samples, 4.49%)</title><rect x="766" y="404" width="53" height="15" fill="rgb(243,135,15)"/><text x="769.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (26 samples, 4.49%)</title><rect x="766" y="420" width="53" height="15" fill="rgb(239,154,29)"/><text x="769.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (26 samples, 4.49%)</title><rect x="766" y="436" width="53" height="15" fill="rgb(226,228,19)"/><text x="769.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (26 samples, 4.49%)</title><rect x="766" y="452" width="53" height="15" fill="rgb(247,159,21)"/><text x="769.00" y="462.50">GOMP_..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (26 samples, 4.49%)</title><rect x="766" y="468" width="53" height="15" fill="rgb(247,94,25)"/><text x="769.00" y="478.50">Runti..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (1 samples, 0.17%)</title><rect x="817" y="484" width="2" height="15" fill="rgb(224,155,16)"/><text x="820.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:857) (1 samples, 0.17%)</title><rect x="817" y="500" width="2" height="15" fill="rgb(251,3,52)"/><text x="820.00" y="510.50"></text></g><g><title>std::_Bit_iterator::operator* (stl_bvector.h:231) (1 samples, 0.17%)</title><rect x="817" y="516" width="2" height="15" fill="rgb(208,129,25)"/><text x="820.00" y="526.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:28) (1 samples, 0.17%)</title><rect x="819" y="84" width="2" height="15" fill="rgb(223,126,46)"/><text x="822.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.17%)</title><rect x="819" y="100" width="2" height="15" fill="rgb(225,96,8)"/><text x="822.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.17%)</title><rect x="819" y="116" width="2" height="15" fill="rgb(213,98,16)"/><text x="822.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.17%)</title><rect x="819" y="132" width="2" height="15" fill="rgb(209,62,39)"/><text x="822.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.17%)</title><rect x="819" y="148" width="2" height="15" fill="rgb(253,2,39)"/><text x="822.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.17%)</title><rect x="819" y="164" width="2" height="15" fill="rgb(219,26,18)"/><text x="822.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.17%)</title><rect x="819" y="180" width="2" height="15" fill="rgb(232,23,11)"/><text x="822.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.17%)</title><rect x="819" y="196" width="2" height="15" fill="rgb(230,176,32)"/><text x="822.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.17%)</title><rect x="819" y="212" width="2" height="15" fill="rgb(212,217,32)"/><text x="822.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.17%)</title><rect x="819" y="228" width="2" height="15" fill="rgb(225,210,41)"/><text x="822.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.17%)</title><rect x="819" y="244" width="2" height="15" fill="rgb(234,17,28)"/><text x="822.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c:971) (1 samples, 0.17%)</title><rect x="819" y="260" width="2" height="15" fill="rgb(206,44,46)"/><text x="822.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.17%)</title><rect x="819" y="276" width="2" height="15" fill="rgb(231,15,36)"/><text x="822.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.17%)</title><rect x="819" y="292" width="2" height="15" fill="rgb(233,146,13)"/><text x="822.00" y="302.50"></text></g><g><title>0x7f4a13603ff9 (?) (1 samples, 0.17%)</title><rect x="821" y="212" width="2" height="15" fill="rgb(248,32,14)"/><text x="824.00" y="222.50"></text></g><g><title>0x7f4a135feef6 (?) (1 samples, 0.17%)</title><rect x="821" y="228" width="2" height="15" fill="rgb(250,88,41)"/><text x="824.00" y="238.50"></text></g><g><title>0x7f4a135f3962 (?) (1 samples, 0.17%)</title><rect x="821" y="244" width="2" height="15" fill="rgb(224,174,7)"/><text x="824.00" y="254.50"></text></g><g><title>0x7f4a136277a7 (?) (1 samples, 0.17%)</title><rect x="821" y="260" width="2" height="15" fill="rgb(232,16,13)"/><text x="824.00" y="270.50"></text></g><g><title>0x7f4a13627379 (?) (1 samples, 0.17%)</title><rect x="821" y="276" width="2" height="15" fill="rgb(218,182,51)"/><text x="824.00" y="286.50"></text></g><g><title>0x7f4a13a858b8 (?) (1 samples, 0.17%)</title><rect x="821" y="292" width="2" height="15" fill="rgb(224,226,47)"/><text x="824.00" y="302.50"></text></g><g><title>0x7f4a13a83c7f (?) (1 samples, 0.17%)</title><rect x="821" y="308" width="2" height="15" fill="rgb(209,113,19)"/><text x="824.00" y="318.50"></text></g><g><title>0x7f4a13a9699c (?) (1 samples, 0.17%)</title><rect x="821" y="324" width="2" height="15" fill="rgb(205,41,4)"/><text x="824.00" y="334.50"></text></g><g><title>0x7f4a137b419e (?) (1 samples, 0.17%)</title><rect x="821" y="340" width="2" height="15" fill="rgb(221,143,29)"/><text x="824.00" y="350.50"></text></g><g><title>0x7f4a137b11d7 (?) (1 samples, 0.17%)</title><rect x="821" y="356" width="2" height="15" fill="rgb(233,173,54)"/><text x="824.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (58 samples, 10.02%)</title><rect x="823" y="340" width="118" height="15" fill="rgb(234,30,2)"/><text x="826.00" y="350.50">onnxruntime::m..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 9.84%)</title><rect x="825" y="356" width="116" height="15" fill="rgb(210,78,4)"/><text x="828.00" y="366.50">onnxruntime::m..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="939" y="372" width="2" height="15" fill="rgb(242,64,32)"/><text x="942.00" y="382.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:18) (60 samples, 10.36%)</title><rect x="821" y="100" width="122" height="15" fill="rgb(214,87,20)"/><text x="824.00" y="110.50">profile (bench_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (60 samples, 10.36%)</title><rect x="821" y="116" width="122" height="15" fill="rgb(205,134,7)"/><text x="824.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (60 samples, 10.36%)</title><rect x="821" y="132" width="122" height="15" fill="rgb(239,117,24)"/><text x="824.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (60 samples, 10.36%)</title><rect x="821" y="148" width="122" height="15" fill="rgb(245,228,25)"/><text x="824.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (60 samples, 10.36%)</title><rect x="821" y="164" width="122" height="15" fill="rgb(206,106,23)"/><text x="824.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (60 samples, 10.36%)</title><rect x="821" y="180" width="122" height="15" fill="rgb(206,149,0)"/><text x="824.00" y="190.50">run (mlprodict/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (60 samples, 10.36%)</title><rect x="821" y="196" width="122" height="15" fill="rgb(210,41,41)"/><text x="824.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="212" width="120" height="15" fill="rgb(237,158,23)"/><text x="826.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="228" width="120" height="15" fill="rgb(233,57,2)"/><text x="826.00" y="238.50">void pybind11:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="244" width="120" height="15" fill="rgb(252,131,9)"/><text x="826.00" y="254.50">onnxruntime::p..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="260" width="120" height="15" fill="rgb(231,159,14)"/><text x="826.00" y="270.50">onnxruntime::I..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="276" width="120" height="15" fill="rgb(210,22,3)"/><text x="826.00" y="286.50">onnxruntime::I..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="292" width="120" height="15" fill="rgb(214,63,28)"/><text x="826.00" y="302.50">onnxruntime::u..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="308" width="120" height="15" fill="rgb(239,142,54)"/><text x="826.00" y="318.50">onnxruntime::u..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (59 samples, 10.19%)</title><rect x="823" y="324" width="120" height="15" fill="rgb(252,86,46)"/><text x="826.00" y="334.50">onnxruntime::S..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="941" y="340" width="2" height="15" fill="rgb(214,221,44)"/><text x="944.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="941" y="356" width="2" height="15" fill="rgb(231,29,18)"/><text x="944.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="941" y="372" width="2" height="15" fill="rgb(215,143,0)"/><text x="944.00" y="382.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (114 samples, 19.69%)</title><rect x="947" y="340" width="232" height="15" fill="rgb(232,172,35)"/><text x="950.00" y="350.50">onnxruntime::ml::TreeEnsembleC..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (114 samples, 19.69%)</title><rect x="947" y="356" width="232" height="15" fill="rgb(220,65,36)"/><text x="950.00" y="366.50">onnxruntime::ml::TreeEnsembleC..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.86%)</title><rect x="947" y="260" width="234" height="15" fill="rgb(235,166,12)"/><text x="950.00" y="270.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.86%)</title><rect x="947" y="276" width="234" height="15" fill="rgb(236,195,35)"/><text x="950.00" y="286.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.86%)</title><rect x="947" y="292" width="234" height="15" fill="rgb(225,194,26)"/><text x="950.00" y="302.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.86%)</title><rect x="947" y="308" width="234" height="15" fill="rgb(248,100,27)"/><text x="950.00" y="318.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.86%)</title><rect x="947" y="324" width="234" height="15" fill="rgb(224,167,45)"/><text x="950.00" y="334.50">onnxruntime::SequentialExecutor..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1179" y="340" width="2" height="15" fill="rgb(239,188,41)"/><text x="1182.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="1179" y="356" width="2" height="15" fill="rgb(246,17,13)"/><text x="1182.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1179" y="372" width="2" height="15" fill="rgb(217,53,48)"/><text x="1182.00" y="382.50"></text></g><g><title>0x7f4a57fcb368 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1179" y="388" width="2" height="15" fill="rgb(243,145,23)"/><text x="1182.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="1181" y="260" width="4" height="15" fill="rgb(229,120,0)"/><text x="1184.00" y="270.50"></text></g><g><title>0x7f4a57fc992c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1185" y="292" width="2" height="15" fill="rgb(251,190,40)"/><text x="1188.00" y="302.50"></text></g><g><title>all (579 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(230,27,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:52) (182 samples, 31.43%)</title><rect x="819" y="52" width="371" height="15" fill="rgb(208,218,19)"/><text x="822.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_c..</text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:51) (182 samples, 31.43%)</title><rect x="819" y="68" width="371" height="15" fill="rgb(252,61,46)"/><text x="822.00" y="78.50">profile_ort (bench_RandomForestClassifier_default_..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29) (181 samples, 31.26%)</title><rect x="821" y="84" width="369" height="15" fill="rgb(248,89,3)"/><text x="824.00" y="94.50">setup_profile (bench_RandomForestClassifier_defaul..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:23) (121 samples, 20.90%)</title><rect x="943" y="100" width="247" height="15" fill="rgb(220,77,14)"/><text x="946.00" y="110.50">profile (bench_RandomForestClass..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (119 samples, 20.55%)</title><rect x="947" y="116" width="243" height="15" fill="rgb(242,150,4)"/><text x="950.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (119 samples, 20.55%)</title><rect x="947" y="132" width="243" height="15" fill="rgb(244,16,22)"/><text x="950.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (119 samples, 20.55%)</title><rect x="947" y="148" width="243" height="15" fill="rgb(209,125,11)"/><text x="950.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (119 samples, 20.55%)</title><rect x="947" y="164" width="243" height="15" fill="rgb(222,72,39)"/><text x="950.00" y="174.50">_run_whole_runtime (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (119 samples, 20.55%)</title><rect x="947" y="180" width="243" height="15" fill="rgb(223,160,12)"/><text x="950.00" y="190.50">run (mlprodict/onnxrt/ops_whole/..</text></g><g><title>run (onnxruntime/capi/session.py:136) (119 samples, 20.55%)</title><rect x="947" y="196" width="243" height="15" fill="rgb(241,166,32)"/><text x="950.00" y="206.50">run (onnxruntime/capi/session.py..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 20.55%)</title><rect x="947" y="212" width="243" height="15" fill="rgb(207,119,30)"/><text x="950.00" y="222.50">pybind11::cpp_function::dispatch..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 20.55%)</title><rect x="947" y="228" width="243" height="15" fill="rgb(244,184,8)"/><text x="950.00" y="238.50">void pybind11::cpp_function::ini..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 20.55%)</title><rect x="947" y="244" width="243" height="15" fill="rgb(240,106,17)"/><text x="950.00" y="254.50">onnxruntime::python::addObjectMe..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(221,198,33)"/><text x="1188.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(239,74,6)"/><text x="1188.00" y="286.50"></text></g><g><title>0x7f4a57fc9d07 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(210,193,38)"/><text x="1190.00" y="302.50"></text></g></g></svg>